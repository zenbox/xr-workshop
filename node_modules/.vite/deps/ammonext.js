import {
  require_fs,
  require_path
} from "./chunk-4VLC6CFT.js";
import {
  __commonJS,
  __require
} from "./chunk-7FP5O474.js";

// node_modules/ammonext/builds/ammo.js
var require_ammo = __commonJS({
  "node_modules/ammonext/builds/ammo.js"(exports, module) {
    var AmmoLib = function(AmmoLib2) {
      AmmoLib2 = AmmoLib2 || {};
      var Module;
      if (!Module)
        Module = (typeof AmmoLib2 !== "undefined" ? AmmoLib2 : null) || {};
      var moduleOverrides = {};
      for (var key in Module) {
        if (Module.hasOwnProperty(key)) {
          moduleOverrides[key] = Module[key];
        }
      }
      var ENVIRONMENT_IS_WEB = false;
      var ENVIRONMENT_IS_WORKER = false;
      var ENVIRONMENT_IS_NODE = false;
      var ENVIRONMENT_IS_SHELL = false;
      if (Module["ENVIRONMENT"]) {
        if (Module["ENVIRONMENT"] === "WEB") {
          ENVIRONMENT_IS_WEB = true;
        } else if (Module["ENVIRONMENT"] === "WORKER") {
          ENVIRONMENT_IS_WORKER = true;
        } else if (Module["ENVIRONMENT"] === "NODE") {
          ENVIRONMENT_IS_NODE = true;
        } else if (Module["ENVIRONMENT"] === "SHELL") {
          ENVIRONMENT_IS_SHELL = true;
        } else {
          throw new Error("The provided Module['ENVIRONMENT'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.");
        }
      } else {
        ENVIRONMENT_IS_WEB = typeof window === "object";
        ENVIRONMENT_IS_WORKER = typeof importScripts === "function";
        ENVIRONMENT_IS_NODE = typeof process === "object" && typeof __require === "function" && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
      }
      if (ENVIRONMENT_IS_NODE) {
        if (!Module["print"])
          Module["print"] = console.log;
        if (!Module["printErr"])
          Module["printErr"] = console.warn;
        var nodeFS;
        var nodePath;
        Module["read"] = function read2(filename, binary) {
          if (!nodeFS)
            nodeFS = require_fs();
          if (!nodePath)
            nodePath = require_path();
          filename = nodePath["normalize"](filename);
          var ret = nodeFS["readFileSync"](filename);
          return binary ? ret : ret.toString();
        };
        Module["readBinary"] = function readBinary(filename) {
          var ret = Module["read"](filename, true);
          if (!ret.buffer) {
            ret = new Uint8Array(ret);
          }
          assert(ret.buffer);
          return ret;
        };
        Module["load"] = function load(f) {
          globalEval(read(f));
        };
        if (!Module["thisProgram"]) {
          if (process["argv"].length > 1) {
            Module["thisProgram"] = process["argv"][1].replace(/\\/g, "/");
          } else {
            Module["thisProgram"] = "unknown-program";
          }
        }
        Module["arguments"] = process["argv"].slice(2);
        if (typeof module !== "undefined") {
          module["exports"] = Module;
        }
        process["on"]("uncaughtException", function(ex) {
          if (!(ex instanceof ExitStatus)) {
            throw ex;
          }
        });
        Module["inspect"] = function() {
          return "[Emscripten Module object]";
        };
      } else if (ENVIRONMENT_IS_SHELL) {
        if (!Module["print"])
          Module["print"] = print;
        if (typeof printErr != "undefined")
          Module["printErr"] = printErr;
        if (typeof read != "undefined") {
          Module["read"] = read;
        } else {
          Module["read"] = function read2() {
            throw "no read() available";
          };
        }
        Module["readBinary"] = function readBinary(f) {
          if (typeof readbuffer === "function") {
            return new Uint8Array(readbuffer(f));
          }
          var data = read(f, "binary");
          assert(typeof data === "object");
          return data;
        };
        if (typeof scriptArgs != "undefined") {
          Module["arguments"] = scriptArgs;
        } else if (typeof arguments != "undefined") {
          Module["arguments"] = arguments;
        }
      } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
        Module["read"] = function read2(url) {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, false);
          xhr.send(null);
          return xhr.responseText;
        };
        Module["readAsync"] = function readAsync(url, onload, onerror) {
          var xhr = new XMLHttpRequest();
          xhr.open("GET", url, true);
          xhr.responseType = "arraybuffer";
          xhr.onload = function xhr_onload() {
            if (xhr.status == 200 || xhr.status == 0 && xhr.response) {
              onload(xhr.response);
            } else {
              onerror();
            }
          };
          xhr.onerror = onerror;
          xhr.send(null);
        };
        if (typeof arguments != "undefined") {
          Module["arguments"] = arguments;
        }
        if (typeof console !== "undefined") {
          if (!Module["print"])
            Module["print"] = function print2(x) {
              console.log(x);
            };
          if (!Module["printErr"])
            Module["printErr"] = function printErr2(x) {
              console.warn(x);
            };
        } else {
          var TRY_USE_DUMP = false;
          if (!Module["print"])
            Module["print"] = TRY_USE_DUMP && typeof dump !== "undefined" ? function(x) {
              dump(x);
            } : function(x) {
            };
        }
        if (ENVIRONMENT_IS_WORKER) {
          Module["load"] = importScripts;
        }
        if (typeof Module["setWindowTitle"] === "undefined") {
          Module["setWindowTitle"] = function(title) {
            document.title = title;
          };
        }
      } else {
        throw "Unknown runtime environment. Where are we?";
      }
      function globalEval(x) {
        abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval");
      }
      if (!Module["load"] && Module["read"]) {
        Module["load"] = function load(f) {
          globalEval(Module["read"](f));
        };
      }
      if (!Module["print"]) {
        Module["print"] = function() {
        };
      }
      if (!Module["printErr"]) {
        Module["printErr"] = Module["print"];
      }
      if (!Module["arguments"]) {
        Module["arguments"] = [];
      }
      if (!Module["thisProgram"]) {
        Module["thisProgram"] = "./this.program";
      }
      Module.print = Module["print"];
      Module.printErr = Module["printErr"];
      Module["preRun"] = [];
      Module["postRun"] = [];
      for (var key in moduleOverrides) {
        if (moduleOverrides.hasOwnProperty(key)) {
          Module[key] = moduleOverrides[key];
        }
      }
      moduleOverrides = void 0;
      var Runtime = { setTempRet0: function(value) {
        tempRet0 = value;
      }, getTempRet0: function() {
        return tempRet0;
      }, stackSave: function() {
        return STACKTOP;
      }, stackRestore: function(stackTop) {
        STACKTOP = stackTop;
      }, getNativeTypeSize: function(type) {
        switch (type) {
          case "i1":
          case "i8":
            return 1;
          case "i16":
            return 2;
          case "i32":
            return 4;
          case "i64":
            return 8;
          case "float":
            return 4;
          case "double":
            return 8;
          default: {
            if (type[type.length - 1] === "*") {
              return Runtime.QUANTUM_SIZE;
            } else if (type[0] === "i") {
              var bits = parseInt(type.substr(1));
              assert(bits % 8 === 0);
              return bits / 8;
            } else {
              return 0;
            }
          }
        }
      }, getNativeFieldSize: function(type) {
        return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
      }, STACK_ALIGN: 16, prepVararg: function(ptr, type) {
        if (type === "double" || type === "i64") {
          if (ptr & 7) {
            assert((ptr & 7) === 4);
            ptr += 4;
          }
        } else {
          assert((ptr & 3) === 0);
        }
        return ptr;
      }, getAlignSize: function(type, size, vararg) {
        if (!vararg && (type == "i64" || type == "double"))
          return 8;
        if (!type)
          return Math.min(size, 8);
        return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
      }, dynCall: function(sig, ptr, args) {
        if (args && args.length) {
          return Module["dynCall_" + sig].apply(null, [ptr].concat(args));
        } else {
          return Module["dynCall_" + sig].call(null, ptr);
        }
      }, functionPointers: [], addFunction: function(func) {
        for (var i = 0; i < Runtime.functionPointers.length; i++) {
          if (!Runtime.functionPointers[i]) {
            Runtime.functionPointers[i] = func;
            return 2 * (1 + i);
          }
        }
        throw "Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";
      }, removeFunction: function(index) {
        Runtime.functionPointers[(index - 2) / 2] = null;
      }, warnOnce: function(text) {
        if (!Runtime.warnOnce.shown)
          Runtime.warnOnce.shown = {};
        if (!Runtime.warnOnce.shown[text]) {
          Runtime.warnOnce.shown[text] = 1;
          Module.printErr(text);
        }
      }, funcWrappers: {}, getFuncWrapper: function(func, sig) {
        assert(sig);
        if (!Runtime.funcWrappers[sig]) {
          Runtime.funcWrappers[sig] = {};
        }
        var sigCache = Runtime.funcWrappers[sig];
        if (!sigCache[func]) {
          if (sig.length === 1) {
            sigCache[func] = function dynCall_wrapper() {
              return Runtime.dynCall(sig, func);
            };
          } else if (sig.length === 2) {
            sigCache[func] = function dynCall_wrapper(arg) {
              return Runtime.dynCall(sig, func, [arg]);
            };
          } else {
            sigCache[func] = function dynCall_wrapper() {
              return Runtime.dynCall(sig, func, Array.prototype.slice.call(arguments));
            };
          }
        }
        return sigCache[func];
      }, getCompilerSetting: function(name) {
        throw "You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";
      }, stackAlloc: function(size) {
        var ret = STACKTOP;
        STACKTOP = STACKTOP + size | 0;
        STACKTOP = STACKTOP + 15 & -16;
        return ret;
      }, staticAlloc: function(size) {
        var ret = STATICTOP;
        STATICTOP = STATICTOP + size | 0;
        STATICTOP = STATICTOP + 15 & -16;
        return ret;
      }, dynamicAlloc: function(size) {
        var ret = HEAP32[DYNAMICTOP_PTR >> 2];
        var end = (ret + size + 15 | 0) & -16;
        HEAP32[DYNAMICTOP_PTR >> 2] = end;
        if (end >= TOTAL_MEMORY) {
          var success = enlargeMemory();
          if (!success) {
            HEAP32[DYNAMICTOP_PTR >> 2] = ret;
            return 0;
          }
        }
        return ret;
      }, alignMemory: function(size, quantum) {
        var ret = size = Math.ceil(size / (quantum ? quantum : 16)) * (quantum ? quantum : 16);
        return ret;
      }, makeBigInt: function(low, high, unsigned) {
        var ret = unsigned ? +(low >>> 0) + +(high >>> 0) * 4294967296 : +(low >>> 0) + +(high | 0) * 4294967296;
        return ret;
      }, GLOBAL_BASE: 8, QUANTUM_SIZE: 4, __dummy__: 0 };
      var ABORT = 0;
      var EXITSTATUS = 0;
      function assert(condition, text) {
        if (!condition) {
          abort("Assertion failed: " + text);
        }
      }
      function getCFunc(ident) {
        var func = Module["_" + ident];
        if (!func) {
          abort("NO_DYNAMIC_EXECUTION=1 was set, cannot eval");
        }
        assert(func, "Cannot call unknown function " + ident + " (perhaps LLVM optimizations or closure removed it?)");
        return func;
      }
      var ccall;
      (function() {
        var JSfuncs = { "stackSave": function() {
          Runtime.stackSave();
        }, "stackRestore": function() {
          Runtime.stackRestore();
        }, "arrayToC": function(arr) {
          var ret = Runtime.stackAlloc(arr.length);
          writeArrayToMemory(arr, ret);
          return ret;
        }, "stringToC": function(str) {
          var ret = 0;
          if (str !== null && str !== void 0 && str !== 0) {
            var len = (str.length << 2) + 1;
            ret = Runtime.stackAlloc(len);
            stringToUTF8(str, ret, len);
          }
          return ret;
        } };
        var toC = { "string": JSfuncs["stringToC"], "array": JSfuncs["arrayToC"] };
        ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
          var func = getCFunc(ident);
          var cArgs = [];
          var stack = 0;
          if (args) {
            for (var i = 0; i < args.length; i++) {
              var converter = toC[argTypes[i]];
              if (converter) {
                if (stack === 0)
                  stack = Runtime.stackSave();
                cArgs[i] = converter(args[i]);
              } else {
                cArgs[i] = args[i];
              }
            }
          }
          var ret = func.apply(null, cArgs);
          if (returnType === "string")
            ret = Pointer_stringify(ret);
          if (stack !== 0) {
            if (opts && opts.async) {
              EmterpreterAsync.asyncFinalizers.push(function() {
                Runtime.stackRestore(stack);
              });
              return;
            }
            Runtime.stackRestore(stack);
          }
          return ret;
        };
        cwrap = function cwrap2(ident, returnType, argTypes) {
          return function() {
            return ccall(ident, returnType, argTypes, arguments);
          };
        };
      })();
      function setValue(ptr, value, type, noSafe) {
        type = type || "i8";
        if (type.charAt(type.length - 1) === "*")
          type = "i32";
        switch (type) {
          case "i1":
            HEAP8[ptr >> 0] = value;
            break;
          case "i8":
            HEAP8[ptr >> 0] = value;
            break;
          case "i16":
            HEAP16[ptr >> 1] = value;
            break;
          case "i32":
            HEAP32[ptr >> 2] = value;
            break;
          case "i64":
            tempI64 = [value >>> 0, (tempDouble = value, +Math_abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math_min(+Math_floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];
            break;
          case "float":
            HEAPF32[ptr >> 2] = value;
            break;
          case "double":
            HEAPF64[ptr >> 3] = value;
            break;
          default:
            abort("invalid type for setValue: " + type);
        }
      }
      function getValue(ptr, type, noSafe) {
        type = type || "i8";
        if (type.charAt(type.length - 1) === "*")
          type = "i32";
        switch (type) {
          case "i1":
            return HEAP8[ptr >> 0];
          case "i8":
            return HEAP8[ptr >> 0];
          case "i16":
            return HEAP16[ptr >> 1];
          case "i32":
            return HEAP32[ptr >> 2];
          case "i64":
            return HEAP32[ptr >> 2];
          case "float":
            return HEAPF32[ptr >> 2];
          case "double":
            return HEAPF64[ptr >> 3];
          default:
            abort("invalid type for setValue: " + type);
        }
        return null;
      }
      var ALLOC_NORMAL = 0;
      var ALLOC_STATIC = 2;
      var ALLOC_NONE = 4;
      function allocate(slab, types, allocator, ptr) {
        var zeroinit, size;
        if (typeof slab === "number") {
          zeroinit = true;
          size = slab;
        } else {
          zeroinit = false;
          size = slab.length;
        }
        var singleType = typeof types === "string" ? types : null;
        var ret;
        if (allocator == ALLOC_NONE) {
          ret = ptr;
        } else {
          ret = [typeof _malloc === "function" ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === void 0 ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
        }
        if (zeroinit) {
          var ptr = ret, stop;
          assert((ret & 3) == 0);
          stop = ret + (size & ~3);
          for (; ptr < stop; ptr += 4) {
            HEAP32[ptr >> 2] = 0;
          }
          stop = ret + size;
          while (ptr < stop) {
            HEAP8[ptr++ >> 0] = 0;
          }
          return ret;
        }
        if (singleType === "i8") {
          if (slab.subarray || slab.slice) {
            HEAPU8.set(slab, ret);
          } else {
            HEAPU8.set(new Uint8Array(slab), ret);
          }
          return ret;
        }
        var i = 0, type, typeSize, previousType;
        while (i < size) {
          var curr = slab[i];
          if (typeof curr === "function") {
            curr = Runtime.getFunctionIndex(curr);
          }
          type = singleType || types[i];
          if (type === 0) {
            i++;
            continue;
          }
          if (type == "i64")
            type = "i32";
          setValue(ret + i, curr, type);
          if (previousType !== type) {
            typeSize = Runtime.getNativeTypeSize(type);
            previousType = type;
          }
          i += typeSize;
        }
        return ret;
      }
      function Pointer_stringify(ptr, length) {
        if (length === 0 || !ptr)
          return "";
        var hasUtf = 0;
        var t;
        var i = 0;
        while (1) {
          t = HEAPU8[ptr + i >> 0];
          hasUtf |= t;
          if (t == 0 && !length)
            break;
          i++;
          if (length && i == length)
            break;
        }
        if (!length)
          length = i;
        var ret = "";
        if (hasUtf < 128) {
          var MAX_CHUNK = 1024;
          var curr;
          while (length > 0) {
            curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
            ret = ret ? ret + curr : curr;
            ptr += MAX_CHUNK;
            length -= MAX_CHUNK;
          }
          return ret;
        }
        return Module["UTF8ToString"](ptr);
      }
      var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : void 0;
      function UTF8ArrayToString(u8Array, idx) {
        var endPtr = idx;
        while (u8Array[endPtr])
          ++endPtr;
        if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {
          return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));
        } else {
          var u0, u1, u2, u3, u4, u5;
          var str = "";
          while (1) {
            u0 = u8Array[idx++];
            if (!u0)
              return str;
            if (!(u0 & 128)) {
              str += String.fromCharCode(u0);
              continue;
            }
            u1 = u8Array[idx++] & 63;
            if ((u0 & 224) == 192) {
              str += String.fromCharCode((u0 & 31) << 6 | u1);
              continue;
            }
            u2 = u8Array[idx++] & 63;
            if ((u0 & 240) == 224) {
              u0 = (u0 & 15) << 12 | u1 << 6 | u2;
            } else {
              u3 = u8Array[idx++] & 63;
              if ((u0 & 248) == 240) {
                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u3;
              } else {
                u4 = u8Array[idx++] & 63;
                if ((u0 & 252) == 248) {
                  u0 = (u0 & 3) << 24 | u1 << 18 | u2 << 12 | u3 << 6 | u4;
                } else {
                  u5 = u8Array[idx++] & 63;
                  u0 = (u0 & 1) << 30 | u1 << 24 | u2 << 18 | u3 << 12 | u4 << 6 | u5;
                }
              }
            }
            if (u0 < 65536) {
              str += String.fromCharCode(u0);
            } else {
              var ch = u0 - 65536;
              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
            }
          }
        }
      }
      function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
        if (!(maxBytesToWrite > 0))
          return 0;
        var startIdx = outIdx;
        var endIdx = outIdx + maxBytesToWrite - 1;
        for (var i = 0; i < str.length; ++i) {
          var u = str.charCodeAt(i);
          if (u >= 55296 && u <= 57343)
            u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
          if (u <= 127) {
            if (outIdx >= endIdx)
              break;
            outU8Array[outIdx++] = u;
          } else if (u <= 2047) {
            if (outIdx + 1 >= endIdx)
              break;
            outU8Array[outIdx++] = 192 | u >> 6;
            outU8Array[outIdx++] = 128 | u & 63;
          } else if (u <= 65535) {
            if (outIdx + 2 >= endIdx)
              break;
            outU8Array[outIdx++] = 224 | u >> 12;
            outU8Array[outIdx++] = 128 | u >> 6 & 63;
            outU8Array[outIdx++] = 128 | u & 63;
          } else if (u <= 2097151) {
            if (outIdx + 3 >= endIdx)
              break;
            outU8Array[outIdx++] = 240 | u >> 18;
            outU8Array[outIdx++] = 128 | u >> 12 & 63;
            outU8Array[outIdx++] = 128 | u >> 6 & 63;
            outU8Array[outIdx++] = 128 | u & 63;
          } else if (u <= 67108863) {
            if (outIdx + 4 >= endIdx)
              break;
            outU8Array[outIdx++] = 248 | u >> 24;
            outU8Array[outIdx++] = 128 | u >> 18 & 63;
            outU8Array[outIdx++] = 128 | u >> 12 & 63;
            outU8Array[outIdx++] = 128 | u >> 6 & 63;
            outU8Array[outIdx++] = 128 | u & 63;
          } else {
            if (outIdx + 5 >= endIdx)
              break;
            outU8Array[outIdx++] = 252 | u >> 30;
            outU8Array[outIdx++] = 128 | u >> 24 & 63;
            outU8Array[outIdx++] = 128 | u >> 18 & 63;
            outU8Array[outIdx++] = 128 | u >> 12 & 63;
            outU8Array[outIdx++] = 128 | u >> 6 & 63;
            outU8Array[outIdx++] = 128 | u & 63;
          }
        }
        outU8Array[outIdx] = 0;
        return outIdx - startIdx;
      }
      function stringToUTF8(str, outPtr, maxBytesToWrite) {
        return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
      }
      function lengthBytesUTF8(str) {
        var len = 0;
        for (var i = 0; i < str.length; ++i) {
          var u = str.charCodeAt(i);
          if (u >= 55296 && u <= 57343)
            u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
          if (u <= 127) {
            ++len;
          } else if (u <= 2047) {
            len += 2;
          } else if (u <= 65535) {
            len += 3;
          } else if (u <= 2097151) {
            len += 4;
          } else if (u <= 67108863) {
            len += 5;
          } else {
            len += 6;
          }
        }
        return len;
      }
      var UTF16Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf-16le") : void 0;
      function demangle(func) {
        var hasLibcxxabi = !!Module["___cxa_demangle"];
        if (hasLibcxxabi) {
          try {
            var s = func.substr(1);
            var len = lengthBytesUTF8(s) + 1;
            var buf = _malloc(len);
            stringToUTF8(s, buf, len);
            var status = _malloc(4);
            var ret = Module["___cxa_demangle"](buf, 0, 0, status);
            if (getValue(status, "i32") === 0 && ret) {
              return Pointer_stringify(ret);
            }
          } catch (e) {
          } finally {
            if (buf)
              _free(buf);
            if (status)
              _free(status);
            if (ret)
              _free(ret);
          }
          return func;
        }
        Runtime.warnOnce("warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");
        return func;
      }
      function demangleAll(text) {
        return text.replace(/__Z[\w\d_]+/g, function(x) {
          var y = demangle(x);
          return x === y ? x : x + " [" + y + "]";
        });
      }
      function jsStackTrace() {
        var err = new Error();
        if (!err.stack) {
          try {
            throw new Error(0);
          } catch (e) {
            err = e;
          }
          if (!err.stack) {
            return "(no stack trace available)";
          }
        }
        return err.stack.toString();
      }
      function stackTrace() {
        var js = jsStackTrace();
        if (Module["extraStackTrace"])
          js += "\n" + Module["extraStackTrace"]();
        return demangleAll(js);
      }
      var HEAP;
      var buffer;
      var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;
      function updateGlobalBufferViews() {
        Module["HEAP8"] = HEAP8 = new Int8Array(buffer);
        Module["HEAP16"] = HEAP16 = new Int16Array(buffer);
        Module["HEAP32"] = HEAP32 = new Int32Array(buffer);
        Module["HEAPU8"] = HEAPU8 = new Uint8Array(buffer);
        Module["HEAPU16"] = HEAPU16 = new Uint16Array(buffer);
        Module["HEAPU32"] = HEAPU32 = new Uint32Array(buffer);
        Module["HEAPF32"] = HEAPF32 = new Float32Array(buffer);
        Module["HEAPF64"] = HEAPF64 = new Float64Array(buffer);
      }
      var STATIC_BASE, STATICTOP, staticSealed;
      var STACK_BASE, STACKTOP, STACK_MAX;
      var DYNAMIC_BASE, DYNAMICTOP_PTR;
      STATIC_BASE = STATICTOP = STACK_BASE = STACKTOP = STACK_MAX = DYNAMIC_BASE = DYNAMICTOP_PTR = 0;
      staticSealed = false;
      function abortOnCannotGrowMemory() {
        abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value " + TOTAL_MEMORY + ", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ");
      }
      function enlargeMemory() {
        abortOnCannotGrowMemory();
      }
      var TOTAL_STACK = Module["TOTAL_STACK"] || 5242880;
      var TOTAL_MEMORY = Module["TOTAL_MEMORY"] || 67108864;
      var WASM_PAGE_SIZE = 64 * 1024;
      var totalMemory = WASM_PAGE_SIZE;
      while (totalMemory < TOTAL_MEMORY || totalMemory < 2 * TOTAL_STACK) {
        if (totalMemory < 16 * 1024 * 1024) {
          totalMemory *= 2;
        } else {
          totalMemory += 16 * 1024 * 1024;
        }
      }
      if (totalMemory !== TOTAL_MEMORY) {
        TOTAL_MEMORY = totalMemory;
      }
      if (Module["buffer"]) {
        buffer = Module["buffer"];
      } else {
        {
          buffer = new ArrayBuffer(TOTAL_MEMORY);
        }
      }
      updateGlobalBufferViews();
      function getTotalMemory() {
        return TOTAL_MEMORY;
      }
      HEAP32[0] = 1668509029;
      HEAP16[1] = 25459;
      if (HEAPU8[2] !== 115 || HEAPU8[3] !== 99)
        throw "Runtime error: expected the system to be little-endian!";
      Module["HEAP"] = HEAP;
      Module["buffer"] = buffer;
      Module["HEAP8"] = HEAP8;
      Module["HEAP16"] = HEAP16;
      Module["HEAP32"] = HEAP32;
      Module["HEAPU8"] = HEAPU8;
      Module["HEAPU16"] = HEAPU16;
      Module["HEAPU32"] = HEAPU32;
      Module["HEAPF32"] = HEAPF32;
      Module["HEAPF64"] = HEAPF64;
      function callRuntimeCallbacks(callbacks) {
        while (callbacks.length > 0) {
          var callback = callbacks.shift();
          if (typeof callback == "function") {
            callback();
            continue;
          }
          var func = callback.func;
          if (typeof func === "number") {
            if (callback.arg === void 0) {
              Runtime.dynCall("v", func);
            } else {
              Runtime.dynCall("vi", func, [callback.arg]);
            }
          } else {
            func(callback.arg === void 0 ? null : callback.arg);
          }
        }
      }
      var __ATPRERUN__ = [];
      var __ATINIT__ = [];
      var __ATMAIN__ = [];
      var __ATEXIT__ = [];
      var __ATPOSTRUN__ = [];
      var runtimeInitialized = false;
      var runtimeExited = false;
      function preRun() {
        if (Module["preRun"]) {
          if (typeof Module["preRun"] == "function")
            Module["preRun"] = [Module["preRun"]];
          while (Module["preRun"].length) {
            addOnPreRun(Module["preRun"].shift());
          }
        }
        callRuntimeCallbacks(__ATPRERUN__);
      }
      function ensureInitRuntime() {
        if (runtimeInitialized)
          return;
        runtimeInitialized = true;
        callRuntimeCallbacks(__ATINIT__);
      }
      function preMain() {
        callRuntimeCallbacks(__ATMAIN__);
      }
      function exitRuntime() {
        callRuntimeCallbacks(__ATEXIT__);
        runtimeExited = true;
      }
      function postRun() {
        if (Module["postRun"]) {
          if (typeof Module["postRun"] == "function")
            Module["postRun"] = [Module["postRun"]];
          while (Module["postRun"].length) {
            addOnPostRun(Module["postRun"].shift());
          }
        }
        callRuntimeCallbacks(__ATPOSTRUN__);
      }
      function addOnPreRun(cb) {
        __ATPRERUN__.unshift(cb);
      }
      function addOnPreMain(cb) {
        __ATMAIN__.unshift(cb);
      }
      function addOnPostRun(cb) {
        __ATPOSTRUN__.unshift(cb);
      }
      function intArrayFromString(stringy, dontAddNull, length) {
        var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
        var u8array = new Array(len);
        var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
        if (dontAddNull)
          u8array.length = numBytesWritten;
        return u8array;
      }
      function writeArrayToMemory(array, buffer2) {
        HEAP8.set(array, buffer2);
      }
      function writeAsciiToMemory(str, buffer2, dontAddNull) {
        for (var i = 0; i < str.length; ++i) {
          HEAP8[buffer2++ >> 0] = str.charCodeAt(i);
        }
        if (!dontAddNull)
          HEAP8[buffer2 >> 0] = 0;
      }
      if (!Math["imul"] || Math["imul"](4294967295, 5) !== -5)
        Math["imul"] = function imul(a, b) {
          var ah = a >>> 16;
          var al = a & 65535;
          var bh = b >>> 16;
          var bl = b & 65535;
          return al * bl + (ah * bl + al * bh << 16) | 0;
        };
      Math.imul = Math["imul"];
      if (!Math["clz32"])
        Math["clz32"] = function(x) {
          x = x >>> 0;
          for (var i = 0; i < 32; i++) {
            if (x & 1 << 31 - i)
              return i;
          }
          return 32;
        };
      Math.clz32 = Math["clz32"];
      if (!Math["trunc"])
        Math["trunc"] = function(x) {
          return x < 0 ? Math.ceil(x) : Math.floor(x);
        };
      Math.trunc = Math["trunc"];
      var Math_abs = Math.abs;
      var Math_cos = Math.cos;
      var Math_sin = Math.sin;
      var Math_tan = Math.tan;
      var Math_acos = Math.acos;
      var Math_asin = Math.asin;
      var Math_atan = Math.atan;
      var Math_atan2 = Math.atan2;
      var Math_exp = Math.exp;
      var Math_log = Math.log;
      var Math_sqrt = Math.sqrt;
      var Math_ceil = Math.ceil;
      var Math_floor = Math.floor;
      var Math_pow = Math.pow;
      var Math_imul = Math.imul;
      var Math_fround = Math.fround;
      var Math_min = Math.min;
      var Math_clz32 = Math.clz32;
      var Math_trunc = Math.trunc;
      var runDependencies = 0;
      var runDependencyWatcher = null;
      var dependenciesFulfilled = null;
      Module["preloadedImages"] = {};
      Module["preloadedAudios"] = {};
      var ASM_CONSTS = [function($0, $1, $2, $3, $4, $5, $6, $7) {
        {
          var self = Module["getCache"](Module["ConcreteContactResultCallback"])[$0];
          if (!self.hasOwnProperty("addSingleResult"))
            throw "a JSImplementation must implement all functions, you forgot ConcreteContactResultCallback::addSingleResult.";
          return self["addSingleResult"]($1, $2, $3, $4, $5, $6, $7);
        }
      }];
      function _emscripten_asm_const_diiiiiiii(code, a0, a1, a2, a3, a4, a5, a6, a7) {
        return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7);
      }
      STATIC_BASE = 8;
      STATICTOP = STATIC_BASE + 25840;
      __ATINIT__.push({ func: function() {
        __GLOBAL__sub_I_btConeTwistConstraint_cpp();
      } });
      allocate([200, 37, 0, 0, 56, 39, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 88, 39, 0, 0, 200, 37, 0, 0, 132, 39, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 179, 39, 0, 0, 200, 37, 0, 0, 219, 39, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 241, 39, 0, 0, 200, 37, 0, 0, 13, 40, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 36, 40, 0, 0, 160, 37, 0, 0, 52, 40, 0, 0, 200, 37, 0, 0, 73, 40, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 123, 40, 0, 0, 200, 37, 0, 0, 107, 41, 0, 0, 120, 4, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 120, 41, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 152, 41, 0, 0, 160, 37, 0, 0, 171, 41, 0, 0, 200, 37, 0, 0, 192, 41, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 223, 41, 0, 0, 72, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 62, 42, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 32, 42, 0, 0, 152, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 96, 42, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 129, 42, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 164, 42, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 198, 42, 0, 0, 248, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 232, 42, 0, 0, 104, 5, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 20, 43, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 79, 43, 0, 0, 200, 37, 0, 0, 112, 43, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 164, 43, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 210, 43, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 255, 43, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 31, 44, 0, 0, 200, 37, 0, 0, 133, 44, 0, 0, 32, 3, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 54, 44, 0, 0, 200, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 80, 44, 0, 0, 216, 1, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 106, 44, 0, 0, 200, 37, 0, 0, 160, 44, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 191, 44, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 217, 44, 0, 0, 200, 37, 0, 0, 225, 45, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 36, 45, 0, 0, 136, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 245, 44, 0, 0, 72, 8, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 7, 45, 0, 0, 200, 37, 0, 0, 196, 45, 0, 0, 136, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 53, 46, 0, 0, 112, 2, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 7, 46, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 86, 46, 0, 0, 128, 2, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 119, 46, 0, 0, 200, 37, 0, 0, 201, 46, 0, 0, 152, 2, 0, 0, 0, 0, 0, 0, 240, 37, 0, 0, 165, 46, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 176, 2, 0, 0, 2, 4, 0, 0, 160, 37, 0, 0, 185, 46, 0, 0, 200, 37, 0, 0, 253, 46, 0, 0, 152, 2, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 57, 47, 0, 0, 184, 2, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 116, 47, 0, 0, 152, 2, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 169, 47, 0, 0, 152, 2, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 195, 47, 0, 0, 8, 3, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 233, 47, 0, 0, 200, 37, 0, 0, 21, 48, 0, 0, 152, 2, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 131, 48, 0, 0, 64, 3, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 69, 48, 0, 0, 112, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 157, 48, 0, 0, 128, 4, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 175, 48, 0, 0, 96, 3, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 205, 48, 0, 0, 200, 37, 0, 0, 16, 49, 0, 0, 120, 4, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 30, 49, 0, 0, 128, 2, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 49, 49, 0, 0, 104, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 127, 49, 0, 0, 168, 3, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 77, 49, 0, 0, 184, 3, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 103, 49, 0, 0, 200, 37, 0, 0, 142, 49, 0, 0, 208, 3, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 160, 49, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 251, 49, 0, 0, 184, 3, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 185, 49, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 206, 49, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 229, 49, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 17, 51, 0, 0, 208, 3, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 14, 50, 0, 0, 64, 4, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 124, 50, 0, 0, 200, 37, 0, 0, 144, 50, 0, 0, 64, 4, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 74, 51, 0, 0, 136, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 48, 51, 0, 0, 64, 4, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 125, 51, 0, 0, 160, 37, 0, 0, 166, 54, 0, 0, 200, 37, 0, 0, 188, 53, 0, 0, 200, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 145, 51, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 22, 52, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 148, 52, 0, 0, 88, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 41, 53, 0, 0, 88, 9, 0, 0, 0, 0, 0, 0, 240, 37, 0, 0, 210, 53, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 136, 8, 0, 0, 2, 0, 0, 0, 144, 8, 0, 0, 2, 4, 0, 0, 200, 37, 0, 0, 185, 54, 0, 0, 128, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 152, 55, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 61, 56, 0, 0, 104, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 238, 56, 0, 0, 104, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 157, 57, 0, 0, 200, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 207, 57, 0, 0, 216, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 181, 57, 0, 0, 80, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 233, 57, 0, 0, 120, 5, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 11, 58, 0, 0, 200, 37, 0, 0, 38, 58, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 86, 58, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 129, 58, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 180, 58, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 229, 58, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 6, 59, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 58, 59, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 111, 59, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 156, 59, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 213, 59, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 7, 60, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 26, 60, 0, 0, 120, 4, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 42, 60, 0, 0, 48, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 69, 60, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 88, 60, 0, 0, 160, 37, 0, 0, 136, 60, 0, 0, 200, 37, 0, 0, 164, 60, 0, 0, 152, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 199, 60, 0, 0, 152, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 236, 60, 0, 0, 160, 6, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 5, 61, 0, 0, 200, 37, 0, 0, 48, 61, 0, 0, 72, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 235, 61, 0, 0, 168, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 61, 61, 0, 0, 216, 6, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 171, 61, 0, 0, 200, 37, 0, 0, 4, 62, 0, 0, 216, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 108, 62, 0, 0, 216, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 253, 62, 0, 0, 152, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 23, 63, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 50, 63, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 89, 63, 0, 0, 200, 37, 0, 0, 162, 63, 0, 0, 48, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 180, 63, 0, 0, 48, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 218, 63, 0, 0, 152, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 238, 63, 0, 0, 88, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 3, 64, 0, 0, 88, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 47, 64, 0, 0, 88, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 67, 64, 0, 0, 168, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 91, 64, 0, 0, 48, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 150, 64, 0, 0, 88, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 107, 64, 0, 0, 144, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 208, 64, 0, 0, 152, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 236, 64, 0, 0, 216, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 9, 65, 0, 0, 216, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 40, 65, 0, 0, 72, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 68, 65, 0, 0, 144, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 85, 65, 0, 0, 144, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 176, 65, 0, 0, 144, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 20, 66, 0, 0, 152, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 46, 66, 0, 0, 72, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 90, 66, 0, 0, 152, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 141, 66, 0, 0, 72, 7, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 162, 66, 0, 0, 160, 37, 0, 0, 183, 66, 0, 0, 200, 37, 0, 0, 217, 66, 0, 0, 176, 10, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 117, 67, 0, 0, 72, 7, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 234, 66, 0, 0, 136, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 2, 67, 0, 0, 144, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 158, 67, 0, 0, 248, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 139, 67, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 188, 67, 0, 0, 200, 37, 0, 0, 203, 67, 0, 0, 248, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 221, 67, 0, 0, 32, 9, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 254, 67, 0, 0, 200, 37, 0, 0, 31, 68, 0, 0, 160, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 222, 68, 0, 0, 32, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 51, 68, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 2, 69, 0, 0, 136, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 30, 69, 0, 0, 136, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 61, 69, 0, 0, 248, 8, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 86, 69, 0, 0, 160, 37, 0, 0, 192, 69, 0, 0, 200, 37, 0, 0, 209, 69, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 242, 69, 0, 0, 152, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 15, 70, 0, 0, 160, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 59, 70, 0, 0, 152, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 34, 70, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 123, 70, 0, 0, 200, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 90, 70, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 91, 71, 0, 0, 152, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 162, 70, 0, 0, 136, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 64, 71, 0, 0, 136, 8, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 198, 72, 0, 0, 88, 1, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 172, 72, 0, 0, 152, 9, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 127, 71, 0, 0, 80, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 154, 71, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 39, 72, 0, 0, 96, 6, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 238, 72, 0, 0, 160, 1, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 16, 73, 0, 0, 160, 37, 0, 0, 42, 73, 0, 0, 160, 37, 0, 0, 210, 73, 0, 0, 200, 37, 0, 0, 236, 73, 0, 0, 168, 10, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 20, 84, 0, 0, 200, 37, 0, 0, 116, 84, 0, 0, 216, 10, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 33, 84, 0, 0, 232, 10, 0, 0, 0, 0, 0, 0, 160, 37, 0, 0, 66, 84, 0, 0, 200, 37, 0, 0, 79, 84, 0, 0, 200, 10, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 122, 85, 0, 0, 216, 10, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 86, 85, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 200, 37, 0, 0, 156, 85, 0, 0, 200, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 56, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 80, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 9, 0, 0, 0, 10, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 136, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 152, 0, 0, 0, 13, 0, 0, 0, 14, 0, 0, 0, 3, 0, 0, 0, 5, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 6, 0, 0, 0, 3, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 1, 0, 0, 13, 0, 0, 0, 19, 0, 0, 0, 3, 0, 0, 0, 9, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 216, 0, 0, 0, 13, 0, 0, 0, 20, 0, 0, 0, 3, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 21, 0, 0, 0, 22, 0, 0, 0, 3, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 6, 0, 0, 0, 3, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 40, 1, 0, 0, 13, 0, 0, 0, 23, 0, 0, 0, 8, 0, 0, 0, 12, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 24, 1, 0, 0, 13, 0, 0, 0, 24, 0, 0, 0, 9, 0, 0, 0, 12, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 56, 1, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 5, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 128, 1, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 112, 1, 0, 0, 27, 0, 0, 0, 29, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 96, 1, 0, 0, 27, 0, 0, 0, 30, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 72, 1, 0, 0, 27, 0, 0, 0, 31, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 144, 1, 0, 0, 32, 0, 0, 0, 33, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 168, 1, 0, 0, 34, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 38, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 15, 0, 0, 0, 39, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 10, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 40, 0, 0, 0, 22, 0, 0, 0, 9, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 17, 0, 0, 0, 41, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 4, 0, 0, 0, 5, 0, 0, 0, 42, 0, 0, 0, 29, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 30, 0, 0, 0, 43, 0, 0, 0, 31, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 184, 1, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 224, 1, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 240, 1, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 11, 0, 0, 0, 33, 0, 0, 0, 10, 0, 0, 0, 11, 0, 0, 0, 50, 0, 0, 0, 12, 0, 0, 0, 13, 0, 0, 0, 34, 0, 0, 0, 20, 0, 0, 0, 35, 0, 0, 0, 21, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 8, 2, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 24, 2, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 56, 2, 0, 0, 12, 0, 0, 0, 37, 0, 0, 0, 15, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 40, 2, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 11, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 6, 0, 0, 0, 4, 0, 0, 0, 22, 0, 0, 0, 7, 0, 0, 0, 13, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 12, 0, 0, 0, 5, 0, 0, 0, 23, 0, 0, 0, 18, 0, 0, 0, 10, 0, 0, 0, 24, 0, 0, 0, 25, 0, 0, 0, 13, 0, 0, 0, 19, 0, 0, 0, 26, 0, 0, 0, 14, 0, 0, 0, 1, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 64, 2, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 80, 2, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 2, 0, 0, 0, 38, 0, 0, 0, 39, 0, 0, 0, 3, 0, 0, 0, 40, 0, 0, 0, 41, 0, 0, 0, 42, 0, 0, 0, 4, 0, 0, 0, 27, 0, 0, 0, 43, 0, 0, 0, 28, 0, 0, 0, 44, 0, 0, 0, 6, 0, 0, 0, 45, 0, 0, 0, 29, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 0, 0, 0, 0, 96, 2, 0, 0, 63, 0, 0, 0, 64, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 136, 2, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 1, 0, 0, 0, 48, 0, 0, 0, 49, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 30, 0, 0, 0, 7, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 152, 2, 0, 0, 65, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 31, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 184, 2, 0, 0, 65, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 1, 0, 0, 0, 50, 0, 0, 0, 51, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 32, 0, 0, 0, 9, 0, 0, 0, 72, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 200, 2, 0, 0, 65, 0, 0, 0, 73, 0, 0, 0, 71, 0, 0, 0, 1, 0, 0, 0, 50, 0, 0, 0, 52, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 34, 0, 0, 0, 10, 0, 0, 0, 72, 0, 0, 0, 33, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 216, 2, 0, 0, 65, 0, 0, 0, 74, 0, 0, 0, 75, 0, 0, 0, 1, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 6, 0, 0, 0, 35, 0, 0, 0, 11, 0, 0, 0, 36, 0, 0, 0, 0, 0, 0, 0, 232, 2, 0, 0, 65, 0, 0, 0, 76, 0, 0, 0, 77, 0, 0, 0, 1, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 2, 0, 0, 0, 4, 0, 0, 0, 7, 0, 0, 0, 37, 0, 0, 0, 12, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 248, 2, 0, 0, 78, 0, 0, 0, 79, 0, 0, 0, 22, 0, 0, 0, 1, 0, 0, 0, 23, 0, 0, 0, 80, 0, 0, 0, 39, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 16, 3, 0, 0, 65, 0, 0, 0, 81, 0, 0, 0, 69, 0, 0, 0, 1, 0, 0, 0, 57, 0, 0, 0, 58, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 8, 0, 0, 0, 40, 0, 0, 0, 13, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 32, 3, 0, 0, 82, 0, 0, 0, 83, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 84, 0, 0, 0, 6, 0, 0, 0, 18, 0, 0, 0, 8, 0, 0, 0, 59, 0, 0, 0, 39, 0, 0, 0, 60, 0, 0, 0, 1, 0, 0, 0, 10, 0, 0, 0, 17, 0, 0, 0, 18, 0, 0, 0, 19, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 40, 0, 0, 0, 22, 0, 0, 0, 9, 0, 0, 0, 23, 0, 0, 0, 24, 0, 0, 0, 15, 0, 0, 0, 16, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 42, 0, 0, 0, 41, 0, 0, 0, 25, 0, 0, 0, 26, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 14, 0, 0, 0, 5, 0, 0, 0, 42, 0, 0, 0, 29, 0, 0, 0, 6, 0, 0, 0, 15, 0, 0, 0, 8, 0, 0, 0, 30, 0, 0, 0, 43, 0, 0, 0, 31, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 48, 3, 0, 0, 63, 0, 0, 0, 85, 0, 0, 0, 11, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 80, 3, 0, 0, 86, 0, 0, 0, 87, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 104, 3, 0, 0, 88, 0, 0, 0, 89, 0, 0, 0, 61, 0, 0, 0, 4, 0, 0, 0, 43, 0, 0, 0, 14, 0, 0, 0, 62, 0, 0, 0, 0, 0, 0, 0, 120, 3, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 5, 0, 0, 0, 63, 0, 0, 0, 16, 0, 0, 0, 17, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 136, 3, 0, 0, 92, 0, 0, 0, 93, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 152, 3, 0, 0, 94, 0, 0, 0, 95, 0, 0, 0, 1, 0, 0, 0, 24, 0, 0, 0, 4, 0, 0, 0, 20, 0, 0, 0, 2, 0, 0, 0, 21, 0, 0, 0, 64, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 25, 0, 0, 0, 65, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 168, 3, 0, 0, 94, 0, 0, 0, 97, 0, 0, 0, 1, 0, 0, 0, 24, 0, 0, 0, 4, 0, 0, 0, 20, 0, 0, 0, 2, 0, 0, 0, 21, 0, 0, 0, 64, 0, 0, 0, 44, 0, 0, 0, 45, 0, 0, 0, 25, 0, 0, 0, 65, 0, 0, 0, 96, 0, 0, 0, 0, 0, 0, 0, 192, 3, 0, 0, 98, 0, 0, 0, 99, 0, 0, 0, 15, 0, 0, 0, 7, 0, 0, 0, 26, 0, 0, 0, 46, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 27, 0, 0, 0, 49, 0, 0, 0, 28, 0, 0, 0, 66, 0, 0, 0, 29, 0, 0, 0, 16, 0, 0, 0, 50, 0, 0, 0, 67, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 224, 3, 0, 0, 100, 0, 0, 0, 101, 0, 0, 0, 2, 0, 0, 0, 30, 0, 0, 0, 5, 0, 0, 0, 22, 0, 0, 0, 3, 0, 0, 0, 23, 0, 0, 0, 69, 0, 0, 0, 51, 0, 0, 0, 52, 0, 0, 0, 31, 0, 0, 0, 70, 0, 0, 0, 102, 0, 0, 0, 0, 0, 0, 0, 240, 3, 0, 0, 13, 0, 0, 0, 103, 0, 0, 0, 32, 0, 0, 0, 71, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 13, 0, 0, 0, 104, 0, 0, 0, 3, 0, 0, 0, 72, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 16, 4, 0, 0, 13, 0, 0, 0, 105, 0, 0, 0, 3, 0, 0, 0, 73, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 32, 4, 0, 0, 106, 0, 0, 0, 107, 0, 0, 0, 17, 0, 0, 0, 8, 0, 0, 0, 33, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 55, 0, 0, 0, 34, 0, 0, 0, 56, 0, 0, 0, 35, 0, 0, 0, 74, 0, 0, 0, 36, 0, 0, 0, 18, 0, 0, 0, 57, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 0, 0, 0, 0, 48, 4, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 72, 4, 0, 0, 108, 0, 0, 0, 110, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 88, 4, 0, 0, 111, 0, 0, 0, 112, 0, 0, 0, 9, 0, 0, 0, 19, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 20, 0, 0, 0, 21, 0, 0, 0, 24, 0, 0, 0, 58, 0, 0, 0, 14, 0, 0, 0, 59, 0, 0, 0, 60, 0, 0, 0, 61, 0, 0, 0, 15, 0, 0, 0, 79, 0, 0, 0, 0, 0, 0, 0, 104, 4, 0, 0, 108, 0, 0, 0, 113, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 120, 4, 0, 0, 114, 0, 0, 0, 115, 0, 0, 0, 61, 0, 0, 0, 4, 0, 0, 0, 62, 0, 0, 0, 22, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 128, 4, 0, 0, 116, 0, 0, 0, 117, 0, 0, 0, 36, 0, 0, 0, 37, 0, 0, 0, 14, 0, 0, 0, 14, 0, 0, 0, 118, 0, 0, 0, 6, 0, 0, 0, 18, 0, 0, 0, 25, 0, 0, 0, 80, 0, 0, 0, 39, 0, 0, 0, 81, 0, 0, 0, 0, 0, 0, 0, 136, 4, 0, 0, 44, 0, 0, 0, 119, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 200, 4, 0, 0, 53, 0, 0, 0, 120, 0, 0, 0, 26, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 184, 4, 0, 0, 53, 0, 0, 0, 121, 0, 0, 0, 26, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 168, 4, 0, 0, 13, 0, 0, 0, 122, 0, 0, 0, 3, 0, 0, 0, 82, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 152, 4, 0, 0, 123, 0, 0, 0, 124, 0, 0, 0, 18, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 216, 4, 0, 0, 125, 0, 0, 0, 126, 0, 0, 0, 27, 0, 0, 0, 28, 0, 0, 0, 252, 255, 255, 255, 216, 4, 0, 0, 127, 0, 0, 0, 128, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 40, 5, 0, 0, 53, 0, 0, 0, 129, 0, 0, 0, 30, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 24, 5, 0, 0, 53, 0, 0, 0, 130, 0, 0, 0, 30, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 8, 5, 0, 0, 13, 0, 0, 0, 131, 0, 0, 0, 3, 0, 0, 0, 83, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 248, 4, 0, 0, 63, 0, 0, 0, 132, 0, 0, 0, 19, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 56, 5, 0, 0, 44, 0, 0, 0, 133, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 72, 5, 0, 0, 44, 0, 0, 0, 134, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 88, 5, 0, 0, 135, 0, 0, 0, 136, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 104, 5, 0, 0, 137, 0, 0, 0, 138, 0, 0, 0, 11, 0, 0, 0, 12, 0, 0, 0, 23, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 16, 6, 0, 0, 27, 0, 0, 0, 139, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 27, 0, 0, 0, 140, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 240, 5, 0, 0, 27, 0, 0, 0, 141, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 224, 5, 0, 0, 27, 0, 0, 0, 142, 0, 0, 0, 13, 0, 0, 0, 0, 0, 0, 0, 208, 5, 0, 0, 27, 0, 0, 0, 143, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 192, 5, 0, 0, 27, 0, 0, 0, 144, 0, 0, 0, 15, 0, 0, 0, 0, 0, 0, 0, 176, 5, 0, 0, 27, 0, 0, 0, 145, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 160, 5, 0, 0, 27, 0, 0, 0, 146, 0, 0, 0, 17, 0, 0, 0, 0, 0, 0, 0, 144, 5, 0, 0, 27, 0, 0, 0, 147, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 128, 5, 0, 0, 27, 0, 0, 0, 148, 0, 0, 0, 19, 0, 0, 0, 0, 0, 0, 0, 32, 6, 0, 0, 149, 0, 0, 0, 150, 0, 0, 0, 6, 0, 0, 0, 4, 0, 0, 0, 84, 0, 0, 0, 0, 0, 0, 0, 48, 6, 0, 0, 151, 0, 0, 0, 152, 0, 0, 0, 61, 0, 0, 0, 4, 0, 0, 0, 62, 0, 0, 0, 22, 0, 0, 0, 4, 0, 0, 0, 39, 0, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 64, 6, 0, 0, 153, 0, 0, 0, 154, 0, 0, 0, 61, 0, 0, 0, 4, 0, 0, 0, 62, 0, 0, 0, 22, 0, 0, 0, 4, 0, 0, 0, 40, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 80, 6, 0, 0, 135, 0, 0, 0, 155, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 104, 6, 0, 0, 156, 0, 0, 0, 157, 0, 0, 0, 41, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 112, 6, 0, 0, 158, 0, 0, 0, 159, 0, 0, 0, 7, 0, 0, 0, 5, 0, 0, 0, 86, 0, 0, 0, 0, 0, 0, 0, 128, 6, 0, 0, 160, 0, 0, 0, 161, 0, 0, 0, 8, 0, 0, 0, 6, 0, 0, 0, 87, 0, 0, 0, 0, 0, 0, 0, 144, 6, 0, 0, 162, 0, 0, 0, 163, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 168, 6, 0, 0, 57, 0, 0, 0, 164, 0, 0, 0, 33, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 88, 0, 0, 0, 6, 0, 0, 0, 5, 0, 0, 0, 63, 0, 0, 0, 7, 0, 0, 0, 18, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 42, 0, 0, 0, 43, 0, 0, 0, 1, 0, 0, 0, 34, 0, 0, 0, 5, 0, 0, 0, 64, 0, 0, 0, 44, 0, 0, 0, 10, 0, 0, 0, 65, 0, 0, 0, 66, 0, 0, 0, 35, 0, 0, 0, 45, 0, 0, 0, 67, 0, 0, 0, 36, 0, 0, 0, 2, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 184, 6, 0, 0, 165, 0, 0, 0, 166, 0, 0, 0, 37, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 89, 0, 0, 0, 68, 0, 0, 0, 6, 0, 0, 0, 69, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 70, 0, 0, 0, 24, 0, 0, 0, 8, 0, 0, 0, 38, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 90, 0, 0, 0, 91, 0, 0, 0, 0, 0, 0, 0, 200, 6, 0, 0, 167, 0, 0, 0, 168, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 224, 6, 0, 0, 167, 0, 0, 0, 169, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 240, 6, 0, 0, 167, 0, 0, 0, 170, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 21, 0, 0, 0, 171, 0, 0, 0, 39, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 92, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 71, 0, 0, 0, 93, 0, 0, 0, 19, 0, 0, 0, 4, 0, 0, 0, 72, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 52, 0, 0, 0, 1, 0, 0, 0, 40, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 16, 7, 0, 0, 21, 0, 0, 0, 172, 0, 0, 0, 39, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 92, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 73, 0, 0, 0, 93, 0, 0, 0, 19, 0, 0, 0, 4, 0, 0, 0, 72, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 52, 0, 0, 0, 1, 0, 0, 0, 40, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 32, 7, 0, 0, 21, 0, 0, 0, 173, 0, 0, 0, 39, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 92, 0, 0, 0, 6, 0, 0, 0, 7, 0, 0, 0, 74, 0, 0, 0, 93, 0, 0, 0, 19, 0, 0, 0, 4, 0, 0, 0, 72, 0, 0, 0, 25, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 52, 0, 0, 0, 1, 0, 0, 0, 40, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 56, 7, 0, 0, 174, 0, 0, 0, 175, 0, 0, 0, 41, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 94, 0, 0, 0, 75, 0, 0, 0, 8, 0, 0, 0, 76, 0, 0, 0, 7, 0, 0, 0, 20, 0, 0, 0, 5, 0, 0, 0, 77, 0, 0, 0, 26, 0, 0, 0, 8, 0, 0, 0, 95, 0, 0, 0, 176, 0, 0, 0, 0, 0, 0, 0, 88, 7, 0, 0, 21, 0, 0, 0, 177, 0, 0, 0, 42, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 96, 0, 0, 0, 6, 0, 0, 0, 9, 0, 0, 0, 78, 0, 0, 0, 97, 0, 0, 0, 13, 0, 0, 0, 4, 0, 0, 0, 79, 0, 0, 0, 27, 0, 0, 0, 8, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 1, 0, 0, 0, 43, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 104, 7, 0, 0, 21, 0, 0, 0, 178, 0, 0, 0, 42, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 96, 0, 0, 0, 6, 0, 0, 0, 9, 0, 0, 0, 80, 0, 0, 0, 98, 0, 0, 0, 13, 0, 0, 0, 4, 0, 0, 0, 79, 0, 0, 0, 27, 0, 0, 0, 8, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 1, 0, 0, 0, 43, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 120, 7, 0, 0, 21, 0, 0, 0, 179, 0, 0, 0, 42, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 96, 0, 0, 0, 6, 0, 0, 0, 9, 0, 0, 0, 81, 0, 0, 0, 99, 0, 0, 0, 13, 0, 0, 0, 4, 0, 0, 0, 79, 0, 0, 0, 27, 0, 0, 0, 8, 0, 0, 0, 53, 0, 0, 0, 54, 0, 0, 0, 1, 0, 0, 0, 43, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 136, 7, 0, 0, 180, 0, 0, 0, 181, 0, 0, 0, 44, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 100, 0, 0, 0, 6, 0, 0, 0, 10, 0, 0, 0, 82, 0, 0, 0, 7, 0, 0, 0, 13, 0, 0, 0, 4, 0, 0, 0, 83, 0, 0, 0, 28, 0, 0, 0, 8, 0, 0, 0, 55, 0, 0, 0, 56, 0, 0, 0, 2, 0, 0, 0, 45, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 10, 0, 0, 0, 84, 0, 0, 0, 85, 0, 0, 0, 46, 0, 0, 0, 57, 0, 0, 0, 86, 0, 0, 0, 47, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 184, 7, 0, 0, 57, 0, 0, 0, 182, 0, 0, 0, 44, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 101, 0, 0, 0, 87, 0, 0, 0, 10, 0, 0, 0, 88, 0, 0, 0, 7, 0, 0, 0, 13, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 58, 0, 0, 0, 59, 0, 0, 0, 1, 0, 0, 0, 48, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 10, 0, 0, 0, 89, 0, 0, 0, 90, 0, 0, 0, 49, 0, 0, 0, 60, 0, 0, 0, 91, 0, 0, 0, 50, 0, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 200, 7, 0, 0, 183, 0, 0, 0, 184, 0, 0, 0, 51, 0, 0, 0, 0, 0, 0, 0, 216, 7, 0, 0, 21, 0, 0, 0, 185, 0, 0, 0, 52, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 102, 0, 0, 0, 6, 0, 0, 0, 11, 0, 0, 0, 92, 0, 0, 0, 103, 0, 0, 0, 21, 0, 0, 0, 4, 0, 0, 0, 93, 0, 0, 0, 29, 0, 0, 0, 8, 0, 0, 0, 61, 0, 0, 0, 62, 0, 0, 0, 1, 0, 0, 0, 53, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 232, 7, 0, 0, 21, 0, 0, 0, 186, 0, 0, 0, 52, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 102, 0, 0, 0, 6, 0, 0, 0, 11, 0, 0, 0, 94, 0, 0, 0, 103, 0, 0, 0, 21, 0, 0, 0, 4, 0, 0, 0, 93, 0, 0, 0, 29, 0, 0, 0, 8, 0, 0, 0, 61, 0, 0, 0, 63, 0, 0, 0, 1, 0, 0, 0, 54, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 248, 7, 0, 0, 21, 0, 0, 0, 187, 0, 0, 0, 52, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 102, 0, 0, 0, 6, 0, 0, 0, 11, 0, 0, 0, 95, 0, 0, 0, 103, 0, 0, 0, 21, 0, 0, 0, 4, 0, 0, 0, 93, 0, 0, 0, 29, 0, 0, 0, 8, 0, 0, 0, 61, 0, 0, 0, 64, 0, 0, 0, 1, 0, 0, 0, 55, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 8, 0, 0, 188, 0, 0, 0, 189, 0, 0, 0, 56, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 104, 0, 0, 0, 96, 0, 0, 0, 12, 0, 0, 0, 97, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 57, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 24, 8, 0, 0, 190, 0, 0, 0, 191, 0, 0, 0, 20, 0, 0, 0, 98, 0, 0, 0, 30, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 56, 8, 0, 0, 183, 0, 0, 0, 192, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 40, 8, 0, 0, 183, 0, 0, 0, 193, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 72, 8, 0, 0, 57, 0, 0, 0, 194, 0, 0, 0, 42, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 6, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 13, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 16, 0, 0, 0, 65, 0, 0, 0, 1, 0, 0, 0, 60, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 10, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 104, 8, 0, 0, 21, 0, 0, 0, 195, 0, 0, 0, 61, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 11, 0, 0, 0, 6, 0, 0, 0, 13, 0, 0, 0, 99, 0, 0, 0, 7, 0, 0, 0, 22, 0, 0, 0, 9, 0, 0, 0, 8, 0, 0, 0, 4, 0, 0, 0, 8, 0, 0, 0, 66, 0, 0, 0, 67, 0, 0, 0, 1, 0, 0, 0, 62, 0, 0, 0, 5, 0, 0, 0, 9, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 120, 8, 0, 0, 196, 0, 0, 0, 197, 0, 0, 0, 63, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 107, 0, 0, 0, 100, 0, 0, 0, 14, 0, 0, 0, 101, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 102, 0, 0, 0, 31, 0, 0, 0, 8, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 152, 8, 0, 0, 198, 0, 0, 0, 199, 0, 0, 0, 65, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 103, 0, 0, 0, 110, 0, 0, 0, 111, 0, 0, 0, 104, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 105, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 168, 8, 0, 0, 200, 0, 0, 0, 201, 0, 0, 0, 37, 0, 0, 0, 4, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 112, 0, 0, 0, 68, 0, 0, 0, 6, 0, 0, 0, 106, 0, 0, 0, 7, 0, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 5, 0, 0, 0, 3, 0, 0, 0, 8, 0, 0, 0, 66, 0, 0, 0, 47, 0, 0, 0, 48, 0, 0, 0, 0, 0, 0, 0, 184, 8, 0, 0, 53, 0, 0, 0, 202, 0, 0, 0, 67, 0, 0, 0, 0, 0, 0, 0, 200, 8, 0, 0, 183, 0, 0, 0, 203, 0, 0, 0, 68, 0, 0, 0, 0, 0, 0, 0, 216, 8, 0, 0, 204, 0, 0, 0, 205, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 232, 8, 0, 0, 135, 0, 0, 0, 206, 0, 0, 0, 70, 0, 0, 0, 71, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 204, 0, 0, 0, 207, 0, 0, 0, 2, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 16, 9, 0, 0, 208, 0, 0, 0, 209, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 40, 9, 0, 0, 162, 0, 0, 0, 210, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 56, 9, 0, 0, 208, 0, 0, 0, 211, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 72, 9, 0, 0, 135, 0, 0, 0, 212, 0, 0, 0, 72, 0, 0, 0, 73, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 104, 9, 0, 0, 53, 0, 0, 0, 213, 0, 0, 0, 30, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 120, 9, 0, 0, 204, 0, 0, 0, 214, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 144, 9, 0, 0, 215, 0, 0, 0, 216, 0, 0, 0, 20, 0, 0, 0, 98, 0, 0, 0, 30, 0, 0, 0, 105, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 168, 9, 0, 0, 217, 0, 0, 0, 218, 0, 0, 0, 11, 0, 0, 0, 7, 0, 0, 0, 113, 0, 0, 0, 0, 0, 0, 0, 184, 9, 0, 0, 162, 0, 0, 0, 219, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 200, 9, 0, 0, 220, 0, 0, 0, 221, 0, 0, 0, 13, 0, 0, 0, 8, 0, 0, 0, 114, 0, 0, 0, 0, 0, 0, 0, 216, 9, 0, 0, 13, 0, 0, 0, 222, 0, 0, 0, 3, 0, 0, 0, 115, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 232, 9, 0, 0, 223, 0, 0, 0, 224, 0, 0, 0, 14, 0, 0, 0, 9, 0, 0, 0, 116, 0, 0, 0, 0, 0, 0, 0, 248, 9, 0, 0, 13, 0, 0, 0, 225, 0, 0, 0, 74, 0, 0, 0, 12, 0, 0, 0, 1, 0, 0, 0, 5, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 8, 10, 0, 0, 226, 0, 0, 0, 227, 0, 0, 0, 15, 0, 0, 0, 10, 0, 0, 0, 117, 0, 0, 0, 0, 0, 0, 0, 24, 10, 0, 0, 53, 0, 0, 0, 228, 0, 0, 0, 69, 0, 0, 0, 0, 0, 0, 0, 40, 10, 0, 0, 229, 0, 0, 0, 230, 0, 0, 0, 70, 0, 0, 0, 0, 0, 0, 0, 56, 10, 0, 0, 231, 0, 0, 0, 232, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 72, 10, 0, 0, 233, 0, 0, 0, 234, 0, 0, 0, 16, 0, 0, 0, 11, 0, 0, 0, 118, 0, 0, 0, 0, 0, 0, 0, 120, 10, 0, 0, 135, 0, 0, 0, 235, 0, 0, 0, 75, 0, 0, 0, 76, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 104, 10, 0, 0, 135, 0, 0, 0, 236, 0, 0, 0, 77, 0, 0, 0, 78, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 88, 10, 0, 0, 135, 0, 0, 0, 237, 0, 0, 0, 37, 0, 0, 0, 38, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 136, 10, 0, 0, 238, 0, 0, 0, 239, 0, 0, 0, 17, 0, 0, 0, 12, 0, 0, 0, 119, 0, 0, 0, 0, 0, 0, 0, 152, 10, 0, 0, 240, 0, 0, 0, 241, 0, 0, 0, 33, 0, 0, 0, 34, 0, 0, 0, 107, 0, 0, 0, 0, 0, 0, 0, 160, 10, 0, 0, 242, 0, 0, 0, 243, 0, 0, 0, 0, 0, 0, 0, 176, 10, 0, 0, 244, 0, 0, 0, 245, 0, 0, 0, 65, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 108, 0, 0, 0, 109, 0, 0, 0, 103, 0, 0, 0, 120, 0, 0, 0, 121, 0, 0, 0, 104, 0, 0, 0, 68, 0, 0, 0, 69, 0, 0, 0, 105, 0, 0, 0, 32, 0, 0, 0, 255, 255, 255, 255, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 108, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 35, 0, 0, 0, 36, 0, 0, 0, 225, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 200, 10, 0, 0, 246, 0, 0, 0, 247, 0, 0, 0, 248, 0, 0, 0, 249, 0, 0, 0, 37, 0, 0, 0, 4, 0, 0, 0, 18, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 240, 10, 0, 0, 246, 0, 0, 0, 250, 0, 0, 0, 248, 0, 0, 0, 249, 0, 0, 0, 37, 0, 0, 0, 5, 0, 0, 0, 19, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 32, 11, 0, 0, 246, 0, 0, 0, 251, 0, 0, 0, 248, 0, 0, 0, 249, 0, 0, 0, 37, 0, 0, 0, 6, 0, 0, 0, 20, 0, 0, 0, 73, 0, 0, 0, 123, 32, 118, 97, 114, 32, 115, 101, 108, 102, 32, 61, 32, 77, 111, 100, 117, 108, 101, 91, 39, 103, 101, 116, 67, 97, 99, 104, 101, 39, 93, 40, 77, 111, 100, 117, 108, 101, 91, 39, 67, 111, 110, 99, 114, 101, 116, 101, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 39, 93, 41, 91, 36, 48, 93, 59, 32, 105, 102, 32, 40, 33, 115, 101, 108, 102, 46, 104, 97, 115, 79, 119, 110, 80, 114, 111, 112, 101, 114, 116, 121, 40, 39, 97, 100, 100, 83, 105, 110, 103, 108, 101, 82, 101, 115, 117, 108, 116, 39, 41, 41, 32, 116, 104, 114, 111, 119, 32, 39, 97, 32, 74, 83, 73, 109, 112, 108, 101, 109, 101, 110, 116, 97, 116, 105, 111, 110, 32, 109, 117, 115, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 32, 97, 108, 108, 32, 102, 117, 110, 99, 116, 105, 111, 110, 115, 44, 32, 121, 111, 117, 32, 102, 111, 114, 103, 111, 116, 32, 67, 111, 110, 99, 114, 101, 116, 101, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 58, 58, 97, 100, 100, 83, 105, 110, 103, 108, 101, 82, 101, 115, 117, 108, 116, 46, 39, 59, 32, 114, 101, 116, 117, 114, 110, 32, 115, 101, 108, 102, 91, 39, 97, 100, 100, 83, 105, 110, 103, 108, 101, 82, 101, 115, 117, 108, 116, 39, 93, 40, 36, 49, 44, 36, 50, 44, 36, 51, 44, 36, 52, 44, 36, 53, 44, 36, 54, 44, 36, 55, 41, 59, 32, 125, 0, 50, 57, 67, 111, 110, 99, 114, 101, 116, 101, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 52, 67, 108, 111, 115, 101, 115, 116, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 49, 57, 98, 116, 71, 104, 111, 115, 116, 80, 97, 105, 114, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 53, 98, 116, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 108, 108], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE);
      allocate([98, 97, 99, 107, 0, 50, 48, 98, 116, 68, 101, 102, 97, 117, 108, 116, 77, 111, 116, 105, 111, 110, 83, 116, 97, 116, 101, 0, 49, 51, 98, 116, 77, 111, 116, 105, 111, 110, 83, 116, 97, 116, 101, 0, 49, 56, 98, 116, 86, 101, 104, 105, 99, 108, 101, 82, 97, 121, 99, 97, 115, 116, 101, 114, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 55, 67, 108, 111, 115, 101, 115, 116, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 48, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 83, 111, 102, 116, 66, 111, 100, 121, 77, 97, 116, 101, 114, 105, 97, 108, 68, 97, 116, 97, 0, 83, 111, 102, 116, 66, 111, 100, 121, 78, 111, 100, 101, 68, 97, 116, 97, 0, 83, 111, 102, 116, 66, 111, 100, 121, 76, 105, 110, 107, 68, 97, 116, 97, 0, 83, 111, 102, 116, 66, 111, 100, 121, 70, 97, 99, 101, 68, 97, 116, 97, 0, 83, 111, 102, 116, 66, 111, 100, 121, 84, 101, 116, 114, 97, 68, 97, 116, 97, 0, 83, 111, 102, 116, 82, 105, 103, 105, 100, 65, 110, 99, 104, 111, 114, 68, 97, 116, 97, 0, 102, 108, 111, 97, 116, 0, 83, 111, 102, 116, 66, 111, 100, 121, 80, 111, 115, 101, 68, 97, 116, 97, 0, 83, 111, 102, 116, 66, 111, 100, 121, 67, 108, 117, 115, 116, 101, 114, 68, 97, 116, 97, 0, 105, 110, 116, 0, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 74, 111, 105, 110, 116, 68, 97, 116, 97, 0, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 49, 48, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 0, 78, 49, 48, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 49, 53, 82, 97, 121, 70, 114, 111, 109, 84, 111, 67, 97, 115, 116, 101, 114, 69, 0, 78, 54, 98, 116, 68, 98, 118, 116, 56, 73, 67, 111, 108, 108, 105, 100, 101, 69, 0, 78, 49, 48, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 53, 74, 111, 105, 110, 116, 69, 0, 78, 49, 48, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 54, 67, 74, 111, 105, 110, 116, 69, 0, 83, 111, 102, 116, 66, 111, 100, 121, 0, 50, 52, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 67, 111, 108, 108, 105, 115, 105, 111, 110, 83, 104, 97, 112, 101, 0, 98, 116, 67, 111, 110, 118, 101, 120, 73, 110, 116, 101, 114, 110, 97, 108, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 83, 79, 70, 84, 67, 76, 85, 83, 84, 69, 82, 0, 50, 55, 98, 116, 83, 111, 102, 116, 67, 108, 117, 115, 116, 101, 114, 67, 111, 108, 108, 105, 115, 105, 111, 110, 83, 104, 97, 112, 101, 0, 78, 49, 53, 98, 116, 83, 111, 102, 116, 67, 111, 108, 108, 105, 100, 101, 114, 115, 49, 50, 67, 111, 108, 108, 105, 100, 101, 67, 76, 95, 82, 83, 69, 0, 78, 49, 53, 98, 116, 83, 111, 102, 116, 67, 111, 108, 108, 105, 100, 101, 114, 115, 49, 49, 67, 108, 117, 115, 116, 101, 114, 66, 97, 115, 101, 69, 0, 78, 49, 53, 98, 116, 83, 111, 102, 116, 67, 111, 108, 108, 105, 100, 101, 114, 115, 49, 51, 67, 111, 108, 108, 105, 100, 101, 83, 68, 70, 95, 82, 83, 69, 0, 78, 49, 53, 98, 116, 83, 111, 102, 116, 67, 111, 108, 108, 105, 100, 101, 114, 115, 49, 50, 67, 111, 108, 108, 105, 100, 101, 86, 70, 95, 83, 83, 69, 0, 78, 49, 53, 98, 116, 83, 111, 102, 116, 67, 111, 108, 108, 105, 100, 101, 114, 115, 49, 50, 67, 111, 108, 108, 105, 100, 101, 67, 76, 95, 83, 83, 69, 0, 52, 49, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 82, 105, 103, 105, 100, 66, 111, 100, 121, 67, 111, 108, 108, 105, 115, 105, 111, 110, 67, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 0, 78, 51, 53, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 55, 83, 119, 97, 112, 112, 101, 100, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 51, 48, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 0, 78, 51, 53, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 50, 57, 98, 116, 83, 111, 102, 116, 82, 105, 103, 105, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 50, 56, 98, 116, 83, 111, 102, 116, 83, 111, 102, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 50, 57, 98, 116, 83, 111, 102, 116, 82, 105, 103, 105, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 48, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 51, 98, 116, 83, 111, 102, 116, 83, 105, 110, 103, 108, 101, 82, 97, 121, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 51, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 82, 97, 121, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 52, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 65, 97, 98, 98, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 52, 98, 116, 83, 111, 102, 116, 82, 105, 103, 105, 100, 68, 121, 110, 97, 109, 105, 99, 115, 87, 111, 114, 108, 100, 0, 50, 56, 98, 116, 83, 111, 102, 116, 83, 111, 102, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 51, 98, 116, 68, 101, 102, 97, 117, 108, 116, 83, 111, 102, 116, 66, 111, 100, 121, 83, 111, 108, 118, 101, 114, 0, 49, 54, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 83, 111, 108, 118, 101, 114, 0, 84, 114, 105, 97, 110, 103, 108, 101, 0, 49, 53, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 83, 104, 97, 112, 101, 0, 78, 49, 50, 98, 116, 67, 111, 110, 118, 101, 120, 67, 97, 115, 116, 49, 48, 67, 97, 115, 116, 82, 101, 115, 117, 108, 116, 69, 0, 90, 78, 51, 53, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 50, 49, 99, 97, 108, 99, 117, 108, 97, 116, 101, 84, 105, 109, 101, 79, 102, 73, 109, 112, 97, 99, 116, 69, 80, 49, 55, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 83, 49, 95, 82, 75, 49, 54, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 73, 110, 102, 111, 80, 49, 54, 98, 116, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 69, 51, 49, 76, 111, 99, 97, 108, 84, 114, 105, 97, 110, 103, 108, 101, 83, 112, 104, 101, 114, 101, 67, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 54, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 0, 51, 53, 98, 116, 83, 111, 102, 116, 66, 111, 100, 121, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 52, 51, 98, 116, 75, 105, 110, 101, 109, 97, 116, 105, 99, 67, 108, 111, 115, 101, 115, 116, 78, 111, 116, 77, 101, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 51, 48, 98, 116, 75, 105, 110, 101, 109, 97, 116, 105, 99, 67, 104, 97, 114, 97, 99, 116, 101, 114, 67, 111, 110, 116, 114, 111, 108, 108, 101, 114, 0, 51, 48, 98, 116, 67, 104, 97, 114, 97, 99, 116, 101, 114, 67, 111, 110, 116, 114, 111, 108, 108, 101, 114, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 49, 55, 98, 116, 65, 99, 116, 105, 111, 110, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 98, 116, 67, 111, 110, 101, 84, 119, 105, 115, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 68, 97, 116, 97, 0, 49, 55, 98, 116, 84, 121, 112, 101, 100, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 49, 51, 98, 116, 84, 121, 112, 101, 100, 79, 98, 106, 101, 99, 116, 0, 50, 49, 98, 116, 67, 111, 110, 101, 84, 119, 105, 115, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 68, 97, 116, 97, 0, 50, 51, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 83, 112, 114, 105, 110, 103, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 68, 97, 116, 97, 0, 50, 57, 98, 116, 71, 101, 110, 101, 114, 105, 99, 54, 68, 111, 102, 83, 112, 114, 105, 110, 103, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 72, 105, 110, 103, 101, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 49, 55, 98, 116, 72, 105, 110, 103, 101, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 80, 111, 105, 110, 116, 50, 80, 111, 105, 110, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 50, 51, 98, 116, 80, 111, 105, 110, 116, 50, 80, 111, 105, 110, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 51, 53, 98, 116, 83, 101, 113, 117, 101, 110, 116, 105, 97, 108, 73, 109, 112, 117, 108, 115, 101, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 83, 111, 108, 118, 101, 114, 0, 49, 56, 98, 116, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 83, 111, 108, 118, 101, 114, 0, 98, 116, 83, 108, 105, 100, 101, 114, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 68, 97, 116, 97, 0, 49, 56, 98, 116, 83, 108, 105, 100, 101, 114, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 0, 98, 116, 84, 121, 112, 101, 100, 67, 111, 110, 115, 116, 114, 97, 105, 110, 116, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 51, 52, 98, 116, 67, 108, 111, 115, 101, 115, 116, 78, 111, 116, 77, 101, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 98, 116, 68, 121, 110, 97, 109, 105, 99, 115, 87, 111, 114, 108, 100, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 50, 51, 98, 116, 68, 105, 115, 99, 114, 101, 116, 101, 68, 121, 110, 97, 109, 105, 99, 115, 87, 111, 114, 108, 100, 0, 49, 53, 98, 116, 68, 121, 110, 97, 109, 105, 99, 115, 87, 111, 114, 108, 100, 0, 50, 55, 73, 110, 112, 108, 97, 99, 101, 83, 111, 108, 118, 101, 114, 73, 115, 108, 97, 110, 100, 67, 97, 108, 108, 98, 97, 99, 107, 0, 78, 50, 53, 98, 116, 83, 105, 109, 117, 108, 97, 116, 105, 111, 110, 73, 115, 108, 97, 110, 100, 77, 97, 110, 97, 103, 101, 114, 49, 52, 73, 115, 108, 97, 110, 100, 67, 97, 108, 108, 98, 97, 99, 107, 69, 0, 98, 116, 82, 105, 103, 105, 100, 66, 111, 100, 121, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 49, 49, 98, 116, 82, 105, 103, 105, 100, 66, 111, 100, 121, 0, 49, 54, 98, 116, 82, 97, 121, 99, 97, 115, 116, 86, 101, 104, 105, 99, 108, 101, 0, 50, 53, 98, 116, 68, 101, 102, 97, 117, 108, 116, 86, 101, 104, 105, 99, 108, 101, 82, 97, 121, 99, 97, 115, 116, 101, 114, 0, 50, 48, 98, 116, 65, 120, 105, 115, 83, 119, 101, 101, 112, 51, 73, 110, 116, 101, 114, 110, 97, 108, 73, 116, 69, 0, 50, 49, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 49, 50, 98, 116, 65, 120, 105, 115, 83, 119, 101, 101, 112, 51, 0, 49, 53, 98, 116, 78, 117, 108, 108, 80, 97, 105, 114, 67, 97, 99, 104, 101, 0, 50, 50, 98, 116, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 99, 104, 101, 0, 49, 56, 98, 116, 68, 98, 118, 116, 84, 114, 101, 101, 67, 111, 108, 108, 105, 100, 101, 114, 0, 50, 48, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 65, 97, 98, 98, 84, 101, 115, 116, 101, 114, 0, 49, 57, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 82, 97, 121, 84, 101, 115, 116, 101, 114, 0, 49, 54, 98, 116, 68, 98, 118, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 0, 90, 78, 50, 56, 98, 116, 72, 97, 115, 104, 101, 100, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 99, 104, 101, 49, 57, 99, 108, 101, 97, 110, 80, 114, 111, 120, 121, 70, 114, 111, 109, 80, 97, 105, 114, 115, 69, 80, 49, 55, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 80, 114, 111, 120, 121, 80, 49, 50, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 69, 49, 55, 67, 108, 101, 97, 110, 80, 97, 105, 114, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 55, 98, 116, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 50, 56, 98, 116, 72, 97, 115, 104, 101, 100, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 99, 104, 101, 51, 55, 114, 101, 109, 111, 118, 101, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 115, 67, 111, 110, 116, 97, 105, 110, 105, 110, 103, 80, 114, 111, 120, 121, 69, 80, 49, 55, 98, 116, 66, 114, 111, 97, 100, 112, 104, 97, 115, 101, 80, 114, 111, 120, 121, 80, 49, 50, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 69, 49, 56, 82, 101, 109, 111, 118, 101, 80, 97, 105, 114, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 56, 98, 116, 72, 97, 115, 104, 101, 100, 79, 118, 101, 114, 108, 97, 112, 112, 105, 110, 103, 80, 97, 105, 114, 67, 97, 99, 104, 101, 0, 50, 51, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 80, 97, 105, 114, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 49, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 0, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 49, 55, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 114, 97, 121, 84, 101, 115, 116, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 50, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 69, 49, 53, 76, 111, 99, 97, 108, 73, 110, 102, 111, 65, 100, 100, 101, 114, 50, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 114, 97, 121, 84, 101, 115, 116, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 50, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 69, 57, 82, 97, 121, 84, 101, 115, 116, 101, 114, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 114, 97, 121, 84, 101, 115, 116, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 50, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 69, 50, 57, 66, 114, 105, 100, 103, 101, 84, 114, 105, 97, 110, 103, 108, 101, 82, 97, 121, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 95, 48, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 49, 114, 97, 121, 84, 101, 115, 116, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 50, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 49, 55, 82, 97, 121, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 69, 50, 57, 66, 114, 105, 100, 103, 101, 84, 114, 105, 97, 110, 103, 108, 101, 82, 97, 121, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 57, 98, 116, 83, 105, 110, 103, 108, 101, 82, 97, 121, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 55, 68, 101, 98, 117, 103, 68, 114, 97, 119, 99, 97, 108, 108, 98, 97, 99, 107, 0, 1, 79, 118, 101, 114, 102, 108, 111, 119, 32, 105, 110, 32, 65, 65, 66, 66, 44, 32, 111, 98, 106, 101, 99, 116, 32, 114, 101, 109, 111, 118, 101, 100, 32, 102, 114, 111, 109, 32, 115, 105, 109, 117, 108, 97, 116, 105, 111, 110, 0, 73, 102, 32, 121, 111, 117, 32, 99, 97, 110, 32, 114, 101, 112, 114, 111, 100, 117, 99, 101, 32, 116, 104, 105, 115, 44, 32, 112, 108, 101, 97, 115, 101, 32, 101, 109, 97, 105, 108, 32, 98, 117, 103, 115, 64, 99, 111, 110, 116, 105, 110, 117, 111, 117, 115, 112, 104, 121, 115, 105, 99, 115, 46, 99, 111, 109, 10, 0, 80, 108, 101, 97, 115, 101, 32, 105, 110, 99, 108, 117, 100, 101, 32, 97, 98, 111, 118, 101, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 44, 32, 121, 111, 117, 114, 32, 80, 108, 97, 116, 102, 111, 114, 109, 44, 32, 118, 101, 114, 115, 105, 111, 110, 32, 111, 102, 32, 79, 83, 46, 10, 0, 84, 104, 97, 110, 107, 115, 46, 10, 0, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 0, 90, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 53, 111, 98, 106, 101, 99, 116, 81, 117, 101, 114, 121, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 80, 75, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 53, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 50, 48, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 102, 69, 78, 50, 50, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 76, 101, 97, 102, 67, 97, 108, 108, 98, 97, 99, 107, 49, 50, 80, 114, 111, 99, 101, 115, 115, 67, 104, 105, 108, 100, 69, 105, 83, 53, 95, 80, 75, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 83, 104, 97, 112, 101, 69, 49, 52, 76, 111, 99, 97, 108, 73, 110, 102, 111, 65, 100, 100, 101, 114, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 53, 111, 98, 106, 101, 99, 116, 81, 117, 101, 114, 121, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 80, 75, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 53, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 50, 48, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 102, 69, 50, 50, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 76, 101, 97, 102, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 53, 111, 98, 106, 101, 99, 116, 81, 117, 101, 114, 121, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 80, 75, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 53, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 50, 48, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 102, 69, 51, 50, 66, 114, 105, 100, 103, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 110, 118, 101, 120, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 95, 48, 0, 90, 78, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 87, 111, 114, 108, 100, 50, 53, 111, 98, 106, 101, 99, 116, 81, 117, 101, 114, 121, 83, 105, 110, 103, 108, 101, 73, 110, 116, 101, 114, 110, 97, 108, 69, 80, 75, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 53, 95, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 82, 78, 83, 95, 50, 48, 67, 111, 110, 118, 101, 120, 82, 101, 115, 117, 108, 116, 67, 97, 108, 108, 98, 97, 99, 107, 69, 102, 69, 51, 50, 66, 114, 105, 100, 103, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 110, 118, 101, 120, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 49, 98, 116, 83, 105, 110, 103, 108, 101, 83, 119, 101, 101, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 51, 98, 116, 66, 114, 105, 100, 103, 101, 100, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 0, 50, 51, 98, 116, 83, 105, 110, 103, 108, 101, 67, 111, 110, 116, 97, 99, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 51, 49, 98, 116, 68, 101, 102, 97, 117, 108, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 67, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 0, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 67, 111, 110, 102, 105, 103, 117, 114, 97, 116, 105, 111, 110, 0, 78, 51, 49, 98, 116, 67, 111, 110, 118, 101, 120, 80, 108, 97, 110, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 50, 54, 98, 116, 66, 111, 120, 66, 111, 120, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 52, 98, 116, 83, 112, 104, 101, 114, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 50, 98, 116, 83, 112, 104, 101, 114, 101, 83, 112, 104, 101, 114, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 49, 54, 98, 116, 69, 109, 112, 116, 121, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 50, 56, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 55, 83, 119, 97, 112, 112, 101, 100, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 54, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 50, 56, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 55, 83, 119, 97, 112, 112, 101, 100, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 78, 51, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 49, 54, 98, 116, 69, 109, 112, 116, 121, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 49, 51, 98, 116, 71, 104, 111, 115, 116, 79, 98, 106, 101, 99, 116, 0, 50, 52, 98, 116, 80, 97, 105, 114, 67, 97, 99, 104, 105, 110, 103, 71, 104, 111, 115, 116, 79, 98, 106, 101, 99, 116, 0, 49, 54, 98, 116, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 0, 78, 51, 54, 98, 116, 68, 105, 115, 99, 114, 101, 116, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 68, 101, 116, 101, 99, 116, 111, 114, 73, 110, 116, 101, 114, 102, 97, 99, 101, 54, 82, 101, 115, 117, 108, 116, 69, 0, 50, 53, 98, 116, 83, 105, 109, 117, 108, 97, 116, 105, 111, 110, 73, 115, 108, 97, 110, 100, 77, 97, 110, 97, 103, 101, 114, 0, 51, 50, 98, 116, 83, 112, 104, 101, 114, 101, 83, 112, 104, 101, 114, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 51, 52, 98, 116, 83, 112, 104, 101, 114, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 50, 83, 112, 104, 101, 114, 101, 84, 114, 105, 97, 110, 103, 108, 101, 68, 101, 116, 101, 99, 116, 111, 114, 0, 51, 54, 98, 116, 68, 105, 115, 99, 114, 101, 116, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 68, 101, 116, 101, 99, 116, 111, 114, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 66, 111, 120, 0, 49, 48, 98, 116, 66, 111, 120, 83, 104, 97, 112, 101, 0, 90, 78, 75, 50, 50, 98, 116, 66, 118, 104, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 49, 57, 112, 114, 111, 99, 101, 115, 115, 65, 108, 108, 84, 114, 105, 97, 110, 103, 108, 101, 115, 69, 80, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 50, 49, 77, 121, 78, 111, 100, 101, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 49, 98, 116, 78, 111, 100, 101, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 66, 86, 72, 84, 82, 73, 65, 78, 71, 76, 69, 77, 69, 83, 72, 0, 50, 50, 98, 116, 66, 118, 104, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 0, 90, 78, 50, 50, 98, 116, 66, 118, 104, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 49, 52, 112, 101, 114, 102, 111, 114, 109, 82, 97, 121, 99, 97, 115, 116, 69, 80, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 50, 49, 77, 121, 78, 111, 100, 101, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 50, 50, 98, 116, 66, 118, 104, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 49, 55, 112, 101, 114, 102, 111, 114, 109, 67, 111, 110, 118, 101, 120, 99, 97, 115, 116, 69, 80, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 83, 52, 95, 83, 52, 95, 69, 50, 49, 77, 121, 78, 111, 100, 101, 79, 118, 101, 114, 108, 97, 112, 67, 97, 108, 108, 98, 97, 99, 107, 0, 98, 116, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 0, 49, 52, 98, 116, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 0, 67, 97, 112, 115, 117, 108, 101, 88, 0, 49, 53, 98, 116, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 88, 0, 67, 97, 112, 115, 117, 108, 101, 90, 0, 49, 53, 98, 116, 67, 97, 112, 115, 117, 108, 101, 83, 104, 97, 112, 101, 90, 0, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 49, 54, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 83, 104, 97, 112, 101, 0, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 83, 104, 97, 112, 101, 67, 104, 105, 108, 100, 68, 97, 116, 97, 0, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 67, 111, 109, 112, 111, 117, 110, 100, 0, 49, 53, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 83, 104, 97, 112, 101, 0, 49, 52, 98, 116, 67, 111, 110, 99, 97, 118, 101, 83, 104, 97, 112, 101, 0, 98, 116, 67, 111, 110, 101, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 67, 111, 110, 101, 0, 49, 49, 98, 116, 67, 111, 110, 101, 83, 104, 97, 112, 101, 0, 67, 111, 110, 101, 90, 0, 49, 50, 98, 116, 67, 111, 110, 101, 83, 104, 97, 112, 101, 90, 0, 67, 111, 110, 101, 88, 0, 49, 50, 98, 116, 67, 111, 110, 101, 83, 104, 97, 112, 101, 88, 0, 98, 116, 67, 111, 110, 118, 101, 120, 72, 117, 108, 108, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 67, 111, 110, 118, 101, 120, 0, 49, 55, 98, 116, 67, 111, 110, 118, 101, 120, 72, 117, 108, 108, 83, 104, 97, 112, 101, 0, 50, 49, 98, 116, 67, 111, 110, 118, 101, 120, 73, 110, 116, 101, 114, 110, 97, 108, 83, 104, 97, 112, 101, 0, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 0, 50, 54, 76, 111, 99, 97, 108, 83, 117, 112, 112, 111, 114, 116, 86, 101, 114, 116, 101, 120, 67, 97, 108, 108, 98, 97, 99, 107, 0, 67, 111, 110, 118, 101, 120, 84, 114, 105, 109, 101, 115, 104, 0, 50, 53, 98, 116, 67, 111, 110, 118, 101, 120, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 0, 98, 116, 67, 121, 108, 105, 110, 100, 101, 114, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 67, 121, 108, 105, 110, 100, 101, 114, 89, 0, 49, 53, 98, 116, 67, 121, 108, 105, 110, 100, 101, 114, 83, 104, 97, 112, 101, 0, 67, 121, 108, 105, 110, 100, 101, 114, 88, 0, 49, 54, 98, 116, 67, 121, 108, 105, 110, 100, 101, 114, 83, 104, 97, 112, 101, 88, 0, 67, 121, 108, 105, 110, 100, 101, 114, 90, 0, 49, 54, 98, 116, 67, 121, 108, 105, 110, 100, 101, 114, 83, 104, 97, 112, 101, 90, 0, 72, 69, 73, 71, 72, 84, 70, 73, 69, 76, 68, 0, 50, 53, 98, 116, 72, 101, 105, 103, 104, 116, 102, 105, 101, 108, 100, 84, 101, 114, 114, 97, 105, 110, 83, 104, 97, 112, 101, 0, 49, 52, 98, 116, 79, 112, 116, 105, 109, 105, 122, 101, 100, 66, 118, 104, 0, 90, 78, 49, 52, 98, 116, 79, 112, 116, 105, 109, 105, 122, 101, 100, 66, 118, 104, 53, 98, 117, 105, 108, 100, 69, 80, 50, 51, 98, 116, 83, 116, 114, 105, 100, 105, 110, 103, 77, 101, 115, 104, 73, 110, 116, 101, 114, 102, 97, 99, 101, 98, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 50, 48, 78, 111, 100, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 49, 52, 98, 116, 79, 112, 116, 105, 109, 105, 122, 101, 100, 66, 118, 104, 53, 98, 117, 105, 108, 100, 69, 80, 50, 51, 98, 116, 83, 116, 114, 105, 100, 105, 110, 103, 77, 101, 115, 104, 73, 110, 116, 101, 114, 102, 97, 99, 101, 98, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 50, 57, 81, 117, 97, 110, 116, 105, 122, 101, 100, 78, 111, 100, 101, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 51, 98, 116, 80, 111, 108, 121, 104, 101, 100, 114, 97, 108, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 0, 51, 52, 98, 116, 80, 111, 108, 121, 104, 101, 100, 114, 97, 108, 67, 111, 110, 118, 101, 120, 65, 97, 98, 98, 67, 97, 99, 104, 105, 110, 103, 83, 104, 97, 112, 101, 0, 83, 80, 72, 69, 82, 69, 0, 49, 51, 98, 116, 83, 112, 104, 101, 114, 101, 83, 104, 97, 112, 101, 0, 98, 116, 83, 116, 97, 116, 105, 99, 80, 108, 97, 110, 101, 83, 104, 97, 112, 101, 68, 97, 116, 97, 0, 83, 84, 65, 84, 73, 67, 80, 76, 65, 78, 69, 0, 49, 56, 98, 116, 83, 116, 97, 116, 105, 99, 80, 108, 97, 110, 101, 83, 104, 97, 112, 101, 0, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 0, 51, 49, 98, 116, 73, 110, 116, 101, 114, 110, 97, 108, 84, 114, 105, 97, 110, 103, 108, 101, 73, 110, 100, 101, 120, 67, 97, 108, 108, 98, 97, 99, 107, 0, 49, 52, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 0, 50, 49, 83, 117, 112, 112, 111, 114, 116, 86, 101, 114, 116, 101, 120, 67, 97, 108, 108, 98, 97, 99, 107, 0, 90, 78, 75, 49, 57, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 49, 57, 112, 114, 111, 99, 101, 115, 115, 65, 108, 108, 84, 114, 105, 97, 110, 103, 108, 101, 115, 69, 80, 49, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 82, 75, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 52, 95, 69, 49, 54, 70, 105, 108, 116, 101, 114, 101, 100, 67, 97, 108, 108, 98, 97, 99, 107, 0, 84, 82, 73, 65, 78, 71, 76, 69, 77, 69, 83, 72, 0, 49, 57, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 77, 101, 115, 104, 83, 104, 97, 112, 101, 0, 49, 54, 98, 116, 80, 111, 105, 110, 116, 67, 111, 108, 108, 101, 99, 116, 111, 114, 0, 50, 55, 98, 116, 67, 111, 110, 116, 105, 110, 117, 111, 117, 115, 67, 111, 110, 118, 101, 120, 67, 111, 108, 108, 105, 115, 105, 111, 110, 0, 49, 50, 98, 116, 67, 111, 110, 118, 101, 120, 67, 97, 115, 116, 0, 49, 53, 98, 116, 71, 106, 107, 67, 111, 110, 118, 101, 120, 67, 97, 115, 116, 0, 51, 48, 98, 116, 71, 106, 107, 69, 112, 97, 80, 101, 110, 101, 116, 114, 97, 116, 105, 111, 110, 68, 101, 112, 116, 104, 83, 111, 108, 118, 101, 114, 0, 51, 48, 98, 116, 67, 111, 110, 118, 101, 120, 80, 101, 110, 101, 116, 114, 97, 116, 105, 111, 110, 68, 101, 112, 116, 104, 83, 111, 108, 118, 101, 114, 0, 49, 55, 98, 116, 71, 106, 107, 80, 97, 105, 114, 68, 101, 116, 101, 99, 116, 111, 114, 0, 90, 78, 51, 51, 98, 116, 77, 105, 110, 107, 111, 119, 115, 107, 105, 80, 101, 110, 101, 116, 114, 97, 116, 105, 111, 110, 68, 101, 112, 116, 104, 83, 111, 108, 118, 101, 114, 49, 50, 99, 97, 108, 99, 80, 101, 110, 68, 101, 112, 116, 104, 69, 82, 50, 50, 98, 116, 86, 111, 114, 111, 110, 111, 105, 83, 105, 109, 112, 108, 101, 120, 83, 111, 108, 118, 101, 114, 80, 75, 49, 51, 98, 116, 67, 111, 110, 118, 101, 120, 83, 104, 97, 112, 101, 83, 52, 95, 82, 75, 49, 49, 98, 116, 84, 114, 97, 110, 115, 102, 111, 114, 109, 83, 55, 95, 82, 57, 98, 116, 86, 101, 99, 116, 111, 114, 51, 83, 57, 95, 83, 57, 95, 80, 49, 50, 98, 116, 73, 68, 101, 98, 117, 103, 68, 114, 97, 119, 69, 50, 48, 98, 116, 73, 110, 116, 101, 114, 109, 101, 100, 105, 97, 116, 101, 82, 101, 115, 117, 108, 116, 0, 51, 51, 98, 116, 77, 105, 110, 107, 111, 119, 115, 107, 105, 80, 101, 110, 101, 116, 114, 97, 116, 105, 111, 110, 68, 101, 112, 116, 104, 83, 111, 108, 118, 101, 114, 0, 50, 53, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 82, 97, 121, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 56, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 67, 111, 110, 118, 101, 120, 99, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 50, 98, 116, 83, 117, 98, 115, 105, 109, 112, 108, 101, 120, 67, 111, 110, 118, 101, 120, 67, 97, 115, 116, 0, 49, 50, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 0, 98, 116, 79, 112, 116, 105, 109, 105, 122, 101, 100, 66, 118, 104, 78, 111, 100, 101, 68, 97, 116, 97, 0, 98, 116, 81, 117, 97, 110, 116, 105, 122, 101, 100, 66, 118, 104, 78, 111, 100, 101, 68, 97, 116, 97, 0, 98, 116, 66, 118, 104, 83, 117, 98, 116, 114, 101, 101, 73, 110, 102, 111, 68, 97, 116, 97, 0, 98, 116, 81, 117, 97, 110, 116, 105, 122, 101, 100, 66, 118, 104, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 49, 52, 98, 116, 81, 117, 97, 110, 116, 105, 122, 101, 100, 66, 118, 104, 0, 51, 48, 98, 116, 65, 99, 116, 105, 118, 97, 116, 105, 110, 103, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 54, 98, 116, 66, 111, 120, 66, 111, 120, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 49, 54, 98, 116, 66, 111, 120, 66, 111, 120, 68, 101, 116, 101, 99, 116, 111, 114, 0, 50, 50, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 76, 101, 97, 102, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 56, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 51, 48, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 109, 112, 111, 117, 110, 100, 76, 101, 97, 102, 67, 97, 108, 108, 98, 97, 99, 107, 0, 51, 54, 98, 116, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 109, 112, 111, 117, 110, 100, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 90, 78, 51, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 50, 49, 99, 97, 108, 99, 117, 108, 97, 116, 101, 84, 105, 109, 101, 79, 102, 73, 109, 112, 97, 99, 116, 69, 80, 49, 55, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 83, 49, 95, 82, 75, 49, 54, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 73, 110, 102, 111, 80, 49, 54, 98, 116, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 69, 51, 49, 76, 111, 99, 97, 108, 84, 114, 105, 97, 110, 103, 108, 101, 83, 112, 104, 101, 114, 101, 67, 97, 115, 116, 67, 97, 108, 108, 98, 97, 99, 107, 0, 50, 52, 98, 116, 67, 111, 110, 118, 101, 120, 84, 114, 105, 97, 110, 103, 108, 101, 67, 97, 108, 108, 98, 97, 99, 107, 0, 51, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 99, 97, 118, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 52, 98, 116, 80, 101, 114, 116, 117, 114, 98, 101, 100, 67, 111, 110, 116, 97, 99, 116, 82, 101, 115, 117, 108, 116, 0, 90, 78, 50, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 118, 101, 120, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 54, 112, 114, 111, 99, 101, 115, 115, 67, 111, 108, 108, 105, 115, 105, 111, 110, 69, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 83, 50, 95, 82, 75, 49, 54, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 73, 110, 102, 111, 80, 49, 54, 98, 116, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 69, 50, 49, 98, 116, 87, 105, 116, 104, 111, 117, 116, 77, 97, 114, 103, 105, 110, 82, 101, 115, 117, 108, 116, 0, 90, 78, 50, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 118, 101, 120, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 54, 112, 114, 111, 99, 101, 115, 115, 67, 111, 108, 108, 105, 115, 105, 111, 110, 69, 80, 75, 50, 52, 98, 116, 67, 111, 108, 108, 105, 115, 105, 111, 110, 79, 98, 106, 101, 99, 116, 87, 114, 97, 112, 112, 101, 114, 83, 50, 95, 82, 75, 49, 54, 98, 116, 68, 105, 115, 112, 97, 116, 99, 104, 101, 114, 73, 110, 102, 111, 80, 49, 54, 98, 116, 77, 97, 110, 105, 102, 111, 108, 100, 82, 101, 115, 117, 108, 116, 69, 49, 51, 98, 116, 68, 117, 109, 109, 121, 82, 101, 115, 117, 108, 116, 0, 50, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 118, 101, 120, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 78, 50, 51, 98, 116, 67, 111, 110, 118, 101, 120, 67, 111, 110, 118, 101, 120, 65, 108, 103, 111, 114, 105, 116, 104, 109, 49, 48, 67, 114, 101, 97, 116, 101, 70, 117, 110, 99, 69, 0, 51, 49, 98, 116, 67, 111, 110, 118, 101, 120, 80, 108, 97, 110, 101, 67, 111, 108, 108, 105, 115, 105, 111, 110, 65, 108, 103, 111, 114, 105, 116, 104, 109, 0, 50, 51, 98, 116, 72, 97, 115, 104, 101, 100, 83, 105, 109, 112, 108, 101, 80, 97, 105, 114, 67, 97, 99, 104, 101, 0, 49, 56, 98, 116, 67, 111, 110, 118, 101, 120, 80, 111, 108, 121, 104, 101, 100, 114, 111, 110, 0, 98, 116, 73, 110, 116, 73, 110, 100, 101, 120, 68, 97, 116, 97, 0, 98, 116, 83, 104, 111, 114, 116, 73, 110, 116, 73, 110, 100, 101, 120, 84, 114, 105, 112, 108, 101, 116, 68, 97, 116, 97, 0, 98, 116, 67, 104, 97, 114, 73, 110, 100, 101, 120, 84, 114, 105, 112, 108, 101, 116, 68, 97, 116, 97, 0, 98, 116, 86, 101, 99, 116, 111, 114, 51, 70, 108, 111, 97, 116, 68, 97, 116, 97, 0, 98, 116, 86, 101, 99, 116, 111, 114, 51, 68, 111, 117, 98, 108, 101, 68, 97, 116, 97, 0, 98, 116, 77, 101, 115, 104, 80, 97, 114, 116, 68, 97, 116, 97, 0, 98, 116, 83, 116, 114, 105, 100, 105, 110, 103, 77, 101, 115, 104, 73, 110, 116, 101, 114, 102, 97, 99, 101, 68, 97, 116, 97, 0, 50, 51, 98, 116, 83, 116, 114, 105, 100, 105, 110, 103, 77, 101, 115, 104, 73, 110, 116, 101, 114, 102, 97, 99, 101, 0, 50, 54, 98, 116, 84, 114, 105, 97, 110, 103, 108, 101, 73, 110, 100, 101, 120, 86, 101, 114, 116, 101, 120, 65, 114, 114, 97, 121, 0, 17, 0, 10, 0, 17, 17, 17, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 15, 10, 17, 17, 17, 3, 10, 7, 0, 1, 19, 9, 11, 11, 0, 0, 9, 6, 11, 0, 0, 11, 0, 6, 17, 0, 0, 0, 17, 17, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 17, 0, 10, 10, 17, 17, 17, 0, 10, 0, 0, 2, 0, 9, 11, 0, 0, 0, 9, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 4, 13, 0, 0, 0, 0, 9, 14, 0, 0, 0, 0, 0, 14, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 0, 15, 0, 0, 0, 0, 9, 16, 0, 0, 0, 0, 0, 16, 0, 0, 16, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 18, 18, 18, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 10, 0, 0, 0, 0, 9, 11, 0, 0, 0, 0, 0, 11, 0, 0, 11, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0, 12, 0, 0, 0, 0, 9, 12, 0, 0, 0, 0, 0, 12, 0, 0, 12, 0, 0, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 45, 43, 32, 32, 32, 48, 88, 48, 120, 0, 40, 110, 117, 108, 108, 41, 0, 45, 48, 88, 43, 48, 88, 32, 48, 88, 45, 48, 120, 43, 48, 120, 32, 48, 120, 0, 105, 110, 102, 0, 73, 78, 70, 0, 110, 97, 110, 0, 78, 65, 78, 0, 46, 0, 84, 33, 34, 25, 13, 1, 2, 3, 17, 75, 28, 12, 16, 4, 11, 29, 18, 30, 39, 104, 110, 111, 112, 113, 98, 32, 5, 6, 15, 19, 20, 21, 26, 8, 22, 7, 40, 36, 23, 24, 9, 10, 14, 27, 31, 37, 35, 131, 130, 125, 38, 42, 43, 60, 61, 62, 63, 67, 71, 74, 77, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 114, 115, 116, 121, 122, 123, 124, 0, 73, 108, 108, 101, 103, 97, 108, 32, 98, 121, 116, 101, 32, 115, 101, 113, 117, 101, 110, 99, 101, 0, 68, 111, 109, 97, 105, 110, 32, 101, 114, 114, 111, 114, 0, 82, 101, 115, 117, 108, 116, 32, 110, 111, 116, 32, 114, 101, 112, 114, 101, 115, 101, 110, 116, 97, 98, 108, 101, 0, 78, 111, 116, 32, 97, 32, 116, 116, 121, 0, 80, 101, 114, 109, 105, 115, 115, 105, 111, 110, 32, 100, 101, 110, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 110, 111, 116, 32, 112, 101, 114, 109, 105, 116, 116, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 102, 105, 108, 101, 32, 111, 114, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 78, 111, 32, 115, 117, 99, 104, 32, 112, 114, 111, 99, 101, 115, 115, 0, 70, 105, 108, 101, 32, 101, 120, 105, 115, 116, 115, 0, 86, 97, 108, 117, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 32, 102, 111, 114, 32, 100, 97, 116, 97, 32, 116, 121, 112, 101, 0, 78, 111, 32, 115, 112, 97, 99, 101, 32, 108, 101, 102, 116, 32, 111, 110, 32, 100, 101, 118, 105, 99, 101, 0, 79, 117, 116, 32, 111, 102, 32, 109, 101, 109, 111, 114, 121, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 98, 117, 115, 121, 0, 73, 110, 116, 101, 114, 114, 117, 112, 116, 101, 100, 32, 115, 121, 115, 116, 101, 109, 32, 99, 97, 108, 108, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 116, 101, 109, 112, 111, 114, 97, 114, 105, 108, 121, 32, 117, 110, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 73, 110, 118, 97, 108, 105, 100, 32, 115, 101, 101, 107, 0, 67, 114, 111, 115, 115, 45, 100, 101, 118, 105, 99, 101, 32, 108, 105, 110, 107, 0, 82, 101, 97, 100, 45, 111, 110, 108, 121, 32, 102, 105, 108, 101, 32, 115, 121, 115, 116, 101, 109, 0, 68, 105, 114, 101, 99, 116, 111, 114, 121, 32, 110, 111, 116, 32, 101, 109, 112, 116, 121, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 112, 101, 101, 114, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 116, 105, 109, 101, 100, 32, 111, 117, 116, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 102, 117, 115, 101, 100, 0, 72, 111, 115, 116, 32, 105, 115, 32, 100, 111, 119, 110, 0, 72, 111, 115, 116, 32, 105, 115, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 65, 100, 100, 114, 101, 115, 115, 32, 105, 110, 32, 117, 115, 101, 0, 66, 114, 111, 107, 101, 110, 32, 112, 105, 112, 101, 0, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 32, 111, 114, 32, 97, 100, 100, 114, 101, 115, 115, 0, 66, 108, 111, 99, 107, 32, 100, 101, 118, 105, 99, 101, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 78, 111, 32, 115, 117, 99, 104, 32, 100, 101, 118, 105, 99, 101, 0, 78, 111, 116, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 73, 115, 32, 97, 32, 100, 105, 114, 101, 99, 116, 111, 114, 121, 0, 84, 101, 120, 116, 32, 102, 105, 108, 101, 32, 98, 117, 115, 121, 0, 69, 120, 101, 99, 32, 102, 111, 114, 109, 97, 116, 32, 101, 114, 114, 111, 114, 0, 73, 110, 118, 97, 108, 105, 100, 32, 97, 114, 103, 117, 109, 101, 110, 116, 0, 65, 114, 103, 117, 109, 101, 110, 116, 32, 108, 105, 115, 116, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 83, 121, 109, 98, 111, 108, 105, 99, 32, 108, 105, 110, 107, 32, 108, 111, 111, 112, 0, 70, 105, 108, 101, 110, 97, 109, 101, 32, 116, 111, 111, 32, 108, 111, 110, 103, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 111, 112, 101, 110, 32, 102, 105, 108, 101, 115, 32, 105, 110, 32, 115, 121, 115, 116, 101, 109, 0, 78, 111, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 66, 97, 100, 32, 102, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 0, 78, 111, 32, 99, 104, 105, 108, 100, 32, 112, 114, 111, 99, 101, 115, 115, 0, 66, 97, 100, 32, 97, 100, 100, 114, 101, 115, 115, 0, 70, 105, 108, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 84, 111, 111, 32, 109, 97, 110, 121, 32, 108, 105, 110, 107, 115, 0, 78, 111, 32, 108, 111, 99, 107, 115, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 82, 101, 115, 111, 117, 114, 99, 101, 32, 100, 101, 97, 100, 108, 111, 99, 107, 32, 119, 111, 117, 108, 100, 32, 111, 99, 99, 117, 114, 0, 83, 116, 97, 116, 101, 32, 110, 111, 116], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 10240);
      allocate([32, 114, 101, 99, 111, 118, 101, 114, 97, 98, 108, 101, 0, 80, 114, 101, 118, 105, 111, 117, 115, 32, 111, 119, 110, 101, 114, 32, 100, 105, 101, 100, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 99, 97, 110, 99, 101, 108, 101, 100, 0, 70, 117, 110, 99, 116, 105, 111, 110, 32, 110, 111, 116, 32, 105, 109, 112, 108, 101, 109, 101, 110, 116, 101, 100, 0, 78, 111, 32, 109, 101, 115, 115, 97, 103, 101, 32, 111, 102, 32, 100, 101, 115, 105, 114, 101, 100, 32, 116, 121, 112, 101, 0, 73, 100, 101, 110, 116, 105, 102, 105, 101, 114, 32, 114, 101, 109, 111, 118, 101, 100, 0, 68, 101, 118, 105, 99, 101, 32, 110, 111, 116, 32, 97, 32, 115, 116, 114, 101, 97, 109, 0, 78, 111, 32, 100, 97, 116, 97, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 68, 101, 118, 105, 99, 101, 32, 116, 105, 109, 101, 111, 117, 116, 0, 79, 117, 116, 32, 111, 102, 32, 115, 116, 114, 101, 97, 109, 115, 32, 114, 101, 115, 111, 117, 114, 99, 101, 115, 0, 76, 105, 110, 107, 32, 104, 97, 115, 32, 98, 101, 101, 110, 32, 115, 101, 118, 101, 114, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 101, 114, 114, 111, 114, 0, 66, 97, 100, 32, 109, 101, 115, 115, 97, 103, 101, 0, 70, 105, 108, 101, 32, 100, 101, 115, 99, 114, 105, 112, 116, 111, 114, 32, 105, 110, 32, 98, 97, 100, 32, 115, 116, 97, 116, 101, 0, 78, 111, 116, 32, 97, 32, 115, 111, 99, 107, 101, 116, 0, 68, 101, 115, 116, 105, 110, 97, 116, 105, 111, 110, 32, 97, 100, 100, 114, 101, 115, 115, 32, 114, 101, 113, 117, 105, 114, 101, 100, 0, 77, 101, 115, 115, 97, 103, 101, 32, 116, 111, 111, 32, 108, 97, 114, 103, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 119, 114, 111, 110, 103, 32, 116, 121, 112, 101, 32, 102, 111, 114, 32, 115, 111, 99, 107, 101, 116, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 116, 121, 112, 101, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 78, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 80, 114, 111, 116, 111, 99, 111, 108, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 0, 65, 100, 100, 114, 101, 115, 115, 32, 102, 97, 109, 105, 108, 121, 32, 110, 111, 116, 32, 115, 117, 112, 112, 111, 114, 116, 101, 100, 32, 98, 121, 32, 112, 114, 111, 116, 111, 99, 111, 108, 0, 65, 100, 100, 114, 101, 115, 115, 32, 110, 111, 116, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 78, 101, 116, 119, 111, 114, 107, 32, 105, 115, 32, 100, 111, 119, 110, 0, 78, 101, 116, 119, 111, 114, 107, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 114, 101, 115, 101, 116, 32, 98, 121, 32, 110, 101, 116, 119, 111, 114, 107, 0, 67, 111, 110, 110, 101, 99, 116, 105, 111, 110, 32, 97, 98, 111, 114, 116, 101, 100, 0, 78, 111, 32, 98, 117, 102, 102, 101, 114, 32, 115, 112, 97, 99, 101, 32, 97, 118, 97, 105, 108, 97, 98, 108, 101, 0, 83, 111, 99, 107, 101, 116, 32, 105, 115, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 83, 111, 99, 107, 101, 116, 32, 110, 111, 116, 32, 99, 111, 110, 110, 101, 99, 116, 101, 100, 0, 67, 97, 110, 110, 111, 116, 32, 115, 101, 110, 100, 32, 97, 102, 116, 101, 114, 32, 115, 111, 99, 107, 101, 116, 32, 115, 104, 117, 116, 100, 111, 119, 110, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 97, 108, 114, 101, 97, 100, 121, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 79, 112, 101, 114, 97, 116, 105, 111, 110, 32, 105, 110, 32, 112, 114, 111, 103, 114, 101, 115, 115, 0, 83, 116, 97, 108, 101, 32, 102, 105, 108, 101, 32, 104, 97, 110, 100, 108, 101, 0, 82, 101, 109, 111, 116, 101, 32, 73, 47, 79, 32, 101, 114, 114, 111, 114, 0, 81, 117, 111, 116, 97, 32, 101, 120, 99, 101, 101, 100, 101, 100, 0, 78, 111, 32, 109, 101, 100, 105, 117, 109, 32, 102, 111, 117, 110, 100, 0, 87, 114, 111, 110, 103, 32, 109, 101, 100, 105, 117, 109, 32, 116, 121, 112, 101, 0, 78, 111, 32, 101, 114, 114, 111, 114, 32, 105, 110, 102, 111, 114, 109, 97, 116, 105, 111, 110, 0, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 58, 32, 37, 115, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 32, 111, 102, 32, 116, 121, 112, 101, 32, 37, 115, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 32, 119, 105, 116, 104, 32, 37, 115, 32, 102, 111, 114, 101, 105, 103, 110, 32, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 116, 101, 114, 109, 105, 110, 97, 116, 105, 110, 103, 0, 117, 110, 99, 97, 117, 103, 104, 116, 0, 83, 116, 57, 101, 120, 99, 101, 112, 116, 105, 111, 110, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 54, 95, 95, 115, 104, 105, 109, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 83, 116, 57, 116, 121, 112, 101, 95, 105, 110, 102, 111, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 48, 95, 95, 115, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 112, 116, 104, 114, 101, 97, 100, 95, 111, 110, 99, 101, 32, 102, 97, 105, 108, 117, 114, 101, 32, 105, 110, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 95, 102, 97, 115, 116, 40, 41, 0, 99, 97, 110, 110, 111, 116, 32, 99, 114, 101, 97, 116, 101, 32, 112, 116, 104, 114, 101, 97, 100, 32, 107, 101, 121, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 99, 97, 110, 110, 111, 116, 32, 122, 101, 114, 111, 32, 111, 117, 116, 32, 116, 104, 114, 101, 97, 100, 32, 118, 97, 108, 117, 101, 32, 102, 111, 114, 32, 95, 95, 99, 120, 97, 95, 103, 101, 116, 95, 103, 108, 111, 98, 97, 108, 115, 40, 41, 0, 116, 101, 114, 109, 105, 110, 97, 116, 101, 95, 104, 97, 110, 100, 108, 101, 114, 32, 117, 110, 101, 120, 112, 101, 99, 116, 101, 100, 108, 121, 32, 114, 101, 116, 117, 114, 110, 101, 100, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 57, 95, 95, 112, 111, 105, 110, 116, 101, 114, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 49, 55, 95, 95, 112, 98, 97, 115, 101, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0, 78, 49, 48, 95, 95, 99, 120, 120, 97, 98, 105, 118, 49, 50, 49, 95, 95, 118, 109, 105, 95, 99, 108, 97, 115, 115, 95, 116, 121, 112, 101, 95, 105, 110, 102, 111, 69, 0], "i8", ALLOC_NONE, Runtime.GLOBAL_BASE + 20480);
      var tempDoublePtr = STATICTOP;
      STATICTOP += 16;
      function ___cxa_pure_virtual() {
        ABORT = true;
        throw "Pure virtual function called!";
      }
      Module["_i64Subtract"] = _i64Subtract;
      function _llvm_trap() {
        abort("trap!");
      }
      Module["_i64Add"] = _i64Add;
      Module["_memset"] = _memset;
      Module["_bitshift64Lshr"] = _bitshift64Lshr;
      Module["_bitshift64Shl"] = _bitshift64Shl;
      function _abort() {
        Module["abort"]();
      }
      function __ZSt18uncaught_exceptionv() {
        return !!__ZSt18uncaught_exceptionv.uncaught_exception;
      }
      var EXCEPTIONS = { last: 0, caught: [], infos: {}, deAdjust: function(adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted])
          return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      }, addRef: function(ptr) {
        if (!ptr)
          return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      }, decRef: function(ptr) {
        if (!ptr)
          return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0 && !info.rethrown) {
          if (info.destructor) {
            Runtime.dynCall("vi", info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      }, clearRef: function(ptr) {
        if (!ptr)
          return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      } };
      function ___cxa_begin_catch(ptr) {
        var info = EXCEPTIONS.infos[ptr];
        if (info && !info.caught) {
          info.caught = true;
          __ZSt18uncaught_exceptionv.uncaught_exception--;
        }
        if (info)
          info.rethrown = false;
        EXCEPTIONS.caught.push(ptr);
        EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));
        return ptr;
      }
      function _pthread_once(ptr, func) {
        if (!_pthread_once.seen)
          _pthread_once.seen = {};
        if (ptr in _pthread_once.seen)
          return;
        Runtime.dynCall("v", func);
        _pthread_once.seen[ptr] = 1;
      }
      Module["_llvm_bswap_i16"] = _llvm_bswap_i16;
      function _emscripten_memcpy_big(dest, src, num) {
        HEAPU8.set(HEAPU8.subarray(src, src + num), dest);
        return dest;
      }
      Module["_memcpy"] = _memcpy;
      var SYSCALLS = { varargs: 0, get: function(varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
        return ret;
      }, getStr: function() {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      }, get64: function() {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0)
          assert(high === 0);
        else
          assert(high === -1);
        return low;
      }, getZero: function() {
        assert(SYSCALLS.get() === 0);
      } };
      function ___syscall6(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.getStreamFromFD();
          FS.close(stream);
          return 0;
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
            abort(e);
          return -e.errno;
        }
      }
      var cttz_i8 = allocate([8, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0, 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0], "i8", ALLOC_STATIC);
      Module["_llvm_cttz_i32"] = _llvm_cttz_i32;
      Module["___udivmoddi4"] = ___udivmoddi4;
      Module["___udivdi3"] = ___udivdi3;
      var PTHREAD_SPECIFIC = {};
      function _pthread_getspecific(key2) {
        return PTHREAD_SPECIFIC[key2] || 0;
      }
      Module["___muldsi3"] = ___muldsi3;
      Module["___muldi3"] = ___muldi3;
      function ___setErrNo(value) {
        if (Module["___errno_location"])
          HEAP32[Module["___errno_location"]() >> 2] = value;
        return value;
      }
      Module["_sbrk"] = _sbrk;
      Module["_memmove"] = _memmove;
      var PTHREAD_SPECIFIC_NEXT_KEY = 1;
      var ERRNO_CODES = { EPERM: 1, ENOENT: 2, ESRCH: 3, EINTR: 4, EIO: 5, ENXIO: 6, E2BIG: 7, ENOEXEC: 8, EBADF: 9, ECHILD: 10, EAGAIN: 11, EWOULDBLOCK: 11, ENOMEM: 12, EACCES: 13, EFAULT: 14, ENOTBLK: 15, EBUSY: 16, EEXIST: 17, EXDEV: 18, ENODEV: 19, ENOTDIR: 20, EISDIR: 21, EINVAL: 22, ENFILE: 23, EMFILE: 24, ENOTTY: 25, ETXTBSY: 26, EFBIG: 27, ENOSPC: 28, ESPIPE: 29, EROFS: 30, EMLINK: 31, EPIPE: 32, EDOM: 33, ERANGE: 34, ENOMSG: 42, EIDRM: 43, ECHRNG: 44, EL2NSYNC: 45, EL3HLT: 46, EL3RST: 47, ELNRNG: 48, EUNATCH: 49, ENOCSI: 50, EL2HLT: 51, EDEADLK: 35, ENOLCK: 37, EBADE: 52, EBADR: 53, EXFULL: 54, ENOANO: 55, EBADRQC: 56, EBADSLT: 57, EDEADLOCK: 35, EBFONT: 59, ENOSTR: 60, ENODATA: 61, ETIME: 62, ENOSR: 63, ENONET: 64, ENOPKG: 65, EREMOTE: 66, ENOLINK: 67, EADV: 68, ESRMNT: 69, ECOMM: 70, EPROTO: 71, EMULTIHOP: 72, EDOTDOT: 73, EBADMSG: 74, ENOTUNIQ: 76, EBADFD: 77, EREMCHG: 78, ELIBACC: 79, ELIBBAD: 80, ELIBSCN: 81, ELIBMAX: 82, ELIBEXEC: 83, ENOSYS: 38, ENOTEMPTY: 39, ENAMETOOLONG: 36, ELOOP: 40, EOPNOTSUPP: 95, EPFNOSUPPORT: 96, ECONNRESET: 104, ENOBUFS: 105, EAFNOSUPPORT: 97, EPROTOTYPE: 91, ENOTSOCK: 88, ENOPROTOOPT: 92, ESHUTDOWN: 108, ECONNREFUSED: 111, EADDRINUSE: 98, ECONNABORTED: 103, ENETUNREACH: 101, ENETDOWN: 100, ETIMEDOUT: 110, EHOSTDOWN: 112, EHOSTUNREACH: 113, EINPROGRESS: 115, EALREADY: 114, EDESTADDRREQ: 89, EMSGSIZE: 90, EPROTONOSUPPORT: 93, ESOCKTNOSUPPORT: 94, EADDRNOTAVAIL: 99, ENETRESET: 102, EISCONN: 106, ENOTCONN: 107, ETOOMANYREFS: 109, EUSERS: 87, EDQUOT: 122, ESTALE: 116, ENOTSUP: 95, ENOMEDIUM: 123, EILSEQ: 84, EOVERFLOW: 75, ECANCELED: 125, ENOTRECOVERABLE: 131, EOWNERDEAD: 130, ESTRPIPE: 86 };
      function _pthread_key_create(key2, destructor) {
        if (key2 == 0) {
          return ERRNO_CODES.EINVAL;
        }
        HEAP32[key2 >> 2] = PTHREAD_SPECIFIC_NEXT_KEY;
        PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY] = 0;
        PTHREAD_SPECIFIC_NEXT_KEY++;
        return 0;
      }
      function ___resumeException(ptr) {
        if (!EXCEPTIONS.last) {
          EXCEPTIONS.last = ptr;
        }
        throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
      }
      function ___cxa_find_matching_catch() {
        var thrown = EXCEPTIONS.last;
        if (!thrown) {
          return (asm["setTempRet0"](0), 0) | 0;
        }
        var info = EXCEPTIONS.infos[thrown];
        var throwntype = info.type;
        if (!throwntype) {
          return (asm["setTempRet0"](0), thrown) | 0;
        }
        var typeArray = Array.prototype.slice.call(arguments);
        var pointer = Module["___cxa_is_pointer_type"](throwntype);
        if (!___cxa_find_matching_catch.buffer)
          ___cxa_find_matching_catch.buffer = _malloc(4);
        HEAP32[___cxa_find_matching_catch.buffer >> 2] = thrown;
        thrown = ___cxa_find_matching_catch.buffer;
        for (var i = 0; i < typeArray.length; i++) {
          if (typeArray[i] && Module["___cxa_can_catch"](typeArray[i], throwntype, thrown)) {
            thrown = HEAP32[thrown >> 2];
            info.adjusted = thrown;
            return (asm["setTempRet0"](typeArray[i]), thrown) | 0;
          }
        }
        thrown = HEAP32[thrown >> 2];
        return (asm["setTempRet0"](throwntype), thrown) | 0;
      }
      function ___gxx_personality_v0() {
      }
      Module["___uremdi3"] = ___uremdi3;
      var _llvm_pow_f32 = Math_pow;
      Module["_llvm_bswap_i32"] = _llvm_bswap_i32;
      function _pthread_setspecific(key2, value) {
        if (!(key2 in PTHREAD_SPECIFIC)) {
          return ERRNO_CODES.EINVAL;
        }
        PTHREAD_SPECIFIC[key2] = value;
        return 0;
      }
      function ___syscall140(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
          var offset = offset_low;
          assert(offset_high === 0);
          FS.llseek(stream, offset, whence);
          HEAP32[result >> 2] = stream.position;
          if (stream.getdents && offset === 0 && whence === 0)
            stream.getdents = null;
          return 0;
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
            abort(e);
          return -e.errno;
        }
      }
      function ___syscall146(which, varargs) {
        SYSCALLS.varargs = varargs;
        try {
          var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
          var ret = 0;
          if (!___syscall146.buffer) {
            ___syscall146.buffers = [null, [], []];
            ___syscall146.printChar = function(stream2, curr) {
              var buffer2 = ___syscall146.buffers[stream2];
              assert(buffer2);
              if (curr === 0 || curr === 10) {
                (stream2 === 1 ? Module["print"] : Module["printErr"])(UTF8ArrayToString(buffer2, 0));
                buffer2.length = 0;
              } else {
                buffer2.push(curr);
              }
            };
          }
          for (var i = 0; i < iovcnt; i++) {
            var ptr = HEAP32[iov + i * 8 >> 2];
            var len = HEAP32[iov + (i * 8 + 4) >> 2];
            for (var j = 0; j < len; j++) {
              ___syscall146.printChar(stream, HEAPU8[ptr + j]);
            }
            ret += len;
          }
          return ret;
        } catch (e) {
          if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError))
            abort(e);
          return -e.errno;
        }
      }
      __ATEXIT__.push(function() {
        var fflush = Module["_fflush"];
        if (fflush)
          fflush(0);
        var printChar = ___syscall146.printChar;
        if (!printChar)
          return;
        var buffers = ___syscall146.buffers;
        if (buffers[1].length)
          printChar(1, 10);
        if (buffers[2].length)
          printChar(2, 10);
      });
      DYNAMICTOP_PTR = allocate(1, "i32", ALLOC_STATIC);
      STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);
      STACK_MAX = STACK_BASE + TOTAL_STACK;
      DYNAMIC_BASE = Runtime.alignMemory(STACK_MAX);
      HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;
      staticSealed = true;
      function invoke_viiiii(index, a1, a2, a3, a4, a5) {
        try {
          Module["dynCall_viiiii"](index, a1, a2, a3, a4, a5);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_vid(index, a1, a2) {
        try {
          Module["dynCall_vid"](index, a1, a2);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_vi(index, a1) {
        try {
          Module["dynCall_vi"](index, a1);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiidii(index, a1, a2, a3, a4, a5, a6) {
        try {
          Module["dynCall_viiidii"](index, a1, a2, a3, a4, a5, a6);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_vii(index, a1, a2) {
        try {
          Module["dynCall_vii"](index, a1, a2);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_iiiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
        try {
          return Module["dynCall_iiiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_ii(index, a1) {
        try {
          return Module["dynCall_ii"](index, a1);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viidi(index, a1, a2, a3, a4) {
        try {
          Module["dynCall_viidi"](index, a1, a2, a3, a4);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viddiii(index, a1, a2, a3, a4, a5, a6) {
        try {
          Module["dynCall_viddiii"](index, a1, a2, a3, a4, a5, a6);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_vidii(index, a1, a2, a3, a4) {
        try {
          Module["dynCall_vidii"](index, a1, a2, a3, a4);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_iiiii(index, a1, a2, a3, a4) {
        try {
          return Module["dynCall_iiiii"](index, a1, a2, a3, a4);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_vidi(index, a1, a2, a3) {
        try {
          Module["dynCall_vidi"](index, a1, a2, a3);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_diiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8) {
        try {
          return Module["dynCall_diiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiiiddddiid(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11) {
        try {
          Module["dynCall_viiiiddddiid"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_diiiii(index, a1, a2, a3, a4, a5) {
        try {
          return Module["dynCall_diiiii"](index, a1, a2, a3, a4, a5);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_vidd(index, a1, a2, a3) {
        try {
          Module["dynCall_vidd"](index, a1, a2, a3);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_iiii(index, a1, a2, a3) {
        try {
          return Module["dynCall_iiii"](index, a1, a2, a3);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiiiid(index, a1, a2, a3, a4, a5, a6) {
        try {
          Module["dynCall_viiiiid"](index, a1, a2, a3, a4, a5, a6);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiiiii(index, a1, a2, a3, a4, a5, a6) {
        try {
          Module["dynCall_viiiiii"](index, a1, a2, a3, a4, a5, a6);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_iiid(index, a1, a2, a3) {
        try {
          return Module["dynCall_iiid"](index, a1, a2, a3);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_di(index, a1) {
        try {
          return Module["dynCall_di"](index, a1);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
        try {
          return Module["dynCall_iiiiiii"](index, a1, a2, a3, a4, a5, a6);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_diiidii(index, a1, a2, a3, a4, a5, a6) {
        try {
          return Module["dynCall_diiidii"](index, a1, a2, a3, a4, a5, a6);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viidii(index, a1, a2, a3, a4, a5) {
        try {
          Module["dynCall_viidii"](index, a1, a2, a3, a4, a5);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiiiiii(index, a1, a2, a3, a4, a5, a6, a7) {
        try {
          Module["dynCall_viiiiiii"](index, a1, a2, a3, a4, a5, a6, a7);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        try {
          Module["dynCall_viiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
        try {
          Module["dynCall_viiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_iii(index, a1, a2) {
        try {
          return Module["dynCall_iii"](index, a1, a2);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_diii(index, a1, a2, a3) {
        try {
          return Module["dynCall_diii"](index, a1, a2, a3);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_diiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10) {
        try {
          return Module["dynCall_diiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiiid(index, a1, a2, a3, a4, a5) {
        try {
          Module["dynCall_viiiid"](index, a1, a2, a3, a4, a5);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_diiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        try {
          return Module["dynCall_diiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_did(index, a1, a2) {
        try {
          return Module["dynCall_did"](index, a1, a2);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiiidddddidi(index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12) {
        try {
          Module["dynCall_viiiidddddidi"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_diidii(index, a1, a2, a3, a4, a5) {
        try {
          return Module["dynCall_diidii"](index, a1, a2, a3, a4, a5);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_diiii(index, a1, a2, a3, a4) {
        try {
          return Module["dynCall_diiii"](index, a1, a2, a3, a4);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_iiiiiiiiii(index, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
        try {
          return Module["dynCall_iiiiiiiiii"](index, a1, a2, a3, a4, a5, a6, a7, a8, a9);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiid(index, a1, a2, a3, a4) {
        try {
          Module["dynCall_viiid"](index, a1, a2, a3, a4);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viii(index, a1, a2, a3) {
        try {
          Module["dynCall_viii"](index, a1, a2, a3);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_v(index) {
        try {
          Module["dynCall_v"](index);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viid(index, a1, a2, a3) {
        try {
          Module["dynCall_viid"](index, a1, a2, a3);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_iidid(index, a1, a2, a3, a4) {
        try {
          return Module["dynCall_iidid"](index, a1, a2, a3, a4);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      function invoke_viiii(index, a1, a2, a3, a4) {
        try {
          Module["dynCall_viiii"](index, a1, a2, a3, a4);
        } catch (e) {
          if (typeof e !== "number" && e !== "longjmp")
            throw e;
          asm["setThrew"](1, 0);
        }
      }
      Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };
      Module.asmLibraryArg = { "abort": abort, "assert": assert, "enlargeMemory": enlargeMemory, "getTotalMemory": getTotalMemory, "abortOnCannotGrowMemory": abortOnCannotGrowMemory, "invoke_viiiii": invoke_viiiii, "invoke_vid": invoke_vid, "invoke_vi": invoke_vi, "invoke_viiidii": invoke_viiidii, "invoke_vii": invoke_vii, "invoke_iiiiiiiiiii": invoke_iiiiiiiiiii, "invoke_ii": invoke_ii, "invoke_viidi": invoke_viidi, "invoke_viddiii": invoke_viddiii, "invoke_vidii": invoke_vidii, "invoke_iiiii": invoke_iiiii, "invoke_vidi": invoke_vidi, "invoke_diiiiiiii": invoke_diiiiiiii, "invoke_viiiiddddiid": invoke_viiiiddddiid, "invoke_diiiii": invoke_diiiii, "invoke_vidd": invoke_vidd, "invoke_iiii": invoke_iiii, "invoke_viiiiid": invoke_viiiiid, "invoke_viiiiii": invoke_viiiiii, "invoke_iiid": invoke_iiid, "invoke_di": invoke_di, "invoke_iiiiiii": invoke_iiiiiii, "invoke_diiidii": invoke_diiidii, "invoke_viidii": invoke_viidii, "invoke_viiiiiii": invoke_viiiiiii, "invoke_viiiiiiiii": invoke_viiiiiiiii, "invoke_viiiiiiiiii": invoke_viiiiiiiiii, "invoke_iii": invoke_iii, "invoke_diii": invoke_diii, "invoke_diiiiiiiiii": invoke_diiiiiiiiii, "invoke_viiiid": invoke_viiiid, "invoke_diiiiiiiii": invoke_diiiiiiiii, "invoke_did": invoke_did, "invoke_viiiidddddidi": invoke_viiiidddddidi, "invoke_diidii": invoke_diidii, "invoke_diiii": invoke_diiii, "invoke_iiiiiiiiii": invoke_iiiiiiiiii, "invoke_viiid": invoke_viiid, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_viid": invoke_viid, "invoke_iidid": invoke_iidid, "invoke_viiii": invoke_viiii, "_pthread_getspecific": _pthread_getspecific, "___cxa_begin_catch": ___cxa_begin_catch, "_pthread_setspecific": _pthread_setspecific, "_pthread_key_create": _pthread_key_create, "_abort": _abort, "___setErrNo": ___setErrNo, "___syscall6": ___syscall6, "_llvm_trap": _llvm_trap, "_llvm_pow_f32": _llvm_pow_f32, "_pthread_once": _pthread_once, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___gxx_personality_v0": ___gxx_personality_v0, "___syscall140": ___syscall140, "___resumeException": ___resumeException, "_emscripten_asm_const_diiiiiiii": _emscripten_asm_const_diiiiiiii, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "___cxa_pure_virtual": ___cxa_pure_virtual, "___syscall146": ___syscall146, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "DYNAMICTOP_PTR": DYNAMICTOP_PTR, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "cttz_i8": cttz_i8 };
      var asm = function(global, env, buffer2) {
        ;
        var a = new global.Int8Array(buffer2);
        var b = new global.Int16Array(buffer2);
        var c = new global.Int32Array(buffer2);
        var d = new global.Uint8Array(buffer2);
        var e = new global.Uint16Array(buffer2);
        var f = new global.Uint32Array(buffer2);
        var g = new global.Float32Array(buffer2);
        var h = new global.Float64Array(buffer2);
        var i = env.STACKTOP | 0;
        var j = env.STACK_MAX | 0;
        var k = env.DYNAMICTOP_PTR | 0;
        var l = env.tempDoublePtr | 0;
        var m = env.ABORT | 0;
        var n = env.cttz_i8 | 0;
        var o = 0;
        var p = 0;
        var q = 0;
        var r = 0;
        var s = global.NaN, t = global.Infinity;
        var u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0;
        var D = 0;
        var E = global.Math.floor;
        var F = global.Math.abs;
        var G = global.Math.sqrt;
        var H = global.Math.pow;
        var I = global.Math.cos;
        var J = global.Math.sin;
        var K = global.Math.tan;
        var L = global.Math.acos;
        var M = global.Math.asin;
        var N = global.Math.atan;
        var O = global.Math.atan2;
        var P = global.Math.exp;
        var Q = global.Math.log;
        var R = global.Math.ceil;
        var S = global.Math.imul;
        var T = global.Math.min;
        var U = global.Math.max;
        var V = global.Math.clz32;
        var W = env.abort;
        var X = env.assert;
        var Y = env.enlargeMemory;
        var Z = env.getTotalMemory;
        var _ = env.abortOnCannotGrowMemory;
        var $ = env.invoke_viiiii;
        var aa = env.invoke_vid;
        var ba = env.invoke_vi;
        var ca = env.invoke_viiidii;
        var da = env.invoke_vii;
        var ea = env.invoke_iiiiiiiiiii;
        var fa = env.invoke_ii;
        var ga = env.invoke_viidi;
        var ha = env.invoke_viddiii;
        var ia = env.invoke_vidii;
        var ja = env.invoke_iiiii;
        var ka = env.invoke_vidi;
        var la = env.invoke_diiiiiiii;
        var ma = env.invoke_viiiiddddiid;
        var na = env.invoke_diiiii;
        var oa = env.invoke_vidd;
        var pa = env.invoke_iiii;
        var qa = env.invoke_viiiiid;
        var ra = env.invoke_viiiiii;
        var sa = env.invoke_iiid;
        var ta = env.invoke_di;
        var ua = env.invoke_iiiiiii;
        var va = env.invoke_diiidii;
        var wa = env.invoke_viidii;
        var xa = env.invoke_viiiiiii;
        var ya = env.invoke_viiiiiiiii;
        var za = env.invoke_viiiiiiiiii;
        var Aa = env.invoke_iii;
        var Ba = env.invoke_diii;
        var Ca = env.invoke_diiiiiiiiii;
        var Da = env.invoke_viiiid;
        var Ea = env.invoke_diiiiiiiii;
        var Fa = env.invoke_did;
        var Ga = env.invoke_viiiidddddidi;
        var Ha = env.invoke_diidii;
        var Ia = env.invoke_diiii;
        var Ja = env.invoke_iiiiiiiiii;
        var Ka = env.invoke_viiid;
        var La = env.invoke_viii;
        var Ma = env.invoke_v;
        var Na = env.invoke_viid;
        var Oa = env.invoke_iidid;
        var Pa = env.invoke_viiii;
        var Qa = env._pthread_getspecific;
        var Ra = env.___cxa_begin_catch;
        var Sa = env._pthread_setspecific;
        var Ta = env._pthread_key_create;
        var Ua = env._abort;
        var Va = env.___setErrNo;
        var Wa = env.___syscall6;
        var Xa = env._llvm_trap;
        var Ya = env._llvm_pow_f32;
        var Za = env._pthread_once;
        var _a = env._emscripten_memcpy_big;
        var $a = env.___gxx_personality_v0;
        var ab = env.___syscall140;
        var bb = env.___resumeException;
        var cb = env._emscripten_asm_const_diiiiiiii;
        var db = env.___cxa_find_matching_catch;
        var eb = env.___cxa_pure_virtual;
        var fb = env.___syscall146;
        var gb = env.__ZSt18uncaught_exceptionv;
        var hb = 0;
        function hf(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          j2 = c[a2 + 28 >> 2] | 0;
          k2 = c[a2 + 32 >> 2] | 0;
          e2 = c[b2 + 8 >> 2] | 0;
          g[e2 >> 2] = 1;
          h2 = c[b2 + 24 >> 2] | 0;
          g[e2 + (h2 + 1 << 2) >> 2] = 1;
          g[e2 + ((h2 << 1) + 2 << 2) >> 2] = 1;
          l2 = +g[a2 + 300 >> 2];
          q2 = +g[a2 + 304 >> 2];
          f2 = +g[a2 + 308 >> 2];
          o2 = +g[j2 + 4 >> 2] * l2 + +g[j2 + 8 >> 2] * q2 + +g[j2 + 12 >> 2] * f2;
          m2 = l2 * +g[j2 + 20 >> 2] + q2 * +g[j2 + 24 >> 2] + f2 * +g[j2 + 28 >> 2];
          f2 = l2 * +g[j2 + 36 >> 2] + q2 * +g[j2 + 40 >> 2] + f2 * +g[j2 + 44 >> 2];
          e2 = c[b2 + 12 >> 2] | 0;
          c[e2 >> 2] = 0;
          g[e2 + 4 >> 2] = f2;
          g[e2 + 8 >> 2] = -m2;
          g[e2 + 12 >> 2] = 0;
          g[e2 + (h2 << 2) >> 2] = -f2;
          c[e2 + (h2 << 2) + 4 >> 2] = 0;
          g[e2 + (h2 << 2) + 8 >> 2] = o2;
          g[e2 + (h2 << 2) + 12 >> 2] = 0;
          g[e2 + (h2 << 1 << 2) >> 2] = m2;
          g[e2 + (h2 << 1 << 2) + 4 >> 2] = -o2;
          c[e2 + (h2 << 1 << 2) + 8 >> 2] = 0;
          g[e2 + (h2 << 1 << 2) + 12 >> 2] = 0;
          e2 = c[b2 + 16 >> 2] | 0;
          g[e2 >> 2] = -1;
          g[e2 + (h2 + 1 << 2) >> 2] = -1;
          g[e2 + ((h2 << 1) + 2 << 2) >> 2] = -1;
          q2 = +g[a2 + 316 >> 2];
          l2 = +g[a2 + 320 >> 2];
          d2 = +g[a2 + 324 >> 2];
          p2 = +g[k2 + 4 >> 2] * q2 + +g[k2 + 8 >> 2] * l2 + +g[k2 + 12 >> 2] * d2;
          n2 = q2 * +g[k2 + 20 >> 2] + l2 * +g[k2 + 24 >> 2] + d2 * +g[k2 + 28 >> 2];
          d2 = q2 * +g[k2 + 36 >> 2] + l2 * +g[k2 + 40 >> 2] + d2 * +g[k2 + 44 >> 2];
          h2 = c[b2 + 20 >> 2] | 0;
          e2 = c[b2 + 24 >> 2] | 0;
          c[h2 >> 2] = 0;
          g[h2 + 4 >> 2] = -d2;
          g[h2 + 8 >> 2] = n2;
          g[h2 + 12 >> 2] = 0;
          g[h2 + (e2 << 2) >> 2] = d2;
          c[h2 + (e2 << 2) + 4 >> 2] = 0;
          g[h2 + (e2 << 2) + 8 >> 2] = -p2;
          g[h2 + (e2 << 2) + 12 >> 2] = 0;
          g[h2 + (e2 << 1 << 2) >> 2] = -n2;
          g[h2 + (e2 << 1 << 2) + 4 >> 2] = p2;
          c[h2 + (e2 << 1 << 2) + 8 >> 2] = 0;
          g[h2 + (e2 << 1 << 2) + 12 >> 2] = 0;
          h2 = c[a2 + 332 >> 2] | 0;
          l2 = +g[((h2 & 1 | 0) == 0 ? b2 + 4 | 0 : a2 + 336 | 0) >> 2] * +g[b2 >> 2];
          i2 = c[b2 + 28 >> 2] | 0;
          g[i2 >> 2] = l2 * (p2 + +g[k2 + 52 >> 2] - o2 - +g[j2 + 52 >> 2]);
          g[i2 + (e2 << 2) >> 2] = l2 * (n2 + +g[k2 + 56 >> 2] - m2 - +g[j2 + 56 >> 2]);
          g[i2 + (e2 << 1 << 2) >> 2] = l2 * (d2 + +g[k2 + 60 >> 2] - f2 - +g[j2 + 60 >> 2]);
          if (h2 & 2 | 0) {
            k2 = c[b2 + 32 >> 2] | 0;
            c[k2 >> 2] = c[a2 + 340 >> 2];
            c[k2 + (e2 << 2) >> 2] = c[a2 + 340 >> 2];
            c[k2 + (e2 << 1 << 2) >> 2] = c[a2 + 340 >> 2];
          }
          f2 = +g[a2 + 356 >> 2];
          if (f2 > 0) {
            g[c[b2 + 36 >> 2] >> 2] = -f2;
            g[c[b2 + 40 >> 2] >> 2] = f2;
            d2 = +g[a2 + 356 >> 2];
          } else
            d2 = f2;
          if (d2 > 0) {
            g[(c[b2 + 36 >> 2] | 0) + (e2 << 2) >> 2] = -f2;
            g[(c[b2 + 40 >> 2] | 0) + (e2 << 2) >> 2] = f2;
            d2 = +g[a2 + 356 >> 2];
          }
          if (!(d2 > 0)) {
            j2 = a2 + 352 | 0;
            j2 = c[j2 >> 2] | 0;
            k2 = b2 + 48 | 0;
            c[k2 >> 2] = j2;
            return;
          }
          g[(c[b2 + 36 >> 2] | 0) + (e2 << 1 << 2) >> 2] = -f2;
          g[(c[b2 + 40 >> 2] | 0) + (e2 << 1 << 2) >> 2] = f2;
          j2 = a2 + 352 | 0;
          j2 = c[j2 >> 2] | 0;
          k2 = b2 + 48 | 0;
          c[k2 >> 2] = j2;
          return;
        }
        function jf(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0;
          B2 = (a[b2 + 68 >> 0] | 0) != 0;
          C2 = B2 ? e2 : d2;
          B2 = B2 ? d2 : e2;
          z2 = c[b2 + 52 >> 2] | 0;
          if ((z2 | 0) <= 0) {
            x2 = 1;
            return +x2;
          }
          A2 = (c[C2 + 192 >> 2] | 0) + 28 | 0;
          j2 = +g[C2 + 4 >> 2];
          u2 = +g[C2 + 8 >> 2];
          v2 = +g[C2 + 12 >> 2];
          w2 = c[C2 + 16 >> 2] | 0;
          x2 = +g[C2 + 20 >> 2];
          k2 = +g[C2 + 24 >> 2];
          l2 = +g[C2 + 28 >> 2];
          e2 = c[C2 + 32 >> 2] | 0;
          m2 = +g[C2 + 36 >> 2];
          n2 = +g[C2 + 40 >> 2];
          o2 = +g[C2 + 44 >> 2];
          p2 = c[C2 + 48 >> 2] | 0;
          q2 = +g[C2 + 52 >> 2];
          r2 = +g[C2 + 56 >> 2];
          s2 = +g[C2 + 60 >> 2];
          t2 = c[C2 + 64 >> 2] | 0;
          i2 = 1;
          d2 = 0;
          y2 = c[C2 + 300 >> 2] | 0;
          do {
            E2 = c[A2 >> 2] | 0;
            P2 = +g[E2 + (d2 * 80 | 0) >> 2];
            O2 = +g[E2 + (d2 * 80 | 0) + 16 >> 2];
            N2 = +g[E2 + (d2 * 80 | 0) + 32 >> 2];
            M2 = +g[E2 + (d2 * 80 | 0) + 4 >> 2];
            L2 = +g[E2 + (d2 * 80 | 0) + 20 >> 2];
            K2 = +g[E2 + (d2 * 80 | 0) + 36 >> 2];
            J2 = +g[E2 + (d2 * 80 | 0) + 8 >> 2];
            I2 = +g[E2 + (d2 * 80 | 0) + 24 >> 2];
            H2 = +g[E2 + (d2 * 80 | 0) + 40 >> 2];
            G2 = +g[E2 + (d2 * 80 | 0) + 48 >> 2];
            F2 = +g[E2 + (d2 * 80 | 0) + 52 >> 2];
            D2 = +g[E2 + (d2 * 80 | 0) + 56 >> 2];
            c[C2 + 300 >> 2] = y2 + 1;
            g[C2 + 4 >> 2] = j2 * P2 + u2 * O2 + v2 * N2;
            g[C2 + 8 >> 2] = j2 * M2 + u2 * L2 + v2 * K2;
            g[C2 + 12 >> 2] = j2 * J2 + u2 * I2 + v2 * H2;
            g[C2 + 16 >> 2] = 0;
            g[C2 + 20 >> 2] = x2 * P2 + k2 * O2 + l2 * N2;
            g[C2 + 24 >> 2] = x2 * M2 + k2 * L2 + l2 * K2;
            g[C2 + 28 >> 2] = x2 * J2 + k2 * I2 + l2 * H2;
            g[C2 + 32 >> 2] = 0;
            g[C2 + 36 >> 2] = m2 * P2 + n2 * O2 + o2 * N2;
            g[C2 + 40 >> 2] = m2 * M2 + n2 * L2 + o2 * K2;
            g[C2 + 44 >> 2] = m2 * J2 + n2 * I2 + o2 * H2;
            g[C2 + 48 >> 2] = 0;
            g[C2 + 52 >> 2] = q2 + (j2 * G2 + u2 * F2 + v2 * D2);
            g[C2 + 56 >> 2] = r2 + (x2 * G2 + k2 * F2 + l2 * D2);
            g[C2 + 60 >> 2] = s2 + (m2 * G2 + n2 * F2 + o2 * D2);
            g[C2 + 64 >> 2] = 0;
            E2 = c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] | 0;
            D2 = +wb[c[(c[E2 >> 2] | 0) + 12 >> 2] & 15](E2, C2, B2, f2, h2);
            i2 = D2 < i2 ? D2 : i2;
            y2 = (c[C2 + 300 >> 2] | 0) + 1 | 0;
            c[C2 + 300 >> 2] = y2;
            g[C2 + 4 >> 2] = j2;
            g[C2 + 8 >> 2] = u2;
            g[C2 + 12 >> 2] = v2;
            c[C2 + 16 >> 2] = w2;
            g[C2 + 20 >> 2] = x2;
            g[C2 + 24 >> 2] = k2;
            g[C2 + 28 >> 2] = l2;
            c[C2 + 32 >> 2] = e2;
            g[C2 + 36 >> 2] = m2;
            g[C2 + 40 >> 2] = n2;
            g[C2 + 44 >> 2] = o2;
            c[C2 + 48 >> 2] = p2;
            g[C2 + 52 >> 2] = q2;
            g[C2 + 56 >> 2] = r2;
            g[C2 + 60 >> 2] = s2;
            c[C2 + 64 >> 2] = t2;
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != (z2 | 0));
          return +i2;
        }
        function kf(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          c[6039] = (c[6039] | 0) + 1;
          i2 = (c[b2 + 12 >> 2] | 0) > (c[d2 + 12 >> 2] | 0);
          j2 = i2 ? d2 : b2;
          g2 = c[j2 + 12 >> 2] | 0;
          i2 = i2 ? b2 : d2;
          d2 = c[i2 + 12 >> 2] | 0;
          h2 = ((d2 << 16 | g2) + ~((d2 << 16 | g2) << 15) >> 10 ^ (d2 << 16 | g2) + ~((d2 << 16 | g2) << 15)) * 9 | 0;
          h2 = ((h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11) >> 16 ^ (h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11)) & (c[a2 + 12 >> 2] | 0) + -1;
          b2 = c[(c[a2 + 40 >> 2] | 0) + (h2 << 2) >> 2] | 0;
          if ((b2 | 0) == -1) {
            n2 = 0;
            return n2 | 0;
          }
          f2 = c[a2 + 16 >> 2] | 0;
          while (1) {
            if ((c[(c[f2 + (b2 << 4) >> 2] | 0) + 12 >> 2] | 0) == (g2 | 0) ? (c[(c[f2 + (b2 << 4) + 4 >> 2] | 0) + 12 >> 2] | 0) == (d2 | 0) : 0)
              break;
            b2 = c[(c[a2 + 60 >> 2] | 0) + (b2 << 2) >> 2] | 0;
            if ((b2 | 0) == -1) {
              b2 = 0;
              n2 = 24;
              break;
            }
          }
          if ((n2 | 0) == 24)
            return b2 | 0;
          d2 = f2 + (b2 << 4) | 0;
          if (!d2) {
            n2 = 0;
            return n2 | 0;
          }
          Ub[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, d2, e2);
          m2 = c[f2 + (b2 << 4) + 12 >> 2] | 0;
          l2 = d2 - (c[a2 + 16 >> 2] | 0) >> 4;
          h2 = (c[a2 + 40 >> 2] | 0) + (h2 << 2) | 0;
          b2 = c[h2 >> 2] | 0;
          f2 = c[a2 + 60 >> 2] | 0;
          if ((b2 | 0) != (l2 | 0)) {
            d2 = b2;
            while (1) {
              g2 = f2 + (d2 << 2) | 0;
              b2 = c[g2 >> 2] | 0;
              if ((b2 | 0) == (l2 | 0))
                break;
              else
                d2 = b2;
            }
            b2 = c[f2 + (l2 << 2) >> 2] | 0;
            if ((d2 | 0) == -1)
              n2 = 12;
            else
              c[g2 >> 2] = b2;
          } else {
            b2 = c[f2 + (l2 << 2) >> 2] | 0;
            n2 = 12;
          }
          if ((n2 | 0) == 12)
            c[h2 >> 2] = b2;
          k2 = (c[a2 + 8 >> 2] | 0) + -1 | 0;
          b2 = c[a2 + 68 >> 2] | 0;
          if (b2 | 0)
            sb[c[(c[b2 >> 2] | 0) + 12 >> 2] & 31](b2, j2, i2, e2) | 0;
          if ((k2 | 0) == (l2 | 0)) {
            c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + -1;
            n2 = m2;
            return n2 | 0;
          }
          j2 = c[a2 + 16 >> 2] | 0;
          h2 = c[(c[j2 + (k2 << 4) + 4 >> 2] | 0) + 12 >> 2] << 16 | c[(c[j2 + (k2 << 4) >> 2] | 0) + 12 >> 2];
          h2 = (h2 + ~(h2 << 15) >> 10 ^ h2 + ~(h2 << 15)) * 9 | 0;
          h2 = ((h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11) >> 16 ^ (h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11)) & (c[a2 + 12 >> 2] | 0) + -1;
          i2 = (c[a2 + 40 >> 2] | 0) + (h2 << 2) | 0;
          b2 = c[i2 >> 2] | 0;
          f2 = c[a2 + 60 >> 2] | 0;
          if ((b2 | 0) != (k2 | 0)) {
            d2 = b2;
            while (1) {
              g2 = f2 + (d2 << 2) | 0;
              b2 = c[g2 >> 2] | 0;
              if ((b2 | 0) == (k2 | 0))
                break;
              else
                d2 = b2;
            }
            b2 = c[f2 + (k2 << 2) >> 2] | 0;
            if ((d2 | 0) == -1)
              n2 = 22;
            else
              c[g2 >> 2] = b2;
          } else {
            b2 = c[f2 + (k2 << 2) >> 2] | 0;
            n2 = 22;
          }
          if ((n2 | 0) == 22)
            c[i2 >> 2] = b2;
          c[j2 + (l2 << 4) >> 2] = c[j2 + (k2 << 4) >> 2];
          c[j2 + (l2 << 4) + 4 >> 2] = c[j2 + (k2 << 4) + 4 >> 2];
          c[j2 + (l2 << 4) + 8 >> 2] = c[j2 + (k2 << 4) + 8 >> 2];
          c[j2 + (l2 << 4) + 12 >> 2] = c[j2 + (k2 << 4) + 12 >> 2];
          n2 = (c[a2 + 40 >> 2] | 0) + (h2 << 2) | 0;
          c[(c[a2 + 60 >> 2] | 0) + (l2 << 2) >> 2] = c[n2 >> 2];
          c[n2 >> 2] = l2;
          c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + -1;
          n2 = m2;
          return n2 | 0;
        }
        function lf(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
          z2 = i;
          i = i + 16 | 0;
          y2 = +g[a2 + 492 >> 2];
          w2 = c[a2 + 192 >> 2] | 0;
          v2 = +Cb[c[(c[w2 >> 2] | 0) + 48 >> 2] & 15](w2);
          w2 = c[a2 + 852 >> 2] | 0;
          if ((w2 | 0) <= 0) {
            i = z2;
            return;
          }
          u2 = 0;
          do {
            x2 = c[a2 + 860 >> 2] | 0;
            e2 = c[x2 + (u2 * 104 | 0) >> 2] | 0;
            if (!(c[e2 + 204 >> 2] & 4)) {
              p2 = (c[e2 + 248 >> 2] & 2 | 0) == 0 ? 0 : e2;
              if (p2 | 0) {
                s2 = +g[p2 + 372 >> 2];
                n2 = +g[x2 + (u2 * 104 | 0) + 84 >> 2];
                m2 = +g[p2 + 376 >> 2];
                o2 = +g[x2 + (u2 * 104 | 0) + 80 >> 2];
                t2 = +g[x2 + (u2 * 104 | 0) + 76 >> 2];
                r2 = +g[p2 + 368 >> 2];
                e2 = (g[l >> 2] = y2 * (s2 * n2 - m2 * o2 + +g[p2 + 352 >> 2]), c[l >> 2] | 0);
                f2 = (g[l >> 2] = y2 * (+g[p2 + 356 >> 2] + (m2 * t2 - n2 * r2)), c[l >> 2] | 0);
                h2 = (g[l >> 2] = y2 * (o2 * r2 - s2 * t2 + +g[p2 + 360 >> 2]), c[l >> 2] | 0);
              } else {
                e2 = 0;
                f2 = 0;
                h2 = 0;
              }
              q2 = c[x2 + (u2 * 104 | 0) + 24 >> 2] | 0;
              r2 = +g[q2 + 8 >> 2];
              s2 = +g[q2 + 12 >> 2];
              t2 = +g[q2 + 16 >> 2];
              o2 = r2 - +g[q2 + 24 >> 2] - (c[l >> 2] = e2, +g[l >> 2]);
              n2 = s2 - +g[q2 + 28 >> 2] - (c[l >> 2] = f2, +g[l >> 2]);
              d2 = t2 - +g[q2 + 32 >> 2] - (c[l >> 2] = h2, +g[l >> 2]);
              j2 = +g[x2 + (u2 * 104 | 0) + 4 >> 2];
              k2 = +g[x2 + (u2 * 104 | 0) + 8 >> 2];
              m2 = +g[x2 + (u2 * 104 | 0) + 12 >> 2];
              if (o2 * j2 + n2 * k2 + d2 * m2 <= 11920928955078125e-23 ? (C2 = r2 * j2 + s2 * k2 + t2 * m2 + +g[x2 + (u2 * 104 | 0) + 20 >> 2], D2 = +g[x2 + (u2 * 104 | 0) + 96 >> 2], C2 = (C2 < v2 ? C2 : v2) * +g[x2 + (u2 * 104 | 0) + 100 >> 2], B2 = (o2 - (o2 - j2 * (o2 * j2 + n2 * k2 + d2 * m2)) * D2 + j2 * C2) * b2, A2 = (n2 - (n2 - k2 * (o2 * j2 + n2 * k2 + d2 * m2)) * D2 + C2 * k2) * b2, o2 = (d2 - (d2 - m2 * (o2 * j2 + n2 * k2 + d2 * m2)) * D2 + C2 * m2) * b2, k2 = +g[x2 + (u2 * 104 | 0) + 28 >> 2] * B2 + +g[x2 + (u2 * 104 | 0) + 32 >> 2] * A2 + +g[x2 + (u2 * 104 | 0) + 36 >> 2] * o2, m2 = B2 * +g[x2 + (u2 * 104 | 0) + 44 >> 2] + A2 * +g[x2 + (u2 * 104 | 0) + 48 >> 2] + o2 * +g[x2 + (u2 * 104 | 0) + 52 >> 2], o2 = B2 * +g[x2 + (u2 * 104 | 0) + 60 >> 2] + A2 * +g[x2 + (u2 * 104 | 0) + 64 >> 2] + o2 * +g[x2 + (u2 * 104 | 0) + 68 >> 2], g[z2 >> 2] = k2, g[z2 + 4 >> 2] = m2, g[z2 + 8 >> 2] = o2, g[z2 + 12 >> 2] = 0, n2 = +g[x2 + (u2 * 104 | 0) + 92 >> 2], g[q2 + 8 >> 2] = r2 - k2 * n2, g[q2 + 12 >> 2] = s2 - n2 * m2, g[q2 + 16 >> 2] = t2 - n2 * o2, p2 | 0) : 0)
                Xi(p2, z2, x2 + (u2 * 104 | 0) + 76 | 0);
            }
            u2 = u2 + 1 | 0;
          } while ((u2 | 0) != (w2 | 0));
          i = z2;
          return;
        }
        function mf(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          k2 = c[b2 + 204 >> 2] | 0;
          Ub[c[(c[k2 >> 2] | 0) + 8 >> 2] & 127](k2, b2, c[b2 + 24 >> 2] | 0);
          k2 = c[b2 + 308 >> 2] | 0;
          if ((k2 | 0) > 0) {
            j2 = c[b2 + 316 >> 2] | 0;
            i2 = 0;
            do {
              e2 = c[j2 + (i2 << 2) >> 2] | 0;
              d2 = c[e2 + 772 >> 2] | 0;
              e2 = c[e2 + 776 >> 2] | 0;
              if ((d2 | 0 ? e2 | 0 ? (c[d2 + 204 >> 2] & 3 | 0) == 0 : 0 : 0) ? (c[e2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                g2 = c[d2 + 208 >> 2] | 0;
                d2 = c[e2 + 208 >> 2] | 0;
                h2 = c[(c[b2 + 204 >> 2] | 0) + 16 >> 2] | 0;
                e2 = c[h2 + (g2 << 3) >> 2] | 0;
                if ((e2 | 0) != (g2 | 0)) {
                  f2 = h2 + (g2 << 3) | 0;
                  do {
                    g2 = h2 + (e2 << 3) | 0;
                    c[f2 >> 2] = c[g2 >> 2];
                    g2 = c[g2 >> 2] | 0;
                    f2 = h2 + (g2 << 3) | 0;
                    e2 = c[f2 >> 2] | 0;
                  } while ((g2 | 0) != (e2 | 0));
                }
                e2 = c[h2 + (d2 << 3) >> 2] | 0;
                if ((e2 | 0) != (d2 | 0)) {
                  f2 = h2 + (d2 << 3) | 0;
                  do {
                    d2 = h2 + (e2 << 3) | 0;
                    c[f2 >> 2] = c[d2 >> 2];
                    d2 = c[d2 >> 2] | 0;
                    f2 = h2 + (d2 << 3) | 0;
                    e2 = c[f2 >> 2] | 0;
                  } while ((d2 | 0) != (e2 | 0));
                }
                if ((g2 | 0) != (d2 | 0)) {
                  c[h2 + (g2 << 3) >> 2] = d2;
                  f2 = h2 + (d2 << 3) + 4 | 0;
                  c[f2 >> 2] = (c[f2 >> 2] | 0) + (c[h2 + (g2 << 3) + 4 >> 2] | 0);
                }
              }
              i2 = i2 + 1 | 0;
            } while ((i2 | 0) != (k2 | 0));
          }
          k2 = c[b2 + 212 >> 2] | 0;
          if ((k2 | 0) <= 0) {
            m2 = c[b2 + 204 >> 2] | 0;
            l2 = c[m2 >> 2] | 0;
            l2 = l2 + 12 | 0;
            l2 = c[l2 >> 2] | 0;
            mb[l2 & 127](m2, b2);
            return;
          }
          j2 = c[b2 + 220 >> 2] | 0;
          i2 = 0;
          do {
            d2 = c[j2 + (i2 << 2) >> 2] | 0;
            if ((a[d2 + 20 >> 0] | 0 ? (l2 = c[d2 + 28 >> 2] | 0, (c[l2 + 204 >> 2] & 3 | 0) == 0) : 0) ? (m2 = c[d2 + 32 >> 2] | 0, (c[m2 + 204 >> 2] & 3 | 0) == 0) : 0) {
              f2 = c[l2 + 208 >> 2] | 0;
              d2 = c[m2 + 208 >> 2] | 0;
              h2 = c[(c[b2 + 204 >> 2] | 0) + 16 >> 2] | 0;
              e2 = c[h2 + (f2 << 3) >> 2] | 0;
              if ((e2 | 0) != (f2 | 0)) {
                g2 = h2 + (f2 << 3) | 0;
                do {
                  f2 = h2 + (e2 << 3) | 0;
                  c[g2 >> 2] = c[f2 >> 2];
                  f2 = c[f2 >> 2] | 0;
                  g2 = h2 + (f2 << 3) | 0;
                  e2 = c[g2 >> 2] | 0;
                } while ((f2 | 0) != (e2 | 0));
              }
              e2 = c[h2 + (d2 << 3) >> 2] | 0;
              if ((e2 | 0) != (d2 | 0)) {
                g2 = h2 + (d2 << 3) | 0;
                do {
                  d2 = h2 + (e2 << 3) | 0;
                  c[g2 >> 2] = c[d2 >> 2];
                  d2 = c[d2 >> 2] | 0;
                  g2 = h2 + (d2 << 3) | 0;
                  e2 = c[g2 >> 2] | 0;
                } while ((d2 | 0) != (e2 | 0));
              }
              if ((f2 | 0) != (d2 | 0)) {
                c[h2 + (f2 << 3) >> 2] = d2;
                g2 = h2 + (d2 << 3) + 4 | 0;
                c[g2 >> 2] = (c[g2 >> 2] | 0) + (c[h2 + (f2 << 3) + 4 >> 2] | 0);
              }
            }
            i2 = i2 + 1 | 0;
          } while ((i2 | 0) != (k2 | 0));
          m2 = c[b2 + 204 >> 2] | 0;
          l2 = c[m2 >> 2] | 0;
          l2 = l2 + 12 | 0;
          l2 = c[l2 >> 2] | 0;
          mb[l2 & 127](m2, b2);
          return;
        }
        function nf(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          d2 = i;
          i = i + 176 | 0;
          q2 = c[a2 + 68 >> 2] | 0;
          c[d2 + 128 >> 2] = q2;
          o2 = c[a2 + 84 >> 2] | 0;
          c[d2 + 128 + 4 >> 2] = o2;
          m2 = c[a2 + 100 >> 2] | 0;
          c[d2 + 128 + 8 >> 2] = m2;
          g[d2 + 128 + 12 >> 2] = 0;
          k2 = d2 + 128 + 16 | 0;
          t2 = c[a2 + 72 >> 2] | 0;
          c[k2 >> 2] = t2;
          s2 = c[a2 + 88 >> 2] | 0;
          c[d2 + 128 + 20 >> 2] = s2;
          r2 = c[a2 + 104 >> 2] | 0;
          c[d2 + 128 + 24 >> 2] = r2;
          g[d2 + 128 + 28 >> 2] = 0;
          j2 = d2 + 128 + 32 | 0;
          w2 = c[a2 + 76 >> 2] | 0;
          c[j2 >> 2] = w2;
          v2 = c[a2 + 92 >> 2] | 0;
          c[d2 + 128 + 36 >> 2] = v2;
          u2 = c[a2 + 108 >> 2] | 0;
          c[d2 + 128 + 40 >> 2] = u2;
          g[d2 + 128 + 44 >> 2] = 0;
          p2 = -+g[a2 + 116 >> 2];
          n2 = -+g[a2 + 120 >> 2];
          h2 = -+g[a2 + 124 >> 2];
          e2 = (c[l >> 2] = w2, +g[l >> 2]) * p2;
          e2 = e2 + (c[l >> 2] = v2, +g[l >> 2]) * n2;
          e2 = e2 + (c[l >> 2] = u2, +g[l >> 2]) * h2;
          f2 = (c[l >> 2] = t2, +g[l >> 2]) * p2;
          f2 = f2 + (c[l >> 2] = s2, +g[l >> 2]) * n2;
          f2 = f2 + (c[l >> 2] = r2, +g[l >> 2]) * h2;
          p2 = (c[l >> 2] = q2, +g[l >> 2]) * p2;
          n2 = p2 + (c[l >> 2] = o2, +g[l >> 2]) * n2;
          h2 = n2 + (c[l >> 2] = m2, +g[l >> 2]) * h2;
          c[d2 >> 2] = c[d2 + 128 >> 2];
          c[d2 + 4 >> 2] = c[d2 + 128 + 4 >> 2];
          c[d2 + 8 >> 2] = c[d2 + 128 + 8 >> 2];
          c[d2 + 12 >> 2] = c[d2 + 128 + 12 >> 2];
          c[d2 + 16 >> 2] = c[k2 >> 2];
          c[d2 + 16 + 4 >> 2] = c[k2 + 4 >> 2];
          c[d2 + 16 + 8 >> 2] = c[k2 + 8 >> 2];
          c[d2 + 16 + 12 >> 2] = c[k2 + 12 >> 2];
          c[d2 + 32 >> 2] = c[j2 >> 2];
          c[d2 + 32 + 4 >> 2] = c[j2 + 4 >> 2];
          c[d2 + 32 + 8 >> 2] = c[j2 + 8 >> 2];
          c[d2 + 32 + 12 >> 2] = c[j2 + 12 >> 2];
          g[d2 + 48 >> 2] = h2;
          g[d2 + 52 >> 2] = f2;
          g[d2 + 56 >> 2] = e2;
          g[d2 + 60 >> 2] = 0;
          Sg(d2 + 64 | 0, a2 + 4 | 0, d2);
          c[b2 >> 2] = c[d2 + 64 >> 2];
          c[b2 + 4 >> 2] = c[d2 + 64 + 4 >> 2];
          c[b2 + 8 >> 2] = c[d2 + 64 + 8 >> 2];
          c[b2 + 12 >> 2] = c[d2 + 64 + 12 >> 2];
          c[b2 + 16 >> 2] = c[d2 + 64 + 16 >> 2];
          c[b2 + 16 + 4 >> 2] = c[d2 + 64 + 16 + 4 >> 2];
          c[b2 + 16 + 8 >> 2] = c[d2 + 64 + 16 + 8 >> 2];
          c[b2 + 16 + 12 >> 2] = c[d2 + 64 + 16 + 12 >> 2];
          c[b2 + 32 >> 2] = c[d2 + 64 + 32 >> 2];
          c[b2 + 32 + 4 >> 2] = c[d2 + 64 + 32 + 4 >> 2];
          c[b2 + 32 + 8 >> 2] = c[d2 + 64 + 32 + 8 >> 2];
          c[b2 + 32 + 12 >> 2] = c[d2 + 64 + 32 + 12 >> 2];
          c[b2 + 48 >> 2] = c[d2 + 64 + 48 >> 2];
          c[b2 + 48 + 4 >> 2] = c[d2 + 64 + 48 + 4 >> 2];
          c[b2 + 48 + 8 >> 2] = c[d2 + 64 + 48 + 8 >> 2];
          c[b2 + 48 + 12 >> 2] = c[d2 + 64 + 48 + 12 >> 2];
          i = d2;
          return;
        }
        function of(a2, e2, f2) {
          a2 = a2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          ii(a2, e2, f2) | 0;
          c[e2 + 52 >> 2] = c[a2 + 552 >> 2];
          c[e2 + 56 >> 2] = c[a2 + 556 >> 2];
          c[e2 + 60 >> 2] = c[a2 + 560 >> 2];
          c[e2 + 64 >> 2] = c[a2 + 564 >> 2];
          c[e2 + 68 >> 2] = c[a2 + 568 >> 2];
          c[e2 + 72 >> 2] = c[a2 + 572 >> 2];
          c[e2 + 76 >> 2] = c[a2 + 576 >> 2];
          c[e2 + 80 >> 2] = c[a2 + 580 >> 2];
          c[e2 + 84 >> 2] = c[a2 + 584 >> 2];
          c[e2 + 88 >> 2] = c[a2 + 588 >> 2];
          c[e2 + 92 >> 2] = c[a2 + 592 >> 2];
          c[e2 + 96 >> 2] = c[a2 + 596 >> 2];
          c[e2 + 100 >> 2] = c[a2 + 600 >> 2];
          c[e2 + 104 >> 2] = c[a2 + 604 >> 2];
          c[e2 + 108 >> 2] = c[a2 + 608 >> 2];
          c[e2 + 112 >> 2] = c[a2 + 612 >> 2];
          c[e2 + 116 >> 2] = c[a2 + 616 >> 2];
          c[e2 + 120 >> 2] = c[a2 + 620 >> 2];
          c[e2 + 124 >> 2] = c[a2 + 624 >> 2];
          c[e2 + 128 >> 2] = c[a2 + 628 >> 2];
          c[e2 + 132 >> 2] = c[a2 + 632 >> 2];
          c[e2 + 136 >> 2] = c[a2 + 636 >> 2];
          c[e2 + 140 >> 2] = c[a2 + 640 >> 2];
          c[e2 + 144 >> 2] = c[a2 + 644 >> 2];
          c[e2 + 148 >> 2] = c[a2 + 648 >> 2];
          c[e2 + 152 >> 2] = c[a2 + 652 >> 2];
          c[e2 + 156 >> 2] = c[a2 + 656 >> 2];
          c[e2 + 160 >> 2] = c[a2 + 660 >> 2];
          c[e2 + 164 >> 2] = c[a2 + 664 >> 2];
          c[e2 + 168 >> 2] = c[a2 + 668 >> 2];
          c[e2 + 172 >> 2] = c[a2 + 672 >> 2];
          c[e2 + 176 >> 2] = c[a2 + 676 >> 2];
          f2 = b[a2 + 736 >> 1] | 0;
          c[e2 + 184 >> 2] = f2 & 255;
          c[e2 + 188 >> 2] = (f2 & 65535) >>> 8 & 65535;
          c[e2 + 196 >> 2] = c[a2 + 684 >> 2];
          c[e2 + 192 >> 2] = c[a2 + 680 >> 2];
          c[e2 + 180 >> 2] = d[a2 + 740 >> 0];
          i2 = +g[a2 + 688 >> 2];
          j2 = +g[a2 + 692 >> 2];
          h2 = +jh(i2 - j2, 6.2831854820251465);
          if (!(h2 < -3.1415927410125732)) {
            if (h2 > 3.1415927410125732)
              h2 = h2 + -6.2831854820251465;
          } else
            h2 = h2 + 6.2831854820251465;
          g[e2 + 200 >> 2] = h2;
          h2 = +jh(i2 + j2, 6.2831854820251465);
          if (h2 < -3.1415927410125732) {
            j2 = h2 + 6.2831854820251465;
            f2 = e2 + 204 | 0;
            g[f2 >> 2] = j2;
            f2 = a2 + 696 | 0;
            f2 = c[f2 >> 2] | 0;
            k2 = e2 + 208 | 0;
            c[k2 >> 2] = f2;
            k2 = a2 + 700 | 0;
            k2 = c[k2 >> 2] | 0;
            f2 = e2 + 212 | 0;
            c[f2 >> 2] = k2;
            a2 = a2 + 704 | 0;
            a2 = c[a2 >> 2] | 0;
            e2 = e2 + 216 | 0;
            c[e2 >> 2] = a2;
            return 12121;
          }
          if (!(h2 > 3.1415927410125732)) {
            j2 = h2;
            k2 = e2 + 204 | 0;
            g[k2 >> 2] = j2;
            k2 = a2 + 696 | 0;
            k2 = c[k2 >> 2] | 0;
            f2 = e2 + 208 | 0;
            c[f2 >> 2] = k2;
            f2 = a2 + 700 | 0;
            f2 = c[f2 >> 2] | 0;
            k2 = e2 + 212 | 0;
            c[k2 >> 2] = f2;
            a2 = a2 + 704 | 0;
            a2 = c[a2 >> 2] | 0;
            k2 = e2 + 216 | 0;
            c[k2 >> 2] = a2;
            return 12121;
          }
          j2 = h2 + -6.2831854820251465;
          k2 = e2 + 204 | 0;
          g[k2 >> 2] = j2;
          k2 = a2 + 696 | 0;
          k2 = c[k2 >> 2] | 0;
          f2 = e2 + 208 | 0;
          c[f2 >> 2] = k2;
          f2 = a2 + 700 | 0;
          f2 = c[f2 >> 2] | 0;
          k2 = e2 + 212 | 0;
          c[k2 >> 2] = f2;
          a2 = a2 + 704 | 0;
          a2 = c[a2 >> 2] | 0;
          k2 = e2 + 216 | 0;
          c[k2 >> 2] = a2;
          return 12121;
        }
        function pf(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          i2 = c[b2 + 4 >> 2] | 0;
          if ((i2 | 0) == (c[b2 + 8 >> 2] | 0) ? (h2 = i2 | 0 ? i2 << 1 : 1, (i2 | 0) < (h2 | 0)) : 0) {
            if (!h2) {
              e2 = 0;
              g2 = i2;
            } else {
              c[6324] = (c[6324] | 0) + 1;
              e2 = ic((h2 * 244 | 3) + 16 | 0) | 0;
              if (!e2)
                e2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                e2 = e2 + 4 + 15 & -16;
              }
              g2 = c[b2 + 4 >> 2] | 0;
            }
            if ((g2 | 0) > 0) {
              f2 = 0;
              do {
                k2 = e2 + (f2 * 244 | 0) | 0;
                j2 = c[b2 + 12 >> 2] | 0;
                l2 = j2 + (f2 * 244 | 0) | 0;
                c[k2 >> 2] = c[l2 >> 2];
                c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
                c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
                c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
                k2 = e2 + (f2 * 244 | 0) + 16 | 0;
                l2 = j2 + (f2 * 244 | 0) + 16 | 0;
                c[k2 >> 2] = c[l2 >> 2];
                c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
                c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
                c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
                k2 = e2 + (f2 * 244 | 0) + 32 | 0;
                l2 = j2 + (f2 * 244 | 0) + 32 | 0;
                c[k2 >> 2] = c[l2 >> 2];
                c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
                c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
                c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
                k2 = e2 + (f2 * 244 | 0) + 48 | 0;
                l2 = j2 + (f2 * 244 | 0) + 48 | 0;
                c[k2 >> 2] = c[l2 >> 2];
                c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
                c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
                c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
                Lm(e2 + (f2 * 244 | 0) + 64 | 0, j2 + (f2 * 244 | 0) + 64 | 0, 180) | 0;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (g2 | 0));
            }
            f2 = c[b2 + 12 >> 2] | 0;
            if (f2 | 0) {
              if (a[b2 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[b2 + 12 >> 2] = 0;
            }
            a[b2 + 16 >> 0] = 1;
            c[b2 + 12 >> 2] = e2;
            c[b2 + 8 >> 2] = h2;
            e2 = c[b2 + 4 >> 2] | 0;
          } else
            e2 = i2;
          c[b2 + 4 >> 2] = e2 + 1;
          l2 = c[b2 + 12 >> 2] | 0;
          c[l2 + (i2 * 244 | 0) >> 2] = c[d2 >> 2];
          c[l2 + (i2 * 244 | 0) + 4 >> 2] = c[d2 + 4 >> 2];
          c[l2 + (i2 * 244 | 0) + 8 >> 2] = c[d2 + 8 >> 2];
          c[l2 + (i2 * 244 | 0) + 12 >> 2] = c[d2 + 12 >> 2];
          c[l2 + (i2 * 244 | 0) + 16 >> 2] = c[d2 + 16 >> 2];
          c[l2 + (i2 * 244 | 0) + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[l2 + (i2 * 244 | 0) + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[l2 + (i2 * 244 | 0) + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[l2 + (i2 * 244 | 0) + 32 >> 2] = c[d2 + 32 >> 2];
          c[l2 + (i2 * 244 | 0) + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[l2 + (i2 * 244 | 0) + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[l2 + (i2 * 244 | 0) + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          c[l2 + (i2 * 244 | 0) + 48 >> 2] = c[d2 + 48 >> 2];
          c[l2 + (i2 * 244 | 0) + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[l2 + (i2 * 244 | 0) + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[l2 + (i2 * 244 | 0) + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          Lm(l2 + (i2 * 244 | 0) + 64 | 0, d2 + 64 | 0, 180) | 0;
          return (c[b2 + 12 >> 2] | 0) + (i2 * 244 | 0) | 0;
        }
        function qf(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          p2 = i;
          i = i + 32 | 0;
          a[p2 + 16 >> 0] = 1;
          c[p2 + 12 >> 2] = 0;
          c[p2 + 4 >> 2] = 0;
          c[p2 + 8 >> 2] = 0;
          e2 = c[b2 + 8 >> 2] | 0;
          if ((e2 | 0) > 0) {
            m2 = 0;
            g2 = 0;
            f2 = 0;
            h2 = 0;
            do {
              k2 = c[b2 + 16 >> 2] | 0;
              l2 = k2 + (m2 << 4) | 0;
              if ((g2 | 0) == (h2 | 0)) {
                g2 = h2 | 0 ? h2 << 1 : 1;
                if ((h2 | 0) < (g2 | 0)) {
                  if ((g2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, n2 = ic((g2 << 4 | 3) + 16 | 0) | 0, (n2 | 0) != 0) : 0) {
                    c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                    f2 = n2 + 4 + 15 & -16;
                  } else
                    f2 = 0;
                  if ((h2 | 0) > 0) {
                    e2 = 0;
                    do {
                      j2 = c[p2 + 12 >> 2] | 0;
                      c[f2 + (e2 << 4) >> 2] = c[j2 + (e2 << 4) >> 2];
                      c[f2 + (e2 << 4) + 4 >> 2] = c[j2 + (e2 << 4) + 4 >> 2];
                      c[f2 + (e2 << 4) + 8 >> 2] = c[j2 + (e2 << 4) + 8 >> 2];
                      c[f2 + (e2 << 4) + 12 >> 2] = c[j2 + (e2 << 4) + 12 >> 2];
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (h2 | 0));
                  }
                  e2 = c[p2 + 12 >> 2] | 0;
                  if (e2 | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[e2 + -4 >> 2] | 0);
                    c[p2 + 12 >> 2] = 0;
                  }
                  a[p2 + 16 >> 0] = 1;
                  c[p2 + 12 >> 2] = f2;
                  c[p2 + 8 >> 2] = g2;
                  j2 = h2;
                  h2 = g2;
                  e2 = c[b2 + 8 >> 2] | 0;
                } else
                  j2 = h2;
              } else
                j2 = g2;
              c[f2 + (j2 << 4) >> 2] = c[l2 >> 2];
              c[f2 + (j2 << 4) + 4 >> 2] = c[k2 + (m2 << 4) + 4 >> 2];
              c[f2 + (j2 << 4) + 8 >> 2] = c[k2 + (m2 << 4) + 8 >> 2];
              c[f2 + (j2 << 4) + 12 >> 2] = c[k2 + (m2 << 4) + 12 >> 2];
              g2 = j2 + 1 | 0;
              c[p2 + 4 >> 2] = g2;
              m2 = m2 + 1 | 0;
            } while ((m2 | 0) < (e2 | 0));
            if ((j2 | 0) > -1) {
              f2 = c[p2 + 12 >> 2] | 0;
              e2 = 0;
              while (1) {
                sb[c[(c[b2 >> 2] | 0) + 12 >> 2] & 31](b2, c[f2 + (e2 << 4) >> 2] | 0, c[f2 + (e2 << 4) + 4 >> 2] | 0, d2) | 0;
                if ((e2 | 0) < (j2 | 0))
                  e2 = e2 + 1 | 0;
                else
                  break;
              }
            }
          } else
            g2 = 0;
          if ((c[b2 + 52 >> 2] | 0) > 0) {
            f2 = c[b2 + 60 >> 2] | 0;
            e2 = 0;
            do {
              c[f2 + (e2 << 2) >> 2] = -1;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) < (c[b2 + 52 >> 2] | 0));
          }
          if ((g2 | 0) <= 1)
            if ((g2 | 0) <= 0) {
              e2 = c[p2 + 12 >> 2] | 0;
              if (!e2) {
                i = p2;
                return;
              }
            } else
              o2 = 23;
          else {
            Gd(p2, 0, g2 + -1 | 0);
            o2 = 23;
          }
          if ((o2 | 0) == 23) {
            e2 = c[p2 + 12 >> 2] | 0;
            f2 = 0;
            do {
              yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 63](b2, c[e2 + (f2 << 4) >> 2] | 0, c[e2 + (f2 << 4) + 4 >> 2] | 0) | 0;
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) < (g2 | 0));
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[e2 + -4 >> 2] | 0);
          c[p2 + 12 >> 2] = 0;
          i = p2;
          return;
        }
        function rf(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
          l2 = i;
          i = i + 64 | 0;
          n2 = +g[a2 + 20 >> 2];
          u2 = +g[a2 + 40 >> 2];
          p2 = +g[a2 + 24 >> 2];
          s2 = +g[a2 + 36 >> 2];
          t2 = +g[a2 + 32 >> 2];
          m2 = +g[a2 + 16 >> 2];
          k2 = +g[a2 >> 2];
          j2 = +g[a2 + 4 >> 2];
          q2 = +g[a2 + 8 >> 2];
          h2 = 1 / ((n2 * u2 - p2 * s2) * k2 + j2 * (p2 * t2 - u2 * m2) + (s2 * m2 - n2 * t2) * q2);
          z2 = +g[b2 >> 2];
          y2 = +g[b2 + 4 >> 2];
          A2 = +g[b2 + 8 >> 2];
          x2 = +g[b2 + 16 >> 2];
          w2 = +g[b2 + 20 >> 2];
          v2 = +g[b2 + 24 >> 2];
          r2 = +g[b2 + 32 >> 2];
          o2 = +g[b2 + 36 >> 2];
          f2 = +g[b2 + 40 >> 2];
          g[l2 + 16 >> 2] = A2 * (s2 * m2 - n2 * t2) * h2 + (z2 * (n2 * u2 - p2 * s2) * h2 + y2 * (p2 * t2 - u2 * m2) * h2);
          g[l2 + 16 + 4 >> 2] = A2 * (t2 * j2 - s2 * k2) * h2 + (z2 * (s2 * q2 - u2 * j2) * h2 + y2 * (u2 * k2 - t2 * q2) * h2);
          g[l2 + 16 + 8 >> 2] = A2 * (n2 * k2 - m2 * j2) * h2 + (z2 * (p2 * j2 - n2 * q2) * h2 + y2 * (m2 * q2 - p2 * k2) * h2);
          g[l2 + 16 + 12 >> 2] = 0;
          g[l2 + 16 + 16 >> 2] = (n2 * u2 - p2 * s2) * h2 * x2 + (p2 * t2 - u2 * m2) * h2 * w2 + (s2 * m2 - n2 * t2) * h2 * v2;
          g[l2 + 16 + 20 >> 2] = (s2 * q2 - u2 * j2) * h2 * x2 + (u2 * k2 - t2 * q2) * h2 * w2 + (t2 * j2 - s2 * k2) * h2 * v2;
          g[l2 + 16 + 24 >> 2] = (p2 * j2 - n2 * q2) * h2 * x2 + (m2 * q2 - p2 * k2) * h2 * w2 + (n2 * k2 - m2 * j2) * h2 * v2;
          g[l2 + 16 + 28 >> 2] = 0;
          g[l2 + 16 + 32 >> 2] = (n2 * u2 - p2 * s2) * h2 * r2 + (p2 * t2 - u2 * m2) * h2 * o2 + (s2 * m2 - n2 * t2) * h2 * f2;
          g[l2 + 16 + 36 >> 2] = (s2 * q2 - u2 * j2) * h2 * r2 + (u2 * k2 - t2 * q2) * h2 * o2 + (t2 * j2 - s2 * k2) * h2 * f2;
          g[l2 + 16 + 40 >> 2] = (p2 * j2 - n2 * q2) * h2 * r2 + (m2 * q2 - p2 * k2) * h2 * o2 + (n2 * k2 - m2 * j2) * h2 * f2;
          g[l2 + 16 + 44 >> 2] = 0;
          Jg(l2 + 16 | 0, l2);
          f2 = +g[l2 >> 2];
          h2 = +g[l2 + 4 >> 2];
          j2 = +g[l2 + 8 >> 2];
          m2 = +g[l2 + 12 >> 2];
          k2 = 1 / +G(+(f2 * f2 + h2 * h2 + j2 * j2 + m2 * m2));
          g[l2 >> 2] = f2 * k2;
          g[l2 + 4 >> 2] = h2 * k2;
          g[l2 + 8 >> 2] = j2 * k2;
          g[l2 + 12 >> 2] = m2 * k2;
          m2 = m2 * k2 < -1 ? -1 : m2 * k2;
          g[e2 >> 2] = +L(+(m2 > 1 ? 1 : m2)) * 2;
          g[d2 >> 2] = f2 * k2;
          g[d2 + 4 >> 2] = h2 * k2;
          g[d2 + 8 >> 2] = j2 * k2;
          g[d2 + 12 >> 2] = 0;
          if (f2 * k2 * f2 * k2 + h2 * k2 * h2 * k2 + j2 * k2 * j2 * k2 < 14210854715202004e-30) {
            c[d2 >> 2] = 1065353216;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            g[d2 + 12 >> 2] = 0;
            i = l2;
            return;
          } else {
            A2 = 1 / +G(+(f2 * k2 * f2 * k2 + h2 * k2 * h2 * k2 + j2 * k2 * j2 * k2));
            g[d2 >> 2] = f2 * k2 * A2;
            g[d2 + 4 >> 2] = A2 * h2 * k2;
            g[d2 + 8 >> 2] = A2 * j2 * k2;
            i = l2;
            return;
          }
        }
        function sf(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = -1;
          c[b2 >> 2] = 7100;
          a[b2 + 32 >> 0] = 1;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 20 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 36 >> 2] = 1566444395;
          c[b2 + 40 >> 2] = 1566444395;
          c[b2 + 44 >> 2] = 1566444395;
          g[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = -581039253;
          c[b2 + 56 >> 2] = -581039253;
          c[b2 + 60 >> 2] = -581039253;
          g[b2 + 64 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 72 >> 2] = 1;
          g[b2 + 76 >> 2] = 0;
          c[b2 + 80 >> 2] = 1065353216;
          c[b2 + 84 >> 2] = 1065353216;
          c[b2 + 88 >> 2] = 1065353216;
          g[b2 + 92 >> 2] = 0;
          c[b2 + 4 >> 2] = 31;
          if (d2) {
            c[6324] = (c[6324] | 0) + 1;
            d2 = ic(79) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            a[d2 + 36 >> 0] = 1;
            c[d2 + 32 >> 2] = 0;
            c[d2 + 24 >> 2] = 0;
            c[d2 + 28 >> 2] = 0;
            a[d2 + 56 >> 0] = 1;
            c[d2 + 52 >> 2] = 0;
            c[d2 + 44 >> 2] = 0;
            c[d2 + 48 >> 2] = 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = -1;
            c[d2 + 12 >> 2] = 0;
            c[d2 + 16 >> 2] = 0;
            c[b2 + 68 >> 2] = d2;
            d2 = c[b2 + 24 >> 2] | 0;
          } else
            d2 = 0;
          if ((d2 | 0) >= (e2 | 0))
            return;
          if ((e2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, f2 = ic((e2 * 80 | 3) + 16 | 0) | 0, (f2 | 0) != 0) : 0) {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            h2 = f2 + 4 + 15 & -16;
          } else
            h2 = 0;
          f2 = c[b2 + 20 >> 2] | 0;
          if ((f2 | 0) > 0) {
            d2 = 0;
            do {
              i2 = h2 + (d2 * 80 | 0) | 0;
              j2 = c[b2 + 28 >> 2] | 0;
              k2 = j2 + (d2 * 80 | 0) | 0;
              c[i2 >> 2] = c[k2 >> 2];
              c[i2 + 4 >> 2] = c[k2 + 4 >> 2];
              c[i2 + 8 >> 2] = c[k2 + 8 >> 2];
              c[i2 + 12 >> 2] = c[k2 + 12 >> 2];
              i2 = h2 + (d2 * 80 | 0) + 16 | 0;
              k2 = j2 + (d2 * 80 | 0) + 16 | 0;
              c[i2 >> 2] = c[k2 >> 2];
              c[i2 + 4 >> 2] = c[k2 + 4 >> 2];
              c[i2 + 8 >> 2] = c[k2 + 8 >> 2];
              c[i2 + 12 >> 2] = c[k2 + 12 >> 2];
              i2 = h2 + (d2 * 80 | 0) + 32 | 0;
              k2 = j2 + (d2 * 80 | 0) + 32 | 0;
              c[i2 >> 2] = c[k2 >> 2];
              c[i2 + 4 >> 2] = c[k2 + 4 >> 2];
              c[i2 + 8 >> 2] = c[k2 + 8 >> 2];
              c[i2 + 12 >> 2] = c[k2 + 12 >> 2];
              i2 = h2 + (d2 * 80 | 0) + 48 | 0;
              k2 = j2 + (d2 * 80 | 0) + 48 | 0;
              c[i2 >> 2] = c[k2 >> 2];
              c[i2 + 4 >> 2] = c[k2 + 4 >> 2];
              c[i2 + 8 >> 2] = c[k2 + 8 >> 2];
              c[i2 + 12 >> 2] = c[k2 + 12 >> 2];
              i2 = h2 + (d2 * 80 | 0) + 64 | 0;
              j2 = j2 + (d2 * 80 | 0) + 64 | 0;
              c[i2 >> 2] = c[j2 >> 2];
              c[i2 + 4 >> 2] = c[j2 + 4 >> 2];
              c[i2 + 8 >> 2] = c[j2 + 8 >> 2];
              c[i2 + 12 >> 2] = c[j2 + 12 >> 2];
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (f2 | 0));
          }
          d2 = c[b2 + 28 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 32 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 28 >> 2] = 0;
          }
          a[b2 + 32 >> 0] = 1;
          c[b2 + 28 >> 2] = h2;
          c[b2 + 24 >> 2] = e2;
          return;
        }
        function tf(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          j2 = c[b2 + 12 >> 2] | 0;
          k2 = c[b2 + 32 >> 2] | 0;
          if ((k2 | 0) >= (j2 | 0))
            return;
          do
            if ((c[b2 + 36 >> 2] | 0) < (j2 | 0)) {
              if (!j2) {
                d2 = 0;
                f2 = k2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                f2 = c[b2 + 32 >> 2] | 0;
              }
              g2 = c[b2 + 40 >> 2] | 0;
              if ((f2 | 0) <= 0) {
                if (!g2) {
                  a[b2 + 44 >> 0] = 1;
                  c[b2 + 40 >> 2] = d2;
                  c[b2 + 36 >> 2] = j2;
                  i2 = b2 + 40 | 0;
                  break;
                }
              } else {
                e2 = 0;
                do {
                  c[d2 + (e2 << 2) >> 2] = c[g2 + (e2 << 2) >> 2];
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != (f2 | 0));
              }
              if (a[b2 + 44 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[g2 + -4 >> 2] | 0);
              }
              a[b2 + 44 >> 0] = 1;
              c[b2 + 40 >> 2] = d2;
              c[b2 + 36 >> 2] = j2;
              i2 = b2 + 40 | 0;
            } else {
              i2 = b2 + 40 | 0;
              d2 = c[b2 + 40 >> 2] | 0;
            }
          while (0);
          yn(d2 + (k2 << 2) | 0, 0, (j2 << 2) - (k2 << 2) | 0) | 0;
          c[b2 + 32 >> 2] = j2;
          h2 = c[b2 + 52 >> 2] | 0;
          if ((h2 | 0) < (j2 | 0)) {
            do
              if ((c[b2 + 56 >> 2] | 0) < (j2 | 0)) {
                if (!j2) {
                  d2 = 0;
                  f2 = h2;
                } else {
                  c[6324] = (c[6324] | 0) + 1;
                  d2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
                  if (!d2)
                    d2 = 0;
                  else {
                    c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                    d2 = d2 + 4 + 15 & -16;
                  }
                  f2 = c[b2 + 52 >> 2] | 0;
                }
                g2 = c[b2 + 60 >> 2] | 0;
                if ((f2 | 0) <= 0) {
                  if (!g2) {
                    a[b2 + 64 >> 0] = 1;
                    c[b2 + 60 >> 2] = d2;
                    c[b2 + 56 >> 2] = j2;
                    break;
                  }
                } else {
                  e2 = 0;
                  do {
                    c[d2 + (e2 << 2) >> 2] = c[g2 + (e2 << 2) >> 2];
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != (f2 | 0));
                }
                if (a[b2 + 64 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[g2 + -4 >> 2] | 0);
                }
                a[b2 + 64 >> 0] = 1;
                c[b2 + 60 >> 2] = d2;
                c[b2 + 56 >> 2] = j2;
              } else
                d2 = c[b2 + 60 >> 2] | 0;
            while (0);
            yn(d2 + (h2 << 2) | 0, 0, (j2 << 2) - (h2 << 2) | 0) | 0;
          }
          c[b2 + 52 >> 2] = j2;
          if ((j2 | 0) > 0) {
            yn(c[i2 >> 2] | 0, -1, j2 << 2 | 0) | 0;
            yn(c[b2 + 60 >> 2] | 0, -1, j2 << 2 | 0) | 0;
          }
          if ((k2 | 0) <= 0)
            return;
          g2 = c[b2 + 16 >> 2] | 0;
          e2 = c[i2 >> 2] | 0;
          f2 = c[b2 + 60 >> 2] | 0;
          d2 = 0;
          do {
            j2 = c[(c[g2 + (d2 << 4) + 4 >> 2] | 0) + 12 >> 2] << 16 | c[(c[g2 + (d2 << 4) >> 2] | 0) + 12 >> 2];
            j2 = (j2 + ~(j2 << 15) >> 10 ^ j2 + ~(j2 << 15)) * 9 | 0;
            j2 = e2 + ((((j2 >> 6 ^ j2) + ~((j2 >> 6 ^ j2) << 11) >> 16 ^ (j2 >> 6 ^ j2) + ~((j2 >> 6 ^ j2) << 11)) & (c[b2 + 12 >> 2] | 0) + -1) << 2) | 0;
            c[f2 + (d2 << 2) >> 2] = c[j2 >> 2];
            c[j2 >> 2] = d2;
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != (k2 | 0));
          return;
        }
        function uf(b2, d2, e2, f2, h2, j2, k2, l2, m2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          r2 = i;
          i = i + 80 | 0;
          g[r2 + 16 + 60 >> 2] = 0;
          g[r2 + 16 + 8 >> 2] = 0;
          g[r2 + 16 + 12 >> 2] = 0.10000000149011612;
          g[r2 + 16 + 16 >> 2] = 300;
          g[r2 + 16 >> 2] = 1;
          g[r2 + 16 + 4 >> 2] = -1;
          g[r2 + 16 + 28 >> 2] = 0;
          g[r2 + 16 + 32 >> 2] = 0.20000000298023224;
          g[r2 + 16 + 36 >> 2] = 0;
          g[r2 + 16 + 40 >> 2] = 0;
          g[r2 + 16 + 20 >> 2] = 1;
          g[r2 + 16 + 24 >> 2] = 0.5;
          c[r2 + 16 + 56 >> 2] = 0;
          g[r2 + 16 + 48 >> 2] = 0;
          a[r2 + 16 + 44 >> 0] = 0;
          p2 = 0;
          do {
            o2 = c[b2 + 856 + (p2 << 2) >> 2] | 0;
            n2 = a[b2 + 788 + p2 >> 0] | 0;
            if (!o2) {
              if (n2 << 24 >> 24) {
                n2 = 1;
                q2 = 5;
              }
            } else
              q2 = 5;
            if ((q2 | 0) == 5) {
              q2 = 0;
              g[r2 + 16 + 40 >> 2] = 0;
              c[r2 + 16 + 56 >> 2] = o2;
              c[r2 + 16 + 52 >> 2] = c[b2 + 840 + (p2 << 2) >> 2];
              c[r2 + 16 + 48 >> 2] = c[b2 + 824 + (p2 << 2) >> 2];
              c[r2 + 16 + 20 >> 2] = c[b2 + 732 >> 2];
              a[r2 + 16 + 44 >> 0] = n2;
              c[r2 + 16 + 4 >> 2] = c[b2 + 696 + (p2 << 2) >> 2];
              c[r2 + 16 + 24 >> 2] = c[b2 + 728 >> 2];
              c[r2 + 16 >> 2] = c[b2 + 680 + (p2 << 2) >> 2];
              g[r2 + 16 + 16 >> 2] = 0;
              c[r2 + 16 + 12 >> 2] = c[b2 + 808 + (p2 << 2) >> 2];
              c[r2 + 16 + 8 >> 2] = c[b2 + 792 + (p2 << 2) >> 2];
              c[r2 >> 2] = c[b2 + 1064 + (p2 << 2) >> 2];
              c[r2 + 4 >> 2] = c[b2 + 1080 + (p2 << 2) >> 2];
              c[r2 + 8 >> 2] = c[b2 + 1096 + (p2 << 2) >> 2];
              g[r2 + 12 >> 2] = 0;
              o2 = c[b2 + 1304 >> 2] >> p2 * 3;
              if (!(o2 & 1))
                n2 = c[d2 + 32 >> 2] | 0;
              else
                n2 = b2 + 740 + (p2 << 2) | 0;
              c[r2 + 16 + 28 >> 2] = c[n2 >> 2];
              if (!(o2 & 2))
                n2 = c[d2 + 32 >> 2] | 0;
              else
                n2 = b2 + 772 + (p2 << 2) | 0;
              c[r2 + 16 + 36 >> 2] = c[n2 >> 2];
              c[r2 + 16 + 32 >> 2] = c[((o2 & 4 | 0) == 0 ? d2 + 4 | 0 : b2 + 756 + (p2 << 2) | 0) >> 2];
              if (!(a[b2 + 1301 >> 0] | 0))
                n2 = nd(b2, r2 + 16 | 0, f2, h2, j2, k2, l2, m2, d2, e2, r2, 0, 0) | 0;
              else {
                o2 = p2 + 1 | 0;
                if (!(c[b2 + 868 + (((o2 | 0) == 3 ? 0 : o2) << 6) + 56 >> 2] | 0))
                  n2 = 1;
                else
                  n2 = (c[b2 + 868 + (((p2 + 2 | 0) % 3 | 0) << 6) + 56 >> 2] | 0) == 0 & 1;
                n2 = nd(b2, r2 + 16 | 0, f2, h2, j2, k2, l2, m2, d2, e2, r2, 0, n2) | 0;
              }
              e2 = n2 + e2 | 0;
            }
            p2 = p2 + 1 | 0;
          } while ((p2 | 0) != 3);
          i = r2;
          return e2 | 0;
        }
        function vf(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          if ((c[b2 + 8 >> 2] | 0) >= (d2 | 0))
            return;
          if ((d2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, e2 = ic((d2 * 36 | 3) + 16 | 0) | 0, (e2 | 0) != 0) : 0) {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            o2 = e2 + 4 + 15 & -16;
          } else
            o2 = 0;
          j2 = c[b2 + 4 >> 2] | 0;
          if ((j2 | 0) > 0) {
            i2 = 0;
            do {
              k2 = o2 + (i2 * 36 | 0) | 0;
              l2 = c[b2 + 12 >> 2] | 0;
              a[k2 + 16 >> 0] = 1;
              c[k2 + 12 >> 2] = 0;
              c[k2 + 4 >> 2] = 0;
              c[k2 + 8 >> 2] = 0;
              m2 = c[l2 + (i2 * 36 | 0) + 4 >> 2] | 0;
              if ((m2 | 0) > 0) {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((m2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  f2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  f2 = e2 + 4 + 15 & -16;
                }
                g2 = c[k2 + 4 >> 2] | 0;
                h2 = c[k2 + 12 >> 2] | 0;
                if ((g2 | 0) <= 0)
                  if (!h2) {
                    a[k2 + 16 >> 0] = 1;
                    c[k2 + 12 >> 2] = f2;
                    c[k2 + 8 >> 2] = m2;
                    yn(f2 | 0, 0, m2 << 2 | 0) | 0;
                  } else
                    n2 = 14;
                else {
                  e2 = 0;
                  do {
                    c[f2 + (e2 << 2) >> 2] = c[h2 + (e2 << 2) >> 2];
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != (g2 | 0));
                  n2 = 14;
                }
                if ((n2 | 0) == 14) {
                  n2 = 0;
                  if (a[k2 + 16 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[h2 + -4 >> 2] | 0);
                  }
                  a[k2 + 16 >> 0] = 1;
                  c[k2 + 12 >> 2] = f2;
                  c[k2 + 8 >> 2] = m2;
                  yn(f2 | 0, 0, m2 << 2 | 0) | 0;
                }
                f2 = c[k2 + 12 >> 2] | 0;
                c[k2 + 4 >> 2] = m2;
                g2 = c[l2 + (i2 * 36 | 0) + 12 >> 2] | 0;
                e2 = 0;
                do {
                  c[f2 + (e2 << 2) >> 2] = c[g2 + (e2 << 2) >> 2];
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != (m2 | 0));
              } else
                c[k2 + 4 >> 2] = m2;
              m2 = l2 + (i2 * 36 | 0) + 20 | 0;
              c[k2 + 20 >> 2] = c[m2 >> 2];
              c[k2 + 20 + 4 >> 2] = c[m2 + 4 >> 2];
              c[k2 + 20 + 8 >> 2] = c[m2 + 8 >> 2];
              c[k2 + 20 + 12 >> 2] = c[m2 + 12 >> 2];
              i2 = i2 + 1 | 0;
            } while ((i2 | 0) != (j2 | 0));
            f2 = c[b2 + 4 >> 2] | 0;
            if ((f2 | 0) > 0) {
              e2 = 0;
              do {
                h2 = c[b2 + 12 >> 2] | 0;
                i2 = h2 + (e2 * 36 | 0) + 4 | 0;
                j2 = h2 + (e2 * 36 | 0) + 12 | 0;
                k2 = c[j2 >> 2] | 0;
                g2 = h2 + (e2 * 36 | 0) + 16 | 0;
                if (k2 | 0) {
                  if (a[g2 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[k2 + -4 >> 2] | 0);
                  }
                  c[j2 >> 2] = 0;
                }
                a[g2 >> 0] = 1;
                c[j2 >> 2] = 0;
                c[i2 >> 2] = 0;
                c[h2 + (e2 * 36 | 0) + 8 >> 2] = 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (f2 | 0));
            }
          }
          e2 = c[b2 + 12 >> 2] | 0;
          if (e2 | 0) {
            if (a[b2 + 16 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[e2 + -4 >> 2] | 0);
            }
            c[b2 + 12 >> 2] = 0;
          }
          a[b2 + 16 >> 0] = 1;
          c[b2 + 12 >> 2] = o2;
          c[b2 + 8 >> 2] = d2;
          return;
        }
        function wf(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          f2 = i;
          i = i + 256 | 0;
          c[f2 + 32 >> 2] = 3760;
          l2 = f2 + 32 + 36 | 0;
          c[l2 >> 2] = c[b2 >> 2];
          c[l2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[l2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[l2 + 12 >> 2] = c[b2 + 12 >> 2];
          m2 = f2 + 32 + 52 | 0;
          c[m2 >> 2] = c[d2 >> 2];
          c[m2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[m2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[m2 + 12 >> 2] = c[d2 + 12 >> 2];
          c[f2 + 32 + 212 >> 2] = a2;
          c[f2 + 32 + 216 >> 2] = e2;
          c[f2 + 32 + 68 >> 2] = 1065353216;
          c[f2 + 32 + 72 >> 2] = 0;
          c[f2 + 32 + 72 + 4 >> 2] = 0;
          c[f2 + 32 + 72 + 8 >> 2] = 0;
          c[f2 + 32 + 72 + 12 >> 2] = 0;
          c[f2 + 32 + 88 >> 2] = 1065353216;
          c[f2 + 32 + 92 >> 2] = 0;
          c[f2 + 32 + 92 + 4 >> 2] = 0;
          c[f2 + 32 + 92 + 8 >> 2] = 0;
          c[f2 + 32 + 92 + 12 >> 2] = 0;
          c[f2 + 32 + 108 >> 2] = 1065353216;
          c[f2 + 32 + 112 >> 2] = 0;
          c[f2 + 32 + 116 >> 2] = c[l2 >> 2];
          c[f2 + 32 + 116 + 4 >> 2] = c[l2 + 4 >> 2];
          c[f2 + 32 + 116 + 8 >> 2] = c[l2 + 8 >> 2];
          c[f2 + 32 + 116 + 12 >> 2] = c[l2 + 12 >> 2];
          c[f2 + 32 + 132 >> 2] = 1065353216;
          c[f2 + 32 + 136 >> 2] = 0;
          c[f2 + 32 + 136 + 4 >> 2] = 0;
          c[f2 + 32 + 136 + 8 >> 2] = 0;
          c[f2 + 32 + 136 + 12 >> 2] = 0;
          c[f2 + 32 + 152 >> 2] = 1065353216;
          c[f2 + 32 + 156 >> 2] = 0;
          c[f2 + 32 + 156 + 4 >> 2] = 0;
          c[f2 + 32 + 156 + 8 >> 2] = 0;
          c[f2 + 32 + 156 + 12 >> 2] = 0;
          c[f2 + 32 + 172 >> 2] = 1065353216;
          c[f2 + 32 + 176 >> 2] = 0;
          c[f2 + 32 + 180 >> 2] = c[d2 >> 2];
          c[f2 + 32 + 180 + 4 >> 2] = c[d2 + 4 >> 2];
          c[f2 + 32 + 180 + 8 >> 2] = c[d2 + 8 >> 2];
          c[f2 + 32 + 180 + 12 >> 2] = c[d2 + 12 >> 2];
          n2 = +g[d2 >> 2] - +g[b2 >> 2];
          k2 = +g[d2 + 4 >> 2] - +g[b2 + 4 >> 2];
          j2 = +g[d2 + 8 >> 2] - +g[b2 + 8 >> 2];
          h2 = 1 / +G(+(n2 * n2 + k2 * k2 + j2 * j2));
          q2 = n2 * h2 == 0 ? 10000000150474662e14 : 1 / (n2 * h2);
          g[f2 + 32 + 4 >> 2] = q2;
          p2 = k2 * h2 == 0 ? 10000000150474662e14 : 1 / (k2 * h2);
          g[f2 + 32 + 8 >> 2] = p2;
          o2 = j2 * h2 == 0 ? 10000000150474662e14 : 1 / (j2 * h2);
          g[f2 + 32 + 12 >> 2] = o2;
          c[f2 + 32 + 20 >> 2] = q2 < 0 & 1;
          c[f2 + 32 + 24 >> 2] = p2 < 0 & 1;
          c[f2 + 32 + 28 >> 2] = o2 < 0 & 1;
          g[f2 + 32 + 32 >> 2] = n2 * h2 * (+g[m2 >> 2] - +g[l2 >> 2]) + k2 * h2 * (+g[f2 + 32 + 56 >> 2] - +g[f2 + 32 + 40 >> 2]) + j2 * h2 * (+g[f2 + 32 + 60 >> 2] - +g[f2 + 32 + 44 >> 2]);
          e2 = c[a2 + 68 >> 2] | 0;
          a2 = c[(c[e2 >> 2] | 0) + 24 >> 2] | 0;
          c[f2 + 16 >> 2] = 0;
          c[f2 + 16 + 4 >> 2] = 0;
          c[f2 + 16 + 8 >> 2] = 0;
          c[f2 + 16 + 12 >> 2] = 0;
          c[f2 >> 2] = 0;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          c[f2 + 12 >> 2] = 0;
          Ab[a2 & 7](e2, b2, d2, f2 + 32 | 0, f2 + 16 | 0, f2);
          i = f2;
          return;
        }
        function xf(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          j2 = c[b2 + 12 >> 2] | 0;
          k2 = c[b2 + 28 >> 2] | 0;
          if ((k2 | 0) >= (j2 | 0))
            return;
          do
            if ((c[b2 + 32 >> 2] | 0) < (j2 | 0)) {
              if (!j2) {
                d2 = 0;
                f2 = k2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                f2 = c[b2 + 28 >> 2] | 0;
              }
              g2 = c[b2 + 36 >> 2] | 0;
              if ((f2 | 0) <= 0) {
                if (!g2) {
                  a[b2 + 40 >> 0] = 1;
                  c[b2 + 36 >> 2] = d2;
                  c[b2 + 32 >> 2] = j2;
                  i2 = b2 + 36 | 0;
                  break;
                }
              } else {
                e2 = 0;
                do {
                  c[d2 + (e2 << 2) >> 2] = c[g2 + (e2 << 2) >> 2];
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != (f2 | 0));
              }
              if (a[b2 + 40 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[g2 + -4 >> 2] | 0);
              }
              a[b2 + 40 >> 0] = 1;
              c[b2 + 36 >> 2] = d2;
              c[b2 + 32 >> 2] = j2;
              i2 = b2 + 36 | 0;
            } else {
              i2 = b2 + 36 | 0;
              d2 = c[b2 + 36 >> 2] | 0;
            }
          while (0);
          yn(d2 + (k2 << 2) | 0, 0, (j2 << 2) - (k2 << 2) | 0) | 0;
          c[b2 + 28 >> 2] = j2;
          h2 = c[b2 + 48 >> 2] | 0;
          if ((h2 | 0) < (j2 | 0)) {
            do
              if ((c[b2 + 52 >> 2] | 0) < (j2 | 0)) {
                if (!j2) {
                  d2 = 0;
                  f2 = h2;
                } else {
                  c[6324] = (c[6324] | 0) + 1;
                  d2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
                  if (!d2)
                    d2 = 0;
                  else {
                    c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                    d2 = d2 + 4 + 15 & -16;
                  }
                  f2 = c[b2 + 48 >> 2] | 0;
                }
                g2 = c[b2 + 56 >> 2] | 0;
                if ((f2 | 0) <= 0) {
                  if (!g2) {
                    a[b2 + 60 >> 0] = 1;
                    c[b2 + 56 >> 2] = d2;
                    c[b2 + 52 >> 2] = j2;
                    break;
                  }
                } else {
                  e2 = 0;
                  do {
                    c[d2 + (e2 << 2) >> 2] = c[g2 + (e2 << 2) >> 2];
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != (f2 | 0));
                }
                if (a[b2 + 60 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[g2 + -4 >> 2] | 0);
                }
                a[b2 + 60 >> 0] = 1;
                c[b2 + 56 >> 2] = d2;
                c[b2 + 52 >> 2] = j2;
              } else
                d2 = c[b2 + 56 >> 2] | 0;
            while (0);
            yn(d2 + (h2 << 2) | 0, 0, (j2 << 2) - (h2 << 2) | 0) | 0;
          }
          c[b2 + 48 >> 2] = j2;
          if ((j2 | 0) > 0) {
            yn(c[i2 >> 2] | 0, -1, j2 << 2 | 0) | 0;
            yn(c[b2 + 56 >> 2] | 0, -1, j2 << 2 | 0) | 0;
          }
          if ((k2 | 0) <= 0)
            return;
          g2 = c[b2 + 16 >> 2] | 0;
          e2 = c[i2 >> 2] | 0;
          f2 = c[b2 + 56 >> 2] | 0;
          d2 = 0;
          do {
            j2 = c[g2 + (d2 * 12 | 0) + 4 >> 2] << 16 | c[g2 + (d2 * 12 | 0) >> 2];
            j2 = (j2 + ~(j2 << 15) >> 10 ^ j2 + ~(j2 << 15)) * 9 | 0;
            j2 = e2 + ((((j2 >> 6 ^ j2) + ~((j2 >> 6 ^ j2) << 11) >> 16 ^ (j2 >> 6 ^ j2) + ~((j2 >> 6 ^ j2) << 11)) & (c[b2 + 12 >> 2] | 0) + -1) << 2) | 0;
            c[f2 + (d2 << 2) >> 2] = c[j2 >> 2];
            c[j2 >> 2] = d2;
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != (k2 | 0));
          return;
        }
        function yf(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          g2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 >> 2] = g2;
          if (g2 | 0)
            mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 20 >> 2] = c[a2 + 76 >> 2];
          e2 = c[a2 + 20 >> 2] | 0;
          c[b2 + 16 >> 2] = e2;
          c[b2 + 12 >> 2] = 0;
          if (!e2)
            return 16261;
          g2 = yb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, 76, e2) | 0;
          e2 = c[g2 + 8 >> 2] | 0;
          c[b2 + 12 >> 2] = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          if ((c[b2 + 16 >> 2] | 0) > 0) {
            f2 = 0;
            while (1) {
              h2 = c[a2 + 28 >> 2] | 0;
              c[e2 + 72 >> 2] = c[h2 + (f2 * 80 | 0) + 72 >> 2];
              c[e2 + 64 >> 2] = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[h2 + (f2 * 80 | 0) + 64 >> 2] | 0) | 0;
              if (!(Jb[c[(c[d2 >> 2] | 0) + 24 >> 2] & 31](d2, c[(c[a2 + 28 >> 2] | 0) + (f2 * 80 | 0) + 64 >> 2] | 0) | 0)) {
                h2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                i2 = c[(c[a2 + 28 >> 2] | 0) + (f2 * 80 | 0) + 64 >> 2] | 0;
                i2 = ob[c[(c[i2 >> 2] | 0) + 52 >> 2] & 127](i2) | 0;
                i2 = yb[h2 & 63](d2, i2, 1) | 0;
                h2 = c[(c[a2 + 28 >> 2] | 0) + (f2 * 80 | 0) + 64 >> 2] | 0;
                h2 = yb[c[(c[h2 >> 2] | 0) + 56 >> 2] & 63](h2, c[i2 + 8 >> 2] | 0, d2) | 0;
                ib[c[(c[d2 >> 2] | 0) + 20 >> 2] & 31](d2, i2, h2, 1346455635, c[(c[a2 + 28 >> 2] | 0) + (f2 * 80 | 0) + 64 >> 2] | 0);
              }
              i2 = c[a2 + 28 >> 2] | 0;
              c[e2 + 68 >> 2] = c[i2 + (f2 * 80 | 0) + 68 >> 2];
              c[e2 >> 2] = c[i2 + (f2 * 80 | 0) >> 2];
              c[e2 + 4 >> 2] = c[i2 + (f2 * 80 | 0) + 4 >> 2];
              c[e2 + 8 >> 2] = c[i2 + (f2 * 80 | 0) + 8 >> 2];
              c[e2 + 12 >> 2] = c[i2 + (f2 * 80 | 0) + 12 >> 2];
              c[e2 + 16 >> 2] = c[i2 + (f2 * 80 | 0) + 16 >> 2];
              c[e2 + 20 >> 2] = c[i2 + (f2 * 80 | 0) + 20 >> 2];
              c[e2 + 24 >> 2] = c[i2 + (f2 * 80 | 0) + 24 >> 2];
              c[e2 + 28 >> 2] = c[i2 + (f2 * 80 | 0) + 28 >> 2];
              c[e2 + 32 >> 2] = c[i2 + (f2 * 80 | 0) + 32 >> 2];
              c[e2 + 36 >> 2] = c[i2 + (f2 * 80 | 0) + 36 >> 2];
              c[e2 + 40 >> 2] = c[i2 + (f2 * 80 | 0) + 40 >> 2];
              c[e2 + 44 >> 2] = c[i2 + (f2 * 80 | 0) + 44 >> 2];
              c[e2 + 48 >> 2] = c[i2 + (f2 * 80 | 0) + 48 >> 2];
              c[e2 + 52 >> 2] = c[i2 + (f2 * 80 | 0) + 52 >> 2];
              c[e2 + 56 >> 2] = c[i2 + (f2 * 80 | 0) + 56 >> 2];
              c[e2 + 60 >> 2] = c[i2 + (f2 * 80 | 0) + 60 >> 2];
              f2 = f2 + 1 | 0;
              if ((f2 | 0) >= (c[b2 + 16 >> 2] | 0)) {
                e2 = d2;
                break;
              } else
                e2 = e2 + 76 | 0;
            }
          } else
            e2 = d2;
          ib[c[(c[e2 >> 2] | 0) + 20 >> 2] & 31](d2, g2, 16236, 1497453121, c[g2 + 8 >> 2] | 0);
          return 16261;
        }
        function zf(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0;
          f2 = i;
          i = i + 784 | 0;
          c[f2 + 720 >> 2] = 1065353216;
          c[f2 + 720 + 4 >> 2] = 0;
          c[f2 + 720 + 4 + 4 >> 2] = 0;
          c[f2 + 720 + 4 + 8 >> 2] = 0;
          c[f2 + 720 + 4 + 12 >> 2] = 0;
          c[f2 + 720 + 20 >> 2] = 1065353216;
          c[f2 + 720 + 24 >> 2] = 0;
          c[f2 + 720 + 24 + 4 >> 2] = 0;
          c[f2 + 720 + 24 + 8 >> 2] = 0;
          c[f2 + 720 + 24 + 12 >> 2] = 0;
          c[f2 + 720 + 40 >> 2] = 1065353216;
          e2 = f2 + 720 + 44 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          c[e2 + 16 >> 2] = 0;
          c[f2 + 544 >> 2] = 3928;
          c[f2 + 544 + 168 >> 2] = 0;
          g[f2 + 544 + 172 >> 2] = 0;
          c[f2 + 544 + 164 >> 2] = c[b2 + 200 >> 2];
          e2 = c[b2 + 196 >> 2] | 0;
          c[f2 + 488 + 8 >> 2] = 0;
          c[f2 + 488 + 12 >> 2] = -1;
          c[f2 + 488 + 16 >> 2] = 1065353216;
          c[f2 + 488 + 20 >> 2] = 1065353216;
          c[f2 + 488 + 24 >> 2] = 1065353216;
          g[f2 + 488 + 28 >> 2] = 0;
          c[f2 + 488 >> 2] = 8368;
          c[f2 + 488 + 4 >> 2] = 8;
          c[f2 + 488 + 32 >> 2] = e2;
          c[f2 + 488 + 48 >> 2] = e2;
          c[f2 + 376 + 8 >> 2] = 0;
          c[f2 + 376 + 12 >> 2] = -1;
          c[f2 + 376 + 16 >> 2] = 1065353216;
          c[f2 + 376 + 20 >> 2] = 1065353216;
          c[f2 + 376 + 24 >> 2] = 1065353216;
          g[f2 + 376 + 28 >> 2] = 0;
          g[f2 + 376 + 48 >> 2] = 0.03999999910593033;
          c[f2 + 376 + 56 >> 2] = 0;
          c[f2 + 376 >> 2] = 3956;
          c[f2 + 376 + 4 >> 2] = 1;
          c[f2 + 376 + 60 >> 2] = c[d2 >> 2];
          c[f2 + 376 + 60 + 4 >> 2] = c[d2 + 4 >> 2];
          c[f2 + 376 + 60 + 8 >> 2] = c[d2 + 8 >> 2];
          c[f2 + 376 + 60 + 12 >> 2] = c[d2 + 12 >> 2];
          c[f2 + 376 + 76 >> 2] = c[d2 + 16 >> 2];
          c[f2 + 376 + 76 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[f2 + 376 + 76 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[f2 + 376 + 76 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[f2 + 376 + 92 >> 2] = c[d2 + 32 >> 2];
          c[f2 + 376 + 92 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[f2 + 376 + 92 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[f2 + 376 + 92 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          g[f2 + 16 + 308 >> 2] = 9999999747378752e-20;
          a[f2 + 16 + 332 >> 0] = 0;
          c[f2 >> 2] = 8940;
          c[f2 + 4 >> 2] = f2 + 16;
          c[f2 + 8 >> 2] = f2 + 488;
          c[f2 + 12 >> 2] = f2 + 376;
          if (Zc(f2, b2 + 4 | 0, b2 + 68 | 0, f2 + 720 | 0, f2 + 720 | 0, f2 + 544 | 0) | 0 ? (h2 = +g[f2 + 544 + 164 >> 2], +g[b2 + 200 >> 2] > h2) : 0)
            g[b2 + 200 >> 2] = h2;
          c[f2 + 376 >> 2] = 8236;
          e2 = c[f2 + 376 + 56 >> 2] | 0;
          if (!e2) {
            i = f2;
            return;
          }
          kb[c[c[e2 >> 2] >> 2] & 255](e2);
          e2 = c[f2 + 376 + 56 >> 2] | 0;
          if (!e2) {
            i = f2;
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[e2 + -4 >> 2] | 0);
          i = f2;
          return;
        }
        function Af(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          f2 = i;
          i = i + 256 | 0;
          c[f2 + 32 >> 2] = 5688;
          l2 = f2 + 32 + 36 | 0;
          c[l2 >> 2] = c[b2 >> 2];
          c[l2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[l2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[l2 + 12 >> 2] = c[b2 + 12 >> 2];
          m2 = f2 + 32 + 52 | 0;
          c[m2 >> 2] = c[d2 >> 2];
          c[m2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[m2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[m2 + 12 >> 2] = c[d2 + 12 >> 2];
          c[f2 + 32 + 212 >> 2] = a2;
          c[f2 + 32 + 216 >> 2] = e2;
          c[f2 + 32 + 68 >> 2] = 1065353216;
          c[f2 + 32 + 72 >> 2] = 0;
          c[f2 + 32 + 72 + 4 >> 2] = 0;
          c[f2 + 32 + 72 + 8 >> 2] = 0;
          c[f2 + 32 + 72 + 12 >> 2] = 0;
          c[f2 + 32 + 88 >> 2] = 1065353216;
          c[f2 + 32 + 92 >> 2] = 0;
          c[f2 + 32 + 92 + 4 >> 2] = 0;
          c[f2 + 32 + 92 + 8 >> 2] = 0;
          c[f2 + 32 + 92 + 12 >> 2] = 0;
          c[f2 + 32 + 108 >> 2] = 1065353216;
          c[f2 + 32 + 112 >> 2] = 0;
          c[f2 + 32 + 116 >> 2] = c[l2 >> 2];
          c[f2 + 32 + 116 + 4 >> 2] = c[l2 + 4 >> 2];
          c[f2 + 32 + 116 + 8 >> 2] = c[l2 + 8 >> 2];
          c[f2 + 32 + 116 + 12 >> 2] = c[l2 + 12 >> 2];
          c[f2 + 32 + 132 >> 2] = 1065353216;
          c[f2 + 32 + 136 >> 2] = 0;
          c[f2 + 32 + 136 + 4 >> 2] = 0;
          c[f2 + 32 + 136 + 8 >> 2] = 0;
          c[f2 + 32 + 136 + 12 >> 2] = 0;
          c[f2 + 32 + 152 >> 2] = 1065353216;
          c[f2 + 32 + 156 >> 2] = 0;
          c[f2 + 32 + 156 + 4 >> 2] = 0;
          c[f2 + 32 + 156 + 8 >> 2] = 0;
          c[f2 + 32 + 156 + 12 >> 2] = 0;
          c[f2 + 32 + 172 >> 2] = 1065353216;
          c[f2 + 32 + 176 >> 2] = 0;
          c[f2 + 32 + 180 >> 2] = c[d2 >> 2];
          c[f2 + 32 + 180 + 4 >> 2] = c[d2 + 4 >> 2];
          c[f2 + 32 + 180 + 8 >> 2] = c[d2 + 8 >> 2];
          c[f2 + 32 + 180 + 12 >> 2] = c[d2 + 12 >> 2];
          n2 = +g[d2 >> 2] - +g[b2 >> 2];
          k2 = +g[d2 + 4 >> 2] - +g[b2 + 4 >> 2];
          j2 = +g[d2 + 8 >> 2] - +g[b2 + 8 >> 2];
          h2 = 1 / +G(+(n2 * n2 + k2 * k2 + j2 * j2));
          q2 = n2 * h2 == 0 ? 999999984306749400 : 1 / (n2 * h2);
          g[f2 + 32 + 4 >> 2] = q2;
          p2 = k2 * h2 == 0 ? 999999984306749400 : 1 / (k2 * h2);
          g[f2 + 32 + 8 >> 2] = p2;
          o2 = j2 * h2 == 0 ? 999999984306749400 : 1 / (j2 * h2);
          g[f2 + 32 + 12 >> 2] = o2;
          c[f2 + 32 + 20 >> 2] = q2 < 0 & 1;
          c[f2 + 32 + 24 >> 2] = p2 < 0 & 1;
          c[f2 + 32 + 28 >> 2] = o2 < 0 & 1;
          g[f2 + 32 + 32 >> 2] = n2 * h2 * (+g[m2 >> 2] - +g[l2 >> 2]) + k2 * h2 * (+g[f2 + 32 + 56 >> 2] - +g[f2 + 32 + 40 >> 2]) + j2 * h2 * (+g[f2 + 32 + 60 >> 2] - +g[f2 + 32 + 44 >> 2]);
          e2 = c[a2 + 68 >> 2] | 0;
          a2 = c[(c[e2 >> 2] | 0) + 24 >> 2] | 0;
          c[f2 + 16 >> 2] = 0;
          c[f2 + 16 + 4 >> 2] = 0;
          c[f2 + 16 + 8 >> 2] = 0;
          c[f2 + 16 + 12 >> 2] = 0;
          c[f2 >> 2] = 0;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          c[f2 + 12 >> 2] = 0;
          Ab[a2 & 7](e2, b2, d2, f2 + 32 | 0, f2 + 16 | 0, f2);
          i = f2;
          return;
        }
        function Bf(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          h2 = i;
          i = i + 128 | 0;
          if (!b2) {
            i = h2;
            return;
          }
          if (c[b2 + 40 >> 2] | 0) {
            Bf(a2, c[b2 + 36 >> 2] | 0, d2 + 1 | 0, e2, f2);
            Bf(a2, c[b2 + 40 >> 2] | 0, d2 + 1 | 0, e2, f2);
          }
          if ((d2 | 0) < 0) {
            i = h2;
            return;
          }
          m2 = +g[b2 >> 2];
          r2 = +g[b2 + 16 >> 2];
          k2 = +g[b2 + 4 >> 2];
          q2 = +g[b2 + 20 >> 2];
          j2 = +g[b2 + 8 >> 2];
          p2 = +g[b2 + 24 >> 2];
          l2 = (m2 + r2) * 0.5 - (r2 - m2) * 0.5;
          n2 = (k2 + q2) * 0.5 - (q2 - k2) * 0.5;
          o2 = (j2 + p2) * 0.5 - (p2 - j2) * 0.5;
          m2 = (m2 + r2) * 0.5 + (r2 - m2) * 0.5;
          k2 = (k2 + q2) * 0.5 + (q2 - k2) * 0.5;
          j2 = (j2 + p2) * 0.5 + (p2 - j2) * 0.5;
          f2 = (c[b2 + 40 >> 2] | 0) == 0 ? f2 : e2;
          g[h2 >> 2] = l2;
          g[h2 + 4 >> 2] = n2;
          g[h2 + 8 >> 2] = o2;
          g[h2 + 12 >> 2] = 0;
          g[h2 + 16 >> 2] = m2;
          g[h2 + 20 >> 2] = n2;
          g[h2 + 24 >> 2] = o2;
          g[h2 + 28 >> 2] = 0;
          g[h2 + 32 >> 2] = m2;
          g[h2 + 36 >> 2] = k2;
          g[h2 + 40 >> 2] = o2;
          g[h2 + 44 >> 2] = 0;
          g[h2 + 48 >> 2] = l2;
          g[h2 + 52 >> 2] = k2;
          g[h2 + 56 >> 2] = o2;
          g[h2 + 60 >> 2] = 0;
          g[h2 + 64 >> 2] = l2;
          g[h2 + 68 >> 2] = n2;
          g[h2 + 72 >> 2] = j2;
          g[h2 + 76 >> 2] = 0;
          g[h2 + 80 >> 2] = m2;
          g[h2 + 84 >> 2] = n2;
          g[h2 + 88 >> 2] = j2;
          g[h2 + 92 >> 2] = 0;
          g[h2 + 96 >> 2] = m2;
          g[h2 + 100 >> 2] = k2;
          g[h2 + 104 >> 2] = j2;
          g[h2 + 108 >> 2] = 0;
          g[h2 + 112 >> 2] = l2;
          g[h2 + 116 >> 2] = k2;
          g[h2 + 120 >> 2] = j2;
          g[h2 + 124 >> 2] = 0;
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2, h2 + 16 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 16 | 0, h2 + 32 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 32 | 0, h2 + 48 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 48 | 0, h2, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 64 | 0, h2 + 80 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 80 | 0, h2 + 96 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 96 | 0, h2 + 112 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 112 | 0, h2 + 64 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2, h2 + 64 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 16 | 0, h2 + 80 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 32 | 0, h2 + 96 | 0, f2);
          Yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, h2 + 48 | 0, h2 + 112 | 0, f2);
          i = h2;
          return;
        }
        function Cf(b2, d2, e2, f2, h2, j2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
          r2 = i;
          i = i + 96 | 0;
          m2 = r2;
          n2 = m2 + 96 | 0;
          do {
            c[m2 >> 2] = 0;
            m2 = m2 + 4 | 0;
          } while ((m2 | 0) < (n2 | 0));
          if (!j2)
            p2 = c[c[b2 + 920 >> 2] >> 2] | 0;
          else
            p2 = j2;
          j2 = c[b2 + 812 >> 2] | 0;
          if ((j2 | 0) == (c[b2 + 816 >> 2] | 0) ? (q2 = j2 | 0 ? j2 << 1 : 1, (j2 | 0) < (q2 | 0)) : 0) {
            if (!q2)
              o2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              j2 = ic((q2 * 104 | 3) + 16 | 0) | 0;
              if (!j2)
                j2 = 0;
              else {
                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                j2 = j2 + 4 + 15 & -16;
              }
              o2 = j2;
              j2 = c[b2 + 812 >> 2] | 0;
            }
            if ((j2 | 0) > 0) {
              k2 = 0;
              do {
                m2 = o2 + (k2 * 104 | 0) | 0;
                l2 = (c[b2 + 820 >> 2] | 0) + (k2 * 104 | 0) | 0;
                n2 = m2 + 104 | 0;
                do {
                  c[m2 >> 2] = c[l2 >> 2];
                  m2 = m2 + 4 | 0;
                  l2 = l2 + 4 | 0;
                } while ((m2 | 0) < (n2 | 0));
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) != (j2 | 0));
            }
            j2 = c[b2 + 820 >> 2] | 0;
            if (j2 | 0) {
              if (a[b2 + 824 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[j2 + -4 >> 2] | 0);
              }
              c[b2 + 820 >> 2] = 0;
            }
            a[b2 + 824 >> 0] = 1;
            c[b2 + 820 >> 2] = o2;
            c[b2 + 816 >> 2] = q2;
            j2 = c[b2 + 812 >> 2] | 0;
          }
          m2 = c[b2 + 820 >> 2] | 0;
          c[m2 + (j2 * 104 | 0) >> 2] = 0;
          c[m2 + (j2 * 104 | 0) + 4 >> 2] = p2;
          m2 = m2 + (j2 * 104 | 0) + 8 | 0;
          l2 = r2;
          n2 = m2 + 96 | 0;
          do {
            c[m2 >> 2] = c[l2 >> 2];
            m2 = m2 + 4 | 0;
            l2 = l2 + 4 | 0;
          } while ((m2 | 0) < (n2 | 0));
          q2 = c[b2 + 812 >> 2] | 0;
          c[b2 + 812 >> 2] = q2 + 1;
          p2 = c[b2 + 820 >> 2] | 0;
          l2 = c[b2 + 760 >> 2] | 0;
          c[p2 + (q2 * 104 | 0) + 8 >> 2] = l2 + (d2 * 104 | 0);
          o2 = c[b2 + 760 >> 2] | 0;
          c[p2 + (q2 * 104 | 0) + 12 >> 2] = o2 + (e2 * 104 | 0);
          m2 = c[b2 + 760 >> 2] | 0;
          c[p2 + (q2 * 104 | 0) + 16 >> 2] = m2 + (f2 * 104 | 0);
          n2 = c[b2 + 760 >> 2] | 0;
          c[p2 + (q2 * 104 | 0) + 20 >> 2] = n2 + (h2 * 104 | 0);
          z2 = +g[l2 + (d2 * 104 | 0) + 8 >> 2];
          w2 = +g[l2 + (d2 * 104 | 0) + 12 >> 2];
          A2 = +g[l2 + (d2 * 104 | 0) + 16 >> 2];
          t2 = +g[m2 + (f2 * 104 | 0) + 8 >> 2] - z2;
          y2 = +g[m2 + (f2 * 104 | 0) + 12 >> 2] - w2;
          v2 = +g[m2 + (f2 * 104 | 0) + 16 >> 2] - A2;
          u2 = +g[n2 + (h2 * 104 | 0) + 8 >> 2] - z2;
          x2 = +g[n2 + (h2 * 104 | 0) + 12 >> 2] - w2;
          s2 = +g[n2 + (h2 * 104 | 0) + 16 >> 2] - A2;
          g[p2 + (q2 * 104 | 0) + 24 >> 2] = (+g[o2 + (e2 * 104 | 0) + 16 >> 2] - A2) * (t2 * x2 - y2 * u2) + ((+g[o2 + (e2 * 104 | 0) + 8 >> 2] - z2) * (y2 * s2 - v2 * x2) + (+g[o2 + (e2 * 104 | 0) + 12 >> 2] - w2) * (v2 * u2 - t2 * s2));
          a[b2 + 964 >> 0] = 1;
          i = r2;
          return;
        }
        function Df(a2, b2, c2, d2, e2, f2, h2, i2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = +f2;
          h2 = +h2;
          i2 = +i2;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
          y2 = +g[e2 >> 2];
          x2 = +g[e2 + 16 >> 2];
          w2 = +g[e2 + 32 >> 2];
          v2 = +g[e2 + 4 >> 2];
          u2 = +g[e2 + 20 >> 2];
          t2 = +g[e2 + 36 >> 2];
          s2 = +g[e2 + 8 >> 2];
          r2 = +g[e2 + 24 >> 2];
          q2 = +g[e2 + 40 >> 2];
          j2 = d2 - ((y2 * 0 + x2 * -i2 + w2 * h2) * 0 + (v2 * 0 + u2 * -i2 + t2 * h2) * i2 + (s2 * 0 + r2 * -i2 + q2 * h2) * -h2) + c2;
          o2 = 0 - ((y2 * 0 + x2 * -i2 + w2 * h2) * -i2 + (v2 * 0 + u2 * -i2 + t2 * h2) * 0 + (s2 * 0 + r2 * -i2 + q2 * h2) * f2) + 0;
          l2 = 0 - ((y2 * 0 + x2 * -i2 + w2 * h2) * h2 + (v2 * 0 + u2 * -i2 + t2 * h2) * -f2 + (s2 * 0 + r2 * -i2 + q2 * h2) * 0) + 0;
          m2 = 0 - ((y2 * i2 + x2 * 0 + w2 * -f2) * 0 + (v2 * i2 + u2 * 0 + t2 * -f2) * i2 + (s2 * i2 + r2 * 0 + q2 * -f2) * -h2) + 0;
          n2 = d2 - ((y2 * i2 + x2 * 0 + w2 * -f2) * -i2 + (v2 * i2 + u2 * 0 + t2 * -f2) * 0 + (s2 * i2 + r2 * 0 + q2 * -f2) * f2) + c2;
          k2 = 0 - ((y2 * i2 + x2 * 0 + w2 * -f2) * h2 + (v2 * i2 + u2 * 0 + t2 * -f2) * -f2 + (s2 * i2 + r2 * 0 + q2 * -f2) * 0) + 0;
          p2 = 0 - ((y2 * -h2 + x2 * f2 + w2 * 0) * 0 + (v2 * -h2 + u2 * f2 + t2 * 0) * i2 + (s2 * -h2 + r2 * f2 + q2 * 0) * -h2) + 0;
          i2 = 0 - ((y2 * -h2 + x2 * f2 + w2 * 0) * -i2 + (v2 * -h2 + u2 * f2 + t2 * 0) * 0 + (s2 * -h2 + r2 * f2 + q2 * 0) * f2) + 0;
          c2 = d2 - ((y2 * -h2 + x2 * f2 + w2 * 0) * h2 + (v2 * -h2 + u2 * f2 + t2 * 0) * -f2 + (s2 * -h2 + r2 * f2 + q2 * 0) * 0) + c2;
          d2 = 1 / (l2 * (i2 * m2 - n2 * p2) + (j2 * (n2 * c2 - k2 * i2) + o2 * (k2 * p2 - c2 * m2)));
          g[a2 >> 2] = (i2 * m2 - n2 * p2) * d2 * 0 + (1 / b2 * (n2 * c2 - k2 * i2) * d2 + (k2 * p2 - c2 * m2) * d2 * 0);
          g[a2 + 4 >> 2] = (p2 * o2 - i2 * j2) * d2 * 0 + (1 / b2 * (i2 * l2 - c2 * o2) * d2 + (c2 * j2 - p2 * l2) * d2 * 0);
          g[a2 + 8 >> 2] = (n2 * j2 - m2 * o2) * d2 * 0 + (1 / b2 * (k2 * o2 - n2 * l2) * d2 + (m2 * l2 - k2 * j2) * d2 * 0);
          g[a2 + 12 >> 2] = 0;
          g[a2 + 16 >> 2] = (i2 * m2 - n2 * p2) * d2 * 0 + ((n2 * c2 - k2 * i2) * d2 * 0 + 1 / b2 * (k2 * p2 - c2 * m2) * d2);
          g[a2 + 20 >> 2] = (p2 * o2 - i2 * j2) * d2 * 0 + ((i2 * l2 - c2 * o2) * d2 * 0 + 1 / b2 * (c2 * j2 - p2 * l2) * d2);
          g[a2 + 24 >> 2] = (n2 * j2 - m2 * o2) * d2 * 0 + ((k2 * o2 - n2 * l2) * d2 * 0 + 1 / b2 * (m2 * l2 - k2 * j2) * d2);
          g[a2 + 28 >> 2] = 0;
          g[a2 + 32 >> 2] = 1 / b2 * (i2 * m2 - n2 * p2) * d2 + ((n2 * c2 - k2 * i2) * d2 * 0 + (k2 * p2 - c2 * m2) * d2 * 0);
          g[a2 + 36 >> 2] = 1 / b2 * (p2 * o2 - i2 * j2) * d2 + ((i2 * l2 - c2 * o2) * d2 * 0 + (c2 * j2 - p2 * l2) * d2 * 0);
          g[a2 + 40 >> 2] = 1 / b2 * (n2 * j2 - m2 * o2) * d2 + ((k2 * o2 - n2 * l2) * d2 * 0 + (m2 * l2 - k2 * j2) * d2 * 0);
          g[a2 + 44 >> 2] = 0;
          return;
        }
        function Ef(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          b2 = i;
          i = i + 608 | 0;
          p2 = +g[d2 + 116 >> 2] - +g[d2 + 52 >> 2];
          o2 = +g[d2 + 120 >> 2] - +g[d2 + 56 >> 2];
          n2 = +g[d2 + 124 >> 2] - +g[d2 + 60 >> 2];
          j2 = +g[e2 + 116 >> 2] - +g[e2 + 52 >> 2];
          k2 = +g[e2 + 120 >> 2] - +g[e2 + 56 >> 2];
          l2 = +g[e2 + 124 >> 2] - +g[e2 + 60 >> 2];
          m2 = +g[d2 + 272 >> 2];
          if (p2 * p2 + o2 * o2 + n2 * n2 < m2 * m2 ? (p2 = +g[e2 + 272 >> 2], j2 * j2 + k2 * k2 + l2 * l2 < p2 * p2) : 0) {
            p2 = 1;
            i = b2;
            return +p2;
          }
          h2 = c[d2 + 192 >> 2] | 0;
          f2 = c[e2 + 268 >> 2] | 0;
          c[b2 + 552 + 8 >> 2] = 0;
          c[b2 + 552 + 12 >> 2] = -1;
          c[b2 + 552 + 16 >> 2] = 1065353216;
          c[b2 + 552 + 20 >> 2] = 1065353216;
          c[b2 + 552 + 24 >> 2] = 1065353216;
          g[b2 + 552 + 28 >> 2] = 0;
          c[b2 + 552 >> 2] = 8368;
          c[b2 + 552 + 4 >> 2] = 8;
          c[b2 + 552 + 32 >> 2] = f2;
          c[b2 + 552 + 48 >> 2] = f2;
          c[b2 + 376 >> 2] = 3928;
          g[b2 + 376 + 164 >> 2] = 999999984306749400;
          c[b2 + 376 + 168 >> 2] = 0;
          g[b2 + 376 + 172 >> 2] = 0;
          g[b2 + 16 + 308 >> 2] = 9999999747378752e-20;
          a[b2 + 16 + 332 >> 0] = 0;
          c[b2 >> 2] = 8784;
          c[b2 + 4 >> 2] = b2 + 16;
          c[b2 + 8 >> 2] = h2;
          c[b2 + 12 >> 2] = b2 + 552;
          if (pd(b2, d2 + 4 | 0, d2 + 68 | 0, e2 + 4 | 0, e2 + 68 | 0, b2 + 376 | 0) | 0) {
            j2 = +g[b2 + 376 + 164 >> 2];
            if (+g[d2 + 264 >> 2] > j2)
              g[d2 + 264 >> 2] = j2;
            if (+g[e2 + 264 >> 2] > j2)
              g[e2 + 264 >> 2] = j2;
            if (!(j2 < 1))
              j2 = 1;
          } else
            j2 = 1;
          h2 = c[e2 + 192 >> 2] | 0;
          f2 = c[d2 + 268 >> 2] | 0;
          c[b2 + 552 + 8 >> 2] = 0;
          c[b2 + 552 + 12 >> 2] = -1;
          c[b2 + 552 + 16 >> 2] = 1065353216;
          c[b2 + 552 + 20 >> 2] = 1065353216;
          c[b2 + 552 + 24 >> 2] = 1065353216;
          g[b2 + 552 + 28 >> 2] = 0;
          c[b2 + 552 >> 2] = 8368;
          c[b2 + 552 + 4 >> 2] = 8;
          c[b2 + 552 + 32 >> 2] = f2;
          c[b2 + 552 + 48 >> 2] = f2;
          c[b2 + 376 >> 2] = 3928;
          g[b2 + 376 + 164 >> 2] = 999999984306749400;
          c[b2 + 376 + 168 >> 2] = 0;
          g[b2 + 376 + 172 >> 2] = 0;
          g[b2 + 16 + 308 >> 2] = 9999999747378752e-20;
          a[b2 + 16 + 332 >> 0] = 0;
          c[b2 >> 2] = 8784;
          c[b2 + 4 >> 2] = b2 + 16;
          c[b2 + 8 >> 2] = b2 + 552;
          c[b2 + 12 >> 2] = h2;
          if (pd(b2, d2 + 4 | 0, d2 + 68 | 0, e2 + 4 | 0, e2 + 68 | 0, b2 + 376 | 0) | 0) {
            k2 = +g[b2 + 376 + 164 >> 2];
            if (+g[d2 + 264 >> 2] > k2)
              g[d2 + 264 >> 2] = k2;
            if (+g[e2 + 264 >> 2] > k2)
              g[e2 + 264 >> 2] = k2;
            if (j2 > k2)
              j2 = k2;
          }
          p2 = j2;
          i = b2;
          return +p2;
        }
        function Ff(d2, e2, f2, g2, h2, j2, k2, l2, m2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0;
          o2 = i;
          i = i + 48 | 0;
          c[6324] = (c[6324] | 0) + 1;
          g2 = ic(83) | 0;
          if (!g2)
            n2 = 0;
          else {
            c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
            n2 = g2 + 4 + 15 & -16;
          }
          c[n2 >> 2] = h2;
          b[n2 + 4 >> 1] = j2;
          b[n2 + 6 >> 1] = k2;
          h2 = n2 + 16 | 0;
          c[h2 >> 2] = c[e2 >> 2];
          c[h2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[h2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[h2 + 12 >> 2] = c[e2 + 12 >> 2];
          h2 = n2 + 32 | 0;
          c[h2 >> 2] = c[f2 >> 2];
          c[h2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[h2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[h2 + 12 >> 2] = c[f2 + 12 >> 2];
          c[n2 + 8 >> 2] = 0;
          h2 = n2 + 56 | 0;
          c[h2 >> 2] = 0;
          j2 = n2 + 52 | 0;
          c[j2 >> 2] = 0;
          c[o2 + 16 >> 2] = c[e2 >> 2];
          c[o2 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
          c[o2 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
          c[o2 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
          c[o2 + 16 + 16 >> 2] = c[f2 >> 2];
          c[o2 + 16 + 16 + 4 >> 2] = c[f2 + 4 >> 2];
          c[o2 + 16 + 16 + 8 >> 2] = c[f2 + 8 >> 2];
          c[o2 + 16 + 16 + 12 >> 2] = c[f2 + 12 >> 2];
          c[n2 + 60 >> 2] = c[d2 + 144 >> 2];
          g2 = (c[d2 + 188 >> 2] | 0) + 1 | 0;
          c[d2 + 188 >> 2] = g2;
          c[n2 + 12 >> 2] = g2;
          g2 = c[d2 + 8 >> 2] | 0;
          if (!g2) {
            c[6324] = (c[6324] | 0) + 1;
            g2 = ic(63) | 0;
            if (!g2)
              g2 = 0;
            else {
              c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
              g2 = g2 + 4 + 15 & -16;
            }
            l2 = g2;
            m2 = l2 + 44 | 0;
            do {
              c[l2 >> 2] = 0;
              l2 = l2 + 4 | 0;
            } while ((l2 | 0) < (m2 | 0));
          } else
            c[d2 + 8 >> 2] = 0;
          c[g2 + 32 >> 2] = 0;
          c[g2 + 36 >> 2] = n2;
          c[g2 + 40 >> 2] = 0;
          c[g2 >> 2] = c[o2 + 16 >> 2];
          c[g2 + 4 >> 2] = c[o2 + 16 + 4 >> 2];
          c[g2 + 8 >> 2] = c[o2 + 16 + 8 >> 2];
          c[g2 + 12 >> 2] = c[o2 + 16 + 12 >> 2];
          c[g2 + 16 >> 2] = c[o2 + 16 + 16 >> 2];
          c[g2 + 20 >> 2] = c[o2 + 16 + 20 >> 2];
          c[g2 + 24 >> 2] = c[o2 + 16 + 24 >> 2];
          c[g2 + 28 >> 2] = c[o2 + 16 + 28 >> 2];
          Ze(d2 + 4 | 0, c[d2 + 4 >> 2] | 0, g2);
          c[d2 + 16 >> 2] = (c[d2 + 16 >> 2] | 0) + 1;
          c[n2 + 48 >> 2] = g2;
          l2 = d2 + 124 + (c[d2 + 144 >> 2] << 2) | 0;
          c[j2 >> 2] = 0;
          c[h2 >> 2] = c[l2 >> 2];
          g2 = c[l2 >> 2] | 0;
          if (g2 | 0)
            c[g2 + 52 >> 2] = n2;
          c[l2 >> 2] = n2;
          if (a[d2 + 193 >> 0] | 0) {
            i = o2;
            return n2 | 0;
          }
          c[o2 >> 2] = 5276;
          c[o2 + 4 >> 2] = d2;
          c[o2 + 8 >> 2] = n2;
          Mf(c[d2 + 4 >> 2] | 0, o2 + 16 | 0, o2);
          Mf(c[d2 + 64 >> 2] | 0, o2 + 16 | 0, o2);
          i = o2;
          return n2 | 0;
        }
        function Gf(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          q2 = i;
          i = i + 48 | 0;
          p2 = c[b2 + 760 >> 2] | 0;
          a:
            do
              if (h2 ? (l2 = c[b2 + 772 >> 2] | 0, (l2 | 0) > 0) : 0) {
                j2 = c[b2 + 780 >> 2] | 0;
                h2 = 0;
                while (1) {
                  k2 = c[j2 + (h2 * 52 | 0) + 8 >> 2] | 0;
                  if ((k2 | 0) == (p2 + (d2 * 104 | 0) | 0) ? (c[j2 + (h2 * 52 | 0) + 12 >> 2] | 0) == (p2 + (e2 * 104 | 0) | 0) : 0) {
                    h2 = 25;
                    break;
                  }
                  if ((k2 | 0) == (p2 + (e2 * 104 | 0) | 0) ? (c[j2 + (h2 * 52 | 0) + 12 >> 2] | 0) == (p2 + (d2 * 104 | 0) | 0) : 0) {
                    h2 = 25;
                    break;
                  }
                  h2 = h2 + 1 | 0;
                  if ((h2 | 0) >= (l2 | 0))
                    break a;
                }
                if ((h2 | 0) == 25) {
                  i = q2;
                  return;
                }
              }
            while (0);
          l2 = q2;
          m2 = l2 + 44 | 0;
          do {
            c[l2 >> 2] = 0;
            l2 = l2 + 4 | 0;
          } while ((l2 | 0) < (m2 | 0));
          if (!f2)
            n2 = c[c[b2 + 920 >> 2] >> 2] | 0;
          else
            n2 = f2;
          h2 = c[b2 + 772 >> 2] | 0;
          if ((h2 | 0) == (c[b2 + 776 >> 2] | 0) ? (o2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (o2 | 0)) : 0) {
            if (!o2)
              f2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              h2 = ic((o2 * 52 | 3) + 16 | 0) | 0;
              if (!h2)
                h2 = 0;
              else {
                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                h2 = h2 + 4 + 15 & -16;
              }
              f2 = h2;
              h2 = c[b2 + 772 >> 2] | 0;
            }
            if ((h2 | 0) > 0) {
              j2 = 0;
              do {
                l2 = f2 + (j2 * 52 | 0) | 0;
                k2 = (c[b2 + 780 >> 2] | 0) + (j2 * 52 | 0) | 0;
                m2 = l2 + 52 | 0;
                do {
                  c[l2 >> 2] = c[k2 >> 2];
                  l2 = l2 + 4 | 0;
                  k2 = k2 + 4 | 0;
                } while ((l2 | 0) < (m2 | 0));
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
            }
            h2 = c[b2 + 780 >> 2] | 0;
            if (h2 | 0) {
              if (a[b2 + 784 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[h2 + -4 >> 2] | 0);
              }
              c[b2 + 780 >> 2] = 0;
            }
            a[b2 + 784 >> 0] = 1;
            c[b2 + 780 >> 2] = f2;
            c[b2 + 776 >> 2] = o2;
            h2 = c[b2 + 772 >> 2] | 0;
          }
          l2 = c[b2 + 780 >> 2] | 0;
          c[l2 + (h2 * 52 | 0) >> 2] = 0;
          c[l2 + (h2 * 52 | 0) + 4 >> 2] = n2;
          l2 = l2 + (h2 * 52 | 0) + 8 | 0;
          k2 = q2;
          m2 = l2 + 44 | 0;
          do {
            c[l2 >> 2] = c[k2 >> 2];
            l2 = l2 + 4 | 0;
            k2 = k2 + 4 | 0;
          } while ((l2 | 0) < (m2 | 0));
          o2 = c[b2 + 772 >> 2] | 0;
          c[b2 + 772 >> 2] = o2 + 1;
          n2 = c[b2 + 780 >> 2] | 0;
          c[n2 + (o2 * 52 | 0) + 8 >> 2] = p2 + (d2 * 104 | 0);
          c[n2 + (o2 * 52 | 0) + 12 >> 2] = p2 + (e2 * 104 | 0);
          t2 = +g[p2 + (d2 * 104 | 0) + 8 >> 2] - +g[p2 + (e2 * 104 | 0) + 8 >> 2];
          s2 = +g[p2 + (d2 * 104 | 0) + 12 >> 2] - +g[p2 + (e2 * 104 | 0) + 12 >> 2];
          r2 = +g[p2 + (d2 * 104 | 0) + 16 >> 2] - +g[p2 + (e2 * 104 | 0) + 16 >> 2];
          g[n2 + (o2 * 52 | 0) + 16 >> 2] = +G(+(t2 * t2 + s2 * s2 + r2 * r2));
          a[b2 + 964 >> 0] = 1;
          i = q2;
          return;
        }
        function Hf(a2, d2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
          e2 = i;
          i = i + 128 | 0;
          G2 = c[(c[a2 + 8 >> 2] | 0) + 28 >> 2] | 0;
          h2 = c[G2 + (d2 * 80 | 0) + 64 >> 2] | 0;
          f2 = c[a2 + 12 >> 2] | 0;
          x2 = +g[G2 + (d2 * 80 | 0) >> 2];
          D2 = +g[f2 >> 2];
          w2 = +g[G2 + (d2 * 80 | 0) + 16 >> 2];
          C2 = +g[f2 + 4 >> 2];
          v2 = +g[G2 + (d2 * 80 | 0) + 32 >> 2];
          B2 = +g[f2 + 8 >> 2];
          u2 = +g[G2 + (d2 * 80 | 0) + 4 >> 2];
          t2 = +g[G2 + (d2 * 80 | 0) + 20 >> 2];
          s2 = +g[G2 + (d2 * 80 | 0) + 36 >> 2];
          r2 = +g[G2 + (d2 * 80 | 0) + 8 >> 2];
          p2 = +g[G2 + (d2 * 80 | 0) + 24 >> 2];
          n2 = +g[G2 + (d2 * 80 | 0) + 40 >> 2];
          A2 = +g[f2 + 16 >> 2];
          z2 = +g[f2 + 20 >> 2];
          y2 = +g[f2 + 24 >> 2];
          q2 = +g[f2 + 32 >> 2];
          o2 = +g[f2 + 36 >> 2];
          m2 = +g[f2 + 40 >> 2];
          F2 = +g[G2 + (d2 * 80 | 0) + 48 >> 2];
          E2 = +g[G2 + (d2 * 80 | 0) + 52 >> 2];
          j2 = +g[G2 + (d2 * 80 | 0) + 56 >> 2];
          l2 = +g[f2 + 48 >> 2] + (D2 * F2 + C2 * E2 + B2 * j2);
          k2 = A2 * F2 + z2 * E2 + y2 * j2 + +g[f2 + 52 >> 2];
          j2 = q2 * F2 + o2 * E2 + m2 * j2 + +g[f2 + 56 >> 2];
          g[e2 + 56 >> 2] = x2 * D2 + w2 * C2 + v2 * B2;
          g[e2 + 56 + 4 >> 2] = D2 * u2 + C2 * t2 + B2 * s2;
          g[e2 + 56 + 8 >> 2] = D2 * r2 + C2 * p2 + B2 * n2;
          g[e2 + 56 + 12 >> 2] = 0;
          g[e2 + 56 + 16 >> 2] = x2 * A2 + w2 * z2 + v2 * y2;
          g[e2 + 56 + 20 >> 2] = u2 * A2 + t2 * z2 + s2 * y2;
          g[e2 + 56 + 24 >> 2] = r2 * A2 + p2 * z2 + n2 * y2;
          g[e2 + 56 + 28 >> 2] = 0;
          g[e2 + 56 + 32 >> 2] = x2 * q2 + w2 * o2 + v2 * m2;
          g[e2 + 56 + 36 >> 2] = u2 * q2 + t2 * o2 + s2 * m2;
          g[e2 + 56 + 40 >> 2] = r2 * q2 + p2 * o2 + n2 * m2;
          g[e2 + 56 + 44 >> 2] = 0;
          g[e2 + 56 + 48 >> 2] = l2;
          g[e2 + 56 + 52 >> 2] = k2;
          g[e2 + 56 + 56 >> 2] = j2;
          g[e2 + 56 + 60 >> 2] = 0;
          f2 = c[a2 + 4 >> 2] | 0;
          c[e2 + 32 >> 2] = 0;
          c[e2 + 32 + 4 >> 2] = h2;
          c[e2 + 32 + 8 >> 2] = f2;
          c[e2 + 32 + 12 >> 2] = e2 + 56;
          c[e2 + 32 + 16 >> 2] = -1;
          c[e2 + 32 + 20 >> 2] = d2;
          f2 = c[a2 + 24 >> 2] | 0;
          g[e2 + 4 >> 2] = 1;
          c[e2 + 8 >> 2] = 0;
          b[e2 + 12 >> 1] = 1;
          b[e2 + 14 >> 1] = -1;
          c[e2 + 16 >> 2] = 0;
          c[e2 >> 2] = 5792;
          c[e2 + 20 >> 2] = f2;
          c[e2 + 24 >> 2] = d2;
          c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[e2 + 16 >> 2] = c[f2 + 16 >> 2];
          Vc(c[a2 + 16 >> 2] | 0, c[a2 + 20 >> 2] | 0, e2 + 32 | 0, e2);
          i = e2;
          return;
        }
        function If(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0;
          j2 = i;
          i = i + 144 | 0;
          c[b2 + 164 >> 2] = 1065353216;
          c[b2 + 168 >> 2] = 1065353216;
          c[b2 + 172 >> 2] = 1065353216;
          g[b2 + 176 >> 2] = 0;
          c[b2 + 180 >> 2] = 0;
          g[b2 + 184 >> 2] = 999999984306749400;
          c[b2 + 188 >> 2] = 0;
          c[b2 + 188 + 4 >> 2] = 0;
          c[b2 + 188 + 8 >> 2] = 0;
          c[b2 + 188 + 12 >> 2] = 0;
          c[b2 + 204 >> 2] = 1;
          c[b2 + 208 >> 2] = -1;
          c[b2 + 212 >> 2] = -1;
          c[b2 + 216 >> 2] = 1;
          g[b2 + 220 >> 2] = 0;
          g[b2 + 224 >> 2] = 0.5;
          g[b2 + 228 >> 2] = 0;
          g[b2 + 232 >> 2] = 0;
          g[b2 + 236 >> 2] = 0;
          g[b2 + 240 >> 2] = 0.10000000149011612;
          g[b2 + 244 >> 2] = 1e4;
          c[b2 + 248 >> 2] = 1;
          c[b2 + 252 >> 2] = 0;
          c[b2 + 256 >> 2] = -1;
          c[b2 + 260 >> 2] = -1;
          g[b2 + 264 >> 2] = 1;
          g[b2 + 268 >> 2] = 0;
          g[b2 + 272 >> 2] = 0;
          c[b2 + 276 >> 2] = 0;
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          c[b2 + 288 >> 2] = 0;
          c[b2 + 300 >> 2] = 0;
          c[b2 + 4 >> 2] = 1065353216;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 8 + 4 >> 2] = 0;
          c[b2 + 8 + 8 >> 2] = 0;
          c[b2 + 8 + 12 >> 2] = 0;
          c[b2 + 24 >> 2] = 1065353216;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 28 + 4 >> 2] = 0;
          c[b2 + 28 + 8 >> 2] = 0;
          c[b2 + 28 + 12 >> 2] = 0;
          c[b2 + 44 >> 2] = 1065353216;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 48 + 4 >> 2] = 0;
          c[b2 + 48 + 8 >> 2] = 0;
          c[b2 + 48 + 12 >> 2] = 0;
          c[b2 + 48 + 16 >> 2] = 0;
          c[b2 >> 2] = 4916;
          a[b2 + 540 >> 0] = 1;
          c[b2 + 536 >> 2] = 0;
          c[b2 + 528 >> 2] = 0;
          c[b2 + 532 >> 2] = 0;
          g[j2 >> 2] = d2;
          c[j2 + 4 >> 2] = e2;
          c[j2 + 72 >> 2] = f2;
          c[j2 + 76 >> 2] = c[h2 >> 2];
          c[j2 + 76 + 4 >> 2] = c[h2 + 4 >> 2];
          c[j2 + 76 + 8 >> 2] = c[h2 + 8 >> 2];
          c[j2 + 76 + 12 >> 2] = c[h2 + 12 >> 2];
          g[j2 + 92 >> 2] = 0;
          g[j2 + 96 >> 2] = 0;
          g[j2 + 100 >> 2] = 0.5;
          g[j2 + 104 >> 2] = 0;
          g[j2 + 108 >> 2] = 0;
          g[j2 + 112 >> 2] = 0;
          g[j2 + 116 >> 2] = 0.800000011920929;
          g[j2 + 120 >> 2] = 1;
          a[j2 + 124 >> 0] = 0;
          g[j2 + 128 >> 2] = 0.004999999888241291;
          g[j2 + 132 >> 2] = 0.009999999776482582;
          g[j2 + 136 >> 2] = 0.009999999776482582;
          g[j2 + 140 >> 2] = 0.009999999776482582;
          c[j2 + 8 >> 2] = 1065353216;
          c[j2 + 12 >> 2] = 0;
          c[j2 + 12 + 4 >> 2] = 0;
          c[j2 + 12 + 8 >> 2] = 0;
          c[j2 + 12 + 12 >> 2] = 0;
          c[j2 + 28 >> 2] = 1065353216;
          c[j2 + 32 >> 2] = 0;
          c[j2 + 32 + 4 >> 2] = 0;
          c[j2 + 32 + 8 >> 2] = 0;
          c[j2 + 32 + 12 >> 2] = 0;
          c[j2 + 48 >> 2] = 1065353216;
          c[j2 + 52 >> 2] = 0;
          c[j2 + 52 + 4 >> 2] = 0;
          c[j2 + 52 + 8 >> 2] = 0;
          c[j2 + 52 + 12 >> 2] = 0;
          c[j2 + 52 + 16 >> 2] = 0;
          ud(b2, j2);
          i = j2;
          return;
        }
        function Jf(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          j2 = i;
          i = i + 80 | 0;
          h2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          f2 = 0;
          do {
            q2 = j2 + 64 + (f2 << 2) | 0;
            c[j2 + 64 >> 2] = 0;
            c[j2 + 64 + 4 >> 2] = 0;
            c[j2 + 64 + 8 >> 2] = 0;
            c[j2 + 64 + 12 >> 2] = 0;
            g[q2 >> 2] = 1;
            k2 = c[(c[a2 >> 2] | 0) + 64 >> 2] | 0;
            l2 = +g[j2 + 64 >> 2];
            m2 = +g[j2 + 64 + 4 >> 2];
            n2 = +g[j2 + 64 + 8 >> 2];
            o2 = l2 * +g[b2 + 4 >> 2] + m2 * +g[b2 + 20 >> 2] + n2 * +g[b2 + 36 >> 2];
            p2 = l2 * +g[b2 + 8 >> 2] + m2 * +g[b2 + 24 >> 2] + n2 * +g[b2 + 40 >> 2];
            g[j2 + 32 >> 2] = +g[b2 >> 2] * l2 + +g[b2 + 16 >> 2] * m2 + +g[b2 + 32 >> 2] * n2;
            g[j2 + 32 + 4 >> 2] = o2;
            g[j2 + 32 + 8 >> 2] = p2;
            g[j2 + 32 + 12 >> 2] = 0;
            Ub[k2 & 127](j2 + 48 | 0, a2, j2 + 32 | 0);
            p2 = +g[j2 + 48 >> 2];
            o2 = +g[j2 + 48 + 4 >> 2];
            n2 = +g[j2 + 48 + 8 >> 2];
            m2 = p2 * +g[b2 + 16 >> 2] + o2 * +g[b2 + 20 >> 2] + n2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
            l2 = p2 * +g[b2 + 32 >> 2] + o2 * +g[b2 + 36 >> 2] + n2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
            g[j2 + 32 >> 2] = p2 * +g[b2 >> 2] + o2 * +g[b2 + 4 >> 2] + n2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
            g[j2 + 32 + 4 >> 2] = m2;
            g[j2 + 32 + 8 >> 2] = l2;
            g[j2 + 32 + 12 >> 2] = 0;
            k2 = j2 + 32 + (f2 << 2) | 0;
            g[e2 + (f2 << 2) >> 2] = h2 + +g[k2 >> 2];
            g[q2 >> 2] = -1;
            q2 = c[(c[a2 >> 2] | 0) + 64 >> 2] | 0;
            l2 = +g[j2 + 64 >> 2];
            m2 = +g[j2 + 64 + 4 >> 2];
            n2 = +g[j2 + 64 + 8 >> 2];
            o2 = l2 * +g[b2 + 4 >> 2] + m2 * +g[b2 + 20 >> 2] + n2 * +g[b2 + 36 >> 2];
            p2 = l2 * +g[b2 + 8 >> 2] + m2 * +g[b2 + 24 >> 2] + n2 * +g[b2 + 40 >> 2];
            g[j2 >> 2] = +g[b2 >> 2] * l2 + +g[b2 + 16 >> 2] * m2 + +g[b2 + 32 >> 2] * n2;
            g[j2 + 4 >> 2] = o2;
            g[j2 + 8 >> 2] = p2;
            g[j2 + 12 >> 2] = 0;
            Ub[q2 & 127](j2 + 16 | 0, a2, j2);
            p2 = +g[j2 + 16 >> 2];
            o2 = +g[j2 + 16 + 4 >> 2];
            n2 = +g[j2 + 16 + 8 >> 2];
            m2 = p2 * +g[b2 + 16 >> 2] + o2 * +g[b2 + 20 >> 2] + n2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
            l2 = p2 * +g[b2 + 32 >> 2] + o2 * +g[b2 + 36 >> 2] + n2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
            g[j2 + 32 >> 2] = p2 * +g[b2 >> 2] + o2 * +g[b2 + 4 >> 2] + n2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
            g[j2 + 32 + 4 >> 2] = m2;
            g[j2 + 32 + 8 >> 2] = l2;
            g[j2 + 32 + 12 >> 2] = 0;
            g[d2 + (f2 << 2) >> 2] = +g[k2 >> 2] - h2;
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) != 3);
          i = j2;
          return;
        }
        function Kf(d2, e2, f2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, i2 = 0, j2 = 0;
          c[d2 + 4 >> 2] = 1065353216;
          c[d2 + 8 >> 2] = 1065353216;
          c[d2 + 12 >> 2] = 1065353216;
          g[d2 + 16 >> 2] = 0;
          a[d2 + 36 >> 0] = 1;
          c[d2 + 32 >> 2] = 0;
          c[d2 + 24 >> 2] = 0;
          c[d2 + 28 >> 2] = 0;
          c[d2 + 48 >> 2] = 0;
          c[d2 >> 2] = 8544;
          a[d2 + 100 >> 0] = 1;
          c[d2 + 96 >> 2] = 0;
          c[d2 + 88 >> 2] = 0;
          c[d2 + 92 >> 2] = 0;
          a[d2 + 120 >> 0] = 1;
          c[d2 + 116 >> 2] = 0;
          c[d2 + 108 >> 2] = 0;
          c[d2 + 112 >> 2] = 0;
          a[d2 + 140 >> 0] = 1;
          c[d2 + 136 >> 2] = 0;
          c[d2 + 128 >> 2] = 0;
          c[d2 + 132 >> 2] = 0;
          a[d2 + 160 >> 0] = 1;
          c[d2 + 156 >> 2] = 0;
          c[d2 + 148 >> 2] = 0;
          c[d2 + 152 >> 2] = 0;
          a[d2 + 164 >> 0] = e2 & 1;
          a[d2 + 165 >> 0] = f2 & 1;
          g[d2 + 168 >> 2] = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(51) | 0;
          if (!e2)
            h2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            h2 = e2 + 4 + 15 & -16;
          }
          f2 = c[d2 + 24 >> 2] | 0;
          if ((f2 | 0) > 0) {
            e2 = 0;
            do {
              i2 = h2 + (e2 << 5) | 0;
              j2 = (c[d2 + 32 >> 2] | 0) + (e2 << 5) | 0;
              c[i2 >> 2] = c[j2 >> 2];
              c[i2 + 4 >> 2] = c[j2 + 4 >> 2];
              c[i2 + 8 >> 2] = c[j2 + 8 >> 2];
              c[i2 + 12 >> 2] = c[j2 + 12 >> 2];
              c[i2 + 16 >> 2] = c[j2 + 16 >> 2];
              c[i2 + 20 >> 2] = c[j2 + 20 >> 2];
              c[i2 + 24 >> 2] = c[j2 + 24 >> 2];
              c[i2 + 28 >> 2] = c[j2 + 28 >> 2];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (f2 | 0));
          }
          e2 = c[d2 + 32 >> 2] | 0;
          if (e2 | 0) {
            if (a[d2 + 36 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[e2 + -4 >> 2] | 0);
            }
            c[d2 + 32 >> 2] = 0;
          }
          a[d2 + 36 >> 0] = 1;
          c[d2 + 32 >> 2] = h2;
          c[d2 + 28 >> 2] = 1;
          e2 = c[d2 + 24 >> 2] | 0;
          c[h2 + (e2 << 5) >> 2] = 0;
          c[h2 + (e2 << 5) + 4 >> 2] = 0;
          c[h2 + (e2 << 5) + 8 >> 2] = 12;
          c[h2 + (e2 << 5) + 12 >> 2] = 0;
          c[h2 + (e2 << 5) + 16 >> 2] = 0;
          c[h2 + (e2 << 5) + 20 >> 2] = 16;
          c[h2 + (e2 << 5) + 24 >> 2] = 2;
          c[h2 + (e2 << 5) + 28 >> 2] = 0;
          c[d2 + 24 >> 2] = (c[d2 + 24 >> 2] | 0) + 1;
          e2 = b[d2 + 164 >> 1] | 0;
          if (!((e2 & 255) << 24 >> 24)) {
            f2 = c[d2 + 32 >> 2] | 0;
            c[f2 >> 2] = (c[d2 + 148 >> 2] | 0) / 3 | 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 24 >> 2] = 3;
            c[f2 + 8 >> 2] = 6;
          } else {
            f2 = c[d2 + 32 >> 2] | 0;
            c[f2 >> 2] = (c[d2 + 128 >> 2] | 0) / 3 | 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 24 >> 2] = 2;
            c[f2 + 8 >> 2] = 12;
          }
          if ((e2 & 65535) < 256) {
            i2 = 12;
            d2 = (c[d2 + 108 >> 2] | 0) / 3 | 0;
            j2 = f2 + 12 | 0;
            c[j2 >> 2] = d2;
            j2 = f2 + 16 | 0;
            c[j2 >> 2] = 0;
            j2 = f2 + 20 | 0;
            c[j2 >> 2] = i2;
            return;
          } else {
            i2 = 16;
            d2 = c[d2 + 88 >> 2] | 0;
            j2 = f2 + 12 | 0;
            c[j2 >> 2] = d2;
            j2 = f2 + 16 | 0;
            c[j2 >> 2] = 0;
            j2 = f2 + 20 | 0;
            c[j2 >> 2] = i2;
            return;
          }
        }
        function Lf(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          l2 = i;
          i = i + 160 | 0;
          j2 = c[b2 + 12 >> 2] | 0;
          if (!j2) {
            i = l2;
            return;
          }
          m2 = (a[b2 + 16 >> 0] | 0) != 0;
          n2 = m2 ? e2 : d2;
          e2 = m2 ? d2 : e2;
          o2 = c[n2 + 4 >> 2] | 0;
          d2 = c[e2 + 4 >> 2] | 0;
          c[h2 + 4 >> 2] = j2;
          j2 = c[j2 + 784 >> 2] | 0;
          c[l2 + 136 >> 2] = 6492;
          c[l2 + 136 + 4 >> 2] = o2;
          c[l2 + 136 + 8 >> 2] = d2;
          c[l2 + 136 + 12 >> 2] = j2;
          g[l2 + 128 >> 2] = 999999984306749400;
          j2 = c[n2 + 12 >> 2] | 0;
          c[l2 >> 2] = c[j2 >> 2];
          c[l2 + 4 >> 2] = c[j2 + 4 >> 2];
          c[l2 + 8 >> 2] = c[j2 + 8 >> 2];
          c[l2 + 12 >> 2] = c[j2 + 12 >> 2];
          c[l2 + 16 >> 2] = c[j2 + 16 >> 2];
          c[l2 + 16 + 4 >> 2] = c[j2 + 16 + 4 >> 2];
          c[l2 + 16 + 8 >> 2] = c[j2 + 16 + 8 >> 2];
          c[l2 + 16 + 12 >> 2] = c[j2 + 16 + 12 >> 2];
          c[l2 + 32 >> 2] = c[j2 + 32 >> 2];
          c[l2 + 32 + 4 >> 2] = c[j2 + 32 + 4 >> 2];
          c[l2 + 32 + 8 >> 2] = c[j2 + 32 + 8 >> 2];
          c[l2 + 32 + 12 >> 2] = c[j2 + 32 + 12 >> 2];
          c[l2 + 48 >> 2] = c[j2 + 48 >> 2];
          c[l2 + 48 + 4 >> 2] = c[j2 + 48 + 4 >> 2];
          c[l2 + 48 + 8 >> 2] = c[j2 + 48 + 8 >> 2];
          c[l2 + 48 + 12 >> 2] = c[j2 + 48 + 12 >> 2];
          j2 = c[e2 + 12 >> 2] | 0;
          c[l2 + 64 >> 2] = c[j2 >> 2];
          c[l2 + 64 + 4 >> 2] = c[j2 + 4 >> 2];
          c[l2 + 64 + 8 >> 2] = c[j2 + 8 >> 2];
          c[l2 + 64 + 12 >> 2] = c[j2 + 12 >> 2];
          c[l2 + 80 >> 2] = c[j2 + 16 >> 2];
          c[l2 + 80 + 4 >> 2] = c[j2 + 16 + 4 >> 2];
          c[l2 + 80 + 8 >> 2] = c[j2 + 16 + 8 >> 2];
          c[l2 + 80 + 12 >> 2] = c[j2 + 16 + 12 >> 2];
          c[l2 + 96 >> 2] = c[j2 + 32 >> 2];
          c[l2 + 96 + 4 >> 2] = c[j2 + 32 + 4 >> 2];
          c[l2 + 96 + 8 >> 2] = c[j2 + 32 + 8 >> 2];
          c[l2 + 96 + 12 >> 2] = c[j2 + 32 + 12 >> 2];
          c[l2 + 112 >> 2] = c[j2 + 48 >> 2];
          c[l2 + 112 + 4 >> 2] = c[j2 + 48 + 4 >> 2];
          c[l2 + 112 + 8 >> 2] = c[j2 + 48 + 8 >> 2];
          c[l2 + 112 + 12 >> 2] = c[j2 + 48 + 12 >> 2];
          Ld(l2 + 136 | 0, l2, h2, c[f2 + 20 >> 2] | 0, m2);
          do
            if (a[b2 + 8 >> 0] | 0 ? (k2 = c[h2 + 4 >> 2] | 0, c[k2 + 780 >> 2] | 0) : 0) {
              d2 = c[k2 + 772 >> 2] | 0;
              e2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
              b2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
              if ((d2 | 0) == (e2 | 0)) {
                Te(k2, d2 + 4 | 0, b2 + 4 | 0);
                break;
              } else {
                Te(k2, b2 + 4 | 0, e2 + 4 | 0);
                break;
              }
            }
          while (0);
          i = l2;
          return;
        }
        function Mf(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          if (!a2)
            return;
          m2 = +g[b2 >> 2];
          n2 = +g[b2 + 4 >> 2];
          o2 = +g[b2 + 8 >> 2];
          p2 = +g[b2 + 16 >> 2];
          q2 = +g[b2 + 20 >> 2];
          l2 = +g[b2 + 24 >> 2];
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(275) | 0;
          c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
          c[(b2 + 4 + 15 & -16) >> 2] = a2;
          a2 = 64;
          e2 = 1;
          b2 = b2 + 4 + 15 & -16;
          do {
            k2 = e2 + -1 | 0;
            i2 = c[b2 + (k2 << 2) >> 2] | 0;
            do
              if (((((+g[i2 >> 2] <= p2 ? +g[i2 + 16 >> 2] >= m2 : 0) ? +g[i2 + 4 >> 2] <= q2 : 0) ? +g[i2 + 20 >> 2] >= n2 : 0) ? +g[i2 + 8 >> 2] <= l2 : 0) ? +g[i2 + 24 >> 2] >= o2 : 0) {
                if (!(c[i2 + 40 >> 2] | 0)) {
                  mb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2, i2);
                  e2 = k2;
                  break;
                }
                j2 = c[i2 + 36 >> 2] | 0;
                do
                  if ((k2 | 0) == (a2 | 0) ? (r2 = a2 | 0 ? a2 << 1 : 1, (e2 | 0) <= (r2 | 0)) : 0) {
                    if ((r2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, s2 = ic((r2 << 2 | 3) + 16 | 0) | 0, (s2 | 0) != 0) : 0) {
                      c[(s2 + 4 + 15 & -16) + -4 >> 2] = s2;
                      h2 = s2 + 4 + 15 & -16;
                    } else
                      h2 = 0;
                    if ((e2 | 0) <= 1) {
                      if (!b2) {
                        a2 = r2;
                        b2 = h2;
                        break;
                      }
                    } else {
                      f2 = 0;
                      do {
                        c[h2 + (f2 << 2) >> 2] = c[b2 + (f2 << 2) >> 2];
                        f2 = f2 + 1 | 0;
                      } while ((f2 | 0) != (a2 | 0));
                    }
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[b2 + -4 >> 2] | 0);
                    a2 = r2;
                    b2 = h2;
                  }
                while (0);
                c[b2 + (k2 << 2) >> 2] = j2;
                i2 = c[i2 + 40 >> 2] | 0;
                do
                  if ((e2 | 0) == (a2 | 0)) {
                    f2 = e2 | 0 ? e2 << 1 : 1;
                    if ((e2 | 0) < (f2 | 0)) {
                      if ((f2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, t2 = ic((f2 << 2 | 3) + 16 | 0) | 0, (t2 | 0) != 0) : 0) {
                        c[(t2 + 4 + 15 & -16) + -4 >> 2] = t2;
                        h2 = t2 + 4 + 15 & -16;
                      } else
                        h2 = 0;
                      if ((e2 | 0) <= 0) {
                        if (!b2) {
                          a2 = f2;
                          b2 = h2;
                          break;
                        }
                      } else {
                        a2 = 0;
                        do {
                          c[h2 + (a2 << 2) >> 2] = c[b2 + (a2 << 2) >> 2];
                          a2 = a2 + 1 | 0;
                        } while ((a2 | 0) != (e2 | 0));
                      }
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[b2 + -4 >> 2] | 0);
                      a2 = f2;
                      b2 = h2;
                    } else
                      a2 = e2;
                  }
                while (0);
                c[b2 + (e2 << 2) >> 2] = i2;
                e2 = e2 + 1 | 0;
              } else
                e2 = k2;
            while (0);
          } while ((e2 | 0) > 0);
          if (!b2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function Nf(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0;
          I2 = i;
          i = i + 32 | 0;
          k2 = +g[b2 + 16 >> 2];
          f2 = +g[b2 >> 2];
          l2 = +g[b2 + 20 >> 2];
          h2 = +g[b2 + 4 >> 2];
          n2 = +g[b2 + 24 >> 2];
          j2 = +g[b2 + 8 >> 2];
          r2 = +g[b2 + 32 >> 2];
          v2 = +g[b2 + 36 >> 2];
          w2 = +g[b2 + 40 >> 2];
          B2 = (l2 - h2) * (w2 - j2) - (n2 - j2) * (v2 - h2);
          C2 = (n2 - j2) * (r2 - f2) - (k2 - f2) * (w2 - j2);
          D2 = (k2 - f2) * (v2 - h2) - (l2 - h2) * (r2 - f2);
          g[I2 + 16 >> 2] = B2;
          g[I2 + 16 + 4 >> 2] = C2;
          g[I2 + 16 + 8 >> 2] = D2;
          g[I2 + 16 + 12 >> 2] = 0;
          o2 = +g[a2 + 4 >> 2];
          s2 = +g[a2 + 8 >> 2];
          x2 = +g[a2 + 12 >> 2];
          E2 = B2 * o2 + C2 * s2 + D2 * x2 - (f2 * B2 + h2 * C2 + j2 * D2);
          p2 = +g[a2 + 20 >> 2];
          t2 = +g[a2 + 24 >> 2];
          y2 = +g[a2 + 28 >> 2];
          if (E2 * (B2 * p2 + C2 * t2 + D2 * y2 - (f2 * B2 + h2 * C2 + j2 * D2)) >= 0) {
            i = I2;
            return;
          }
          F2 = c[a2 + 36 >> 2] | 0;
          if (E2 <= 0 & (F2 & 1 | 0) != 0) {
            i = I2;
            return;
          }
          H2 = E2 / (E2 - (B2 * p2 + C2 * t2 + D2 * y2 - (f2 * B2 + h2 * C2 + j2 * D2)));
          if (!(H2 < +g[a2 + 40 >> 2])) {
            i = I2;
            return;
          }
          A2 = (B2 * B2 + C2 * C2 + D2 * D2) * -9999999747378752e-20;
          z2 = f2 - (p2 * H2 + o2 * (1 - H2));
          u2 = h2 - (t2 * H2 + s2 * (1 - H2));
          q2 = j2 - (y2 * H2 + x2 * (1 - H2));
          m2 = k2 - (p2 * H2 + o2 * (1 - H2));
          l2 = l2 - (t2 * H2 + s2 * (1 - H2));
          k2 = n2 - (y2 * H2 + x2 * (1 - H2));
          if (!(D2 * (z2 * l2 - u2 * m2) + (B2 * (u2 * k2 - q2 * l2) + C2 * (q2 * m2 - z2 * k2)) >= A2)) {
            i = I2;
            return;
          }
          j2 = r2 - (p2 * H2 + o2 * (1 - H2));
          h2 = v2 - (t2 * H2 + s2 * (1 - H2));
          f2 = w2 - (y2 * H2 + x2 * (1 - H2));
          if (!(D2 * (m2 * h2 - l2 * j2) + (B2 * (l2 * f2 - k2 * h2) + C2 * (k2 * j2 - m2 * f2)) >= A2)) {
            i = I2;
            return;
          }
          if (!(D2 * (u2 * j2 - z2 * h2) + (B2 * (q2 * h2 - u2 * f2) + C2 * (z2 * f2 - q2 * j2)) >= A2)) {
            i = I2;
            return;
          }
          f2 = 1 / +G(+(B2 * B2 + C2 * C2 + D2 * D2));
          g[I2 + 16 >> 2] = B2 * f2;
          g[I2 + 16 + 4 >> 2] = C2 * f2;
          g[I2 + 16 + 8 >> 2] = D2 * f2;
          b2 = c[(c[a2 >> 2] | 0) + 12 >> 2] | 0;
          if (E2 <= 0 & (F2 & 2 | 0) == 0) {
            g[I2 >> 2] = -(B2 * f2);
            g[I2 + 4 >> 2] = -(C2 * f2);
            g[I2 + 8 >> 2] = -(D2 * f2);
            g[I2 + 12 >> 2] = 0;
            g[a2 + 40 >> 2] = +Qb[b2 & 3](a2, I2, H2, d2, e2);
            i = I2;
            return;
          } else {
            g[a2 + 40 >> 2] = +Qb[b2 & 3](a2, I2 + 16 | 0, H2, d2, e2);
            i = I2;
            return;
          }
        }
        function Of(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          l2 = i;
          i = i + 144 | 0;
          j2 = c[b2 + 12 >> 2] | 0;
          if (!j2) {
            i = l2;
            return;
          }
          n2 = c[d2 + 4 >> 2] | 0;
          m2 = c[e2 + 4 >> 2] | 0;
          c[h2 + 4 >> 2] = j2;
          g[l2 + 12 + 128 >> 2] = 999999984306749400;
          j2 = c[d2 + 12 >> 2] | 0;
          c[l2 + 12 >> 2] = c[j2 >> 2];
          c[l2 + 12 + 4 >> 2] = c[j2 + 4 >> 2];
          c[l2 + 12 + 8 >> 2] = c[j2 + 8 >> 2];
          c[l2 + 12 + 12 >> 2] = c[j2 + 12 >> 2];
          c[l2 + 12 + 16 >> 2] = c[j2 + 16 >> 2];
          c[l2 + 12 + 16 + 4 >> 2] = c[j2 + 16 + 4 >> 2];
          c[l2 + 12 + 16 + 8 >> 2] = c[j2 + 16 + 8 >> 2];
          c[l2 + 12 + 16 + 12 >> 2] = c[j2 + 16 + 12 >> 2];
          c[l2 + 12 + 32 >> 2] = c[j2 + 32 >> 2];
          c[l2 + 12 + 32 + 4 >> 2] = c[j2 + 32 + 4 >> 2];
          c[l2 + 12 + 32 + 8 >> 2] = c[j2 + 32 + 8 >> 2];
          c[l2 + 12 + 32 + 12 >> 2] = c[j2 + 32 + 12 >> 2];
          c[l2 + 12 + 48 >> 2] = c[j2 + 48 >> 2];
          c[l2 + 12 + 48 + 4 >> 2] = c[j2 + 48 + 4 >> 2];
          c[l2 + 12 + 48 + 8 >> 2] = c[j2 + 48 + 8 >> 2];
          c[l2 + 12 + 48 + 12 >> 2] = c[j2 + 48 + 12 >> 2];
          j2 = c[e2 + 12 >> 2] | 0;
          c[l2 + 12 + 64 >> 2] = c[j2 >> 2];
          c[l2 + 12 + 64 + 4 >> 2] = c[j2 + 4 >> 2];
          c[l2 + 12 + 64 + 8 >> 2] = c[j2 + 8 >> 2];
          c[l2 + 12 + 64 + 12 >> 2] = c[j2 + 12 >> 2];
          c[l2 + 12 + 80 >> 2] = c[j2 + 16 >> 2];
          c[l2 + 12 + 80 + 4 >> 2] = c[j2 + 16 + 4 >> 2];
          c[l2 + 12 + 80 + 8 >> 2] = c[j2 + 16 + 8 >> 2];
          c[l2 + 12 + 80 + 12 >> 2] = c[j2 + 16 + 12 >> 2];
          c[l2 + 12 + 96 >> 2] = c[j2 + 32 >> 2];
          c[l2 + 12 + 96 + 4 >> 2] = c[j2 + 32 + 4 >> 2];
          c[l2 + 12 + 96 + 8 >> 2] = c[j2 + 32 + 8 >> 2];
          c[l2 + 12 + 96 + 12 >> 2] = c[j2 + 32 + 12 >> 2];
          c[l2 + 12 + 112 >> 2] = c[j2 + 48 >> 2];
          c[l2 + 12 + 112 + 4 >> 2] = c[j2 + 48 + 4 >> 2];
          c[l2 + 12 + 112 + 8 >> 2] = c[j2 + 48 + 8 >> 2];
          c[l2 + 12 + 112 + 12 >> 2] = c[j2 + 48 + 12 >> 2];
          c[l2 >> 2] = 9024;
          c[l2 + 4 >> 2] = n2;
          c[l2 + 8 >> 2] = m2;
          hc(l2, l2 + 12 | 0, h2, c[f2 + 20 >> 2] | 0, 0);
          do
            if (a[b2 + 8 >> 0] | 0 ? (k2 = c[h2 + 4 >> 2] | 0, c[k2 + 780 >> 2] | 0) : 0) {
              d2 = c[k2 + 772 >> 2] | 0;
              e2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
              b2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
              if ((d2 | 0) == (e2 | 0)) {
                Te(k2, d2 + 4 | 0, b2 + 4 | 0);
                break;
              } else {
                Te(k2, b2 + 4 | 0, e2 + 4 | 0);
                break;
              }
            }
          while (0);
          i = l2;
          return;
        }
        function Pf(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          q2 = i;
          i = i + 48 | 0;
          if ((f2 | 0) == (d2 | 0) | ((d2 | 0) == (e2 | 0) | (e2 | 0) == (f2 | 0))) {
            i = q2;
            return;
          }
          l2 = q2;
          m2 = l2 + 36 | 0;
          do {
            c[l2 >> 2] = 0;
            l2 = l2 + 4 | 0;
          } while ((l2 | 0) < (m2 | 0));
          if (!h2)
            o2 = c[c[b2 + 920 >> 2] >> 2] | 0;
          else
            o2 = h2;
          h2 = c[b2 + 792 >> 2] | 0;
          if ((h2 | 0) == (c[b2 + 796 >> 2] | 0) ? (p2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (p2 | 0)) : 0) {
            if (!p2)
              n2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              h2 = ic((p2 * 44 | 3) + 16 | 0) | 0;
              if (!h2)
                h2 = 0;
              else {
                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                h2 = h2 + 4 + 15 & -16;
              }
              n2 = h2;
              h2 = c[b2 + 792 >> 2] | 0;
            }
            if ((h2 | 0) > 0) {
              j2 = 0;
              do {
                l2 = n2 + (j2 * 44 | 0) | 0;
                k2 = (c[b2 + 800 >> 2] | 0) + (j2 * 44 | 0) | 0;
                m2 = l2 + 44 | 0;
                do {
                  c[l2 >> 2] = c[k2 >> 2];
                  l2 = l2 + 4 | 0;
                  k2 = k2 + 4 | 0;
                } while ((l2 | 0) < (m2 | 0));
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
            }
            h2 = c[b2 + 800 >> 2] | 0;
            if (h2 | 0) {
              if (a[b2 + 804 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[h2 + -4 >> 2] | 0);
              }
              c[b2 + 800 >> 2] = 0;
            }
            a[b2 + 804 >> 0] = 1;
            c[b2 + 800 >> 2] = n2;
            c[b2 + 796 >> 2] = p2;
            h2 = c[b2 + 792 >> 2] | 0;
          }
          l2 = c[b2 + 800 >> 2] | 0;
          c[l2 + (h2 * 44 | 0) >> 2] = 0;
          c[l2 + (h2 * 44 | 0) + 4 >> 2] = o2;
          l2 = l2 + (h2 * 44 | 0) + 8 | 0;
          k2 = q2;
          m2 = l2 + 36 | 0;
          do {
            c[l2 >> 2] = c[k2 >> 2];
            l2 = l2 + 4 | 0;
            k2 = k2 + 4 | 0;
          } while ((l2 | 0) < (m2 | 0));
          p2 = c[b2 + 792 >> 2] | 0;
          c[b2 + 792 >> 2] = p2 + 1;
          o2 = c[b2 + 800 >> 2] | 0;
          l2 = c[b2 + 760 >> 2] | 0;
          c[o2 + (p2 * 44 | 0) + 8 >> 2] = l2 + (d2 * 104 | 0);
          m2 = c[b2 + 760 >> 2] | 0;
          c[o2 + (p2 * 44 | 0) + 12 >> 2] = m2 + (e2 * 104 | 0);
          n2 = c[b2 + 760 >> 2] | 0;
          c[o2 + (p2 * 44 | 0) + 16 >> 2] = n2 + (f2 * 104 | 0);
          t2 = +g[l2 + (d2 * 104 | 0) + 8 >> 2];
          v2 = +g[l2 + (d2 * 104 | 0) + 12 >> 2];
          r2 = +g[l2 + (d2 * 104 | 0) + 16 >> 2];
          s2 = +g[m2 + (e2 * 104 | 0) + 8 >> 2] - t2;
          w2 = +g[m2 + (e2 * 104 | 0) + 12 >> 2] - v2;
          u2 = +g[m2 + (e2 * 104 | 0) + 16 >> 2] - r2;
          t2 = +g[n2 + (f2 * 104 | 0) + 8 >> 2] - t2;
          v2 = +g[n2 + (f2 * 104 | 0) + 12 >> 2] - v2;
          r2 = +g[n2 + (f2 * 104 | 0) + 16 >> 2] - r2;
          g[o2 + (p2 * 44 | 0) + 36 >> 2] = +G(+((s2 * v2 - w2 * t2) * (s2 * v2 - w2 * t2) + ((w2 * r2 - u2 * v2) * (w2 * r2 - u2 * v2) + (u2 * t2 - s2 * r2) * (u2 * t2 - s2 * r2))));
          a[b2 + 964 >> 0] = 1;
          i = q2;
          return;
        }
        function Qf(b2, d2) {
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          e2 = c[b2 + 232 >> 2] | 0;
          if ((e2 | 0) <= 0)
            return;
          q2 = 0;
          do {
            p2 = c[(c[b2 + 240 >> 2] | 0) + (q2 << 2) >> 2] | 0;
            if (!(c[p2 + 204 >> 2] & 3)) {
              m2 = +g[p2 + 484 >> 2];
              f2 = +H(+(1 - m2), +d2);
              i2 = f2 * +g[p2 + 352 >> 2];
              g[p2 + 352 >> 2] = i2;
              h2 = f2 * +g[p2 + 356 >> 2];
              g[p2 + 356 >> 2] = h2;
              f2 = f2 * +g[p2 + 360 >> 2];
              g[p2 + 360 >> 2] = f2;
              o2 = +g[p2 + 488 >> 2];
              l2 = +H(+(1 - o2), +d2);
              j2 = l2 * +g[p2 + 368 >> 2];
              g[p2 + 368 >> 2] = j2;
              k2 = l2 * +g[p2 + 372 >> 2];
              g[p2 + 372 >> 2] = k2;
              l2 = l2 * +g[p2 + 376 >> 2];
              g[p2 + 376 >> 2] = l2;
              do
                if (a[p2 + 492 >> 0] | 0) {
                  if (l2 * l2 + (j2 * j2 + k2 * k2) < +g[p2 + 504 >> 2] ? i2 * i2 + h2 * h2 + f2 * f2 < +g[p2 + 500 >> 2] : 0) {
                    r2 = +g[p2 + 496 >> 2];
                    g[p2 + 368 >> 2] = j2 * r2;
                    g[p2 + 372 >> 2] = r2 * k2;
                    g[p2 + 376 >> 2] = r2 * l2;
                    g[p2 + 352 >> 2] = r2 * i2;
                    g[p2 + 356 >> 2] = r2 * h2;
                    g[p2 + 360 >> 2] = r2 * f2;
                    i2 = r2 * i2;
                    h2 = r2 * h2;
                    f2 = r2 * f2;
                    n2 = j2 * r2;
                    k2 = r2 * k2;
                    l2 = r2 * l2;
                  } else
                    n2 = j2;
                  j2 = +G(+(i2 * i2 + h2 * h2 + f2 * f2));
                  do
                    if (j2 < m2)
                      if (j2 > 0.004999999888241291) {
                        i2 = i2 - i2 * (1 / j2) * 0.004999999888241291;
                        g[p2 + 352 >> 2] = i2;
                        h2 = h2 - h2 * (1 / j2) * 0.004999999888241291;
                        g[p2 + 356 >> 2] = h2;
                        f2 = f2 - f2 * (1 / j2) * 0.004999999888241291;
                        g[p2 + 360 >> 2] = f2;
                        break;
                      } else {
                        c[p2 + 352 >> 2] = 0;
                        c[p2 + 352 + 4 >> 2] = 0;
                        c[p2 + 352 + 8 >> 2] = 0;
                        c[p2 + 352 + 12 >> 2] = 0;
                        i2 = 0;
                        h2 = 0;
                        f2 = 0;
                        break;
                      }
                  while (0);
                  j2 = +G(+(n2 * n2 + k2 * k2 + l2 * l2));
                  if (j2 < o2)
                    if (j2 > 0.004999999888241291) {
                      g[p2 + 368 >> 2] = n2 - n2 * (1 / j2) * 0.004999999888241291;
                      g[p2 + 372 >> 2] = k2 - k2 * (1 / j2) * 0.004999999888241291;
                      g[p2 + 376 >> 2] = l2 - l2 * (1 / j2) * 0.004999999888241291;
                      break;
                    } else {
                      c[p2 + 368 >> 2] = 0;
                      c[p2 + 368 + 4 >> 2] = 0;
                      c[p2 + 368 + 8 >> 2] = 0;
                      c[p2 + 368 + 12 >> 2] = 0;
                      break;
                    }
                }
              while (0);
              Mg(p2 + 4 | 0, i2, h2, f2, p2 + 368 | 0, d2, p2 + 68 | 0);
              e2 = c[b2 + 232 >> 2] | 0;
            }
            q2 = q2 + 1 | 0;
          } while ((q2 | 0) < (e2 | 0));
          return;
        }
        function Rf(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          Fj(b2, 4, d2);
          c[b2 >> 2] = 4452;
          c[b2 + 552 >> 2] = c[e2 >> 2];
          c[b2 + 552 + 4 >> 2] = c[e2 + 4 >> 2];
          c[b2 + 552 + 8 >> 2] = c[e2 + 8 >> 2];
          c[b2 + 552 + 12 >> 2] = c[e2 + 12 >> 2];
          c[b2 + 568 >> 2] = c[e2 + 16 >> 2];
          c[b2 + 568 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[b2 + 568 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[b2 + 568 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          c[b2 + 584 >> 2] = c[e2 + 32 >> 2];
          c[b2 + 584 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[b2 + 584 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[b2 + 584 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          c[b2 + 600 >> 2] = c[e2 + 48 >> 2];
          c[b2 + 600 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[b2 + 600 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[b2 + 600 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          c[b2 + 616 >> 2] = c[e2 >> 2];
          c[b2 + 616 + 4 >> 2] = c[e2 + 4 >> 2];
          c[b2 + 616 + 8 >> 2] = c[e2 + 8 >> 2];
          c[b2 + 616 + 12 >> 2] = c[e2 + 12 >> 2];
          c[b2 + 632 >> 2] = c[e2 + 16 >> 2];
          c[b2 + 632 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[b2 + 632 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[b2 + 632 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          c[b2 + 648 >> 2] = c[e2 + 32 >> 2];
          c[b2 + 648 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[b2 + 648 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[b2 + 648 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          c[b2 + 664 >> 2] = c[e2 + 48 >> 2];
          c[b2 + 664 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[b2 + 664 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[b2 + 664 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          g[b2 + 688 >> 2] = 0;
          g[b2 + 692 >> 2] = -1;
          g[b2 + 696 >> 2] = 0.8999999761581421;
          g[b2 + 700 >> 2] = 0.30000001192092896;
          g[b2 + 704 >> 2] = 1;
          g[b2 + 708 >> 2] = 0;
          g[b2 + 712 >> 2] = 0;
          a[b2 + 716 >> 0] = 0;
          a[b2 + 736 >> 0] = 0;
          a[b2 + 737 >> 0] = 0;
          a[b2 + 738 >> 0] = 0;
          a[b2 + 739 >> 0] = 1;
          a[b2 + 740 >> 0] = f2 & 1;
          c[b2 + 748 >> 2] = 0;
          c[b2 + 748 + 4 >> 2] = 0;
          c[b2 + 748 + 8 >> 2] = 0;
          c[b2 + 748 + 12 >> 2] = 0;
          c[b2 + 748 + 16 >> 2] = 0;
          e2 = c[b2 + 28 >> 2] | 0;
          l2 = +g[b2 + 600 >> 2];
          k2 = +g[b2 + 604 >> 2];
          j2 = +g[b2 + 608 >> 2];
          i2 = l2 * +g[e2 + 20 >> 2] + k2 * +g[e2 + 24 >> 2] + j2 * +g[e2 + 28 >> 2] + +g[e2 + 56 >> 2];
          h2 = l2 * +g[e2 + 36 >> 2] + k2 * +g[e2 + 40 >> 2] + j2 * +g[e2 + 44 >> 2] + +g[e2 + 60 >> 2];
          g[b2 + 664 >> 2] = l2 * +g[e2 + 4 >> 2] + k2 * +g[e2 + 8 >> 2] + j2 * +g[e2 + 12 >> 2] + +g[e2 + 52 >> 2];
          g[b2 + 668 >> 2] = i2;
          g[b2 + 672 >> 2] = h2;
          g[b2 + 676 >> 2] = 0;
          g[b2 + 732 >> 2] = f2 ? -1 : 1;
          return;
        }
        function Sf(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          if ((c[b2 + 104 >> 2] | 0) > 0) {
            l2 = 0;
            do {
              i2 = c[(c[b2 + 4 >> 2] | 0) + 724 >> 2] | 0;
              j2 = (c[b2 + 112 >> 2] | 0) + (l2 << 3) + 4 | 0;
              d2 = c[j2 >> 2] | 0;
              if ((c[i2 + 60 >> 2] | 0) > 0) {
                h2 = 0;
                do {
                  k2 = (c[i2 + 68 >> 2] | 0) + (h2 << 2) | 0;
                  e2 = c[k2 >> 2] | 0;
                  a:
                    do
                      if (e2 | 0) {
                        f2 = 0;
                        do {
                          g2 = f2 + 280 | 0;
                          b:
                            do
                              if (!f2)
                                while (1) {
                                  f2 = e2;
                                  e2 = c[e2 + 280 >> 2] | 0;
                                  if ((c[f2 + 276 >> 2] | 0) != (d2 | 0))
                                    break b;
                                  c[k2 >> 2] = e2;
                                  Rc(f2);
                                  if (!e2)
                                    break a;
                                }
                              else
                                while (1) {
                                  f2 = e2;
                                  e2 = c[e2 + 280 >> 2] | 0;
                                  if ((c[f2 + 276 >> 2] | 0) != (d2 | 0))
                                    break b;
                                  c[g2 >> 2] = e2;
                                  Rc(f2);
                                  if (!e2)
                                    break a;
                                }
                            while (0);
                        } while ((e2 | 0) != 0);
                      }
                    while (0);
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) < (c[i2 + 60 >> 2] | 0));
                d2 = c[j2 >> 2] | 0;
              }
              if (d2 | 0)
                kb[c[(c[d2 >> 2] | 0) + 4 >> 2] & 255](d2);
              l2 = l2 + 1 | 0;
            } while ((l2 | 0) < (c[b2 + 104 >> 2] | 0));
          }
          d2 = c[b2 + 72 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 76 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 72 >> 2] = 0;
          }
          a[b2 + 76 >> 0] = 1;
          c[b2 + 72 >> 2] = 0;
          c[b2 + 64 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          d2 = c[b2 + 92 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 96 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 92 >> 2] = 0;
          }
          a[b2 + 96 >> 0] = 1;
          c[b2 + 92 >> 2] = 0;
          c[b2 + 84 >> 2] = 0;
          c[b2 + 88 >> 2] = 0;
          d2 = c[b2 + 112 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 116 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 112 >> 2] = 0;
          }
          a[b2 + 116 >> 0] = 1;
          c[b2 + 112 >> 2] = 0;
          c[b2 + 104 >> 2] = 0;
          c[b2 + 108 >> 2] = 0;
          d2 = c[b2 + 132 >> 2] | 0;
          if (!d2) {
            a[b2 + 136 >> 0] = 1;
            c[b2 + 132 >> 2] = 0;
            c[b2 + 124 >> 2] = 0;
            b2 = b2 + 128 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 136 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 132 >> 2] = 0;
          a[b2 + 136 >> 0] = 1;
          c[b2 + 132 >> 2] = 0;
          c[b2 + 124 >> 2] = 0;
          b2 = b2 + 128 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function Tf(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          l2 = i;
          i = i + 16 | 0;
          j2 = c[b2 + 28 >> 2] | 0;
          k2 = c[b2 + 32 >> 2] | 0;
          if (!(a[b2 + 1301 >> 0] | 0)) {
            h2 = 0;
            e2 = uf(b2, d2, 0, j2 + 4 | 0, k2 + 4 | 0, j2 + 352 | 0, k2 + 352 | 0, j2 + 368 | 0, k2 + 368 | 0) | 0;
            do {
              f2 = b2 + 868 + (h2 << 6) | 0;
              if (!((c[b2 + 868 + (h2 << 6) + 56 >> 2] | 0) == 0 ? (a[b2 + 868 + (h2 << 6) + 44 >> 0] | 0) == 0 : 0)) {
                g2 = b2 + 1208 + (h2 << 4) | 0;
                c[l2 >> 2] = c[g2 >> 2];
                c[l2 + 4 >> 2] = c[g2 + 4 >> 2];
                c[l2 + 8 >> 2] = c[g2 + 8 >> 2];
                c[l2 + 12 >> 2] = c[g2 + 12 >> 2];
                g2 = c[b2 + 1304 >> 2] >> (h2 * 3 | 0) + 9;
                if (!(g2 & 1))
                  c[b2 + 868 + (h2 << 6) + 28 >> 2] = c[c[d2 + 32 >> 2] >> 2];
                if (!(g2 & 2))
                  c[b2 + 868 + (h2 << 6) + 36 >> 2] = c[c[d2 + 32 >> 2] >> 2];
                if (!(g2 & 4))
                  c[b2 + 868 + (h2 << 6) + 32 >> 2] = c[d2 + 4 >> 2];
                e2 = (nd(b2, f2, j2 + 4 | 0, k2 + 4 | 0, j2 + 352 | 0, k2 + 352 | 0, j2 + 368 | 0, k2 + 368 | 0, d2, e2, l2, 1, 0) | 0) + e2 | 0;
              }
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != 3);
            i = l2;
            return;
          }
          h2 = 0;
          e2 = 0;
          do {
            f2 = b2 + 868 + (h2 << 6) | 0;
            if (!((c[b2 + 868 + (h2 << 6) + 56 >> 2] | 0) == 0 ? (a[b2 + 868 + (h2 << 6) + 44 >> 0] | 0) == 0 : 0)) {
              g2 = b2 + 1208 + (h2 << 4) | 0;
              c[l2 >> 2] = c[g2 >> 2];
              c[l2 + 4 >> 2] = c[g2 + 4 >> 2];
              c[l2 + 8 >> 2] = c[g2 + 8 >> 2];
              c[l2 + 12 >> 2] = c[g2 + 12 >> 2];
              g2 = c[b2 + 1304 >> 2] >> (h2 * 3 | 0) + 9;
              if (!(g2 & 1))
                c[b2 + 868 + (h2 << 6) + 28 >> 2] = c[c[d2 + 32 >> 2] >> 2];
              if (!(g2 & 2))
                c[b2 + 868 + (h2 << 6) + 36 >> 2] = c[c[d2 + 32 >> 2] >> 2];
              if (!(g2 & 4))
                c[b2 + 868 + (h2 << 6) + 32 >> 2] = c[d2 + 4 >> 2];
              e2 = (nd(b2, f2, j2 + 4 | 0, k2 + 4 | 0, j2 + 352 | 0, k2 + 352 | 0, j2 + 368 | 0, k2 + 368 | 0, d2, e2, l2, 1, 0) | 0) + e2 | 0;
            }
            h2 = h2 + 1 | 0;
          } while ((h2 | 0) != 3);
          uf(b2, d2, e2, j2 + 4 | 0, k2 + 4 | 0, j2 + 352 | 0, k2 + 352 | 0, j2 + 368 | 0, k2 + 368 | 0) | 0;
          i = l2;
          return;
        }
        function Uf(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0;
          d2 = c[b2 + 1028 >> 2] | 0;
          if (d2 | 0)
            hn(b2 + 1028 | 0, d2);
          d2 = c[b2 + 1032 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 1032 >> 2] = 0;
          c[b2 + 1036 >> 2] = -1;
          d2 = c[b2 + 1060 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 1064 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 1060 >> 2] = 0;
          }
          a[b2 + 1064 >> 0] = 1;
          c[b2 + 1060 >> 2] = 0;
          c[b2 + 1052 >> 2] = 0;
          c[b2 + 1056 >> 2] = 0;
          c[b2 + 1044 >> 2] = 0;
          if ((c[b2 + 792 >> 2] | 0) <= 0)
            return;
          h2 = 0;
          do {
            k2 = c[b2 + 800 >> 2] | 0;
            l2 = k2 + (h2 * 44 | 0) | 0;
            e2 = c[k2 + (h2 * 44 | 0) + 8 >> 2] | 0;
            f2 = c[k2 + (h2 * 44 | 0) + 12 >> 2] | 0;
            d2 = c[k2 + (h2 * 44 | 0) + 16 >> 2] | 0;
            p2 = +g[e2 + 8 >> 2];
            q2 = +g[e2 + 12 >> 2];
            r2 = +g[e2 + 16 >> 2];
            j2 = +g[e2 + 20 >> 2];
            v2 = +g[f2 + 8 >> 2];
            m2 = v2 < p2 ? v2 : p2;
            s2 = +g[f2 + 12 >> 2];
            n2 = s2 < q2 ? s2 : q2;
            t2 = +g[f2 + 16 >> 2];
            o2 = t2 < r2 ? t2 : r2;
            u2 = +g[f2 + 20 >> 2];
            i2 = u2 < j2 ? u2 : j2;
            p2 = p2 < v2 ? v2 : p2;
            q2 = q2 < s2 ? s2 : q2;
            r2 = r2 < t2 ? t2 : r2;
            j2 = j2 < u2 ? u2 : j2;
            u2 = +g[d2 + 8 >> 2];
            m2 = u2 < m2 ? u2 : m2;
            t2 = +g[d2 + 12 >> 2];
            n2 = t2 < n2 ? t2 : n2;
            s2 = +g[d2 + 16 >> 2];
            o2 = s2 < o2 ? s2 : o2;
            v2 = +g[d2 + 20 >> 2];
            i2 = v2 < i2 ? v2 : i2;
            j2 = j2 < v2 ? v2 : j2;
            p2 = (p2 < u2 ? u2 : p2) + 0;
            q2 = (q2 < t2 ? t2 : q2) + 0;
            r2 = (r2 < s2 ? s2 : r2) + 0;
            d2 = c[b2 + 1032 >> 2] | 0;
            if (!d2) {
              c[6324] = (c[6324] | 0) + 1;
              d2 = ic(63) | 0;
              if (!d2)
                d2 = 0;
              else {
                c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                d2 = d2 + 4 + 15 & -16;
              }
              e2 = d2;
              f2 = e2 + 44 | 0;
              do {
                c[e2 >> 2] = 0;
                e2 = e2 + 4 | 0;
              } while ((e2 | 0) < (f2 | 0));
            } else
              c[b2 + 1032 >> 2] = 0;
            c[d2 + 32 >> 2] = 0;
            c[d2 + 36 >> 2] = l2;
            c[d2 + 40 >> 2] = 0;
            g[d2 >> 2] = m2;
            g[d2 + 4 >> 2] = n2;
            g[d2 + 8 >> 2] = o2;
            g[d2 + 12 >> 2] = i2;
            g[d2 + 16 >> 2] = p2;
            g[d2 + 20 >> 2] = q2;
            g[d2 + 24 >> 2] = r2;
            g[d2 + 28 >> 2] = j2;
            Ze(b2 + 1028 | 0, c[b2 + 1028 >> 2] | 0, d2);
            c[b2 + 1040 >> 2] = (c[b2 + 1040 >> 2] | 0) + 1;
            c[k2 + (h2 * 44 | 0) + 40 >> 2] = d2;
            h2 = h2 + 1 | 0;
          } while ((h2 | 0) < (c[b2 + 792 >> 2] | 0));
          return;
        }
        function Vf(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          d2 = c[a2 + 792 >> 2] | 0;
          if ((d2 | 0) > 0) {
            e2 = c[a2 + 800 >> 2] | 0;
            b2 = 0;
            do {
              o2 = c[e2 + (b2 * 44 | 0) + 8 >> 2] | 0;
              f2 = c[e2 + (b2 * 44 | 0) + 12 >> 2] | 0;
              h2 = c[e2 + (b2 * 44 | 0) + 16 >> 2] | 0;
              k2 = +g[o2 + 8 >> 2];
              m2 = +g[o2 + 12 >> 2];
              i2 = +g[o2 + 16 >> 2];
              j2 = +g[f2 + 8 >> 2] - k2;
              n2 = +g[f2 + 12 >> 2] - m2;
              l2 = +g[f2 + 16 >> 2] - i2;
              k2 = +g[h2 + 8 >> 2] - k2;
              m2 = +g[h2 + 12 >> 2] - m2;
              i2 = +g[h2 + 16 >> 2] - i2;
              g[e2 + (b2 * 44 | 0) + 36 >> 2] = +G(+((j2 * m2 - n2 * k2) * (j2 * m2 - n2 * k2) + ((n2 * i2 - l2 * m2) * (n2 * i2 - l2 * m2) + (l2 * k2 - j2 * i2) * (l2 * k2 - j2 * i2))));
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) != (d2 | 0));
          }
          d2 = c[a2 + 752 >> 2] | 0;
          if ((d2 | 0) > 0) {
            c[6324] = (c[6324] | 0) + 1;
            b2 = ic((d2 << 2 | 3) + 16 | 0) | 0;
            if (!b2)
              f2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              f2 = b2 + 4 + 15 & -16;
            }
            yn(f2 | 0, 0, d2 << 2 | 0) | 0;
            b2 = c[a2 + 752 >> 2] | 0;
            if ((b2 | 0) > 0) {
              e2 = c[a2 + 760 >> 2] | 0;
              d2 = 0;
              do {
                g[e2 + (d2 * 104 | 0) + 92 >> 2] = 0;
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) != (b2 | 0));
            }
          } else {
            f2 = 0;
            b2 = d2;
          }
          h2 = c[a2 + 792 >> 2] | 0;
          if ((h2 | 0) > 0) {
            d2 = c[a2 + 800 >> 2] | 0;
            e2 = c[a2 + 760 >> 2] | 0;
            b2 = 0;
            do {
              n2 = +F(+ +g[d2 + (b2 * 44 | 0) + 36 >> 2]);
              o2 = c[d2 + (b2 * 44 | 0) + 8 >> 2] | 0;
              p2 = f2 + (((o2 - e2 | 0) / 104 | 0) << 2) | 0;
              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
              g[o2 + 92 >> 2] = n2 + +g[o2 + 92 >> 2];
              o2 = c[d2 + (b2 * 44 | 0) + 12 >> 2] | 0;
              p2 = f2 + (((o2 - e2 | 0) / 104 | 0) << 2) | 0;
              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
              g[o2 + 92 >> 2] = n2 + +g[o2 + 92 >> 2];
              o2 = c[d2 + (b2 * 44 | 0) + 16 >> 2] | 0;
              p2 = f2 + (((o2 - e2 | 0) / 104 | 0) << 2) | 0;
              c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
              g[o2 + 92 >> 2] = n2 + +g[o2 + 92 >> 2];
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) != (h2 | 0));
            b2 = c[a2 + 752 >> 2] | 0;
          }
          if ((b2 | 0) <= 0) {
            if (!f2)
              return;
          } else {
            d2 = 0;
            do {
              e2 = c[f2 + (d2 << 2) >> 2] | 0;
              if ((e2 | 0) > 0) {
                p2 = (c[a2 + 760 >> 2] | 0) + (d2 * 104 | 0) + 92 | 0;
                g[p2 >> 2] = +g[p2 >> 2] / +(e2 | 0);
              } else
                g[(c[a2 + 760 >> 2] | 0) + (d2 * 104 | 0) + 92 >> 2] = 0;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (b2 | 0));
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[f2 + -4 >> 2] | 0);
          return;
        }
        function Wf(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          e2 = c[a2 + 56 >> 2] | 0;
          if (!e2) {
            e2 = c[a2 + 52 >> 2] | 0;
            if (!e2) {
              c[6324] = (c[6324] | 0) + 1;
              e2 = ic(31) | 0;
              if (!e2)
                e2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                e2 = e2 + 4 + 15 & -16;
              }
              f2 = c[a2 + 60 >> 2] | 0;
              c[e2 + 4 >> 2] = f2;
              g2 = e2 + 8 | 0;
              c[g2 >> 2] = 0;
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic((f2 * 24 | 3) + 16 | 0) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              c[e2 >> 2] = f2;
              c[g2 >> 2] = c[a2 + 48 >> 2];
              c[a2 + 48 >> 2] = e2;
            } else
              c[a2 + 52 >> 2] = c[e2 + 8 >> 2];
            h2 = c[e2 + 4 >> 2] | 0;
            g2 = c[e2 >> 2] | 0;
            if ((h2 | 0) > 0) {
              e2 = 0;
              f2 = g2;
              do {
                e2 = e2 + 1 | 0;
                i2 = f2;
                f2 = f2 + 24 | 0;
                c[i2 >> 2] = (e2 | 0) < (h2 | 0) ? f2 : 0;
              } while ((e2 | 0) != (h2 | 0));
            }
          } else
            g2 = e2;
          c[a2 + 56 >> 2] = c[g2 >> 2];
          c[g2 >> 2] = 0;
          c[g2 + 4 >> 2] = 0;
          c[g2 + 8 >> 2] = 0;
          c[g2 + 12 >> 2] = 0;
          c[g2 + 16 >> 2] = 0;
          c[g2 + 20 >> 2] = 0;
          e2 = c[a2 + 56 >> 2] | 0;
          if (!e2) {
            e2 = c[a2 + 52 >> 2] | 0;
            if (!e2) {
              c[6324] = (c[6324] | 0) + 1;
              e2 = ic(31) | 0;
              if (!e2)
                e2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                e2 = e2 + 4 + 15 & -16;
              }
              f2 = c[a2 + 60 >> 2] | 0;
              c[e2 + 4 >> 2] = f2;
              h2 = e2 + 8 | 0;
              c[h2 >> 2] = 0;
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic((f2 * 24 | 3) + 16 | 0) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              c[e2 >> 2] = f2;
              c[h2 >> 2] = c[a2 + 48 >> 2];
              c[a2 + 48 >> 2] = e2;
            } else
              c[a2 + 52 >> 2] = c[e2 + 8 >> 2];
            i2 = c[e2 + 4 >> 2] | 0;
            e2 = c[e2 >> 2] | 0;
            if ((i2 | 0) > 0) {
              f2 = 0;
              h2 = e2;
              do {
                f2 = f2 + 1 | 0;
                j2 = h2;
                h2 = h2 + 24 | 0;
                c[j2 >> 2] = (f2 | 0) < (i2 | 0) ? h2 : 0;
              } while ((f2 | 0) != (i2 | 0));
            }
          }
          c[a2 + 56 >> 2] = c[e2 >> 2];
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[g2 + 8 >> 2] = e2;
          c[e2 + 8 >> 2] = g2;
          j2 = c[a2 + 100 >> 2] | 0;
          c[g2 + 20 >> 2] = j2;
          c[e2 + 20 >> 2] = j2;
          c[g2 + 12 >> 2] = d2;
          c[e2 + 12 >> 2] = b2;
          c[g2 + 16 >> 2] = 0;
          c[e2 + 16 >> 2] = 0;
          e2 = c[a2 + 116 >> 2] | 0;
          c[a2 + 116 >> 2] = e2 + 1;
          if ((e2 | 0) < (c[a2 + 120 >> 2] | 0))
            return g2 | 0;
          c[a2 + 120 >> 2] = e2 + 1;
          return g2 | 0;
        }
        function Xf(a2, d2, e2, f2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
          h2 = i;
          i = i + 112 | 0;
          j2 = c[a2 + 28 >> 2] | 0;
          y2 = +g[e2 >> 2];
          E2 = +g[j2 >> 2];
          x2 = +g[e2 + 16 >> 2];
          D2 = +g[j2 + 4 >> 2];
          w2 = +g[e2 + 32 >> 2];
          C2 = +g[j2 + 8 >> 2];
          v2 = +g[e2 + 4 >> 2];
          u2 = +g[e2 + 20 >> 2];
          t2 = +g[e2 + 36 >> 2];
          s2 = +g[e2 + 8 >> 2];
          q2 = +g[e2 + 24 >> 2];
          o2 = +g[e2 + 40 >> 2];
          B2 = +g[j2 + 16 >> 2];
          A2 = +g[j2 + 20 >> 2];
          z2 = +g[j2 + 24 >> 2];
          r2 = +g[j2 + 32 >> 2];
          p2 = +g[j2 + 36 >> 2];
          n2 = +g[j2 + 40 >> 2];
          G2 = +g[e2 + 48 >> 2];
          F2 = +g[e2 + 52 >> 2];
          k2 = +g[e2 + 56 >> 2];
          m2 = +g[j2 + 48 >> 2] + (E2 * G2 + D2 * F2 + C2 * k2);
          l2 = B2 * G2 + A2 * F2 + z2 * k2 + +g[j2 + 52 >> 2];
          k2 = r2 * G2 + p2 * F2 + n2 * k2 + +g[j2 + 56 >> 2];
          g[h2 + 48 >> 2] = y2 * E2 + x2 * D2 + w2 * C2;
          g[h2 + 48 + 4 >> 2] = E2 * v2 + D2 * u2 + C2 * t2;
          g[h2 + 48 + 8 >> 2] = E2 * s2 + D2 * q2 + C2 * o2;
          g[h2 + 48 + 12 >> 2] = 0;
          g[h2 + 48 + 16 >> 2] = y2 * B2 + x2 * A2 + w2 * z2;
          g[h2 + 48 + 20 >> 2] = v2 * B2 + u2 * A2 + t2 * z2;
          g[h2 + 48 + 24 >> 2] = s2 * B2 + q2 * A2 + o2 * z2;
          g[h2 + 48 + 28 >> 2] = 0;
          g[h2 + 48 + 32 >> 2] = y2 * r2 + x2 * p2 + w2 * n2;
          g[h2 + 48 + 36 >> 2] = v2 * r2 + u2 * p2 + t2 * n2;
          g[h2 + 48 + 40 >> 2] = s2 * r2 + q2 * p2 + o2 * n2;
          g[h2 + 48 + 44 >> 2] = 0;
          g[h2 + 48 + 48 >> 2] = m2;
          g[h2 + 48 + 52 >> 2] = l2;
          g[h2 + 48 + 56 >> 2] = k2;
          g[h2 + 48 + 60 >> 2] = 0;
          j2 = c[a2 + 32 >> 2] | 0;
          g[h2 + 24 + 4 >> 2] = 1;
          b[h2 + 24 + 8 >> 1] = 1;
          b[h2 + 24 + 10 >> 1] = -1;
          c[h2 + 24 >> 2] = 5944;
          c[h2 + 24 + 12 >> 2] = j2;
          c[h2 + 24 + 16 >> 2] = d2;
          c[h2 + 24 + 4 >> 2] = c[j2 + 4 >> 2];
          j2 = c[a2 + 4 >> 2] | 0;
          e2 = c[j2 + 8 >> 2] | 0;
          c[h2 >> 2] = j2;
          c[h2 + 4 >> 2] = f2;
          c[h2 + 8 >> 2] = e2;
          c[h2 + 12 >> 2] = h2 + 48;
          c[h2 + 16 >> 2] = -1;
          c[h2 + 20 >> 2] = d2;
          pc(c[a2 + 8 >> 2] | 0, c[a2 + 12 >> 2] | 0, c[a2 + 16 >> 2] | 0, h2, h2 + 24 | 0, +g[a2 + 20 >> 2]);
          i = h2;
          return;
        }
        function Yf(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          n2 = i;
          i = i + 32 | 0;
          if ((b2 | 0) < 0)
            b2 = c[a2 + 12 >> 2] | 0;
          d2 = c[a2 >> 2] | 0;
          if (!((b2 | 0) > 0 & (d2 | 0) != 0)) {
            i = n2;
            return;
          }
          while (1) {
            e2 = d2 + 40 | 0;
            if (c[e2 >> 2] | 0) {
              m2 = 0;
              while (1) {
                l2 = (c[a2 + 16 >> 2] | 0) >>> m2 & 1;
                f2 = d2 + 32 | 0;
                g2 = c[f2 >> 2] | 0;
                if (g2 >>> 0 > d2 >>> 0) {
                  h2 = (c[g2 + 40 >> 2] | 0) == (d2 | 0) & 1;
                  j2 = c[g2 + 36 + ((h2 ^ 1) << 2) >> 2] | 0;
                  k2 = c[g2 + 32 >> 2] | 0;
                  if (!k2)
                    c[a2 >> 2] = d2;
                  else
                    c[k2 + 36 + (((c[k2 + 40 >> 2] | 0) == (g2 | 0) & 1) << 2) >> 2] = d2;
                  c[j2 + 32 >> 2] = d2;
                  c[g2 + 32 >> 2] = d2;
                  c[f2 >> 2] = k2;
                  k2 = d2 + 36 | 0;
                  c[g2 + 36 >> 2] = c[k2 >> 2];
                  c[g2 + 40 >> 2] = c[e2 >> 2];
                  c[(c[k2 >> 2] | 0) + 32 >> 2] = g2;
                  c[(c[e2 >> 2] | 0) + 32 >> 2] = g2;
                  c[d2 + 36 + (h2 << 2) >> 2] = g2;
                  c[d2 + 36 + ((h2 ^ 1) << 2) >> 2] = j2;
                  c[n2 >> 2] = c[g2 >> 2];
                  c[n2 + 4 >> 2] = c[g2 + 4 >> 2];
                  c[n2 + 8 >> 2] = c[g2 + 8 >> 2];
                  c[n2 + 12 >> 2] = c[g2 + 12 >> 2];
                  c[n2 + 16 >> 2] = c[g2 + 16 >> 2];
                  c[n2 + 20 >> 2] = c[g2 + 20 >> 2];
                  c[n2 + 24 >> 2] = c[g2 + 24 >> 2];
                  c[n2 + 28 >> 2] = c[g2 + 28 >> 2];
                  c[g2 >> 2] = c[d2 >> 2];
                  c[g2 + 4 >> 2] = c[d2 + 4 >> 2];
                  c[g2 + 8 >> 2] = c[d2 + 8 >> 2];
                  c[g2 + 12 >> 2] = c[d2 + 12 >> 2];
                  c[g2 + 16 >> 2] = c[d2 + 16 >> 2];
                  c[g2 + 20 >> 2] = c[d2 + 20 >> 2];
                  c[g2 + 24 >> 2] = c[d2 + 24 >> 2];
                  c[g2 + 28 >> 2] = c[d2 + 28 >> 2];
                  c[d2 >> 2] = c[n2 >> 2];
                  c[d2 + 4 >> 2] = c[n2 + 4 >> 2];
                  c[d2 + 8 >> 2] = c[n2 + 8 >> 2];
                  c[d2 + 12 >> 2] = c[n2 + 12 >> 2];
                  c[d2 + 16 >> 2] = c[n2 + 16 >> 2];
                  c[d2 + 20 >> 2] = c[n2 + 20 >> 2];
                  c[d2 + 24 >> 2] = c[n2 + 24 >> 2];
                  c[d2 + 28 >> 2] = c[n2 + 28 >> 2];
                  d2 = g2;
                }
                d2 = c[d2 + 36 + (l2 << 2) >> 2] | 0;
                e2 = d2 + 40 | 0;
                if (!(c[e2 >> 2] | 0))
                  break;
                else
                  m2 = m2 + 1 & 31;
              }
            }
            if (!(Wg(a2, d2) | 0))
              e2 = 0;
            else
              e2 = c[a2 >> 2] | 0;
            Ze(a2, e2, d2);
            c[a2 + 16 >> 2] = (c[a2 + 16 >> 2] | 0) + 1;
            b2 = b2 + -1 | 0;
            if (!b2)
              break;
            d2 = c[a2 >> 2] | 0;
          }
          i = n2;
          return;
        }
        function Zf(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          l2 = i;
          i = i + 16 | 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = -1;
          c[b2 + 16 >> 2] = 1065353216;
          c[b2 + 20 >> 2] = 1065353216;
          c[b2 + 24 >> 2] = 1065353216;
          g[b2 + 28 >> 2] = 0;
          g[b2 + 48 >> 2] = 0.03999999910593033;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 60 >> 2] = 1065353216;
          c[b2 + 64 >> 2] = 1065353216;
          c[b2 + 68 >> 2] = 1065353216;
          g[b2 + 72 >> 2] = 0;
          c[b2 + 76 >> 2] = -1082130432;
          c[b2 + 80 >> 2] = -1082130432;
          c[b2 + 84 >> 2] = -1082130432;
          g[b2 + 88 >> 2] = 0;
          a[b2 + 92 >> 0] = 0;
          c[b2 >> 2] = 7480;
          a[b2 + 112 >> 0] = 1;
          c[b2 + 108 >> 2] = 0;
          c[b2 + 100 >> 2] = 0;
          c[b2 + 104 >> 2] = 0;
          c[b2 + 4 >> 2] = 4;
          if ((e2 | 0) <= 0) {
            c[b2 + 100 >> 2] = e2;
            zj(b2);
            i = l2;
            return;
          }
          c[6324] = (c[6324] | 0) + 1;
          h2 = ic((e2 << 4 | 3) + 16 | 0) | 0;
          if (!h2)
            k2 = 0;
          else {
            c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
            k2 = h2 + 4 + 15 & -16;
          }
          j2 = c[b2 + 100 >> 2] | 0;
          if ((j2 | 0) > 0) {
            h2 = 0;
            do {
              m2 = k2 + (h2 << 4) | 0;
              n2 = (c[b2 + 108 >> 2] | 0) + (h2 << 4) | 0;
              c[m2 >> 2] = c[n2 >> 2];
              c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
              c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
              c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != (j2 | 0));
          }
          h2 = c[b2 + 108 >> 2] | 0;
          if (h2 | 0) {
            if (a[b2 + 112 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[h2 + -4 >> 2] | 0);
            }
            c[b2 + 108 >> 2] = 0;
          }
          a[b2 + 112 >> 0] = 1;
          c[b2 + 108 >> 2] = k2;
          c[b2 + 104 >> 2] = e2;
          c[k2 >> 2] = c[l2 >> 2];
          c[k2 + 4 >> 2] = c[l2 + 4 >> 2];
          c[k2 + 8 >> 2] = c[l2 + 8 >> 2];
          c[k2 + 12 >> 2] = c[l2 + 12 >> 2];
          if ((e2 | 0) != 1) {
            h2 = 1;
            do {
              n2 = (c[b2 + 108 >> 2] | 0) + (h2 << 4) | 0;
              c[n2 >> 2] = c[l2 >> 2];
              c[n2 + 4 >> 2] = c[l2 + 4 >> 2];
              c[n2 + 8 >> 2] = c[l2 + 8 >> 2];
              c[n2 + 12 >> 2] = c[l2 + 12 >> 2];
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != (e2 | 0));
          }
          c[b2 + 100 >> 2] = e2;
          h2 = 0;
          while (1) {
            n2 = c[b2 + 108 >> 2] | 0;
            k2 = c[d2 + 4 >> 2] | 0;
            m2 = c[d2 + 8 >> 2] | 0;
            c[n2 + (h2 << 4) >> 2] = c[d2 >> 2];
            c[n2 + (h2 << 4) + 4 >> 2] = k2;
            c[n2 + (h2 << 4) + 8 >> 2] = m2;
            g[n2 + (h2 << 4) + 12 >> 2] = 0;
            h2 = h2 + 1 | 0;
            if ((h2 | 0) == (e2 | 0))
              break;
            else
              d2 = d2 + f2 | 0;
          }
          zj(b2);
          i = l2;
          return;
        }
        function _f(a2, b2, d2, e2, f2, h2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          s2 = i;
          i = i + 48 | 0;
          q2 = +g[d2 >> 2];
          p2 = +g[d2 + 4 >> 2];
          r2 = +g[d2 + 8 >> 2];
          k2 = q2 * +g[b2 + 4 >> 2] + p2 * +g[b2 + 20 >> 2] + r2 * +g[b2 + 36 >> 2];
          l2 = q2 * +g[b2 + 8 >> 2] + p2 * +g[b2 + 24 >> 2] + r2 * +g[b2 + 40 >> 2];
          g[s2 + 32 >> 2] = +g[b2 >> 2] * q2 + +g[b2 + 16 >> 2] * p2 + +g[b2 + 32 >> 2] * r2;
          g[s2 + 32 + 4 >> 2] = k2;
          g[s2 + 32 + 8 >> 2] = l2;
          g[s2 + 32 + 12 >> 2] = 0;
          Ub[c[(c[a2 >> 2] | 0) + 64 >> 2] & 127](s2 + 16 | 0, a2, s2 + 32 | 0);
          l2 = +g[s2 + 16 >> 2];
          k2 = +g[s2 + 16 + 4 >> 2];
          r2 = +g[s2 + 16 + 8 >> 2];
          p2 = l2 * +g[b2 >> 2] + k2 * +g[b2 + 4 >> 2] + r2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
          q2 = l2 * +g[b2 + 16 >> 2] + k2 * +g[b2 + 20 >> 2] + r2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
          r2 = l2 * +g[b2 + 32 >> 2] + k2 * +g[b2 + 36 >> 2] + r2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
          t2 = c[(c[a2 >> 2] | 0) + 64 >> 2] | 0;
          k2 = -+g[s2 + 32 + 4 >> 2];
          l2 = -+g[s2 + 32 + 8 >> 2];
          g[s2 >> 2] = -+g[s2 + 32 >> 2];
          g[s2 + 4 >> 2] = k2;
          g[s2 + 8 >> 2] = l2;
          g[s2 + 12 >> 2] = 0;
          Ub[t2 & 127](s2 + 16 | 0, a2, s2);
          l2 = +g[s2 + 16 >> 2];
          k2 = +g[s2 + 16 + 4 >> 2];
          m2 = +g[s2 + 16 + 8 >> 2];
          n2 = l2 * +g[b2 >> 2] + k2 * +g[b2 + 4 >> 2] + m2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
          o2 = l2 * +g[b2 + 16 >> 2] + k2 * +g[b2 + 20 >> 2] + m2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
          m2 = l2 * +g[b2 + 32 >> 2] + k2 * +g[b2 + 36 >> 2] + m2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
          g[e2 >> 2] = p2 * +g[d2 >> 2] + q2 * +g[d2 + 4 >> 2] + r2 * +g[d2 + 8 >> 2];
          g[f2 >> 2] = n2 * +g[d2 >> 2] + o2 * +g[d2 + 4 >> 2] + m2 * +g[d2 + 8 >> 2];
          g[j2 >> 2] = n2;
          g[j2 + 4 >> 2] = o2;
          g[j2 + 8 >> 2] = m2;
          g[j2 + 12 >> 2] = 0;
          g[h2 >> 2] = p2;
          g[h2 + 4 >> 2] = q2;
          g[h2 + 8 >> 2] = r2;
          g[h2 + 12 >> 2] = 0;
          k2 = +g[e2 >> 2];
          l2 = +g[f2 >> 2];
          if (!(k2 > l2)) {
            i = s2;
            return;
          }
          g[e2 >> 2] = l2;
          g[f2 >> 2] = k2;
          g[j2 >> 2] = p2;
          g[j2 + 4 >> 2] = q2;
          g[j2 + 8 >> 2] = r2;
          g[j2 + 12 >> 2] = 0;
          g[h2 >> 2] = n2;
          g[h2 + 4 >> 2] = o2;
          g[h2 + 8 >> 2] = m2;
          g[h2 + 12 >> 2] = 0;
          i = s2;
          return;
        }
        function $f(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
          j2 = i;
          i = i + 32 | 0;
          d2 = a[b2 + 8 >> 0] | 0 ? d2 : e2;
          if (((c[(c[d2 + 4 >> 2] | 0) + 4 >> 2] | 0) + -21 | 0) >>> 0 >= 9) {
            i = j2;
            return;
          }
          e2 = c[(c[d2 + 8 >> 2] | 0) + 192 >> 2] | 0;
          y2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
          c[b2 + 64 >> 2] = f2;
          g[b2 + 68 >> 2] = y2 + 0.05999999865889549;
          c[b2 + 56 >> 2] = h2;
          h2 = c[b2 + 16 >> 2] | 0;
          Ub[c[(c[h2 >> 2] | 0) + 28 >> 2] & 127](h2, j2 + 16 | 0, j2);
          y2 = +g[j2 >> 2];
          x2 = +g[j2 + 16 >> 2];
          w2 = +g[j2 + 4 >> 2];
          v2 = +g[j2 + 16 + 4 >> 2];
          u2 = +g[j2 + 8 >> 2];
          t2 = +g[j2 + 16 + 8 >> 2];
          h2 = c[d2 + 12 >> 2] | 0;
          B2 = +g[h2 >> 2];
          o2 = +g[h2 + 16 >> 2];
          C2 = +g[h2 + 32 >> 2];
          z2 = +g[h2 + 4 >> 2];
          m2 = +g[h2 + 20 >> 2];
          A2 = +g[h2 + 36 >> 2];
          q2 = +g[h2 + 8 >> 2];
          k2 = +g[h2 + 24 >> 2];
          r2 = +g[h2 + 40 >> 2];
          D2 = -+g[h2 + 48 >> 2];
          s2 = -+g[h2 + 52 >> 2];
          l2 = -+g[h2 + 56 >> 2];
          p2 = (y2 + x2) * 0.5 * B2 + (w2 + v2) * 0.5 * o2 + (u2 + t2) * 0.5 * C2 + (B2 * D2 + o2 * s2 + C2 * l2);
          n2 = (y2 + x2) * 0.5 * z2 + (w2 + v2) * 0.5 * m2 + (u2 + t2) * 0.5 * A2 + (z2 * D2 + m2 * s2 + A2 * l2);
          l2 = (y2 + x2) * 0.5 * q2 + (w2 + v2) * 0.5 * k2 + (u2 + t2) * 0.5 * r2 + (q2 * D2 + k2 * s2 + r2 * l2);
          s2 = +g[b2 + 68 >> 2];
          o2 = ((y2 - x2) * 0.5 + s2) * +F(+(B2 + o2 * 0 + C2 * 0)) + ((w2 - v2) * 0.5 + s2) * +F(+(B2 * 0 + o2 + C2 * 0)) + ((u2 - t2) * 0.5 + s2) * +F(+(C2 + (B2 * 0 + o2 * 0)));
          m2 = ((y2 - x2) * 0.5 + s2) * +F(+(z2 + m2 * 0 + A2 * 0)) + ((w2 - v2) * 0.5 + s2) * +F(+(z2 * 0 + m2 + A2 * 0)) + ((u2 - t2) * 0.5 + s2) * +F(+(A2 + (z2 * 0 + m2 * 0)));
          k2 = ((y2 - x2) * 0.5 + s2) * +F(+(q2 + k2 * 0 + r2 * 0)) + ((w2 - v2) * 0.5 + s2) * +F(+(q2 * 0 + k2 + r2 * 0)) + ((u2 - t2) * 0.5 + s2) * +F(+(r2 + (q2 * 0 + k2 * 0)));
          g[b2 + 24 >> 2] = p2 - o2;
          g[b2 + 28 >> 2] = n2 - m2;
          g[b2 + 32 >> 2] = l2 - k2;
          g[b2 + 36 >> 2] = 0;
          g[b2 + 40 >> 2] = p2 + o2;
          g[b2 + 44 >> 2] = n2 + m2;
          g[b2 + 48 >> 2] = l2 + k2;
          g[b2 + 52 >> 2] = 0;
          Yb[c[(c[e2 >> 2] | 0) + 64 >> 2] & 127](e2, b2 + 12 | 0, b2 + 24 | 0, b2 + 40 | 0);
          i = j2;
          return;
        }
        function ag(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 4564;
          d2 = c[b2 + 176 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 180 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 176 >> 2] = 0;
          }
          a[b2 + 180 >> 0] = 1;
          c[b2 + 176 >> 2] = 0;
          c[b2 + 168 >> 2] = 0;
          c[b2 + 172 >> 2] = 0;
          d2 = c[b2 + 156 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 160 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 156 >> 2] = 0;
          }
          a[b2 + 160 >> 0] = 1;
          c[b2 + 156 >> 2] = 0;
          c[b2 + 148 >> 2] = 0;
          c[b2 + 152 >> 2] = 0;
          d2 = c[b2 + 136 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 140 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 136 >> 2] = 0;
          }
          a[b2 + 140 >> 0] = 1;
          c[b2 + 136 >> 2] = 0;
          c[b2 + 128 >> 2] = 0;
          c[b2 + 132 >> 2] = 0;
          d2 = c[b2 + 116 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 120 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 116 >> 2] = 0;
          }
          a[b2 + 120 >> 0] = 1;
          c[b2 + 116 >> 2] = 0;
          c[b2 + 108 >> 2] = 0;
          c[b2 + 112 >> 2] = 0;
          d2 = c[b2 + 96 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 100 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 96 >> 2] = 0;
          }
          a[b2 + 100 >> 0] = 1;
          c[b2 + 96 >> 2] = 0;
          c[b2 + 88 >> 2] = 0;
          c[b2 + 92 >> 2] = 0;
          d2 = c[b2 + 76 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 80 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 76 >> 2] = 0;
          }
          a[b2 + 80 >> 0] = 1;
          c[b2 + 76 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 72 >> 2] = 0;
          d2 = c[b2 + 56 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 60 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 56 >> 2] = 0;
          }
          a[b2 + 60 >> 0] = 1;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          d2 = c[b2 + 36 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 40 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 36 >> 2] = 0;
          }
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          d2 = c[b2 + 16 >> 2] | 0;
          if (!d2) {
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 20 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 16 >> 2] = 0;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          b2 = b2 + 12 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function bg(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          i2 = ic(787) | 0;
          if (!i2)
            i2 = 0;
          else {
            c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
            i2 = i2 + 4 + 15 & -16;
          }
          c[i2 + 4 >> 2] = 4;
          c[i2 + 8 >> 2] = -1;
          c[i2 + 12 >> 2] = -1;
          g[i2 + 16 >> 2] = 34028234663852886e22;
          a[i2 + 20 >> 0] = 1;
          a[i2 + 21 >> 0] = 0;
          c[i2 + 24 >> 2] = -1;
          c[i2 + 28 >> 2] = b2;
          c[i2 + 32 >> 2] = d2;
          g[i2 + 36 >> 2] = 0;
          g[i2 + 40 >> 2] = 0.30000001192092896;
          c[i2 + 44 >> 2] = 0;
          c[i2 >> 2] = 4452;
          d2 = i2 + 552 | 0;
          c[d2 >> 2] = c[e2 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
          d2 = i2 + 568 | 0;
          c[d2 >> 2] = c[e2 + 16 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          d2 = i2 + 584 | 0;
          c[d2 >> 2] = c[e2 + 32 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          d2 = i2 + 600 | 0;
          c[d2 >> 2] = c[e2 + 48 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          e2 = i2 + 616 | 0;
          c[e2 >> 2] = c[f2 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
          e2 = i2 + 632 | 0;
          c[e2 >> 2] = c[f2 + 16 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
          e2 = i2 + 648 | 0;
          c[e2 >> 2] = c[f2 + 32 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
          e2 = i2 + 664 | 0;
          c[e2 >> 2] = c[f2 + 48 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
          g[i2 + 688 >> 2] = 0;
          g[i2 + 692 >> 2] = -1;
          g[i2 + 696 >> 2] = 0.8999999761581421;
          g[i2 + 700 >> 2] = 0.30000001192092896;
          g[i2 + 704 >> 2] = 1;
          g[i2 + 708 >> 2] = 0;
          g[i2 + 712 >> 2] = 0;
          a[i2 + 716 >> 0] = 0;
          a[i2 + 736 >> 0] = 0;
          a[i2 + 737 >> 0] = 0;
          a[i2 + 738 >> 0] = 0;
          a[i2 + 739 >> 0] = 1;
          a[i2 + 740 >> 0] = h2 & 1;
          f2 = i2 + 748 | 0;
          c[f2 >> 2] = 0;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          c[f2 + 12 >> 2] = 0;
          c[f2 + 16 >> 2] = 0;
          g[i2 + 732 >> 2] = h2 ? -1 : 1;
          return i2 | 0;
        }
        function cg(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
          x2 = i;
          i = i + 48 | 0;
          u2 = +g[e2 >> 2];
          v2 = +g[d2 >> 2];
          w2 = +g[e2 + 4 >> 2];
          t2 = +g[d2 + 4 >> 2];
          s2 = +g[e2 + 8 >> 2];
          n2 = +g[d2 + 8 >> 2];
          o2 = +G(+((u2 - v2) * 0.5 * (u2 - v2) * 0.5 + (w2 - t2) * 0.5 * (w2 - t2) * 0.5 + (s2 - n2) * 0.5 * (s2 - n2) * 0.5));
          p2 = +g[a2 + 60 >> 2];
          d2 = +F(+p2) > 0.7071067690849304;
          q2 = +g[a2 + 56 >> 2];
          if (d2) {
            m2 = 1 / +G(+(p2 * p2 + q2 * q2));
            r2 = +g[a2 + 52 >> 2];
            f2 = r2 * -(p2 * m2);
            h2 = (p2 * p2 + q2 * q2) * m2;
            j2 = 0;
            k2 = -(r2 * q2 * m2);
            l2 = -(p2 * m2);
            m2 = q2 * m2;
          } else {
            r2 = +g[a2 + 52 >> 2];
            l2 = 1 / +G(+(r2 * r2 + q2 * q2));
            f2 = (r2 * r2 + q2 * q2) * l2;
            h2 = -(p2 * r2 * l2);
            j2 = -(q2 * l2);
            k2 = p2 * -(q2 * l2);
            l2 = r2 * l2;
            m2 = 0;
          }
          y2 = (u2 + v2) * 0.5 * r2 + (w2 + t2) * 0.5 * q2 + (s2 + n2) * 0.5 * p2 - +g[a2 + 68 >> 2];
          z2 = (u2 + v2) * 0.5 - r2 * y2;
          j2 = o2 * j2;
          r2 = o2 * l2;
          v2 = o2 * m2;
          l2 = o2 * h2;
          m2 = o2 * k2;
          u2 = o2 * f2;
          g[x2 >> 2] = l2 + (j2 + z2);
          g[x2 + 4 >> 2] = m2 + (r2 + ((w2 + t2) * 0.5 - q2 * y2));
          g[x2 + 8 >> 2] = u2 + (v2 + ((s2 + n2) * 0.5 - p2 * y2));
          g[x2 + 12 >> 2] = 0;
          g[x2 + 16 >> 2] = j2 + z2 - l2;
          g[x2 + 20 >> 2] = r2 + ((w2 + t2) * 0.5 - q2 * y2) - m2;
          g[x2 + 24 >> 2] = v2 + ((s2 + n2) * 0.5 - p2 * y2) - u2;
          g[x2 + 28 >> 2] = 0;
          g[x2 + 32 >> 2] = z2 - j2 - l2;
          g[x2 + 36 >> 2] = (w2 + t2) * 0.5 - q2 * y2 - r2 - m2;
          g[x2 + 40 >> 2] = (s2 + n2) * 0.5 - p2 * y2 - v2 - u2;
          g[x2 + 44 >> 2] = 0;
          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, x2, 0, 0);
          g[x2 >> 2] = z2 - j2 - l2;
          g[x2 + 4 >> 2] = (w2 + t2) * 0.5 - q2 * y2 - r2 - m2;
          g[x2 + 8 >> 2] = (s2 + n2) * 0.5 - p2 * y2 - v2 - u2;
          g[x2 + 12 >> 2] = 0;
          g[x2 + 16 >> 2] = l2 + (z2 - j2);
          g[x2 + 20 >> 2] = m2 + ((w2 + t2) * 0.5 - q2 * y2 - r2);
          g[x2 + 24 >> 2] = u2 + ((s2 + n2) * 0.5 - p2 * y2 - v2);
          g[x2 + 28 >> 2] = 0;
          g[x2 + 32 >> 2] = l2 + (j2 + z2);
          g[x2 + 36 >> 2] = m2 + (r2 + ((w2 + t2) * 0.5 - q2 * y2));
          g[x2 + 40 >> 2] = u2 + (v2 + ((s2 + n2) * 0.5 - p2 * y2));
          g[x2 + 44 >> 2] = 0;
          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, x2, 0, 1);
          i = x2;
          return;
        }
        function dg(a2, b2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          e2 = e2 | 0;
          Ue(a2, b2, e2) | 0;
          c[b2 + 264 >> 2] = c[a2 + 304 >> 2];
          c[b2 + 268 >> 2] = c[a2 + 308 >> 2];
          c[b2 + 272 >> 2] = c[a2 + 312 >> 2];
          c[b2 + 276 >> 2] = c[a2 + 316 >> 2];
          c[b2 + 280 >> 2] = c[a2 + 320 >> 2];
          c[b2 + 284 >> 2] = c[a2 + 324 >> 2];
          c[b2 + 288 >> 2] = c[a2 + 328 >> 2];
          c[b2 + 292 >> 2] = c[a2 + 332 >> 2];
          c[b2 + 296 >> 2] = c[a2 + 336 >> 2];
          c[b2 + 300 >> 2] = c[a2 + 340 >> 2];
          c[b2 + 304 >> 2] = c[a2 + 344 >> 2];
          c[b2 + 308 >> 2] = c[a2 + 348 >> 2];
          c[b2 + 312 >> 2] = c[a2 + 352 >> 2];
          c[b2 + 316 >> 2] = c[a2 + 356 >> 2];
          c[b2 + 320 >> 2] = c[a2 + 360 >> 2];
          c[b2 + 324 >> 2] = c[a2 + 364 >> 2];
          c[b2 + 328 >> 2] = c[a2 + 368 >> 2];
          c[b2 + 332 >> 2] = c[a2 + 372 >> 2];
          c[b2 + 336 >> 2] = c[a2 + 376 >> 2];
          c[b2 + 340 >> 2] = c[a2 + 380 >> 2];
          c[b2 + 456 >> 2] = c[a2 + 384 >> 2];
          c[b2 + 344 >> 2] = c[a2 + 584 >> 2];
          c[b2 + 348 >> 2] = c[a2 + 588 >> 2];
          c[b2 + 352 >> 2] = c[a2 + 592 >> 2];
          c[b2 + 356 >> 2] = c[a2 + 596 >> 2];
          c[b2 + 360 >> 2] = c[a2 + 388 >> 2];
          c[b2 + 364 >> 2] = c[a2 + 392 >> 2];
          c[b2 + 368 >> 2] = c[a2 + 396 >> 2];
          c[b2 + 372 >> 2] = c[a2 + 400 >> 2];
          c[b2 + 376 >> 2] = c[a2 + 404 >> 2];
          c[b2 + 380 >> 2] = c[a2 + 408 >> 2];
          c[b2 + 384 >> 2] = c[a2 + 412 >> 2];
          c[b2 + 388 >> 2] = c[a2 + 416 >> 2];
          c[b2 + 392 >> 2] = c[a2 + 420 >> 2];
          c[b2 + 396 >> 2] = c[a2 + 424 >> 2];
          c[b2 + 400 >> 2] = c[a2 + 428 >> 2];
          c[b2 + 404 >> 2] = c[a2 + 432 >> 2];
          c[b2 + 408 >> 2] = c[a2 + 436 >> 2];
          c[b2 + 412 >> 2] = c[a2 + 440 >> 2];
          c[b2 + 416 >> 2] = c[a2 + 444 >> 2];
          c[b2 + 420 >> 2] = c[a2 + 448 >> 2];
          c[b2 + 424 >> 2] = c[a2 + 452 >> 2];
          c[b2 + 428 >> 2] = c[a2 + 456 >> 2];
          c[b2 + 432 >> 2] = c[a2 + 460 >> 2];
          c[b2 + 436 >> 2] = c[a2 + 464 >> 2];
          c[b2 + 440 >> 2] = c[a2 + 468 >> 2];
          c[b2 + 444 >> 2] = c[a2 + 472 >> 2];
          c[b2 + 448 >> 2] = c[a2 + 476 >> 2];
          c[b2 + 452 >> 2] = c[a2 + 480 >> 2];
          c[b2 + 460 >> 2] = c[a2 + 484 >> 2];
          c[b2 + 464 >> 2] = c[a2 + 488 >> 2];
          c[b2 + 492 >> 2] = d[a2 + 492 >> 0];
          c[b2 + 468 >> 2] = c[a2 + 496 >> 2];
          c[b2 + 472 >> 2] = c[a2 + 500 >> 2];
          c[b2 + 476 >> 2] = c[a2 + 504 >> 2];
          c[b2 + 480 >> 2] = c[a2 + 508 >> 2];
          c[b2 + 484 >> 2] = c[a2 + 512 >> 2];
          c[b2 + 488 >> 2] = c[a2 + 516 >> 2];
          return 12539;
        }
        function eg(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          c[6042] = (c[6042] | 0) + 1;
          if (!(c[b2 + 4 >> 2] & 2))
            j2 = 0.019999999552965164;
          else {
            k2 = c[d2 + 192 >> 2] | 0;
            i2 = +Ob[c[(c[k2 >> 2] | 0) + 20 >> 2] & 1](k2, 0.019999999552965164);
            k2 = c[e2 + 192 >> 2] | 0;
            j2 = +Ob[c[(c[k2 >> 2] | 0) + 20 >> 2] & 1](k2, 0.019999999552965164);
            j2 = i2 < j2 ? i2 : j2;
          }
          m2 = +g[d2 + 184 >> 2];
          i2 = +g[e2 + 184 >> 2];
          i2 = m2 < i2 ? m2 : i2;
          f2 = c[b2 + 68 >> 2] | 0;
          h2 = c[f2 + 8 >> 2] | 0;
          if (!h2) {
            if (c[b2 + 4 >> 2] & 4 | 0) {
              b2 = 0;
              return b2 | 0;
            }
            c[6324] = (c[6324] | 0) + 1;
            f2 = ic(823) | 0;
            if (!f2)
              k2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              k2 = f2 + 4 + 15 & -16;
            }
          } else {
            k2 = c[f2 + 12 >> 2] | 0;
            c[f2 + 12 >> 2] = c[k2 >> 2];
            c[f2 + 8 >> 2] = h2 + -1;
          }
          c[k2 >> 2] = 1025;
          f2 = k2 + 120 | 0;
          h2 = f2 + 44 | 0;
          do {
            c[f2 >> 2] = 0;
            f2 = f2 + 4 | 0;
          } while ((f2 | 0) < (h2 | 0));
          f2 = k2 + 312 | 0;
          h2 = f2 + 44 | 0;
          do {
            c[f2 >> 2] = 0;
            f2 = f2 + 4 | 0;
          } while ((f2 | 0) < (h2 | 0));
          f2 = k2 + 504 | 0;
          h2 = f2 + 44 | 0;
          do {
            c[f2 >> 2] = 0;
            f2 = f2 + 4 | 0;
          } while ((f2 | 0) < (h2 | 0));
          f2 = k2 + 696 | 0;
          h2 = f2 + 44 | 0;
          do {
            c[f2 >> 2] = 0;
            f2 = f2 + 4 | 0;
          } while ((f2 | 0) < (h2 | 0));
          c[k2 + 772 >> 2] = d2;
          c[k2 + 776 >> 2] = e2;
          c[k2 + 780 >> 2] = 0;
          g[k2 + 784 >> 2] = j2;
          g[k2 + 788 >> 2] = i2;
          e2 = k2;
          f2 = c[b2 + 12 >> 2] | 0;
          c[k2 + 800 >> 2] = f2;
          if ((f2 | 0) == (c[b2 + 16 >> 2] | 0) ? (l2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (l2 | 0)) : 0) {
            if (!l2)
              d2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic((l2 << 2 | 3) + 16 | 0) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              d2 = f2;
              f2 = c[b2 + 12 >> 2] | 0;
            }
            if ((f2 | 0) > 0) {
              h2 = 0;
              do {
                c[d2 + (h2 << 2) >> 2] = c[(c[b2 + 20 >> 2] | 0) + (h2 << 2) >> 2];
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (f2 | 0));
            }
            h2 = c[b2 + 20 >> 2] | 0;
            if (h2) {
              if (a[b2 + 24 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[h2 + -4 >> 2] | 0);
                f2 = c[b2 + 12 >> 2] | 0;
              }
              c[b2 + 20 >> 2] = 0;
            }
            a[b2 + 24 >> 0] = 1;
            c[b2 + 20 >> 2] = d2;
            c[b2 + 16 >> 2] = l2;
          }
          c[(c[b2 + 20 >> 2] | 0) + (f2 << 2) >> 2] = e2;
          c[b2 + 12 >> 2] = f2 + 1;
          b2 = k2;
          return b2 | 0;
        }
        function fg(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          h2 = ic(787) | 0;
          if (!h2)
            h2 = 0;
          else {
            c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
            h2 = h2 + 4 + 15 & -16;
          }
          c[h2 + 4 >> 2] = 4;
          c[h2 + 8 >> 2] = -1;
          c[h2 + 12 >> 2] = -1;
          g[h2 + 16 >> 2] = 34028234663852886e22;
          a[h2 + 20 >> 0] = 1;
          a[h2 + 21 >> 0] = 0;
          c[h2 + 24 >> 2] = -1;
          c[h2 + 28 >> 2] = b2;
          c[h2 + 32 >> 2] = d2;
          g[h2 + 36 >> 2] = 0;
          g[h2 + 40 >> 2] = 0.30000001192092896;
          c[h2 + 44 >> 2] = 0;
          c[h2 >> 2] = 4452;
          d2 = h2 + 552 | 0;
          c[d2 >> 2] = c[e2 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
          d2 = h2 + 568 | 0;
          c[d2 >> 2] = c[e2 + 16 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          d2 = h2 + 584 | 0;
          c[d2 >> 2] = c[e2 + 32 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          d2 = h2 + 600 | 0;
          c[d2 >> 2] = c[e2 + 48 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          e2 = h2 + 616 | 0;
          c[e2 >> 2] = c[f2 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
          e2 = h2 + 632 | 0;
          c[e2 >> 2] = c[f2 + 16 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
          e2 = h2 + 648 | 0;
          c[e2 >> 2] = c[f2 + 32 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
          e2 = h2 + 664 | 0;
          c[e2 >> 2] = c[f2 + 48 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
          g[h2 + 688 >> 2] = 0;
          g[h2 + 692 >> 2] = -1;
          g[h2 + 696 >> 2] = 0.8999999761581421;
          g[h2 + 700 >> 2] = 0.30000001192092896;
          g[h2 + 704 >> 2] = 1;
          g[h2 + 708 >> 2] = 0;
          g[h2 + 712 >> 2] = 0;
          a[h2 + 716 >> 0] = 0;
          a[h2 + 736 >> 0] = 0;
          a[h2 + 737 >> 0] = 0;
          a[h2 + 738 >> 0] = 0;
          a[h2 + 739 >> 0] = 1;
          a[h2 + 740 >> 0] = 0;
          f2 = h2 + 748 | 0;
          c[f2 >> 2] = 0;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          c[f2 + 12 >> 2] = 0;
          c[f2 + 16 >> 2] = 0;
          g[h2 + 732 >> 2] = 1;
          return h2 | 0;
        }
        function gg(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          Ud(b2, d2);
          c[b2 >> 2] = 3428;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(27) | 0;
          i2 = e2 + 4 + 15 & -16;
          c[i2 + -4 >> 2] = e2;
          a[i2 + 4 >> 0] = 0;
          c[(e2 + 4 + 15 & -16) >> 2] = 3460;
          c[b2 + 92 >> 2] = i2;
          c[6324] = (c[6324] | 0) + 1;
          i2 = ic(27) | 0;
          e2 = i2 + 4 + 15 & -16;
          c[e2 + -4 >> 2] = i2;
          a[e2 + 4 >> 0] = 0;
          c[(i2 + 4 + 15 & -16) >> 2] = 3480;
          c[b2 + 96 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(27) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          c[e2 >> 2] = 3480;
          c[b2 + 100 >> 2] = e2;
          a[e2 + 4 >> 0] = 1;
          c[6324] = (c[6324] | 0) + 1;
          i2 = ic(27) | 0;
          e2 = i2 + 4 + 15 & -16;
          c[e2 + -4 >> 2] = i2;
          a[e2 + 4 >> 0] = 0;
          c[(i2 + 4 + 15 & -16) >> 2] = 3500;
          c[b2 + 104 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(27) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          c[e2 >> 2] = 3520;
          c[b2 + 108 >> 2] = e2;
          a[e2 + 4 >> 0] = 1;
          if (!(a[b2 + 20 >> 0] | 0))
            return;
          e2 = c[b2 + 16 >> 2] | 0;
          if (!e2)
            return;
          if ((c[e2 >> 2] | 0) >= 156)
            return;
          f2 = c[e2 + 16 >> 2] | 0;
          if (f2) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[f2 + -4 >> 2] | 0);
            e2 = c[b2 + 16 >> 2] | 0;
            if (!e2)
              i2 = b2 + 16 | 0;
            else {
              f2 = b2 + 16 | 0;
              g2 = 11;
            }
          } else {
            f2 = b2 + 16 | 0;
            g2 = 11;
          }
          if ((g2 | 0) == 11) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[e2 + -4 >> 2] | 0);
            i2 = f2;
          }
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(39) | 0;
          if (!e2)
            h2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            h2 = e2 + 4 + 15 & -16;
          }
          e2 = c[d2 + 12 >> 2] | 0;
          c[h2 >> 2] = 156;
          f2 = h2 + 4 | 0;
          c[f2 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic((e2 * 156 | 3) + 16 | 0) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          c[h2 + 16 >> 2] = e2;
          c[h2 + 12 >> 2] = e2;
          b2 = c[f2 >> 2] | 0;
          c[h2 + 8 >> 2] = b2;
          if (b2 + -1 | 0) {
            g2 = c[h2 >> 2] | 0;
            f2 = e2;
            d2 = b2 + -1 | 0;
            do {
              j2 = f2;
              f2 = f2 + g2 | 0;
              c[j2 >> 2] = f2;
              d2 = d2 + -1 | 0;
            } while ((d2 | 0) != 0);
            e2 = e2 + (S(g2, b2 + -1 | 0) | 0) | 0;
          }
          c[e2 >> 2] = 0;
          c[i2 >> 2] = h2;
          return;
        }
        function hg(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          h2 = ic(627) | 0;
          if (!h2)
            h2 = 0;
          else {
            c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
            h2 = h2 + 4 + 15 & -16;
          }
          c[h2 + 4 >> 2] = 5;
          c[h2 + 8 >> 2] = -1;
          c[h2 + 12 >> 2] = -1;
          g[h2 + 16 >> 2] = 34028234663852886e22;
          a[h2 + 20 >> 0] = 1;
          a[h2 + 21 >> 0] = 0;
          c[h2 + 24 >> 2] = -1;
          c[h2 + 28 >> 2] = b2;
          c[h2 + 32 >> 2] = d2;
          g[h2 + 36 >> 2] = 0;
          g[h2 + 40 >> 2] = 0.30000001192092896;
          c[h2 + 44 >> 2] = 0;
          c[h2 >> 2] = 4220;
          d2 = h2 + 300 | 0;
          c[d2 >> 2] = c[e2 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
          d2 = h2 + 316 | 0;
          c[d2 >> 2] = c[e2 + 16 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          d2 = h2 + 332 | 0;
          c[d2 >> 2] = c[e2 + 32 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          d2 = h2 + 348 | 0;
          c[d2 >> 2] = c[e2 + 48 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          e2 = h2 + 364 | 0;
          c[e2 >> 2] = c[f2 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
          e2 = h2 + 380 | 0;
          c[e2 >> 2] = c[f2 + 16 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
          e2 = h2 + 396 | 0;
          c[e2 >> 2] = c[f2 + 32 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
          e2 = h2 + 412 | 0;
          c[e2 >> 2] = c[f2 + 48 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
          a[h2 + 552 >> 0] = 0;
          c[h2 + 524 >> 2] = 0;
          g[h2 + 572 >> 2] = -1;
          g[h2 + 444 >> 2] = 999999984306749400;
          g[h2 + 448 >> 2] = 999999984306749400;
          g[h2 + 452 >> 2] = 999999984306749400;
          g[h2 + 428 >> 2] = 1;
          g[h2 + 432 >> 2] = 0.30000001192092896;
          g[h2 + 436 >> 2] = 1;
          g[h2 + 440 >> 2] = 0.009999999776482582;
          g[h2 + 456 >> 2] = 0.05000000074505806;
          c[h2 + 592 >> 2] = 0;
          g[h2 + 596 >> 2] = 0;
          g[h2 + 600 >> 2] = 0.699999988079071;
          g[h2 + 604 >> 2] = 0;
          return h2 | 0;
        }
        function ig(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          l2 = c[d2 >> 2] | 0;
          l2 = Jb[c[(c[l2 >> 2] | 0) + 56 >> 2] & 31](l2, 116) | 0;
          rl(l2, d2, e2, f2, 0);
          c[l2 >> 2] = 9108;
          a[l2 + 104 >> 0] = 1;
          c[l2 + 100 >> 2] = 0;
          c[l2 + 92 >> 2] = 0;
          c[l2 + 96 >> 2] = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(83) | 0;
          if (!b2)
            h2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            h2 = b2 + 4 + 15 & -16;
          }
          c[h2 >> 2] = 9400;
          i2 = h2 + 20 | 0;
          a[i2 >> 0] = 1;
          j2 = h2 + 16 | 0;
          c[j2 >> 2] = 0;
          d2 = h2 + 8 | 0;
          c[d2 >> 2] = 0;
          k2 = h2 + 12 | 0;
          c[k2 >> 2] = 0;
          a[h2 + 40 >> 0] = 1;
          c[h2 + 36 >> 2] = 0;
          c[h2 + 28 >> 2] = 0;
          c[h2 + 32 >> 2] = 0;
          a[h2 + 60 >> 0] = 1;
          c[h2 + 56 >> 2] = 0;
          c[h2 + 48 >> 2] = 0;
          c[h2 + 52 >> 2] = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(43) | 0;
          if (!b2)
            g2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            g2 = b2 + 4 + 15 & -16;
          }
          d2 = c[d2 >> 2] | 0;
          if ((d2 | 0) > 0) {
            b2 = 0;
            do {
              m2 = g2 + (b2 * 12 | 0) | 0;
              n2 = (c[j2 >> 2] | 0) + (b2 * 12 | 0) | 0;
              c[m2 >> 2] = c[n2 >> 2];
              c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
              c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) != (d2 | 0));
          }
          b2 = c[j2 >> 2] | 0;
          if (!b2) {
            a[i2 >> 0] = 1;
            c[j2 >> 2] = g2;
            c[k2 >> 2] = 2;
            xf(h2);
            n2 = l2 + 84 | 0;
            c[n2 >> 2] = h2;
            n2 = e2 + 4 | 0;
            n2 = c[n2 >> 2] | 0;
            n2 = n2 + 72 | 0;
            n2 = c[n2 >> 2] | 0;
            m2 = l2 + 108 | 0;
            c[m2 >> 2] = n2;
            m2 = f2 + 4 | 0;
            m2 = c[m2 >> 2] | 0;
            m2 = m2 + 72 | 0;
            m2 = c[m2 >> 2] | 0;
            n2 = l2 + 112 | 0;
            c[n2 >> 2] = m2;
            return l2 | 0;
          }
          if (a[i2 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[b2 + -4 >> 2] | 0);
          }
          c[j2 >> 2] = 0;
          a[i2 >> 0] = 1;
          c[j2 >> 2] = g2;
          c[k2 >> 2] = 2;
          xf(h2);
          n2 = l2 + 84 | 0;
          c[n2 >> 2] = h2;
          n2 = e2 + 4 | 0;
          n2 = c[n2 >> 2] | 0;
          n2 = n2 + 72 | 0;
          n2 = c[n2 >> 2] | 0;
          m2 = l2 + 108 | 0;
          c[m2 >> 2] = n2;
          m2 = f2 + 4 | 0;
          m2 = c[m2 >> 2] | 0;
          m2 = m2 + 72 | 0;
          m2 = c[m2 >> 2] | 0;
          n2 = l2 + 112 | 0;
          c[n2 >> 2] = m2;
          return l2 | 0;
        }
        function jg(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          kb[c[(c[b2 >> 2] | 0) + 32 >> 2] & 255](b2);
          e2 = yb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, 104, 1) | 0;
          d2 = c[e2 + 8 >> 2] | 0;
          f2 = d2;
          g2 = f2 + 104 | 0;
          do {
            c[f2 >> 2] = 0;
            f2 = f2 + 4 | 0;
          } while ((f2 | 0) < (g2 | 0));
          c[d2 + 88 >> 2] = c[a2 + 248 >> 2];
          c[d2 + 92 >> 2] = c[a2 + 252 >> 2];
          c[d2 + 96 >> 2] = c[a2 + 256 >> 2];
          c[d2 + 100 >> 2] = c[a2 + 260 >> 2];
          c[d2 >> 2] = c[a2 + 92 >> 2];
          c[d2 + 4 >> 2] = c[a2 + 96 >> 2];
          c[d2 + 8 >> 2] = c[a2 + 100 >> 2];
          c[d2 + 12 >> 2] = c[a2 + 104 >> 2];
          c[d2 + 16 >> 2] = c[a2 + 108 >> 2];
          c[d2 + 20 >> 2] = c[a2 + 116 >> 2];
          c[d2 + 24 >> 2] = c[a2 + 120 >> 2];
          c[d2 + 28 >> 2] = c[a2 + 124 >> 2];
          c[d2 + 32 >> 2] = c[a2 + 128 >> 2];
          c[d2 + 36 >> 2] = c[a2 + 132 >> 2];
          c[d2 + 40 >> 2] = c[a2 + 140 >> 2];
          c[d2 + 44 >> 2] = c[a2 + 144 >> 2];
          c[d2 + 48 >> 2] = c[a2 + 148 >> 2];
          c[d2 + 52 >> 2] = c[a2 + 152 >> 2];
          c[d2 + 56 >> 2] = c[a2 + 168 >> 2];
          c[d2 + 60 >> 2] = c[a2 + 172 >> 2];
          c[d2 + 64 >> 2] = c[a2 + 112 >> 2];
          c[d2 + 68 >> 2] = c[a2 + 156 >> 2];
          c[d2 + 72 >> 2] = c[a2 + 160 >> 2];
          c[d2 + 76 >> 2] = c[a2 + 164 >> 2];
          c[d2 + 80 >> 2] = c[a2 + 136 >> 2];
          ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, 12394, 1145853764, d2);
          d2 = c[a2 + 8 >> 2] | 0;
          if ((d2 | 0) <= 0) {
            aj(a2, b2);
            cd(a2, b2);
            a2 = c[b2 >> 2] | 0;
            a2 = a2 + 36 | 0;
            a2 = c[a2 >> 2] | 0;
            kb[a2 & 255](b2);
            return;
          }
          f2 = 0;
          do {
            e2 = c[(c[a2 + 16 >> 2] | 0) + (f2 << 2) >> 2] | 0;
            if (c[e2 + 248 >> 2] & 8) {
              g2 = ob[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2) | 0;
              g2 = yb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, g2, 1) | 0;
              d2 = yb[c[(c[e2 >> 2] | 0) + 20 >> 2] & 63](e2, c[g2 + 8 >> 2] | 0, b2) | 0;
              ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, g2, d2, 1497645651, e2);
              d2 = c[a2 + 8 >> 2] | 0;
            }
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) < (d2 | 0));
          aj(a2, b2);
          cd(a2, b2);
          a2 = c[b2 >> 2] | 0;
          a2 = a2 + 36 | 0;
          a2 = c[a2 >> 2] | 0;
          kb[a2 & 255](b2);
          return;
        }
        function kg(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          h2 = i;
          i = i + 32 | 0;
          d2 = c[a2 + 8 >> 2] | 0;
          if ((d2 | 0) <= 0) {
            i = h2;
            return;
          }
          f2 = 0;
          do {
            e2 = c[(c[a2 + 16 >> 2] | 0) + (f2 << 2) >> 2] | 0;
            if ((!((e2 | 0) == 0 ? 1 : (c[e2 + 248 >> 2] & 2 | 0) == 0) ? (c[e2 + 216 >> 2] | 0) != 2 : 0) ? !(b2 == 0 ? 1 : (c[e2 + 204 >> 2] & 2 | 0) == 0) : 0) {
              d2 = c[e2 + 520 >> 2] | 0;
              if (!d2)
                d2 = e2 + 4 | 0;
              else {
                mb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, e2 + 4 | 0);
                d2 = e2 + 4 | 0;
              }
              k2 = 1 / b2 * (+g[e2 + 56 >> 2] - +g[e2 + 120 >> 2]);
              l2 = 1 / b2 * (+g[e2 + 60 >> 2] - +g[e2 + 124 >> 2]);
              g[e2 + 352 >> 2] = 1 / b2 * (+g[e2 + 52 >> 2] - +g[e2 + 116 >> 2]);
              g[e2 + 356 >> 2] = k2;
              g[e2 + 360 >> 2] = l2;
              g[e2 + 364 >> 2] = 0;
              rf(e2 + 68 | 0, d2, h2 + 8 | 0, h2);
              l2 = +g[h2 >> 2];
              k2 = 1 / b2 * l2 * +g[h2 + 8 + 4 >> 2];
              j2 = 1 / b2 * l2 * +g[h2 + 8 + 8 >> 2];
              g[e2 + 368 >> 2] = 1 / b2 * +g[h2 + 8 >> 2] * l2;
              g[e2 + 372 >> 2] = k2;
              g[e2 + 376 >> 2] = j2;
              g[e2 + 380 >> 2] = 0;
              c[e2 + 132 >> 2] = c[e2 + 352 >> 2];
              c[e2 + 132 + 4 >> 2] = c[e2 + 352 + 4 >> 2];
              c[e2 + 132 + 8 >> 2] = c[e2 + 352 + 8 >> 2];
              c[e2 + 132 + 12 >> 2] = c[e2 + 352 + 12 >> 2];
              c[e2 + 148 >> 2] = c[e2 + 368 >> 2];
              c[e2 + 148 + 4 >> 2] = c[e2 + 368 + 4 >> 2];
              c[e2 + 148 + 8 >> 2] = c[e2 + 368 + 8 >> 2];
              c[e2 + 148 + 12 >> 2] = c[e2 + 368 + 12 >> 2];
              c[e2 + 68 >> 2] = c[d2 >> 2];
              c[e2 + 68 + 4 >> 2] = c[d2 + 4 >> 2];
              c[e2 + 68 + 8 >> 2] = c[d2 + 8 >> 2];
              c[e2 + 68 + 12 >> 2] = c[d2 + 12 >> 2];
              c[e2 + 84 >> 2] = c[e2 + 20 >> 2];
              c[e2 + 84 + 4 >> 2] = c[e2 + 20 + 4 >> 2];
              c[e2 + 84 + 8 >> 2] = c[e2 + 20 + 8 >> 2];
              c[e2 + 84 + 12 >> 2] = c[e2 + 20 + 12 >> 2];
              c[e2 + 100 >> 2] = c[e2 + 36 >> 2];
              c[e2 + 100 + 4 >> 2] = c[e2 + 36 + 4 >> 2];
              c[e2 + 100 + 8 >> 2] = c[e2 + 36 + 8 >> 2];
              c[e2 + 100 + 12 >> 2] = c[e2 + 36 + 12 >> 2];
              c[e2 + 116 >> 2] = c[e2 + 52 >> 2];
              c[e2 + 116 + 4 >> 2] = c[e2 + 52 + 4 >> 2];
              c[e2 + 116 + 8 >> 2] = c[e2 + 52 + 8 >> 2];
              c[e2 + 116 + 12 >> 2] = c[e2 + 52 + 12 >> 2];
              d2 = c[a2 + 8 >> 2] | 0;
            }
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) < (d2 | 0));
          i = h2;
          return;
        }
        function lg(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          c[6318] = (c[6318] | 0) + 1;
          g2 = ((d2 << 16 | b2) + ~((d2 << 16 | b2) << 15) >> 10 ^ (d2 << 16 | b2) + ~((d2 << 16 | b2) << 15)) * 9 | 0;
          l2 = c[a2 + 36 >> 2] | 0;
          g2 = l2 + (((c[a2 + 12 >> 2] | 0) + -1 & ((g2 >> 6 ^ g2) + ~((g2 >> 6 ^ g2) << 11) >> 16 ^ (g2 >> 6 ^ g2) + ~((g2 >> 6 ^ g2) << 11))) << 2) | 0;
          f2 = c[g2 >> 2] | 0;
          if ((f2 | 0) == -1) {
            n2 = 0;
            return n2 | 0;
          }
          m2 = c[a2 + 16 >> 2] | 0;
          e2 = f2;
          while (1) {
            k2 = m2 + (e2 * 12 | 0) | 0;
            if ((c[k2 >> 2] | 0) == (b2 | 0) ? (c[m2 + (e2 * 12 | 0) + 4 >> 2] | 0) == (d2 | 0) : 0)
              break;
            e2 = c[(c[a2 + 56 >> 2] | 0) + (e2 << 2) >> 2] | 0;
            if ((e2 | 0) == -1) {
              e2 = 0;
              n2 = 21;
              break;
            }
          }
          if ((n2 | 0) == 21)
            return e2 | 0;
          if (!k2) {
            n2 = 0;
            return n2 | 0;
          }
          j2 = c[m2 + (e2 * 12 | 0) + 8 >> 2] | 0;
          i2 = (e2 * 12 | 0) / 12 | 0;
          h2 = c[a2 + 56 >> 2] | 0;
          if ((f2 | 0) != (i2 | 0)) {
            b2 = f2;
            while (1) {
              d2 = h2 + (b2 << 2) | 0;
              e2 = c[d2 >> 2] | 0;
              if ((e2 | 0) == (i2 | 0))
                break;
              else
                b2 = e2;
            }
            e2 = c[h2 + (i2 << 2) >> 2] | 0;
            if ((b2 | 0) == -1)
              n2 = 11;
            else
              c[d2 >> 2] = e2;
          } else {
            e2 = c[h2 + (f2 << 2) >> 2] | 0;
            n2 = 11;
          }
          if ((n2 | 0) == 11)
            c[g2 >> 2] = e2;
          f2 = (c[a2 + 8 >> 2] | 0) + -1 | 0;
          if ((f2 | 0) == (i2 | 0)) {
            c[a2 + 8 >> 2] = i2;
            n2 = j2;
            return n2 | 0;
          }
          g2 = c[m2 + (f2 * 12 | 0) + 4 >> 2] << 16 | c[m2 + (f2 * 12 | 0) >> 2];
          g2 = (g2 + ~(g2 << 15) >> 10 ^ g2 + ~(g2 << 15)) * 9 | 0;
          g2 = ((g2 >> 6 ^ g2) + ~((g2 >> 6 ^ g2) << 11) >> 16 ^ (g2 >> 6 ^ g2) + ~((g2 >> 6 ^ g2) << 11)) & (c[a2 + 12 >> 2] | 0) + -1;
          e2 = c[l2 + (g2 << 2) >> 2] | 0;
          if ((e2 | 0) != (f2 | 0)) {
            b2 = e2;
            while (1) {
              d2 = h2 + (b2 << 2) | 0;
              e2 = c[d2 >> 2] | 0;
              if ((e2 | 0) == (f2 | 0))
                break;
              else
                b2 = e2;
            }
            e2 = c[h2 + (f2 << 2) >> 2] | 0;
            if ((b2 | 0) == -1)
              n2 = 19;
            else
              c[d2 >> 2] = e2;
          } else {
            e2 = c[h2 + (f2 << 2) >> 2] | 0;
            n2 = 19;
          }
          if ((n2 | 0) == 19)
            c[l2 + (g2 << 2) >> 2] = e2;
          c[k2 >> 2] = c[m2 + (f2 * 12 | 0) >> 2];
          c[k2 + 4 >> 2] = c[m2 + (f2 * 12 | 0) + 4 >> 2];
          c[k2 + 8 >> 2] = c[m2 + (f2 * 12 | 0) + 8 >> 2];
          n2 = (c[a2 + 36 >> 2] | 0) + (g2 << 2) | 0;
          c[(c[a2 + 56 >> 2] | 0) + (i2 << 2) >> 2] = c[n2 >> 2];
          c[n2 >> 2] = i2;
          c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + -1;
          n2 = j2;
          return n2 | 0;
        }
        function mg(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          d2 = c[b2 + 248 >> 2] | 0;
          if ((b2 | 0) == 0 | (d2 | 0) != 8) {
            if (!((b2 | 0) == 0 | (d2 & 2 | 0) == 0)) {
              mb[c[(c[a2 >> 2] | 0) + 92 >> 2] & 127](a2, b2);
              return;
            }
            d2 = c[b2 + 188 >> 2] | 0;
            if (d2 | 0) {
              h2 = c[a2 + 68 >> 2] | 0;
              h2 = ob[c[(c[h2 >> 2] | 0) + 36 >> 2] & 127](h2) | 0;
              Ub[c[(c[h2 >> 2] | 0) + 40 >> 2] & 127](h2, d2, c[a2 + 24 >> 2] | 0);
              h2 = c[a2 + 68 >> 2] | 0;
              Ub[c[(c[h2 >> 2] | 0) + 12 >> 2] & 127](h2, d2, c[a2 + 24 >> 2] | 0);
              c[b2 + 188 >> 2] = 0;
            }
            e2 = c[a2 + 8 >> 2] | 0;
            if ((e2 | 0) <= 0)
              return;
            f2 = c[a2 + 16 >> 2] | 0;
            d2 = 0;
            while (1) {
              g2 = f2 + (d2 << 2) | 0;
              if ((c[g2 >> 2] | 0) == (b2 | 0))
                break;
              h2 = d2 + 1 | 0;
              if ((h2 | 0) < (e2 | 0))
                d2 = h2;
              else {
                i2 = 26;
                break;
              }
            }
            if ((i2 | 0) == 26)
              return;
            if ((d2 | 0) >= (e2 | 0))
              return;
            c[g2 >> 2] = c[f2 + (e2 + -1 << 2) >> 2];
            c[(c[a2 + 16 >> 2] | 0) + (e2 + -1 << 2) >> 2] = b2;
            c[a2 + 8 >> 2] = e2 + -1;
            return;
          }
          g2 = c[a2 + 328 >> 2] | 0;
          a:
            do
              if ((g2 | 0) > 0) {
                f2 = c[a2 + 336 >> 2] | 0;
                d2 = 0;
                while (1) {
                  e2 = f2 + (d2 << 2) | 0;
                  if ((c[e2 >> 2] | 0) == (b2 | 0))
                    break;
                  d2 = d2 + 1 | 0;
                  if ((d2 | 0) >= (g2 | 0))
                    break a;
                }
                if ((d2 | 0) < (g2 | 0)) {
                  c[e2 >> 2] = c[f2 + (g2 + -1 << 2) >> 2];
                  c[(c[a2 + 336 >> 2] | 0) + (g2 + -1 << 2) >> 2] = b2;
                  c[a2 + 328 >> 2] = g2 + -1;
                }
              }
            while (0);
          d2 = c[b2 + 188 >> 2] | 0;
          if (d2 | 0) {
            h2 = c[a2 + 68 >> 2] | 0;
            h2 = ob[c[(c[h2 >> 2] | 0) + 36 >> 2] & 127](h2) | 0;
            Ub[c[(c[h2 >> 2] | 0) + 40 >> 2] & 127](h2, d2, c[a2 + 24 >> 2] | 0);
            h2 = c[a2 + 68 >> 2] | 0;
            Ub[c[(c[h2 >> 2] | 0) + 12 >> 2] & 127](h2, d2, c[a2 + 24 >> 2] | 0);
            c[b2 + 188 >> 2] = 0;
          }
          e2 = c[a2 + 8 >> 2] | 0;
          if ((e2 | 0) <= 0)
            return;
          f2 = c[a2 + 16 >> 2] | 0;
          d2 = 0;
          while (1) {
            g2 = f2 + (d2 << 2) | 0;
            if ((c[g2 >> 2] | 0) == (b2 | 0))
              break;
            h2 = d2 + 1 | 0;
            if ((h2 | 0) < (e2 | 0))
              d2 = h2;
            else {
              i2 = 26;
              break;
            }
          }
          if ((i2 | 0) == 26)
            return;
          if ((d2 | 0) >= (e2 | 0))
            return;
          c[g2 >> 2] = c[f2 + (e2 + -1 << 2) >> 2];
          c[(c[a2 + 16 >> 2] | 0) + (e2 + -1 << 2) >> 2] = b2;
          c[a2 + 8 >> 2] = e2 + -1;
          return;
        }
        function ng(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          p2 = i;
          i = i + 16 | 0;
          o2 = c[a2 + 92 >> 2] | 0;
          if (!(ob[c[(c[o2 >> 2] | 0) + 56 >> 2] & 127](o2) | 0)) {
            i = p2;
            return;
          }
          o2 = c[a2 + 92 >> 2] | 0;
          o2 = ob[c[(c[o2 >> 2] | 0) + 28 >> 2] & 127](o2) | 0;
          d2 = c[o2 + 4 >> 2] | 0;
          if ((d2 | 0) > 1) {
            Gd(o2, 0, d2 + -1 | 0);
            d2 = c[o2 + 4 >> 2] | 0;
          }
          f2 = d2 - (c[a2 + 104 >> 2] | 0) | 0;
          c[p2 >> 2] = 0;
          c[p2 + 4 >> 2] = 0;
          c[p2 + 8 >> 2] = 0;
          c[p2 + 12 >> 2] = 0;
          ni(o2, f2, p2);
          c[a2 + 104 >> 2] = 0;
          f2 = c[o2 + 4 >> 2] | 0;
          if ((f2 | 0) > 0) {
            l2 = 0;
            m2 = 0;
            g2 = 0;
            d2 = 0;
            do {
              k2 = c[o2 + 12 >> 2] | 0;
              j2 = k2 + (l2 << 4) | 0;
              q2 = m2;
              m2 = c[j2 >> 2] | 0;
              k2 = k2 + (l2 << 4) + 4 | 0;
              h2 = c[k2 >> 2] | 0;
              if (!((m2 | 0) == (q2 | 0) & (h2 | 0) == (g2 | 0))) {
                q2 = m2 + 54 | 0;
                g2 = m2 + 48 | 0;
                if ((((((e[q2 >> 1] | 0) >= (e[h2 + 48 >> 1] | 0) ? (e[h2 + 54 >> 1] | 0) >= (e[g2 >> 1] | 0) : 0) ? (e[q2 + 2 >> 1] | 0) >= (e[h2 + 48 + 2 >> 1] | 0) : 0) ? (e[h2 + 54 + 2 >> 1] | 0) >= (e[g2 + 2 >> 1] | 0) : 0) ? (e[q2 + 4 >> 1] | 0) >= (e[h2 + 52 >> 1] | 0) : 0) ? (e[h2 + 54 + 4 >> 1] | 0) >= (e[m2 + 52 >> 1] | 0) : 0)
                  g2 = h2;
                else {
                  d2 = h2;
                  n2 = 14;
                }
              } else {
                d2 = g2;
                n2 = 14;
              }
              if ((n2 | 0) == 14) {
                n2 = 0;
                q2 = c[a2 + 92 >> 2] | 0;
                Ub[c[(c[q2 >> 2] | 0) + 32 >> 2] & 127](q2, j2, b2);
                c[j2 >> 2] = 0;
                c[k2 >> 2] = 0;
                q2 = (c[a2 + 104 >> 2] | 0) + 1 | 0;
                c[a2 + 104 >> 2] = q2;
                c[6038] = (c[6038] | 0) + -1;
                g2 = d2;
                f2 = c[o2 + 4 >> 2] | 0;
                d2 = q2;
              }
              l2 = l2 + 1 | 0;
            } while ((l2 | 0) < (f2 | 0));
            if ((f2 | 0) > 1) {
              Gd(o2, 0, f2 + -1 | 0);
              f2 = c[o2 + 4 >> 2] | 0;
              d2 = c[a2 + 104 >> 2] | 0;
            }
          } else
            d2 = 0;
          c[p2 >> 2] = 0;
          c[p2 + 4 >> 2] = 0;
          c[p2 + 8 >> 2] = 0;
          c[p2 + 12 >> 2] = 0;
          ni(o2, f2 - d2 | 0, p2);
          c[a2 + 104 >> 2] = 0;
          i = p2;
          return;
        }
        function og(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
          h2 = i;
          i = i + 16 | 0;
          d2 = +g[a2 + 376 >> 2] * b2;
          b2 = +g[a2 + 492 >> 2];
          f2 = c[a2 + 832 >> 2] | 0;
          if ((f2 | 0) <= 0) {
            i = h2;
            return;
          }
          e2 = 0;
          do {
            t2 = c[a2 + 840 >> 2] | 0;
            k2 = t2 + (e2 * 96 | 0) + 20 | 0;
            w2 = c[k2 >> 2] | 0;
            o2 = c[t2 + (e2 * 96 | 0) >> 2] | 0;
            z2 = +g[t2 + (e2 * 96 | 0) + 4 >> 2];
            y2 = +g[t2 + (e2 * 96 | 0) + 8 >> 2];
            x2 = +g[t2 + (e2 * 96 | 0) + 12 >> 2];
            j2 = t2 + (e2 * 96 | 0) + 76 | 0;
            v2 = +g[w2 + 372 >> 2];
            q2 = +g[t2 + (e2 * 96 | 0) + 84 >> 2];
            A2 = +g[w2 + 376 >> 2];
            m2 = +g[t2 + (e2 * 96 | 0) + 80 >> 2];
            l2 = +g[j2 >> 2];
            n2 = +g[w2 + 368 >> 2];
            s2 = +g[o2 + 8 >> 2];
            r2 = +g[o2 + 12 >> 2];
            p2 = +g[o2 + 16 >> 2];
            u2 = d2 * (z2 * +g[w2 + 4 >> 2] + y2 * +g[w2 + 8 >> 2] + x2 * +g[w2 + 12 >> 2] + +g[w2 + 52 >> 2] - s2) + (b2 * (v2 * q2 - A2 * m2 + +g[w2 + 352 >> 2]) - (s2 - +g[o2 + 24 >> 2]));
            q2 = d2 * (z2 * +g[w2 + 20 >> 2] + y2 * +g[w2 + 24 >> 2] + x2 * +g[w2 + 28 >> 2] + +g[w2 + 56 >> 2] - r2) + (b2 * (+g[w2 + 356 >> 2] + (A2 * l2 - q2 * n2)) - (r2 - +g[o2 + 28 >> 2]));
            l2 = d2 * (z2 * +g[w2 + 36 >> 2] + y2 * +g[w2 + 40 >> 2] + x2 * +g[w2 + 44 >> 2] + +g[w2 + 60 >> 2] - p2) + (b2 * (m2 * n2 - v2 * l2 + +g[w2 + 360 >> 2]) - (p2 - +g[o2 + 32 >> 2]));
            v2 = +g[t2 + (e2 * 96 | 0) + 24 >> 2];
            n2 = (u2 * +g[t2 + (e2 * 96 | 0) + 28 >> 2] + q2 * +g[t2 + (e2 * 96 | 0) + 32 >> 2] + +g[t2 + (e2 * 96 | 0) + 36 >> 2] * l2) * v2;
            m2 = (u2 * +g[t2 + (e2 * 96 | 0) + 44 >> 2] + q2 * +g[t2 + (e2 * 96 | 0) + 48 >> 2] + l2 * +g[t2 + (e2 * 96 | 0) + 52 >> 2]) * v2;
            l2 = v2 * (u2 * +g[t2 + (e2 * 96 | 0) + 60 >> 2] + q2 * +g[t2 + (e2 * 96 | 0) + 64 >> 2] + l2 * +g[t2 + (e2 * 96 | 0) + 68 >> 2]);
            q2 = +g[t2 + (e2 * 96 | 0) + 92 >> 2];
            g[o2 + 8 >> 2] = s2 + n2 * q2;
            g[o2 + 12 >> 2] = q2 * m2 + r2;
            g[o2 + 16 >> 2] = q2 * l2 + p2;
            k2 = c[k2 >> 2] | 0;
            g[h2 >> 2] = -n2;
            g[h2 + 4 >> 2] = -m2;
            g[h2 + 8 >> 2] = -l2;
            g[h2 + 12 >> 2] = 0;
            Xi(k2, h2, j2);
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) != (f2 | 0));
          i = h2;
          return;
        }
        function pg(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          m2 = i;
          i = i + 688 | 0;
          c[m2 + 568 + 8 >> 2] = 0;
          c[m2 + 568 + 12 >> 2] = -1;
          c[m2 + 568 + 16 >> 2] = 1065353216;
          c[m2 + 568 + 20 >> 2] = 1065353216;
          c[m2 + 568 + 24 >> 2] = 1065353216;
          g[m2 + 568 + 28 >> 2] = 0;
          c[m2 + 568 + 56 >> 2] = 0;
          c[m2 + 568 >> 2] = 3956;
          c[m2 + 568 + 4 >> 2] = 1;
          c[m2 + 568 + 60 >> 2] = c[d2 >> 2];
          c[m2 + 568 + 60 + 4 >> 2] = c[d2 + 4 >> 2];
          c[m2 + 568 + 60 + 8 >> 2] = c[d2 + 8 >> 2];
          c[m2 + 568 + 60 + 12 >> 2] = c[d2 + 12 >> 2];
          c[m2 + 568 + 76 >> 2] = c[d2 + 16 >> 2];
          c[m2 + 568 + 76 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[m2 + 568 + 76 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[m2 + 568 + 76 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[m2 + 568 + 92 >> 2] = c[d2 + 32 >> 2];
          c[m2 + 568 + 92 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[m2 + 568 + 92 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[m2 + 568 + 92 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          c[m2 + 568 + 48 >> 2] = c[b2 + 204 >> 2];
          g[m2 + 208 + 308 >> 2] = 9999999747378752e-20;
          a[m2 + 208 + 332 >> 0] = 0;
          c[m2 + 200 >> 2] = 8828;
          d2 = c[b2 + 4 >> 2] | 0;
          c[m2 + 176 >> 2] = 8736;
          c[m2 + 176 + 4 >> 2] = m2 + 208;
          c[m2 + 176 + 8 >> 2] = m2 + 200;
          c[m2 + 176 + 12 >> 2] = d2;
          c[m2 + 176 + 16 >> 2] = m2 + 568;
          c[m2 + 176 + 20 >> 2] = 0;
          c[m2 >> 2] = 3928;
          c[m2 + 168 >> 2] = 0;
          g[m2 + 164 >> 2] = 1;
          c[m2 + 172 >> 2] = c[b2 + 208 >> 2];
          if ((Jd(m2 + 176 | 0, b2 + 8 | 0, b2 + 72 | 0, b2 + 136 | 0, b2 + 136 | 0, m2) | 0 ? (h2 = +g[m2 + 132 >> 2], j2 = +g[m2 + 136 >> 2], k2 = +g[m2 + 140 >> 2], h2 * h2 + j2 * j2 + k2 * k2 > 9999999747378752e-20) : 0) ? (l2 = +g[m2 + 164 >> 2], l2 < +g[b2 + 200 >> 2]) : 0) {
            n2 = 1 / +G(+(h2 * h2 + j2 * j2 + k2 * k2));
            g[m2 + 132 >> 2] = h2 * n2;
            g[m2 + 136 >> 2] = j2 * n2;
            g[m2 + 140 >> 2] = k2 * n2;
            +Eb[c[(c[b2 >> 2] | 0) + 12 >> 2] & 3](b2, m2 + 132 | 0, m2 + 148 | 0, l2, e2, f2);
          }
          c[m2 + 568 >> 2] = 8236;
          b2 = c[m2 + 568 + 56 >> 2] | 0;
          if (!b2) {
            i = m2;
            return;
          }
          kb[c[c[b2 >> 2] >> 2] & 255](b2);
          b2 = c[m2 + 568 + 56 >> 2] | 0;
          if (!b2) {
            i = m2;
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          i = m2;
          return;
        }
        function qg(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          h2 = +g[d2 + 100 >> 2];
          i2 = +g[d2 + 16 >> 2];
          j2 = +g[d2 + 20 >> 2];
          k2 = +g[d2 + 24 >> 2];
          e2 = +g[d2 + 108 >> 2];
          e2 = +g[d2 + 112 >> 2] - h2 * +g[d2 + 116 >> 2] - (i2 * +g[a2 + 64 >> 2] + j2 * +g[a2 + 68 >> 2] + k2 * +g[a2 + 72 >> 2] + (+g[d2 >> 2] * +g[a2 + 80 >> 2] + +g[d2 + 4 >> 2] * +g[a2 + 84 >> 2] + +g[d2 + 8 >> 2] * +g[a2 + 88 >> 2])) * e2 - e2 * (+g[d2 + 48 >> 2] * +g[b2 + 64 >> 2] + +g[d2 + 52 >> 2] * +g[b2 + 68 >> 2] + +g[d2 + 56 >> 2] * +g[b2 + 72 >> 2] + (+g[d2 + 32 >> 2] * +g[b2 + 80 >> 2] + +g[d2 + 36 >> 2] * +g[b2 + 84 >> 2] + +g[d2 + 40 >> 2] * +g[b2 + 88 >> 2]));
          f2 = +g[d2 + 120 >> 2];
          do
            if (!(h2 + e2 < f2)) {
              f2 = +g[d2 + 124 >> 2];
              if (h2 + e2 > f2) {
                g[d2 + 100 >> 2] = f2;
                e2 = f2 - h2;
                break;
              } else {
                g[d2 + 100 >> 2] = h2 + e2;
                break;
              }
            } else {
              g[d2 + 100 >> 2] = f2;
              e2 = f2 - h2;
            }
          while (0);
          if (c[a2 + 240 >> 2] | 0) {
            h2 = e2 * j2 * +g[a2 + 132 >> 2] * +g[a2 + 116 >> 2];
            j2 = e2 * k2 * +g[a2 + 136 >> 2] * +g[a2 + 120 >> 2];
            g[a2 + 64 >> 2] = +g[a2 + 112 >> 2] * e2 * i2 * +g[a2 + 128 >> 2] + +g[a2 + 64 >> 2];
            g[a2 + 68 >> 2] = h2 + +g[a2 + 68 >> 2];
            g[a2 + 72 >> 2] = j2 + +g[a2 + 72 >> 2];
            j2 = e2 * +g[a2 + 100 >> 2] * +g[d2 + 68 >> 2];
            k2 = e2 * +g[a2 + 104 >> 2] * +g[d2 + 72 >> 2];
            g[a2 + 80 >> 2] = e2 * +g[a2 + 96 >> 2] * +g[d2 + 64 >> 2] + +g[a2 + 80 >> 2];
            g[a2 + 84 >> 2] = j2 + +g[a2 + 84 >> 2];
            g[a2 + 88 >> 2] = k2 + +g[a2 + 88 >> 2];
          }
          if (!(c[b2 + 240 >> 2] | 0))
            return +e2;
          k2 = e2 * +g[d2 + 52 >> 2] * +g[b2 + 132 >> 2] * +g[b2 + 116 >> 2];
          j2 = e2 * +g[d2 + 56 >> 2] * +g[b2 + 136 >> 2] * +g[b2 + 120 >> 2];
          g[b2 + 64 >> 2] = +g[b2 + 112 >> 2] * e2 * +g[d2 + 48 >> 2] * +g[b2 + 128 >> 2] + +g[b2 + 64 >> 2];
          g[b2 + 68 >> 2] = k2 + +g[b2 + 68 >> 2];
          g[b2 + 72 >> 2] = j2 + +g[b2 + 72 >> 2];
          j2 = e2 * +g[b2 + 100 >> 2] * +g[d2 + 84 >> 2];
          k2 = e2 * +g[b2 + 104 >> 2] * +g[d2 + 88 >> 2];
          g[b2 + 80 >> 2] = e2 * +g[b2 + 96 >> 2] * +g[d2 + 80 >> 2] + +g[b2 + 80 >> 2];
          g[b2 + 84 >> 2] = j2 + +g[b2 + 84 >> 2];
          g[b2 + 88 >> 2] = k2 + +g[b2 + 88 >> 2];
          return +e2;
        }
        function rg(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          d2 = c[a2 + 752 >> 2] | 0;
          if ((d2 | 0) > 0) {
            b2 = 0;
            do {
              l2 = (c[a2 + 760 >> 2] | 0) + (b2 * 104 | 0) + 72 | 0;
              b2 = b2 + 1 | 0;
              c[l2 >> 2] = 0;
              c[l2 + 4 >> 2] = 0;
              c[l2 + 8 >> 2] = 0;
              c[l2 + 12 >> 2] = 0;
            } while ((b2 | 0) != (d2 | 0));
          }
          d2 = c[a2 + 792 >> 2] | 0;
          if ((d2 | 0) > 0) {
            b2 = 0;
            do {
              o2 = c[a2 + 800 >> 2] | 0;
              j2 = c[o2 + (b2 * 44 | 0) + 12 >> 2] | 0;
              h2 = c[o2 + (b2 * 44 | 0) + 8 >> 2] | 0;
              k2 = +g[h2 + 8 >> 2];
              e2 = +g[j2 + 8 >> 2] - k2;
              f2 = +g[h2 + 12 >> 2];
              i2 = +g[j2 + 12 >> 2] - f2;
              m2 = +g[h2 + 16 >> 2];
              n2 = +g[j2 + 16 >> 2] - m2;
              l2 = c[o2 + (b2 * 44 | 0) + 16 >> 2] | 0;
              k2 = +g[l2 + 8 >> 2] - k2;
              f2 = +g[l2 + 12 >> 2] - f2;
              m2 = +g[l2 + 16 >> 2] - m2;
              p2 = 1 / +G(+((e2 * f2 - i2 * k2) * (e2 * f2 - i2 * k2) + ((i2 * m2 - n2 * f2) * (i2 * m2 - n2 * f2) + (n2 * k2 - e2 * m2) * (n2 * k2 - e2 * m2))));
              g[o2 + (b2 * 44 | 0) + 20 >> 2] = p2 * (i2 * m2 - n2 * f2);
              g[o2 + (b2 * 44 | 0) + 24 >> 2] = p2 * (n2 * k2 - e2 * m2);
              g[o2 + (b2 * 44 | 0) + 28 >> 2] = (e2 * f2 - i2 * k2) * p2;
              c[o2 + (b2 * 44 | 0) + 32 >> 2] = 0;
              g[h2 + 72 >> 2] = i2 * m2 - n2 * f2 + +g[h2 + 72 >> 2];
              g[h2 + 76 >> 2] = n2 * k2 - e2 * m2 + +g[h2 + 76 >> 2];
              g[h2 + 80 >> 2] = e2 * f2 - i2 * k2 + +g[h2 + 80 >> 2];
              g[j2 + 72 >> 2] = i2 * m2 - n2 * f2 + +g[j2 + 72 >> 2];
              g[j2 + 76 >> 2] = n2 * k2 - e2 * m2 + +g[j2 + 76 >> 2];
              g[j2 + 80 >> 2] = e2 * f2 - i2 * k2 + +g[j2 + 80 >> 2];
              g[l2 + 72 >> 2] = i2 * m2 - n2 * f2 + +g[l2 + 72 >> 2];
              g[l2 + 76 >> 2] = n2 * k2 - e2 * m2 + +g[l2 + 76 >> 2];
              g[l2 + 80 >> 2] = e2 * f2 - i2 * k2 + +g[l2 + 80 >> 2];
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) != (d2 | 0));
          }
          l2 = c[a2 + 752 >> 2] | 0;
          if ((l2 | 0) <= 0)
            return;
          a2 = c[a2 + 760 >> 2] | 0;
          b2 = 0;
          do {
            h2 = a2 + (b2 * 104 | 0) + 72 | 0;
            i2 = +g[h2 >> 2];
            j2 = a2 + (b2 * 104 | 0) + 76 | 0;
            k2 = +g[j2 >> 2];
            d2 = a2 + (b2 * 104 | 0) + 80 | 0;
            e2 = +g[d2 >> 2];
            f2 = +G(+(i2 * i2 + k2 * k2 + e2 * e2));
            if (f2 > 11920928955078125e-23) {
              g[h2 >> 2] = i2 * (1 / f2);
              g[j2 >> 2] = 1 / f2 * k2;
              g[d2 >> 2] = 1 / f2 * e2;
            }
            b2 = b2 + 1 | 0;
          } while ((b2 | 0) != (l2 | 0));
          return;
        }
        function sg(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(219) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 >> 2] = 2948;
          e2 = d2 + 4 | 0;
          c[e2 >> 2] = c[a2 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 12 >> 2];
          e2 = d2 + 20 | 0;
          c[e2 >> 2] = c[a2 + 16 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 16 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 16 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 16 + 12 >> 2];
          e2 = d2 + 36 | 0;
          c[e2 >> 2] = c[a2 + 32 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 32 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 32 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 32 + 12 >> 2];
          e2 = d2 + 52 | 0;
          c[e2 >> 2] = c[a2 + 48 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 48 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 48 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 48 + 12 >> 2];
          e2 = d2 + 68 | 0;
          c[e2 >> 2] = c[b2 >> 2];
          c[e2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[b2 + 12 >> 2];
          e2 = d2 + 84 | 0;
          c[e2 >> 2] = c[b2 + 16 >> 2];
          c[e2 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
          c[e2 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
          c[e2 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
          e2 = d2 + 100 | 0;
          c[e2 >> 2] = c[b2 + 32 >> 2];
          c[e2 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
          c[e2 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
          c[e2 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
          e2 = d2 + 116 | 0;
          c[e2 >> 2] = c[b2 + 48 >> 2];
          c[e2 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
          c[e2 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
          c[e2 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
          b2 = d2 + 132 | 0;
          c[b2 >> 2] = c[a2 >> 2];
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 8 >> 2] = c[a2 + 8 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 12 >> 2];
          b2 = d2 + 148 | 0;
          c[b2 >> 2] = c[a2 + 16 >> 2];
          c[b2 + 4 >> 2] = c[a2 + 16 + 4 >> 2];
          c[b2 + 8 >> 2] = c[a2 + 16 + 8 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 16 + 12 >> 2];
          b2 = d2 + 164 | 0;
          c[b2 >> 2] = c[a2 + 32 >> 2];
          c[b2 + 4 >> 2] = c[a2 + 32 + 4 >> 2];
          c[b2 + 8 >> 2] = c[a2 + 32 + 8 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 32 + 12 >> 2];
          b2 = d2 + 180 | 0;
          c[b2 >> 2] = c[a2 + 48 >> 2];
          c[b2 + 4 >> 2] = c[a2 + 48 + 4 >> 2];
          c[b2 + 8 >> 2] = c[a2 + 48 + 8 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 48 + 12 >> 2];
          c[d2 + 196 >> 2] = 0;
          return d2 | 0;
        }
        function tg(d2, e2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          if (!(a[d2 + 164 >> 0] | 0)) {
            f2 = c[d2 + 148 >> 2] | 0;
            if ((f2 | 0) == (c[d2 + 152 >> 2] | 0) ? (k2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (k2 | 0)) : 0) {
              if (!k2)
                i2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic((k2 << 1) + 19 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                i2 = f2;
                f2 = c[d2 + 148 >> 2] | 0;
              }
              h2 = c[d2 + 156 >> 2] | 0;
              if ((f2 | 0) <= 0)
                if (!h2)
                  f2 = d2 + 160 | 0;
                else
                  g2 = 27;
              else {
                g2 = 0;
                do {
                  b[i2 + (g2 << 1) >> 1] = b[h2 + (g2 << 1) >> 1] | 0;
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
                g2 = 27;
              }
              if ((g2 | 0) == 27) {
                if (a[d2 + 160 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[h2 + -4 >> 2] | 0);
                }
                c[d2 + 156 >> 2] = 0;
                f2 = d2 + 160 | 0;
              }
              a[f2 >> 0] = 1;
              c[d2 + 156 >> 2] = i2;
              c[d2 + 152 >> 2] = k2;
              f2 = c[d2 + 148 >> 2] | 0;
            }
            k2 = c[d2 + 156 >> 2] | 0;
            b[k2 + (f2 << 1) >> 1] = e2;
            c[d2 + 148 >> 2] = f2 + 1;
            c[(c[d2 + 32 >> 2] | 0) + 4 >> 2] = k2;
            return;
          } else {
            f2 = c[d2 + 128 >> 2] | 0;
            if ((f2 | 0) == (c[d2 + 132 >> 2] | 0) ? (j2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (j2 | 0)) : 0) {
              if (!j2)
                i2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                i2 = f2;
                f2 = c[d2 + 128 >> 2] | 0;
              }
              h2 = c[d2 + 136 >> 2] | 0;
              if ((f2 | 0) <= 0)
                if (!h2)
                  f2 = d2 + 140 | 0;
                else
                  g2 = 12;
              else {
                g2 = 0;
                do {
                  c[i2 + (g2 << 2) >> 2] = c[h2 + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (f2 | 0));
                g2 = 12;
              }
              if ((g2 | 0) == 12) {
                if (a[d2 + 140 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[h2 + -4 >> 2] | 0);
                }
                c[d2 + 136 >> 2] = 0;
                f2 = d2 + 140 | 0;
              }
              a[f2 >> 0] = 1;
              c[d2 + 136 >> 2] = i2;
              c[d2 + 132 >> 2] = j2;
              f2 = c[d2 + 128 >> 2] | 0;
            }
            k2 = c[d2 + 136 >> 2] | 0;
            c[k2 + (f2 << 2) >> 2] = e2;
            c[d2 + 128 >> 2] = (c[d2 + 128 >> 2] | 0) + 1;
            c[(c[d2 + 32 >> 2] | 0) + 4 >> 2] = k2;
            return;
          }
        }
        function ug(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          e2 = +g[d2 + 128 >> 2];
          if (!(e2 != 0))
            return;
          c[5707] = (c[5707] | 0) + 1;
          k2 = +g[d2 + 96 >> 2];
          f2 = +g[d2 + 16 >> 2];
          h2 = +g[d2 + 20 >> 2];
          i2 = +g[d2 + 24 >> 2];
          j2 = +g[d2 + 108 >> 2];
          j2 = e2 - k2 * +g[d2 + 116 >> 2] - (f2 * +g[a2 + 144 >> 2] + h2 * +g[a2 + 148 >> 2] + i2 * +g[a2 + 152 >> 2] + (+g[d2 >> 2] * +g[a2 + 160 >> 2] + +g[d2 + 4 >> 2] * +g[a2 + 164 >> 2] + +g[d2 + 8 >> 2] * +g[a2 + 168 >> 2])) * j2 - j2 * (+g[d2 + 48 >> 2] * +g[b2 + 144 >> 2] + +g[d2 + 52 >> 2] * +g[b2 + 148 >> 2] + +g[d2 + 56 >> 2] * +g[b2 + 152 >> 2] + (+g[d2 + 32 >> 2] * +g[b2 + 160 >> 2] + +g[d2 + 36 >> 2] * +g[b2 + 164 >> 2] + +g[d2 + 40 >> 2] * +g[b2 + 168 >> 2]));
          l2 = +g[d2 + 120 >> 2];
          e2 = k2 + j2 < l2 ? l2 - k2 : j2;
          g[d2 + 96 >> 2] = k2 + j2 < l2 ? l2 : k2 + j2;
          if (c[a2 + 240 >> 2] | 0) {
            l2 = e2 * h2 * +g[a2 + 132 >> 2] * +g[a2 + 116 >> 2];
            k2 = e2 * i2 * +g[a2 + 136 >> 2] * +g[a2 + 120 >> 2];
            g[a2 + 144 >> 2] = +g[a2 + 112 >> 2] * e2 * f2 * +g[a2 + 128 >> 2] + +g[a2 + 144 >> 2];
            g[a2 + 148 >> 2] = l2 + +g[a2 + 148 >> 2];
            g[a2 + 152 >> 2] = k2 + +g[a2 + 152 >> 2];
            k2 = e2 * +g[a2 + 100 >> 2] * +g[d2 + 68 >> 2];
            l2 = e2 * +g[a2 + 104 >> 2] * +g[d2 + 72 >> 2];
            g[a2 + 160 >> 2] = e2 * +g[a2 + 96 >> 2] * +g[d2 + 64 >> 2] + +g[a2 + 160 >> 2];
            g[a2 + 164 >> 2] = k2 + +g[a2 + 164 >> 2];
            g[a2 + 168 >> 2] = l2 + +g[a2 + 168 >> 2];
          }
          if (!(c[b2 + 240 >> 2] | 0))
            return;
          l2 = e2 * +g[d2 + 52 >> 2] * +g[b2 + 132 >> 2] * +g[b2 + 116 >> 2];
          k2 = e2 * +g[d2 + 56 >> 2] * +g[b2 + 136 >> 2] * +g[b2 + 120 >> 2];
          g[b2 + 144 >> 2] = +g[b2 + 112 >> 2] * e2 * +g[d2 + 48 >> 2] * +g[b2 + 128 >> 2] + +g[b2 + 144 >> 2];
          g[b2 + 148 >> 2] = l2 + +g[b2 + 148 >> 2];
          g[b2 + 152 >> 2] = k2 + +g[b2 + 152 >> 2];
          k2 = e2 * +g[b2 + 100 >> 2] * +g[d2 + 84 >> 2];
          l2 = e2 * +g[b2 + 104 >> 2] * +g[d2 + 88 >> 2];
          g[b2 + 160 >> 2] = e2 * +g[b2 + 96 >> 2] * +g[d2 + 80 >> 2] + +g[b2 + 160 >> 2];
          g[b2 + 164 >> 2] = k2 + +g[b2 + 164 >> 2];
          g[b2 + 168 >> 2] = l2 + +g[b2 + 168 >> 2];
          return;
        }
        function vg(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          t2 = i;
          i = i + 32 | 0;
          s2 = c[a2 + 12 >> 2] | 0;
          if (!s2) {
            i = t2;
            return;
          }
          c[f2 + 4 >> 2] = s2;
          a2 = c[b2 + 4 >> 2] | 0;
          e2 = c[d2 + 4 >> 2] | 0;
          b2 = c[b2 + 12 >> 2] | 0;
          d2 = c[d2 + 12 >> 2] | 0;
          m2 = +g[d2 + 48 >> 2];
          h2 = +g[b2 + 48 >> 2] - m2;
          n2 = +g[d2 + 52 >> 2];
          j2 = +g[b2 + 52 >> 2] - n2;
          o2 = +g[d2 + 56 >> 2];
          l2 = +g[b2 + 56 >> 2] - o2;
          p2 = +G(+(h2 * h2 + j2 * j2 + l2 * l2));
          q2 = +g[e2 + 32 >> 2] * +g[e2 + 16 >> 2];
          r2 = +g[a2 + 32 >> 2] * +g[a2 + 16 >> 2] + q2;
          if (p2 > r2) {
            if (!(c[s2 + 780 >> 2] | 0)) {
              i = t2;
              return;
            }
            a2 = c[s2 + 772 >> 2] | 0;
            b2 = c[(c[f2 + 8 >> 2] | 0) + 8 >> 2] | 0;
            e2 = c[(c[f2 + 12 >> 2] | 0) + 8 >> 2] | 0;
            if ((a2 | 0) == (b2 | 0)) {
              Te(s2, a2 + 4 | 0, e2 + 4 | 0);
              i = t2;
              return;
            } else {
              Te(s2, e2 + 4 | 0, b2 + 4 | 0);
              i = t2;
              return;
            }
          }
          c[t2 + 16 >> 2] = 1065353216;
          c[t2 + 16 + 4 >> 2] = 0;
          c[t2 + 16 + 8 >> 2] = 0;
          g[t2 + 16 + 12 >> 2] = 0;
          if (p2 > 11920928955078125e-23) {
            g[t2 + 16 >> 2] = h2 * (1 / p2);
            g[t2 + 16 + 4 >> 2] = j2 * (1 / p2);
            g[t2 + 16 + 8 >> 2] = l2 * (1 / p2);
            g[t2 + 16 + 12 >> 2] = 0;
            k2 = h2 * (1 / p2);
            j2 = j2 * (1 / p2);
            h2 = l2 * (1 / p2);
          } else {
            k2 = 1;
            j2 = 0;
            h2 = 0;
          }
          g[t2 >> 2] = q2 * k2 + m2;
          g[t2 + 4 >> 2] = q2 * j2 + n2;
          g[t2 + 8 >> 2] = q2 * h2 + o2;
          g[t2 + 12 >> 2] = 0;
          Tb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 15](f2, t2 + 16 | 0, t2, p2 - r2);
          b2 = c[f2 + 4 >> 2] | 0;
          do
            if (c[b2 + 780 >> 2] | 0) {
              d2 = c[b2 + 772 >> 2] | 0;
              a2 = c[(c[f2 + 8 >> 2] | 0) + 8 >> 2] | 0;
              e2 = c[(c[f2 + 12 >> 2] | 0) + 8 >> 2] | 0;
              if ((d2 | 0) == (a2 | 0)) {
                Te(b2, d2 + 4 | 0, e2 + 4 | 0);
                break;
              } else {
                Te(b2, e2 + 4 | 0, a2 + 4 | 0);
                break;
              }
            }
          while (0);
          i = t2;
          return;
        }
        function wg(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          g2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 >> 2] = g2;
          if (g2 | 0)
            mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          g2 = c[a2 + 52 >> 2] | 0;
          yb[c[(c[g2 >> 2] | 0) + 56 >> 2] & 63](g2, b2 + 12 | 0, d2) | 0;
          c[b2 + 52 >> 2] = c[a2 + 16 >> 2];
          do
            if ((c[a2 + 56 >> 2] | 0) != 0 ? ((ob[c[(c[d2 >> 2] | 0) + 52 >> 2] & 127](d2) | 0) & 1 | 0) == 0 : 0) {
              e2 = Jb[c[(c[d2 >> 2] | 0) + 24 >> 2] & 31](d2, c[a2 + 56 >> 2] | 0) | 0;
              if (!e2) {
                c[b2 + 40 >> 2] = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[a2 + 56 >> 2] | 0) | 0;
                c[b2 + 44 >> 2] = 0;
                e2 = c[a2 + 56 >> 2] | 0;
                e2 = ob[c[(c[e2 >> 2] | 0) + 12 >> 2] & 127](e2) | 0;
                e2 = yb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, e2, 1) | 0;
                g2 = c[a2 + 56 >> 2] | 0;
                g2 = yb[c[(c[g2 >> 2] | 0) + 16 >> 2] & 63](g2, c[e2 + 8 >> 2] | 0, d2) | 0;
                ib[c[(c[d2 >> 2] | 0) + 20 >> 2] & 31](d2, e2, g2, 1213612625, c[a2 + 56 >> 2] | 0);
                break;
              } else {
                c[b2 + 40 >> 2] = e2;
                c[b2 + 44 >> 2] = 0;
                break;
              }
            } else
              f2 = 8;
          while (0);
          if ((f2 | 0) == 8) {
            c[b2 + 40 >> 2] = 0;
            c[b2 + 44 >> 2] = 0;
          }
          if (c[a2 + 60 >> 2] | 0 ? ((ob[c[(c[d2 >> 2] | 0) + 52 >> 2] & 127](d2) | 0) & 2 | 0) == 0 : 0) {
            e2 = Jb[c[(c[d2 >> 2] | 0) + 24 >> 2] & 31](d2, c[a2 + 60 >> 2] | 0) | 0;
            if (!e2) {
              c[b2 + 48 >> 2] = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[a2 + 60 >> 2] | 0) | 0;
              b2 = c[a2 + 60 >> 2] | 0;
              b2 = ob[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2) | 0;
              b2 = yb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, b2, 1) | 0;
              g2 = c[a2 + 60 >> 2] | 0;
              g2 = yb[c[(c[g2 >> 2] | 0) + 12 >> 2] & 63](g2, c[b2 + 8 >> 2] | 0, d2) | 0;
              ib[c[(c[d2 >> 2] | 0) + 20 >> 2] & 31](d2, b2, g2, 1346456916, c[a2 + 60 >> 2] | 0);
              return 15811;
            } else {
              c[b2 + 48 >> 2] = e2;
              return 15811;
            }
          }
          c[b2 + 48 >> 2] = 0;
          return 15811;
        }
        function xg(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          c[6319] = (c[6319] | 0) + 1;
          k2 = ((e2 << 16 | d2) + ~((e2 << 16 | d2) << 15) >> 10 ^ (e2 << 16 | d2) + ~((e2 << 16 | d2) << 15)) * 9 | 0;
          k2 = (k2 >> 6 ^ k2) + ~((k2 >> 6 ^ k2) << 11) >> 16 ^ (k2 >> 6 ^ k2) + ~((k2 >> 6 ^ k2) << 11);
          l2 = c[b2 + 12 >> 2] | 0;
          f2 = c[(c[b2 + 36 >> 2] | 0) + ((l2 + -1 & k2) << 2) >> 2] | 0;
          a:
            do
              if ((f2 | 0) != -1) {
                h2 = c[b2 + 16 >> 2] | 0;
                while (1) {
                  g2 = h2 + (f2 * 12 | 0) | 0;
                  if ((c[g2 >> 2] | 0) == (d2 | 0) ? (c[h2 + (f2 * 12 | 0) + 4 >> 2] | 0) == (e2 | 0) : 0)
                    break;
                  f2 = c[(c[b2 + 56 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                  if ((f2 | 0) == -1)
                    break a;
                }
                if (g2 | 0) {
                  e2 = g2;
                  return e2 | 0;
                }
              }
            while (0);
          j2 = c[b2 + 8 >> 2] | 0;
          if ((j2 | 0) == (l2 | 0)) {
            h2 = l2 | 0 ? l2 << 1 : 1;
            if ((l2 | 0) < (h2 | 0)) {
              if (!h2) {
                f2 = 0;
                i2 = l2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic((h2 * 12 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                i2 = c[b2 + 8 >> 2] | 0;
              }
              if ((i2 | 0) > 0) {
                g2 = 0;
                do {
                  m2 = f2 + (g2 * 12 | 0) | 0;
                  n2 = (c[b2 + 16 >> 2] | 0) + (g2 * 12 | 0) | 0;
                  c[m2 >> 2] = c[n2 >> 2];
                  c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                  c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (i2 | 0));
              }
              g2 = c[b2 + 16 >> 2] | 0;
              if (g2 | 0) {
                if (a[b2 + 20 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[g2 + -4 >> 2] | 0);
                }
                c[b2 + 16 >> 2] = 0;
              }
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = f2;
              c[b2 + 12 >> 2] = h2;
              f2 = c[b2 + 8 >> 2] | 0;
            } else {
              f2 = l2;
              h2 = l2;
            }
          } else {
            f2 = j2;
            h2 = l2;
          }
          c[b2 + 8 >> 2] = f2 + 1;
          g2 = c[b2 + 16 >> 2] | 0;
          if ((l2 | 0) < (h2 | 0)) {
            xf(b2);
            f2 = (c[b2 + 12 >> 2] | 0) + -1 & k2;
          } else
            f2 = l2 + -1 & k2;
          c[g2 + (j2 * 12 | 0) >> 2] = d2;
          c[g2 + (j2 * 12 | 0) + 4 >> 2] = e2;
          c[g2 + (j2 * 12 | 0) + 8 >> 2] = 0;
          n2 = (c[b2 + 36 >> 2] | 0) + (f2 << 2) | 0;
          c[(c[b2 + 56 >> 2] | 0) + (j2 << 2) >> 2] = c[n2 >> 2];
          c[n2 >> 2] = j2;
          n2 = g2 + (j2 * 12 | 0) | 0;
          return n2 | 0;
        }
        function yg(b2, d2, e2, f2, h2, i2, j2, k2, l2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          h2 = +h2;
          i2 = +i2;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          m2 = ic(147) | 0;
          if (!m2)
            m2 = 0;
          else {
            c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
            m2 = m2 + 4 + 15 & -16;
          }
          c[m2 + 8 >> 2] = 0;
          c[m2 + 12 >> 2] = -1;
          g[m2 + 16 >> 2] = 0;
          c[m2 >> 2] = 8076;
          c[m2 + 4 >> 2] = 24;
          c[m2 + 68 >> 2] = b2;
          c[m2 + 72 >> 2] = d2;
          g[m2 + 76 >> 2] = h2;
          g[m2 + 80 >> 2] = i2;
          g[m2 + 84 >> 2] = +(b2 + -1 | 0);
          g[m2 + 88 >> 2] = +(d2 + -1 | 0);
          g[m2 + 92 >> 2] = f2;
          c[m2 + 96 >> 2] = e2;
          c[m2 + 100 >> 2] = k2;
          a[m2 + 104 >> 0] = l2 & 1;
          a[m2 + 105 >> 0] = 0;
          a[m2 + 106 >> 0] = 0;
          c[m2 + 108 >> 2] = j2;
          c[m2 + 112 >> 2] = 1065353216;
          c[m2 + 116 >> 2] = 1065353216;
          c[m2 + 120 >> 2] = 1065353216;
          g[m2 + 124 >> 2] = 0;
          switch (j2 | 0) {
            case 0: {
              g[m2 + 20 >> 2] = h2;
              c[m2 + 24 >> 2] = 0;
              c[m2 + 28 >> 2] = 0;
              g[m2 + 32 >> 2] = 0;
              g[m2 + 36 >> 2] = i2;
              g[m2 + 40 >> 2] = +(b2 + -1 | 0);
              g[m2 + 44 >> 2] = +(d2 + -1 | 0);
              g[m2 + 48 >> 2] = 0;
              o2 = i2;
              p2 = h2;
              f2 = +(b2 + -1 | 0);
              n2 = 0;
              i2 = +(d2 + -1 | 0);
              h2 = 0;
              break;
            }
            case 1: {
              c[m2 + 20 >> 2] = 0;
              g[m2 + 24 >> 2] = h2;
              c[m2 + 28 >> 2] = 0;
              g[m2 + 32 >> 2] = 0;
              g[m2 + 36 >> 2] = +(b2 + -1 | 0);
              g[m2 + 40 >> 2] = i2;
              g[m2 + 44 >> 2] = +(d2 + -1 | 0);
              g[m2 + 48 >> 2] = 0;
              o2 = +(b2 + -1 | 0);
              p2 = 0;
              f2 = i2;
              n2 = h2;
              i2 = +(d2 + -1 | 0);
              h2 = 0;
              break;
            }
            case 2: {
              c[m2 + 20 >> 2] = 0;
              c[m2 + 24 >> 2] = 0;
              g[m2 + 28 >> 2] = h2;
              g[m2 + 32 >> 2] = 0;
              g[m2 + 36 >> 2] = +(b2 + -1 | 0);
              g[m2 + 40 >> 2] = +(d2 + -1 | 0);
              g[m2 + 44 >> 2] = i2;
              g[m2 + 48 >> 2] = 0;
              o2 = +(b2 + -1 | 0);
              p2 = 0;
              f2 = +(d2 + -1 | 0);
              n2 = 0;
              break;
            }
            default: {
              o2 = +g[m2 + 36 >> 2];
              p2 = +g[m2 + 20 >> 2];
              f2 = +g[m2 + 40 >> 2];
              n2 = +g[m2 + 24 >> 2];
              i2 = +g[m2 + 44 >> 2];
              h2 = +g[m2 + 28 >> 2];
            }
          }
          g[m2 + 52 >> 2] = (p2 + o2) * 0.5;
          g[m2 + 56 >> 2] = (n2 + f2) * 0.5;
          g[m2 + 60 >> 2] = (h2 + i2) * 0.5;
          g[m2 + 64 >> 2] = 0;
          return m2 | 0;
        }
        function zg(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(219) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          Fl();
          c[b2 >> 2] = 2948;
          d2 = b2 + 52 | 0;
          e2 = b2 + 4 | 0;
          c[e2 >> 2] = c[a2 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 12 >> 2];
          e2 = b2 + 20 | 0;
          c[e2 >> 2] = c[a2 + 16 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 16 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 16 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 16 + 12 >> 2];
          e2 = b2 + 36 | 0;
          c[e2 >> 2] = c[a2 + 32 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 32 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 32 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 32 + 12 >> 2];
          c[d2 >> 2] = c[a2 + 48 >> 2];
          c[d2 + 4 >> 2] = c[a2 + 48 + 4 >> 2];
          c[d2 + 8 >> 2] = c[a2 + 48 + 8 >> 2];
          c[d2 + 12 >> 2] = c[a2 + 48 + 12 >> 2];
          d2 = b2 + 116 | 0;
          e2 = b2 + 68 | 0;
          c[e2 >> 2] = c[5561];
          c[e2 + 4 >> 2] = c[5562];
          c[e2 + 8 >> 2] = c[5563];
          c[e2 + 12 >> 2] = c[5564];
          e2 = b2 + 84 | 0;
          c[e2 >> 2] = c[5565];
          c[e2 + 4 >> 2] = c[5566];
          c[e2 + 8 >> 2] = c[5567];
          c[e2 + 12 >> 2] = c[5568];
          e2 = b2 + 100 | 0;
          c[e2 >> 2] = c[5569];
          c[e2 + 4 >> 2] = c[5570];
          c[e2 + 8 >> 2] = c[5571];
          c[e2 + 12 >> 2] = c[5572];
          c[d2 >> 2] = c[5573];
          c[d2 + 4 >> 2] = c[5574];
          c[d2 + 8 >> 2] = c[5575];
          c[d2 + 12 >> 2] = c[5576];
          d2 = b2 + 180 | 0;
          e2 = b2 + 132 | 0;
          c[e2 >> 2] = c[a2 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 12 >> 2];
          e2 = b2 + 148 | 0;
          c[e2 >> 2] = c[a2 + 16 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 16 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 16 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 16 + 12 >> 2];
          e2 = b2 + 164 | 0;
          c[e2 >> 2] = c[a2 + 32 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 32 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 32 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 32 + 12 >> 2];
          c[d2 >> 2] = c[a2 + 48 >> 2];
          c[d2 + 4 >> 2] = c[a2 + 48 + 4 >> 2];
          c[d2 + 8 >> 2] = c[a2 + 48 + 8 >> 2];
          c[d2 + 12 >> 2] = c[a2 + 48 + 12 >> 2];
          c[b2 + 196 >> 2] = 0;
          return b2 | 0;
        }
        function Ag(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          k2 = +g[d2 + 100 >> 2];
          f2 = +g[d2 + 16 >> 2];
          h2 = +g[d2 + 20 >> 2];
          i2 = +g[d2 + 24 >> 2];
          j2 = +g[d2 + 108 >> 2];
          j2 = +g[d2 + 112 >> 2] - k2 * +g[d2 + 116 >> 2] - (f2 * +g[a2 + 64 >> 2] + h2 * +g[a2 + 68 >> 2] + i2 * +g[a2 + 72 >> 2] + (+g[d2 >> 2] * +g[a2 + 80 >> 2] + +g[d2 + 4 >> 2] * +g[a2 + 84 >> 2] + +g[d2 + 8 >> 2] * +g[a2 + 88 >> 2])) * j2 - j2 * (+g[d2 + 48 >> 2] * +g[b2 + 64 >> 2] + +g[d2 + 52 >> 2] * +g[b2 + 68 >> 2] + +g[d2 + 56 >> 2] * +g[b2 + 72 >> 2] + (+g[d2 + 32 >> 2] * +g[b2 + 80 >> 2] + +g[d2 + 36 >> 2] * +g[b2 + 84 >> 2] + +g[d2 + 40 >> 2] * +g[b2 + 88 >> 2]));
          l2 = +g[d2 + 120 >> 2];
          e2 = k2 + j2 < l2 ? l2 - k2 : j2;
          g[d2 + 100 >> 2] = k2 + j2 < l2 ? l2 : k2 + j2;
          if (c[a2 + 240 >> 2] | 0) {
            l2 = e2 * h2 * +g[a2 + 132 >> 2] * +g[a2 + 116 >> 2];
            k2 = e2 * i2 * +g[a2 + 136 >> 2] * +g[a2 + 120 >> 2];
            g[a2 + 64 >> 2] = +g[a2 + 112 >> 2] * e2 * f2 * +g[a2 + 128 >> 2] + +g[a2 + 64 >> 2];
            g[a2 + 68 >> 2] = l2 + +g[a2 + 68 >> 2];
            g[a2 + 72 >> 2] = k2 + +g[a2 + 72 >> 2];
            k2 = e2 * +g[a2 + 100 >> 2] * +g[d2 + 68 >> 2];
            l2 = e2 * +g[a2 + 104 >> 2] * +g[d2 + 72 >> 2];
            g[a2 + 80 >> 2] = e2 * +g[a2 + 96 >> 2] * +g[d2 + 64 >> 2] + +g[a2 + 80 >> 2];
            g[a2 + 84 >> 2] = k2 + +g[a2 + 84 >> 2];
            g[a2 + 88 >> 2] = l2 + +g[a2 + 88 >> 2];
          }
          if (!(c[b2 + 240 >> 2] | 0))
            return +e2;
          l2 = e2 * +g[d2 + 52 >> 2] * +g[b2 + 132 >> 2] * +g[b2 + 116 >> 2];
          k2 = e2 * +g[d2 + 56 >> 2] * +g[b2 + 136 >> 2] * +g[b2 + 120 >> 2];
          g[b2 + 64 >> 2] = +g[b2 + 112 >> 2] * e2 * +g[d2 + 48 >> 2] * +g[b2 + 128 >> 2] + +g[b2 + 64 >> 2];
          g[b2 + 68 >> 2] = l2 + +g[b2 + 68 >> 2];
          g[b2 + 72 >> 2] = k2 + +g[b2 + 72 >> 2];
          k2 = e2 * +g[b2 + 100 >> 2] * +g[d2 + 84 >> 2];
          l2 = e2 * +g[b2 + 104 >> 2] * +g[d2 + 88 >> 2];
          g[b2 + 80 >> 2] = e2 * +g[b2 + 96 >> 2] * +g[d2 + 80 >> 2] + +g[b2 + 80 >> 2];
          g[b2 + 84 >> 2] = k2 + +g[b2 + 84 >> 2];
          g[b2 + 88 >> 2] = l2 + +g[b2 + 88 >> 2];
          return +e2;
        }
        function Bg(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0;
          J2 = +g[a2 + 4 >> 2];
          I2 = +g[a2 + 20 >> 2];
          H2 = +g[a2 + 36 >> 2];
          F2 = +g[a2 + 8 >> 2];
          E2 = +g[a2 + 24 >> 2];
          D2 = +g[a2 + 40 >> 2];
          B2 = +g[a2 + 12 >> 2];
          z2 = +g[a2 + 28 >> 2];
          x2 = +g[a2 + 44 >> 2];
          u2 = +g[b2 + 4 >> 2];
          t2 = +g[b2 + 20 >> 2];
          s2 = +g[b2 + 36 >> 2];
          q2 = +g[b2 + 8 >> 2];
          p2 = +g[b2 + 24 >> 2];
          o2 = +g[b2 + 40 >> 2];
          m2 = +g[b2 + 12 >> 2];
          k2 = +g[b2 + 28 >> 2];
          i2 = +g[b2 + 44 >> 2];
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          A2 = +g[e2 >> 2];
          y2 = +g[e2 + 4 >> 2];
          w2 = +g[e2 + 8 >> 2];
          g[d2 + 16 >> 2] = J2 * A2 + I2 * y2 + H2 * w2;
          g[d2 + 20 >> 2] = F2 * A2 + E2 * y2 + D2 * w2;
          g[d2 + 24 >> 2] = B2 * A2 + z2 * y2 + x2 * w2;
          g[d2 + 28 >> 2] = 0;
          l2 = -+g[e2 >> 2];
          j2 = -+g[e2 + 4 >> 2];
          h2 = -+g[e2 + 8 >> 2];
          g[d2 + 32 >> 2] = u2 * l2 + t2 * j2 + s2 * h2;
          g[d2 + 36 >> 2] = q2 * l2 + p2 * j2 + o2 * h2;
          g[d2 + 40 >> 2] = m2 * l2 + k2 * j2 + i2 * h2;
          g[d2 + 44 >> 2] = 0;
          G2 = (J2 * A2 + I2 * y2 + H2 * w2) * +g[a2 + 436 >> 2];
          C2 = (F2 * A2 + E2 * y2 + D2 * w2) * +g[a2 + 440 >> 2];
          v2 = (B2 * A2 + z2 * y2 + x2 * w2) * +g[a2 + 444 >> 2];
          g[d2 + 48 >> 2] = G2;
          g[d2 + 52 >> 2] = C2;
          g[d2 + 56 >> 2] = v2;
          g[d2 + 60 >> 2] = 0;
          r2 = (u2 * l2 + t2 * j2 + s2 * h2) * +g[b2 + 436 >> 2];
          n2 = (q2 * l2 + p2 * j2 + o2 * h2) * +g[b2 + 440 >> 2];
          f2 = (m2 * l2 + k2 * j2 + i2 * h2) * +g[b2 + 444 >> 2];
          g[d2 + 64 >> 2] = r2;
          g[d2 + 68 >> 2] = n2;
          g[d2 + 72 >> 2] = f2;
          g[d2 + 76 >> 2] = 0;
          g[d2 + 80 >> 2] = (J2 * A2 + I2 * y2 + H2 * w2) * G2 + (F2 * A2 + E2 * y2 + D2 * w2) * C2 + (B2 * A2 + z2 * y2 + x2 * w2) * v2 + ((u2 * l2 + t2 * j2 + s2 * h2) * r2 + (q2 * l2 + p2 * j2 + o2 * h2) * n2 + (m2 * l2 + k2 * j2 + i2 * h2) * f2);
          return;
        }
        function Cg(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          l2 = i;
          i = i + 96 | 0;
          g2 = c[b2 + 8 >> 2] | 0;
          if ((g2 | 0) == (c[b2 + 12 >> 2] | 0) ? (k2 = g2 | 0 ? g2 << 1 : 1, (g2 | 0) < (k2 | 0)) : 0) {
            if (!k2)
              j2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              g2 = ic((k2 << 2 | 3) + 16 | 0) | 0;
              if (!g2)
                g2 = 0;
              else {
                c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
                g2 = g2 + 4 + 15 & -16;
              }
              j2 = g2;
              g2 = c[b2 + 8 >> 2] | 0;
            }
            if ((g2 | 0) > 0) {
              h2 = 0;
              do {
                c[j2 + (h2 << 2) >> 2] = c[(c[b2 + 16 >> 2] | 0) + (h2 << 2) >> 2];
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (g2 | 0));
            }
            h2 = c[b2 + 16 >> 2] | 0;
            if (h2) {
              if (a[b2 + 20 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[h2 + -4 >> 2] | 0);
                g2 = c[b2 + 8 >> 2] | 0;
              }
              c[b2 + 16 >> 2] = 0;
            }
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = j2;
            c[b2 + 12 >> 2] = k2;
          }
          c[(c[b2 + 16 >> 2] | 0) + (g2 << 2) >> 2] = d2;
          c[b2 + 8 >> 2] = g2 + 1;
          c[l2 + 32 >> 2] = c[d2 + 4 >> 2];
          c[l2 + 32 + 4 >> 2] = c[d2 + 4 + 4 >> 2];
          c[l2 + 32 + 8 >> 2] = c[d2 + 4 + 8 >> 2];
          c[l2 + 32 + 12 >> 2] = c[d2 + 4 + 12 >> 2];
          c[l2 + 32 + 16 >> 2] = c[d2 + 20 >> 2];
          c[l2 + 32 + 16 + 4 >> 2] = c[d2 + 20 + 4 >> 2];
          c[l2 + 32 + 16 + 8 >> 2] = c[d2 + 20 + 8 >> 2];
          c[l2 + 32 + 16 + 12 >> 2] = c[d2 + 20 + 12 >> 2];
          c[l2 + 32 + 32 >> 2] = c[d2 + 36 >> 2];
          c[l2 + 32 + 32 + 4 >> 2] = c[d2 + 36 + 4 >> 2];
          c[l2 + 32 + 32 + 8 >> 2] = c[d2 + 36 + 8 >> 2];
          c[l2 + 32 + 32 + 12 >> 2] = c[d2 + 36 + 12 >> 2];
          c[l2 + 32 + 48 >> 2] = c[d2 + 52 >> 2];
          c[l2 + 32 + 48 + 4 >> 2] = c[d2 + 52 + 4 >> 2];
          c[l2 + 32 + 48 + 8 >> 2] = c[d2 + 52 + 8 >> 2];
          c[l2 + 32 + 48 + 12 >> 2] = c[d2 + 52 + 12 >> 2];
          k2 = c[d2 + 192 >> 2] | 0;
          Yb[c[(c[k2 >> 2] | 0) + 8 >> 2] & 127](k2, l2 + 32 | 0, l2 + 16 | 0, l2);
          k2 = c[b2 + 68 >> 2] | 0;
          c[d2 + 188 >> 2] = Sb[c[(c[k2 >> 2] | 0) + 8 >> 2] & 3](k2, l2 + 16 | 0, l2, c[(c[d2 + 192 >> 2] | 0) + 4 >> 2] | 0, d2, e2, f2, c[b2 + 24 >> 2] | 0, 0) | 0;
          i = l2;
          return;
        }
        function Dg(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          c[b2 >> 2] = 4680;
          if (a[b2 + 272 >> 0] | 0 ? (d2 = c[b2 + 204 >> 2] | 0, kb[c[c[d2 >> 2] >> 2] & 255](d2), d2 = c[b2 + 204 >> 2] | 0, d2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 196 >> 2] | 0;
          if (d2 | 0 ? (kb[c[c[d2 >> 2] >> 2] & 255](d2), e2 = c[b2 + 196 >> 2] | 0, e2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[e2 + -4 >> 2] | 0);
          }
          if (a[b2 + 273 >> 0] | 0 ? (f2 = c[b2 + 200 >> 2] | 0, kb[c[c[f2 >> 2] >> 2] & 255](f2), f2 = c[b2 + 200 >> 2] | 0, f2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[f2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 316 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 320 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 316 >> 2] = 0;
          }
          a[b2 + 320 >> 0] = 1;
          c[b2 + 316 >> 2] = 0;
          c[b2 + 308 >> 2] = 0;
          c[b2 + 312 >> 2] = 0;
          d2 = c[b2 + 288 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 292 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 288 >> 2] = 0;
          }
          a[b2 + 292 >> 0] = 1;
          c[b2 + 288 >> 2] = 0;
          c[b2 + 280 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          d2 = c[b2 + 240 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 244 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 240 >> 2] = 0;
          }
          a[b2 + 244 >> 0] = 1;
          c[b2 + 240 >> 2] = 0;
          c[b2 + 232 >> 2] = 0;
          c[b2 + 236 >> 2] = 0;
          d2 = c[b2 + 220 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 224 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 220 >> 2] = 0;
          }
          a[b2 + 224 >> 0] = 1;
          c[b2 + 220 >> 2] = 0;
          c[b2 + 212 >> 2] = 0;
          c[b2 + 216 >> 2] = 0;
          d2 = c[b2 + 188 >> 2] | 0;
          if (!d2) {
            a[b2 + 192 >> 0] = 1;
            c[b2 + 188 >> 2] = 0;
            c[b2 + 180 >> 2] = 0;
            f2 = b2 + 184 | 0;
            c[f2 >> 2] = 0;
            Jj(b2);
            return;
          }
          if (a[b2 + 192 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 188 >> 2] = 0;
          a[b2 + 192 >> 0] = 1;
          c[b2 + 188 >> 2] = 0;
          c[b2 + 180 >> 2] = 0;
          f2 = b2 + 184 | 0;
          c[f2 >> 2] = 0;
          Jj(b2);
          return;
        }
        function Eg(a2, b2, d2, e2, f2, h2, i2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = +j2;
          k2 = k2 | 0;
          l2 = +l2;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          c[a2 >> 2] = c[h2 >> 2];
          c[a2 + 4 >> 2] = c[h2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[h2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[h2 + 12 >> 2];
          s2 = +g[e2 + 4 >> 2];
          v2 = +g[a2 + 8 >> 2];
          w2 = +g[e2 + 8 >> 2];
          p2 = +g[a2 + 4 >> 2];
          m2 = +g[a2 >> 2];
          r2 = +g[e2 >> 2];
          u2 = (s2 * v2 - w2 * p2) * +g[b2 >> 2] + +g[b2 + 4 >> 2] * (w2 * m2 - v2 * r2) + (p2 * r2 - s2 * m2) * +g[b2 + 8 >> 2];
          t2 = (s2 * v2 - w2 * p2) * +g[b2 + 16 >> 2] + (w2 * m2 - v2 * r2) * +g[b2 + 20 >> 2] + (p2 * r2 - s2 * m2) * +g[b2 + 24 >> 2];
          s2 = (s2 * v2 - w2 * p2) * +g[b2 + 32 >> 2] + (w2 * m2 - v2 * r2) * +g[b2 + 36 >> 2] + (p2 * r2 - s2 * m2) * +g[b2 + 40 >> 2];
          g[a2 + 16 >> 2] = u2;
          g[a2 + 20 >> 2] = t2;
          g[a2 + 24 >> 2] = s2;
          g[a2 + 28 >> 2] = 0;
          r2 = +g[f2 + 4 >> 2];
          w2 = +g[f2 + 8 >> 2];
          n2 = +g[f2 >> 2];
          q2 = +g[d2 >> 2] * (r2 * -v2 - w2 * -p2) + +g[d2 + 4 >> 2] * (w2 * -m2 - n2 * -v2) + (n2 * -p2 - r2 * -m2) * +g[d2 + 8 >> 2];
          o2 = (r2 * -v2 - w2 * -p2) * +g[d2 + 16 >> 2] + (w2 * -m2 - n2 * -v2) * +g[d2 + 20 >> 2] + (n2 * -p2 - r2 * -m2) * +g[d2 + 24 >> 2];
          m2 = (r2 * -v2 - w2 * -p2) * +g[d2 + 32 >> 2] + (w2 * -m2 - n2 * -v2) * +g[d2 + 36 >> 2] + (n2 * -p2 - r2 * -m2) * +g[d2 + 40 >> 2];
          g[a2 + 32 >> 2] = q2;
          g[a2 + 36 >> 2] = o2;
          g[a2 + 40 >> 2] = m2;
          g[a2 + 44 >> 2] = 0;
          u2 = +g[i2 >> 2] * u2;
          t2 = +g[i2 + 4 >> 2] * t2;
          s2 = +g[i2 + 8 >> 2] * s2;
          g[a2 + 48 >> 2] = u2;
          g[a2 + 52 >> 2] = t2;
          g[a2 + 56 >> 2] = s2;
          g[a2 + 60 >> 2] = 0;
          r2 = +g[k2 >> 2] * q2;
          p2 = +g[k2 + 4 >> 2] * o2;
          n2 = +g[k2 + 8 >> 2] * m2;
          g[a2 + 64 >> 2] = r2;
          g[a2 + 68 >> 2] = p2;
          g[a2 + 72 >> 2] = n2;
          g[a2 + 76 >> 2] = 0;
          g[a2 + 80 >> 2] = u2 * +g[a2 + 16 >> 2] + t2 * +g[a2 + 20 >> 2] + s2 * +g[a2 + 24 >> 2] + j2 + l2 + (r2 * q2 + p2 * o2 + n2 * m2);
          return;
        }
        function Fg(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(627) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          Fj(e2, 5, b2);
          c[e2 >> 2] = 4220;
          h2 = e2 + 300 | 0;
          c[h2 >> 2] = c[d2 >> 2];
          c[h2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[h2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[h2 + 12 >> 2] = c[d2 + 12 >> 2];
          f2 = e2 + 316 | 0;
          c[f2 >> 2] = c[d2 + 16 >> 2];
          c[f2 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[f2 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[f2 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          b2 = e2 + 332 | 0;
          c[b2 >> 2] = c[d2 + 32 >> 2];
          c[b2 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[b2 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[b2 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          i2 = e2 + 348 | 0;
          c[i2 >> 2] = c[d2 + 48 >> 2];
          c[i2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[i2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[i2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          d2 = e2 + 364 | 0;
          a[e2 + 527 >> 0] = 0;
          c[d2 >> 2] = c[h2 >> 2];
          c[d2 + 4 >> 2] = c[h2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[h2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[h2 + 12 >> 2];
          d2 = e2 + 380 | 0;
          c[d2 >> 2] = c[f2 >> 2];
          c[d2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[f2 + 12 >> 2];
          d2 = e2 + 396 | 0;
          c[d2 >> 2] = c[b2 >> 2];
          c[d2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[b2 + 12 >> 2];
          d2 = e2 + 412 | 0;
          a[e2 + 524 >> 0] = 0;
          a[e2 + 525 >> 0] = 0;
          a[e2 + 526 >> 0] = 0;
          a[e2 + 552 >> 0] = 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          g[e2 + 572 >> 2] = -1;
          g[e2 + 444 >> 2] = 999999984306749400;
          g[e2 + 448 >> 2] = 999999984306749400;
          g[e2 + 452 >> 2] = 999999984306749400;
          g[e2 + 428 >> 2] = 1;
          g[e2 + 432 >> 2] = 0.30000001192092896;
          g[e2 + 436 >> 2] = 1;
          g[e2 + 440 >> 2] = 0.009999999776482582;
          g[e2 + 456 >> 2] = 0.05000000074505806;
          c[e2 + 592 >> 2] = 0;
          g[e2 + 596 >> 2] = 0;
          g[e2 + 600 >> 2] = 0.699999988079071;
          g[e2 + 604 >> 2] = 0;
          return e2 | 0;
        }
        function Gg(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          h2 = i;
          i = i + 64 | 0;
          a[d2 + 84 >> 0] = 0;
          c[h2 >> 2] = c[b2 + 4 >> 2];
          c[h2 + 4 >> 2] = c[b2 + 4 + 4 >> 2];
          c[h2 + 8 >> 2] = c[b2 + 4 + 8 >> 2];
          c[h2 + 12 >> 2] = c[b2 + 4 + 12 >> 2];
          c[h2 + 16 >> 2] = c[b2 + 20 >> 2];
          c[h2 + 16 + 4 >> 2] = c[b2 + 20 + 4 >> 2];
          c[h2 + 16 + 8 >> 2] = c[b2 + 20 + 8 >> 2];
          c[h2 + 16 + 12 >> 2] = c[b2 + 20 + 12 >> 2];
          c[h2 + 32 >> 2] = c[b2 + 36 >> 2];
          c[h2 + 32 + 4 >> 2] = c[b2 + 36 + 4 >> 2];
          c[h2 + 32 + 8 >> 2] = c[b2 + 36 + 8 >> 2];
          c[h2 + 32 + 12 >> 2] = c[b2 + 36 + 12 >> 2];
          c[h2 + 48 >> 2] = c[b2 + 52 >> 2];
          c[h2 + 48 + 4 >> 2] = c[b2 + 52 + 4 >> 2];
          c[h2 + 48 + 8 >> 2] = c[b2 + 52 + 8 >> 2];
          c[h2 + 48 + 12 >> 2] = c[b2 + 52 + 12 >> 2];
          if (e2 ? (f2 = c[b2 + 520 >> 2] | 0, f2 | 0) : 0)
            mb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, h2);
          w2 = +g[d2 + 156 >> 2];
          u2 = +g[h2 >> 2];
          v2 = +g[d2 + 160 >> 2];
          t2 = +g[h2 + 4 >> 2];
          o2 = +g[d2 + 164 >> 2];
          s2 = +g[h2 + 8 >> 2];
          r2 = +g[h2 + 16 >> 2];
          q2 = +g[h2 + 20 >> 2];
          p2 = +g[h2 + 24 >> 2];
          n2 = +g[h2 + 32 >> 2];
          l2 = +g[h2 + 36 >> 2];
          j2 = +g[h2 + 40 >> 2];
          m2 = w2 * r2 + v2 * q2 + o2 * p2 + +g[h2 + 52 >> 2];
          k2 = w2 * n2 + v2 * l2 + o2 * j2 + +g[h2 + 56 >> 2];
          g[d2 + 36 >> 2] = w2 * u2 + v2 * t2 + o2 * s2 + +g[h2 + 48 >> 2];
          g[d2 + 40 >> 2] = m2;
          g[d2 + 44 >> 2] = k2;
          g[d2 + 48 >> 2] = 0;
          k2 = +g[d2 + 172 >> 2];
          m2 = +g[d2 + 176 >> 2];
          o2 = +g[d2 + 180 >> 2];
          g[d2 + 52 >> 2] = u2 * k2 + t2 * m2 + s2 * o2;
          g[d2 + 56 >> 2] = k2 * r2 + m2 * q2 + o2 * p2;
          g[d2 + 60 >> 2] = k2 * n2 + m2 * l2 + o2 * j2;
          g[d2 + 64 >> 2] = 0;
          o2 = +g[d2 + 188 >> 2];
          m2 = +g[d2 + 192 >> 2];
          k2 = +g[d2 + 196 >> 2];
          g[d2 + 68 >> 2] = u2 * o2 + t2 * m2 + s2 * k2;
          g[d2 + 72 >> 2] = o2 * r2 + m2 * q2 + k2 * p2;
          g[d2 + 76 >> 2] = o2 * n2 + m2 * l2 + k2 * j2;
          g[d2 + 80 >> 2] = 0;
          i = h2;
          return;
        }
        function Hg(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          a:
            do
              if (b2 >>> 0 <= 20)
                do
                  switch (b2 | 0) {
                    case 9: {
                      e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      b2 = c[e2 >> 2] | 0;
                      c[d2 >> 2] = e2 + 4;
                      c[a2 >> 2] = b2;
                      break a;
                    }
                    case 10: {
                      b2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      e2 = c[b2 >> 2] | 0;
                      c[d2 >> 2] = b2 + 4;
                      c[a2 >> 2] = e2;
                      c[a2 + 4 >> 2] = ((e2 | 0) < 0) << 31 >> 31;
                      break a;
                    }
                    case 11: {
                      b2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      e2 = c[b2 >> 2] | 0;
                      c[d2 >> 2] = b2 + 4;
                      c[a2 >> 2] = e2;
                      c[a2 + 4 >> 2] = 0;
                      break a;
                    }
                    case 12: {
                      f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                      b2 = c[f2 >> 2] | 0;
                      e2 = c[f2 + 4 >> 2] | 0;
                      c[d2 >> 2] = f2 + 8;
                      c[a2 >> 2] = b2;
                      c[a2 + 4 >> 2] = e2;
                      break a;
                    }
                    case 13: {
                      e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      f2 = c[e2 >> 2] | 0;
                      c[d2 >> 2] = e2 + 4;
                      c[a2 >> 2] = (f2 & 65535) << 16 >> 16;
                      c[a2 + 4 >> 2] = (((f2 & 65535) << 16 >> 16 | 0) < 0) << 31 >> 31;
                      break a;
                    }
                    case 14: {
                      e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      f2 = c[e2 >> 2] | 0;
                      c[d2 >> 2] = e2 + 4;
                      c[a2 >> 2] = f2 & 65535;
                      c[a2 + 4 >> 2] = 0;
                      break a;
                    }
                    case 15: {
                      e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      f2 = c[e2 >> 2] | 0;
                      c[d2 >> 2] = e2 + 4;
                      c[a2 >> 2] = (f2 & 255) << 24 >> 24;
                      c[a2 + 4 >> 2] = (((f2 & 255) << 24 >> 24 | 0) < 0) << 31 >> 31;
                      break a;
                    }
                    case 16: {
                      e2 = (c[d2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      f2 = c[e2 >> 2] | 0;
                      c[d2 >> 2] = e2 + 4;
                      c[a2 >> 2] = f2 & 255;
                      c[a2 + 4 >> 2] = 0;
                      break a;
                    }
                    case 17: {
                      f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                      g2 = +h[f2 >> 3];
                      c[d2 >> 2] = f2 + 8;
                      h[a2 >> 3] = g2;
                      break a;
                    }
                    case 18: {
                      f2 = (c[d2 >> 2] | 0) + (8 - 1) & ~(8 - 1);
                      g2 = +h[f2 >> 3];
                      c[d2 >> 2] = f2 + 8;
                      h[a2 >> 3] = g2;
                      break a;
                    }
                    default:
                      break a;
                  }
                while (0);
            while (0);
          return;
        }
        function Ig(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
          w2 = i;
          i = i + 2048 | 0;
          if ((e2 | 0) > 0)
            f2 = 0;
          else {
            i = w2;
            return;
          }
          do {
            g[d2 + (f2 << 4) + 12 >> 2] = -999999984306749400;
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) != (e2 | 0));
          p2 = 0;
          do {
            if ((ob[c[(c[a2 >> 2] | 0) + 96 >> 2] & 127](a2) | 0) > 0) {
              q2 = b2 + (p2 << 4) | 0;
              r2 = b2 + (p2 << 4) + 4 | 0;
              s2 = b2 + (p2 << 4) + 8 | 0;
              t2 = d2 + (p2 << 4) + 12 | 0;
              u2 = d2 + (p2 << 4) | 0;
              o2 = 0;
              do {
                if (((ob[c[(c[a2 >> 2] | 0) + 96 >> 2] & 127](a2) | 0) - o2 | 0) < 128) {
                  f2 = (ob[c[(c[a2 >> 2] | 0) + 96 >> 2] & 127](a2) | 0) - o2 | 0;
                  if ((f2 | 0) > 0)
                    v2 = 10;
                  else {
                    j2 = -34028234663852886e22;
                    f2 = -1;
                  }
                } else {
                  f2 = 128;
                  v2 = 10;
                }
                if ((v2 | 0) == 10) {
                  v2 = 0;
                  h2 = 0;
                  do {
                    Ub[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, h2, w2 + (h2 << 4) | 0);
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (f2 | 0));
                  l2 = +g[q2 >> 2];
                  m2 = +g[r2 >> 2];
                  n2 = +g[s2 >> 2];
                  h2 = -1;
                  k2 = 0;
                  j2 = -34028234663852886e22;
                  do {
                    x2 = l2 * +g[w2 + (k2 << 4) >> 2] + m2 * +g[w2 + (k2 << 4) + 4 >> 2] + n2 * +g[w2 + (k2 << 4) + 8 >> 2];
                    y2 = x2 > j2;
                    h2 = y2 ? k2 : h2;
                    j2 = y2 ? x2 : j2;
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) != (f2 | 0));
                  f2 = h2;
                }
                if (j2 > +g[t2 >> 2]) {
                  y2 = w2 + (f2 << 4) | 0;
                  c[u2 >> 2] = c[y2 >> 2];
                  c[u2 + 4 >> 2] = c[y2 + 4 >> 2];
                  c[u2 + 8 >> 2] = c[y2 + 8 >> 2];
                  c[u2 + 12 >> 2] = c[y2 + 12 >> 2];
                  g[t2 >> 2] = j2;
                }
                o2 = o2 + 128 | 0;
              } while ((o2 | 0) < (ob[c[(c[a2 >> 2] | 0) + 96 >> 2] & 127](a2) | 0));
            }
            p2 = p2 + 1 | 0;
          } while ((p2 | 0) != (e2 | 0));
          i = w2;
          return;
        }
        function Jg(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0;
          h2 = i;
          i = i + 16 | 0;
          d2 = +g[a2 >> 2];
          e2 = +g[a2 + 20 >> 2];
          f2 = +g[a2 + 40 >> 2];
          if (d2 + e2 + f2 > 0) {
            f2 = +G(+(d2 + e2 + f2 + 1));
            g[h2 + 12 >> 2] = f2 * 0.5;
            n2 = (+g[a2 + 36 >> 2] - +g[a2 + 24 >> 2]) * (0.5 / f2);
            g[h2 >> 2] = n2;
            d2 = (+g[a2 + 8 >> 2] - +g[a2 + 32 >> 2]) * (0.5 / f2);
            g[h2 + 4 >> 2] = d2;
            e2 = (+g[a2 + 16 >> 2] - +g[a2 + 4 >> 2]) * (0.5 / f2);
            g[h2 + 8 >> 2] = e2;
            j2 = (g[l >> 2] = n2, c[l >> 2] | 0);
            m2 = (g[l >> 2] = d2, c[l >> 2] | 0);
            k2 = (g[l >> 2] = e2, c[l >> 2] | 0);
            a2 = (g[l >> 2] = f2 * 0.5, c[l >> 2] | 0);
            c[b2 >> 2] = j2;
            j2 = b2 + 4 | 0;
            c[j2 >> 2] = m2;
            j2 = b2 + 8 | 0;
            c[j2 >> 2] = k2;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = a2;
            i = h2;
            return;
          } else {
            m2 = d2 < e2 ? e2 < f2 ? 2 : 1 : d2 < f2 ? 2 : 0;
            n2 = +G(+(+g[a2 + (m2 << 4) + (m2 << 2) >> 2] - +g[a2 + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 4) + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 2) >> 2] - +g[a2 + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 4) + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 2) >> 2] + 1));
            g[h2 + (m2 << 2) >> 2] = n2 * 0.5;
            g[h2 + 12 >> 2] = (+g[a2 + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 4) + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 2) >> 2] - +g[a2 + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 4) + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 2) >> 2]) * (0.5 / n2);
            g[h2 + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 2) >> 2] = (+g[a2 + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 4) + (m2 << 2) >> 2] + +g[a2 + (m2 << 4) + ((((m2 + 1 | 0) >>> 0) % 3 | 0) << 2) >> 2]) * (0.5 / n2);
            g[h2 + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 2) >> 2] = (+g[a2 + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 4) + (m2 << 2) >> 2] + +g[a2 + (m2 << 4) + ((((m2 + 2 | 0) >>> 0) % 3 | 0) << 2) >> 2]) * (0.5 / n2);
            m2 = c[h2 >> 2] | 0;
            a2 = c[h2 + 4 >> 2] | 0;
            j2 = c[h2 + 8 >> 2] | 0;
            k2 = c[h2 + 12 >> 2] | 0;
            c[b2 >> 2] = m2;
            m2 = b2 + 4 | 0;
            c[m2 >> 2] = a2;
            m2 = b2 + 8 | 0;
            c[m2 >> 2] = j2;
            m2 = b2 + 12 | 0;
            c[m2 >> 2] = k2;
            i = h2;
            return;
          }
        }
        function Kg(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0;
          u2 = i;
          i = i + 16 | 0;
          h2 = c[a2 + 56 >> 2] | 0;
          t2 = +g[a2 + 32 + (((h2 + 2 | 0) % 3 | 0) << 2) >> 2];
          if ((e2 | 0) <= 0) {
            i = u2;
            return;
          }
          f2 = 0;
          while (1) {
            c[u2 >> 2] = 0;
            c[u2 + 4 >> 2] = 0;
            c[u2 + 8 >> 2] = 0;
            c[u2 + 12 >> 2] = 0;
            c[u2 + (h2 << 2) >> 2] = c[a2 + 32 + (h2 << 2) >> 2];
            h2 = b2 + (f2 << 4) | 0;
            r2 = b2 + (f2 << 4) + 4 | 0;
            s2 = b2 + (f2 << 4) + 8 | 0;
            m2 = t2 * +g[h2 >> 2] + +g[u2 >> 2];
            n2 = t2 * +g[r2 >> 2] + +g[u2 + 4 >> 2];
            o2 = t2 * +g[s2 >> 2] + +g[u2 + 8 >> 2];
            p2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            j2 = +g[h2 >> 2];
            k2 = +g[r2 >> 2];
            l2 = +g[s2 >> 2];
            if (j2 * (m2 - p2 * j2) + k2 * (n2 - p2 * k2) + l2 * (o2 - p2 * l2) > -999999984306749400) {
              g[d2 + (f2 << 4) >> 2] = m2 - p2 * j2;
              g[d2 + (f2 << 4) + 4 >> 2] = n2 - p2 * k2;
              g[d2 + (f2 << 4) + 8 >> 2] = o2 - p2 * l2;
              g[d2 + (f2 << 4) + 12 >> 2] = 0;
              q2 = j2 * (m2 - p2 * j2) + k2 * (n2 - p2 * k2) + l2 * (o2 - p2 * l2);
              j2 = +g[h2 >> 2];
              k2 = +g[r2 >> 2];
              l2 = +g[s2 >> 2];
            } else
              q2 = -999999984306749400;
            c[u2 >> 2] = 0;
            c[u2 + 4 >> 2] = 0;
            c[u2 + 8 >> 2] = 0;
            c[u2 + 12 >> 2] = 0;
            v2 = c[a2 + 56 >> 2] | 0;
            g[u2 + (v2 << 2) >> 2] = -+g[a2 + 32 + (v2 << 2) >> 2];
            p2 = t2 * j2 + +g[u2 >> 2];
            o2 = t2 * k2 + +g[u2 + 4 >> 2];
            m2 = t2 * l2 + +g[u2 + 8 >> 2];
            n2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            l2 = +g[h2 >> 2];
            k2 = +g[r2 >> 2];
            j2 = +g[s2 >> 2];
            if (l2 * (p2 - n2 * l2) + k2 * (o2 - n2 * k2) + j2 * (m2 - n2 * j2) > q2) {
              g[d2 + (f2 << 4) >> 2] = p2 - n2 * l2;
              g[d2 + (f2 << 4) + 4 >> 2] = o2 - n2 * k2;
              g[d2 + (f2 << 4) + 8 >> 2] = m2 - n2 * j2;
              g[d2 + (f2 << 4) + 12 >> 2] = 0;
            }
            f2 = f2 + 1 | 0;
            if ((f2 | 0) == (e2 | 0))
              break;
            h2 = c[a2 + 56 >> 2] | 0;
          }
          i = u2;
          return;
        }
        function Lg(a2, b2, d2, e2, f2, h2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          r2 = i;
          i = i + 16 | 0;
          g[e2 >> 2] = 34028234663852886e22;
          g[f2 >> 2] = -34028234663852886e22;
          p2 = c[a2 + 100 >> 2] | 0;
          if ((p2 | 0) > 0) {
            n2 = 0;
            do {
              t2 = c[a2 + 108 >> 2] | 0;
              s2 = +g[t2 + (n2 << 4) >> 2] * +g[a2 + 16 >> 2];
              q2 = +g[t2 + (n2 << 4) + 4 >> 2] * +g[a2 + 20 >> 2];
              o2 = +g[t2 + (n2 << 4) + 8 >> 2] * +g[a2 + 24 >> 2];
              k2 = s2 * +g[b2 >> 2] + q2 * +g[b2 + 4 >> 2] + o2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
              m2 = s2 * +g[b2 + 16 >> 2] + q2 * +g[b2 + 20 >> 2] + o2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
              o2 = s2 * +g[b2 + 32 >> 2] + q2 * +g[b2 + 36 >> 2] + o2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
              q2 = k2 * +g[d2 >> 2] + m2 * +g[d2 + 4 >> 2] + o2 * +g[d2 + 8 >> 2];
              if (q2 < +g[e2 >> 2]) {
                g[e2 >> 2] = q2;
                g[h2 >> 2] = k2;
                g[h2 + 4 >> 2] = m2;
                g[h2 + 8 >> 2] = o2;
                g[h2 + 12 >> 2] = 0;
              }
              if (q2 > +g[f2 >> 2]) {
                g[f2 >> 2] = q2;
                g[j2 >> 2] = k2;
                g[j2 + 4 >> 2] = m2;
                g[j2 + 8 >> 2] = o2;
                g[j2 + 12 >> 2] = 0;
              }
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != (p2 | 0));
            s2 = +g[f2 >> 2];
            m2 = s2;
            n2 = (g[l >> 2] = s2, c[l >> 2] | 0);
          } else {
            m2 = -34028234663852886e22;
            n2 = -8388609;
          }
          k2 = +g[e2 >> 2];
          if (!(k2 > m2)) {
            i = r2;
            return;
          }
          c[e2 >> 2] = n2;
          g[f2 >> 2] = k2;
          c[r2 >> 2] = c[h2 >> 2];
          c[r2 + 4 >> 2] = c[h2 + 4 >> 2];
          c[r2 + 8 >> 2] = c[h2 + 8 >> 2];
          c[r2 + 12 >> 2] = c[h2 + 12 >> 2];
          c[h2 >> 2] = c[j2 >> 2];
          c[h2 + 4 >> 2] = c[j2 + 4 >> 2];
          c[h2 + 8 >> 2] = c[j2 + 8 >> 2];
          c[h2 + 12 >> 2] = c[j2 + 12 >> 2];
          c[j2 >> 2] = c[r2 >> 2];
          c[j2 + 4 >> 2] = c[r2 + 4 >> 2];
          c[j2 + 8 >> 2] = c[r2 + 8 >> 2];
          c[j2 + 12 >> 2] = c[r2 + 12 >> 2];
          i = r2;
          return;
        }
        function Mg(a2, b2, c2, d2, e2, f2, h2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = +f2;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          l2 = i;
          i = i + 16 | 0;
          k2 = c2 * f2 + +g[a2 + 52 >> 2];
          j2 = d2 * f2 + +g[a2 + 56 >> 2];
          g[h2 + 48 >> 2] = b2 * f2 + +g[a2 + 48 >> 2];
          g[h2 + 52 >> 2] = k2;
          g[h2 + 56 >> 2] = j2;
          g[h2 + 60 >> 2] = 0;
          j2 = +g[e2 >> 2];
          k2 = +g[e2 + 4 >> 2];
          d2 = +g[e2 + 8 >> 2];
          b2 = +G(+(j2 * j2 + k2 * k2 + d2 * d2));
          b2 = b2 * f2 > 0.7853981852531433 ? 0.7853981852531433 / f2 : b2;
          if (b2 < 0.0010000000474974513)
            c2 = f2 * 0.5 - b2 * f2 * f2 * f2 * 0.02083333395421505 * b2;
          else
            c2 = +J(+(b2 * 0.5 * f2)) / b2;
          o2 = j2 * c2;
          n2 = k2 * c2;
          j2 = d2 * c2;
          q2 = +I(+(b2 * f2 * 0.5));
          Jg(a2, l2);
          b2 = +g[l2 >> 2];
          p2 = +g[l2 + 12 >> 2];
          c2 = +g[l2 + 8 >> 2];
          f2 = +g[l2 + 4 >> 2];
          r2 = 1 / +G(+((q2 * p2 - o2 * b2 - n2 * f2 - j2 * c2) * (q2 * p2 - o2 * b2 - n2 * f2 - j2 * c2) + ((j2 * p2 + q2 * c2 + o2 * f2 - n2 * b2) * (j2 * p2 + q2 * c2 + o2 * f2 - n2 * b2) + ((q2 * b2 + o2 * p2 + n2 * c2 - j2 * f2) * (q2 * b2 + o2 * p2 + n2 * c2 - j2 * f2) + (j2 * b2 + (n2 * p2 + q2 * f2) - o2 * c2) * (j2 * b2 + (n2 * p2 + q2 * f2) - o2 * c2)))));
          d2 = (q2 * b2 + o2 * p2 + n2 * c2 - j2 * f2) * r2;
          k2 = r2 * (j2 * b2 + (n2 * p2 + q2 * f2) - o2 * c2);
          m2 = r2 * (j2 * p2 + q2 * c2 + o2 * f2 - n2 * b2);
          c2 = r2 * (q2 * p2 - o2 * b2 - n2 * f2 - j2 * c2);
          j2 = d2 * (2 / (c2 * c2 + (m2 * m2 + (d2 * d2 + k2 * k2))));
          f2 = k2 * (2 / (c2 * c2 + (m2 * m2 + (d2 * d2 + k2 * k2))));
          b2 = m2 * (2 / (c2 * c2 + (m2 * m2 + (d2 * d2 + k2 * k2))));
          g[h2 >> 2] = 1 - (k2 * f2 + m2 * b2);
          g[h2 + 4 >> 2] = d2 * f2 - c2 * b2;
          g[h2 + 8 >> 2] = d2 * b2 + c2 * f2;
          g[h2 + 12 >> 2] = 0;
          g[h2 + 16 >> 2] = d2 * f2 + c2 * b2;
          g[h2 + 20 >> 2] = 1 - (d2 * j2 + m2 * b2);
          g[h2 + 24 >> 2] = k2 * b2 - c2 * j2;
          g[h2 + 28 >> 2] = 0;
          g[h2 + 32 >> 2] = d2 * b2 - c2 * f2;
          g[h2 + 36 >> 2] = k2 * b2 + c2 * j2;
          g[h2 + 40 >> 2] = 1 - (d2 * j2 + k2 * f2);
          g[h2 + 44 >> 2] = 0;
          i = l2;
          return;
        }
        function Ng(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = i;
          i = i + 48 | 0;
          e2 = (c[a2 + 52 >> 2] | 0) + 4 | 0;
          c[e2 >> 2] = c[b2 >> 2];
          c[e2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[b2 + 12 >> 2];
          b2 = d2 + 32 + 4 | 0;
          c[b2 >> 2] = 0;
          c[b2 + 4 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          g[d2 + 32 >> 2] = 1;
          Ub[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2 + 16 | 0, a2, d2 + 32 | 0);
          g[a2 + 36 >> 2] = +g[d2 + 16 >> 2] + +g[a2 + 16 >> 2];
          g[d2 + 32 >> 2] = -1;
          Ub[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2, a2, d2 + 32 | 0);
          c[d2 + 16 >> 2] = c[d2 >> 2];
          c[d2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
          c[d2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
          c[d2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
          g[a2 + 20 >> 2] = +g[d2 + 16 >> 2] - +g[a2 + 16 >> 2];
          c[d2 + 32 >> 2] = 0;
          c[d2 + 32 + 4 >> 2] = 0;
          c[d2 + 32 + 8 >> 2] = 0;
          c[d2 + 32 + 12 >> 2] = 0;
          g[b2 >> 2] = 1;
          Ub[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2 + 16 | 0, a2, d2 + 32 | 0);
          g[a2 + 40 >> 2] = +g[d2 + 16 + 4 >> 2] + +g[a2 + 16 >> 2];
          g[b2 >> 2] = -1;
          Ub[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2, a2, d2 + 32 | 0);
          c[d2 + 16 >> 2] = c[d2 >> 2];
          c[d2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
          c[d2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
          c[d2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
          g[a2 + 24 >> 2] = +g[d2 + 16 + 4 >> 2] - +g[a2 + 16 >> 2];
          c[d2 + 32 >> 2] = 0;
          c[d2 + 32 + 4 >> 2] = 0;
          c[d2 + 32 + 8 >> 2] = 0;
          c[d2 + 32 + 12 >> 2] = 0;
          g[d2 + 32 + 8 >> 2] = 1;
          Ub[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2 + 16 | 0, a2, d2 + 32 | 0);
          g[a2 + 44 >> 2] = +g[d2 + 16 + 8 >> 2] + +g[a2 + 16 >> 2];
          g[d2 + 32 + 8 >> 2] = -1;
          Ub[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](d2, a2, d2 + 32 | 0);
          c[d2 + 16 >> 2] = c[d2 >> 2];
          c[d2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
          c[d2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
          c[d2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
          g[a2 + 28 >> 2] = +g[d2 + 16 + 8 >> 2] - +g[a2 + 16 >> 2];
          i = d2;
          return;
        }
        function Og(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          f2 = c[b2 + 8 >> 2] | 0;
          if (f2 | 0 ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
            if ((c[f2 + 216 >> 2] & -2 | 0) != 4)
              c[f2 + 216 >> 2] = 1;
            g[f2 + 220 >> 2] = 0;
          }
          f2 = c[b2 + 12 >> 2] | 0;
          if (f2 | 0 ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
            if ((c[f2 + 216 >> 2] & -2 | 0) != 4)
              c[f2 + 216 >> 2] = 1;
            g[f2 + 220 >> 2] = 0;
          }
          f2 = c[b2 + 20 >> 2] | 0;
          if (f2 | 0 ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
            if ((c[f2 + 216 >> 2] & -2 | 0) != 4)
              c[f2 + 216 >> 2] = 1;
            g[f2 + 220 >> 2] = 0;
          }
          f2 = c[b2 + 24 >> 2] | 0;
          if (f2 | 0 ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
            if ((c[f2 + 216 >> 2] & -2 | 0) != 4)
              c[f2 + 216 >> 2] = 1;
            g[f2 + 220 >> 2] = 0;
          }
          f2 = c[b2 + 156 >> 2] | 0;
          c[b2 + 156 >> 2] = f2 + 1;
          a[b2 + 152 >> 0] = (f2 | 0) >= (c[b2 + 160 >> 2] | 0) & 1;
          if (f2 | 0) {
            c[b2 + 72 >> 2] = 0;
            c[b2 + 72 + 4 >> 2] = 0;
            c[b2 + 72 + 8 >> 2] = 0;
            c[b2 + 72 + 12 >> 2] = 0;
            c[b2 + 72 + 16 >> 2] = 0;
            c[b2 + 72 + 20 >> 2] = 0;
            c[b2 + 72 + 24 >> 2] = 0;
            c[b2 + 72 + 28 >> 2] = 0;
            return;
          }
          j2 = +g[b2 + 64 >> 2];
          i2 = 1 / d2 * +g[b2 + 72 >> 2] * j2;
          h2 = 1 / d2 * j2 * +g[b2 + 76 >> 2];
          d2 = 1 / d2 * j2 * +g[b2 + 80 >> 2];
          g[b2 + 72 >> 2] = i2;
          g[b2 + 76 >> 2] = h2;
          g[b2 + 80 >> 2] = d2;
          g[b2 + 84 >> 2] = 0;
          j2 = +g[b2 + 68 >> 2];
          if (j2 > 0) {
            l2 = j2 * i2 * +g[b2 + 120 >> 2] + j2 * h2 * +g[b2 + 124 >> 2] + j2 * d2 * +g[b2 + 128 >> 2];
            k2 = j2 * i2 * +g[b2 + 136 >> 2] + j2 * h2 * +g[b2 + 140 >> 2] + j2 * d2 * +g[b2 + 144 >> 2];
            g[b2 + 88 >> 2] = j2 * i2 * +g[b2 + 104 >> 2] + j2 * h2 * +g[b2 + 108 >> 2] + j2 * d2 * +g[b2 + 112 >> 2];
            g[b2 + 92 >> 2] = l2;
            g[b2 + 96 >> 2] = k2;
            g[b2 + 100 >> 2] = 0;
            g[b2 + 72 >> 2] = (1 - j2) * i2;
            g[b2 + 76 >> 2] = (1 - j2) * h2;
            g[b2 + 80 >> 2] = (1 - j2) * d2;
            i2 = (1 - j2) * i2;
            h2 = (1 - j2) * h2;
            d2 = (1 - j2) * d2;
          }
          g[b2 + 72 >> 2] = 1 / +(e2 | 0) * i2;
          g[b2 + 76 >> 2] = 1 / +(e2 | 0) * h2;
          g[b2 + 80 >> 2] = 1 / +(e2 | 0) * d2;
          return;
        }
        function Pg(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          while (1) {
            k2 = c[a2 + 12 >> 2] | 0;
            l2 = c[k2 + (((b2 + d2 | 0) / 2 | 0) << 2) >> 2] | 0;
            e2 = b2;
            f2 = d2;
            while (1) {
              j2 = c[(c[l2 + 772 >> 2] | 0) + 208 >> 2] | 0;
              if ((j2 | 0) > -1)
                while (1) {
                  h2 = c[k2 + (e2 << 2) >> 2] | 0;
                  g2 = c[(c[h2 + 772 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) <= -1)
                    g2 = c[(c[h2 + 776 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) < (j2 | 0))
                    e2 = e2 + 1 | 0;
                  else
                    break;
                }
              else {
                i2 = c[(c[l2 + 776 >> 2] | 0) + 208 >> 2] | 0;
                while (1) {
                  h2 = c[k2 + (e2 << 2) >> 2] | 0;
                  g2 = c[(c[h2 + 772 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) <= -1)
                    g2 = c[(c[h2 + 776 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) < (i2 | 0))
                    e2 = e2 + 1 | 0;
                  else
                    break;
                }
              }
              if ((j2 | 0) > -1)
                while (1) {
                  h2 = c[k2 + (f2 << 2) >> 2] | 0;
                  g2 = c[(c[h2 + 772 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) <= -1)
                    g2 = c[(c[h2 + 776 >> 2] | 0) + 208 >> 2] | 0;
                  if ((j2 | 0) < (g2 | 0))
                    f2 = f2 + -1 | 0;
                  else
                    break;
                }
              else {
                i2 = c[(c[l2 + 776 >> 2] | 0) + 208 >> 2] | 0;
                while (1) {
                  h2 = c[k2 + (f2 << 2) >> 2] | 0;
                  g2 = c[(c[h2 + 772 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) <= -1)
                    g2 = c[(c[h2 + 776 >> 2] | 0) + 208 >> 2] | 0;
                  if ((i2 | 0) < (g2 | 0))
                    f2 = f2 + -1 | 0;
                  else
                    break;
                }
              }
              if ((e2 | 0) <= (f2 | 0)) {
                i2 = k2 + (e2 << 2) | 0;
                j2 = c[i2 >> 2] | 0;
                c[i2 >> 2] = c[k2 + (f2 << 2) >> 2];
                c[(c[a2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = j2;
                e2 = e2 + 1 | 0;
                f2 = f2 + -1 | 0;
              }
              if ((e2 | 0) > (f2 | 0))
                break;
              k2 = c[a2 + 12 >> 2] | 0;
            }
            if ((f2 | 0) > (b2 | 0))
              Pg(a2, b2, f2);
            if ((e2 | 0) < (d2 | 0))
              b2 = e2;
            else
              break;
          }
          return;
        }
        function Qg(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          p2 = i;
          i = i + 16 | 0;
          c[b2 >> 2] = 4112;
          a[b2 + 216 >> 0] = 1;
          c[b2 + 212 >> 2] = 0;
          c[b2 + 204 >> 2] = 0;
          c[b2 + 208 >> 2] = 0;
          c[b2 + 8 >> 2] = d2;
          c[b2 + 256 >> 2] = 0;
          c[b2 + 260 >> 2] = 0;
          c[b2 + 264 >> 2] = 1065353216;
          g[b2 + 268 >> 2] = 0;
          c[b2 + 272 >> 2] = 0;
          c[b2 + 276 >> 2] = 0;
          c[b2 + 280 >> 2] = 1065353216;
          g[b2 + 284 >> 2] = 0;
          l2 = +g[h2 >> 2];
          m2 = +g[h2 + 4 >> 2];
          n2 = +g[h2 + 8 >> 2];
          if (l2 * l2 + m2 * m2 + n2 * n2 > 0 ? (o2 = +g[b2 + 52 >> 2], o2 > 0) : 0) {
            j2 = 1 / +G(+(l2 * l2 + m2 * m2 + n2 * n2));
            k2 = n2 * j2 * -o2 * n2 * j2 * -o2 + (l2 * j2 * -o2 * l2 * j2 * -o2 + m2 * j2 * -o2 * m2 * j2 * -o2);
            if (k2 > 0) {
              g[p2 >> 2] = -(l2 * j2 * -o2);
              g[p2 + 4 >> 2] = -(m2 * j2 * -o2);
              g[p2 + 8 >> 2] = -(n2 * j2 * -o2);
              g[p2 + 12 >> 2] = 0;
              be(b2, p2);
            }
            g[b2 + 52 >> 2] = +G(+k2);
          } else
            be(b2, h2);
          g[b2 + 60 >> 2] = f2;
          g[b2 + 64 >> 2] = 0.019999999552965164;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 68 + 4 >> 2] = 0;
          c[b2 + 68 + 8 >> 2] = 0;
          c[b2 + 68 + 12 >> 2] = 0;
          c[b2 + 100 >> 2] = 0;
          c[b2 + 100 + 4 >> 2] = 0;
          c[b2 + 100 + 8 >> 2] = 0;
          c[b2 + 100 + 12 >> 2] = 0;
          a[b2 + 250 >> 0] = 1;
          g[b2 + 56 >> 2] = 0;
          c[b2 + 12 >> 2] = e2;
          a[b2 + 251 >> 0] = 1;
          g[b2 + 252 >> 2] = 0;
          g[b2 + 20 >> 2] = 0;
          g[b2 + 24 >> 2] = 0;
          g[b2 + 52 >> 2] = 29.399999618530273;
          g[b2 + 28 >> 2] = 55;
          g[b2 + 32 >> 2] = 10;
          g[b2 + 36 >> 2] = 10;
          a[b2 + 248 >> 0] = 0;
          a[b2 + 249 >> 0] = 0;
          a[b2 + 288 >> 0] = 1;
          g[b2 + 44 >> 2] = 0.7853981852531433;
          g[b2 + 48 >> 2] = 0.7071067690849304;
          g[b2 + 148 >> 2] = 0;
          g[b2 + 16 >> 2] = 0.20000000298023224;
          a[b2 + 289 >> 0] = 0;
          a[b2 + 290 >> 0] = 0;
          g[b2 + 240 >> 2] = 0;
          g[b2 + 244 >> 2] = 0;
          i = p2;
          return;
        }
        function Rg(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          while (1) {
            k2 = c[a2 + 12 >> 2] | 0;
            l2 = c[k2 + (((b2 + d2 | 0) / 2 | 0) << 2) >> 2] | 0;
            e2 = b2;
            f2 = d2;
            while (1) {
              j2 = c[(c[l2 + 28 >> 2] | 0) + 208 >> 2] | 0;
              if ((j2 | 0) > -1)
                while (1) {
                  h2 = c[k2 + (e2 << 2) >> 2] | 0;
                  g2 = c[(c[h2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) <= -1)
                    g2 = c[(c[h2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) < (j2 | 0))
                    e2 = e2 + 1 | 0;
                  else
                    break;
                }
              else {
                i2 = c[(c[l2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                while (1) {
                  h2 = c[k2 + (e2 << 2) >> 2] | 0;
                  g2 = c[(c[h2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) <= -1)
                    g2 = c[(c[h2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) < (i2 | 0))
                    e2 = e2 + 1 | 0;
                  else
                    break;
                }
              }
              if ((j2 | 0) > -1)
                while (1) {
                  h2 = c[k2 + (f2 << 2) >> 2] | 0;
                  g2 = c[(c[h2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) <= -1)
                    g2 = c[(c[h2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                  if ((j2 | 0) < (g2 | 0))
                    f2 = f2 + -1 | 0;
                  else
                    break;
                }
              else {
                i2 = c[(c[l2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                while (1) {
                  h2 = c[k2 + (f2 << 2) >> 2] | 0;
                  g2 = c[(c[h2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                  if ((g2 | 0) <= -1)
                    g2 = c[(c[h2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                  if ((i2 | 0) < (g2 | 0))
                    f2 = f2 + -1 | 0;
                  else
                    break;
                }
              }
              if ((e2 | 0) <= (f2 | 0)) {
                i2 = k2 + (e2 << 2) | 0;
                j2 = c[i2 >> 2] | 0;
                c[i2 >> 2] = c[k2 + (f2 << 2) >> 2];
                c[(c[a2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = j2;
                e2 = e2 + 1 | 0;
                f2 = f2 + -1 | 0;
              }
              if ((e2 | 0) > (f2 | 0))
                break;
              k2 = c[a2 + 12 >> 2] | 0;
            }
            if ((f2 | 0) > (b2 | 0))
              Rg(a2, b2, f2);
            if ((e2 | 0) < (d2 | 0))
              b2 = e2;
            else
              break;
          }
          return;
        }
        function Sg(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
          e2 = i;
          i = i + 48 | 0;
          y2 = +g[d2 >> 2];
          n2 = +g[b2 >> 2];
          x2 = +g[d2 + 16 >> 2];
          l2 = +g[b2 + 4 >> 2];
          w2 = +g[d2 + 32 >> 2];
          j2 = +g[b2 + 8 >> 2];
          v2 = +g[d2 + 4 >> 2];
          u2 = +g[d2 + 20 >> 2];
          t2 = +g[d2 + 36 >> 2];
          k2 = +g[d2 + 8 >> 2];
          m2 = +g[d2 + 24 >> 2];
          o2 = +g[d2 + 40 >> 2];
          q2 = +g[b2 + 16 >> 2];
          p2 = +g[b2 + 20 >> 2];
          h2 = +g[b2 + 24 >> 2];
          s2 = +g[b2 + 32 >> 2];
          r2 = +g[b2 + 36 >> 2];
          f2 = +g[b2 + 40 >> 2];
          g[e2 >> 2] = y2 * n2 + x2 * l2 + w2 * j2;
          g[e2 + 4 >> 2] = v2 * n2 + u2 * l2 + t2 * j2;
          g[e2 + 8 >> 2] = k2 * n2 + m2 * l2 + o2 * j2;
          g[e2 + 12 >> 2] = 0;
          g[e2 + 16 >> 2] = y2 * q2 + x2 * p2 + w2 * h2;
          g[e2 + 20 >> 2] = v2 * q2 + u2 * p2 + t2 * h2;
          g[e2 + 24 >> 2] = k2 * q2 + m2 * p2 + o2 * h2;
          g[e2 + 28 >> 2] = 0;
          g[e2 + 32 >> 2] = y2 * s2 + x2 * r2 + w2 * f2;
          g[e2 + 36 >> 2] = v2 * s2 + u2 * r2 + t2 * f2;
          g[e2 + 40 >> 2] = k2 * s2 + m2 * r2 + o2 * f2;
          g[e2 + 44 >> 2] = 0;
          o2 = +g[d2 + 48 >> 2];
          m2 = +g[d2 + 52 >> 2];
          k2 = +g[d2 + 56 >> 2];
          f2 = o2 * s2 + m2 * r2 + k2 * f2 + +g[b2 + 56 >> 2];
          h2 = o2 * q2 + m2 * p2 + k2 * h2 + +g[b2 + 52 >> 2];
          j2 = o2 * n2 + m2 * l2 + k2 * j2 + +g[b2 + 48 >> 2];
          c[a2 >> 2] = c[e2 >> 2];
          c[a2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[e2 + 12 >> 2];
          c[a2 + 16 >> 2] = c[e2 + 16 >> 2];
          c[a2 + 16 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[a2 + 16 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[a2 + 16 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          c[a2 + 32 >> 2] = c[e2 + 32 >> 2];
          c[a2 + 32 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[a2 + 32 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[a2 + 32 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          g[a2 + 48 >> 2] = j2;
          g[a2 + 52 >> 2] = h2;
          g[a2 + 56 >> 2] = f2;
          g[a2 + 60 >> 2] = 0;
          i = e2;
          return;
        }
        function Tg(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          m2 = i;
          i = i + 16 | 0;
          h2 = c[a2 + 12 >> 2] | 0;
          j2 = c[h2 + (((d2 + b2 | 0) / 2 | 0) << 4) >> 2] | 0;
          k2 = c[h2 + (((d2 + b2 | 0) / 2 | 0) << 4) + 4 >> 2] | 0;
          l2 = c[h2 + (((d2 + b2 | 0) / 2 | 0) << 4) + 8 >> 2] | 0;
          f2 = d2;
          e2 = b2;
          while (1) {
            while (1) {
              g2 = c[h2 + (e2 << 4) + 4 >> 2] | 0;
              if ((g2 | 0) >= (k2 | 0)) {
                if ((g2 | 0) != (k2 | 0))
                  break;
                g2 = c[h2 + (e2 << 4) >> 2] | 0;
                if ((g2 | 0) >= (j2 | 0)) {
                  if ((g2 | 0) != (j2 | 0))
                    break;
                  if ((c[h2 + (e2 << 4) + 8 >> 2] | 0) >= (l2 | 0))
                    break;
                }
              }
              e2 = e2 + 1 | 0;
            }
            while (1) {
              g2 = c[h2 + (f2 << 4) + 4 >> 2] | 0;
              if ((k2 | 0) >= (g2 | 0)) {
                if ((k2 | 0) != (g2 | 0))
                  break;
                g2 = c[h2 + (f2 << 4) >> 2] | 0;
                if ((j2 | 0) >= (g2 | 0)) {
                  if ((j2 | 0) != (g2 | 0))
                    break;
                  if ((l2 | 0) >= (c[h2 + (f2 << 4) + 8 >> 2] | 0))
                    break;
                }
              }
              f2 = f2 + -1 | 0;
            }
            if ((e2 | 0) <= (f2 | 0)) {
              g2 = h2 + (e2 << 4) | 0;
              c[m2 >> 2] = c[g2 >> 2];
              c[m2 + 4 >> 2] = c[g2 + 4 >> 2];
              c[m2 + 8 >> 2] = c[g2 + 8 >> 2];
              c[m2 + 12 >> 2] = c[g2 + 12 >> 2];
              h2 = h2 + (f2 << 4) | 0;
              c[g2 >> 2] = c[h2 >> 2];
              c[g2 + 4 >> 2] = c[h2 + 4 >> 2];
              c[g2 + 8 >> 2] = c[h2 + 8 >> 2];
              c[g2 + 12 >> 2] = c[h2 + 12 >> 2];
              h2 = (c[a2 + 12 >> 2] | 0) + (f2 << 4) | 0;
              c[h2 >> 2] = c[m2 >> 2];
              c[h2 + 4 >> 2] = c[m2 + 4 >> 2];
              c[h2 + 8 >> 2] = c[m2 + 8 >> 2];
              c[h2 + 12 >> 2] = c[m2 + 12 >> 2];
              f2 = f2 + -1 | 0;
              e2 = e2 + 1 | 0;
            }
            if ((e2 | 0) > (f2 | 0))
              break;
            h2 = c[a2 + 12 >> 2] | 0;
          }
          if ((f2 | 0) > (b2 | 0))
            Tg(a2, b2, f2);
          if ((e2 | 0) >= (d2 | 0)) {
            i = m2;
            return;
          }
          Tg(a2, e2, d2);
          i = m2;
          return;
        }
        function Ug(a2, b2, d2, e2, f2, h2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          r2 = i;
          i = i + 16 | 0;
          g[e2 >> 2] = 34028234663852886e22;
          g[f2 >> 2] = -34028234663852886e22;
          q2 = c[a2 + 8 >> 2] | 0;
          if ((q2 | 0) > 0) {
            n2 = 0;
            do {
              t2 = c[a2 + 16 >> 2] | 0;
              s2 = +g[t2 + (n2 << 4) >> 2];
              p2 = +g[t2 + (n2 << 4) + 4 >> 2];
              o2 = +g[t2 + (n2 << 4) + 8 >> 2];
              k2 = s2 * +g[b2 >> 2] + p2 * +g[b2 + 4 >> 2] + o2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
              m2 = s2 * +g[b2 + 16 >> 2] + p2 * +g[b2 + 20 >> 2] + o2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
              o2 = s2 * +g[b2 + 32 >> 2] + p2 * +g[b2 + 36 >> 2] + o2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
              p2 = k2 * +g[d2 >> 2] + m2 * +g[d2 + 4 >> 2] + o2 * +g[d2 + 8 >> 2];
              if (p2 < +g[e2 >> 2]) {
                g[e2 >> 2] = p2;
                g[h2 >> 2] = k2;
                g[h2 + 4 >> 2] = m2;
                g[h2 + 8 >> 2] = o2;
                g[h2 + 12 >> 2] = 0;
              }
              if (p2 > +g[f2 >> 2]) {
                g[f2 >> 2] = p2;
                g[j2 >> 2] = k2;
                g[j2 + 4 >> 2] = m2;
                g[j2 + 8 >> 2] = o2;
                g[j2 + 12 >> 2] = 0;
              }
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != (q2 | 0));
            s2 = +g[f2 >> 2];
            m2 = s2;
            n2 = (g[l >> 2] = s2, c[l >> 2] | 0);
          } else {
            m2 = -34028234663852886e22;
            n2 = -8388609;
          }
          k2 = +g[e2 >> 2];
          if (!(k2 > m2)) {
            i = r2;
            return;
          }
          c[e2 >> 2] = n2;
          g[f2 >> 2] = k2;
          c[r2 >> 2] = c[h2 >> 2];
          c[r2 + 4 >> 2] = c[h2 + 4 >> 2];
          c[r2 + 8 >> 2] = c[h2 + 8 >> 2];
          c[r2 + 12 >> 2] = c[h2 + 12 >> 2];
          c[h2 >> 2] = c[j2 >> 2];
          c[h2 + 4 >> 2] = c[j2 + 4 >> 2];
          c[h2 + 8 >> 2] = c[j2 + 8 >> 2];
          c[h2 + 12 >> 2] = c[j2 + 12 >> 2];
          c[j2 >> 2] = c[r2 >> 2];
          c[j2 + 4 >> 2] = c[r2 + 4 >> 2];
          c[j2 + 8 >> 2] = c[r2 + 8 >> 2];
          c[j2 + 12 >> 2] = c[r2 + 12 >> 2];
          i = r2;
          return;
        }
        function Vg(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          n2 = i;
          i = i + 16 | 0;
          if ((f2 | 0) > -3 & (f2 + 3 | 0) > -1) {
            c[6324] = (c[6324] | 0) + 1;
            a2 = ic((f2 + 3 << 4 | 3) + 16 | 0) | 0;
            if (!a2)
              a2 = 0;
            else {
              c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
              a2 = a2 + 4 + 15 & -16;
            }
            h2 = 0;
            do {
              m2 = a2 + (h2 << 4) | 0;
              c[m2 >> 2] = c[n2 >> 2];
              c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
              c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
              c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != (f2 + 3 | 0));
            m2 = a2;
          } else
            m2 = 0;
          if ((f2 | 0) > -3) {
            h2 = 0;
            l2 = m2;
            while (1) {
              if (!h2)
                j2 = 0;
              else {
                a2 = h2;
                j2 = 0;
                k2 = 0.5;
                while (1) {
                  j2 = (a2 & 1 | 0) == 0 ? j2 : j2 + k2;
                  a2 = a2 >> 1;
                  if (!a2)
                    break;
                  else
                    k2 = k2 * 0.5;
                }
              }
              k2 = j2 * 2 + -1;
              o2 = (+(h2 << 1 | 0) * 3.1415927410125732 + 3.1415927410125732) / +(f2 + 3 | 0);
              p2 = +G(+(1 - k2 * k2));
              j2 = p2 * +J(+o2);
              g[l2 >> 2] = p2 * +I(+o2);
              g[l2 + 4 >> 2] = j2;
              g[l2 + 8 >> 2] = k2;
              g[l2 + 12 >> 2] = 0;
              h2 = h2 + 1 | 0;
              if ((h2 | 0) == (f2 + 3 | 0))
                break;
              else
                l2 = l2 + 16 | 0;
            }
            a2 = 0;
            do {
              q2 = m2 + (a2 << 4) | 0;
              h2 = m2 + (a2 << 4) + 4 | 0;
              l2 = m2 + (a2 << 4) + 8 | 0;
              o2 = +g[h2 >> 2] * +g[e2 + 4 >> 2] + +g[d2 + 4 >> 2];
              p2 = +g[l2 >> 2] * +g[e2 + 8 >> 2] + +g[d2 + 8 >> 2];
              g[q2 >> 2] = +g[q2 >> 2] * +g[e2 >> 2] + +g[d2 >> 2];
              g[h2 >> 2] = o2;
              g[l2 >> 2] = p2;
              g[m2 + (a2 << 4) + 12 >> 2] = 0;
              a2 = a2 + 1 | 0;
            } while ((a2 | 0) < (f2 + 3 | 0));
          }
          a2 = bc(b2, m2, f2 + 3 | 0, 1) | 0;
          if (!m2) {
            i = n2;
            return a2 | 0;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[m2 + -4 >> 2] | 0);
          i = n2;
          return a2 | 0;
        }
        function Wg(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
          if ((c[a2 >> 2] | 0) == (b2 | 0)) {
            c[a2 >> 2] = 0;
            a2 = 0;
            return a2 | 0;
          }
          e2 = c[b2 + 32 >> 2] | 0;
          d2 = c[e2 + 32 >> 2] | 0;
          b2 = c[e2 + 36 + (((c[e2 + 40 >> 2] | 0) != (b2 | 0) & 1) << 2) >> 2] | 0;
          if (!d2) {
            c[a2 >> 2] = b2;
            c[b2 + 32 >> 2] = 0;
            d2 = c[a2 + 4 >> 2] | 0;
            if (!d2)
              d2 = b2;
            else {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
              d2 = c[a2 >> 2] | 0;
            }
            c[a2 + 4 >> 2] = e2;
            a2 = d2;
            return a2 | 0;
          }
          c[d2 + 36 + (((c[d2 + 40 >> 2] | 0) == (e2 | 0) & 1) << 2) >> 2] = b2;
          c[b2 + 32 >> 2] = d2;
          b2 = c[a2 + 4 >> 2] | 0;
          if (b2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[b2 + -4 >> 2] | 0);
          }
          c[a2 + 4 >> 2] = e2;
          do {
            s2 = +g[d2 >> 2];
            x2 = d2 + 4 | 0;
            q2 = +g[x2 >> 2];
            v2 = d2 + 8 | 0;
            o2 = +g[v2 >> 2];
            y2 = d2 + 16 | 0;
            m2 = +g[y2 >> 2];
            w2 = d2 + 20 | 0;
            i2 = +g[w2 >> 2];
            e2 = d2 + 24 | 0;
            k2 = +g[e2 >> 2];
            u2 = c[d2 + 36 >> 2] | 0;
            b2 = c[d2 + 40 >> 2] | 0;
            t2 = +g[u2 >> 2];
            r2 = +g[b2 >> 2];
            r2 = t2 < r2 ? t2 : r2;
            g[d2 >> 2] = r2;
            t2 = +g[u2 + 16 >> 2];
            l2 = +g[b2 + 16 >> 2];
            l2 = t2 > l2 ? t2 : l2;
            g[y2 >> 2] = l2;
            t2 = +g[u2 + 4 >> 2];
            p2 = +g[b2 + 4 >> 2];
            p2 = t2 < p2 ? t2 : p2;
            g[x2 >> 2] = p2;
            t2 = +g[u2 + 20 >> 2];
            h2 = +g[b2 + 20 >> 2];
            h2 = t2 > h2 ? t2 : h2;
            g[w2 >> 2] = h2;
            t2 = +g[u2 + 8 >> 2];
            n2 = +g[b2 + 8 >> 2];
            n2 = t2 < n2 ? t2 : n2;
            g[v2 >> 2] = n2;
            t2 = +g[u2 + 24 >> 2];
            j2 = +g[b2 + 24 >> 2];
            j2 = t2 > j2 ? t2 : j2;
            g[e2 >> 2] = j2;
            if (!(s2 != r2 | q2 != p2 | o2 != n2 | m2 != l2) ? !(k2 != j2 | i2 != h2) : 0) {
              f2 = 14;
              break;
            }
            d2 = c[d2 + 32 >> 2] | 0;
          } while ((d2 | 0) != 0);
          if ((f2 | 0) == 14)
            return d2 | 0;
          y2 = c[a2 >> 2] | 0;
          return y2 | 0;
        }
        function Xg(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          j2 = c[a2 + 28 >> 2] | 0;
          i2 = 0;
          e2 = 0;
          f2 = 0;
          h2 = 0;
          a:
            while (1) {
              switch (i2 | 0) {
                case 0: {
                  e2 = +g[a2 + 80 >> 2] + +g[a2 + 64 >> 2];
                  f2 = +g[a2 + 84 >> 2] + +g[a2 + 68 >> 2];
                  h2 = +g[a2 + 88 >> 2] + +g[a2 + 72 >> 2];
                  break;
                }
                case 1: {
                  e2 = +g[a2 + 80 >> 2] + +g[a2 + 64 >> 2];
                  f2 = +g[a2 + 84 >> 2] + +g[a2 + 68 >> 2];
                  h2 = +g[a2 + 72 >> 2] - +g[a2 + 88 >> 2];
                  break;
                }
                case 2: {
                  e2 = +g[a2 + 80 >> 2] + +g[a2 + 64 >> 2];
                  f2 = +g[a2 + 68 >> 2] - +g[a2 + 84 >> 2];
                  h2 = +g[a2 + 88 >> 2] + +g[a2 + 72 >> 2];
                  break;
                }
                case 3: {
                  e2 = +g[a2 + 80 >> 2] + +g[a2 + 64 >> 2];
                  f2 = +g[a2 + 68 >> 2] - +g[a2 + 84 >> 2];
                  h2 = +g[a2 + 72 >> 2] - +g[a2 + 88 >> 2];
                  break;
                }
                case 4: {
                  e2 = +g[a2 + 64 >> 2] - +g[a2 + 80 >> 2];
                  f2 = +g[a2 + 84 >> 2] + +g[a2 + 68 >> 2];
                  h2 = +g[a2 + 88 >> 2] + +g[a2 + 72 >> 2];
                  break;
                }
                case 5: {
                  e2 = +g[a2 + 64 >> 2] - +g[a2 + 80 >> 2];
                  f2 = +g[a2 + 84 >> 2] + +g[a2 + 68 >> 2];
                  h2 = +g[a2 + 72 >> 2] - +g[a2 + 88 >> 2];
                  break;
                }
                case 6: {
                  e2 = +g[a2 + 64 >> 2] - +g[a2 + 80 >> 2];
                  f2 = +g[a2 + 68 >> 2] - +g[a2 + 84 >> 2];
                  h2 = +g[a2 + 88 >> 2] + +g[a2 + 72 >> 2];
                  break;
                }
                case 7: {
                  e2 = +g[a2 + 64 >> 2] - +g[a2 + 80 >> 2];
                  f2 = +g[a2 + 68 >> 2] - +g[a2 + 84 >> 2];
                  h2 = +g[a2 + 72 >> 2] - +g[a2 + 88 >> 2];
                  break;
                }
                default: {
                }
              }
              if ((j2 | 0) > 0) {
                d2 = c[a2 + 36 >> 2] | 0;
                b2 = 0;
                do {
                  if (+g[d2 + (b2 * 36 | 0) + 32 >> 2] + (e2 * +g[d2 + (b2 * 36 | 0) + 20 >> 2] + f2 * +g[d2 + (b2 * 36 | 0) + 24 >> 2] + h2 * +g[d2 + (b2 * 36 | 0) + 28 >> 2]) > 0) {
                    b2 = 0;
                    d2 = 16;
                    break a;
                  }
                  b2 = b2 + 1 | 0;
                } while ((b2 | 0) < (j2 | 0));
              }
              i2 = i2 + 1 | 0;
              if ((i2 | 0) >= 8) {
                b2 = 1;
                d2 = 16;
                break;
              }
            }
          if ((d2 | 0) == 16)
            return b2 | 0;
          return 0;
        }
        function Yg(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          q2 = +g[d2 >> 2];
          if (+g[b2 >> 2] <= q2) {
            i2 = +g[d2 + 4 >> 2];
            if ((((+g[b2 + 4 >> 2] <= i2 ? +g[b2 + 8 >> 2] <= +g[d2 + 8 >> 2] : 0) ? +g[b2 + 16 >> 2] >= +g[d2 + 16 >> 2] : 0) ? +g[b2 + 20 >> 2] >= +g[d2 + 20 >> 2] : 0) ? +g[b2 + 24 >> 2] >= +g[d2 + 24 >> 2] : 0) {
              d2 = 0;
              return d2 | 0;
            } else
              h2 = d2 + 4 | 0;
          } else {
            h2 = d2 + 4 | 0;
            i2 = +g[d2 + 4 >> 2];
          }
          g[d2 >> 2] = q2 - f2;
          m2 = i2 - f2;
          g[h2 >> 2] = m2;
          o2 = +g[d2 + 8 >> 2] - f2;
          g[d2 + 8 >> 2] = o2;
          i2 = +g[d2 + 16 >> 2] + f2;
          g[d2 + 16 >> 2] = i2;
          n2 = +g[d2 + 20 >> 2] + f2;
          g[d2 + 20 >> 2] = n2;
          p2 = +g[d2 + 24 >> 2] + f2;
          g[d2 + 24 >> 2] = p2;
          l2 = +g[e2 >> 2];
          if (l2 > 0)
            g[d2 + 16 >> 2] = l2 + i2;
          else
            g[d2 >> 2] = l2 + (q2 - f2);
          i2 = +g[e2 + 4 >> 2];
          if (i2 > 0)
            g[d2 + 20 >> 2] = i2 + n2;
          else
            g[h2 >> 2] = i2 + m2;
          i2 = +g[e2 + 8 >> 2];
          if (i2 > 0)
            g[d2 + 24 >> 2] = i2 + p2;
          else
            g[d2 + 8 >> 2] = i2 + o2;
          h2 = Wg(a2, b2) | 0;
          a:
            do
              if (h2) {
                k2 = c[a2 + 8 >> 2] | 0;
                if ((k2 | 0) <= -1) {
                  h2 = c[a2 >> 2] | 0;
                  break;
                }
                if (k2) {
                  e2 = 0;
                  while (1) {
                    j2 = c[h2 + 32 >> 2] | 0;
                    e2 = e2 + 1 | 0;
                    if (!j2)
                      break a;
                    if ((e2 | 0) >= (k2 | 0)) {
                      h2 = j2;
                      break;
                    } else
                      h2 = j2;
                  }
                }
              } else
                h2 = 0;
            while (0);
          c[b2 >> 2] = c[d2 >> 2];
          c[b2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 12 >> 2] = c[d2 + 12 >> 2];
          c[b2 + 16 >> 2] = c[d2 + 16 >> 2];
          c[b2 + 20 >> 2] = c[d2 + 20 >> 2];
          c[b2 + 24 >> 2] = c[d2 + 24 >> 2];
          c[b2 + 28 >> 2] = c[d2 + 28 >> 2];
          Ze(a2, h2, b2);
          d2 = 1;
          return d2 | 0;
        }
        function Zg(a2, d2, e2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          ii(a2, d2, e2) | 0;
          c[d2 + 52 >> 2] = c[a2 + 48 >> 2];
          c[d2 + 56 >> 2] = c[a2 + 52 >> 2];
          c[d2 + 60 >> 2] = c[a2 + 56 >> 2];
          c[d2 + 64 >> 2] = c[a2 + 60 >> 2];
          c[d2 + 68 >> 2] = c[a2 + 64 >> 2];
          c[d2 + 72 >> 2] = c[a2 + 68 >> 2];
          c[d2 + 76 >> 2] = c[a2 + 72 >> 2];
          c[d2 + 80 >> 2] = c[a2 + 76 >> 2];
          c[d2 + 84 >> 2] = c[a2 + 80 >> 2];
          c[d2 + 88 >> 2] = c[a2 + 84 >> 2];
          c[d2 + 92 >> 2] = c[a2 + 88 >> 2];
          c[d2 + 96 >> 2] = c[a2 + 92 >> 2];
          c[d2 + 100 >> 2] = c[a2 + 96 >> 2];
          c[d2 + 104 >> 2] = c[a2 + 100 >> 2];
          c[d2 + 108 >> 2] = c[a2 + 104 >> 2];
          c[d2 + 112 >> 2] = c[a2 + 108 >> 2];
          c[d2 + 116 >> 2] = c[a2 + 112 >> 2];
          c[d2 + 120 >> 2] = c[a2 + 116 >> 2];
          c[d2 + 124 >> 2] = c[a2 + 120 >> 2];
          c[d2 + 128 >> 2] = c[a2 + 124 >> 2];
          c[d2 + 132 >> 2] = c[a2 + 128 >> 2];
          c[d2 + 136 >> 2] = c[a2 + 132 >> 2];
          c[d2 + 140 >> 2] = c[a2 + 136 >> 2];
          c[d2 + 144 >> 2] = c[a2 + 140 >> 2];
          c[d2 + 148 >> 2] = c[a2 + 144 >> 2];
          c[d2 + 152 >> 2] = c[a2 + 148 >> 2];
          c[d2 + 156 >> 2] = c[a2 + 152 >> 2];
          c[d2 + 160 >> 2] = c[a2 + 156 >> 2];
          c[d2 + 164 >> 2] = c[a2 + 160 >> 2];
          c[d2 + 168 >> 2] = c[a2 + 164 >> 2];
          c[d2 + 172 >> 2] = c[a2 + 168 >> 2];
          c[d2 + 176 >> 2] = c[a2 + 172 >> 2];
          c[d2 + 228 >> 2] = c[a2 + 868 >> 2];
          c[d2 + 212 >> 2] = c[a2 + 872 >> 2];
          c[d2 + 196 >> 2] = c[a2 + 680 >> 2];
          c[d2 + 180 >> 2] = c[a2 + 696 >> 2];
          c[d2 + 232 >> 2] = c[a2 + 932 >> 2];
          c[d2 + 216 >> 2] = c[a2 + 936 >> 2];
          c[d2 + 200 >> 2] = c[a2 + 684 >> 2];
          c[d2 + 184 >> 2] = c[a2 + 700 >> 2];
          c[d2 + 236 >> 2] = c[a2 + 996 >> 2];
          c[d2 + 220 >> 2] = c[a2 + 1e3 >> 2];
          c[d2 + 204 >> 2] = c[a2 + 688 >> 2];
          c[d2 + 188 >> 2] = c[a2 + 704 >> 2];
          e2 = b[a2 + 1300 >> 1] | 0;
          c[d2 + 244 >> 2] = e2 & 255;
          c[d2 + 248 >> 2] = (e2 & 65535) >>> 8 & 65535;
          return 12001;
        }
        function _g(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          m2 = i;
          i = i + 32 | 0;
          k2 = (a[b2 + 68 >> 0] | 0) != 0;
          l2 = k2 ? e2 : d2;
          k2 = k2 ? d2 : e2;
          h2 = c[l2 + 4 >> 2] | 0;
          j2 = c[h2 + 20 >> 2] | 0;
          g2 = c[b2 + 52 >> 2] | 0;
          if ((g2 | 0) < (j2 | 0)) {
            if ((c[b2 + 56 >> 2] | 0) < (j2 | 0)) {
              if (!j2) {
                d2 = 0;
                f2 = g2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                f2 = c[b2 + 52 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                e2 = 0;
                do {
                  c[d2 + (e2 << 2) >> 2] = c[(c[b2 + 60 >> 2] | 0) + (e2 << 2) >> 2];
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != (f2 | 0));
              }
              e2 = c[b2 + 60 >> 2] | 0;
              if (e2 | 0) {
                if (a[b2 + 64 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[e2 + -4 >> 2] | 0);
                }
                c[b2 + 60 >> 2] = 0;
              }
              a[b2 + 64 >> 0] = 1;
              c[b2 + 60 >> 2] = d2;
              c[b2 + 56 >> 2] = j2;
              e2 = b2 + 60 | 0;
            } else
              e2 = b2 + 60 | 0;
            d2 = g2;
            do {
              c[(c[e2 >> 2] | 0) + (d2 << 2) >> 2] = 0;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (j2 | 0));
          }
          c[b2 + 52 >> 2] = j2;
          if ((j2 | 0) <= 0) {
            i = m2;
            return;
          }
          d2 = 0;
          do {
            if (!(c[h2 + 68 >> 2] | 0)) {
              e2 = c[(c[h2 + 28 >> 2] | 0) + (d2 * 80 | 0) + 64 >> 2] | 0;
              f2 = c[l2 + 8 >> 2] | 0;
              g2 = c[l2 + 12 >> 2] | 0;
              c[m2 >> 2] = l2;
              c[m2 + 4 >> 2] = e2;
              c[m2 + 8 >> 2] = f2;
              c[m2 + 12 >> 2] = g2;
              c[m2 + 16 >> 2] = -1;
              c[m2 + 20 >> 2] = d2;
              g2 = c[b2 + 4 >> 2] | 0;
              g2 = sb[c[(c[g2 >> 2] | 0) + 8 >> 2] & 31](g2, m2, k2, c[b2 + 72 >> 2] | 0) | 0;
              c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] = g2;
            } else
              c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] = 0;
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != (j2 | 0));
          i = m2;
          return;
        }
        function $g() {
          var a2 = 0, b2 = 0, d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          a2 = ic(219) | 0;
          if (!a2)
            a2 = 0;
          else {
            c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
            a2 = a2 + 4 + 15 & -16;
          }
          Fl();
          Fl();
          c[a2 >> 2] = 2948;
          b2 = a2 + 52 | 0;
          d2 = a2 + 4 | 0;
          c[d2 >> 2] = c[5561];
          c[d2 + 4 >> 2] = c[5562];
          c[d2 + 8 >> 2] = c[5563];
          c[d2 + 12 >> 2] = c[5564];
          d2 = a2 + 20 | 0;
          c[d2 >> 2] = c[5565];
          c[d2 + 4 >> 2] = c[5566];
          c[d2 + 8 >> 2] = c[5567];
          c[d2 + 12 >> 2] = c[5568];
          d2 = a2 + 36 | 0;
          c[d2 >> 2] = c[5569];
          c[d2 + 4 >> 2] = c[5570];
          c[d2 + 8 >> 2] = c[5571];
          c[d2 + 12 >> 2] = c[5572];
          c[b2 >> 2] = c[5573];
          c[b2 + 4 >> 2] = c[5574];
          c[b2 + 8 >> 2] = c[5575];
          c[b2 + 12 >> 2] = c[5576];
          b2 = a2 + 116 | 0;
          d2 = a2 + 68 | 0;
          c[d2 >> 2] = c[5561];
          c[d2 + 4 >> 2] = c[5562];
          c[d2 + 8 >> 2] = c[5563];
          c[d2 + 12 >> 2] = c[5564];
          d2 = a2 + 84 | 0;
          c[d2 >> 2] = c[5565];
          c[d2 + 4 >> 2] = c[5566];
          c[d2 + 8 >> 2] = c[5567];
          c[d2 + 12 >> 2] = c[5568];
          d2 = a2 + 100 | 0;
          c[d2 >> 2] = c[5569];
          c[d2 + 4 >> 2] = c[5570];
          c[d2 + 8 >> 2] = c[5571];
          c[d2 + 12 >> 2] = c[5572];
          c[b2 >> 2] = c[5573];
          c[b2 + 4 >> 2] = c[5574];
          c[b2 + 8 >> 2] = c[5575];
          c[b2 + 12 >> 2] = c[5576];
          b2 = a2 + 180 | 0;
          d2 = a2 + 132 | 0;
          c[d2 >> 2] = c[5561];
          c[d2 + 4 >> 2] = c[5562];
          c[d2 + 8 >> 2] = c[5563];
          c[d2 + 12 >> 2] = c[5564];
          d2 = a2 + 148 | 0;
          c[d2 >> 2] = c[5565];
          c[d2 + 4 >> 2] = c[5566];
          c[d2 + 8 >> 2] = c[5567];
          c[d2 + 12 >> 2] = c[5568];
          d2 = a2 + 164 | 0;
          c[d2 >> 2] = c[5569];
          c[d2 + 4 >> 2] = c[5570];
          c[d2 + 8 >> 2] = c[5571];
          c[d2 + 12 >> 2] = c[5572];
          c[b2 >> 2] = c[5573];
          c[b2 + 4 >> 2] = c[5574];
          c[b2 + 8 >> 2] = c[5575];
          c[b2 + 12 >> 2] = c[5576];
          c[a2 + 196 >> 2] = 0;
          return a2 | 0;
        }
        function ah(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          e2 = c[b2 + 32 >> 2] | 0;
          if (!e2)
            f2 = 0;
          else
            f2 = c[b2 + 40 >> 2] | 0;
          i2 = c[b2 + 52 >> 2] | 0;
          if (!i2)
            g2 = 0;
          else
            g2 = c[b2 + 60 >> 2] | 0;
          d2 = c[b2 + 72 >> 2] | 0;
          if (!d2)
            h2 = 0;
          else
            h2 = c[b2 + 80 >> 2] | 0;
          j2 = c[b2 + 8 >> 2] | 0;
          +Lb[c[(c[j2 >> 2] | 0) + 12 >> 2] & 3](j2, f2, e2, g2, i2, h2, d2, c[b2 + 4 >> 2] | 0, c[b2 + 20 >> 2] | 0, c[b2 + 24 >> 2] | 0);
          d2 = c[b2 + 32 >> 2] | 0;
          if ((d2 | 0) < 0) {
            if ((c[b2 + 36 >> 2] | 0) < 0) {
              e2 = c[b2 + 40 >> 2] | 0;
              if (e2 | 0) {
                if (a[b2 + 44 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[e2 + -4 >> 2] | 0);
                }
                c[b2 + 40 >> 2] = 0;
              }
              a[b2 + 44 >> 0] = 1;
              c[b2 + 40 >> 2] = 0;
              c[b2 + 36 >> 2] = 0;
            }
            do {
              c[(c[b2 + 40 >> 2] | 0) + (d2 << 2) >> 2] = 0;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != 0);
          }
          c[b2 + 32 >> 2] = 0;
          d2 = c[b2 + 52 >> 2] | 0;
          if ((d2 | 0) < 0) {
            if ((c[b2 + 56 >> 2] | 0) < 0) {
              e2 = c[b2 + 60 >> 2] | 0;
              if (e2 | 0) {
                if (a[b2 + 64 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[e2 + -4 >> 2] | 0);
                }
                c[b2 + 60 >> 2] = 0;
              }
              a[b2 + 64 >> 0] = 1;
              c[b2 + 60 >> 2] = 0;
              c[b2 + 56 >> 2] = 0;
            }
            do {
              c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] = 0;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != 0);
          }
          c[b2 + 52 >> 2] = 0;
          d2 = c[b2 + 72 >> 2] | 0;
          if ((d2 | 0) >= 0) {
            c[b2 + 72 >> 2] = 0;
            return;
          }
          if ((c[b2 + 76 >> 2] | 0) < 0) {
            e2 = c[b2 + 80 >> 2] | 0;
            if (e2 | 0) {
              if (a[b2 + 84 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[e2 + -4 >> 2] | 0);
              }
              c[b2 + 80 >> 2] = 0;
            }
            a[b2 + 84 >> 0] = 1;
            c[b2 + 80 >> 2] = 0;
            c[b2 + 76 >> 2] = 0;
          }
          do {
            c[(c[b2 + 80 >> 2] | 0) + (d2 << 2) >> 2] = 0;
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != 0);
          c[b2 + 72 >> 2] = 0;
          return;
        }
        function bh(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(39) | 0;
          if (!d2)
            g2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            g2 = d2 + 4 + 15 & -16;
          }
          h2 = g2;
          c[g2 >> 2] = 0;
          c[g2 + 4 >> 2] = 0;
          c[g2 + 8 >> 2] = 0;
          c[g2 + 12 >> 2] = 0;
          c[g2 + 16 >> 2] = 0;
          if ((c[b2 + 912 >> 2] | 0) > 0) {
            i2 = c[c[b2 + 920 >> 2] >> 2] | 0;
            c[g2 >> 2] = c[i2 >> 2];
            c[g2 + 4 >> 2] = c[i2 + 4 >> 2];
            c[g2 + 8 >> 2] = c[i2 + 8 >> 2];
            c[g2 + 12 >> 2] = c[i2 + 12 >> 2];
            c[g2 + 16 >> 2] = c[i2 + 16 >> 2];
          } else {
            c[g2 >> 2] = 0;
            c[g2 + 4 >> 2] = 0;
            c[g2 + 8 >> 2] = 0;
            c[g2 + 12 >> 2] = 0;
            c[g2 + 16 >> 2] = 0;
          }
          e2 = c[b2 + 912 >> 2] | 0;
          if ((e2 | 0) != (c[b2 + 916 >> 2] | 0)) {
            i2 = e2;
            f2 = b2 + 920 | 0;
            f2 = c[f2 >> 2] | 0;
            f2 = f2 + (i2 << 2) | 0;
            c[f2 >> 2] = h2;
            i2 = i2 + 1 | 0;
            c[b2 + 912 >> 2] = i2;
            return g2 | 0;
          }
          i2 = e2 | 0 ? e2 << 1 : 1;
          if ((e2 | 0) >= (i2 | 0)) {
            i2 = e2;
            f2 = b2 + 920 | 0;
            f2 = c[f2 >> 2] | 0;
            f2 = f2 + (i2 << 2) | 0;
            c[f2 >> 2] = h2;
            i2 = i2 + 1 | 0;
            c[b2 + 912 >> 2] = i2;
            return g2 | 0;
          }
          if (!i2)
            d2 = 0;
          else {
            c[6324] = (c[6324] | 0) + 1;
            d2 = ic((i2 << 2 | 3) + 16 | 0) | 0;
            if (!d2)
              d2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              d2 = d2 + 4 + 15 & -16;
            }
            e2 = c[b2 + 912 >> 2] | 0;
          }
          if ((e2 | 0) > 0) {
            f2 = 0;
            do {
              c[d2 + (f2 << 2) >> 2] = c[(c[b2 + 920 >> 2] | 0) + (f2 << 2) >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (e2 | 0));
          }
          f2 = c[b2 + 920 >> 2] | 0;
          if (f2) {
            if (a[b2 + 924 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[f2 + -4 >> 2] | 0);
              e2 = c[b2 + 912 >> 2] | 0;
            }
            c[b2 + 920 >> 2] = 0;
          }
          a[b2 + 924 >> 0] = 1;
          c[b2 + 920 >> 2] = d2;
          c[b2 + 916 >> 2] = i2;
          i2 = e2;
          f2 = b2 + 920 | 0;
          f2 = c[f2 >> 2] | 0;
          f2 = f2 + (i2 << 2) | 0;
          c[f2 >> 2] = h2;
          i2 = i2 + 1 | 0;
          c[b2 + 912 >> 2] = i2;
          return g2 | 0;
        }
        function ch() {
          var b2 = 0, d2 = 0, e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(347) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          c[b2 >> 2] = 5592;
          c[b2 + 164 >> 2] = 1065353216;
          c[b2 + 168 >> 2] = 1065353216;
          c[b2 + 172 >> 2] = 1065353216;
          g[b2 + 176 >> 2] = 0;
          c[b2 + 180 >> 2] = 0;
          g[b2 + 184 >> 2] = 999999984306749400;
          d2 = b2 + 188 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[b2 + 204 >> 2] = 1;
          c[b2 + 208 >> 2] = -1;
          c[b2 + 212 >> 2] = -1;
          c[b2 + 216 >> 2] = 1;
          g[b2 + 220 >> 2] = 0;
          g[b2 + 224 >> 2] = 0.5;
          g[b2 + 228 >> 2] = 0;
          g[b2 + 232 >> 2] = 0;
          g[b2 + 236 >> 2] = 0;
          g[b2 + 240 >> 2] = 0.10000000149011612;
          g[b2 + 244 >> 2] = 1e4;
          c[b2 + 252 >> 2] = 0;
          c[b2 + 256 >> 2] = -1;
          c[b2 + 260 >> 2] = -1;
          g[b2 + 264 >> 2] = 1;
          g[b2 + 268 >> 2] = 0;
          g[b2 + 272 >> 2] = 0;
          c[b2 + 276 >> 2] = 0;
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          c[b2 + 288 >> 2] = 0;
          c[b2 + 300 >> 2] = 0;
          c[b2 + 4 >> 2] = 1065353216;
          d2 = b2 + 8 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[b2 + 24 >> 2] = 1065353216;
          d2 = b2 + 28 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[b2 + 44 >> 2] = 1065353216;
          d2 = b2 + 48 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[d2 + 16 >> 2] = 0;
          a[b2 + 320 >> 0] = 1;
          c[b2 + 316 >> 2] = 0;
          c[b2 + 308 >> 2] = 0;
          c[b2 + 312 >> 2] = 0;
          c[b2 + 248 >> 2] = 4;
          c[b2 >> 2] = 6340;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(91) | 0;
          if (!d2) {
            e2 = 0;
            Hi(e2);
            d2 = b2 + 324 | 0;
            c[d2 >> 2] = e2;
            return b2 | 0;
          }
          c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
          d2 = d2 + 4 + 15 & -16;
          Hi(d2);
          e2 = b2 + 324 | 0;
          c[e2 >> 2] = d2;
          return b2 | 0;
        }
        function dh(b2, d2) {
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          e2 = c[b2 + 232 >> 2] | 0;
          if ((e2 | 0) <= 0)
            return;
          k2 = (a[25816] | 0) == 0;
          j2 = 0;
          do {
            i2 = c[(c[b2 + 240 >> 2] | 0) + (j2 << 2) >> 2] | 0;
            a:
              do
                if (i2) {
                  f2 = c[i2 + 216 >> 2] | 0;
                  b:
                    do
                      switch (f2 | 0) {
                        case 4:
                        case 2: {
                          if ((f2 | 0) == 4)
                            break a;
                          break;
                        }
                        default: {
                          o2 = +g[i2 + 352 >> 2];
                          n2 = +g[i2 + 356 >> 2];
                          m2 = +g[i2 + 360 >> 2];
                          l2 = +g[i2 + 512 >> 2];
                          if (o2 * o2 + n2 * n2 + m2 * m2 < l2 * l2 ? (l2 = +g[i2 + 368 >> 2], m2 = +g[i2 + 372 >> 2], n2 = +g[i2 + 376 >> 2], o2 = +g[i2 + 516 >> 2], l2 * l2 + m2 * m2 + n2 * n2 < o2 * o2) : 0) {
                            g[i2 + 220 >> 2] = +g[i2 + 220 >> 2] + d2;
                            break b;
                          }
                          g[i2 + 220 >> 2] = 0;
                          if ((f2 & -2 | 0) != 4) {
                            c[i2 + 216 >> 2] = 0;
                            f2 = 0;
                          }
                        }
                      }
                    while (0);
                  h2 = f2 & -2;
                  do
                    if (k2) {
                      if ((h2 | 0) != 2 ? !(+g[i2 + 220 >> 2] > 2) : 0)
                        break;
                      if (c[i2 + 204 >> 2] & 3 | 0) {
                        if ((h2 | 0) == 4)
                          break a;
                        c[i2 + 216 >> 2] = 2;
                        break a;
                      }
                      if ((f2 | 0) == 1) {
                        if ((h2 | 0) == 4)
                          break a;
                        c[i2 + 216 >> 2] = 3;
                        break a;
                      } else {
                        if ((f2 | 0) != 2)
                          break a;
                        e2 = (c[i2 + 300 >> 2] | 0) + 2 | 0;
                        c[i2 + 368 >> 2] = 0;
                        c[i2 + 368 + 4 >> 2] = 0;
                        c[i2 + 368 + 8 >> 2] = 0;
                        c[i2 + 368 + 12 >> 2] = 0;
                        c[i2 + 300 >> 2] = e2;
                        c[i2 + 352 >> 2] = 0;
                        c[i2 + 352 + 4 >> 2] = 0;
                        c[i2 + 352 + 8 >> 2] = 0;
                        c[i2 + 352 + 12 >> 2] = 0;
                        e2 = c[b2 + 232 >> 2] | 0;
                        break a;
                      }
                    }
                  while (0);
                  if ((h2 | 0) != 4)
                    c[i2 + 216 >> 2] = 1;
                }
              while (0);
            j2 = j2 + 1 | 0;
          } while ((j2 | 0) < (e2 | 0));
          return;
        }
        function eh(a2, b2, d2, e2, f2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          Yb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2, f2, h2);
          n2 = c[h2 >> 2] | 0;
          j2 = c[h2 + 4 >> 2] | 0;
          b2 = c[h2 + 8 >> 2] | 0;
          k2 = c[f2 >> 2] | 0;
          o2 = c[f2 + 4 >> 2] | 0;
          i2 = c[f2 + 8 >> 2] | 0;
          m2 = +g[d2 >> 2];
          p2 = +g[d2 + 4 >> 2];
          q2 = +g[d2 + 8 >> 2];
          if (m2 > 0)
            n2 = (g[l >> 2] = (c[l >> 2] = n2, +g[l >> 2]) + m2, c[l >> 2] | 0);
          else
            k2 = (g[l >> 2] = (c[l >> 2] = k2, +g[l >> 2]) + m2, c[l >> 2] | 0);
          if (p2 > 0) {
            d2 = o2;
            j2 = (g[l >> 2] = (c[l >> 2] = j2, +g[l >> 2]) + p2, c[l >> 2] | 0);
          } else
            d2 = (g[l >> 2] = (c[l >> 2] = o2, +g[l >> 2]) + p2, c[l >> 2] | 0);
          if (q2 > 0)
            b2 = (g[l >> 2] = (c[l >> 2] = b2, +g[l >> 2]) + q2, c[l >> 2] | 0);
          else
            i2 = (g[l >> 2] = (c[l >> 2] = i2, +g[l >> 2]) + q2, c[l >> 2] | 0);
          m2 = +g[e2 >> 2];
          p2 = +g[e2 + 4 >> 2];
          q2 = +g[e2 + 8 >> 2];
          q2 = +G(+(m2 * m2 + p2 * p2 + q2 * q2));
          q2 = q2 * +Cb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 15](a2);
          c[f2 >> 2] = k2;
          c[f2 + 4 >> 2] = d2;
          c[f2 + 8 >> 2] = i2;
          g[f2 + 12 >> 2] = 0;
          c[h2 >> 2] = n2;
          c[h2 + 4 >> 2] = j2;
          c[h2 + 8 >> 2] = b2;
          g[h2 + 12 >> 2] = 0;
          g[f2 >> 2] = +g[f2 >> 2] - q2;
          g[f2 + 4 >> 2] = +g[f2 + 4 >> 2] - q2;
          g[f2 + 8 >> 2] = +g[f2 + 8 >> 2] - q2;
          g[h2 >> 2] = q2 + +g[h2 >> 2];
          g[h2 + 4 >> 2] = q2 + +g[h2 + 4 >> 2];
          g[h2 + 8 >> 2] = q2 + +g[h2 + 8 >> 2];
          return;
        }
        function fh(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          j2 = c[b2 + 752 >> 2] | 0;
          if (e2) {
            if ((j2 | 0) > 0) {
              f2 = c[b2 + 760 >> 2] | 0;
              e2 = 0;
              do {
                g[f2 + (e2 * 104 | 0) + 88 >> 2] = 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (j2 | 0));
            }
            i2 = c[b2 + 792 >> 2] | 0;
            if ((i2 | 0) > 0) {
              f2 = c[b2 + 800 >> 2] | 0;
              e2 = 0;
              do {
                m2 = c[f2 + (e2 * 44 | 0) + 8 >> 2] | 0;
                l2 = c[f2 + (e2 * 44 | 0) + 12 >> 2] | 0;
                k2 = c[f2 + (e2 * 44 | 0) + 16 >> 2] | 0;
                o2 = +g[m2 + 8 >> 2];
                q2 = +g[m2 + 12 >> 2];
                h2 = +g[m2 + 16 >> 2];
                n2 = +g[l2 + 8 >> 2] - o2;
                r2 = +g[l2 + 12 >> 2] - q2;
                p2 = +g[l2 + 16 >> 2] - h2;
                o2 = +g[k2 + 8 >> 2] - o2;
                q2 = +g[k2 + 12 >> 2] - q2;
                h2 = +g[k2 + 16 >> 2] - h2;
                h2 = +G(+((n2 * q2 - r2 * o2) * (n2 * q2 - r2 * o2) + ((r2 * h2 - p2 * q2) * (r2 * h2 - p2 * q2) + (p2 * o2 - n2 * h2) * (p2 * o2 - n2 * h2))));
                g[m2 + 88 >> 2] = h2 + +g[m2 + 88 >> 2];
                g[l2 + 88 >> 2] = h2 + +g[l2 + 88 >> 2];
                g[k2 + 88 >> 2] = h2 + +g[k2 + 88 >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (i2 | 0));
            }
            if ((j2 | 0) <= 0) {
              m2 = b2 + 964 | 0;
              a[m2 >> 0] = 1;
              return;
            }
            f2 = c[b2 + 760 >> 2] | 0;
            e2 = 0;
            do {
              m2 = f2 + (e2 * 104 | 0) + 88 | 0;
              g[m2 >> 2] = 1 / +g[m2 >> 2];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (j2 | 0));
          }
          if ((j2 | 0) <= 0) {
            m2 = b2 + 964 | 0;
            a[m2 >> 0] = 1;
            return;
          }
          f2 = c[b2 + 760 >> 2] | 0;
          e2 = 0;
          h2 = 0;
          do {
            r2 = +g[f2 + (e2 * 104 | 0) + 88 >> 2];
            h2 = h2 + (r2 > 0 ? 1 / r2 : 0);
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) != (j2 | 0));
          h2 = 1 / h2 * d2;
          e2 = 0;
          do {
            m2 = f2 + (e2 * 104 | 0) + 88 | 0;
            g[m2 >> 2] = +g[m2 >> 2] / h2;
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) != (j2 | 0));
          m2 = b2 + 964 | 0;
          a[m2 >> 0] = 1;
          return;
        }
        function gh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          n2 = i;
          i = i + 112 | 0;
          m2 = c[d2 + 4 >> 2] | 0;
          k2 = n2;
          l2 = k2 + 100 | 0;
          do {
            c[k2 >> 2] = 0;
            k2 = k2 + 4 | 0;
          } while ((k2 | 0) < (l2 | 0));
          h2 = c[b2 + 752 >> 2] | 0;
          a:
            do
              if ((h2 | 0) > (m2 | 0))
                e2 = b2 + 760 | 0;
              else {
                if ((h2 | 0) < (m2 | 0) ? (c[b2 + 756 >> 2] | 0) < (m2 | 0) : 0) {
                  if ((m2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, e2 = ic((m2 * 104 | 3) + 16 | 0) | 0, (e2 | 0) != 0) : 0) {
                    c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                    g2 = e2 + 4 + 15 & -16;
                  } else
                    g2 = 0;
                  f2 = c[b2 + 752 >> 2] | 0;
                  e2 = 0;
                  while (1) {
                    if ((e2 | 0) >= (f2 | 0))
                      break;
                    k2 = g2 + (e2 * 104 | 0) | 0;
                    j2 = (c[b2 + 760 >> 2] | 0) + (e2 * 104 | 0) | 0;
                    l2 = k2 + 104 | 0;
                    do {
                      c[k2 >> 2] = c[j2 >> 2];
                      k2 = k2 + 4 | 0;
                      j2 = j2 + 4 | 0;
                    } while ((k2 | 0) < (l2 | 0));
                    e2 = e2 + 1 | 0;
                  }
                  e2 = c[b2 + 760 >> 2] | 0;
                  if (e2 | 0) {
                    if (!((a[b2 + 764 >> 0] & 1) == 0 | (e2 | 0) == 0)) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[e2 + -4 >> 2] | 0);
                    }
                    c[b2 + 760 >> 2] = 0;
                  }
                  a[b2 + 764 >> 0] = 1;
                  c[b2 + 760 >> 2] = g2;
                  c[b2 + 756 >> 2] = m2;
                }
                e2 = h2;
                while (1) {
                  if ((e2 | 0) >= (m2 | 0)) {
                    e2 = b2 + 760 | 0;
                    break a;
                  }
                  k2 = c[b2 + 760 >> 2] | 0;
                  c[k2 + (e2 * 104 | 0) >> 2] = 0;
                  k2 = k2 + (e2 * 104 | 0) + 4 | 0;
                  j2 = n2;
                  l2 = k2 + 100 | 0;
                  do {
                    c[k2 >> 2] = c[j2 >> 2];
                    k2 = k2 + 4 | 0;
                    j2 = j2 + 4 | 0;
                  } while ((k2 | 0) < (l2 | 0));
                  e2 = e2 + 1 | 0;
                }
              }
            while (0);
          c[b2 + 752 >> 2] = m2;
          f2 = c[e2 >> 2] | 0;
          e2 = 0;
          while (1) {
            if ((e2 | 0) >= (m2 | 0))
              break;
            k2 = f2 + (e2 * 104 | 0) | 0;
            j2 = (c[d2 + 12 >> 2] | 0) + (e2 * 104 | 0) | 0;
            l2 = k2 + 104 | 0;
            do {
              c[k2 >> 2] = c[j2 >> 2];
              k2 = k2 + 4 | 0;
              j2 = j2 + 4 | 0;
            } while ((k2 | 0) < (l2 | 0));
            e2 = e2 + 1 | 0;
          }
          i = n2;
          return;
        }
        function hh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          e2 = c[b2 + 4 >> 2] | 0;
          if ((e2 | 0) == (c[b2 + 8 >> 2] | 0)) {
            vf(b2, e2 | 0 ? e2 << 1 : 1);
            e2 = c[b2 + 4 >> 2] | 0;
          }
          j2 = (c[b2 + 12 >> 2] | 0) + (e2 * 36 | 0) | 0;
          a[j2 + 16 >> 0] = 1;
          c[j2 + 12 >> 2] = 0;
          c[j2 + 4 >> 2] = 0;
          c[j2 + 8 >> 2] = 0;
          k2 = c[d2 + 4 >> 2] | 0;
          if ((k2 | 0) <= 0) {
            c[j2 + 4 >> 2] = k2;
            k2 = j2 + 20 | 0;
            d2 = d2 + 20 | 0;
            c[k2 >> 2] = c[d2 >> 2];
            c[k2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[k2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[k2 + 12 >> 2] = c[d2 + 12 >> 2];
            d2 = c[b2 + 4 >> 2] | 0;
            d2 = d2 + 1 | 0;
            c[b2 + 4 >> 2] = d2;
            return;
          }
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic((k2 << 2 | 3) + 16 | 0) | 0;
          if (!e2)
            f2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            f2 = e2 + 4 + 15 & -16;
          }
          g2 = c[j2 + 4 >> 2] | 0;
          h2 = c[j2 + 12 >> 2] | 0;
          if ((g2 | 0) <= 0)
            if (!h2) {
              a[j2 + 16 >> 0] = 1;
              c[j2 + 12 >> 2] = f2;
              c[j2 + 8 >> 2] = k2;
              yn(f2 | 0, 0, k2 << 2 | 0) | 0;
            } else
              i2 = 11;
          else {
            e2 = 0;
            do {
              c[f2 + (e2 << 2) >> 2] = c[h2 + (e2 << 2) >> 2];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (g2 | 0));
            i2 = 11;
          }
          if ((i2 | 0) == 11) {
            if (a[j2 + 16 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[h2 + -4 >> 2] | 0);
            }
            a[j2 + 16 >> 0] = 1;
            c[j2 + 12 >> 2] = f2;
            c[j2 + 8 >> 2] = k2;
            yn(f2 | 0, 0, k2 << 2 | 0) | 0;
          }
          f2 = c[j2 + 12 >> 2] | 0;
          c[j2 + 4 >> 2] = k2;
          g2 = c[d2 + 12 >> 2] | 0;
          e2 = 0;
          do {
            c[f2 + (e2 << 2) >> 2] = c[g2 + (e2 << 2) >> 2];
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) != (k2 | 0));
          k2 = j2 + 20 | 0;
          d2 = d2 + 20 | 0;
          c[k2 >> 2] = c[d2 >> 2];
          c[k2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[k2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[k2 + 12 >> 2] = c[d2 + 12 >> 2];
          d2 = c[b2 + 4 >> 2] | 0;
          d2 = d2 + 1 | 0;
          c[b2 + 4 >> 2] = d2;
          return;
        }
        function ih(a2, d2, f2, g2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          i2 = c[a2 + 68 + (d2 << 2) >> 2] | 0;
          j2 = b[i2 + ((f2 & 65535) << 2) + -4 >> 1] | 0;
          if ((e[i2 + ((f2 & 65535) << 2) >> 1] | 0) >= (j2 & 65535))
            return;
          l2 = c[a2 + 60 >> 2] | 0;
          m2 = l2 + ((e[i2 + ((f2 & 65535) << 2) + 2 >> 1] | 0) << 6) + 54 + (d2 << 1) | 0;
          h2 = i2 + ((f2 & 65535) << 2) + -4 | 0;
          f2 = i2 + ((f2 & 65535) << 2) | 0;
          while (1) {
            k2 = e[f2 + -2 >> 1] | 0;
            if (!(j2 & 1)) {
              i2 = e[f2 + 2 >> 1] | 0;
              if (((((e[l2 + (i2 << 6) + 54 + ((1 << d2 & 3) << 1) >> 1] | 0) >= (e[l2 + (k2 << 6) + 48 + ((1 << d2 & 3) << 1) >> 1] | 0) ? (e[l2 + (k2 << 6) + 54 + ((1 << d2 & 3) << 1) >> 1] | 0) >= (e[l2 + (i2 << 6) + 48 + ((1 << d2 & 3) << 1) >> 1] | 0) : 0) ? (e[l2 + (i2 << 6) + 54 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) >= (e[l2 + (k2 << 6) + 48 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) : 0) ? (e[l2 + (k2 << 6) + 54 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) >= (e[l2 + (i2 << 6) + 48 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) : 0) ? (p2 = c[a2 + 92 >> 2] | 0, n2 = l2 + (i2 << 6) | 0, o2 = l2 + (k2 << 6) | 0, sb[c[(c[p2 >> 2] | 0) + 12 >> 2] & 31](p2, n2, o2, g2) | 0, p2 = c[a2 + 96 >> 2] | 0, p2 | 0) : 0)
                sb[c[(c[p2 >> 2] | 0) + 12 >> 2] & 31](p2, n2, o2, g2) | 0;
              l2 = l2 + (k2 << 6) + 48 + (d2 << 1) | 0;
              b[l2 >> 1] = (b[l2 >> 1] | 0) + 1 << 16 >> 16;
            } else {
              l2 = l2 + (k2 << 6) + 54 + (d2 << 1) | 0;
              b[l2 >> 1] = (b[l2 >> 1] | 0) + 1 << 16 >> 16;
            }
            b[m2 >> 1] = (b[m2 >> 1] | 0) + -1 << 16 >> 16;
            j2 = e[f2 >> 1] | e[f2 + 2 >> 1] << 16;
            l2 = e[h2 >> 1] | e[h2 + 2 >> 1] << 16;
            b[f2 >> 1] = l2;
            b[f2 + 2 >> 1] = l2 >>> 16;
            b[h2 >> 1] = j2;
            b[h2 + 2 >> 1] = j2 >>> 16;
            f2 = f2 + -4 | 0;
            h2 = h2 + -4 | 0;
            j2 = b[h2 >> 1] | 0;
            if ((e[f2 >> 1] | 0) >= (j2 & 65535))
              break;
            l2 = c[a2 + 60 >> 2] | 0;
          }
          return;
        }
        function jh(a2, b2) {
          a2 = +a2;
          b2 = +b2;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, m2 = 0;
          k2 = (g[l >> 2] = a2, c[l >> 2] | 0);
          i2 = (g[l >> 2] = b2, c[l >> 2] | 0);
          a:
            do
              if ((i2 << 1 | 0) != 0 ? !((i2 & 2147483647) >>> 0 > 2139095040 | (k2 >>> 23 & 255 | 0) == 255) : 0) {
                if (k2 << 1 >>> 0 <= i2 << 1 >>> 0)
                  return +((k2 << 1 | 0) == (i2 << 1 | 0) ? a2 * 0 : a2);
                if (!(k2 >>> 23 & 255)) {
                  if ((k2 << 9 | 0) > -1) {
                    e2 = k2 << 9;
                    d2 = 0;
                    do {
                      d2 = d2 + -1 | 0;
                      e2 = e2 << 1;
                    } while ((e2 | 0) > -1);
                  } else
                    d2 = 0;
                  e2 = k2 << 1 - d2;
                } else {
                  e2 = k2 & 8388607 | 8388608;
                  d2 = k2 >>> 23 & 255;
                }
                if (!(i2 >>> 23 & 255)) {
                  if ((i2 << 9 | 0) > -1) {
                    f2 = 0;
                    h2 = i2 << 9;
                    do {
                      f2 = f2 + -1 | 0;
                      h2 = h2 << 1;
                    } while ((h2 | 0) > -1);
                  } else
                    f2 = 0;
                  j2 = f2;
                  i2 = i2 << 1 - f2;
                } else {
                  j2 = i2 >>> 23 & 255;
                  i2 = i2 & 8388607 | 8388608;
                }
                f2 = e2 - i2 | 0;
                b:
                  do
                    if ((d2 | 0) > (j2 | 0)) {
                      h2 = f2;
                      f2 = (f2 | 0) > -1;
                      while (1) {
                        if (f2)
                          if (!h2)
                            break;
                          else
                            e2 = h2;
                        e2 = e2 << 1;
                        d2 = d2 + -1 | 0;
                        f2 = e2 - i2 | 0;
                        if ((d2 | 0) > (j2 | 0)) {
                          h2 = f2;
                          f2 = (f2 | 0) > -1;
                        } else {
                          h2 = (f2 | 0) > -1;
                          break b;
                        }
                      }
                      b2 = a2 * 0;
                      break a;
                    } else
                      h2 = (f2 | 0) > -1;
                  while (0);
                if (h2)
                  if (!f2) {
                    b2 = a2 * 0;
                    break;
                  } else
                    e2 = f2;
                if (e2 >>> 0 < 8388608)
                  do {
                    e2 = e2 << 1;
                    d2 = d2 + -1 | 0;
                  } while (e2 >>> 0 < 8388608);
                if ((d2 | 0) > 0)
                  d2 = e2 + -8388608 | d2 << 23;
                else
                  d2 = e2 >>> (1 - d2 | 0);
                b2 = (c[l >> 2] = d2 | k2 & -2147483648, +g[l >> 2]);
              } else
                m2 = 3;
            while (0);
          if ((m2 | 0) == 3)
            b2 = a2 * b2 / (a2 * b2);
          return +b2;
        }
        function kh(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          l2 = i;
          i = i + 64 | 0;
          if (!(a[b2 + 274 >> 0] | 0)) {
            d2 = c[b2 + 232 >> 2] | 0;
            if ((d2 | 0) <= 0) {
              i = l2;
              return;
            }
            h2 = 0;
            do {
              f2 = c[(c[b2 + 240 >> 2] | 0) + (h2 << 2) >> 2] | 0;
              switch (c[f2 + 216 >> 2] | 0) {
                case 2:
                case 5:
                  break;
                default:
                  if ((c[f2 + 520 >> 2] | 0) != 0 ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                    if ((a[b2 + 300 >> 0] | 0) != 0 ? (k2 = +g[b2 + 268 >> 2], k2 != 0) : 0)
                      e2 = +g[b2 + 264 >> 2] - k2;
                    else
                      e2 = +g[b2 + 264 >> 2] * +g[f2 + 264 >> 2];
                    Mg(f2 + 68 | 0, +g[f2 + 132 >> 2], +g[f2 + 136 >> 2], +g[f2 + 140 >> 2], f2 + 148 | 0, e2, l2);
                    d2 = c[f2 + 520 >> 2] | 0;
                    mb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2, l2);
                    d2 = c[b2 + 232 >> 2] | 0;
                  }
              }
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) < (d2 | 0));
            i = l2;
            return;
          } else {
            d2 = c[b2 + 8 >> 2] | 0;
            if ((d2 | 0) <= 0) {
              i = l2;
              return;
            }
            h2 = 0;
            do {
              f2 = c[(c[b2 + 16 >> 2] | 0) + (h2 << 2) >> 2] | 0;
              if ((!((f2 | 0) == 0 ? 1 : (c[f2 + 248 >> 2] & 2 | 0) == 0) ? (c[f2 + 520 >> 2] | 0) != 0 : 0) ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                if ((a[b2 + 300 >> 0] | 0) != 0 ? (j2 = +g[b2 + 268 >> 2], j2 != 0) : 0)
                  e2 = +g[b2 + 264 >> 2] - j2;
                else
                  e2 = +g[b2 + 264 >> 2] * +g[f2 + 264 >> 2];
                Mg(f2 + 68 | 0, +g[f2 + 132 >> 2], +g[f2 + 136 >> 2], +g[f2 + 140 >> 2], f2 + 148 | 0, e2, l2);
                d2 = c[f2 + 520 >> 2] | 0;
                mb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2, l2);
                d2 = c[b2 + 8 >> 2] | 0;
              }
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) < (d2 | 0));
            i = l2;
            return;
          }
        }
        function lh(b2, e2, f2, h2, i2, j2) {
          b2 = b2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          var k2 = 0;
          if ((d[h2 + 55 >> 0] | 0 | 0) == (e2 | 0)) {
            h2 = 0;
            return h2 | 0;
          }
          k2 = c[8796 + (i2 << 2) >> 2] | 0;
          if (+g[h2 >> 2] * +g[f2 + 16 >> 2] + +g[h2 + 4 >> 2] * +g[f2 + 20 >> 2] + +g[h2 + 8 >> 2] * +g[f2 + 24 >> 2] - +g[h2 + 16 >> 2] < -9999999747378752e-21) {
            e2 = _e(b2, c[h2 + 20 + (k2 << 2) >> 2] | 0, c[h2 + 20 + (i2 << 2) >> 2] | 0, f2, 0) | 0;
            if (!e2) {
              h2 = 0;
              return h2 | 0;
            }
            a[e2 + 52 >> 0] = i2;
            c[e2 + 32 >> 2] = h2;
            a[h2 + 52 + i2 >> 0] = 0;
            c[h2 + 32 + (i2 << 2) >> 2] = e2;
            i2 = c[j2 >> 2] | 0;
            if (!i2)
              c[j2 + 4 >> 2] = e2;
            else {
              a[i2 + 53 >> 0] = 2;
              c[i2 + 36 >> 2] = e2;
              a[e2 + 54 >> 0] = 1;
              c[e2 + 40 >> 2] = i2;
            }
            c[j2 >> 2] = e2;
            c[j2 + 8 >> 2] = (c[j2 + 8 >> 2] | 0) + 1;
            h2 = 1;
            return h2 | 0;
          }
          i2 = c[8808 + (i2 << 2) >> 2] | 0;
          a[h2 + 55 >> 0] = e2;
          if (!(lh(b2, e2, f2, c[h2 + 32 + (k2 << 2) >> 2] | 0, d[h2 + 52 + k2 >> 0] | 0, j2) | 0)) {
            h2 = 0;
            return h2 | 0;
          }
          if (!(lh(b2, e2, f2, c[h2 + 32 + (i2 << 2) >> 2] | 0, d[h2 + 52 + i2 >> 0] | 0, j2) | 0)) {
            h2 = 0;
            return h2 | 0;
          }
          i2 = c[h2 + 48 >> 2] | 0;
          if (i2 | 0)
            c[i2 + 44 >> 2] = c[h2 + 44 >> 2];
          i2 = c[h2 + 44 >> 2] | 0;
          if (i2 | 0)
            c[i2 + 48 >> 2] = c[h2 + 48 >> 2];
          if ((c[b2 + 18496 >> 2] | 0) == (h2 | 0))
            c[b2 + 18496 >> 2] = c[h2 + 48 >> 2];
          c[b2 + 18500 >> 2] = (c[b2 + 18500 >> 2] | 0) + -1;
          c[h2 + 44 >> 2] = 0;
          c[h2 + 48 >> 2] = c[b2 + 18504 >> 2];
          i2 = c[b2 + 18504 >> 2] | 0;
          if (i2 | 0)
            c[i2 + 44 >> 2] = h2;
          c[b2 + 18504 >> 2] = h2;
          c[b2 + 18508 >> 2] = (c[b2 + 18508 >> 2] | 0) + 1;
          h2 = 1;
          return h2 | 0;
        }
        function mh(a2, b2, d2, e2, f2, h2, j2, k2, l2, m2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0;
          a2 = i;
          i = i + 80 | 0;
          o2 = +g[h2 + 52 >> 2] - +g[f2 + 52 >> 2];
          n2 = +g[h2 + 56 >> 2] - +g[f2 + 56 >> 2];
          g[a2 + 56 >> 2] = +g[h2 + 48 >> 2] - +g[f2 + 48 >> 2];
          g[a2 + 56 + 4 >> 2] = o2;
          g[a2 + 56 + 8 >> 2] = n2;
          g[a2 + 56 + 12 >> 2] = 0;
          if (Bc(d2, f2, e2, h2, a2 + 56 | 0, a2, 1) | 0) {
            c[k2 >> 2] = c[a2 + 4 >> 2];
            c[k2 + 4 >> 2] = c[a2 + 4 + 4 >> 2];
            c[k2 + 8 >> 2] = c[a2 + 4 + 8 >> 2];
            c[k2 + 12 >> 2] = c[a2 + 4 + 12 >> 2];
            c[l2 >> 2] = c[a2 + 20 >> 2];
            c[l2 + 4 >> 2] = c[a2 + 20 + 4 >> 2];
            c[l2 + 8 >> 2] = c[a2 + 20 + 8 >> 2];
            c[l2 + 12 >> 2] = c[a2 + 20 + 12 >> 2];
            c[j2 >> 2] = c[a2 + 36 >> 2];
            c[j2 + 4 >> 2] = c[a2 + 36 + 4 >> 2];
            c[j2 + 8 >> 2] = c[a2 + 36 + 8 >> 2];
            c[j2 + 12 >> 2] = c[a2 + 36 + 12 >> 2];
            l2 = 1;
            i = a2;
            return l2 | 0;
          }
          if (!(td(d2, f2, e2, h2, a2 + 56 | 0, a2) | 0)) {
            l2 = 0;
            i = a2;
            return l2 | 0;
          }
          c[k2 >> 2] = c[a2 + 4 >> 2];
          c[k2 + 4 >> 2] = c[a2 + 4 + 4 >> 2];
          c[k2 + 8 >> 2] = c[a2 + 4 + 8 >> 2];
          c[k2 + 12 >> 2] = c[a2 + 4 + 12 >> 2];
          c[l2 >> 2] = c[a2 + 20 >> 2];
          c[l2 + 4 >> 2] = c[a2 + 20 + 4 >> 2];
          c[l2 + 8 >> 2] = c[a2 + 20 + 8 >> 2];
          c[l2 + 12 >> 2] = c[a2 + 20 + 12 >> 2];
          c[j2 >> 2] = c[a2 + 36 >> 2];
          c[j2 + 4 >> 2] = c[a2 + 36 + 4 >> 2];
          c[j2 + 8 >> 2] = c[a2 + 36 + 8 >> 2];
          c[j2 + 12 >> 2] = c[a2 + 36 + 12 >> 2];
          l2 = 0;
          i = a2;
          return l2 | 0;
        }
        function nh(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          p2 = i;
          i = i + 2048 | 0;
          c[a2 >> 2] = 0;
          c[a2 + 4 >> 2] = 0;
          c[a2 + 8 >> 2] = 0;
          c[a2 + 12 >> 2] = 0;
          e2 = +g[d2 >> 2];
          h2 = +g[d2 + 4 >> 2];
          f2 = +g[d2 + 8 >> 2];
          if (e2 * e2 + h2 * h2 + f2 * f2 < 9999999747378752e-20) {
            n2 = 1;
            m2 = 0;
            h2 = 0;
          } else {
            q2 = 1 / +G(+(e2 * e2 + h2 * h2 + f2 * f2));
            n2 = e2 * q2;
            m2 = f2 * q2;
            h2 = h2 * q2;
          }
          if ((ob[c[(c[b2 >> 2] | 0) + 96 >> 2] & 127](b2) | 0) <= 0) {
            i = p2;
            return;
          }
          l2 = 0;
          f2 = -999999984306749400;
          while (1) {
            if (((ob[c[(c[b2 >> 2] | 0) + 96 >> 2] & 127](b2) | 0) - l2 | 0) < 128) {
              d2 = (ob[c[(c[b2 >> 2] | 0) + 96 >> 2] & 127](b2) | 0) - l2 | 0;
              if ((d2 | 0) > 0)
                o2 = 8;
              else {
                e2 = -34028234663852886e22;
                d2 = -1;
              }
            } else {
              d2 = 128;
              o2 = 8;
            }
            if ((o2 | 0) == 8) {
              o2 = 0;
              j2 = 0;
              do {
                Ub[c[(c[b2 >> 2] | 0) + 108 >> 2] & 127](b2, j2, p2 + (j2 << 4) | 0);
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (d2 | 0));
              j2 = -1;
              k2 = 0;
              e2 = -34028234663852886e22;
              do {
                q2 = n2 * +g[p2 + (k2 << 4) >> 2] + h2 * +g[p2 + (k2 << 4) + 4 >> 2] + m2 * +g[p2 + (k2 << 4) + 8 >> 2];
                r2 = q2 > e2;
                j2 = r2 ? k2 : j2;
                e2 = r2 ? q2 : e2;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) != (d2 | 0));
              d2 = j2;
            }
            if (e2 > f2) {
              r2 = p2 + (d2 << 4) | 0;
              c[a2 >> 2] = c[r2 >> 2];
              c[a2 + 4 >> 2] = c[r2 + 4 >> 2];
              c[a2 + 8 >> 2] = c[r2 + 8 >> 2];
              c[a2 + 12 >> 2] = c[r2 + 12 >> 2];
            } else
              e2 = f2;
            l2 = l2 + 128 | 0;
            if ((l2 | 0) >= (ob[c[(c[b2 >> 2] | 0) + 96 >> 2] & 127](b2) | 0))
              break;
            else
              f2 = e2;
          }
          i = p2;
          return;
        }
        function oh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          e2 = c[d2 + 204 >> 2] | 0;
          if ((e2 & 3 | 0) == 0 ? (c[d2 + 544 >> 2] & 1 | 0) == 0 : 0) {
            h2 = +g[d2 + 384 >> 2];
            if (h2 != 0) {
              l2 = 1 / h2 * +g[b2 + 252 >> 2];
              k2 = 1 / h2 * +g[b2 + 256 >> 2];
              g[d2 + 404 >> 2] = 1 / h2 * +g[b2 + 248 >> 2];
              g[d2 + 408 >> 2] = l2;
              g[d2 + 412 >> 2] = k2;
              g[d2 + 416 >> 2] = 0;
            }
            c[d2 + 420 >> 2] = c[b2 + 248 >> 2];
            c[d2 + 420 + 4 >> 2] = c[b2 + 248 + 4 >> 2];
            c[d2 + 420 + 8 >> 2] = c[b2 + 248 + 8 >> 2];
            c[d2 + 420 + 12 >> 2] = c[b2 + 248 + 12 >> 2];
          }
          if (!(c[d2 + 192 >> 2] | 0))
            return;
          if (e2 & 1) {
            if ((c[d2 + 216 >> 2] & -2 | 0) != 4)
              c[d2 + 216 >> 2] = 2;
          } else {
            f2 = c[b2 + 232 >> 2] | 0;
            if ((f2 | 0) == (c[b2 + 236 >> 2] | 0) ? (j2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (j2 | 0)) : 0) {
              if (!j2)
                e2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                f2 = c[b2 + 232 >> 2] | 0;
              }
              if ((f2 | 0) > 0) {
                i2 = 0;
                do {
                  c[e2 + (i2 << 2) >> 2] = c[(c[b2 + 240 >> 2] | 0) + (i2 << 2) >> 2];
                  i2 = i2 + 1 | 0;
                } while ((i2 | 0) != (f2 | 0));
              }
              i2 = c[b2 + 240 >> 2] | 0;
              if (i2) {
                if (a[b2 + 244 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[i2 + -4 >> 2] | 0);
                  f2 = c[b2 + 232 >> 2] | 0;
                }
                c[b2 + 240 >> 2] = 0;
              }
              a[b2 + 244 >> 0] = 1;
              c[b2 + 240 >> 2] = e2;
              c[b2 + 236 >> 2] = j2;
              e2 = c[d2 + 204 >> 2] | 0;
            }
            c[(c[b2 + 240 >> 2] | 0) + (f2 << 2) >> 2] = d2;
            c[b2 + 232 >> 2] = f2 + 1;
          }
          j2 = (e2 & 3 | 0) == 0;
          Yb[c[(c[b2 >> 2] | 0) + 36 >> 2] & 127](b2, d2, j2 ? 1 : 2, j2 ? -1 : -3);
          return;
        }
        function ph(a2, d2, f2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          h2 = c[a2 + 68 + (d2 << 2) >> 2] | 0;
          k2 = c[a2 + 60 >> 2] | 0;
          l2 = e[h2 + ((f2 & 65535) << 2) + 2 >> 1] | 0;
          i2 = b[h2 + ((f2 & 65535) << 2) + -4 >> 1] | 0;
          if ((e[h2 + ((f2 & 65535) << 2) >> 1] | 0) >= (i2 & 65535))
            return;
          g2 = h2 + ((f2 & 65535) << 2) + -4 | 0;
          f2 = h2 + ((f2 & 65535) << 2) | 0;
          j2 = k2;
          while (1) {
            h2 = e[f2 + -2 >> 1] | 0;
            if (!(i2 & 1)) {
              j2 = j2 + (h2 << 6) + 48 + (d2 << 1) | 0;
              b[j2 >> 1] = (b[j2 >> 1] | 0) + 1 << 16 >> 16;
            } else {
              if (((((e[k2 + (l2 << 6) + 54 + ((1 << d2 & 3) << 1) >> 1] | 0) >= (e[j2 + (h2 << 6) + 48 + ((1 << d2 & 3) << 1) >> 1] | 0) ? (e[j2 + (h2 << 6) + 54 + ((1 << d2 & 3) << 1) >> 1] | 0) >= (e[k2 + (l2 << 6) + 48 + ((1 << d2 & 3) << 1) >> 1] | 0) : 0) ? (e[k2 + (l2 << 6) + 54 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) >= (e[j2 + (h2 << 6) + 48 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) : 0) ? (e[j2 + (h2 << 6) + 54 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) >= (e[k2 + (l2 << 6) + 48 + ((1 << (1 << d2 & 3) & 3) << 1) >> 1] | 0) : 0) ? (n2 = c[a2 + 92 >> 2] | 0, m2 = j2 + (h2 << 6) | 0, yb[c[(c[n2 >> 2] | 0) + 8 >> 2] & 63](n2, k2 + (l2 << 6) | 0, m2) | 0, n2 = c[a2 + 96 >> 2] | 0, n2 | 0) : 0)
                yb[c[(c[n2 >> 2] | 0) + 8 >> 2] & 63](n2, k2 + (l2 << 6) | 0, m2) | 0;
              j2 = j2 + (h2 << 6) + 54 + (d2 << 1) | 0;
              b[j2 >> 1] = (b[j2 >> 1] | 0) + 1 << 16 >> 16;
            }
            b[k2 + (l2 << 6) + 48 + (d2 << 1) >> 1] = (b[k2 + (l2 << 6) + 48 + (d2 << 1) >> 1] | 0) + -1 << 16 >> 16;
            i2 = e[f2 >> 1] | e[f2 + 2 >> 1] << 16;
            j2 = e[g2 >> 1] | e[g2 + 2 >> 1] << 16;
            b[f2 >> 1] = j2;
            b[f2 + 2 >> 1] = j2 >>> 16;
            b[g2 >> 1] = i2;
            b[g2 + 2 >> 1] = i2 >>> 16;
            f2 = f2 + -4 | 0;
            g2 = g2 + -4 | 0;
            i2 = b[g2 >> 1] | 0;
            if ((e[f2 >> 1] | 0) >= (i2 & 65535))
              break;
            j2 = c[a2 + 60 >> 2] | 0;
          }
          return;
        }
        function qh(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          g2 = c[a2 + 528 >> 2] | 0;
          if ((g2 | 0) <= 0)
            return;
          h2 = c[a2 + 536 >> 2] | 0;
          d2 = 0;
          while (1) {
            if ((c[h2 + (d2 << 2) >> 2] | 0) == (b2 | 0))
              break;
            d2 = d2 + 1 | 0;
            if ((d2 | 0) >= (g2 | 0)) {
              i2 = 25;
              break;
            }
          }
          if ((i2 | 0) == 25)
            return;
          if ((d2 | 0) < (g2 | 0))
            d2 = 0;
          else
            return;
          while (1) {
            e2 = h2 + (d2 << 2) | 0;
            if ((c[e2 >> 2] | 0) == (b2 | 0)) {
              i2 = 8;
              break;
            }
            f2 = d2 + 1 | 0;
            if ((f2 | 0) < (g2 | 0))
              d2 = f2;
            else
              break;
          }
          if ((i2 | 0) == 8 ? (d2 | 0) < (g2 | 0) : 0) {
            c[e2 >> 2] = c[h2 + (g2 + -1 << 2) >> 2];
            c[(c[a2 + 536 >> 2] | 0) + (g2 + -1 << 2) >> 2] = b2;
            c[a2 + 528 >> 2] = g2 + -1;
          }
          h2 = c[b2 + 28 >> 2] | 0;
          i2 = c[b2 + 32 >> 2] | 0;
          if ((h2 | 0) == (a2 | 0)) {
            d2 = c[a2 + 284 >> 2] | 0;
            a:
              do
                if ((d2 | 0) > 0) {
                  g2 = c[a2 + 292 >> 2] | 0;
                  e2 = 0;
                  while (1) {
                    f2 = g2 + (e2 << 2) | 0;
                    if ((c[f2 >> 2] | 0) == (i2 | 0))
                      break;
                    e2 = e2 + 1 | 0;
                    if ((e2 | 0) >= (d2 | 0))
                      break a;
                  }
                  if ((e2 | 0) < (d2 | 0)) {
                    c[f2 >> 2] = c[g2 + (d2 + -1 << 2) >> 2];
                    c[(c[a2 + 292 >> 2] | 0) + (d2 + -1 << 2) >> 2] = i2;
                    c[a2 + 284 >> 2] = d2 + -1;
                    d2 = d2 + -1 | 0;
                  }
                }
              while (0);
            c[a2 + 276 >> 2] = (d2 | 0) > 0 & 1;
            return;
          } else {
            d2 = c[i2 + 284 >> 2] | 0;
            b:
              do
                if ((d2 | 0) > 0) {
                  g2 = c[i2 + 292 >> 2] | 0;
                  e2 = 0;
                  while (1) {
                    f2 = g2 + (e2 << 2) | 0;
                    if ((c[f2 >> 2] | 0) == (h2 | 0))
                      break;
                    e2 = e2 + 1 | 0;
                    if ((e2 | 0) >= (d2 | 0))
                      break b;
                  }
                  if ((e2 | 0) < (d2 | 0)) {
                    c[f2 >> 2] = c[g2 + (d2 + -1 << 2) >> 2];
                    c[(c[i2 + 292 >> 2] | 0) + (d2 + -1 << 2) >> 2] = h2;
                    c[i2 + 284 >> 2] = d2 + -1;
                    d2 = d2 + -1 | 0;
                  }
                }
              while (0);
            c[i2 + 276 >> 2] = (d2 | 0) > 0 & 1;
            return;
          }
        }
        function rh(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          h2 = c[d2 + 204 >> 2] | 0;
          if ((h2 & 3 | 0) == 0 ? (c[d2 + 544 >> 2] & 1 | 0) == 0 : 0) {
            i2 = +g[d2 + 384 >> 2];
            if (i2 != 0) {
              n2 = 1 / i2 * +g[b2 + 252 >> 2];
              m2 = 1 / i2 * +g[b2 + 256 >> 2];
              g[d2 + 404 >> 2] = 1 / i2 * +g[b2 + 248 >> 2];
              g[d2 + 408 >> 2] = n2;
              g[d2 + 412 >> 2] = m2;
              g[d2 + 416 >> 2] = 0;
            }
            c[d2 + 420 >> 2] = c[b2 + 248 >> 2];
            c[d2 + 420 + 4 >> 2] = c[b2 + 248 + 4 >> 2];
            c[d2 + 420 + 8 >> 2] = c[b2 + 248 + 8 >> 2];
            c[d2 + 420 + 12 >> 2] = c[b2 + 248 + 12 >> 2];
          }
          if (!(c[d2 + 192 >> 2] | 0))
            return;
          if (h2 & 1) {
            if ((c[d2 + 216 >> 2] & -2 | 0) != 4)
              c[d2 + 216 >> 2] = 2;
          } else {
            h2 = c[b2 + 232 >> 2] | 0;
            if ((h2 | 0) == (c[b2 + 236 >> 2] | 0) ? (l2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (l2 | 0)) : 0) {
              if (!l2)
                k2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                h2 = ic((l2 << 2 | 3) + 16 | 0) | 0;
                if (!h2)
                  h2 = 0;
                else {
                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                  h2 = h2 + 4 + 15 & -16;
                }
                k2 = h2;
                h2 = c[b2 + 232 >> 2] | 0;
              }
              if ((h2 | 0) > 0) {
                j2 = 0;
                do {
                  c[k2 + (j2 << 2) >> 2] = c[(c[b2 + 240 >> 2] | 0) + (j2 << 2) >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (h2 | 0));
              }
              j2 = c[b2 + 240 >> 2] | 0;
              if (j2) {
                if (a[b2 + 244 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[j2 + -4 >> 2] | 0);
                  h2 = c[b2 + 232 >> 2] | 0;
                }
                c[b2 + 240 >> 2] = 0;
              }
              a[b2 + 244 >> 0] = 1;
              c[b2 + 240 >> 2] = k2;
              c[b2 + 236 >> 2] = l2;
            }
            c[(c[b2 + 240 >> 2] | 0) + (h2 << 2) >> 2] = d2;
            c[b2 + 232 >> 2] = h2 + 1;
          }
          Yb[c[(c[b2 >> 2] | 0) + 36 >> 2] & 127](b2, d2, e2, f2);
          return;
        }
        function sh(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(79) | 0;
          if (!b2)
            e2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            e2 = b2 + 4 + 15 & -16;
          }
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = -1;
          f2 = e2 + 16 | 0;
          c[f2 >> 2] = 1065353216;
          h2 = e2 + 20 | 0;
          c[h2 >> 2] = 1065353216;
          i2 = e2 + 24 | 0;
          c[i2 >> 2] = 1065353216;
          g[e2 + 28 >> 2] = 0;
          b2 = e2 + 48 | 0;
          g[b2 >> 2] = 0.03999999910593033;
          c[e2 + 56 >> 2] = 0;
          c[e2 >> 2] = 6512;
          c[e2 + 4 >> 2] = 0;
          k2 = +g[a2 >> 2];
          j2 = +g[a2 + 4 >> 2];
          d2 = +g[a2 + 8 >> 2];
          d2 = +g[a2 + ((k2 < j2 ? k2 < d2 ? 0 : 2 : j2 < d2 ? 1 : 2) << 2) >> 2] * 0.10000000149011612;
          if (d2 < 0.03999999910593033) {
            p2 = +Hz(e2);
            n2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            k2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            o2 = e2 + 32 | 0;
            p2 = p2 + +g[o2 >> 2];
            m2 = e2 + 36 | 0;
            n2 = n2 + +g[m2 >> 2];
            l2 = e2 + 40 | 0;
            k2 = k2 + +g[l2 >> 2];
            g[b2 >> 2] = d2;
            d2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            j2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            k2 = k2 - +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
            g[o2 >> 2] = p2 - d2;
            g[m2 >> 2] = n2 - j2;
            g[l2 >> 2] = k2;
            g[e2 + 44 >> 2] = 0;
            b2 = c[e2 >> 2] | 0;
          } else
            b2 = 6512;
          k2 = +Cb[c[b2 + 48 >> 2] & 15](e2);
          n2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
          p2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
          n2 = +g[a2 + 4 >> 2] * +g[h2 >> 2] - n2;
          p2 = +g[a2 + 8 >> 2] * +g[i2 >> 2] - p2;
          g[e2 + 32 >> 2] = +g[a2 >> 2] * +g[f2 >> 2] - k2;
          g[e2 + 36 >> 2] = n2;
          g[e2 + 40 >> 2] = p2;
          g[e2 + 44 >> 2] = 0;
          return e2 | 0;
        }
        function th(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, G2 = 0;
          o2 = (+g[a2 + 36 >> 2] - +g[a2 + 20 >> 2]) * 0.5;
          l2 = (+g[a2 + 40 >> 2] - +g[a2 + 24 >> 2]) * 0.5;
          i2 = (+g[a2 + 44 >> 2] - +g[a2 + 28 >> 2]) * 0.5;
          n2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          k2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          i2 = i2 + +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          B2 = (+g[a2 + 36 >> 2] + +g[a2 + 20 >> 2]) * 0.5;
          z2 = (+g[a2 + 40 >> 2] + +g[a2 + 24 >> 2]) * 0.5;
          x2 = (+g[a2 + 44 >> 2] + +g[a2 + 28 >> 2]) * 0.5;
          G2 = +g[b2 >> 2];
          w2 = +F(+G2);
          E2 = +g[b2 + 4 >> 2];
          v2 = +F(+E2);
          t2 = +g[b2 + 8 >> 2];
          u2 = +F(+t2);
          D2 = +g[b2 + 16 >> 2];
          s2 = +F(+D2);
          C2 = +g[b2 + 20 >> 2];
          r2 = +F(+C2);
          p2 = +g[b2 + 24 >> 2];
          q2 = +F(+p2);
          A2 = +g[b2 + 32 >> 2];
          m2 = +F(+A2);
          y2 = +g[b2 + 36 >> 2];
          j2 = +F(+y2);
          f2 = +g[b2 + 40 >> 2];
          h2 = +F(+f2);
          t2 = B2 * G2 + z2 * E2 + x2 * t2 + +g[b2 + 48 >> 2];
          p2 = B2 * D2 + z2 * C2 + x2 * p2 + +g[b2 + 52 >> 2];
          f2 = B2 * A2 + z2 * y2 + x2 * f2 + +g[b2 + 56 >> 2];
          g[d2 >> 2] = t2 - ((o2 + n2) * w2 + (l2 + k2) * v2 + i2 * u2);
          g[d2 + 4 >> 2] = p2 - ((o2 + n2) * s2 + (l2 + k2) * r2 + i2 * q2);
          g[d2 + 8 >> 2] = f2 - ((o2 + n2) * m2 + (l2 + k2) * j2 + i2 * h2);
          g[d2 + 12 >> 2] = 0;
          g[e2 >> 2] = (o2 + n2) * w2 + (l2 + k2) * v2 + i2 * u2 + t2;
          g[e2 + 4 >> 2] = (o2 + n2) * s2 + (l2 + k2) * r2 + i2 * q2 + p2;
          g[e2 + 8 >> 2] = (o2 + n2) * m2 + (l2 + k2) * j2 + i2 * h2 + f2;
          g[e2 + 12 >> 2] = 0;
          return;
        }
        function uh(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, G2 = 0, H2 = 0, I2 = 0;
          I2 = +g[a2 + 52 >> 2];
          z2 = +g[a2 + 36 >> 2];
          H2 = +g[a2 + 56 >> 2];
          x2 = +g[a2 + 40 >> 2];
          E2 = +g[a2 + 60 >> 2];
          v2 = +g[a2 + 44 >> 2];
          G2 = (c[a2 + 20 >> 2] | 0) == 0;
          m2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          k2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          i2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          m2 = (G2 ? 0 : (I2 - z2) * 0.5) + m2;
          k2 = (G2 ? 0 : (H2 - x2) * 0.5) + k2;
          i2 = (G2 ? 0 : (E2 - v2) * 0.5) + i2;
          D2 = +g[b2 >> 2];
          u2 = +F(+D2);
          C2 = +g[b2 + 4 >> 2];
          t2 = +F(+C2);
          r2 = +g[b2 + 8 >> 2];
          s2 = +F(+r2);
          B2 = +g[b2 + 16 >> 2];
          q2 = +F(+B2);
          A2 = +g[b2 + 20 >> 2];
          p2 = +F(+A2);
          n2 = +g[b2 + 24 >> 2];
          o2 = +F(+n2);
          y2 = +g[b2 + 32 >> 2];
          l2 = +F(+y2);
          w2 = +g[b2 + 36 >> 2];
          j2 = +F(+w2);
          f2 = +g[b2 + 40 >> 2];
          h2 = +F(+f2);
          z2 = G2 ? 0 : (I2 + z2) * 0.5;
          x2 = G2 ? 0 : (H2 + x2) * 0.5;
          v2 = G2 ? 0 : (E2 + v2) * 0.5;
          r2 = z2 * D2 + x2 * C2 + v2 * r2 + +g[b2 + 48 >> 2];
          n2 = z2 * B2 + x2 * A2 + v2 * n2 + +g[b2 + 52 >> 2];
          f2 = z2 * y2 + x2 * w2 + v2 * f2 + +g[b2 + 56 >> 2];
          g[d2 >> 2] = r2 - (m2 * u2 + k2 * t2 + i2 * s2);
          g[d2 + 4 >> 2] = n2 - (m2 * q2 + k2 * p2 + i2 * o2);
          g[d2 + 8 >> 2] = f2 - (m2 * l2 + k2 * j2 + i2 * h2);
          g[d2 + 12 >> 2] = 0;
          g[e2 >> 2] = m2 * u2 + k2 * t2 + i2 * s2 + r2;
          g[e2 + 4 >> 2] = m2 * q2 + k2 * p2 + i2 * o2 + n2;
          g[e2 + 8 >> 2] = m2 * l2 + k2 * j2 + i2 * h2 + f2;
          g[e2 + 12 >> 2] = 0;
          return;
        }
        function vh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, m2 = 0;
          if (a[b2 + 48 >> 0] | 0) {
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            return;
          }
          c[d2 >> 2] = 4;
          c[d2 + 4 >> 2] = 2;
          Tc(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
          g[b2 + 1088 >> 2] = 0;
          a[b2 + 297 >> 0] = 0;
          f2 = +g[b2 + 192 >> 2];
          h2 = +g[b2 + 196 >> 2];
          do
            if (f2 <= h2) {
              m2 = +g[b2 + 892 >> 2];
              k2 = +g[b2 + 908 >> 2];
              i2 = +g[b2 + 924 >> 2];
              i2 = +Tj(+O(+(+g[b2 + 832 >> 2] * m2 + +g[b2 + 848 >> 2] * k2 + +g[b2 + 864 >> 2] * i2), +(+g[b2 + 828 >> 2] * m2 + +g[b2 + 844 >> 2] * k2 + +g[b2 + 860 >> 2] * i2)), f2, h2);
              g[b2 + 1084 >> 2] = i2;
              if (i2 < f2) {
                g[b2 + 1088 >> 2] = i2 - f2;
                a[b2 + 297 >> 0] = 1;
                j2 = 1;
                break;
              }
              if (i2 > h2) {
                g[b2 + 1088 >> 2] = i2 - h2;
                a[b2 + 297 >> 0] = 1;
                j2 = 1;
              } else
                j2 = 0;
            } else
              j2 = 0;
          while (0);
          a[b2 + 296 >> 0] = 0;
          e2 = c[b2 + 1032 >> 2] | 0;
          c[b2 + 1080 >> 2] = e2;
          f2 = +g[b2 + 184 >> 2];
          h2 = +g[b2 + 188 >> 2];
          i2 = (c[l >> 2] = e2, +g[l >> 2]);
          do
            if (f2 <= h2) {
              if (i2 > h2) {
                g[b2 + 1032 >> 2] = i2 - h2;
                a[b2 + 296 >> 0] = 1;
                e2 = 14;
                break;
              }
              if (i2 < f2) {
                g[b2 + 1032 >> 2] = i2 - f2;
                a[b2 + 296 >> 0] = 1;
                e2 = 14;
              } else
                e2 = 13;
            } else
              e2 = 13;
          while (0);
          if ((e2 | 0) == 13 ? (g[b2 + 1032 >> 2] = 0, a[b2 + 1096 >> 0] | 0) : 0)
            e2 = 14;
          if ((e2 | 0) == 14) {
            c[d2 >> 2] = (c[d2 >> 2] | 0) + 1;
            c[d2 + 4 >> 2] = (c[d2 + 4 >> 2] | 0) + -1;
          }
          if (j2 << 24 >> 24 == 0 ? (a[b2 + 1112 >> 0] | 0) == 0 : 0)
            return;
          c[d2 >> 2] = (c[d2 >> 2] | 0) + 1;
          c[d2 + 4 >> 2] = (c[d2 + 4 >> 2] | 0) + -1;
          return;
        }
        function wh(b2, d2, e2, f2, h2, i2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic((h2 + 2 | 0) >>> 0 > 268435455 ? 18 : (h2 + 2 << 4 | 3) + 16 | 0) | 0;
          if (!b2)
            l2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            l2 = b2 + 4 + 15 & -16;
          }
          j2 = (h2 + 2 | 0) >>> 0 > 1073741823 ? -1 : h2 + 2 << 2;
          j2 = (j2 | 0) == 0 ? 1 : j2;
          while (1) {
            b2 = ic(j2) | 0;
            if (b2 | 0) {
              k2 = b2;
              break;
            }
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              k2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          if ((h2 | 0) > -2) {
            b2 = 0;
            do {
              p2 = +(b2 | 0) / +(h2 + 1 | 0);
              o2 = +g[e2 >> 2];
              n2 = +g[e2 + 4 >> 2];
              n2 = n2 + p2 * (+g[f2 + 4 >> 2] - n2);
              m2 = +g[e2 + 8 >> 2];
              m2 = m2 + p2 * (+g[f2 + 8 >> 2] - m2);
              g[l2 + (b2 << 4) >> 2] = o2 + p2 * (+g[f2 >> 2] - o2);
              g[l2 + (b2 << 4) + 4 >> 2] = n2;
              g[l2 + (b2 << 4) + 8 >> 2] = m2;
              g[l2 + (b2 << 4) + 12 >> 2] = 0;
              g[k2 + (b2 << 2) >> 2] = 1;
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) < (h2 + 2 | 0));
          }
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(1311) | 0;
          if (!b2)
            j2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            j2 = b2 + 4 + 15 & -16;
          }
          tc(j2, d2, h2 + 2 | 0, l2, k2);
          if (i2 & 1 | 0) {
            g[(c[j2 + 760 >> 2] | 0) + 88 >> 2] = 0;
            a[j2 + 964 >> 0] = 1;
          }
          if (i2 & 2 | 0) {
            g[(c[j2 + 760 >> 2] | 0) + ((h2 + 1 | 0) * 104 | 0) + 88 >> 2] = 0;
            a[j2 + 964 >> 0] = 1;
          }
          if (l2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[l2 + -4 >> 2] | 0);
          }
          Rc(k2);
          if ((h2 + 2 | 0) > 1)
            b2 = 1;
          else
            return j2 | 0;
          do {
            Gf(j2, b2 + -1 | 0, b2, 0, 0);
            b2 = b2 + 1 | 0;
          } while ((b2 | 0) != (h2 + 2 | 0));
          return j2 | 0;
        }
        function xh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          j2 = ob[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2) | 0;
          i2 = +g[j2 >> 2] - +g[d2 >> 2];
          h2 = +g[j2 + 4 >> 2] - +g[d2 + 4 >> 2];
          f2 = +g[j2 + 8 >> 2] - +g[d2 + 8 >> 2];
          if (!(i2 * i2 + h2 * h2 + f2 * f2 > 11920928955078125e-23))
            return;
          Ng(b2, d2);
          if ((a[b2 + 65 >> 0] | 0) != 0 ? (e2 = c[b2 + 56 >> 2] | 0, kb[c[c[e2 >> 2] >> 2] & 255](e2), e2 = c[b2 + 56 >> 2] | 0, (e2 | 0) != 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[e2 + -4 >> 2] | 0);
            e2 = b2 + 56 | 0;
          } else
            e2 = b2 + 56 | 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(191) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 52 >> 2] = 285;
          a[d2 + 60 >> 0] = 0;
          a[d2 + 80 >> 0] = 1;
          c[d2 + 76 >> 2] = 0;
          c[d2 + 68 >> 2] = 0;
          c[d2 + 72 >> 2] = 0;
          a[d2 + 100 >> 0] = 1;
          c[d2 + 96 >> 2] = 0;
          c[d2 + 88 >> 2] = 0;
          c[d2 + 92 >> 2] = 0;
          a[d2 + 120 >> 0] = 1;
          c[d2 + 116 >> 2] = 0;
          c[d2 + 108 >> 2] = 0;
          c[d2 + 112 >> 2] = 0;
          a[d2 + 140 >> 0] = 1;
          c[d2 + 136 >> 2] = 0;
          c[d2 + 128 >> 2] = 0;
          c[d2 + 132 >> 2] = 0;
          c[d2 + 144 >> 2] = 0;
          a[d2 + 164 >> 0] = 1;
          c[d2 + 160 >> 2] = 0;
          c[d2 + 152 >> 2] = 0;
          c[d2 + 156 >> 2] = 0;
          c[d2 + 168 >> 2] = 0;
          c[d2 + 4 >> 2] = -8388609;
          c[d2 + 8 >> 2] = -8388609;
          c[d2 + 12 >> 2] = -8388609;
          g[d2 + 16 >> 2] = 0;
          c[d2 + 20 >> 2] = 2139095039;
          c[d2 + 24 >> 2] = 2139095039;
          c[d2 + 28 >> 2] = 2139095039;
          g[d2 + 32 >> 2] = 0;
          c[d2 >> 2] = 8156;
          c[e2 >> 2] = d2;
          _c(d2, c[b2 + 52 >> 2] | 0, (a[b2 + 64 >> 0] | 0) != 0, b2 + 20 | 0, b2 + 36 | 0);
          a[b2 + 65 >> 0] = 1;
          return;
        }
        function yh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          if (a[b2 + 1309 >> 0] | 0) {
            e2 = (+g[b2 + 1256 >> 2] - +g[b2 + 1316 >> 2]) * +g[b2 + 1340 >> 2];
            g[b2 + 792 >> 2] = e2 * (+g[d2 >> 2] * +g[b2 + 1364 >> 2] / +(c[d2 + 44 >> 2] | 0));
            e2 = +F(+e2);
            g[b2 + 808 >> 2] = e2 / +g[d2 >> 2];
          }
          if (a[b2 + 1310 >> 0] | 0) {
            e2 = (+g[b2 + 1260 >> 2] - +g[b2 + 1320 >> 2]) * +g[b2 + 1344 >> 2];
            g[b2 + 796 >> 2] = e2 * (+g[d2 >> 2] * +g[b2 + 1368 >> 2] / +(c[d2 + 44 >> 2] | 0));
            e2 = +F(+e2);
            g[b2 + 812 >> 2] = e2 / +g[d2 >> 2];
          }
          if (a[b2 + 1311 >> 0] | 0) {
            e2 = (+g[b2 + 1264 >> 2] - +g[b2 + 1324 >> 2]) * +g[b2 + 1348 >> 2];
            g[b2 + 800 >> 2] = e2 * (+g[d2 >> 2] * +g[b2 + 1372 >> 2] / +(c[d2 + 44 >> 2] | 0));
            e2 = +F(+e2);
            g[b2 + 816 >> 2] = e2 / +g[d2 >> 2];
          }
          if (a[b2 + 1312 >> 0] | 0) {
            f2 = -((+g[b2 + 1192 >> 2] - +g[b2 + 1328 >> 2]) * +g[b2 + 1352 >> 2]);
            e2 = +g[d2 >> 2];
            g[b2 + 876 >> 2] = e2 * +g[b2 + 1376 >> 2] / +(c[d2 + 44 >> 2] | 0) * f2;
            g[b2 + 880 >> 2] = +F(+f2) / e2;
          }
          if (a[b2 + 1313 >> 0] | 0) {
            e2 = -((+g[b2 + 1196 >> 2] - +g[b2 + 1332 >> 2]) * +g[b2 + 1356 >> 2]);
            f2 = +g[d2 >> 2];
            g[b2 + 940 >> 2] = f2 * +g[b2 + 1380 >> 2] / +(c[d2 + 44 >> 2] | 0) * e2;
            g[b2 + 944 >> 2] = +F(+e2) / f2;
          }
          if (!(a[b2 + 1314 >> 0] | 0)) {
            Tf(b2, d2);
            return;
          }
          e2 = -((+g[b2 + 1200 >> 2] - +g[b2 + 1336 >> 2]) * +g[b2 + 1360 >> 2]);
          f2 = +g[d2 >> 2];
          g[b2 + 1004 >> 2] = f2 * +g[b2 + 1384 >> 2] / +(c[d2 + 44 >> 2] | 0) * e2;
          g[b2 + 1008 >> 2] = +F(+e2) / f2;
          Tf(b2, d2);
          return;
        }
        function zh(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
          e2 = i;
          i = i + 160 | 0;
          c[e2 + 136 >> 2] = 0;
          c[e2 + 136 + 4 >> 2] = 0;
          c[e2 + 136 + 8 >> 2] = 0;
          c[e2 + 136 + 12 >> 2] = 0;
          c[e2 + 136 + 16 >> 2] = 0;
          c[e2 + 32 >> 2] = 8696;
          f2 = e2 + 32 + 4 | 0;
          c[f2 >> 2] = 0;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          c[f2 + 12 >> 2] = 0;
          c[e2 + 32 + 20 >> 2] = 1065353216;
          c[e2 + 32 + 24 >> 2] = 0;
          c[e2 + 32 + 24 + 4 >> 2] = 0;
          c[e2 + 32 + 24 + 8 >> 2] = 0;
          c[e2 + 32 + 24 + 12 >> 2] = 0;
          c[e2 + 32 + 40 >> 2] = 1065353216;
          c[e2 + 32 + 44 >> 2] = 0;
          c[e2 + 32 + 44 + 4 >> 2] = 0;
          c[e2 + 32 + 44 + 8 >> 2] = 0;
          c[e2 + 32 + 44 + 12 >> 2] = 0;
          c[e2 + 32 + 60 >> 2] = 1065353216;
          c[e2 + 32 + 64 >> 2] = 0;
          c[e2 + 32 + 68 >> 2] = c[e2 + 136 + 4 >> 2];
          c[e2 + 32 + 68 + 4 >> 2] = c[e2 + 136 + 4 + 4 >> 2];
          c[e2 + 32 + 68 + 8 >> 2] = c[e2 + 136 + 4 + 8 >> 2];
          c[e2 + 32 + 68 + 12 >> 2] = c[e2 + 136 + 4 + 12 >> 2];
          g[e2 + 32 + 84 >> 2] = -999999984306749400;
          k2 = +g[d2 >> 2];
          j2 = +g[d2 + 4 >> 2];
          h2 = +g[d2 + 8 >> 2];
          g[e2 + 32 + 88 >> 2] = k2 + j2 * 0 + h2 * 0;
          g[e2 + 32 + 92 >> 2] = k2 * 0 + j2 + h2 * 0;
          g[e2 + 32 + 96 >> 2] = k2 * 0 + j2 * 0 + h2;
          g[e2 + 32 + 100 >> 2] = 0;
          c[e2 + 16 >> 2] = 1566444395;
          c[e2 + 16 + 4 >> 2] = 1566444395;
          c[e2 + 16 + 8 >> 2] = 1566444395;
          g[e2 + 16 + 12 >> 2] = 0;
          d2 = c[(c[b2 >> 2] | 0) + 64 >> 2] | 0;
          g[e2 >> 2] = -999999984306749400;
          g[e2 + 4 >> 2] = -999999984306749400;
          g[e2 + 8 >> 2] = -999999984306749400;
          g[e2 + 12 >> 2] = 0;
          Yb[d2 & 127](b2, e2 + 32 | 0, e2, e2 + 16 | 0);
          c[a2 >> 2] = c[f2 >> 2];
          c[a2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[f2 + 12 >> 2];
          i = e2;
          return;
        }
        function Ah(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          q2 = i;
          i = i + 16 | 0;
          c[a2 >> 2] = 0;
          c[a2 + 4 >> 2] = 0;
          c[a2 + 8 >> 2] = 0;
          c[a2 + 12 >> 2] = 0;
          e2 = +g[d2 >> 2];
          f2 = +g[d2 + 4 >> 2];
          h2 = +g[d2 + 8 >> 2];
          if (e2 * e2 + f2 * f2 + h2 * h2 < 9999999747378752e-20) {
            p2 = 1;
            o2 = 0;
            n2 = 0;
          } else {
            n2 = 1 / +G(+(e2 * e2 + f2 * f2 + h2 * h2));
            p2 = e2 * n2;
            o2 = f2 * n2;
            n2 = h2 * n2;
          }
          d2 = c[b2 + 56 >> 2] | 0;
          m2 = +g[b2 + 32 + (((d2 + 2 | 0) % 3 | 0) << 2) >> 2];
          c[q2 >> 2] = 0;
          c[q2 + 4 >> 2] = 0;
          c[q2 + 8 >> 2] = 0;
          c[q2 + 12 >> 2] = 0;
          c[q2 + (d2 << 2) >> 2] = c[b2 + 32 + (d2 << 2) >> 2];
          k2 = p2 * m2;
          l2 = o2 * m2;
          m2 = n2 * m2;
          e2 = k2 + +g[q2 >> 2];
          f2 = l2 + +g[q2 + 4 >> 2];
          j2 = m2 + +g[q2 + 8 >> 2];
          h2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          e2 = e2 - p2 * h2;
          f2 = f2 - o2 * h2;
          h2 = j2 - n2 * h2;
          j2 = n2 * h2 + (p2 * e2 + o2 * f2);
          if (j2 > -999999984306749400) {
            g[a2 >> 2] = e2;
            g[a2 + 4 >> 2] = f2;
            g[a2 + 8 >> 2] = h2;
            g[a2 + 12 >> 2] = 0;
          } else
            j2 = -999999984306749400;
          c[q2 >> 2] = 0;
          c[q2 + 4 >> 2] = 0;
          c[q2 + 8 >> 2] = 0;
          c[q2 + 12 >> 2] = 0;
          d2 = c[b2 + 56 >> 2] | 0;
          g[q2 + (d2 << 2) >> 2] = -+g[b2 + 32 + (d2 << 2) >> 2];
          e2 = k2 + +g[q2 >> 2];
          f2 = l2 + +g[q2 + 4 >> 2];
          m2 = m2 + +g[q2 + 8 >> 2];
          h2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          e2 = e2 - p2 * h2;
          f2 = f2 - o2 * h2;
          h2 = m2 - n2 * h2;
          if (!(n2 * h2 + (p2 * e2 + o2 * f2) > j2)) {
            i = q2;
            return;
          }
          g[a2 >> 2] = e2;
          g[a2 + 4 >> 2] = f2;
          g[a2 + 8 >> 2] = h2;
          g[a2 + 12 >> 2] = 0;
          i = q2;
          return;
        }
        function Bh(a2, b2, d2, e2, f2, h2, j2, k2, l2, m2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          h2 = +h2;
          j2 = +j2;
          k2 = +k2;
          l2 = +l2;
          m2 = +m2;
          var n2 = 0;
          n2 = i;
          i = i + 128 | 0;
          c[n2 + 80 >> 2] = c[a2 + 4 >> 2];
          c[n2 + 80 + 4 >> 2] = c[a2 + 20 >> 2];
          c[n2 + 80 + 8 >> 2] = c[a2 + 36 >> 2];
          g[n2 + 80 + 12 >> 2] = 0;
          c[n2 + 80 + 16 >> 2] = c[a2 + 8 >> 2];
          c[n2 + 80 + 20 >> 2] = c[a2 + 24 >> 2];
          c[n2 + 80 + 24 >> 2] = c[a2 + 40 >> 2];
          g[n2 + 80 + 28 >> 2] = 0;
          c[n2 + 80 + 32 >> 2] = c[a2 + 12 >> 2];
          c[n2 + 80 + 36 >> 2] = c[a2 + 28 >> 2];
          c[n2 + 80 + 40 >> 2] = c[a2 + 44 >> 2];
          g[n2 + 80 + 44 >> 2] = 0;
          c[n2 + 32 >> 2] = c[b2 + 4 >> 2];
          c[n2 + 32 + 4 >> 2] = c[b2 + 20 >> 2];
          c[n2 + 32 + 8 >> 2] = c[b2 + 36 >> 2];
          g[n2 + 32 + 12 >> 2] = 0;
          c[n2 + 32 + 16 >> 2] = c[b2 + 8 >> 2];
          c[n2 + 32 + 20 >> 2] = c[b2 + 24 >> 2];
          c[n2 + 32 + 24 >> 2] = c[b2 + 40 >> 2];
          g[n2 + 32 + 28 >> 2] = 0;
          c[n2 + 32 + 32 >> 2] = c[b2 + 12 >> 2];
          c[n2 + 32 + 36 >> 2] = c[b2 + 28 >> 2];
          c[n2 + 32 + 40 >> 2] = c[b2 + 44 >> 2];
          g[n2 + 32 + 44 >> 2] = 0;
          h2 = h2 - +g[a2 + 56 >> 2];
          j2 = j2 - +g[a2 + 60 >> 2];
          g[n2 + 16 >> 2] = f2 - +g[a2 + 52 >> 2];
          g[n2 + 16 + 4 >> 2] = h2;
          g[n2 + 16 + 8 >> 2] = j2;
          g[n2 + 16 + 12 >> 2] = 0;
          j2 = l2 - +g[b2 + 56 >> 2];
          m2 = m2 - +g[b2 + 60 >> 2];
          g[n2 >> 2] = k2 - +g[b2 + 52 >> 2];
          g[n2 + 4 >> 2] = j2;
          g[n2 + 8 >> 2] = m2;
          g[n2 + 12 >> 2] = 0;
          Eg(d2, n2 + 80 | 0, n2 + 32 | 0, n2 + 16 | 0, n2, e2, a2 + 436 | 0, +g[a2 + 384 >> 2], b2 + 436 | 0, +g[b2 + 384 >> 2]);
          i = n2;
          return;
        }
        function Ch(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = +d2;
          e2 = +e2;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          k2 = i;
          i = i + 48 | 0;
          m2 = 1 / +G(+(b2 * b2 + d2 * d2 + e2 * e2));
          g[f2 >> 2] = m2 * b2;
          g[f2 + 4 >> 2] = m2 * d2;
          g[f2 + 8 >> 2] = m2 * e2;
          g[f2 + 12 >> 2] = 0;
          h2 = c[a2 + 120 >> 2] | 0;
          l2 = c[a2 + 124 >> 2] | 0;
          j2 = (c[a2 >> 2] | 0) + (l2 >> 1) | 0;
          if (l2 & 1)
            h2 = c[(c[j2 >> 2] | 0) + h2 >> 2] | 0;
          Ub[h2 & 127](k2, j2, f2);
          b2 = -+g[f2 >> 2];
          d2 = -+g[f2 + 4 >> 2];
          e2 = -+g[f2 + 8 >> 2];
          h2 = c[a2 + 120 >> 2] | 0;
          l2 = c[a2 + 124 >> 2] | 0;
          j2 = (c[a2 + 4 >> 2] | 0) + (l2 >> 1) | 0;
          if (l2 & 1)
            h2 = c[(c[j2 >> 2] | 0) + h2 >> 2] | 0;
          m2 = +g[a2 + 24 >> 2] * b2 + +g[a2 + 28 >> 2] * d2 + +g[a2 + 32 >> 2] * e2;
          n2 = +g[a2 + 40 >> 2] * b2 + +g[a2 + 44 >> 2] * d2 + +g[a2 + 48 >> 2] * e2;
          g[k2 + 16 >> 2] = +g[a2 + 8 >> 2] * b2 + +g[a2 + 12 >> 2] * d2 + +g[a2 + 16 >> 2] * e2;
          g[k2 + 16 + 4 >> 2] = m2;
          g[k2 + 16 + 8 >> 2] = n2;
          g[k2 + 16 + 12 >> 2] = 0;
          Ub[h2 & 127](k2 + 32 | 0, j2, k2 + 16 | 0);
          n2 = +g[k2 + 32 >> 2];
          b2 = +g[k2 + 32 + 4 >> 2];
          d2 = +g[k2 + 32 + 8 >> 2];
          e2 = +g[k2 + 4 >> 2] - (n2 * +g[a2 + 72 >> 2] + b2 * +g[a2 + 76 >> 2] + d2 * +g[a2 + 80 >> 2] + +g[a2 + 108 >> 2]);
          m2 = +g[k2 + 8 >> 2] - (n2 * +g[a2 + 88 >> 2] + b2 * +g[a2 + 92 >> 2] + d2 * +g[a2 + 96 >> 2] + +g[a2 + 112 >> 2]);
          g[f2 + 16 >> 2] = +g[k2 >> 2] - (n2 * +g[a2 + 56 >> 2] + b2 * +g[a2 + 60 >> 2] + d2 * +g[a2 + 64 >> 2] + +g[a2 + 104 >> 2]);
          g[f2 + 20 >> 2] = e2;
          g[f2 + 24 >> 2] = m2;
          g[f2 + 28 >> 2] = 0;
          i = k2;
          return;
        }
        function Dh(a2, b2, c2, d2, e2, f2, h2, i2, j2, k2, l2, m2, n2, o2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          e2 = +e2;
          f2 = +f2;
          h2 = +h2;
          i2 = +i2;
          j2 = +j2;
          k2 = +k2;
          l2 = +l2;
          m2 = +m2;
          n2 = +n2;
          o2 = +o2;
          var p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0;
          q2 = (j2 - f2) * (n2 - h2) - (k2 - h2) * (m2 - f2);
          r2 = (k2 - h2) * (l2 - e2) - (i2 - e2) * (n2 - h2);
          s2 = (i2 - e2) * (m2 - f2) - (j2 - f2) * (l2 - e2);
          if (+F(+(s2 * d2 + (q2 * b2 + r2 * c2))) < 11920928955078125e-23) {
            s2 = -1;
            return +s2;
          }
          t2 = +g[a2 >> 2];
          v2 = +g[a2 + 4 >> 2];
          u2 = +g[a2 + 8 >> 2];
          p2 = -(q2 * t2 + r2 * v2 + s2 * u2 - (s2 * h2 + (q2 * e2 + r2 * f2))) / (s2 * d2 + (q2 * b2 + r2 * c2));
          if (((p2 > 11920928955078125e-22 & p2 < o2 ? s2 * ((j2 - (v2 + p2 * c2)) * (e2 - (t2 + p2 * b2)) - (f2 - (v2 + p2 * c2)) * (i2 - (t2 + p2 * b2))) + (q2 * ((f2 - (v2 + p2 * c2)) * (k2 - (u2 + p2 * d2)) - (h2 - (u2 + p2 * d2)) * (j2 - (v2 + p2 * c2))) + r2 * ((h2 - (u2 + p2 * d2)) * (i2 - (t2 + p2 * b2)) - (k2 - (u2 + p2 * d2)) * (e2 - (t2 + p2 * b2)))) > -11920928955078125e-22 : 0) ? s2 * ((m2 - (v2 + p2 * c2)) * (i2 - (t2 + p2 * b2)) - (j2 - (v2 + p2 * c2)) * (l2 - (t2 + p2 * b2))) + (q2 * ((j2 - (v2 + p2 * c2)) * (n2 - (u2 + p2 * d2)) - (k2 - (u2 + p2 * d2)) * (m2 - (v2 + p2 * c2))) + r2 * ((k2 - (u2 + p2 * d2)) * (l2 - (t2 + p2 * b2)) - (n2 - (u2 + p2 * d2)) * (i2 - (t2 + p2 * b2)))) > -11920928955078125e-22 : 0) ? s2 * ((f2 - (v2 + p2 * c2)) * (l2 - (t2 + p2 * b2)) - (m2 - (v2 + p2 * c2)) * (e2 - (t2 + p2 * b2))) + (q2 * ((m2 - (v2 + p2 * c2)) * (h2 - (u2 + p2 * d2)) - (n2 - (u2 + p2 * d2)) * (f2 - (v2 + p2 * c2))) + r2 * ((n2 - (u2 + p2 * d2)) * (e2 - (t2 + p2 * b2)) - (h2 - (u2 + p2 * d2)) * (l2 - (t2 + p2 * b2)))) > -11920928955078125e-22 : 0) {
            v2 = p2;
            return +v2;
          }
          v2 = -1;
          return +v2;
        }
        function Eh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          if (a[b2 + 165 >> 0] | 0) {
            if ((c[b2 + 92 >> 2] | 0) >= (d2 | 0))
              return;
            if ((d2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, e2 = ic((d2 << 4 | 3) + 16 | 0) | 0, (e2 | 0) != 0) : 0) {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              g2 = e2 + 4 + 15 & -16;
            } else
              g2 = 0;
            f2 = c[b2 + 88 >> 2] | 0;
            if ((f2 | 0) > 0) {
              e2 = 0;
              do {
                i2 = g2 + (e2 << 4) | 0;
                h2 = (c[b2 + 96 >> 2] | 0) + (e2 << 4) | 0;
                c[i2 >> 2] = c[h2 >> 2];
                c[i2 + 4 >> 2] = c[h2 + 4 >> 2];
                c[i2 + 8 >> 2] = c[h2 + 8 >> 2];
                c[i2 + 12 >> 2] = c[h2 + 12 >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (f2 | 0));
            }
            e2 = c[b2 + 96 >> 2] | 0;
            if (e2 | 0) {
              if (a[b2 + 100 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[e2 + -4 >> 2] | 0);
              }
              c[b2 + 96 >> 2] = 0;
            }
            a[b2 + 100 >> 0] = 1;
            c[b2 + 96 >> 2] = g2;
            c[b2 + 92 >> 2] = d2;
            return;
          }
          if ((c[b2 + 112 >> 2] | 0) >= (d2 | 0))
            return;
          if ((d2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, f2 = ic((d2 << 2 | 3) + 16 | 0) | 0, (f2 | 0) != 0) : 0) {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            h2 = f2 + 4 + 15 & -16;
          } else
            h2 = 0;
          f2 = c[b2 + 108 >> 2] | 0;
          g2 = c[b2 + 116 >> 2] | 0;
          if ((f2 | 0) <= 0)
            if (!g2)
              e2 = b2 + 120 | 0;
            else
              i2 = 21;
          else {
            e2 = 0;
            do {
              c[h2 + (e2 << 2) >> 2] = c[g2 + (e2 << 2) >> 2];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (f2 | 0));
            i2 = 21;
          }
          if ((i2 | 0) == 21) {
            if (a[b2 + 120 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[g2 + -4 >> 2] | 0);
            }
            c[b2 + 116 >> 2] = 0;
            e2 = b2 + 120 | 0;
          }
          a[e2 >> 0] = 1;
          c[b2 + 116 >> 2] = h2;
          c[b2 + 112 >> 2] = d2;
          return;
        }
        function Fh(a2, b2, d2, e2, f2, g2, h2, i2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          if (!(c[i2 + 44 >> 2] | 0))
            return;
          b2 = c[i2 + 20 >> 2] | 0;
          if (!(c[i2 + 64 >> 2] & 256)) {
            if ((b2 | 0) <= 0)
              return;
            e2 = 0;
            do {
              d2 = c[a2 + 28 >> 2] | 0;
              if ((d2 | 0) > 0) {
                b2 = 0;
                do {
                  j2 = c[(c[a2 + 116 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                  h2 = c[a2 + 36 >> 2] | 0;
                  g2 = c[a2 + 16 >> 2] | 0;
                  ug(g2 + ((c[h2 + (j2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, g2 + ((c[h2 + (j2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (j2 * 152 | 0) | 0);
                  b2 = b2 + 1 | 0;
                } while ((b2 | 0) != (d2 | 0));
                b2 = c[i2 + 20 >> 2] | 0;
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) < (b2 | 0));
            return;
          } else {
            if ((b2 | 0) <= 0)
              return;
            e2 = 0;
            do {
              d2 = c[a2 + 28 >> 2] | 0;
              if ((d2 | 0) > 0) {
                b2 = 0;
                do {
                  j2 = c[(c[a2 + 116 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                  h2 = c[a2 + 36 >> 2] | 0;
                  g2 = c[a2 + 16 >> 2] | 0;
                  ug(g2 + ((c[h2 + (j2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, g2 + ((c[h2 + (j2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (j2 * 152 | 0) | 0);
                  b2 = b2 + 1 | 0;
                } while ((b2 | 0) != (d2 | 0));
                b2 = c[i2 + 20 >> 2] | 0;
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) < (b2 | 0));
            return;
          }
        }
        function Gh(d2, e2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          if (!(a[d2 + 164 >> 0] | 0)) {
            if ((c[d2 + 152 >> 2] | 0) >= (e2 | 0))
              return;
            if ((e2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, g2 = ic((e2 << 1) + 19 | 0) | 0, (g2 | 0) != 0) : 0) {
              c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
              i2 = g2 + 4 + 15 & -16;
            } else
              i2 = 0;
            g2 = c[d2 + 148 >> 2] | 0;
            h2 = c[d2 + 156 >> 2] | 0;
            if ((g2 | 0) <= 0)
              if (!h2)
                f2 = d2 + 160 | 0;
              else
                j2 = 22;
            else {
              f2 = 0;
              do {
                b[i2 + (f2 << 1) >> 1] = b[h2 + (f2 << 1) >> 1] | 0;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (g2 | 0));
              j2 = 22;
            }
            if ((j2 | 0) == 22) {
              if (a[d2 + 160 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[h2 + -4 >> 2] | 0);
              }
              c[d2 + 156 >> 2] = 0;
              f2 = d2 + 160 | 0;
            }
            a[f2 >> 0] = 1;
            c[d2 + 156 >> 2] = i2;
            c[d2 + 152 >> 2] = e2;
            return;
          } else {
            if ((c[d2 + 132 >> 2] | 0) >= (e2 | 0))
              return;
            if ((e2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, f2 = ic((e2 << 2 | 3) + 16 | 0) | 0, (f2 | 0) != 0) : 0) {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              i2 = f2 + 4 + 15 & -16;
            } else
              i2 = 0;
            g2 = c[d2 + 128 >> 2] | 0;
            h2 = c[d2 + 136 >> 2] | 0;
            if ((g2 | 0) <= 0)
              if (!h2)
                f2 = d2 + 140 | 0;
              else
                j2 = 10;
            else {
              f2 = 0;
              do {
                c[i2 + (f2 << 2) >> 2] = c[h2 + (f2 << 2) >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (g2 | 0));
              j2 = 10;
            }
            if ((j2 | 0) == 10) {
              if (a[d2 + 140 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[h2 + -4 >> 2] | 0);
              }
              c[d2 + 136 >> 2] = 0;
              f2 = d2 + 140 | 0;
            }
            a[f2 >> 0] = 1;
            c[d2 + 136 >> 2] = i2;
            c[d2 + 132 >> 2] = e2;
            return;
          }
        }
        function Hh(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(675) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 >> 2] = 5592;
          c[d2 + 164 >> 2] = 1065353216;
          c[d2 + 168 >> 2] = 1065353216;
          c[d2 + 172 >> 2] = 1065353216;
          g[d2 + 176 >> 2] = 0;
          c[d2 + 180 >> 2] = 0;
          g[d2 + 184 >> 2] = 999999984306749400;
          e2 = d2 + 188 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          c[d2 + 204 >> 2] = 1;
          c[d2 + 208 >> 2] = -1;
          c[d2 + 212 >> 2] = -1;
          c[d2 + 216 >> 2] = 1;
          g[d2 + 220 >> 2] = 0;
          g[d2 + 224 >> 2] = 0.5;
          g[d2 + 228 >> 2] = 0;
          g[d2 + 232 >> 2] = 0;
          g[d2 + 236 >> 2] = 0;
          g[d2 + 240 >> 2] = 0.10000000149011612;
          g[d2 + 244 >> 2] = 1e4;
          c[d2 + 248 >> 2] = 1;
          c[d2 + 252 >> 2] = 0;
          c[d2 + 256 >> 2] = -1;
          c[d2 + 260 >> 2] = -1;
          g[d2 + 264 >> 2] = 1;
          g[d2 + 268 >> 2] = 0;
          g[d2 + 272 >> 2] = 0;
          c[d2 + 276 >> 2] = 0;
          a[d2 + 296 >> 0] = 1;
          c[d2 + 292 >> 2] = 0;
          c[d2 + 284 >> 2] = 0;
          c[d2 + 288 >> 2] = 0;
          c[d2 + 300 >> 2] = 0;
          c[d2 + 4 >> 2] = 1065353216;
          e2 = d2 + 8 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          c[d2 + 24 >> 2] = 1065353216;
          e2 = d2 + 28 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          c[d2 + 44 >> 2] = 1065353216;
          e2 = d2 + 48 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          c[e2 + 16 >> 2] = 0;
          c[d2 >> 2] = 4916;
          a[d2 + 540 >> 0] = 1;
          c[d2 + 536 >> 2] = 0;
          c[d2 + 528 >> 2] = 0;
          c[d2 + 532 >> 2] = 0;
          ud(d2, b2);
          return d2 | 0;
        }
        function Ih(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          ii(a2, b2, d2) | 0;
          c[b2 + 52 >> 2] = c[a2 + 300 >> 2];
          c[b2 + 56 >> 2] = c[a2 + 304 >> 2];
          c[b2 + 60 >> 2] = c[a2 + 308 >> 2];
          c[b2 + 64 >> 2] = c[a2 + 312 >> 2];
          c[b2 + 68 >> 2] = c[a2 + 316 >> 2];
          c[b2 + 72 >> 2] = c[a2 + 320 >> 2];
          c[b2 + 76 >> 2] = c[a2 + 324 >> 2];
          c[b2 + 80 >> 2] = c[a2 + 328 >> 2];
          c[b2 + 84 >> 2] = c[a2 + 332 >> 2];
          c[b2 + 88 >> 2] = c[a2 + 336 >> 2];
          c[b2 + 92 >> 2] = c[a2 + 340 >> 2];
          c[b2 + 96 >> 2] = c[a2 + 344 >> 2];
          c[b2 + 100 >> 2] = c[a2 + 348 >> 2];
          c[b2 + 104 >> 2] = c[a2 + 352 >> 2];
          c[b2 + 108 >> 2] = c[a2 + 356 >> 2];
          c[b2 + 112 >> 2] = c[a2 + 360 >> 2];
          c[b2 + 116 >> 2] = c[a2 + 364 >> 2];
          c[b2 + 120 >> 2] = c[a2 + 368 >> 2];
          c[b2 + 124 >> 2] = c[a2 + 372 >> 2];
          c[b2 + 128 >> 2] = c[a2 + 376 >> 2];
          c[b2 + 132 >> 2] = c[a2 + 380 >> 2];
          c[b2 + 136 >> 2] = c[a2 + 384 >> 2];
          c[b2 + 140 >> 2] = c[a2 + 388 >> 2];
          c[b2 + 144 >> 2] = c[a2 + 392 >> 2];
          c[b2 + 148 >> 2] = c[a2 + 396 >> 2];
          c[b2 + 152 >> 2] = c[a2 + 400 >> 2];
          c[b2 + 156 >> 2] = c[a2 + 404 >> 2];
          c[b2 + 160 >> 2] = c[a2 + 408 >> 2];
          c[b2 + 164 >> 2] = c[a2 + 412 >> 2];
          c[b2 + 168 >> 2] = c[a2 + 416 >> 2];
          c[b2 + 172 >> 2] = c[a2 + 420 >> 2];
          c[b2 + 176 >> 2] = c[a2 + 424 >> 2];
          c[b2 + 180 >> 2] = c[a2 + 444 >> 2];
          c[b2 + 184 >> 2] = c[a2 + 448 >> 2];
          c[b2 + 188 >> 2] = c[a2 + 452 >> 2];
          c[b2 + 192 >> 2] = c[a2 + 428 >> 2];
          c[b2 + 196 >> 2] = c[a2 + 432 >> 2];
          c[b2 + 200 >> 2] = c[a2 + 436 >> 2];
          c[b2 + 204 >> 2] = c[a2 + 440 >> 2];
          return 11915;
        }
        function Jh(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          k2 = i;
          i = i + 32 | 0;
          n2 = +g[a2 + 60 >> 2];
          r2 = +g[a2 + 76 >> 2] - n2;
          m2 = +g[a2 + 64 >> 2];
          p2 = +g[a2 + 80 >> 2] - m2;
          l2 = +g[a2 + 68 >> 2];
          s2 = +g[a2 + 84 >> 2] - l2;
          o2 = +g[a2 + 92 >> 2] - n2;
          q2 = +g[a2 + 96 >> 2] - m2;
          h2 = +g[a2 + 100 >> 2] - l2;
          j2 = 1 / +G(+((r2 * q2 - p2 * o2) * (r2 * q2 - p2 * o2) + ((p2 * h2 - s2 * q2) * (p2 * h2 - s2 * q2) + (s2 * o2 - r2 * h2) * (s2 * o2 - r2 * h2))));
          f2 = j2 * (p2 * h2 - s2 * q2);
          h2 = j2 * (s2 * o2 - r2 * h2);
          j2 = (r2 * q2 - p2 * o2) * j2;
          l2 = j2 * +g[b2 + 8 >> 2] + (+g[b2 >> 2] * f2 + +g[b2 + 4 >> 2] * h2) - (f2 * n2 + h2 * m2 + j2 * l2);
          if (!(l2 >= -d2) | !(l2 <= d2)) {
            b2 = 0;
            i = k2;
            return b2 | 0;
          }
          e2 = 0;
          while (1) {
            Yb[c[(c[a2 >> 2] | 0) + 104 >> 2] & 127](a2, e2, k2 + 16 | 0, k2);
            n2 = +g[k2 + 16 >> 2];
            s2 = +g[k2 >> 2] - n2;
            p2 = +g[k2 + 16 + 4 >> 2];
            o2 = +g[k2 + 4 >> 2] - p2;
            m2 = +g[k2 + 16 + 8 >> 2];
            r2 = +g[k2 + 8 >> 2] - m2;
            q2 = 1 / +G(+((h2 * s2 - f2 * o2) * (h2 * s2 - f2 * o2) + ((j2 * o2 - h2 * r2) * (j2 * o2 - h2 * r2) + (f2 * r2 - j2 * s2) * (f2 * r2 - j2 * s2))));
            e2 = e2 + 1 | 0;
            if ((h2 * s2 - f2 * o2) * q2 * +g[b2 + 8 >> 2] + (+g[b2 >> 2] * q2 * (j2 * o2 - h2 * r2) + +g[b2 + 4 >> 2] * q2 * (f2 * r2 - j2 * s2)) - (m2 * (h2 * s2 - f2 * o2) * q2 + (n2 * q2 * (j2 * o2 - h2 * r2) + p2 * q2 * (f2 * r2 - j2 * s2))) < -d2) {
              e2 = 0;
              a2 = 5;
              break;
            }
            if ((e2 | 0) >= 3) {
              e2 = 1;
              a2 = 5;
              break;
            }
          }
          if ((a2 | 0) == 5) {
            i = k2;
            return e2 | 0;
          }
          return 0;
        }
        function Kh(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, i2 = 0, j2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          h2 = ic(55) | 0;
          if (!h2)
            j2 = 0;
          else {
            c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
            j2 = h2 + 4 + 15 & -16;
          }
          c[j2 >> 2] = d2;
          c[j2 + 4 >> 2] = e2;
          c[j2 + 8 >> 2] = f2;
          c[j2 + 12 >> 2] = -1;
          c[j2 + 16 >> 2] = -1;
          c[j2 + 20 >> 2] = -1;
          c[j2 + 28 >> 2] = -1;
          g[j2 + 32 >> 2] = 0;
          f2 = j2;
          d2 = c[b2 + 4 >> 2] | 0;
          c[j2 + 24 >> 2] = d2;
          if ((d2 | 0) != (c[b2 + 8 >> 2] | 0)) {
            i2 = d2;
            e2 = b2 + 12 | 0;
            e2 = c[e2 >> 2] | 0;
            e2 = e2 + (i2 << 2) | 0;
            c[e2 >> 2] = f2;
            i2 = i2 + 1 | 0;
            c[b2 + 4 >> 2] = i2;
            return j2 | 0;
          }
          i2 = d2 | 0 ? d2 << 1 : 1;
          if ((d2 | 0) >= (i2 | 0)) {
            i2 = d2;
            e2 = b2 + 12 | 0;
            e2 = c[e2 >> 2] | 0;
            e2 = e2 + (i2 << 2) | 0;
            c[e2 >> 2] = f2;
            i2 = i2 + 1 | 0;
            c[b2 + 4 >> 2] = i2;
            return j2 | 0;
          }
          if (!i2)
            h2 = 0;
          else {
            c[6324] = (c[6324] | 0) + 1;
            h2 = ic((i2 << 2 | 3) + 16 | 0) | 0;
            if (!h2)
              h2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              h2 = h2 + 4 + 15 & -16;
            }
            d2 = c[b2 + 4 >> 2] | 0;
          }
          if ((d2 | 0) > 0) {
            e2 = 0;
            do {
              c[h2 + (e2 << 2) >> 2] = c[(c[b2 + 12 >> 2] | 0) + (e2 << 2) >> 2];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (d2 | 0));
          }
          e2 = c[b2 + 12 >> 2] | 0;
          if (e2) {
            if (a[b2 + 16 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[e2 + -4 >> 2] | 0);
              d2 = c[b2 + 4 >> 2] | 0;
            }
            c[b2 + 12 >> 2] = 0;
          }
          a[b2 + 16 >> 0] = 1;
          c[b2 + 12 >> 2] = h2;
          c[b2 + 8 >> 2] = i2;
          i2 = d2;
          e2 = b2 + 12 | 0;
          e2 = c[e2 >> 2] | 0;
          e2 = e2 + (i2 << 2) | 0;
          c[e2 >> 2] = f2;
          i2 = i2 + 1 | 0;
          c[b2 + 4 >> 2] = i2;
          return j2 | 0;
        }
        function Lh(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
          o2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          u2 = +g[a2 + 76 >> 2];
          t2 = +g[a2 + 60 >> 2];
          r2 = +g[a2 + 80 >> 2];
          q2 = +g[a2 + 64 >> 2];
          n2 = +g[a2 + 84 >> 2];
          m2 = +g[a2 + 68 >> 2];
          E2 = +g[b2 >> 2];
          y2 = +F(+E2);
          D2 = +g[b2 + 4 >> 2];
          x2 = +F(+D2);
          k2 = +g[b2 + 8 >> 2];
          l2 = +F(+k2);
          C2 = +g[b2 + 16 >> 2];
          w2 = +F(+C2);
          B2 = +g[b2 + 20 >> 2];
          v2 = +F(+B2);
          i2 = +g[b2 + 24 >> 2];
          j2 = +F(+i2);
          A2 = +g[b2 + 32 >> 2];
          s2 = +F(+A2);
          z2 = +g[b2 + 36 >> 2];
          p2 = +F(+z2);
          f2 = +g[b2 + 40 >> 2];
          h2 = +F(+f2);
          k2 = (u2 + t2) * 0.5 * E2 + (r2 + q2) * 0.5 * D2 + (n2 + m2) * 0.5 * k2 + +g[b2 + 48 >> 2];
          i2 = (u2 + t2) * 0.5 * C2 + (r2 + q2) * 0.5 * B2 + (n2 + m2) * 0.5 * i2 + +g[b2 + 52 >> 2];
          f2 = (u2 + t2) * 0.5 * A2 + (r2 + q2) * 0.5 * z2 + (n2 + m2) * 0.5 * f2 + +g[b2 + 56 >> 2];
          l2 = (o2 + (u2 - t2) * 0.5) * y2 + (o2 + (r2 - q2) * 0.5) * x2 + (o2 + (n2 - m2) * 0.5) * l2;
          j2 = (o2 + (u2 - t2) * 0.5) * w2 + (o2 + (r2 - q2) * 0.5) * v2 + (o2 + (n2 - m2) * 0.5) * j2;
          h2 = (o2 + (u2 - t2) * 0.5) * s2 + (o2 + (r2 - q2) * 0.5) * p2 + (o2 + (n2 - m2) * 0.5) * h2;
          g[d2 >> 2] = k2 - l2;
          g[d2 + 4 >> 2] = i2 - j2;
          g[d2 + 8 >> 2] = f2 - h2;
          g[d2 + 12 >> 2] = 0;
          g[e2 >> 2] = l2 + k2;
          g[e2 + 4 >> 2] = j2 + i2;
          g[e2 + 8 >> 2] = h2 + f2;
          g[e2 + 12 >> 2] = 0;
          return;
        }
        function Mh(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
          f2 = i;
          i = i + 16 | 0;
          y2 = c[a2 + 56 >> 2] | 0;
          z2 = c[a2 + 32 + (((y2 + 2 | 0) % 3 | 0) << 2) >> 2] | 0;
          c[f2 >> 2] = z2;
          c[f2 + 4 >> 2] = z2;
          c[f2 + 8 >> 2] = z2;
          g[f2 + 12 >> 2] = 0;
          g[f2 + (y2 << 2) >> 2] = (c[l >> 2] = z2, +g[l >> 2]) + +g[a2 + 32 + (y2 << 2) >> 2];
          k2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          h2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          o2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          k2 = k2 + +g[f2 >> 2];
          g[f2 >> 2] = k2;
          h2 = h2 + +g[f2 + 4 >> 2];
          g[f2 + 4 >> 2] = h2;
          o2 = o2 + +g[f2 + 8 >> 2];
          v2 = +F(+ +g[b2 >> 2]);
          u2 = +F(+ +g[b2 + 4 >> 2]);
          w2 = +F(+ +g[b2 + 8 >> 2]);
          r2 = +F(+ +g[b2 + 16 >> 2]);
          q2 = +F(+ +g[b2 + 20 >> 2]);
          s2 = +F(+ +g[b2 + 24 >> 2]);
          m2 = +F(+ +g[b2 + 32 >> 2]);
          j2 = +F(+ +g[b2 + 36 >> 2]);
          n2 = +F(+ +g[b2 + 40 >> 2]);
          x2 = +g[b2 + 48 >> 2];
          t2 = +g[b2 + 52 >> 2];
          p2 = +g[b2 + 56 >> 2];
          g[d2 >> 2] = x2 - (o2 * w2 + (v2 * k2 + u2 * h2));
          g[d2 + 4 >> 2] = t2 - (o2 * s2 + (r2 * k2 + q2 * h2));
          g[d2 + 8 >> 2] = p2 - (o2 * n2 + (m2 * k2 + j2 * h2));
          g[d2 + 12 >> 2] = 0;
          g[e2 >> 2] = x2 + (o2 * w2 + (v2 * k2 + u2 * h2));
          g[e2 + 4 >> 2] = t2 + (o2 * s2 + (r2 * k2 + q2 * h2));
          g[e2 + 8 >> 2] = p2 + (o2 * n2 + (m2 * k2 + j2 * h2));
          g[e2 + 12 >> 2] = 0;
          i = f2;
          return;
        }
        function Nh(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          if (a[d2 + 32 >> 0] & 1) {
            f2 = c[b2 + 4 >> 2] | 0;
            if (f2 | 0)
              Xi(f2, d2, e2);
            f2 = c[b2 >> 2] | 0;
            if (f2 | 0) {
              n2 = +g[d2 >> 2];
              l2 = +g[f2 + 128 >> 2];
              m2 = +g[d2 + 4 >> 2];
              k2 = +g[d2 + 8 >> 2];
              h2 = +g[e2 + 4 >> 2];
              p2 = +g[e2 + 8 >> 2];
              o2 = +g[e2 >> 2];
              j2 = +g[f2 + 180 >> 2] * (k2 * h2 - m2 * p2) + +g[f2 + 184 >> 2] * (n2 * p2 - k2 * o2) + (m2 * o2 - n2 * h2) * +g[f2 + 188 >> 2];
              i2 = (k2 * h2 - m2 * p2) * +g[f2 + 196 >> 2] + (n2 * p2 - k2 * o2) * +g[f2 + 200 >> 2] + (m2 * o2 - n2 * h2) * +g[f2 + 204 >> 2];
              h2 = (k2 * h2 - m2 * p2) * +g[f2 + 212 >> 2] + (n2 * p2 - k2 * o2) * +g[f2 + 216 >> 2] + (m2 * o2 - n2 * h2) * +g[f2 + 220 >> 2];
              g[f2 + 244 >> 2] = n2 * l2 + +g[f2 + 244 >> 2];
              g[f2 + 248 >> 2] = l2 * m2 + +g[f2 + 248 >> 2];
              g[f2 + 252 >> 2] = l2 * k2 + +g[f2 + 252 >> 2];
              g[f2 + 316 >> 2] = n2 * l2 + +g[f2 + 316 >> 2];
              g[f2 + 320 >> 2] = l2 * m2 + +g[f2 + 320 >> 2];
              g[f2 + 324 >> 2] = l2 * k2 + +g[f2 + 324 >> 2];
              g[f2 + 260 >> 2] = j2 + +g[f2 + 260 >> 2];
              g[f2 + 264 >> 2] = i2 + +g[f2 + 264 >> 2];
              g[f2 + 268 >> 2] = h2 + +g[f2 + 268 >> 2];
              g[f2 + 332 >> 2] = j2 + +g[f2 + 332 >> 2];
              g[f2 + 336 >> 2] = i2 + +g[f2 + 336 >> 2];
              g[f2 + 340 >> 2] = h2 + +g[f2 + 340 >> 2];
              c[f2 + 308 >> 2] = (c[f2 + 308 >> 2] | 0) + 1;
            }
          }
          if (!(a[d2 + 32 >> 0] & 2))
            return;
          Zi(b2, d2 + 16 | 0, e2);
          return;
        }
        function Oh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          c[b2 >> 2] = 5212;
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          a[b2 + 60 >> 0] = 1;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          c[b2 + 4 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = -1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 20 >> 2] = 0;
          a[b2 + 100 >> 0] = 1;
          c[b2 + 96 >> 2] = 0;
          c[b2 + 88 >> 2] = 0;
          c[b2 + 92 >> 2] = 0;
          a[b2 + 120 >> 0] = 1;
          c[b2 + 116 >> 2] = 0;
          c[b2 + 108 >> 2] = 0;
          c[b2 + 112 >> 2] = 0;
          c[b2 + 64 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 72 >> 2] = -1;
          c[b2 + 76 >> 2] = 0;
          c[b2 + 80 >> 2] = 0;
          a[b2 + 193 >> 0] = 0;
          a[b2 + 194 >> 0] = 1;
          a[b2 + 192 >> 0] = (d2 | 0) != 0 ^ 1;
          g[b2 + 140 >> 2] = 0;
          c[b2 + 144 >> 2] = 0;
          c[b2 + 164 >> 2] = 0;
          c[b2 + 148 >> 2] = 1;
          c[b2 + 152 >> 2] = 0;
          c[b2 + 156 >> 2] = 10;
          c[b2 + 160 >> 2] = 1;
          c[b2 + 168 >> 2] = 0;
          c[b2 + 172 >> 2] = 0;
          g[b2 + 176 >> 2] = 0;
          if (d2 | 0) {
            e2 = d2;
            d2 = b2 + 136 | 0;
            c[d2 >> 2] = e2;
            d2 = b2 + 188 | 0;
            c[d2 >> 2] = 0;
            d2 = b2 + 180 | 0;
            c[d2 >> 2] = 0;
            d2 = b2 + 184 | 0;
            c[d2 >> 2] = 0;
            b2 = b2 + 124 | 0;
            c[b2 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            return;
          }
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(91) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          Hi(d2);
          e2 = b2 + 136 | 0;
          c[e2 >> 2] = d2;
          e2 = b2 + 188 | 0;
          c[e2 >> 2] = 0;
          e2 = b2 + 180 | 0;
          c[e2 >> 2] = 0;
          e2 = b2 + 184 | 0;
          c[e2 >> 2] = 0;
          e2 = b2 + 124 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          return;
        }
        function Ph(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          k2 = c[b2 >> 2] | 0;
          if ((k2 | 0) == (c[a2 + 80 >> 2] | 0)) {
            j2 = 1;
            return +j2;
          }
          if (c[k2 + 204 >> 2] & 4 | 0) {
            j2 = 1;
            return +j2;
          }
          f2 = +g[b2 + 8 >> 2];
          h2 = +g[b2 + 12 >> 2];
          e2 = +g[b2 + 16 >> 2];
          if (d2) {
            i2 = f2;
            j2 = h2;
          } else {
            i2 = +g[k2 + 4 >> 2] * f2 + +g[k2 + 8 >> 2] * h2 + +g[k2 + 12 >> 2] * e2;
            j2 = f2 * +g[k2 + 20 >> 2] + h2 * +g[k2 + 24 >> 2] + e2 * +g[k2 + 28 >> 2];
            e2 = f2 * +g[k2 + 36 >> 2] + h2 * +g[k2 + 40 >> 2] + e2 * +g[k2 + 44 >> 2];
          }
          if (i2 * +g[a2 + 84 >> 2] + j2 * +g[a2 + 88 >> 2] + e2 * +g[a2 + 92 >> 2] < +g[a2 + 100 >> 2]) {
            j2 = 1;
            return +j2;
          }
          c[a2 + 4 >> 2] = c[b2 + 40 >> 2];
          c[a2 + 76 >> 2] = k2;
          if (d2) {
            c[a2 + 44 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 44 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
            c[a2 + 44 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
            c[a2 + 44 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
          } else {
            e2 = +g[b2 + 8 >> 2];
            f2 = +g[b2 + 12 >> 2];
            h2 = +g[b2 + 16 >> 2];
            i2 = e2 * +g[k2 + 20 >> 2] + f2 * +g[k2 + 24 >> 2] + h2 * +g[k2 + 28 >> 2];
            j2 = e2 * +g[k2 + 36 >> 2] + f2 * +g[k2 + 40 >> 2] + h2 * +g[k2 + 44 >> 2];
            g[a2 + 44 >> 2] = +g[k2 + 4 >> 2] * e2 + +g[k2 + 8 >> 2] * f2 + +g[k2 + 12 >> 2] * h2;
            g[a2 + 48 >> 2] = i2;
            g[a2 + 52 >> 2] = j2;
            g[a2 + 56 >> 2] = 0;
          }
          c[a2 + 60 >> 2] = c[b2 + 24 >> 2];
          c[a2 + 60 + 4 >> 2] = c[b2 + 24 + 4 >> 2];
          c[a2 + 60 + 8 >> 2] = c[b2 + 24 + 8 >> 2];
          c[a2 + 60 + 12 >> 2] = c[b2 + 24 + 12 >> 2];
          j2 = +g[b2 + 40 >> 2];
          return +j2;
        }
        function Qh(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          d2 = c[b2 + 16 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 20 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
          }
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          d2 = c[b2 + 36 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 40 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 36 >> 2] = 0;
          }
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          d2 = c[b2 + 56 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 60 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 56 >> 2] = 0;
          }
          a[b2 + 60 >> 0] = 1;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          if ((c[b2 + 12 >> 2] | 0) >= 2) {
            xf(b2);
            return;
          }
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(43) | 0;
          if (!d2)
            f2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            f2 = d2 + 4 + 15 & -16;
          }
          e2 = c[b2 + 8 >> 2] | 0;
          if ((e2 | 0) > 0) {
            d2 = 0;
            do {
              g2 = f2 + (d2 * 12 | 0) | 0;
              h2 = (c[b2 + 16 >> 2] | 0) + (d2 * 12 | 0) | 0;
              c[g2 >> 2] = c[h2 >> 2];
              c[g2 + 4 >> 2] = c[h2 + 4 >> 2];
              c[g2 + 8 >> 2] = c[h2 + 8 >> 2];
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (e2 | 0));
          }
          d2 = c[b2 + 16 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 20 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
          }
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = f2;
          c[b2 + 12 >> 2] = 2;
          xf(b2);
          return;
        }
        function Rh(a2, b2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          e2 = e2 | 0;
          ii(a2, b2, e2) | 0;
          c[b2 + 52 >> 2] = c[a2 + 52 >> 2];
          c[b2 + 56 >> 2] = c[a2 + 56 >> 2];
          c[b2 + 60 >> 2] = c[a2 + 60 >> 2];
          c[b2 + 64 >> 2] = c[a2 + 64 >> 2];
          c[b2 + 68 >> 2] = c[a2 + 68 >> 2];
          c[b2 + 72 >> 2] = c[a2 + 72 >> 2];
          c[b2 + 76 >> 2] = c[a2 + 76 >> 2];
          c[b2 + 80 >> 2] = c[a2 + 80 >> 2];
          c[b2 + 84 >> 2] = c[a2 + 84 >> 2];
          c[b2 + 88 >> 2] = c[a2 + 88 >> 2];
          c[b2 + 92 >> 2] = c[a2 + 92 >> 2];
          c[b2 + 96 >> 2] = c[a2 + 96 >> 2];
          c[b2 + 100 >> 2] = c[a2 + 100 >> 2];
          c[b2 + 104 >> 2] = c[a2 + 104 >> 2];
          c[b2 + 108 >> 2] = c[a2 + 108 >> 2];
          c[b2 + 112 >> 2] = c[a2 + 112 >> 2];
          c[b2 + 116 >> 2] = c[a2 + 116 >> 2];
          c[b2 + 120 >> 2] = c[a2 + 120 >> 2];
          c[b2 + 124 >> 2] = c[a2 + 124 >> 2];
          c[b2 + 128 >> 2] = c[a2 + 128 >> 2];
          c[b2 + 132 >> 2] = c[a2 + 132 >> 2];
          c[b2 + 136 >> 2] = c[a2 + 136 >> 2];
          c[b2 + 140 >> 2] = c[a2 + 140 >> 2];
          c[b2 + 144 >> 2] = c[a2 + 144 >> 2];
          c[b2 + 148 >> 2] = c[a2 + 148 >> 2];
          c[b2 + 152 >> 2] = c[a2 + 152 >> 2];
          c[b2 + 156 >> 2] = c[a2 + 156 >> 2];
          c[b2 + 160 >> 2] = c[a2 + 160 >> 2];
          c[b2 + 164 >> 2] = c[a2 + 164 >> 2];
          c[b2 + 168 >> 2] = c[a2 + 168 >> 2];
          c[b2 + 172 >> 2] = c[a2 + 172 >> 2];
          c[b2 + 176 >> 2] = c[a2 + 176 >> 2];
          c[b2 + 180 >> 2] = c[a2 + 188 >> 2];
          c[b2 + 184 >> 2] = c[a2 + 184 >> 2];
          c[b2 + 188 >> 2] = c[a2 + 196 >> 2];
          c[b2 + 192 >> 2] = c[a2 + 192 >> 2];
          c[b2 + 196 >> 2] = d[a2 + 180 >> 0];
          c[b2 + 200 >> 2] = d[a2 + 49 >> 0];
          return 12286;
        }
        function Sh(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          c[a2 + 4 >> 2] = 35;
          c[a2 + 8 >> 2] = 0;
          c[a2 + 12 >> 2] = -1;
          c[a2 + 16 >> 2] = 1065353216;
          c[a2 + 20 >> 2] = 1065353216;
          c[a2 + 24 >> 2] = 1065353216;
          g[a2 + 28 >> 2] = 0;
          g[a2 + 48 >> 2] = 0.03999999910593033;
          c[a2 >> 2] = 7764;
          c[a2 + 56 >> 2] = 1;
          h2 = +g[b2 >> 2];
          f2 = +g[b2 + 4 >> 2];
          d2 = +g[b2 + 8 >> 2];
          d2 = +g[b2 + ((h2 < f2 ? h2 < d2 ? 0 : 2 : f2 < d2 ? 1 : 2) << 2) >> 2] * 0.10000000149011612;
          if (d2 < 0.03999999910593033) {
            j2 = +Hz(a2);
            i2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            j2 = j2 + +g[a2 + 32 >> 2];
            i2 = i2 + +g[a2 + 36 >> 2];
            h2 = h2 + +g[a2 + 40 >> 2];
            g[a2 + 48 >> 2] = d2;
            d2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            f2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            h2 = h2 - +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
            g[a2 + 32 >> 2] = j2 - d2;
            g[a2 + 36 >> 2] = i2 - f2;
            g[a2 + 40 >> 2] = h2;
            g[a2 + 44 >> 2] = 0;
            e2 = c[a2 >> 2] | 0;
          } else
            e2 = 7764;
          h2 = +Cb[c[e2 + 48 >> 2] & 15](a2);
          i2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          j2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          i2 = +g[b2 + 4 >> 2] * +g[a2 + 20 >> 2] - i2;
          j2 = +g[b2 + 8 >> 2] * +g[a2 + 24 >> 2] - j2;
          g[a2 + 32 >> 2] = +g[b2 >> 2] * +g[a2 + 16 >> 2] - h2;
          g[a2 + 36 >> 2] = i2;
          g[a2 + 40 >> 2] = j2;
          g[a2 + 44 >> 2] = 0;
          c[a2 + 4 >> 2] = 13;
          return;
        }
        function Th() {
          var b2 = 0, d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(343) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          c[b2 + 164 >> 2] = 1065353216;
          c[b2 + 168 >> 2] = 1065353216;
          c[b2 + 172 >> 2] = 1065353216;
          g[b2 + 176 >> 2] = 0;
          c[b2 + 180 >> 2] = 0;
          g[b2 + 184 >> 2] = 999999984306749400;
          d2 = b2 + 188 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[b2 + 204 >> 2] = 1;
          c[b2 + 208 >> 2] = -1;
          c[b2 + 212 >> 2] = -1;
          c[b2 + 216 >> 2] = 1;
          g[b2 + 220 >> 2] = 0;
          g[b2 + 224 >> 2] = 0.5;
          g[b2 + 228 >> 2] = 0;
          g[b2 + 232 >> 2] = 0;
          g[b2 + 236 >> 2] = 0;
          g[b2 + 240 >> 2] = 0.10000000149011612;
          g[b2 + 244 >> 2] = 1e4;
          c[b2 + 252 >> 2] = 0;
          c[b2 + 256 >> 2] = -1;
          c[b2 + 260 >> 2] = -1;
          g[b2 + 264 >> 2] = 1;
          g[b2 + 268 >> 2] = 0;
          g[b2 + 272 >> 2] = 0;
          c[b2 + 276 >> 2] = 0;
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          c[b2 + 288 >> 2] = 0;
          c[b2 + 300 >> 2] = 0;
          c[b2 + 4 >> 2] = 1065353216;
          d2 = b2 + 8 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[b2 + 24 >> 2] = 1065353216;
          d2 = b2 + 28 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[b2 + 44 >> 2] = 1065353216;
          d2 = b2 + 48 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[d2 + 16 >> 2] = 0;
          c[b2 >> 2] = 6296;
          a[b2 + 320 >> 0] = 1;
          c[b2 + 316 >> 2] = 0;
          c[b2 + 308 >> 2] = 0;
          c[b2 + 312 >> 2] = 0;
          c[b2 + 248 >> 2] = 4;
          return b2 | 0;
        }
        function Uh(a2, d2, e2, f2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          h2 = i;
          i = i + 96 | 0;
          g[h2 + 4 >> 2] = 1;
          c[h2 + 8 >> 2] = 0;
          b[h2 + 12 >> 1] = 1;
          b[h2 + 14 >> 1] = -1;
          c[h2 + 16 >> 2] = 0;
          c[h2 >> 2] = 2896;
          c[h2 + 20 >> 2] = c[d2 >> 2];
          c[h2 + 20 + 4 >> 2] = c[d2 + 4 >> 2];
          c[h2 + 20 + 8 >> 2] = c[d2 + 8 >> 2];
          c[h2 + 20 + 12 >> 2] = c[d2 + 12 >> 2];
          c[h2 + 36 >> 2] = c[e2 >> 2];
          c[h2 + 36 + 4 >> 2] = c[e2 + 4 >> 2];
          c[h2 + 36 + 8 >> 2] = c[e2 + 8 >> 2];
          c[h2 + 36 + 12 >> 2] = c[e2 + 12 >> 2];
          a2 = c[a2 + 4 >> 2] | 0;
          Yb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, d2, e2, h2);
          a2 = c[h2 + 8 >> 2] | 0;
          if (!a2) {
            f2 = 0;
            i = h2;
            return f2 | 0;
          }
          if (!(c[a2 + 248 >> 2] & 2)) {
            f2 = 0;
            i = h2;
            return f2 | 0;
          }
          if (c[a2 + 204 >> 2] & 4 | 0) {
            f2 = 0;
            i = h2;
            return f2 | 0;
          }
          c[f2 >> 2] = c[h2 + 68 >> 2];
          c[f2 + 4 >> 2] = c[h2 + 68 + 4 >> 2];
          c[f2 + 8 >> 2] = c[h2 + 68 + 8 >> 2];
          c[f2 + 12 >> 2] = c[h2 + 68 + 12 >> 2];
          c[f2 + 16 >> 2] = c[h2 + 52 >> 2];
          c[f2 + 16 + 4 >> 2] = c[h2 + 52 + 4 >> 2];
          c[f2 + 16 + 8 >> 2] = c[h2 + 52 + 8 >> 2];
          c[f2 + 16 + 12 >> 2] = c[h2 + 52 + 12 >> 2];
          m2 = +g[f2 + 16 >> 2];
          l2 = +g[f2 + 20 >> 2];
          k2 = +g[f2 + 24 >> 2];
          j2 = 1 / +G(+(m2 * m2 + l2 * l2 + k2 * k2));
          g[f2 + 16 >> 2] = m2 * j2;
          g[f2 + 20 >> 2] = l2 * j2;
          g[f2 + 24 >> 2] = k2 * j2;
          c[f2 + 32 >> 2] = c[h2 + 4 >> 2];
          f2 = a2;
          i = h2;
          return f2 | 0;
        }
        function Vh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          e2 = b2 + 328 | 0;
          f2 = d2;
          g2 = e2 + 104 | 0;
          do {
            c[e2 >> 2] = c[f2 >> 2];
            e2 = e2 + 4 | 0;
            f2 = f2 + 4 | 0;
          } while ((e2 | 0) < (g2 | 0));
          i2 = c[d2 + 108 >> 2] | 0;
          e2 = c[b2 + 436 >> 2] | 0;
          a:
            do
              if ((e2 | 0) > (i2 | 0))
                e2 = b2 + 444 | 0;
              else {
                if ((e2 | 0) < (i2 | 0) ? (c[b2 + 440 >> 2] | 0) < (i2 | 0) : 0) {
                  if ((i2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, h2 = ic((i2 << 2 | 3) + 16 | 0) | 0, (h2 | 0) != 0) : 0) {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    h2 = h2 + 4 + 15 & -16;
                  } else
                    h2 = 0;
                  g2 = c[b2 + 436 >> 2] | 0;
                  f2 = 0;
                  while (1) {
                    if ((f2 | 0) >= (g2 | 0))
                      break;
                    c[h2 + (f2 << 2) >> 2] = c[(c[b2 + 444 >> 2] | 0) + (f2 << 2) >> 2];
                    f2 = f2 + 1 | 0;
                  }
                  f2 = c[b2 + 444 >> 2] | 0;
                  if (f2 | 0) {
                    if (!((a[b2 + 448 >> 0] & 1) == 0 | (f2 | 0) == 0)) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[f2 + -4 >> 2] | 0);
                    }
                    c[b2 + 444 >> 2] = 0;
                  }
                  a[b2 + 448 >> 0] = 1;
                  c[b2 + 444 >> 2] = h2;
                  c[b2 + 440 >> 2] = i2;
                }
                while (1) {
                  if ((e2 | 0) >= (i2 | 0)) {
                    e2 = b2 + 444 | 0;
                    break a;
                  }
                  c[(c[b2 + 444 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                  e2 = e2 + 1 | 0;
                }
              }
            while (0);
          c[b2 + 436 >> 2] = i2;
          f2 = c[e2 >> 2] | 0;
          e2 = 0;
          while (1) {
            if ((e2 | 0) >= (i2 | 0))
              break;
            c[f2 + (e2 << 2) >> 2] = c[(c[d2 + 116 >> 2] | 0) + (e2 << 2) >> 2];
            e2 = e2 + 1 | 0;
          }
          Ni(b2 + 452 | 0, d2 + 124 | 0);
          Ni(b2 + 472 | 0, d2 + 144 | 0);
          return;
        }
        function Wh(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          kb[c[(c[b2 >> 2] | 0) + 32 >> 2] & 255](b2);
          e2 = yb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, 104, 1) | 0;
          d2 = c[e2 + 8 >> 2] | 0;
          f2 = d2;
          g2 = f2 + 104 | 0;
          do {
            c[f2 >> 2] = 0;
            f2 = f2 + 4 | 0;
          } while ((f2 | 0) < (g2 | 0));
          c[d2 + 88 >> 2] = c[a2 + 248 >> 2];
          c[d2 + 92 >> 2] = c[a2 + 252 >> 2];
          c[d2 + 96 >> 2] = c[a2 + 256 >> 2];
          c[d2 + 100 >> 2] = c[a2 + 260 >> 2];
          c[d2 >> 2] = c[a2 + 92 >> 2];
          c[d2 + 4 >> 2] = c[a2 + 96 >> 2];
          c[d2 + 8 >> 2] = c[a2 + 100 >> 2];
          c[d2 + 12 >> 2] = c[a2 + 104 >> 2];
          c[d2 + 16 >> 2] = c[a2 + 108 >> 2];
          c[d2 + 20 >> 2] = c[a2 + 116 >> 2];
          c[d2 + 24 >> 2] = c[a2 + 120 >> 2];
          c[d2 + 28 >> 2] = c[a2 + 124 >> 2];
          c[d2 + 32 >> 2] = c[a2 + 128 >> 2];
          c[d2 + 36 >> 2] = c[a2 + 132 >> 2];
          c[d2 + 40 >> 2] = c[a2 + 140 >> 2];
          c[d2 + 44 >> 2] = c[a2 + 144 >> 2];
          c[d2 + 48 >> 2] = c[a2 + 148 >> 2];
          c[d2 + 52 >> 2] = c[a2 + 152 >> 2];
          c[d2 + 56 >> 2] = c[a2 + 168 >> 2];
          c[d2 + 60 >> 2] = c[a2 + 172 >> 2];
          c[d2 + 64 >> 2] = c[a2 + 112 >> 2];
          c[d2 + 68 >> 2] = c[a2 + 156 >> 2];
          c[d2 + 72 >> 2] = c[a2 + 160 >> 2];
          c[d2 + 76 >> 2] = c[a2 + 164 >> 2];
          c[d2 + 80 >> 2] = c[a2 + 136 >> 2];
          ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, 12394, 1145853764, d2);
          cd(a2, b2);
          aj(a2, b2);
          kb[c[(c[b2 >> 2] | 0) + 36 >> 2] & 255](b2);
          return;
        }
        function Xh(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          if ((c[b2 + 16 >> 2] | 0) != (0 - (c[b2 + 76 >> 2] | 0) | 0))
            return;
          d2 = c[b2 + 4 >> 2] | 0;
          if (d2 | 0)
            hn(b2 + 4 | 0, d2);
          d2 = c[b2 + 8 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = -1;
          d2 = c[b2 + 36 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 40 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 36 >> 2] = 0;
          }
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 20 >> 2] = 0;
          d2 = c[b2 + 64 >> 2] | 0;
          if (d2 | 0)
            hn(b2 + 64 | 0, d2);
          d2 = c[b2 + 68 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 68 >> 2] = 0;
          c[b2 + 72 >> 2] = -1;
          d2 = c[b2 + 96 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 100 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 96 >> 2] = 0;
          }
          a[b2 + 100 >> 0] = 1;
          c[b2 + 96 >> 2] = 0;
          c[b2 + 88 >> 2] = 0;
          c[b2 + 92 >> 2] = 0;
          c[b2 + 80 >> 2] = 0;
          a[b2 + 193 >> 0] = 0;
          a[b2 + 194 >> 0] = 1;
          c[b2 + 144 >> 2] = 0;
          c[b2 + 164 >> 2] = 0;
          c[b2 + 148 >> 2] = 1;
          c[b2 + 152 >> 2] = 0;
          c[b2 + 156 >> 2] = 10;
          c[b2 + 160 >> 2] = 1;
          c[b2 + 124 >> 2] = 0;
          c[b2 + 124 + 4 >> 2] = 0;
          c[b2 + 124 + 8 >> 2] = 0;
          c[b2 + 168 >> 2] = 0;
          c[b2 + 168 + 4 >> 2] = 0;
          c[b2 + 168 + 8 >> 2] = 0;
          c[b2 + 168 + 12 >> 2] = 0;
          c[b2 + 168 + 16 >> 2] = 0;
          c[b2 + 168 + 20 >> 2] = 0;
          return;
        }
        function Yh(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          e2 = i;
          i = i + 32 | 0;
          d2 = c[b2 + 428 >> 2] | 0;
          switch (c[a2 + 428 >> 2] & 48 & d2 & 63) {
            case 32: {
              if ((a2 | 0) == (b2 | 0) & (d2 & 64 | 0) == 0) {
                i = e2;
                return;
              }
              g[e2 + 4 >> 2] = 1;
              c[e2 + 8 + 4 >> 2] = 0;
              c[e2 + 8 + 4 + 4 >> 2] = 0;
              c[e2 + 8 + 4 + 8 >> 2] = 0;
              c[e2 >> 2] = 3356;
              c[e2 + 8 >> 2] = c[a2 + 496 >> 2];
              d2 = c[a2 + 192 >> 2] | 0;
              f2 = +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              d2 = c[b2 + 192 >> 2] | 0;
              g[e2 + 12 >> 2] = f2 + +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              c[e2 + 16 >> 2] = c[(+g[a2 + 356 >> 2] < +g[b2 + 356 >> 2] ? a2 + 356 | 0 : b2 + 356 | 0) >> 2];
              c[e2 + 24 >> 2] = a2;
              c[e2 + 28 >> 2] = b2;
              Ge(c[a2 + 1088 >> 2] | 0, c[b2 + 1088 >> 2] | 0, e2);
              i = e2;
              return;
            }
            case 16: {
              if ((a2 | 0) == (b2 | 0)) {
                i = e2;
                return;
              }
              c[e2 >> 2] = 3392;
              d2 = c[a2 + 192 >> 2] | 0;
              f2 = +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              d2 = c[b2 + 192 >> 2] | 0;
              g[e2 + 12 >> 2] = f2 + +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              c[e2 + 4 >> 2] = a2;
              c[e2 + 8 >> 2] = b2;
              Ge(c[a2 + 968 >> 2] | 0, c[b2 + 1028 >> 2] | 0, e2);
              c[e2 + 4 >> 2] = b2;
              c[e2 + 8 >> 2] = a2;
              Ge(c[b2 + 968 >> 2] | 0, c[a2 + 1028 >> 2] | 0, e2);
              i = e2;
              return;
            }
            default: {
              i = e2;
              return;
            }
          }
        }
        function Zh(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
          j2 = i;
          i = i + 32 | 0;
          c[j2 + 16 >> 2] = c[d2 >> 2];
          c[j2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
          c[j2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
          c[j2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
          f2 = +g[j2 + 16 >> 2];
          h2 = +g[j2 + 16 + 4 >> 2];
          e2 = +g[j2 + 16 + 8 >> 2];
          if (f2 * f2 + h2 * h2 + e2 * e2 < 14210854715202004e-30) {
            c[j2 + 16 >> 2] = -1082130432;
            c[j2 + 16 + 4 >> 2] = -1082130432;
            c[j2 + 16 + 8 >> 2] = -1082130432;
            g[j2 + 16 + 12 >> 2] = 0;
            f2 = -1;
            h2 = -1;
            e2 = -1;
          }
          k2 = 1 / +G(+(f2 * f2 + h2 * h2 + e2 * e2));
          g[j2 + 16 >> 2] = f2 * k2;
          g[j2 + 16 + 4 >> 2] = h2 * k2;
          g[j2 + 16 + 8 >> 2] = e2 * k2;
          sd(j2, b2, j2 + 16 | 0);
          switch (c[b2 + 4 >> 2] | 0) {
            case 8: {
              e2 = +g[b2 + 32 >> 2] * +g[b2 + 16 >> 2];
              break;
            }
            case 0: {
              e2 = +g[b2 + 48 >> 2];
              break;
            }
            case 1: {
              e2 = +g[b2 + 48 >> 2];
              break;
            }
            case 13: {
              e2 = +g[b2 + 48 >> 2];
              break;
            }
            case 11: {
              e2 = +g[b2 + 48 >> 2];
              break;
            }
            case 10: {
              e2 = +g[b2 + 48 >> 2];
              break;
            }
            case 4:
            case 5: {
              e2 = +g[b2 + 48 >> 2];
              break;
            }
            default:
              e2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          }
          h2 = e2 * +g[j2 + 16 + 4 >> 2] + +g[j2 + 4 >> 2];
          k2 = e2 * +g[j2 + 16 + 8 >> 2] + +g[j2 + 8 >> 2];
          g[a2 >> 2] = e2 * +g[j2 + 16 >> 2] + +g[j2 >> 2];
          g[a2 + 4 >> 2] = h2;
          g[a2 + 8 >> 2] = k2;
          g[a2 + 12 >> 2] = 0;
          i = j2;
          return;
        }
        function _h(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
          m2 = i;
          i = i + 80 | 0;
          c[a2 >> 2] = 0;
          c[a2 + 4 >> 2] = 0;
          c[a2 + 8 >> 2] = 0;
          c[a2 + 12 >> 2] = 0;
          e2 = +g[d2 >> 2];
          f2 = +g[d2 + 4 >> 2];
          j2 = +g[d2 + 8 >> 2];
          if (e2 * e2 + f2 * f2 + j2 * j2 < 9999999747378752e-20) {
            k2 = 1065353216;
            h2 = 0;
            e2 = 0;
            d2 = 0;
          } else {
            o2 = 1 / +G(+(e2 * e2 + f2 * f2 + j2 * j2));
            k2 = (g[l >> 2] = e2 * o2, c[l >> 2] | 0);
            n2 = (g[l >> 2] = f2 * o2, c[l >> 2] | 0);
            h2 = (g[l >> 2] = j2 * o2, c[l >> 2] | 0);
            e2 = +g[d2 + 12 >> 2];
            d2 = n2;
          }
          c[m2 + 32 >> 2] = 7744;
          n2 = m2 + 32 + 4 | 0;
          c[n2 >> 2] = 0;
          c[n2 + 4 >> 2] = 0;
          c[n2 + 8 >> 2] = 0;
          c[n2 + 12 >> 2] = 0;
          g[m2 + 32 + 20 >> 2] = -999999984306749400;
          c[m2 + 32 + 24 >> 2] = k2;
          c[m2 + 32 + 28 >> 2] = d2;
          c[m2 + 32 + 32 >> 2] = h2;
          g[m2 + 32 + 36 >> 2] = e2;
          c[m2 + 16 >> 2] = 1566444395;
          c[m2 + 16 + 4 >> 2] = 1566444395;
          c[m2 + 16 + 8 >> 2] = 1566444395;
          g[m2 + 16 + 12 >> 2] = 0;
          b2 = c[b2 + 96 >> 2] | 0;
          k2 = c[(c[b2 >> 2] | 0) + 8 >> 2] | 0;
          g[m2 >> 2] = -999999984306749400;
          g[m2 + 4 >> 2] = -999999984306749400;
          g[m2 + 8 >> 2] = -999999984306749400;
          g[m2 + 12 >> 2] = 0;
          Yb[k2 & 127](b2, m2 + 32 | 0, m2, m2 + 16 | 0);
          c[a2 >> 2] = c[n2 >> 2];
          c[a2 + 4 >> 2] = c[n2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[n2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[n2 + 12 >> 2];
          i = m2;
          return;
        }
        function $h(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          k2 = +g[b2 + 64 >> 2] * 0.5;
          l2 = c[b2 + 72 >> 2] | 0;
          f2 = +g[d2 >> 2];
          i2 = +g[d2 + 4 >> 2];
          j2 = +g[d2 + 8 >> 2];
          j2 = +G(+(f2 * f2 + i2 * i2 + j2 * j2));
          e2 = c[b2 + 68 >> 2] | 0;
          do
            if (!(+g[d2 + (l2 << 2) >> 2] > j2 * +g[b2 + 56 >> 2])) {
              f2 = +g[d2 + (e2 << 2) >> 2];
              h2 = c[b2 + 76 >> 2] | 0;
              i2 = +g[d2 + (h2 << 2) >> 2];
              j2 = +G(+(f2 * f2 + i2 * i2));
              if (j2 > 11920928955078125e-23) {
                j2 = +g[b2 + 60 >> 2] / j2;
                g[a2 + (e2 << 2) >> 2] = f2 * j2;
                g[a2 + (l2 << 2) >> 2] = -k2;
                g[a2 + (h2 << 2) >> 2] = i2 * j2;
                break;
              } else {
                g[a2 + (e2 << 2) >> 2] = 0;
                g[a2 + (l2 << 2) >> 2] = -k2;
                g[a2 + (h2 << 2) >> 2] = 0;
                break;
              }
            } else {
              g[a2 + (e2 << 2) >> 2] = 0;
              g[a2 + (l2 << 2) >> 2] = k2;
              g[a2 + (c[b2 + 76 >> 2] << 2) >> 2] = 0;
            }
          while (0);
          if (!(+Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2) != 0))
            return;
          i2 = +g[d2 >> 2];
          j2 = +g[d2 + 4 >> 2];
          k2 = +g[d2 + 8 >> 2];
          m2 = i2 * i2 + j2 * j2 + k2 * k2 < 14210854715202004e-30 ? -1 : i2;
          f2 = i2 * i2 + j2 * j2 + k2 * k2 < 14210854715202004e-30 ? -1 : j2;
          k2 = i2 * i2 + j2 * j2 + k2 * k2 < 14210854715202004e-30 ? -1 : k2;
          j2 = 1 / +G(+(k2 * k2 + (m2 * m2 + f2 * f2)));
          i2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          g[a2 >> 2] = +g[a2 >> 2] + i2 * j2 * m2;
          g[a2 + 4 >> 2] = i2 * j2 * f2 + +g[a2 + 4 >> 2];
          g[a2 + 8 >> 2] = i2 * j2 * k2 + +g[a2 + 8 >> 2];
          return;
        }
        function ai(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          g2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 >> 2] = g2;
          if (g2 | 0)
            mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
          c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
          c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
          c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
          c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
          c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
          c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
          c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
          f2 = c[a2 + 100 >> 2] | 0;
          c[b2 + 60 >> 2] = f2;
          if (!f2) {
            c[b2 + 52 >> 2] = 0;
            c[b2 + 56 >> 2] = 0;
            return 16402;
          }
          c[b2 + 52 >> 2] = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[a2 + 108 >> 2] | 0) | 0;
          c[b2 + 56 >> 2] = 0;
          g2 = yb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, 16, f2) | 0;
          if ((f2 | 0) > 0) {
            e2 = c[a2 + 108 >> 2] | 0;
            b2 = c[g2 + 8 >> 2] | 0;
            a2 = 0;
            while (1) {
              c[b2 >> 2] = c[e2 + (a2 << 4) >> 2];
              c[b2 + 4 >> 2] = c[e2 + (a2 << 4) + 4 >> 2];
              c[b2 + 8 >> 2] = c[e2 + (a2 << 4) + 8 >> 2];
              c[b2 + 12 >> 2] = c[e2 + (a2 << 4) + 12 >> 2];
              a2 = a2 + 1 | 0;
              if ((a2 | 0) == (f2 | 0))
                break;
              else
                b2 = b2 + 16 | 0;
            }
          } else
            e2 = c[a2 + 108 >> 2] | 0;
          ib[c[(c[d2 >> 2] | 0) + 20 >> 2] & 31](d2, g2, 18816, 1497453121, e2);
          return 16402;
        }
        function bi(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[a2 + 300 >> 2] = c[b2 >> 2];
          c[a2 + 300 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 300 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 300 + 12 >> 2] = c[b2 + 12 >> 2];
          c[a2 + 316 >> 2] = c[b2 + 16 >> 2];
          c[a2 + 316 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
          c[a2 + 316 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
          c[a2 + 316 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
          c[a2 + 332 >> 2] = c[b2 + 32 >> 2];
          c[a2 + 332 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
          c[a2 + 332 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
          c[a2 + 332 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
          c[a2 + 348 >> 2] = c[b2 + 48 >> 2];
          c[a2 + 348 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
          c[a2 + 348 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
          c[a2 + 348 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
          c[a2 + 364 >> 2] = c[d2 >> 2];
          c[a2 + 364 + 4 >> 2] = c[d2 + 4 >> 2];
          c[a2 + 364 + 8 >> 2] = c[d2 + 8 >> 2];
          c[a2 + 364 + 12 >> 2] = c[d2 + 12 >> 2];
          c[a2 + 380 >> 2] = c[d2 + 16 >> 2];
          c[a2 + 380 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[a2 + 380 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[a2 + 380 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[a2 + 396 >> 2] = c[d2 + 32 >> 2];
          c[a2 + 396 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[a2 + 396 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[a2 + 396 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          c[a2 + 412 >> 2] = c[d2 + 48 >> 2];
          c[a2 + 412 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[a2 + 412 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[a2 + 412 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          kb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 255](a2);
          return;
        }
        function ci(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          n2 = c[a2 + 4 >> 2] | 0;
          a2 = c[a2 + 64 >> 2] | 0;
          do
            if (!n2)
              if (!a2) {
                e2 = 0;
                m2 = 0;
                j2 = 0;
                l2 = 0;
                i2 = 0;
                k2 = 0;
                h2 = 0;
                f2 = 0;
              } else {
                e2 = +g[a2 >> 2];
                m2 = +g[a2 + 12 >> 2];
                j2 = +g[a2 + 16 >> 2];
                l2 = +g[a2 + 20 >> 2];
                i2 = +g[a2 + 24 >> 2];
                k2 = +g[a2 + 28 >> 2];
                h2 = +g[a2 + 4 >> 2];
                f2 = +g[a2 + 8 >> 2];
              }
            else {
              e2 = +g[n2 >> 2];
              if (!a2) {
                m2 = +g[n2 + 12 >> 2];
                j2 = +g[n2 + 16 >> 2];
                l2 = +g[n2 + 20 >> 2];
                i2 = +g[n2 + 24 >> 2];
                k2 = +g[n2 + 28 >> 2];
                h2 = +g[n2 + 4 >> 2];
                f2 = +g[n2 + 8 >> 2];
                break;
              }
              k2 = +g[a2 >> 2];
              e2 = e2 < k2 ? e2 : k2;
              k2 = +g[n2 + 16 >> 2];
              j2 = +g[a2 + 16 >> 2];
              j2 = k2 > j2 ? k2 : j2;
              k2 = +g[n2 + 4 >> 2];
              h2 = +g[a2 + 4 >> 2];
              h2 = k2 < h2 ? k2 : h2;
              k2 = +g[n2 + 20 >> 2];
              l2 = +g[a2 + 20 >> 2];
              l2 = k2 > l2 ? k2 : l2;
              k2 = +g[n2 + 8 >> 2];
              f2 = +g[a2 + 8 >> 2];
              f2 = k2 < f2 ? k2 : f2;
              k2 = +g[n2 + 24 >> 2];
              i2 = +g[a2 + 24 >> 2];
              if (k2 > i2) {
                m2 = 0;
                i2 = k2;
                k2 = 0;
              } else {
                m2 = 0;
                k2 = 0;
              }
            }
          while (0);
          g[b2 >> 2] = e2;
          g[b2 + 4 >> 2] = h2;
          g[b2 + 8 >> 2] = f2;
          g[b2 + 12 >> 2] = m2;
          g[d2 >> 2] = j2;
          g[d2 + 4 >> 2] = l2;
          g[d2 + 8 >> 2] = i2;
          g[d2 + 12 >> 2] = k2;
          return;
        }
        function di(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0;
          Bd(a2);
          if ((ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0 ? (d2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0, (ob[c[(c[d2 >> 2] | 0) + 56 >> 2] & 127](d2) | 0) & 6144 | 0) : 0) ? (b2 = ob[c[(c[a2 >> 2] | 0) + 104 >> 2] & 127](a2) | 0, (b2 | 0) > 0) : 0)
            do {
              d2 = b2;
              b2 = b2 + -1 | 0;
              e2 = Jb[c[(c[a2 >> 2] | 0) + 108 >> 2] & 31](a2, b2) | 0;
              mb[c[(c[a2 >> 2] | 0) + 168 >> 2] & 127](a2, e2);
            } while ((d2 | 0) > 1);
          if ((((ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0 ? (e2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0, (ob[c[(c[e2 >> 2] | 0) + 56 >> 2] & 127](e2) | 0) & 16387 | 0) : 0) ? ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0 : 0) ? (e2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0, ob[c[(c[e2 >> 2] | 0) + 56 >> 2] & 127](e2) | 0) : 0) ? (c[a2 + 280 >> 2] | 0) > 0 : 0) {
            b2 = 0;
            do {
              e2 = c[(c[a2 + 288 >> 2] | 0) + (b2 << 2) >> 2] | 0;
              mb[c[(c[e2 >> 2] | 0) + 12 >> 2] & 127](e2, c[a2 + 72 >> 2] | 0);
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) < (c[a2 + 280 >> 2] | 0));
          }
          if (!(ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0))
            return;
          e2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
          kb[c[(c[e2 >> 2] | 0) + 100 >> 2] & 255](e2);
          return;
        }
        function ei(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = +f2;
          var h2 = 0, i2 = 0, j2 = 0;
          if (e2) {
            g[b2 + 268 >> 2] = f2;
            i2 = +g[b2 + 264 >> 2] + d2;
            g[b2 + 264 >> 2] = i2;
            if (!(i2 >= f2)) {
              d2 = f2;
              j2 = 0;
            } else {
              g[b2 + 264 >> 2] = i2 - +(~~(i2 / f2) | 0) * f2;
              d2 = f2;
              j2 = ~~(i2 / f2);
            }
          } else {
            g[b2 + 264 >> 2] = a[b2 + 300 >> 0] | 0 ? 0 : d2;
            g[b2 + 268 >> 2] = 0;
            j2 = !(+F(+d2) < 11920928955078125e-23) & 1;
            e2 = j2;
          }
          if (ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0) {
            h2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
            a[25816] = (ob[c[(c[h2 >> 2] | 0) + 56 >> 2] & 127](h2) | 0) >>> 4 & 1;
          }
          if (!j2) {
            kb[c[(c[b2 >> 2] | 0) + 80 >> 2] & 255](b2);
            h2 = b2;
            h2 = c[h2 >> 2] | 0;
            h2 = h2 + 120 | 0;
            h2 = c[h2 >> 2] | 0;
            kb[h2 & 255](b2);
            return j2 | 0;
          }
          h2 = (j2 | 0) > (e2 | 0) ? e2 : j2;
          jb[c[(c[b2 >> 2] | 0) + 164 >> 2] & 31](b2, d2 * +(h2 | 0));
          kb[c[(c[b2 >> 2] | 0) + 172 >> 2] & 255](b2);
          if ((h2 | 0) > 0)
            e2 = 0;
          else {
            h2 = b2;
            h2 = c[h2 >> 2] | 0;
            h2 = h2 + 120 | 0;
            h2 = c[h2 >> 2] | 0;
            kb[h2 & 255](b2);
            return j2 | 0;
          }
          do {
            jb[c[(c[b2 >> 2] | 0) + 160 >> 2] & 31](b2, d2);
            kb[c[(c[b2 >> 2] | 0) + 80 >> 2] & 255](b2);
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) < (h2 | 0));
          e2 = b2;
          h2 = c[e2 >> 2] | 0;
          h2 = h2 + 120 | 0;
          h2 = c[h2 >> 2] | 0;
          kb[h2 & 255](b2);
          return j2 | 0;
        }
        function fi(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          c2 = i;
          i = i + 48 | 0;
          Jg(a2 + 364 | 0, c2 + 16 | 0);
          h2 = -+g[c2 + 16 >> 2];
          e2 = -+g[c2 + 16 + 4 >> 2];
          m2 = -+g[c2 + 16 + 8 >> 2];
          l2 = +g[c2 + 16 + 12 >> 2];
          f2 = +g[b2 >> 2];
          n2 = +g[b2 + 12 >> 2];
          k2 = +g[b2 + 8 >> 2];
          j2 = +g[b2 + 4 >> 2];
          Jg(a2 + 300 | 0, c2);
          p2 = +g[c2 >> 2];
          q2 = +g[c2 + 12 >> 2];
          d2 = +g[c2 + 8 >> 2];
          o2 = +g[c2 + 4 >> 2];
          g[c2 + 32 >> 2] = (l2 * n2 - f2 * h2 - j2 * e2 - k2 * m2) * p2 + (l2 * f2 + n2 * h2 + k2 * e2 - j2 * m2) * q2 + (f2 * m2 + (n2 * e2 + l2 * j2) - k2 * h2) * d2 - (n2 * m2 + l2 * k2 + j2 * h2 - f2 * e2) * o2;
          g[c2 + 32 + 4 >> 2] = p2 * (n2 * m2 + l2 * k2 + j2 * h2 - f2 * e2) + (q2 * (f2 * m2 + (n2 * e2 + l2 * j2) - k2 * h2) + (l2 * n2 - f2 * h2 - j2 * e2 - k2 * m2) * o2) - (l2 * f2 + n2 * h2 + k2 * e2 - j2 * m2) * d2;
          g[c2 + 32 + 8 >> 2] = (n2 * m2 + l2 * k2 + j2 * h2 - f2 * e2) * q2 + (l2 * n2 - f2 * h2 - j2 * e2 - k2 * m2) * d2 + (l2 * f2 + n2 * h2 + k2 * e2 - j2 * m2) * o2 - p2 * (f2 * m2 + (n2 * e2 + l2 * j2) - k2 * h2);
          g[c2 + 32 + 12 >> 2] = (l2 * n2 - f2 * h2 - j2 * e2 - k2 * m2) * q2 - (l2 * f2 + n2 * h2 + k2 * e2 - j2 * m2) * p2 - (f2 * m2 + (n2 * e2 + l2 * j2) - k2 * h2) * o2 - (n2 * m2 + l2 * k2 + j2 * h2 - f2 * e2) * d2;
          yd(a2, c2 + 32 | 0);
          i = c2;
          return;
        }
        function gi(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          d2 = c[b2 >> 2] | 0;
          if (d2 | 0)
            hn(b2, d2);
          d2 = c[b2 + 4 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 4 >> 2] = 0;
          c[b2 + 8 >> 2] = -1;
          d2 = c[b2 + 32 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 36 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 32 >> 2] = 0;
          }
          a[b2 + 36 >> 0] = 1;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 16 >> 2] = 0;
          d2 = c[b2 + 52 >> 2] | 0;
          if (!d2) {
            a[b2 + 56 >> 0] = 1;
            c[b2 + 52 >> 2] = 0;
            c[b2 + 44 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            return;
          }
          if (!(a[b2 + 56 >> 0] | 0)) {
            a[b2 + 56 >> 0] = 1;
            c[b2 + 52 >> 2] = 0;
            c[b2 + 44 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          d2 = c[b2 + 32 >> 2] | 0;
          a[b2 + 56 >> 0] = 1;
          c[b2 + 52 >> 2] = 0;
          c[b2 + 44 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          if (!d2) {
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            return;
          }
          if (a[b2 + 36 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 32 >> 2] = 0;
          a[b2 + 36 >> 0] = 1;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          return;
        }
        function hi(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          if (!e2)
            e2 = c[b2 + 188 >> 2] | 0;
          j2 = c[d2 >> 2] | 0;
          f2 = c[b2 + 308 >> 2] | 0;
          a:
            do
              if ((f2 | 0) > 0) {
                h2 = c[b2 + 316 >> 2] | 0;
                g2 = 0;
                while (1) {
                  if ((c[h2 + (g2 << 2) >> 2] | 0) == (j2 | 0))
                    break;
                  g2 = g2 + 1 | 0;
                  if ((g2 | 0) >= (f2 | 0))
                    break a;
                }
                if ((g2 | 0) != (f2 | 0))
                  return;
              }
            while (0);
          if ((f2 | 0) == (c[b2 + 312 >> 2] | 0) ? (i2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (i2 | 0)) : 0) {
            if (!i2)
              h2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic((i2 << 2 | 3) + 16 | 0) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              h2 = f2;
              f2 = c[b2 + 308 >> 2] | 0;
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                c[h2 + (g2 << 2) >> 2] = c[(c[b2 + 316 >> 2] | 0) + (g2 << 2) >> 2];
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) != (f2 | 0));
            }
            g2 = c[b2 + 316 >> 2] | 0;
            if (g2) {
              if (a[b2 + 320 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[g2 + -4 >> 2] | 0);
                f2 = c[b2 + 308 >> 2] | 0;
              }
              c[b2 + 316 >> 2] = 0;
            }
            a[b2 + 320 >> 0] = 1;
            c[b2 + 316 >> 2] = h2;
            c[b2 + 312 >> 2] = i2;
          }
          c[(c[b2 + 316 >> 2] | 0) + (f2 << 2) >> 2] = j2;
          c[b2 + 308 >> 2] = f2 + 1;
          b2 = c[b2 + 324 >> 2] | 0;
          yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 63](b2, e2, d2) | 0;
          return;
        }
        function ii(a2, b2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0;
          c[b2 >> 2] = Jb[c[(c[e2 >> 2] | 0) + 28 >> 2] & 31](e2, c[a2 + 28 >> 2] | 0) | 0;
          c[b2 + 4 >> 2] = Jb[c[(c[e2 >> 2] | 0) + 28 >> 2] & 31](e2, c[a2 + 32 >> 2] | 0) | 0;
          f2 = Jb[c[(c[e2 >> 2] | 0) + 40 >> 2] & 31](e2, a2) | 0;
          g2 = Jb[c[(c[e2 >> 2] | 0) + 28 >> 2] & 31](e2, f2) | 0;
          c[b2 + 8 >> 2] = g2;
          if (g2 | 0)
            mb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 127](e2, f2);
          c[b2 + 12 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 24 >> 2] = d[a2 + 21 >> 0];
          c[b2 + 40 >> 2] = c[a2 + 24 >> 2];
          c[b2 + 44 >> 2] = c[a2 + 16 >> 2];
          c[b2 + 48 >> 2] = d[a2 + 20 >> 0];
          c[b2 + 20 >> 2] = c[a2 + 12 >> 2];
          c[b2 + 16 >> 2] = c[a2 + 8 >> 2];
          c[b2 + 28 >> 2] = c[a2 + 36 >> 2];
          c[b2 + 32 >> 2] = c[a2 + 40 >> 2];
          c[b2 + 36 >> 2] = 0;
          f2 = c[a2 + 28 >> 2] | 0;
          if ((c[f2 + 528 >> 2] | 0) > 0) {
            e2 = 0;
            do {
              if ((c[(c[f2 + 536 >> 2] | 0) + (e2 << 2) >> 2] | 0) == (a2 | 0)) {
                c[b2 + 36 >> 2] = 1;
                f2 = c[a2 + 28 >> 2] | 0;
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) < (c[f2 + 528 >> 2] | 0));
          }
          f2 = c[a2 + 32 >> 2] | 0;
          if ((c[f2 + 528 >> 2] | 0) > 0)
            e2 = 0;
          else
            return 12330;
          do {
            if ((c[(c[f2 + 536 >> 2] | 0) + (e2 << 2) >> 2] | 0) == (a2 | 0)) {
              c[b2 + 36 >> 2] = 1;
              f2 = c[a2 + 32 >> 2] | 0;
            }
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) < (c[f2 + 528 >> 2] | 0));
          return 12330;
        }
        function ji(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          if (ob[c[(c[d2 >> 2] | 0) + 16 >> 2] & 127](d2) | 0)
            return;
          i2 = c[b2 + 752 >> 2] | 0;
          h2 = ob[c[(c[d2 >> 2] | 0) + 36 >> 2] & 127](d2) | 0;
          if (ob[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2) | 0 ? (e2 = ob[c[(c[d2 >> 2] | 0) + 20 >> 2] & 127](d2) | 0, g2 = ob[c[(c[d2 >> 2] | 0) + 24 >> 2] & 127](d2) | 0, (i2 | 0) > 0) : 0) {
            f2 = c[b2 + 760 >> 2] | 0;
            a2 = h2 + (e2 << 2) | 0;
            e2 = 0;
            while (1) {
              k2 = c[f2 + (e2 * 104 | 0) + 12 >> 2] | 0;
              j2 = c[f2 + (e2 * 104 | 0) + 16 >> 2] | 0;
              c[a2 >> 2] = c[f2 + (e2 * 104 | 0) + 8 >> 2];
              c[a2 + 4 >> 2] = k2;
              c[a2 + 8 >> 2] = j2;
              e2 = e2 + 1 | 0;
              if ((e2 | 0) == (i2 | 0))
                break;
              else
                a2 = a2 + (g2 << 2) | 0;
            }
          }
          if (!(ob[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2) | 0))
            return;
          a2 = ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 127](d2) | 0;
          g2 = ob[c[(c[d2 >> 2] | 0) + 32 >> 2] & 127](d2) | 0;
          if ((i2 | 0) <= 0)
            return;
          f2 = c[b2 + 760 >> 2] | 0;
          a2 = h2 + (a2 << 2) | 0;
          e2 = 0;
          while (1) {
            j2 = c[f2 + (e2 * 104 | 0) + 76 >> 2] | 0;
            k2 = c[f2 + (e2 * 104 | 0) + 80 >> 2] | 0;
            c[a2 >> 2] = c[f2 + (e2 * 104 | 0) + 72 >> 2];
            c[a2 + 4 >> 2] = j2;
            c[a2 + 8 >> 2] = k2;
            e2 = e2 + 1 | 0;
            if ((e2 | 0) == (i2 | 0))
              break;
            else
              a2 = a2 + (g2 << 2) | 0;
          }
          return;
        }
        function ki(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          q2 = i;
          i = i + 16 | 0;
          if ((e2 | 0) <= 0) {
            i = q2;
            return;
          }
          f2 = 0;
          do {
            h2 = d2 + (f2 << 4) | 0;
            j2 = +g[a2 + 64 >> 2] * 0.5;
            k2 = c[a2 + 72 >> 2] | 0;
            m2 = +g[b2 + (f2 << 4) >> 2];
            o2 = +g[b2 + (f2 << 4) + 4 >> 2];
            p2 = +g[b2 + (f2 << 4) + 8 >> 2];
            p2 = +G(+(m2 * m2 + o2 * o2 + p2 * p2));
            l2 = c[a2 + 68 >> 2] | 0;
            do
              if (!(+g[b2 + (f2 << 4) + (k2 << 2) >> 2] > p2 * +g[a2 + 56 >> 2])) {
                m2 = +g[b2 + (f2 << 4) + (l2 << 2) >> 2];
                n2 = c[a2 + 76 >> 2] | 0;
                o2 = +g[b2 + (f2 << 4) + (n2 << 2) >> 2];
                p2 = +G(+(m2 * m2 + o2 * o2));
                if (p2 > 11920928955078125e-23) {
                  p2 = +g[a2 + 60 >> 2] / p2;
                  g[q2 + (l2 << 2) >> 2] = m2 * p2;
                  g[q2 + (k2 << 2) >> 2] = -j2;
                  g[q2 + (n2 << 2) >> 2] = o2 * p2;
                  break;
                } else {
                  g[q2 + (l2 << 2) >> 2] = 0;
                  g[q2 + (k2 << 2) >> 2] = -j2;
                  g[q2 + (n2 << 2) >> 2] = 0;
                  break;
                }
              } else {
                g[q2 + (l2 << 2) >> 2] = 0;
                g[q2 + (k2 << 2) >> 2] = j2;
                g[q2 + (c[a2 + 76 >> 2] << 2) >> 2] = 0;
              }
            while (0);
            c[h2 >> 2] = c[q2 >> 2];
            c[h2 + 4 >> 2] = c[q2 + 4 >> 2];
            c[h2 + 8 >> 2] = c[q2 + 8 >> 2];
            c[h2 + 12 >> 2] = c[q2 + 12 >> 2];
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) != (e2 | 0));
          i = q2;
          return;
        }
        function li(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          c[b2 >> 2] = 9428;
          d2 = c[b2 + 56 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 60 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 56 >> 2] = 0;
          }
          a[b2 + 60 >> 0] = 1;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          f2 = c[b2 + 28 >> 2] | 0;
          if ((f2 | 0) > 0) {
            d2 = 0;
            do {
              g2 = c[b2 + 36 >> 2] | 0;
              h2 = g2 + (d2 * 36 | 0) + 4 | 0;
              i2 = g2 + (d2 * 36 | 0) + 12 | 0;
              j2 = c[i2 >> 2] | 0;
              e2 = g2 + (d2 * 36 | 0) + 16 | 0;
              if (j2 | 0) {
                if (a[e2 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[j2 + -4 >> 2] | 0);
                }
                c[i2 >> 2] = 0;
              }
              a[e2 >> 0] = 1;
              c[i2 >> 2] = 0;
              c[h2 >> 2] = 0;
              c[g2 + (d2 * 36 | 0) + 8 >> 2] = 0;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (f2 | 0));
          }
          d2 = c[b2 + 36 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 40 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 36 >> 2] = 0;
          }
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          d2 = c[b2 + 16 >> 2] | 0;
          if (!d2) {
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 20 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 16 >> 2] = 0;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          b2 = b2 + 12 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function mi(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 8544;
          d2 = c[b2 + 156 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 160 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 156 >> 2] = 0;
          }
          a[b2 + 160 >> 0] = 1;
          c[b2 + 156 >> 2] = 0;
          c[b2 + 148 >> 2] = 0;
          c[b2 + 152 >> 2] = 0;
          d2 = c[b2 + 136 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 140 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 136 >> 2] = 0;
          }
          a[b2 + 140 >> 0] = 1;
          c[b2 + 136 >> 2] = 0;
          c[b2 + 128 >> 2] = 0;
          c[b2 + 132 >> 2] = 0;
          d2 = c[b2 + 116 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 120 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 116 >> 2] = 0;
          }
          a[b2 + 120 >> 0] = 1;
          c[b2 + 116 >> 2] = 0;
          c[b2 + 108 >> 2] = 0;
          c[b2 + 112 >> 2] = 0;
          d2 = c[b2 + 96 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 100 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 96 >> 2] = 0;
          }
          a[b2 + 100 >> 0] = 1;
          c[b2 + 96 >> 2] = 0;
          c[b2 + 88 >> 2] = 0;
          c[b2 + 92 >> 2] = 0;
          c[b2 >> 2] = 9444;
          d2 = c[b2 + 32 >> 2] | 0;
          if (!d2) {
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            b2 = b2 + 28 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 36 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 32 >> 2] = 0;
          a[b2 + 36 >> 0] = 1;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          b2 = b2 + 28 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function ni(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          i2 = c[b2 + 4 >> 2] | 0;
          if ((i2 | 0) >= (d2 | 0)) {
            c[b2 + 4 >> 2] = d2;
            return;
          }
          if ((c[b2 + 8 >> 2] | 0) < (d2 | 0)) {
            if (!d2) {
              f2 = 0;
              h2 = i2;
            } else {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic((d2 << 4 | 3) + 16 | 0) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              h2 = c[b2 + 4 >> 2] | 0;
            }
            if ((h2 | 0) > 0) {
              g2 = 0;
              do {
                j2 = c[b2 + 12 >> 2] | 0;
                c[f2 + (g2 << 4) >> 2] = c[j2 + (g2 << 4) >> 2];
                c[f2 + (g2 << 4) + 4 >> 2] = c[j2 + (g2 << 4) + 4 >> 2];
                c[f2 + (g2 << 4) + 8 >> 2] = c[j2 + (g2 << 4) + 8 >> 2];
                c[f2 + (g2 << 4) + 12 >> 2] = c[j2 + (g2 << 4) + 12 >> 2];
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) != (h2 | 0));
            }
            g2 = c[b2 + 12 >> 2] | 0;
            if (g2 | 0) {
              if (a[b2 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[g2 + -4 >> 2] | 0);
              }
              c[b2 + 12 >> 2] = 0;
            }
            a[b2 + 16 >> 0] = 1;
            c[b2 + 12 >> 2] = f2;
            c[b2 + 8 >> 2] = d2;
            g2 = b2 + 12 | 0;
          } else
            g2 = b2 + 12 | 0;
          f2 = i2;
          do {
            j2 = c[g2 >> 2] | 0;
            c[j2 + (f2 << 4) >> 2] = c[e2 >> 2];
            c[j2 + (f2 << 4) + 4 >> 2] = c[e2 + 4 >> 2];
            c[j2 + (f2 << 4) + 8 >> 2] = c[e2 + 8 >> 2];
            c[j2 + (f2 << 4) + 12 >> 2] = c[e2 + 12 >> 2];
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) != (d2 | 0));
          c[b2 + 4 >> 2] = d2;
          return;
        }
        function oi(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 8960;
          d2 = c[b2 + 160 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 164 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 160 >> 2] = 0;
          }
          a[b2 + 164 >> 0] = 1;
          c[b2 + 160 >> 2] = 0;
          c[b2 + 152 >> 2] = 0;
          c[b2 + 156 >> 2] = 0;
          d2 = c[b2 + 136 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 140 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 136 >> 2] = 0;
          }
          a[b2 + 140 >> 0] = 1;
          c[b2 + 136 >> 2] = 0;
          c[b2 + 128 >> 2] = 0;
          c[b2 + 132 >> 2] = 0;
          d2 = c[b2 + 116 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 120 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 116 >> 2] = 0;
          }
          a[b2 + 120 >> 0] = 1;
          c[b2 + 116 >> 2] = 0;
          c[b2 + 108 >> 2] = 0;
          c[b2 + 112 >> 2] = 0;
          d2 = c[b2 + 96 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 100 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 96 >> 2] = 0;
          }
          a[b2 + 100 >> 0] = 1;
          c[b2 + 96 >> 2] = 0;
          c[b2 + 88 >> 2] = 0;
          c[b2 + 92 >> 2] = 0;
          d2 = c[b2 + 76 >> 2] | 0;
          if (!d2) {
            a[b2 + 80 >> 0] = 1;
            c[b2 + 76 >> 2] = 0;
            c[b2 + 68 >> 2] = 0;
            b2 = b2 + 72 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 80 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 76 >> 2] = 0;
          a[b2 + 80 >> 0] = 1;
          c[b2 + 76 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          b2 = b2 + 72 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function pi(b2, d2, e2, f2, g2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          do
            if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
              if ((c[d2 + 4 >> 2] | 0) == (e2 | 0) ? (c[d2 + 28 >> 2] | 0) != 1 : 0)
                c[d2 + 28 >> 2] = f2;
            } else {
              if ((b2 | 0) != (c[d2 >> 2] | 0)) {
                b2 = c[b2 + 8 >> 2] | 0;
                ib[c[(c[b2 >> 2] | 0) + 24 >> 2] & 31](b2, d2, e2, f2, g2);
                break;
              }
              if ((c[d2 + 16 >> 2] | 0) != (e2 | 0) ? (c[d2 + 20 >> 2] | 0) != (e2 | 0) : 0) {
                c[d2 + 32 >> 2] = f2;
                if ((c[d2 + 44 >> 2] | 0) == 4)
                  break;
                a[d2 + 52 >> 0] = 0;
                a[d2 + 53 >> 0] = 0;
                f2 = c[b2 + 8 >> 2] | 0;
                Ab[c[(c[f2 >> 2] | 0) + 20 >> 2] & 7](f2, d2, e2, e2, 1, g2);
                if (a[d2 + 53 >> 0] | 0)
                  if (!(a[d2 + 52 >> 0] | 0)) {
                    b2 = 1;
                    f2 = 13;
                  } else
                    f2 = 17;
                else {
                  b2 = 0;
                  f2 = 13;
                }
                do
                  if ((f2 | 0) == 13) {
                    c[d2 + 20 >> 2] = e2;
                    c[d2 + 40 >> 2] = (c[d2 + 40 >> 2] | 0) + 1;
                    if ((c[d2 + 36 >> 2] | 0) == 1 ? (c[d2 + 24 >> 2] | 0) == 2 : 0) {
                      a[d2 + 54 >> 0] = 1;
                      if (b2) {
                        f2 = 17;
                        break;
                      } else {
                        b2 = 4;
                        break;
                      }
                    }
                    if (b2)
                      f2 = 17;
                    else
                      b2 = 4;
                  }
                while (0);
                if ((f2 | 0) == 17)
                  b2 = 3;
                c[d2 + 44 >> 2] = b2;
                break;
              }
              if ((f2 | 0) == 1)
                c[d2 + 32 >> 2] = 1;
            }
          while (0);
          return;
        }
        function qi(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 4952;
          d2 = c[b2 + 136 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 140 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 136 >> 2] = 0;
          }
          a[b2 + 140 >> 0] = 1;
          c[b2 + 136 >> 2] = 0;
          c[b2 + 128 >> 2] = 0;
          c[b2 + 132 >> 2] = 0;
          d2 = c[b2 + 76 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 80 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 76 >> 2] = 0;
          }
          a[b2 + 80 >> 0] = 1;
          c[b2 + 76 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 72 >> 2] = 0;
          d2 = c[b2 + 56 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 60 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 56 >> 2] = 0;
          }
          a[b2 + 60 >> 0] = 1;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          d2 = c[b2 + 36 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 40 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 36 >> 2] = 0;
          }
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          d2 = c[b2 + 16 >> 2] | 0;
          if (!d2) {
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 20 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 16 >> 2] = 0;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          b2 = b2 + 12 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function ri(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          o2 = (+g[a2 + 36 >> 2] - +g[a2 + 20 >> 2]) * +g[a2 + 112 >> 2] * 0.5;
          m2 = (+g[a2 + 40 >> 2] - +g[a2 + 24 >> 2]) * +g[a2 + 116 >> 2] * 0.5;
          k2 = (+g[a2 + 44 >> 2] - +g[a2 + 28 >> 2]) * +g[a2 + 120 >> 2] * 0.5;
          t2 = +F(+ +g[b2 >> 2]);
          s2 = +F(+ +g[b2 + 4 >> 2]);
          r2 = +F(+ +g[b2 + 8 >> 2]);
          n2 = +F(+ +g[b2 + 16 >> 2]);
          l2 = +F(+ +g[b2 + 20 >> 2]);
          j2 = +F(+ +g[b2 + 24 >> 2]);
          w2 = +F(+ +g[b2 + 32 >> 2]);
          v2 = +F(+ +g[b2 + 36 >> 2]);
          f2 = +F(+ +g[b2 + 40 >> 2]);
          u2 = +g[b2 + 48 >> 2];
          p2 = +g[b2 + 52 >> 2];
          h2 = +g[b2 + 56 >> 2];
          q2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          i2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          f2 = o2 * w2 + m2 * v2 + k2 * f2 + +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          g[d2 >> 2] = u2 - (o2 * t2 + m2 * s2 + k2 * r2 + q2);
          g[d2 + 4 >> 2] = p2 - (o2 * n2 + m2 * l2 + k2 * j2 + i2);
          g[d2 + 8 >> 2] = h2 - f2;
          g[d2 + 12 >> 2] = 0;
          g[e2 >> 2] = u2 + (o2 * t2 + m2 * s2 + k2 * r2 + q2);
          g[e2 + 4 >> 2] = p2 + (o2 * n2 + m2 * l2 + k2 * j2 + i2);
          g[e2 + 8 >> 2] = h2 + f2;
          g[e2 + 12 >> 2] = 0;
          return;
        }
        function si(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = i;
          i = i + 64 | 0;
          b2 = c[b2 + 36 >> 2] | 0;
          e2 = c[(c[a2 + 24 >> 2] | 0) + 28 >> 2] | 0;
          c[d2 >> 2] = c[e2 + (b2 * 80 | 0) >> 2];
          c[d2 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 12 >> 2];
          c[d2 + 16 >> 2] = c[e2 + (b2 * 80 | 0) + 16 >> 2];
          c[d2 + 16 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 16 + 4 >> 2];
          c[d2 + 16 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 16 + 8 >> 2];
          c[d2 + 16 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 16 + 12 >> 2];
          c[d2 + 32 >> 2] = c[e2 + (b2 * 80 | 0) + 32 >> 2];
          c[d2 + 32 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 32 + 4 >> 2];
          c[d2 + 32 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 32 + 8 >> 2];
          c[d2 + 32 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 32 + 12 >> 2];
          c[d2 + 48 >> 2] = c[e2 + (b2 * 80 | 0) + 48 >> 2];
          c[d2 + 48 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 48 + 4 >> 2];
          c[d2 + 48 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 48 + 8 >> 2];
          c[d2 + 48 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 48 + 12 >> 2];
          Xf(a2, b2, d2, c[e2 + (b2 * 80 | 0) + 64 >> 2] | 0);
          i = d2;
          return;
        }
        function ti(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0;
          k2 = i;
          i = i + 32 | 0;
          e2 = c[a2 + 28 >> 2] | 0;
          c[k2 + 16 >> 2] = e2;
          e2 = (c[a2 + 20 >> 2] | 0) - e2 | 0;
          c[k2 + 16 + 4 >> 2] = e2;
          c[k2 + 16 + 8 >> 2] = b2;
          c[k2 + 16 + 12 >> 2] = d2;
          f2 = 2;
          e2 = e2 + d2 | 0;
          j2 = k2 + 16 | 0;
          while (1) {
            c[k2 >> 2] = c[a2 + 60 >> 2];
            c[k2 + 4 >> 2] = j2;
            c[k2 + 8 >> 2] = f2;
            b2 = fb(146, k2 | 0) | 0;
            if (b2 >>> 0 > 4294963200) {
              c[6326] = 0 - b2;
              b2 = -1;
            }
            if ((e2 | 0) == (b2 | 0)) {
              b2 = 5;
              break;
            }
            if ((b2 | 0) < 0) {
              b2 = 7;
              break;
            }
            h2 = e2 - b2 | 0;
            e2 = c[j2 + 4 >> 2] | 0;
            if (b2 >>> 0 <= e2 >>> 0)
              if ((f2 | 0) == 2) {
                c[a2 + 28 >> 2] = (c[a2 + 28 >> 2] | 0) + b2;
                f2 = 2;
                g2 = j2;
              } else
                g2 = j2;
            else {
              g2 = c[a2 + 44 >> 2] | 0;
              c[a2 + 28 >> 2] = g2;
              c[a2 + 20 >> 2] = g2;
              b2 = b2 - e2 | 0;
              f2 = f2 + -1 | 0;
              g2 = j2 + 8 | 0;
              e2 = c[j2 + 12 >> 2] | 0;
            }
            c[g2 >> 2] = (c[g2 >> 2] | 0) + b2;
            c[g2 + 4 >> 2] = e2 - b2;
            e2 = h2;
            j2 = g2;
          }
          if ((b2 | 0) == 5) {
            j2 = c[a2 + 44 >> 2] | 0;
            c[a2 + 16 >> 2] = j2 + (c[a2 + 48 >> 2] | 0);
            c[a2 + 28 >> 2] = j2;
            c[a2 + 20 >> 2] = j2;
          } else if ((b2 | 0) == 7) {
            c[a2 + 16 >> 2] = 0;
            c[a2 + 28 >> 2] = 0;
            c[a2 + 20 >> 2] = 0;
            c[a2 >> 2] = c[a2 >> 2] | 32;
            if ((f2 | 0) == 2)
              d2 = 0;
            else
              d2 = d2 - (c[j2 + 4 >> 2] | 0) | 0;
          }
          i = k2;
          return d2 | 0;
        }
        function ui(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          e2 = c[b2 >> 2] | 0;
          if ((e2 | 0) == (c[a2 + 80 >> 2] | 0)) {
            f2 = 1;
            return +f2;
          }
          if (c[e2 + 204 >> 2] & 4 | 0) {
            f2 = 1;
            return +f2;
          }
          if ((+g[a2 + 28 >> 2] - +g[a2 + 12 >> 2]) * +g[b2 + 8 >> 2] + (+g[a2 + 32 >> 2] - +g[a2 + 16 >> 2]) * +g[b2 + 12 >> 2] + (+g[a2 + 36 >> 2] - +g[a2 + 20 >> 2]) * +g[b2 + 16 >> 2] >= -+g[a2 + 84 >> 2]) {
            f2 = 1;
            return +f2;
          }
          c[a2 + 4 >> 2] = c[b2 + 40 >> 2];
          c[a2 + 76 >> 2] = e2;
          if (d2) {
            c[a2 + 44 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 44 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
            c[a2 + 44 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
            c[a2 + 44 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
          } else {
            k2 = +g[b2 + 8 >> 2];
            j2 = +g[b2 + 12 >> 2];
            i2 = +g[b2 + 16 >> 2];
            h2 = k2 * +g[e2 + 20 >> 2] + j2 * +g[e2 + 24 >> 2] + i2 * +g[e2 + 28 >> 2];
            f2 = k2 * +g[e2 + 36 >> 2] + j2 * +g[e2 + 40 >> 2] + i2 * +g[e2 + 44 >> 2];
            g[a2 + 44 >> 2] = +g[e2 + 4 >> 2] * k2 + +g[e2 + 8 >> 2] * j2 + +g[e2 + 12 >> 2] * i2;
            g[a2 + 48 >> 2] = h2;
            g[a2 + 52 >> 2] = f2;
            g[a2 + 56 >> 2] = 0;
          }
          c[a2 + 60 >> 2] = c[b2 + 24 >> 2];
          c[a2 + 60 + 4 >> 2] = c[b2 + 24 + 4 >> 2];
          c[a2 + 60 + 8 >> 2] = c[b2 + 24 + 8 >> 2];
          c[a2 + 60 + 12 >> 2] = c[b2 + 24 + 12 >> 2];
          k2 = +g[b2 + 40 >> 2];
          return +k2;
        }
        function vi(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          j2 = i;
          i = i + 80 | 0;
          if ((e2 | 0) > 0)
            f2 = 0;
          else {
            i = j2;
            return;
          }
          do {
            g[d2 + (f2 << 4) + 12 >> 2] = -999999984306749400;
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) != (e2 | 0));
          h2 = j2 + 32 + 4 | 0;
          f2 = 0;
          do {
            k2 = b2 + (f2 << 4) | 0;
            c[j2 + 32 >> 2] = 7744;
            c[h2 >> 2] = 0;
            c[h2 + 4 >> 2] = 0;
            c[h2 + 8 >> 2] = 0;
            c[h2 + 12 >> 2] = 0;
            g[j2 + 32 + 20 >> 2] = -999999984306749400;
            c[j2 + 32 + 24 >> 2] = c[k2 >> 2];
            c[j2 + 32 + 24 + 4 >> 2] = c[k2 + 4 >> 2];
            c[j2 + 32 + 24 + 8 >> 2] = c[k2 + 8 >> 2];
            c[j2 + 32 + 24 + 12 >> 2] = c[k2 + 12 >> 2];
            c[j2 + 16 >> 2] = 1566444395;
            c[j2 + 16 + 4 >> 2] = 1566444395;
            c[j2 + 16 + 8 >> 2] = 1566444395;
            g[j2 + 16 + 12 >> 2] = 0;
            k2 = c[a2 + 96 >> 2] | 0;
            l2 = c[(c[k2 >> 2] | 0) + 8 >> 2] | 0;
            g[j2 >> 2] = -999999984306749400;
            g[j2 + 4 >> 2] = -999999984306749400;
            g[j2 + 8 >> 2] = -999999984306749400;
            g[j2 + 12 >> 2] = 0;
            Yb[l2 & 127](k2, j2 + 32 | 0, j2, j2 + 16 | 0);
            k2 = d2 + (f2 << 4) | 0;
            c[k2 >> 2] = c[h2 >> 2];
            c[k2 + 4 >> 2] = c[h2 + 4 >> 2];
            c[k2 + 8 >> 2] = c[h2 + 8 >> 2];
            c[k2 + 12 >> 2] = c[h2 + 12 >> 2];
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) < (e2 | 0));
          i = j2;
          return;
        }
        function wi(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          f2 = c[b2 + 100 >> 2] | 0;
          if ((f2 | 0) == (c[b2 + 104 >> 2] | 0) ? (i2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (i2 | 0)) : 0) {
            if (!i2)
              h2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic((i2 << 4 | 3) + 16 | 0) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              h2 = f2;
              f2 = c[b2 + 100 >> 2] | 0;
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                j2 = h2 + (g2 << 4) | 0;
                k2 = (c[b2 + 108 >> 2] | 0) + (g2 << 4) | 0;
                c[j2 >> 2] = c[k2 >> 2];
                c[j2 + 4 >> 2] = c[k2 + 4 >> 2];
                c[j2 + 8 >> 2] = c[k2 + 8 >> 2];
                c[j2 + 12 >> 2] = c[k2 + 12 >> 2];
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) != (f2 | 0));
            }
            f2 = c[b2 + 108 >> 2] | 0;
            if (f2 | 0) {
              if (a[b2 + 112 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[b2 + 108 >> 2] = 0;
            }
            a[b2 + 112 >> 0] = 1;
            c[b2 + 108 >> 2] = h2;
            c[b2 + 104 >> 2] = i2;
            f2 = c[b2 + 100 >> 2] | 0;
          }
          k2 = (c[b2 + 108 >> 2] | 0) + (f2 << 4) | 0;
          c[k2 >> 2] = c[d2 >> 2];
          c[k2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[k2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[k2 + 12 >> 2] = c[d2 + 12 >> 2];
          c[b2 + 100 >> 2] = (c[b2 + 100 >> 2] | 0) + 1;
          if (!e2)
            return;
          zj(b2);
          return;
        }
        function xi(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          c[b2 + 68 >> 2] = c[d2 >> 2];
          c[b2 + 68 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 68 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 68 + 12 >> 2] = c[d2 + 12 >> 2];
          n2 = +g[b2 + 68 >> 2];
          o2 = +g[b2 + 72 >> 2];
          m2 = +g[b2 + 76 >> 2];
          if (!(n2 * n2 + o2 * o2 + m2 * m2 > 0)) {
            g[b2 + 20 >> 2] = 0;
            return;
          }
          k2 = +g[d2 >> 2];
          l2 = +g[d2 + 4 >> 2];
          e2 = +g[d2 + 8 >> 2];
          f2 = 1 / +G(+(k2 * k2 + l2 * l2 + e2 * e2));
          h2 = +g[b2 + 256 >> 2];
          i2 = +g[b2 + 260 >> 2];
          j2 = +g[b2 + 264 >> 2];
          if (!(h2 * k2 * f2 + l2 * f2 * i2 + e2 * f2 * j2 != 0))
            return;
          p2 = +J(+(1.5707963705062866 - +L(+(h2 * k2 * f2 + l2 * f2 * i2 + e2 * f2 * j2)))) * +G(+(n2 * n2 + o2 * o2 + m2 * m2));
          g[b2 + 68 >> 2] = n2 - h2 * p2;
          g[b2 + 72 >> 2] = o2 - i2 * p2;
          g[b2 + 76 >> 2] = m2 - j2 * p2;
          g[b2 + 20 >> 2] = (h2 * k2 * f2 + l2 * f2 * i2 + e2 * f2 * j2 < 0 ? -1 : 1) * +G(+(j2 * p2 * j2 * p2 + (h2 * p2 * h2 * p2 + i2 * p2 * i2 * p2)));
          if (!(h2 * k2 * f2 + l2 * f2 * i2 + e2 * f2 * j2 > 0))
            return;
          a[b2 + 249 >> 0] = 1;
          d2 = (c[b2 + 8 >> 2] | 0) + 52 | 0;
          c[b2 + 116 >> 2] = c[d2 >> 2];
          c[b2 + 116 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 116 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 116 + 12 >> 2] = c[d2 + 12 >> 2];
          return;
        }
        function yi(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
          c[b2 + 32 >> 2] = 262144;
          d2 = c[b2 + 4 >> 2] | 0;
          if ((d2 | 0) < 2383) {
            if ((c[b2 + 8 >> 2] | 0) < 2383) {
              c[6324] = (c[6324] | 0) + 1;
              e2 = ic(9551) | 0;
              if (!e2)
                h2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                h2 = e2 + 4 + 15 & -16;
              }
              f2 = c[b2 + 4 >> 2] | 0;
              if ((f2 | 0) > 0) {
                e2 = 0;
                do {
                  c[h2 + (e2 << 2) >> 2] = c[(c[b2 + 12 >> 2] | 0) + (e2 << 2) >> 2];
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != (f2 | 0));
              }
              e2 = c[b2 + 12 >> 2] | 0;
              if (e2 | 0) {
                if (a[b2 + 16 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[e2 + -4 >> 2] | 0);
                }
                c[b2 + 12 >> 2] = 0;
              }
              a[b2 + 16 >> 0] = 1;
              c[b2 + 12 >> 2] = h2;
              c[b2 + 8 >> 2] = 2383;
              e2 = b2 + 12 | 0;
            } else
              e2 = b2 + 12 | 0;
            do {
              c[(c[e2 >> 2] | 0) + (d2 << 2) >> 2] = 0;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != 2383);
          }
          c[b2 + 4 >> 2] = 2383;
          e2 = 0;
          do {
            h2 = (c[b2 + 12 >> 2] | 0) + (e2 << 2) | 0;
            d2 = c[h2 >> 2] | 0;
            c[h2 >> 2] = 0;
            if (d2 | 0)
              do {
                h2 = d2;
                d2 = c[d2 + 280 >> 2] | 0;
                Rc(h2);
              } while ((d2 | 0) != 0);
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) != 2383);
          g[b2 + 20 >> 2] = 0.25;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 36 >> 2] = 1;
          c[b2 + 40 >> 2] = 1;
          return;
        }
        function zi(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          if (!(a[22048] | 0)) {
            a[22048] = 1;
            if (!(a[21984] | 0)) {
              a[21984] = 1;
              if (!(a[21992] | 0)) {
                a[21992] = 1;
                c[5577] = 1065353216;
                c[5578] = 0;
                c[5579] = 0;
                c[5580] = 0;
                c[5581] = 0;
                c[5582] = 1065353216;
                c[5583] = 0;
                c[5584] = 0;
                c[5585] = 0;
                c[5586] = 0;
                c[5587] = 1065353216;
                g[5588] = 0;
              }
              c[5561] = c[5577];
              c[5562] = c[5578];
              c[5563] = c[5579];
              c[5564] = c[5580];
              c[5565] = c[5581];
              c[5566] = c[5582];
              c[5567] = c[5583];
              c[5568] = c[5584];
              c[5569] = c[5585];
              c[5570] = c[5586];
              c[5571] = c[5587];
              c[5572] = c[5588];
              c[5573] = 0;
              c[5574] = 0;
              c[5575] = 0;
              c[5576] = 0;
            }
            c[5655] = c[5561];
            c[5656] = c[5562];
            c[5657] = c[5563];
            c[5658] = c[5564];
            c[5659] = c[5565];
            c[5660] = c[5566];
            c[5661] = c[5567];
            c[5662] = c[5568];
            c[5663] = c[5569];
            c[5664] = c[5570];
            c[5665] = c[5571];
            c[5666] = c[5572];
            c[5667] = c[5573];
            c[5668] = c[5574];
            c[5669] = c[5575];
            c[5670] = c[5576];
          }
          d2 = c[b2 + 8 >> 2] | 0;
          if (!d2) {
            d2 = c[b2 >> 2] | 0;
            return ((d2 | 0) == 0 ? 22620 : d2 + 60 | 0) | 0;
          } else
            return d2 + 4 | 0;
          return 0;
        }
        function Ai(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          if ((e2 | 0) > 0)
            f2 = 0;
          else
            return;
          do {
            g[d2 + (f2 << 4) + 12 >> 2] = -999999984306749400;
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) != (e2 | 0));
          i2 = 0;
          do {
            k2 = +g[a2 + 16 >> 2];
            l2 = +g[b2 + (i2 << 4) >> 2] * k2;
            m2 = +g[a2 + 20 >> 2];
            n2 = +g[b2 + (i2 << 4) + 4 >> 2] * m2;
            o2 = +g[a2 + 24 >> 2];
            p2 = +g[b2 + (i2 << 4) + 8 >> 2] * o2;
            q2 = c[a2 + 100 >> 2] | 0;
            if ((q2 | 0) > 0) {
              r2 = c[a2 + 108 >> 2] | 0;
              f2 = -1;
              h2 = 0;
              j2 = -34028234663852886e22;
              do {
                s2 = l2 * +g[r2 + (h2 << 4) >> 2] + n2 * +g[r2 + (h2 << 4) + 4 >> 2] + p2 * +g[r2 + (h2 << 4) + 8 >> 2];
                t2 = s2 > j2;
                f2 = t2 ? h2 : f2;
                j2 = t2 ? s2 : j2;
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (q2 | 0));
              p2 = +g[r2 + (f2 << 4) + 4 >> 2] * m2;
              s2 = +g[r2 + (f2 << 4) + 8 >> 2] * o2;
              g[d2 + (i2 << 4) >> 2] = +g[r2 + (f2 << 4) >> 2] * k2;
              g[d2 + (i2 << 4) + 4 >> 2] = p2;
              g[d2 + (i2 << 4) + 8 >> 2] = s2;
              g[d2 + (i2 << 4) + 12 >> 2] = j2;
            } else
              g[d2 + (i2 << 4) + 12 >> 2] = -999999984306749400;
            i2 = i2 + 1 | 0;
          } while ((i2 | 0) != (e2 | 0));
          return;
        }
        function Bi(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          d2 = i;
          i = i + 96 | 0;
          b2 = c[b2 >> 2] | 0;
          if ((b2 | 0) == (c[a2 + 4 >> 2] | 0)) {
            i = d2;
            return 1;
          }
          e2 = c[a2 + 12 >> 2] | 0;
          if (!(Jb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 31](e2, c[b2 + 188 >> 2] | 0) | 0)) {
            i = d2;
            return 1;
          }
          e2 = c[a2 + 4 >> 2] | 0;
          f2 = c[e2 + 192 >> 2] | 0;
          c[d2 + 64 >> 2] = 0;
          c[d2 + 64 + 4 >> 2] = f2;
          c[d2 + 64 + 8 >> 2] = e2;
          c[d2 + 64 + 12 >> 2] = e2 + 4;
          c[d2 + 64 + 16 >> 2] = -1;
          c[d2 + 64 + 20 >> 2] = -1;
          e2 = c[b2 + 192 >> 2] | 0;
          c[d2 + 40 >> 2] = 0;
          c[d2 + 40 + 4 >> 2] = e2;
          c[d2 + 40 + 8 >> 2] = b2;
          c[d2 + 40 + 12 >> 2] = b2 + 4;
          c[d2 + 40 + 16 >> 2] = -1;
          c[d2 + 40 + 20 >> 2] = -1;
          b2 = c[(c[a2 + 8 >> 2] | 0) + 24 >> 2] | 0;
          b2 = sb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, d2 + 64 | 0, d2 + 40 | 0, 0) | 0;
          if (b2 | 0) {
            f2 = c[a2 + 12 >> 2] | 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = d2 + 64;
            c[d2 + 12 >> 2] = d2 + 40;
            c[d2 >> 2] = 6008;
            c[d2 + 32 >> 2] = f2;
            ib[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, d2 + 64 | 0, d2 + 40 | 0, (c[a2 + 8 >> 2] | 0) + 28 | 0, d2);
            kb[c[c[b2 >> 2] >> 2] & 255](b2);
            f2 = c[(c[a2 + 8 >> 2] | 0) + 24 >> 2] | 0;
            mb[c[(c[f2 >> 2] | 0) + 60 >> 2] & 127](f2, b2);
          }
          i = d2;
          return 1;
        }
        function Ci(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          l2 = i;
          i = i + 80 | 0;
          j2 = c[c[a2 >> 2] >> 2] | 0;
          h2 = c[c[a2 + 4 >> 2] >> 2] | 0;
          if (!(yb[c[(c[b2 >> 2] | 0) + 24 >> 2] & 63](b2, j2, h2) | 0)) {
            i = l2;
            return;
          }
          f2 = c[j2 + 192 >> 2] | 0;
          c[l2 + 56 >> 2] = 0;
          c[l2 + 56 + 4 >> 2] = f2;
          c[l2 + 56 + 8 >> 2] = j2;
          c[l2 + 56 + 12 >> 2] = j2 + 4;
          c[l2 + 56 + 16 >> 2] = -1;
          c[l2 + 56 + 20 >> 2] = -1;
          f2 = c[h2 + 192 >> 2] | 0;
          c[l2 + 32 >> 2] = 0;
          c[l2 + 32 + 4 >> 2] = f2;
          c[l2 + 32 + 8 >> 2] = h2;
          c[l2 + 32 + 12 >> 2] = h2 + 4;
          c[l2 + 32 + 16 >> 2] = -1;
          c[l2 + 32 + 20 >> 2] = -1;
          f2 = c[a2 + 8 >> 2] | 0;
          if (!f2) {
            f2 = sb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, l2 + 56 | 0, l2 + 32 | 0, 0) | 0;
            c[a2 + 8 >> 2] = f2;
            if (f2 | 0)
              k2 = 4;
          } else
            k2 = 4;
          if ((k2 | 0) == 4) {
            c[l2 >> 2] = 6384;
            c[l2 + 4 >> 2] = 0;
            c[l2 + 8 >> 2] = l2 + 56;
            c[l2 + 12 >> 2] = l2 + 32;
            if ((c[d2 + 8 >> 2] | 0) != 1) {
              e2 = +wb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, j2, h2, d2, l2);
              if (+g[d2 + 12 >> 2] > e2)
                g[d2 + 12 >> 2] = e2;
            } else
              ib[c[(c[f2 >> 2] | 0) + 8 >> 2] & 31](f2, l2 + 56 | 0, l2 + 32 | 0, d2, l2);
          }
          i = l2;
          return;
        }
        function Di(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          i2 = c[d2 + 4 >> 2] | 0;
          f2 = c[b2 + 24 >> 2] | 0;
          if ((f2 | 0) < (i2 | 0)) {
            if ((c[b2 + 28 >> 2] | 0) < (i2 | 0)) {
              if (!i2) {
                e2 = 0;
                h2 = f2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((i2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                h2 = c[b2 + 24 >> 2] | 0;
              }
              if ((h2 | 0) > 0) {
                g2 = 0;
                do {
                  c[e2 + (g2 << 2) >> 2] = c[(c[b2 + 32 >> 2] | 0) + (g2 << 2) >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (h2 | 0));
              }
              g2 = c[b2 + 32 >> 2] | 0;
              if (g2 | 0) {
                if (a[b2 + 36 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[g2 + -4 >> 2] | 0);
                }
                c[b2 + 32 >> 2] = 0;
              }
              a[b2 + 36 >> 0] = 1;
              c[b2 + 32 >> 2] = e2;
              c[b2 + 28 >> 2] = i2;
              e2 = b2 + 32 | 0;
            } else
              e2 = b2 + 32 | 0;
            do {
              c[(c[e2 >> 2] | 0) + (f2 << 2) >> 2] = 0;
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (i2 | 0));
          } else
            e2 = b2 + 32 | 0;
          c[b2 + 24 >> 2] = i2;
          f2 = c[e2 >> 2] | 0;
          if ((i2 | 0) <= 0)
            return;
          e2 = 0;
          do {
            c[f2 + (e2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (e2 << 2) >> 2];
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) != (i2 | 0));
          return;
        }
        function Ei(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          do
            if (!((b2 | 0) == 32 & (d2 | 0) == 32)) {
              if ((b2 | 0) == 32) {
                if ((d2 | 0) < 20) {
                  a2 = a2 + 96 | 0;
                  break;
                }
                if ((d2 + -21 | 0) >>> 0 < 9) {
                  a2 = a2 + 104 | 0;
                  break;
                }
              } else {
                if ((b2 | 0) < 20 & (d2 | 0) == 32) {
                  a2 = a2 + 100 | 0;
                  break;
                }
                if ((b2 + -21 | 0) >>> 0 < 9 & (d2 | 0) == 32) {
                  a2 = a2 + 108 | 0;
                  break;
                }
                if ((b2 | 0) == 8 & (d2 | 0) == 8) {
                  a2 = a2 + 60 | 0;
                  break;
                }
                if ((b2 | 0) == 8 & (d2 | 0) == 1) {
                  a2 = a2 + 76 | 0;
                  break;
                }
                if ((b2 | 0) == 1 & (d2 | 0) == 8) {
                  a2 = a2 + 80 | 0;
                  break;
                }
              }
              if (!(d2 | b2)) {
                a2 = a2 + 72 | 0;
                break;
              }
              if ((b2 | 0) < 20 & (d2 | 0) == 28) {
                a2 = a2 + 88 | 0;
                break;
              }
              if ((b2 | 0) == 28 & (d2 | 0) < 20) {
                a2 = a2 + 84 | 0;
                break;
              }
              if ((b2 | 0) < 20) {
                if ((d2 | 0) < 20) {
                  a2 = a2 + 32 | 0;
                  break;
                }
                if ((d2 + -21 | 0) >>> 0 < 9) {
                  a2 = a2 + 36 | 0;
                  break;
                }
              } else {
                if ((d2 | 0) < 20 & (b2 + -21 | 0) >>> 0 < 9) {
                  a2 = a2 + 40 | 0;
                  break;
                }
                if ((b2 | 0) == 31)
                  if ((d2 | 0) == 31) {
                    a2 = a2 + 48 | 0;
                    break;
                  } else {
                    a2 = a2 + 44 | 0;
                    break;
                  }
              }
              if ((d2 | 0) == 31) {
                a2 = a2 + 52 | 0;
                break;
              } else {
                a2 = a2 + 56 | 0;
                break;
              }
            } else
              a2 = a2 + 92 | 0;
          while (0);
          return c[a2 >> 2] | 0;
        }
        function Fi(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          c[b2 >> 2] = 9044;
          e2 = c[b2 + 52 >> 2] | 0;
          if ((e2 | 0) > 0) {
            d2 = 0;
            do {
              f2 = c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] | 0;
              if (f2 | 0) {
                kb[c[c[f2 >> 2] >> 2] & 255](f2);
                f2 = c[b2 + 4 >> 2] | 0;
                mb[c[(c[f2 >> 2] | 0) + 60 >> 2] & 127](f2, c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] | 0);
              }
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (e2 | 0));
          }
          d2 = c[b2 + 60 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 64 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 60 >> 2] = 0;
          }
          a[b2 + 64 >> 0] = 1;
          c[b2 + 60 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          c[b2 + 56 >> 2] = 0;
          d2 = c[b2 + 40 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 44 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 40 >> 2] = 0;
          }
          a[b2 + 44 >> 0] = 1;
          c[b2 + 40 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 36 >> 2] = 0;
          d2 = c[b2 + 20 >> 2] | 0;
          if (!d2) {
            a[b2 + 24 >> 0] = 1;
            c[b2 + 20 >> 2] = 0;
            c[b2 + 12 >> 2] = 0;
            b2 = b2 + 16 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 24 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 20 >> 2] = 0;
          a[b2 + 24 >> 0] = 1;
          c[b2 + 20 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          b2 = b2 + 16 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function Gi(a2, b2, c2, d2, e2, f2, h2, i2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          d2 = +d2;
          e2 = +e2;
          f2 = +f2;
          h2 = +h2;
          i2 = +i2;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = +l2;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
          x2 = +g[a2 >> 2] * f2 + +g[a2 + 16 >> 2] * h2 + +g[a2 + 32 >> 2] * i2;
          v2 = +g[a2 + 4 >> 2] * f2 + +g[a2 + 20 >> 2] * h2 + +g[a2 + 36 >> 2] * i2;
          t2 = +g[a2 + 8 >> 2] * f2 + +g[a2 + 24 >> 2] * h2 + +g[a2 + 40 >> 2] * i2;
          s2 = +g[b2 >> 2] * f2 + +g[b2 + 16 >> 2] * h2 + +g[b2 + 32 >> 2] * i2;
          q2 = +g[b2 + 4 >> 2] * f2 + +g[b2 + 20 >> 2] * h2 + +g[b2 + 36 >> 2] * i2;
          o2 = +g[b2 + 8 >> 2] * f2 + +g[b2 + 24 >> 2] * h2 + +g[b2 + 40 >> 2] * i2;
          w2 = +g[j2 + 80 >> 2];
          u2 = +g[j2 + 84 >> 2];
          p2 = +g[j2 + 88 >> 2];
          r2 = +g[k2 + 80 >> 2];
          m2 = +g[k2 + 84 >> 2];
          n2 = +g[k2 + 88 >> 2];
          p2 = x2 * (x2 < 0 ? -w2 : w2) + v2 * (v2 < 0 ? -u2 : u2) + t2 * (t2 < 0 ? -p2 : p2);
          n2 = s2 * (s2 < 0 ? -r2 : r2) + q2 * (q2 < 0 ? -m2 : m2) + o2 * (o2 < 0 ? -n2 : n2);
          o2 = +g[j2 + 96 >> 2];
          m2 = +g[k2 + 96 >> 2];
          m2 = (p2 > o2 ? p2 : o2) + (n2 > m2 ? n2 : m2);
          return !((c2 * f2 + d2 * h2 + e2 * i2 + m2 < m2 - (c2 * f2 + d2 * h2 + e2 * i2) ? c2 * f2 + d2 * h2 + e2 * i2 + m2 : m2 - (c2 * f2 + d2 * h2 + e2 * i2)) > l2) | 0;
        }
        function Hi(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          c[b2 >> 2] = 5384;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          a[b2 + 44 >> 0] = 1;
          c[b2 + 40 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 36 >> 2] = 0;
          a[b2 + 64 >> 0] = 1;
          c[b2 + 60 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(51) | 0;
          if (!d2)
            f2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            f2 = d2 + 4 + 15 & -16;
          }
          e2 = c[b2 + 8 >> 2] | 0;
          if ((e2 | 0) > 0) {
            d2 = 0;
            do {
              g2 = c[b2 + 16 >> 2] | 0;
              c[f2 + (d2 << 4) >> 2] = c[g2 + (d2 << 4) >> 2];
              c[f2 + (d2 << 4) + 4 >> 2] = c[g2 + (d2 << 4) + 4 >> 2];
              c[f2 + (d2 << 4) + 8 >> 2] = c[g2 + (d2 << 4) + 8 >> 2];
              c[f2 + (d2 << 4) + 12 >> 2] = c[g2 + (d2 << 4) + 12 >> 2];
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (e2 | 0));
          }
          d2 = c[b2 + 16 >> 2] | 0;
          if (!d2) {
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = f2;
            c[b2 + 12 >> 2] = 2;
            tf(b2);
            return;
          }
          if (a[b2 + 20 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 16 >> 2] = 0;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = f2;
          c[b2 + 12 >> 2] = 2;
          tf(b2);
          return;
        }
        function Ii(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0;
          g2 = c[d2 >> 2] | 0;
          d2 = c[b2 + 308 >> 2] | 0;
          a:
            do
              if ((d2 | 0) > 0) {
                f2 = c[b2 + 316 >> 2] | 0;
                e2 = 0;
                while (1) {
                  if ((c[f2 + (e2 << 2) >> 2] | 0) == (g2 | 0))
                    break;
                  e2 = e2 + 1 | 0;
                  if ((e2 | 0) >= (d2 | 0))
                    break a;
                }
                if ((e2 | 0) != (d2 | 0))
                  return;
              }
            while (0);
          if ((d2 | 0) == (c[b2 + 312 >> 2] | 0) ? (h2 = d2 | 0 ? d2 << 1 : 1, (d2 | 0) < (h2 | 0)) : 0) {
            if (!h2)
              f2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              d2 = ic((h2 << 2 | 3) + 16 | 0) | 0;
              if (!d2)
                d2 = 0;
              else {
                c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                d2 = d2 + 4 + 15 & -16;
              }
              f2 = d2;
              d2 = c[b2 + 308 >> 2] | 0;
            }
            if ((d2 | 0) > 0) {
              e2 = 0;
              do {
                c[f2 + (e2 << 2) >> 2] = c[(c[b2 + 316 >> 2] | 0) + (e2 << 2) >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (d2 | 0));
            }
            e2 = c[b2 + 316 >> 2] | 0;
            if (e2) {
              if (a[b2 + 320 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[e2 + -4 >> 2] | 0);
                d2 = c[b2 + 308 >> 2] | 0;
              }
              c[b2 + 316 >> 2] = 0;
            }
            a[b2 + 320 >> 0] = 1;
            c[b2 + 316 >> 2] = f2;
            c[b2 + 312 >> 2] = h2;
          }
          c[(c[b2 + 316 >> 2] | 0) + (d2 << 2) >> 2] = g2;
          c[b2 + 308 >> 2] = d2 + 1;
          return;
        }
        function Ji(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          f2 = c[a2 + 232 >> 2] | 0;
          a:
            do
              if ((f2 | 0) > 0) {
                g2 = c[a2 + 240 >> 2] | 0;
                d2 = 0;
                while (1) {
                  e2 = g2 + (d2 << 2) | 0;
                  if ((c[e2 >> 2] | 0) == (b2 | 0))
                    break;
                  d2 = d2 + 1 | 0;
                  if ((d2 | 0) >= (f2 | 0))
                    break a;
                }
                if ((d2 | 0) < (f2 | 0)) {
                  c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
                  c[(c[a2 + 240 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
                  c[a2 + 232 >> 2] = f2 + -1;
                }
              }
            while (0);
          d2 = c[b2 + 188 >> 2] | 0;
          if (d2 | 0) {
            g2 = c[a2 + 68 >> 2] | 0;
            g2 = ob[c[(c[g2 >> 2] | 0) + 36 >> 2] & 127](g2) | 0;
            Ub[c[(c[g2 >> 2] | 0) + 40 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
            g2 = c[a2 + 68 >> 2] | 0;
            Ub[c[(c[g2 >> 2] | 0) + 12 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
            c[b2 + 188 >> 2] = 0;
          }
          f2 = c[a2 + 8 >> 2] | 0;
          if ((f2 | 0) <= 0)
            return;
          g2 = c[a2 + 16 >> 2] | 0;
          d2 = 0;
          while (1) {
            e2 = g2 + (d2 << 2) | 0;
            if ((c[e2 >> 2] | 0) == (b2 | 0))
              break;
            d2 = d2 + 1 | 0;
            if ((d2 | 0) >= (f2 | 0)) {
              h2 = 15;
              break;
            }
          }
          if ((h2 | 0) == 15)
            return;
          if ((d2 | 0) >= (f2 | 0))
            return;
          c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
          c[(c[a2 + 16 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
          c[a2 + 8 >> 2] = f2 + -1;
          return;
        }
        function Ki(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          f2 = c[a2 + 328 >> 2] | 0;
          a:
            do
              if ((f2 | 0) > 0) {
                g2 = c[a2 + 336 >> 2] | 0;
                d2 = 0;
                while (1) {
                  e2 = g2 + (d2 << 2) | 0;
                  if ((c[e2 >> 2] | 0) == (b2 | 0))
                    break;
                  d2 = d2 + 1 | 0;
                  if ((d2 | 0) >= (f2 | 0))
                    break a;
                }
                if ((d2 | 0) < (f2 | 0)) {
                  c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
                  c[(c[a2 + 336 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
                  c[a2 + 328 >> 2] = f2 + -1;
                }
              }
            while (0);
          d2 = c[b2 + 188 >> 2] | 0;
          if (d2 | 0) {
            g2 = c[a2 + 68 >> 2] | 0;
            g2 = ob[c[(c[g2 >> 2] | 0) + 36 >> 2] & 127](g2) | 0;
            Ub[c[(c[g2 >> 2] | 0) + 40 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
            g2 = c[a2 + 68 >> 2] | 0;
            Ub[c[(c[g2 >> 2] | 0) + 12 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
            c[b2 + 188 >> 2] = 0;
          }
          f2 = c[a2 + 8 >> 2] | 0;
          if ((f2 | 0) <= 0)
            return;
          g2 = c[a2 + 16 >> 2] | 0;
          d2 = 0;
          while (1) {
            e2 = g2 + (d2 << 2) | 0;
            if ((c[e2 >> 2] | 0) == (b2 | 0))
              break;
            d2 = d2 + 1 | 0;
            if ((d2 | 0) >= (f2 | 0)) {
              h2 = 15;
              break;
            }
          }
          if ((h2 | 0) == 15)
            return;
          if ((d2 | 0) >= (f2 | 0))
            return;
          c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
          c[(c[a2 + 16 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
          c[a2 + 8 >> 2] = f2 + -1;
          return;
        }
        function Li(b2, d2, e2, f2) {
          b2 = +b2;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0;
          while (1) {
            h2 = ic(144) | 0;
            if (h2 | 0)
              break;
            h2 = c[6453] | 0;
            c[6453] = h2 + 0;
            if (!h2) {
              h2 = 0;
              break;
            }
            Vb[h2 & 3]();
          }
          g[h2 >> 2] = b2;
          c[h2 + 4 >> 2] = d2;
          c[h2 + 72 >> 2] = e2;
          e2 = h2 + 76 | 0;
          c[e2 >> 2] = c[f2 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
          g[h2 + 92 >> 2] = 0;
          g[h2 + 96 >> 2] = 0;
          g[h2 + 100 >> 2] = 0.5;
          g[h2 + 104 >> 2] = 0;
          g[h2 + 108 >> 2] = 0;
          g[h2 + 112 >> 2] = 0;
          g[h2 + 116 >> 2] = 0.800000011920929;
          g[h2 + 120 >> 2] = 1;
          a[h2 + 124 >> 0] = 0;
          g[h2 + 128 >> 2] = 0.004999999888241291;
          g[h2 + 132 >> 2] = 0.009999999776482582;
          g[h2 + 136 >> 2] = 0.009999999776482582;
          g[h2 + 140 >> 2] = 0.009999999776482582;
          c[h2 + 8 >> 2] = 1065353216;
          f2 = h2 + 12 | 0;
          c[f2 >> 2] = 0;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          c[f2 + 12 >> 2] = 0;
          c[h2 + 28 >> 2] = 1065353216;
          f2 = h2 + 32 | 0;
          c[f2 >> 2] = 0;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          c[f2 + 12 >> 2] = 0;
          c[h2 + 48 >> 2] = 1065353216;
          f2 = h2 + 52 | 0;
          c[f2 >> 2] = 0;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          c[f2 + 12 >> 2] = 0;
          c[f2 + 16 >> 2] = 0;
          return h2 | 0;
        }
        function Mi(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          i2 = c[d2 + 4 >> 2] | 0;
          e2 = c[b2 + 912 >> 2] | 0;
          a:
            do
              if ((e2 | 0) > (i2 | 0))
                e2 = b2 + 920 | 0;
              else {
                if ((e2 | 0) < (i2 | 0) ? (c[b2 + 916 >> 2] | 0) < (i2 | 0) : 0) {
                  if ((i2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, f2 = ic((i2 << 2 | 3) + 16 | 0) | 0, (f2 | 0) != 0) : 0) {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    h2 = f2 + 4 + 15 & -16;
                  } else
                    h2 = 0;
                  g2 = c[b2 + 912 >> 2] | 0;
                  f2 = 0;
                  while (1) {
                    if ((f2 | 0) >= (g2 | 0))
                      break;
                    c[h2 + (f2 << 2) >> 2] = c[(c[b2 + 920 >> 2] | 0) + (f2 << 2) >> 2];
                    f2 = f2 + 1 | 0;
                  }
                  f2 = c[b2 + 920 >> 2] | 0;
                  if (f2 | 0) {
                    if (!((a[b2 + 924 >> 0] & 1) == 0 | (f2 | 0) == 0)) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[f2 + -4 >> 2] | 0);
                    }
                    c[b2 + 920 >> 2] = 0;
                  }
                  a[b2 + 924 >> 0] = 1;
                  c[b2 + 920 >> 2] = h2;
                  c[b2 + 916 >> 2] = i2;
                }
                while (1) {
                  if ((e2 | 0) >= (i2 | 0)) {
                    e2 = b2 + 920 | 0;
                    break a;
                  }
                  c[(c[b2 + 920 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                  e2 = e2 + 1 | 0;
                }
              }
            while (0);
          c[b2 + 912 >> 2] = i2;
          f2 = c[e2 >> 2] | 0;
          e2 = 0;
          while (1) {
            if ((e2 | 0) >= (i2 | 0))
              break;
            c[f2 + (e2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (e2 << 2) >> 2];
            e2 = e2 + 1 | 0;
          }
          return;
        }
        function Ni(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          i2 = c[d2 + 4 >> 2] | 0;
          e2 = c[b2 + 4 >> 2] | 0;
          a:
            do
              if ((e2 | 0) > (i2 | 0))
                e2 = b2 + 12 | 0;
              else {
                if ((e2 | 0) < (i2 | 0) ? (c[b2 + 8 >> 2] | 0) < (i2 | 0) : 0) {
                  if ((i2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, f2 = ic((i2 << 2 | 3) + 16 | 0) | 0, (f2 | 0) != 0) : 0) {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    h2 = f2 + 4 + 15 & -16;
                  } else
                    h2 = 0;
                  g2 = c[b2 + 4 >> 2] | 0;
                  f2 = 0;
                  while (1) {
                    if ((f2 | 0) >= (g2 | 0))
                      break;
                    c[h2 + (f2 << 2) >> 2] = c[(c[b2 + 12 >> 2] | 0) + (f2 << 2) >> 2];
                    f2 = f2 + 1 | 0;
                  }
                  f2 = c[b2 + 12 >> 2] | 0;
                  if (f2 | 0) {
                    if (!((a[b2 + 16 >> 0] & 1) == 0 | (f2 | 0) == 0)) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[f2 + -4 >> 2] | 0);
                    }
                    c[b2 + 12 >> 2] = 0;
                  }
                  a[b2 + 16 >> 0] = 1;
                  c[b2 + 12 >> 2] = h2;
                  c[b2 + 8 >> 2] = i2;
                }
                while (1) {
                  if ((e2 | 0) >= (i2 | 0)) {
                    e2 = b2 + 12 | 0;
                    break a;
                  }
                  c[(c[b2 + 12 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                  e2 = e2 + 1 | 0;
                }
              }
            while (0);
          c[b2 + 4 >> 2] = i2;
          f2 = c[e2 >> 2] | 0;
          e2 = 0;
          while (1) {
            if ((e2 | 0) >= (i2 | 0))
              break;
            c[f2 + (e2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (e2 << 2) >> 2];
            e2 = e2 + 1 | 0;
          }
          return;
        }
        function Oi(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = c[b2 + 92 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 96 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 92 >> 2] = 0;
          }
          a[b2 + 96 >> 0] = 1;
          c[b2 + 92 >> 2] = 0;
          c[b2 + 84 >> 2] = 0;
          c[b2 + 88 >> 2] = 0;
          d2 = c[b2 + 64 >> 2] | 0;
          if (d2 | 0)
            do {
              c[b2 + 64 >> 2] = c[d2 + 8 >> 2];
              e2 = c[d2 >> 2] | 0;
              if (e2 | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[e2 + -4 >> 2] | 0);
              }
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
              d2 = c[b2 + 64 >> 2] | 0;
            } while ((d2 | 0) != 0);
          d2 = c[b2 + 48 >> 2] | 0;
          if (d2 | 0)
            do {
              c[b2 + 48 >> 2] = c[d2 + 8 >> 2];
              e2 = c[d2 >> 2] | 0;
              if (e2 | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[e2 + -4 >> 2] | 0);
              }
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
              d2 = c[b2 + 48 >> 2] | 0;
            } while ((d2 | 0) != 0);
          d2 = c[b2 + 32 >> 2] | 0;
          if (!d2)
            return;
          do {
            c[b2 + 32 >> 2] = c[d2 + 8 >> 2];
            e2 = c[d2 >> 2] | 0;
            if (e2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[e2 + -4 >> 2] | 0);
            }
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
            d2 = c[b2 + 32 >> 2] | 0;
          } while ((d2 | 0) != 0);
          return;
        }
        function Pi(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          i2 = c[d2 >> 2] | 0;
          i2 = Jb[c[(c[i2 >> 2] | 0) + 56 >> 2] & 31](i2, 28) | 0;
          j2 = (a[b2 + 4 >> 0] | 0) == 0;
          h2 = c[b2 + 8 >> 2] | 0;
          g2 = c[b2 + 12 >> 2] | 0;
          b2 = c[d2 >> 2] | 0;
          c[i2 + 4 >> 2] = b2;
          c[i2 >> 2] = 9372;
          a[i2 + 8 >> 0] = 0;
          c[i2 + 12 >> 2] = 0;
          if (j2) {
            a[i2 + 16 >> 0] = 0;
            c[i2 + 20 >> 2] = h2;
            c[i2 + 24 >> 2] = g2;
            if (!(yb[c[(c[b2 >> 2] | 0) + 24 >> 2] & 63](b2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0))
              return i2 | 0;
            j2 = c[i2 + 4 >> 2] | 0;
            c[i2 + 12 >> 2] = yb[c[(c[j2 >> 2] | 0) + 12 >> 2] & 63](j2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
            a[i2 + 8 >> 0] = 1;
            return i2 | 0;
          } else {
            a[i2 + 16 >> 0] = 1;
            c[i2 + 20 >> 2] = h2;
            c[i2 + 24 >> 2] = g2;
            if (!(yb[c[(c[b2 >> 2] | 0) + 24 >> 2] & 63](b2, c[f2 + 8 >> 2] | 0, c[e2 + 8 >> 2] | 0) | 0))
              return i2 | 0;
            j2 = c[i2 + 4 >> 2] | 0;
            c[i2 + 12 >> 2] = yb[c[(c[j2 >> 2] | 0) + 12 >> 2] & 63](j2, c[f2 + 8 >> 2] | 0, c[e2 + 8 >> 2] | 0) | 0;
            a[i2 + 8 >> 0] = 1;
            return i2 | 0;
          }
          return 0;
        }
        function Qi(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          c[a2 + 4 >> 2] = c[b2 + 40 >> 2];
          e2 = c[b2 >> 2] | 0;
          c[a2 + 76 >> 2] = e2;
          if (d2) {
            c[a2 + 44 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 44 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
            c[a2 + 44 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
            c[a2 + 44 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
            e2 = a2 + 60 | 0;
            d2 = b2 + 24 | 0;
            c[e2 >> 2] = c[d2 >> 2];
            c[e2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[d2 + 12 >> 2];
            f2 = +g[b2 + 40 >> 2];
            return +f2;
          } else {
            k2 = +g[b2 + 8 >> 2];
            j2 = +g[b2 + 12 >> 2];
            i2 = +g[b2 + 16 >> 2];
            h2 = +g[e2 + 20 >> 2] * k2 + +g[e2 + 24 >> 2] * j2 + +g[e2 + 28 >> 2] * i2;
            f2 = +g[e2 + 36 >> 2] * k2 + +g[e2 + 40 >> 2] * j2 + +g[e2 + 44 >> 2] * i2;
            g[a2 + 44 >> 2] = +g[e2 + 4 >> 2] * k2 + +g[e2 + 8 >> 2] * j2 + +g[e2 + 12 >> 2] * i2;
            g[a2 + 48 >> 2] = h2;
            g[a2 + 52 >> 2] = f2;
            g[a2 + 56 >> 2] = 0;
            e2 = a2 + 60 | 0;
            d2 = b2 + 24 | 0;
            c[e2 >> 2] = c[d2 >> 2];
            c[e2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[e2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[e2 + 12 >> 2] = c[d2 + 12 >> 2];
            f2 = +g[b2 + 40 >> 2];
            return +f2;
          }
          return 0;
        }
        function Ri(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          f2 = i;
          i = i + 48 | 0;
          if ((c[b2 + 128 >> 2] | 0) <= 0) {
            i = f2;
            return;
          }
          e2 = 0;
          do {
            m2 = c[b2 + 136 >> 2] | 0;
            c[f2 + 32 >> 2] = (a[m2 + (e2 * 284 | 0) + 84 >> 0] | 0) == 0 ? 1065353216 : 0;
            c[f2 + 32 + 4 >> 2] = 0;
            c[f2 + 32 + 8 >> 2] = 1065353216;
            g[f2 + 32 + 12 >> 2] = 0;
            l2 = m2 + (e2 * 284 | 0) + 140 | 0;
            c[f2 + 16 >> 2] = c[l2 >> 2];
            c[f2 + 16 + 4 >> 2] = c[l2 + 4 >> 2];
            c[f2 + 16 + 8 >> 2] = c[l2 + 8 >> 2];
            c[f2 + 16 + 12 >> 2] = c[l2 + 12 >> 2];
            l2 = c[b2 + 112 >> 2] | 0;
            h2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
            k2 = +g[m2 + (e2 * 284 | 0) + 108 + (l2 << 2) >> 2] + +g[f2 + 16 + 4 >> 2];
            j2 = +g[m2 + (e2 * 284 | 0) + 124 + (l2 << 2) >> 2] + +g[f2 + 16 + 8 >> 2];
            g[f2 >> 2] = +g[m2 + (e2 * 284 | 0) + 92 + (l2 << 2) >> 2] + +g[f2 + 16 >> 2];
            g[f2 + 4 >> 2] = k2;
            g[f2 + 8 >> 2] = j2;
            g[f2 + 12 >> 2] = 0;
            Yb[h2 & 127](d2, f2 + 16 | 0, f2, f2 + 32 | 0);
            Yb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 127](d2, f2 + 16 | 0, (c[b2 + 136 >> 2] | 0) + (e2 * 284 | 0) + 16 | 0, f2 + 32 | 0);
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) < (c[b2 + 128 >> 2] | 0));
          i = f2;
          return;
        }
        function Si(d2, e2, f2, g2, h2, i2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          if ((d2 | 0) == (c[e2 + 8 >> 2] | 0))
            gl(e2, f2, g2, h2);
          else {
            k2 = b[e2 + 52 >> 1] | 0;
            l2 = c[d2 + 12 >> 2] | 0;
            a[e2 + 52 >> 0] = 0;
            a[e2 + 53 >> 0] = 0;
            wn(d2 + 16 | 0, e2, f2, g2, h2, i2);
            a:
              do
                if ((l2 | 0) > 1) {
                  j2 = d2 + 24 | 0;
                  do {
                    if (a[e2 + 54 >> 0] | 0)
                      break a;
                    m2 = b[e2 + 52 >> 1] | 0;
                    if (!((m2 & 255) << 24 >> 24)) {
                      if ((m2 & 65535) >= 256 ? (c[d2 + 8 >> 2] & 1 | 0) == 0 : 0)
                        break a;
                    } else {
                      if ((c[e2 + 24 >> 2] | 0) == 1)
                        break a;
                      if (!(c[d2 + 8 >> 2] & 2))
                        break a;
                    }
                    a[e2 + 52 >> 0] = 0;
                    a[e2 + 53 >> 0] = 0;
                    wn(j2, e2, f2, g2, h2, i2);
                    j2 = j2 + 8 | 0;
                  } while (j2 >>> 0 < (d2 + 16 + (l2 << 3) | 0) >>> 0);
                }
              while (0);
            a[e2 + 52 >> 0] = k2;
            a[e2 + 53 >> 0] = (k2 & 65535) >>> 8;
          }
          return;
        }
        function Ti(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          switch (b2 | 0) {
            case 2: {
              if ((e2 | 0) < 1) {
                g[a2 + 232 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 512;
                return;
              }
              if ((e2 | 0) < 3) {
                g[a2 + 264 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 32;
                return;
              }
              if ((e2 | 0) == 3) {
                g[a2 + 248 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 2048;
                return;
              }
              if ((e2 | 0) >= 6)
                return;
              g[a2 + 280 >> 2] = d2;
              c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 128;
              return;
            }
            case 3: {
              if ((e2 | 0) < 1) {
                g[a2 + 212 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 1;
                return;
              }
              if ((e2 | 0) != 3)
                return;
              g[a2 + 228 >> 2] = d2;
              c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 4;
              return;
            }
            case 4: {
              if ((e2 | 0) < 1) {
                g[a2 + 244 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 256;
                return;
              }
              if ((e2 | 0) < 3) {
                g[a2 + 276 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 16;
                return;
              }
              if ((e2 | 0) == 3) {
                g[a2 + 260 >> 2] = d2;
                c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 1024;
                return;
              }
              if ((e2 | 0) >= 6)
                return;
              g[a2 + 292 >> 2] = d2;
              c[a2 + 300 >> 2] = c[a2 + 300 >> 2] | 64;
              return;
            }
            default:
              return;
          }
        }
        function Ui(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          e2 = i;
          i = i + 96 | 0;
          c[e2 + 32 >> 2] = 1065353216;
          c[e2 + 32 + 4 >> 2] = 0;
          c[e2 + 32 + 4 + 4 >> 2] = 0;
          c[e2 + 32 + 4 + 8 >> 2] = 0;
          c[e2 + 32 + 4 + 12 >> 2] = 0;
          c[e2 + 32 + 20 >> 2] = 1065353216;
          c[e2 + 32 + 24 >> 2] = 0;
          c[e2 + 32 + 24 + 4 >> 2] = 0;
          c[e2 + 32 + 24 + 8 >> 2] = 0;
          c[e2 + 32 + 24 + 12 >> 2] = 0;
          c[e2 + 32 + 40 >> 2] = 1065353216;
          l2 = e2 + 32 + 44 | 0;
          c[l2 >> 2] = 0;
          c[l2 + 4 >> 2] = 0;
          c[l2 + 8 >> 2] = 0;
          c[l2 + 12 >> 2] = 0;
          c[l2 + 16 >> 2] = 0;
          Yb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
          j2 = (+g[e2 >> 2] - +g[e2 + 16 >> 2]) * 0.5;
          h2 = (+g[e2 + 4 >> 2] - +g[e2 + 16 + 4 >> 2]) * 0.5;
          k2 = (+g[e2 + 8 >> 2] - +g[e2 + 16 + 8 >> 2]) * 0.5;
          f2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          g[d2 >> 2] = b2 * 0.0833333283662796 * ((h2 + f2) * 2 * (h2 + f2) * 2 + (k2 + f2) * 2 * (k2 + f2) * 2);
          g[d2 + 4 >> 2] = b2 * 0.0833333283662796 * ((j2 + f2) * 2 * (j2 + f2) * 2 + (k2 + f2) * 2 * (k2 + f2) * 2);
          g[d2 + 8 >> 2] = b2 * 0.0833333283662796 * ((j2 + f2) * 2 * (j2 + f2) * 2 + (h2 + f2) * 2 * (h2 + f2) * 2);
          g[d2 + 12 >> 2] = 0;
          i = e2;
          return;
        }
        function Vi(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          f2 = i;
          i = i + 240 | 0;
          c[f2 + 80 >> 2] = d2;
          d2 = f2 + 96 | 0;
          e2 = d2 + 40 | 0;
          do {
            c[d2 >> 2] = 0;
            d2 = d2 + 4 | 0;
          } while ((d2 | 0) < (e2 | 0));
          c[f2 + 136 >> 2] = c[f2 + 80 >> 2];
          if ((lc(0, b2, f2 + 136 | 0, f2, f2 + 96 | 0) | 0) >= 0) {
            e2 = c[2377] | 0;
            if ((a[9582] | 0) < 1)
              c[2377] = e2 & -33;
            if (!(c[2389] | 0)) {
              d2 = c[2388] | 0;
              c[2388] = f2 + 152;
              c[2384] = f2 + 152;
              c[2382] = f2 + 152;
              c[2389] = 80;
              c[2381] = f2 + 152 + 80;
              lc(9508, b2, f2 + 136 | 0, f2, f2 + 96 | 0) | 0;
              if (d2 | 0) {
                yb[c[9544 >> 2] & 63](9508, 0, 0) | 0;
                c[2388] = d2;
                c[2389] = 0;
                c[2381] = 0;
                c[2384] = 0;
                c[2382] = 0;
              }
            } else
              lc(9508, b2, f2 + 136 | 0, f2, f2 + 96 | 0) | 0;
            c[2377] = c[2377] | e2 & 32;
          }
          d2 = (a[9583] | 0) == 10;
          do
            if ((c[2396] | 0) < 0) {
              if (!d2 ? (g2 = c[2382] | 0, g2 >>> 0 < (c[2381] | 0) >>> 0) : 0) {
                c[2382] = g2 + 1;
                a[g2 >> 0] = 10;
                break;
              }
              Bm() | 0;
            } else {
              if (!d2 ? (h2 = c[2382] | 0, h2 >>> 0 < (c[2381] | 0) >>> 0) : 0) {
                c[2382] = h2 + 1;
                a[h2 >> 0] = 10;
                break;
              }
              Bm() | 0;
            }
          while (0);
          Ua();
        }
        function Wi(b2, d2, e2) {
          b2 = +b2;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          while (1) {
            f2 = ic(144) | 0;
            if (f2 | 0)
              break;
            f2 = c[6453] | 0;
            c[6453] = f2 + 0;
            if (!f2) {
              f2 = 0;
              break;
            }
            Vb[f2 & 3]();
          }
          g[f2 >> 2] = b2;
          c[f2 + 4 >> 2] = d2;
          c[f2 + 72 >> 2] = e2;
          e2 = f2 + 76 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          c[e2 + 16 >> 2] = 0;
          c[e2 + 20 >> 2] = 0;
          g[f2 + 100 >> 2] = 0.5;
          g[f2 + 104 >> 2] = 0;
          g[f2 + 108 >> 2] = 0;
          g[f2 + 112 >> 2] = 0;
          g[f2 + 116 >> 2] = 0.800000011920929;
          g[f2 + 120 >> 2] = 1;
          a[f2 + 124 >> 0] = 0;
          g[f2 + 128 >> 2] = 0.004999999888241291;
          g[f2 + 132 >> 2] = 0.009999999776482582;
          g[f2 + 136 >> 2] = 0.009999999776482582;
          g[f2 + 140 >> 2] = 0.009999999776482582;
          c[f2 + 8 >> 2] = 1065353216;
          e2 = f2 + 12 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          c[f2 + 28 >> 2] = 1065353216;
          e2 = f2 + 32 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          c[f2 + 48 >> 2] = 1065353216;
          e2 = f2 + 52 | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          c[e2 + 16 >> 2] = 0;
          return f2 | 0;
        }
        function Xi(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          d2 = +g[a2 + 384 >> 2];
          if (!(d2 != 0))
            return;
          f2 = +g[a2 + 388 >> 2];
          i2 = +g[a2 + 392 >> 2];
          k2 = +g[a2 + 396 >> 2];
          l2 = +g[b2 + 4 >> 2] * i2 * d2;
          h2 = +g[b2 + 8 >> 2] * k2 * d2;
          g[a2 + 352 >> 2] = +g[a2 + 352 >> 2] + +g[b2 >> 2] * f2 * d2;
          g[a2 + 356 >> 2] = +g[a2 + 356 >> 2] + l2;
          g[a2 + 360 >> 2] = +g[a2 + 360 >> 2] + h2;
          f2 = +g[b2 >> 2] * f2;
          i2 = +g[b2 + 4 >> 2] * i2;
          k2 = +g[b2 + 8 >> 2] * k2;
          h2 = +g[c2 + 4 >> 2];
          l2 = +g[c2 + 8 >> 2];
          j2 = +g[c2 >> 2];
          e2 = (+g[a2 + 320 >> 2] * (h2 * k2 - l2 * i2) + +g[a2 + 324 >> 2] * (l2 * f2 - j2 * k2) + +g[a2 + 328 >> 2] * (j2 * i2 - h2 * f2)) * +g[a2 + 588 >> 2];
          d2 = (+g[a2 + 336 >> 2] * (h2 * k2 - l2 * i2) + +g[a2 + 340 >> 2] * (l2 * f2 - j2 * k2) + +g[a2 + 344 >> 2] * (j2 * i2 - h2 * f2)) * +g[a2 + 592 >> 2];
          g[a2 + 368 >> 2] = +g[a2 + 368 >> 2] + (+g[a2 + 304 >> 2] * (h2 * k2 - l2 * i2) + +g[a2 + 308 >> 2] * (l2 * f2 - j2 * k2) + +g[a2 + 312 >> 2] * (j2 * i2 - h2 * f2)) * +g[a2 + 584 >> 2];
          g[a2 + 372 >> 2] = +g[a2 + 372 >> 2] + e2;
          g[a2 + 376 >> 2] = +g[a2 + 376 >> 2] + d2;
          return;
        }
        function Yi(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          f2 = c[b2 + 212 >> 2] | 0;
          if ((f2 | 0) == (c[b2 + 216 >> 2] | 0) ? (i2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (i2 | 0)) : 0) {
            if (!i2)
              h2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic((i2 << 2 | 3) + 16 | 0) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              h2 = f2;
              f2 = c[b2 + 212 >> 2] | 0;
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                c[h2 + (g2 << 2) >> 2] = c[(c[b2 + 220 >> 2] | 0) + (g2 << 2) >> 2];
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) != (f2 | 0));
            }
            g2 = c[b2 + 220 >> 2] | 0;
            if (g2) {
              if (a[b2 + 224 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[g2 + -4 >> 2] | 0);
                f2 = c[b2 + 212 >> 2] | 0;
              }
              c[b2 + 220 >> 2] = 0;
            }
            a[b2 + 224 >> 0] = 1;
            c[b2 + 220 >> 2] = h2;
            c[b2 + 216 >> 2] = i2;
          }
          c[(c[b2 + 220 >> 2] | 0) + (f2 << 2) >> 2] = d2;
          c[b2 + 212 >> 2] = f2 + 1;
          if (!e2)
            return;
          Se(c[d2 + 28 >> 2] | 0, d2);
          Se(c[d2 + 32 >> 2] | 0, d2);
          return;
        }
        function Zi(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          e2 = c[a2 + 4 >> 2] | 0;
          if (e2 | 0)
            Xi(e2, b2, d2);
          a2 = c[a2 >> 2] | 0;
          if (!a2)
            return;
          m2 = +g[b2 >> 2];
          k2 = +g[a2 + 128 >> 2];
          l2 = +g[b2 + 4 >> 2];
          j2 = +g[b2 + 8 >> 2];
          f2 = +g[d2 + 4 >> 2];
          o2 = +g[d2 + 8 >> 2];
          n2 = +g[d2 >> 2];
          i2 = +g[a2 + 180 >> 2] * (j2 * f2 - l2 * o2) + +g[a2 + 184 >> 2] * (m2 * o2 - j2 * n2) + (l2 * n2 - m2 * f2) * +g[a2 + 188 >> 2];
          h2 = (j2 * f2 - l2 * o2) * +g[a2 + 196 >> 2] + (m2 * o2 - j2 * n2) * +g[a2 + 200 >> 2] + (l2 * n2 - m2 * f2) * +g[a2 + 204 >> 2];
          f2 = (j2 * f2 - l2 * o2) * +g[a2 + 212 >> 2] + (m2 * o2 - j2 * n2) * +g[a2 + 216 >> 2] + (l2 * n2 - m2 * f2) * +g[a2 + 220 >> 2];
          g[a2 + 276 >> 2] = m2 * k2 + +g[a2 + 276 >> 2];
          g[a2 + 280 >> 2] = k2 * l2 + +g[a2 + 280 >> 2];
          g[a2 + 284 >> 2] = k2 * j2 + +g[a2 + 284 >> 2];
          g[a2 + 292 >> 2] = i2 + +g[a2 + 292 >> 2];
          g[a2 + 296 >> 2] = h2 + +g[a2 + 296 >> 2];
          g[a2 + 300 >> 2] = f2 + +g[a2 + 300 >> 2];
          c[a2 + 312 >> 2] = (c[a2 + 312 >> 2] | 0) + 1;
          return;
        }
        function _i(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
          v2 = +g[a2 + 552 >> 2];
          u2 = +g[a2 + 568 >> 2];
          t2 = +g[a2 + 584 >> 2];
          s2 = +g[b2 >> 2];
          r2 = +g[b2 + 4 >> 2];
          q2 = +g[b2 + 8 >> 2];
          o2 = +g[b2 + 16 >> 2];
          n2 = +g[b2 + 20 >> 2];
          m2 = +g[b2 + 24 >> 2];
          k2 = +g[b2 + 32 >> 2];
          i2 = +g[b2 + 36 >> 2];
          f2 = +g[b2 + 40 >> 2];
          j2 = +g[a2 + 556 >> 2];
          h2 = +g[a2 + 572 >> 2];
          e2 = +g[a2 + 588 >> 2];
          x2 = +g[a2 + 620 >> 2];
          w2 = +g[a2 + 636 >> 2];
          d2 = +g[a2 + 652 >> 2];
          p2 = x2 * +g[c2 >> 2] + w2 * +g[c2 + 4 >> 2] + d2 * +g[c2 + 8 >> 2];
          l2 = x2 * +g[c2 + 16 >> 2] + w2 * +g[c2 + 20 >> 2] + d2 * +g[c2 + 24 >> 2];
          d2 = x2 * +g[c2 + 32 >> 2] + w2 * +g[c2 + 36 >> 2] + d2 * +g[c2 + 40 >> 2];
          d2 = +O(+((v2 * s2 + u2 * r2 + t2 * q2) * p2 + (v2 * o2 + u2 * n2 + t2 * m2) * l2 + (v2 * k2 + u2 * i2 + t2 * f2) * d2), +((s2 * j2 + r2 * h2 + q2 * e2) * p2 + (o2 * j2 + n2 * h2 + m2 * e2) * l2 + (k2 * j2 + i2 * h2 + f2 * e2) * d2));
          return +(d2 * +g[a2 + 732 >> 2]);
        }
        function $i(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          c[b2 >> 2] = 9108;
          d2 = c[b2 + 84 >> 2] | 0;
          g2 = c[d2 + 8 >> 2] | 0;
          if ((g2 | 0) > 0) {
            e2 = 0;
            do {
              f2 = c[(c[d2 + 16 >> 2] | 0) + (e2 * 12 | 0) + 8 >> 2] | 0;
              if (f2 | 0) {
                kb[c[c[f2 >> 2] >> 2] & 255](f2);
                h2 = c[b2 + 4 >> 2] | 0;
                mb[c[(c[h2 >> 2] | 0) + 60 >> 2] & 127](h2, f2);
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (g2 | 0));
            d2 = c[b2 + 84 >> 2] | 0;
          }
          Qh(d2);
          d2 = c[b2 + 84 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 84 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 100 >> 2] | 0;
          if (!d2) {
            a[b2 + 104 >> 0] = 1;
            c[b2 + 100 >> 2] = 0;
            c[b2 + 92 >> 2] = 0;
            h2 = b2 + 96 | 0;
            c[h2 >> 2] = 0;
            Fi(b2);
            return;
          }
          if (a[b2 + 104 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 100 >> 2] = 0;
          a[b2 + 104 >> 0] = 1;
          c[b2 + 100 >> 2] = 0;
          c[b2 + 92 >> 2] = 0;
          h2 = b2 + 96 | 0;
          c[h2 >> 2] = 0;
          Fi(b2);
          return;
        }
        function aj(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          d2 = c[a2 + 8 >> 2] | 0;
          if ((d2 | 0) > 0) {
            f2 = 0;
            do {
              e2 = c[(c[a2 + 16 >> 2] | 0) + (f2 << 2) >> 2] | 0;
              if (c[e2 + 248 >> 2] & 2) {
                g2 = ob[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2) | 0;
                g2 = yb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, g2, 1) | 0;
                d2 = yb[c[(c[e2 >> 2] | 0) + 20 >> 2] & 63](e2, c[g2 + 8 >> 2] | 0, b2) | 0;
                ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, g2, d2, 1497645650, e2);
                d2 = c[a2 + 8 >> 2] | 0;
              }
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) < (d2 | 0));
          }
          if ((c[a2 + 212 >> 2] | 0) <= 0)
            return;
          d2 = 0;
          do {
            g2 = c[(c[a2 + 220 >> 2] | 0) + (d2 << 2) >> 2] | 0;
            e2 = ob[c[(c[g2 >> 2] | 0) + 36 >> 2] & 127](g2) | 0;
            e2 = yb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
            f2 = yb[c[(c[g2 >> 2] | 0) + 40 >> 2] & 63](g2, c[e2 + 8 >> 2] | 0, b2) | 0;
            ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, f2, 1397641027, g2);
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) < (c[a2 + 212 >> 2] | 0));
          return;
        }
        function bj(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0;
          e2 = i;
          i = i + 32 | 0;
          c[a2 + 36 >> 2] = 1566444395;
          c[a2 + 40 >> 2] = 1566444395;
          c[a2 + 44 >> 2] = 1566444395;
          g[a2 + 48 >> 2] = 0;
          c[a2 + 52 >> 2] = -581039253;
          c[a2 + 56 >> 2] = -581039253;
          c[a2 + 60 >> 2] = -581039253;
          g[a2 + 64 >> 2] = 0;
          if ((c[a2 + 20 >> 2] | 0) <= 0) {
            i = e2;
            return;
          }
          d2 = 0;
          do {
            f2 = c[a2 + 28 >> 2] | 0;
            h2 = c[f2 + (d2 * 80 | 0) + 64 >> 2] | 0;
            Yb[c[(c[h2 >> 2] | 0) + 8 >> 2] & 127](h2, f2 + (d2 * 80 | 0) | 0, e2 + 16 | 0, e2);
            b2 = +g[e2 + 16 >> 2];
            if (+g[a2 + 36 >> 2] > b2)
              g[a2 + 36 >> 2] = b2;
            b2 = +g[e2 >> 2];
            if (+g[a2 + 52 >> 2] < b2)
              g[a2 + 52 >> 2] = b2;
            b2 = +g[e2 + 16 + 4 >> 2];
            if (+g[a2 + 40 >> 2] > b2)
              g[a2 + 40 >> 2] = b2;
            b2 = +g[e2 + 4 >> 2];
            if (+g[a2 + 56 >> 2] < b2)
              g[a2 + 56 >> 2] = b2;
            b2 = +g[e2 + 16 + 8 >> 2];
            if (+g[a2 + 44 >> 2] > b2)
              g[a2 + 44 >> 2] = b2;
            b2 = +g[e2 + 8 >> 2];
            if (+g[a2 + 60 >> 2] < b2)
              g[a2 + 60 >> 2] = b2;
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) < (c[a2 + 20 >> 2] | 0));
          i = e2;
          return;
        }
        function cj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
          e2 = i;
          i = i + 96 | 0;
          j2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          c[e2 + 32 >> 2] = 1065353216;
          c[e2 + 32 + 4 >> 2] = 0;
          c[e2 + 32 + 4 + 4 >> 2] = 0;
          c[e2 + 32 + 4 + 8 >> 2] = 0;
          c[e2 + 32 + 4 + 12 >> 2] = 0;
          c[e2 + 32 + 20 >> 2] = 1065353216;
          c[e2 + 32 + 24 >> 2] = 0;
          c[e2 + 32 + 24 + 4 >> 2] = 0;
          c[e2 + 32 + 24 + 8 >> 2] = 0;
          c[e2 + 32 + 24 + 12 >> 2] = 0;
          c[e2 + 32 + 40 >> 2] = 1065353216;
          k2 = e2 + 32 + 44 | 0;
          c[k2 >> 2] = 0;
          c[k2 + 4 >> 2] = 0;
          c[k2 + 8 >> 2] = 0;
          c[k2 + 12 >> 2] = 0;
          c[k2 + 16 >> 2] = 0;
          Yb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
          h2 = (j2 + (+g[e2 >> 2] - +g[e2 + 16 >> 2]) * 0.5) * 2;
          f2 = (j2 + (+g[e2 + 4 >> 2] - +g[e2 + 16 + 4 >> 2]) * 0.5) * 2;
          j2 = (j2 + (+g[e2 + 8 >> 2] - +g[e2 + 16 + 8 >> 2]) * 0.5) * 2;
          g[d2 >> 2] = b2 * 0.0833333283662796 * (f2 * f2 + j2 * j2);
          g[d2 + 4 >> 2] = b2 * 0.0833333283662796 * (h2 * h2 + j2 * j2);
          g[d2 + 8 >> 2] = b2 * 0.0833333283662796 * (h2 * h2 + f2 * f2);
          g[d2 + 12 >> 2] = 0;
          i = e2;
          return;
        }
        function dj(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          d2 = c[b2 + 72 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 76 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 72 >> 2] = 0;
          }
          a[b2 + 76 >> 0] = 1;
          c[b2 + 72 >> 2] = 0;
          c[b2 + 64 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          d2 = c[b2 + 52 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 56 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 52 >> 2] = 0;
          }
          a[b2 + 56 >> 0] = 1;
          c[b2 + 52 >> 2] = 0;
          c[b2 + 44 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          d2 = c[b2 + 32 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 36 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 32 >> 2] = 0;
          }
          a[b2 + 36 >> 0] = 1;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2) {
            a[b2 + 16 >> 0] = 1;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            b2 = b2 + 8 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 16 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 12 >> 2] = 0;
          a[b2 + 16 >> 0] = 1;
          c[b2 + 12 >> 2] = 0;
          c[b2 + 4 >> 2] = 0;
          b2 = b2 + 8 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function ej(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          e2 = c[a2 + 772 >> 2] | 0;
          if ((e2 | 0) <= 0)
            return;
          d2 = c[a2 + 780 >> 2] | 0;
          a2 = 0;
          do {
            n2 = c[d2 + (a2 * 52 | 0) + 8 >> 2] | 0;
            f2 = c[d2 + (a2 * 52 | 0) + 12 >> 2] | 0;
            s2 = +g[n2 + 40 >> 2];
            q2 = +g[n2 + 44 >> 2];
            i2 = +g[n2 + 48 >> 2];
            k2 = d2 + (a2 * 52 | 0) + 36 | 0;
            r2 = +g[k2 >> 2];
            m2 = d2 + (a2 * 52 | 0) + 40 | 0;
            p2 = +g[m2 >> 2];
            l2 = d2 + (a2 * 52 | 0) + 44 | 0;
            o2 = +g[l2 >> 2];
            j2 = -(+g[d2 + (a2 * 52 | 0) + 32 >> 2] * ((s2 - +g[f2 + 40 >> 2]) * r2 + (q2 - +g[f2 + 44 >> 2]) * p2 + (i2 - +g[f2 + 48 >> 2]) * o2) * b2);
            h2 = +g[n2 + 88 >> 2] * j2;
            g[n2 + 40 >> 2] = s2 + r2 * h2;
            g[n2 + 44 >> 2] = q2 + p2 * h2;
            g[n2 + 48 >> 2] = o2 * h2 + i2;
            j2 = +g[f2 + 88 >> 2] * j2;
            i2 = j2 * +g[m2 >> 2];
            h2 = j2 * +g[l2 >> 2];
            g[f2 + 40 >> 2] = +g[f2 + 40 >> 2] - +g[k2 >> 2] * j2;
            g[f2 + 44 >> 2] = +g[f2 + 44 >> 2] - i2;
            g[f2 + 48 >> 2] = +g[f2 + 48 >> 2] - h2;
            a2 = a2 + 1 | 0;
          } while ((a2 | 0) != (e2 | 0));
          return;
        }
        function fj(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          e2 = c[b2 + 12 >> 2] | 0;
          if (!e2)
            return;
          if (!(a[b2 + 8 >> 0] | 0))
            return;
          f2 = c[d2 + 4 >> 2] | 0;
          if ((f2 | 0) == (c[d2 + 8 >> 2] | 0) ? (h2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (h2 | 0)) : 0) {
            if (!h2)
              e2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              e2 = ic((h2 << 2 | 3) + 16 | 0) | 0;
              if (!e2)
                e2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                e2 = e2 + 4 + 15 & -16;
              }
              f2 = c[d2 + 4 >> 2] | 0;
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                c[e2 + (g2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (g2 << 2) >> 2];
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) != (f2 | 0));
            }
            g2 = c[d2 + 12 >> 2] | 0;
            if (g2) {
              if (a[d2 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[g2 + -4 >> 2] | 0);
                f2 = c[d2 + 4 >> 2] | 0;
              }
              c[d2 + 12 >> 2] = 0;
            }
            a[d2 + 16 >> 0] = 1;
            c[d2 + 12 >> 2] = e2;
            c[d2 + 8 >> 2] = h2;
            e2 = c[b2 + 12 >> 2] | 0;
          }
          c[(c[d2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = e2;
          c[d2 + 4 >> 2] = f2 + 1;
          return;
        }
        function gj(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          g2 = c[b2 + 328 >> 2] | 0;
          if ((g2 | 0) == (c[b2 + 332 >> 2] | 0) ? (j2 = g2 | 0 ? g2 << 1 : 1, (g2 | 0) < (j2 | 0)) : 0) {
            if (!j2)
              i2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              g2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
              if (!g2)
                g2 = 0;
              else {
                c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
                g2 = g2 + 4 + 15 & -16;
              }
              i2 = g2;
              g2 = c[b2 + 328 >> 2] | 0;
            }
            if ((g2 | 0) > 0) {
              h2 = 0;
              do {
                c[i2 + (h2 << 2) >> 2] = c[(c[b2 + 336 >> 2] | 0) + (h2 << 2) >> 2];
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (g2 | 0));
            }
            h2 = c[b2 + 336 >> 2] | 0;
            if (h2) {
              if (a[b2 + 340 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[h2 + -4 >> 2] | 0);
                g2 = c[b2 + 328 >> 2] | 0;
              }
              c[b2 + 336 >> 2] = 0;
            }
            a[b2 + 340 >> 0] = 1;
            c[b2 + 336 >> 2] = i2;
            c[b2 + 332 >> 2] = j2;
          }
          c[(c[b2 + 336 >> 2] | 0) + (g2 << 2) >> 2] = d2;
          c[b2 + 328 >> 2] = g2 + 1;
          c[d2 + 324 >> 2] = c[b2 + 452 >> 2];
          Cg(b2, d2, e2, f2);
          return;
        }
        function hj(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          e2 = c[b2 + 60 >> 2] | 0;
          if (!e2)
            return;
          if (!(a[b2 + 56 >> 0] | 0))
            return;
          f2 = c[d2 + 4 >> 2] | 0;
          if ((f2 | 0) == (c[d2 + 8 >> 2] | 0) ? (h2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (h2 | 0)) : 0) {
            if (!h2)
              e2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              e2 = ic((h2 << 2 | 3) + 16 | 0) | 0;
              if (!e2)
                e2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                e2 = e2 + 4 + 15 & -16;
              }
              f2 = c[d2 + 4 >> 2] | 0;
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                c[e2 + (g2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (g2 << 2) >> 2];
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) != (f2 | 0));
            }
            g2 = c[d2 + 12 >> 2] | 0;
            if (g2) {
              if (a[d2 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[g2 + -4 >> 2] | 0);
                f2 = c[d2 + 4 >> 2] | 0;
              }
              c[d2 + 12 >> 2] = 0;
            }
            a[d2 + 16 >> 0] = 1;
            c[d2 + 12 >> 2] = e2;
            c[d2 + 8 >> 2] = h2;
            e2 = c[b2 + 60 >> 2] | 0;
          }
          c[(c[d2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = e2;
          c[d2 + 4 >> 2] = f2 + 1;
          return;
        }
        function ij(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          k2 = +g[a2 + 24 >> 2];
          i2 = +g[a2 + 28 >> 2];
          j2 = +g[a2 + 32 >> 2];
          f2 = k2 * +g[b2 >> 2] + i2 * +g[b2 + 4 >> 2] + j2 * +g[b2 + 8 >> 2];
          h2 = +g[a2 + 20 >> 2];
          if (f2 > h2) {
            g[a2 + 20 >> 2] = f2;
            c[a2 + 4 >> 2] = c[b2 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
          } else
            f2 = h2;
          h2 = k2 * +g[b2 + 16 >> 2] + i2 * +g[b2 + 20 >> 2] + j2 * +g[b2 + 24 >> 2];
          if (h2 > f2) {
            g[a2 + 20 >> 2] = h2;
            c[a2 + 4 >> 2] = c[b2 + 16 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
          } else
            h2 = f2;
          f2 = k2 * +g[b2 + 32 >> 2] + i2 * +g[b2 + 36 >> 2] + j2 * +g[b2 + 40 >> 2];
          if (!(f2 > h2))
            return;
          g[a2 + 20 >> 2] = f2;
          c[a2 + 4 >> 2] = c[b2 + 32 >> 2];
          c[a2 + 4 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
          c[a2 + 4 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
          c[a2 + 4 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
          return;
        }
        function jj(d2, e2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, j2 = 0;
          j2 = i;
          i = i + 64 | 0;
          h2 = c[d2 >> 2] | 0;
          g2 = d2 + (c[h2 + -8 >> 2] | 0) | 0;
          h2 = c[h2 + -4 >> 2] | 0;
          c[j2 >> 2] = e2;
          c[j2 + 4 >> 2] = d2;
          c[j2 + 8 >> 2] = 2776;
          d2 = j2 + 12 | 0;
          f2 = d2 + 40 | 0;
          do {
            c[d2 >> 2] = 0;
            d2 = d2 + 4 | 0;
          } while ((d2 | 0) < (f2 | 0));
          b[j2 + 12 + 40 >> 1] = 0;
          a[j2 + 12 + 42 >> 0] = 0;
          a:
            do
              if ((h2 | 0) == (e2 | 0)) {
                c[j2 + 48 >> 2] = 1;
                Ab[c[(c[e2 >> 2] | 0) + 20 >> 2] & 7](e2, j2, g2, g2, 1, 0);
                d2 = (c[j2 + 24 >> 2] | 0) == 1 ? g2 : 0;
              } else {
                ib[c[(c[h2 >> 2] | 0) + 24 >> 2] & 31](h2, j2, g2, 1, 0);
                switch (c[j2 + 36 >> 2] | 0) {
                  case 0: {
                    d2 = ((c[j2 + 40 >> 2] | 0) == 1 ? (c[j2 + 28 >> 2] | 0) == 1 : 0) & (c[j2 + 32 >> 2] | 0) == 1 ? c[j2 + 20 >> 2] | 0 : 0;
                    break a;
                  }
                  case 1:
                    break;
                  default: {
                    d2 = 0;
                    break a;
                  }
                }
                if ((c[j2 + 24 >> 2] | 0) != 1 ? !(((c[j2 + 40 >> 2] | 0) == 0 ? (c[j2 + 28 >> 2] | 0) == 1 : 0) & (c[j2 + 32 >> 2] | 0) == 1) : 0) {
                  d2 = 0;
                  break;
                }
                d2 = c[j2 + 16 >> 2] | 0;
              }
            while (0);
          i = j2;
          return d2 | 0;
        }
        function kj(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          k2 = +g[a2 + 88 >> 2];
          i2 = +g[a2 + 92 >> 2];
          j2 = +g[a2 + 96 >> 2];
          f2 = k2 * +g[b2 >> 2] + i2 * +g[b2 + 4 >> 2] + j2 * +g[b2 + 8 >> 2];
          h2 = +g[a2 + 84 >> 2];
          if (f2 > h2) {
            g[a2 + 84 >> 2] = f2;
            c[a2 + 4 >> 2] = c[b2 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
          } else
            f2 = h2;
          h2 = k2 * +g[b2 + 16 >> 2] + i2 * +g[b2 + 20 >> 2] + j2 * +g[b2 + 24 >> 2];
          if (h2 > f2) {
            g[a2 + 84 >> 2] = h2;
            c[a2 + 4 >> 2] = c[b2 + 16 >> 2];
            c[a2 + 4 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[a2 + 4 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[a2 + 4 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
          } else
            h2 = f2;
          f2 = k2 * +g[b2 + 32 >> 2] + i2 * +g[b2 + 36 >> 2] + j2 * +g[b2 + 40 >> 2];
          if (!(f2 > h2))
            return;
          g[a2 + 84 >> 2] = f2;
          c[a2 + 4 >> 2] = c[b2 + 32 >> 2];
          c[a2 + 4 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
          c[a2 + 4 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
          c[a2 + 4 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
          return;
        }
        function lj(a2, c2, d2, e2, f2, h2) {
          a2 = a2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          e2 = +e2;
          f2 = +f2;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0;
          d2 = (d2 - +g[a2 + 8 >> 2]) * +g[a2 + 40 >> 2];
          e2 = (e2 - +g[a2 + 12 >> 2]) * +g[a2 + 44 >> 2];
          f2 = (f2 - +g[a2 + 16 >> 2]) * +g[a2 + 48 >> 2];
          do
            if (!(d2 <= 0)) {
              i2 = b[a2 + 6 >> 1] | 0;
              j2 = b[a2 + 4 >> 1] | 0;
              if (!(d2 >= +(i2 & 65535))) {
                i2 = j2 & (~~d2 & 65535) & 65535 | h2;
                break;
              } else {
                i2 = j2 & i2 & 65535 | h2;
                break;
              }
            } else
              i2 = h2;
          while (0);
          b[c2 >> 1] = i2;
          do
            if (!(e2 <= 0)) {
              i2 = b[a2 + 6 >> 1] | 0;
              j2 = b[a2 + 4 >> 1] | 0;
              if (!(e2 >= +(i2 & 65535))) {
                i2 = j2 & (~~e2 & 65535) & 65535 | h2;
                break;
              } else {
                i2 = j2 & i2 & 65535 | h2;
                break;
              }
            } else
              i2 = h2;
          while (0);
          b[c2 + 2 >> 1] = i2;
          if (f2 <= 0) {
            a2 = h2;
            a2 = a2 & 65535;
            h2 = c2 + 4 | 0;
            b[h2 >> 1] = a2;
            return;
          }
          j2 = b[a2 + 6 >> 1] | 0;
          i2 = b[a2 + 4 >> 1] | 0;
          if (!(f2 >= +(j2 & 65535))) {
            a2 = i2 & (~~f2 & 65535) & 65535 | h2;
            a2 = a2 & 65535;
            h2 = c2 + 4 | 0;
            b[h2 >> 1] = a2;
            return;
          } else {
            a2 = i2 & j2 & 65535 | h2;
            a2 = a2 & 65535;
            h2 = c2 + 4 | 0;
            b[h2 >> 1] = a2;
            return;
          }
        }
        function td(a2, b2, d2, e2, f2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0;
          v2 = i;
          i = i + 544 | 0;
          k2 = h2;
          l2 = k2 + 36 | 0;
          do {
            c[k2 >> 2] = 0;
            k2 = k2 + 4 | 0;
          } while ((k2 | 0) < (l2 | 0));
          c[v2 + 384 >> 2] = a2;
          c[v2 + 384 + 4 >> 2] = d2;
          o2 = +g[e2 >> 2];
          E2 = +g[b2 >> 2];
          n2 = +g[e2 + 16 >> 2];
          j2 = +g[b2 + 16 >> 2];
          m2 = +g[e2 + 32 >> 2];
          F2 = +g[b2 + 32 >> 2];
          w2 = +g[b2 + 4 >> 2];
          H2 = +g[b2 + 20 >> 2];
          x2 = +g[b2 + 36 >> 2];
          t2 = +g[b2 + 8 >> 2];
          r2 = +g[b2 + 24 >> 2];
          p2 = +g[b2 + 40 >> 2];
          D2 = +g[e2 + 4 >> 2];
          C2 = +g[e2 + 20 >> 2];
          B2 = +g[e2 + 36 >> 2];
          A2 = +g[e2 + 8 >> 2];
          z2 = +g[e2 + 24 >> 2];
          y2 = +g[e2 + 40 >> 2];
          g[v2 + 384 + 8 >> 2] = o2 * E2 + n2 * j2 + m2 * F2;
          g[v2 + 384 + 12 >> 2] = o2 * w2 + n2 * H2 + m2 * x2;
          g[v2 + 384 + 16 >> 2] = o2 * t2 + n2 * r2 + m2 * p2;
          g[v2 + 384 + 20 >> 2] = 0;
          g[v2 + 384 + 24 >> 2] = E2 * D2 + j2 * C2 + F2 * B2;
          g[v2 + 384 + 28 >> 2] = w2 * D2 + H2 * C2 + x2 * B2;
          g[v2 + 384 + 32 >> 2] = t2 * D2 + r2 * C2 + p2 * B2;
          g[v2 + 384 + 36 >> 2] = 0;
          g[v2 + 384 + 40 >> 2] = E2 * A2 + j2 * z2 + F2 * y2;
          g[v2 + 384 + 44 >> 2] = w2 * A2 + H2 * z2 + x2 * y2;
          g[v2 + 384 + 48 >> 2] = t2 * A2 + r2 * z2 + p2 * y2;
          g[v2 + 384 + 52 >> 2] = 0;
          p2 = +g[e2 + 48 >> 2] - +g[b2 + 48 >> 2];
          r2 = +g[e2 + 52 >> 2] - +g[b2 + 52 >> 2];
          t2 = +g[e2 + 56 >> 2] - +g[b2 + 56 >> 2];
          x2 = +g[b2 >> 2];
          H2 = +g[e2 >> 2];
          w2 = +g[b2 + 16 >> 2];
          F2 = +g[e2 + 16 >> 2];
          j2 = +g[b2 + 32 >> 2];
          E2 = +g[e2 + 32 >> 2];
          m2 = +g[b2 + 4 >> 2];
          n2 = +g[b2 + 20 >> 2];
          o2 = +g[b2 + 36 >> 2];
          q2 = +g[b2 + 8 >> 2];
          s2 = +g[b2 + 24 >> 2];
          u2 = +g[b2 + 40 >> 2];
          g[v2 + 384 + 56 >> 2] = x2 * H2 + w2 * F2 + j2 * E2;
          g[v2 + 384 + 60 >> 2] = x2 * D2 + w2 * C2 + j2 * B2;
          g[v2 + 384 + 64 >> 2] = x2 * A2 + w2 * z2 + j2 * y2;
          g[v2 + 384 + 68 >> 2] = 0;
          g[v2 + 384 + 72 >> 2] = H2 * m2 + F2 * n2 + E2 * o2;
          g[v2 + 384 + 76 >> 2] = D2 * m2 + C2 * n2 + B2 * o2;
          g[v2 + 384 + 80 >> 2] = A2 * m2 + z2 * n2 + y2 * o2;
          g[v2 + 384 + 84 >> 2] = 0;
          g[v2 + 384 + 88 >> 2] = H2 * q2 + F2 * s2 + E2 * u2;
          g[v2 + 384 + 92 >> 2] = D2 * q2 + C2 * s2 + B2 * u2;
          g[v2 + 384 + 96 >> 2] = A2 * q2 + z2 * s2 + y2 * u2;
          g[v2 + 384 + 100 >> 2] = 0;
          g[v2 + 384 + 104 >> 2] = p2 * x2 + r2 * w2 + t2 * j2;
          g[v2 + 384 + 108 >> 2] = p2 * m2 + r2 * n2 + t2 * o2;
          g[v2 + 384 + 112 >> 2] = p2 * q2 + r2 * s2 + t2 * u2;
          g[v2 + 384 + 116 >> 2] = 0;
          c[v2 + 384 + 120 >> 2] = 80;
          c[v2 + 384 + 124 >> 2] = 0;
          c[v2 + 364 >> 2] = 0;
          c[v2 + 128 >> 2] = 0;
          c[v2 + 128 + 4 >> 2] = 0;
          c[v2 + 128 + 8 >> 2] = 0;
          c[v2 + 128 + 12 >> 2] = 0;
          c[v2 + 376 >> 2] = 2;
          c[v2 + 368 >> 2] = 0;
          g[v2 + 144 >> 2] = 0;
          a2 = Ec(v2, v2 + 384 | 0, f2) | 0;
          if (a2 | 0) {
            c[h2 >> 2] = (a2 | 0) == 1 ? 1 : 2;
            h2 = 0;
            i = v2;
            return h2 | 0;
          }
          a2 = c[v2 + 372 >> 2] | 0;
          if (!(c[a2 + 32 >> 2] | 0)) {
            q2 = 0;
            p2 = 0;
            o2 = 0;
            n2 = 0;
            m2 = 0;
            j2 = 0;
          } else {
            f2 = 0;
            q2 = 0;
            p2 = 0;
            o2 = 0;
            n2 = 0;
            m2 = 0;
            j2 = 0;
            do {
              u2 = +g[a2 + 16 + (f2 << 2) >> 2];
              d2 = c[v2 + 384 + 120 >> 2] | 0;
              l2 = c[v2 + 384 + 124 >> 2] | 0;
              e2 = (c[v2 + 384 >> 2] | 0) + (l2 >> 1) | 0;
              if (l2 & 1)
                d2 = c[(c[e2 >> 2] | 0) + d2 >> 2] | 0;
              Ub[d2 & 127](v2 + 528 | 0, e2, c[a2 + (f2 << 2) >> 2] | 0);
              q2 = q2 + u2 * +g[v2 + 528 >> 2];
              j2 = j2 + u2 * +g[v2 + 528 + 4 >> 2];
              n2 = n2 + u2 * +g[v2 + 528 + 8 >> 2];
              a2 = c[(c[v2 + 372 >> 2] | 0) + (f2 << 2) >> 2] | 0;
              r2 = -+g[a2 >> 2];
              s2 = -+g[a2 + 4 >> 2];
              t2 = -+g[a2 + 8 >> 2];
              a2 = c[v2 + 384 + 120 >> 2] | 0;
              l2 = c[v2 + 384 + 124 >> 2] | 0;
              d2 = (c[v2 + 384 + 4 >> 2] | 0) + (l2 >> 1) | 0;
              if (l2 & 1)
                a2 = c[(c[d2 >> 2] | 0) + a2 >> 2] | 0;
              F2 = +g[v2 + 384 + 24 >> 2] * r2 + +g[v2 + 384 + 28 >> 2] * s2 + +g[v2 + 384 + 32 >> 2] * t2;
              E2 = +g[v2 + 384 + 40 >> 2] * r2 + +g[v2 + 384 + 44 >> 2] * s2 + +g[v2 + 384 + 48 >> 2] * t2;
              g[v2 + 512 >> 2] = +g[v2 + 384 + 8 >> 2] * r2 + +g[v2 + 384 + 12 >> 2] * s2 + +g[v2 + 384 + 16 >> 2] * t2;
              g[v2 + 512 + 4 >> 2] = F2;
              g[v2 + 512 + 8 >> 2] = E2;
              g[v2 + 512 + 12 >> 2] = 0;
              Ub[a2 & 127](v2 + 528 | 0, d2, v2 + 512 | 0);
              E2 = +g[v2 + 528 >> 2];
              F2 = +g[v2 + 528 + 4 >> 2];
              H2 = +g[v2 + 528 + 8 >> 2];
              p2 = p2 + u2 * (E2 * +g[v2 + 384 + 56 >> 2] + F2 * +g[v2 + 384 + 60 >> 2] + H2 * +g[v2 + 384 + 64 >> 2] + +g[v2 + 384 + 104 >> 2]);
              m2 = m2 + u2 * (E2 * +g[v2 + 384 + 72 >> 2] + F2 * +g[v2 + 384 + 76 >> 2] + H2 * +g[v2 + 384 + 80 >> 2] + +g[v2 + 384 + 108 >> 2]);
              o2 = o2 + u2 * (E2 * +g[v2 + 384 + 88 >> 2] + F2 * +g[v2 + 384 + 92 >> 2] + H2 * +g[v2 + 384 + 96 >> 2] + +g[v2 + 384 + 112 >> 2]);
              f2 = f2 + 1 | 0;
              a2 = c[v2 + 372 >> 2] | 0;
            } while (f2 >>> 0 < (c[a2 + 32 >> 2] | 0) >>> 0);
          }
          D2 = q2 * +g[b2 + 16 >> 2] + j2 * +g[b2 + 20 >> 2] + n2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
          E2 = q2 * +g[b2 + 32 >> 2] + j2 * +g[b2 + 36 >> 2] + n2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
          g[h2 + 4 >> 2] = q2 * +g[b2 >> 2] + j2 * +g[b2 + 4 >> 2] + n2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
          g[h2 + 8 >> 2] = D2;
          g[h2 + 12 >> 2] = E2;
          g[h2 + 16 >> 2] = 0;
          E2 = p2 * +g[b2 + 16 >> 2] + m2 * +g[b2 + 20 >> 2] + o2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
          D2 = p2 * +g[b2 + 32 >> 2] + m2 * +g[b2 + 36 >> 2] + o2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
          g[h2 + 20 >> 2] = p2 * +g[b2 >> 2] + m2 * +g[b2 + 4 >> 2] + o2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
          g[h2 + 24 >> 2] = E2;
          g[h2 + 28 >> 2] = D2;
          g[h2 + 32 >> 2] = 0;
          D2 = q2 - p2;
          E2 = j2 - m2;
          H2 = n2 - o2;
          g[h2 + 48 >> 2] = 0;
          F2 = +G(+(D2 * D2 + E2 * E2 + H2 * H2));
          g[h2 + 52 >> 2] = F2;
          F2 = F2 > 9999999747378752e-20 ? 1 / F2 : 1;
          g[h2 + 36 >> 2] = F2 * D2;
          g[h2 + 40 >> 2] = F2 * E2;
          g[h2 + 44 >> 2] = F2 * H2;
          h2 = 1;
          i = v2;
          return h2 | 0;
        }
        function ud(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
          n2 = i;
          i = i + 16 | 0;
          c[b2 + 248 >> 2] = 2;
          c[b2 + 352 >> 2] = 0;
          c[b2 + 352 + 4 >> 2] = 0;
          c[b2 + 352 + 8 >> 2] = 0;
          c[b2 + 352 + 12 >> 2] = 0;
          c[b2 + 352 + 16 >> 2] = 0;
          c[b2 + 352 + 20 >> 2] = 0;
          c[b2 + 352 + 24 >> 2] = 0;
          c[b2 + 352 + 28 >> 2] = 0;
          c[b2 + 584 >> 2] = 1065353216;
          c[b2 + 588 >> 2] = 1065353216;
          c[b2 + 592 >> 2] = 1065353216;
          g[b2 + 596 >> 2] = 0;
          c[b2 + 388 >> 2] = 1065353216;
          c[b2 + 392 >> 2] = 1065353216;
          c[b2 + 396 >> 2] = 1065353216;
          e2 = b2 + 400 | 0;
          h2 = e2 + 36 | 0;
          do {
            c[e2 >> 2] = 0;
            e2 = e2 + 4 | 0;
          } while ((e2 | 0) < (h2 | 0));
          c[b2 + 452 >> 2] = 0;
          c[b2 + 452 + 4 >> 2] = 0;
          c[b2 + 452 + 8 >> 2] = 0;
          c[b2 + 452 + 12 >> 2] = 0;
          c[b2 + 452 + 16 >> 2] = 0;
          c[b2 + 452 + 20 >> 2] = 0;
          c[b2 + 452 + 24 >> 2] = 0;
          c[b2 + 452 + 28 >> 2] = 0;
          f2 = +g[d2 + 92 >> 2];
          m2 = +g[d2 + 96 >> 2];
          g[n2 + 12 >> 2] = f2;
          g[n2 + 8 >> 2] = m2;
          g[n2 + 4 >> 2] = 0;
          g[n2 >> 2] = 1;
          c[b2 + 484 >> 2] = c[(f2 < 0 ? n2 + 4 | 0 : f2 > 1 ? n2 : n2 + 12 | 0) >> 2];
          g[n2 + 4 >> 2] = 0;
          g[n2 >> 2] = 1;
          c[b2 + 488 >> 2] = c[(m2 < 0 ? n2 + 4 | 0 : m2 > 1 ? n2 : n2 + 8 | 0) >> 2];
          c[b2 + 512 >> 2] = c[d2 + 116 >> 2];
          c[b2 + 516 >> 2] = c[d2 + 120 >> 2];
          e2 = c[d2 + 4 >> 2] | 0;
          c[b2 + 520 >> 2] = e2;
          c[b2 + 648 >> 2] = 0;
          c[b2 + 652 >> 2] = 0;
          a[b2 + 492 >> 0] = a[d2 + 124 >> 0] | 0;
          c[b2 + 496 >> 2] = c[d2 + 128 >> 2];
          c[b2 + 500 >> 2] = c[d2 + 132 >> 2];
          c[b2 + 504 >> 2] = c[d2 + 136 >> 2];
          c[b2 + 508 >> 2] = c[d2 + 140 >> 2];
          if (!e2) {
            c[b2 + 4 >> 2] = c[d2 + 8 >> 2];
            c[b2 + 4 + 4 >> 2] = c[d2 + 8 + 4 >> 2];
            c[b2 + 4 + 8 >> 2] = c[d2 + 8 + 8 >> 2];
            c[b2 + 4 + 12 >> 2] = c[d2 + 8 + 12 >> 2];
            c[b2 + 20 >> 2] = c[d2 + 24 >> 2];
            c[b2 + 20 + 4 >> 2] = c[d2 + 24 + 4 >> 2];
            c[b2 + 20 + 8 >> 2] = c[d2 + 24 + 8 >> 2];
            c[b2 + 20 + 12 >> 2] = c[d2 + 24 + 12 >> 2];
            c[b2 + 36 >> 2] = c[d2 + 40 >> 2];
            c[b2 + 36 + 4 >> 2] = c[d2 + 40 + 4 >> 2];
            c[b2 + 36 + 8 >> 2] = c[d2 + 40 + 8 >> 2];
            c[b2 + 36 + 12 >> 2] = c[d2 + 40 + 12 >> 2];
            c[b2 + 52 >> 2] = c[d2 + 56 >> 2];
            c[b2 + 52 + 4 >> 2] = c[d2 + 56 + 4 >> 2];
            c[b2 + 52 + 8 >> 2] = c[d2 + 56 + 8 >> 2];
            c[b2 + 52 + 12 >> 2] = c[d2 + 56 + 12 >> 2];
            e2 = b2 + 20 | 0;
            h2 = b2 + 36 | 0;
            j2 = b2 + 52 | 0;
            k2 = b2 + 4 | 0;
          } else {
            mb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, b2 + 4 | 0);
            e2 = b2 + 20 | 0;
            h2 = b2 + 36 | 0;
            j2 = b2 + 52 | 0;
            k2 = b2 + 4 | 0;
          }
          c[b2 + 68 >> 2] = c[k2 >> 2];
          c[b2 + 68 + 4 >> 2] = c[k2 + 4 >> 2];
          c[b2 + 68 + 8 >> 2] = c[k2 + 8 >> 2];
          c[b2 + 68 + 12 >> 2] = c[k2 + 12 >> 2];
          c[b2 + 84 >> 2] = c[e2 >> 2];
          c[b2 + 84 + 4 >> 2] = c[e2 + 4 >> 2];
          c[b2 + 84 + 8 >> 2] = c[e2 + 8 >> 2];
          c[b2 + 84 + 12 >> 2] = c[e2 + 12 >> 2];
          c[b2 + 100 >> 2] = c[h2 >> 2];
          c[b2 + 100 + 4 >> 2] = c[h2 + 4 >> 2];
          c[b2 + 100 + 8 >> 2] = c[h2 + 8 >> 2];
          c[b2 + 100 + 12 >> 2] = c[h2 + 12 >> 2];
          c[b2 + 116 >> 2] = c[j2 >> 2];
          c[b2 + 116 + 4 >> 2] = c[j2 + 4 >> 2];
          c[b2 + 116 + 8 >> 2] = c[j2 + 8 >> 2];
          c[b2 + 116 + 12 >> 2] = c[j2 + 12 >> 2];
          c[b2 + 132 >> 2] = 0;
          c[b2 + 132 + 4 >> 2] = 0;
          c[b2 + 132 + 8 >> 2] = 0;
          c[b2 + 132 + 12 >> 2] = 0;
          c[b2 + 132 + 16 >> 2] = 0;
          c[b2 + 132 + 20 >> 2] = 0;
          c[b2 + 132 + 24 >> 2] = 0;
          c[b2 + 132 + 28 >> 2] = 0;
          c[b2 + 224 >> 2] = c[d2 + 100 >> 2];
          c[b2 + 232 >> 2] = c[d2 + 104 >> 2];
          c[b2 + 236 >> 2] = c[d2 + 108 >> 2];
          c[b2 + 228 >> 2] = c[d2 + 112 >> 2];
          mb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, c[d2 + 72 >> 2] | 0);
          e2 = c[5873] | 0;
          c[5873] = e2 + 1;
          c[b2 + 548 >> 2] = e2;
          f2 = +g[d2 >> 2];
          e2 = c[b2 + 204 >> 2] | 0;
          if (f2 == 0) {
            c[b2 + 204 >> 2] = e2 | 1;
            m2 = 0;
          } else {
            c[b2 + 204 >> 2] = e2 & -2;
            m2 = 1 / f2;
          }
          g[b2 + 384 >> 2] = m2;
          p2 = f2 * +g[b2 + 424 >> 2];
          o2 = f2 * +g[b2 + 428 >> 2];
          g[b2 + 404 >> 2] = f2 * +g[b2 + 420 >> 2];
          g[b2 + 408 >> 2] = p2;
          g[b2 + 412 >> 2] = o2;
          g[b2 + 416 >> 2] = 0;
          f2 = +g[d2 + 76 >> 2];
          h2 = f2 != 0 ? (g[l >> 2] = 1 / f2, c[l >> 2] | 0) : 0;
          f2 = +g[d2 + 80 >> 2];
          e2 = f2 != 0 ? (g[l >> 2] = 1 / f2, c[l >> 2] | 0) : 0;
          f2 = +g[d2 + 84 >> 2];
          d2 = f2 != 0 ? (g[l >> 2] = 1 / f2, c[l >> 2] | 0) : 0;
          c[b2 + 436 >> 2] = h2;
          c[b2 + 440 >> 2] = e2;
          c[b2 + 444 >> 2] = d2;
          g[b2 + 448 >> 2] = 0;
          r2 = m2 * +g[b2 + 392 >> 2];
          x2 = m2 * +g[b2 + 396 >> 2];
          g[b2 + 600 >> 2] = m2 * +g[b2 + 388 >> 2];
          g[b2 + 604 >> 2] = r2;
          g[b2 + 608 >> 2] = x2;
          g[b2 + 612 >> 2] = 0;
          x2 = +g[b2 + 4 >> 2];
          r2 = (c[l >> 2] = h2, +g[l >> 2]);
          w2 = +g[b2 + 8 >> 2];
          f2 = (c[l >> 2] = e2, +g[l >> 2]);
          v2 = +g[b2 + 12 >> 2];
          o2 = (c[l >> 2] = d2, +g[l >> 2]);
          u2 = +g[b2 + 20 >> 2];
          t2 = +g[b2 + 24 >> 2];
          s2 = +g[b2 + 28 >> 2];
          q2 = +g[b2 + 36 >> 2];
          p2 = +g[b2 + 40 >> 2];
          m2 = +g[b2 + 44 >> 2];
          g[b2 + 304 >> 2] = x2 * x2 * r2 + w2 * w2 * f2 + v2 * v2 * o2;
          g[b2 + 308 >> 2] = x2 * r2 * u2 + w2 * f2 * t2 + v2 * o2 * s2;
          g[b2 + 312 >> 2] = x2 * r2 * q2 + w2 * f2 * p2 + v2 * o2 * m2;
          g[b2 + 316 >> 2] = 0;
          g[b2 + 320 >> 2] = x2 * r2 * u2 + w2 * f2 * t2 + v2 * o2 * s2;
          g[b2 + 324 >> 2] = u2 * r2 * u2 + t2 * f2 * t2 + s2 * o2 * s2;
          g[b2 + 328 >> 2] = r2 * u2 * q2 + f2 * t2 * p2 + o2 * s2 * m2;
          g[b2 + 332 >> 2] = 0;
          g[b2 + 336 >> 2] = x2 * r2 * q2 + w2 * f2 * p2 + v2 * o2 * m2;
          g[b2 + 340 >> 2] = u2 * r2 * q2 + t2 * f2 * p2 + s2 * o2 * m2;
          g[b2 + 344 >> 2] = q2 * r2 * q2 + p2 * f2 * p2 + m2 * o2 * m2;
          g[b2 + 348 >> 2] = 0;
          c[b2 + 544 >> 2] = 8;
          c[b2 + 552 >> 2] = 0;
          c[b2 + 552 + 4 >> 2] = 0;
          c[b2 + 552 + 8 >> 2] = 0;
          c[b2 + 552 + 12 >> 2] = 0;
          c[b2 + 552 + 16 >> 2] = 0;
          c[b2 + 552 + 20 >> 2] = 0;
          c[b2 + 552 + 24 >> 2] = 0;
          c[b2 + 552 + 28 >> 2] = 0;
          m2 = +g[b2 + 384 >> 2];
          o2 = m2 * +g[b2 + 392 >> 2];
          p2 = m2 * +g[b2 + 396 >> 2];
          g[b2 + 600 >> 2] = +g[b2 + 388 >> 2] * m2;
          g[b2 + 604 >> 2] = o2;
          g[b2 + 608 >> 2] = p2;
          e2 = b2 + 612 | 0;
          h2 = e2 + 36 | 0;
          do {
            c[e2 >> 2] = 0;
            e2 = e2 + 4 | 0;
          } while ((e2 | 0) < (h2 | 0));
          i = n2;
          return;
        }
        function vd(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0;
          h2 = i;
          i = i + 240 | 0;
          if (!(c[b2 + 16 >> 2] | 0)) {
            K2 = c[b2 + 12 >> 2] | 0;
            b2 = c[b2 + 20 >> 2] | 0;
            x2 = +g[d2 >> 2];
            q2 = +g[d2 + 4 >> 2];
            u2 = +g[d2 + 8 >> 2];
            k2 = +g[d2 + 16 >> 2];
            r2 = +g[d2 + 20 >> 2];
            j2 = +g[d2 + 24 >> 2];
            m2 = +g[d2 + 32 >> 2];
            s2 = +g[d2 + 36 >> 2];
            n2 = +g[d2 + 40 >> 2];
            F2 = +g[d2 + 48 >> 2];
            E2 = +g[d2 + 52 >> 2];
            D2 = +g[d2 + 56 >> 2];
            J2 = +g[e2 >> 2];
            I2 = +g[e2 + 16 >> 2];
            z2 = +g[e2 + 32 >> 2];
            H2 = +g[e2 + 4 >> 2];
            G2 = +g[e2 + 20 >> 2];
            y2 = +g[e2 + 36 >> 2];
            v2 = +g[e2 + 8 >> 2];
            l2 = +g[e2 + 24 >> 2];
            p2 = +g[e2 + 40 >> 2];
            C2 = -+g[e2 + 48 >> 2];
            B2 = -+g[e2 + 52 >> 2];
            w2 = -+g[e2 + 56 >> 2];
            d2 = c[(c[K2 >> 2] | 0) + 64 >> 2] | 0;
            A2 = -+g[b2 + 52 >> 2];
            t2 = -+g[b2 + 56 >> 2];
            o2 = -+g[b2 + 60 >> 2];
            g[h2 + 16 >> 2] = (x2 * J2 + k2 * I2 + m2 * z2) * A2 + (x2 * H2 + k2 * G2 + m2 * y2) * t2 + (x2 * v2 + k2 * l2 + m2 * p2) * o2;
            g[h2 + 16 + 4 >> 2] = (q2 * J2 + r2 * I2 + s2 * z2) * A2 + (q2 * H2 + r2 * G2 + s2 * y2) * t2 + (q2 * v2 + r2 * l2 + s2 * p2) * o2;
            g[h2 + 16 + 8 >> 2] = (u2 * J2 + j2 * I2 + n2 * z2) * A2 + (u2 * H2 + j2 * G2 + n2 * y2) * t2 + (u2 * v2 + j2 * l2 + n2 * p2) * o2;
            g[h2 + 16 + 12 >> 2] = 0;
            Ub[d2 & 127](h2 + 152 | 0, K2, h2 + 16 | 0);
            o2 = +g[h2 + 152 >> 2];
            t2 = +g[h2 + 152 + 4 >> 2];
            A2 = +g[h2 + 152 + 8 >> 2];
            z2 = F2 * J2 + E2 * I2 + D2 * z2 + (J2 * C2 + I2 * B2 + z2 * w2) + ((x2 * J2 + k2 * I2 + m2 * z2) * o2 + (q2 * J2 + r2 * I2 + s2 * z2) * t2 + (u2 * J2 + j2 * I2 + n2 * z2) * A2);
            y2 = F2 * H2 + E2 * G2 + D2 * y2 + (H2 * C2 + G2 * B2 + y2 * w2) + ((x2 * H2 + k2 * G2 + m2 * y2) * o2 + (q2 * H2 + r2 * G2 + s2 * y2) * t2 + (u2 * H2 + j2 * G2 + n2 * y2) * A2);
            A2 = F2 * v2 + E2 * l2 + D2 * p2 + (v2 * C2 + l2 * B2 + p2 * w2) + ((x2 * v2 + k2 * l2 + m2 * p2) * o2 + (q2 * v2 + r2 * l2 + s2 * p2) * t2 + (u2 * v2 + j2 * l2 + n2 * p2) * A2);
            p2 = +g[b2 + 52 >> 2];
            n2 = +g[b2 + 56 >> 2];
            l2 = +g[b2 + 60 >> 2];
            j2 = l2 * A2 + (p2 * z2 + n2 * y2) - +g[b2 + 68 >> 2];
            v2 = +g[e2 >> 2];
            u2 = +g[e2 + 4 >> 2];
            t2 = +g[e2 + 8 >> 2];
            s2 = +g[e2 + 16 >> 2];
            r2 = +g[e2 + 20 >> 2];
            q2 = +g[e2 + 24 >> 2];
            o2 = +g[e2 + 32 >> 2];
            m2 = +g[e2 + 36 >> 2];
            k2 = +g[e2 + 40 >> 2];
            x2 = (z2 - p2 * j2) * s2 + (y2 - n2 * j2) * r2 + (A2 - l2 * j2) * q2 + +g[e2 + 52 >> 2];
            w2 = (z2 - p2 * j2) * o2 + (y2 - n2 * j2) * m2 + (A2 - l2 * j2) * k2 + +g[e2 + 56 >> 2];
            g[h2 + 16 >> 2] = t2 * (A2 - l2 * j2) + (v2 * (z2 - p2 * j2) + u2 * (y2 - n2 * j2)) + +g[e2 + 48 >> 2];
            g[h2 + 16 + 4 >> 2] = x2;
            g[h2 + 16 + 8 >> 2] = w2;
            g[h2 + 16 + 12 >> 2] = 0;
            g[h2 >> 2] = v2 * p2 + u2 * n2 + t2 * l2;
            g[h2 + 4 >> 2] = p2 * s2 + n2 * r2 + l2 * q2;
            g[h2 + 8 >> 2] = p2 * o2 + n2 * m2 + l2 * k2;
            g[h2 + 12 >> 2] = 0;
            Tb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 15](f2, h2, h2 + 16 | 0, j2);
            i = h2;
            return;
          } else {
            N2 = c[b2 + 4 >> 2] | 0;
            a[N2 + 312 >> 0] = 0;
            c[N2 >> 2] = 0;
            a[N2 + 356 >> 0] = 1;
            c[N2 + 292 >> 2] = 1566444395;
            c[N2 + 296 >> 2] = 1566444395;
            c[N2 + 300 >> 2] = 1566444395;
            g[N2 + 304 >> 2] = 0;
            c[N2 + 336 >> 2] = 0;
            c[N2 + 336 + 4 >> 2] = 0;
            c[N2 + 336 + 8 >> 2] = 0;
            c[N2 + 336 + 12 >> 2] = 0;
            a[N2 + 336 + 16 >> 0] = 0;
            a[N2 + 332 >> 0] = a[N2 + 332 >> 0] & -16;
            N2 = c[b2 + 12 >> 2] | 0;
            M2 = c[b2 + 16 >> 2] | 0;
            L2 = c[N2 + 4 >> 2] | 0;
            K2 = c[M2 + 4 >> 2] | 0;
            I2 = +Cb[c[(c[N2 >> 2] | 0) + 48 >> 2] & 15](N2);
            O2 = c[b2 + 16 >> 2] | 0;
            J2 = +Cb[c[(c[O2 >> 2] | 0) + 48 >> 2] & 15](O2);
            O2 = c[b2 + 4 >> 2] | 0;
            b2 = c[b2 + 8 >> 2] | 0;
            c[h2 + 152 >> 2] = 8848;
            c[h2 + 152 + 4 >> 2] = 0;
            c[h2 + 152 + 8 >> 2] = 1065353216;
            c[h2 + 152 + 12 >> 2] = 0;
            g[h2 + 152 + 16 >> 2] = 0;
            c[h2 + 152 + 20 >> 2] = b2;
            c[h2 + 152 + 24 >> 2] = O2;
            c[h2 + 152 + 28 >> 2] = N2;
            c[h2 + 152 + 32 >> 2] = M2;
            c[h2 + 152 + 36 >> 2] = L2;
            c[h2 + 152 + 40 >> 2] = K2;
            g[h2 + 152 + 44 >> 2] = I2;
            g[h2 + 152 + 48 >> 2] = J2;
            a[h2 + 152 + 52 >> 0] = 0;
            c[h2 + 152 + 60 >> 2] = -1;
            c[h2 + 152 + 72 >> 2] = 1;
            c[h2 + 152 + 76 >> 2] = 1;
            g[h2 + 16 + 128 >> 2] = 999999984306749400;
            c[h2 + 16 >> 2] = c[d2 >> 2];
            c[h2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
            c[h2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
            c[h2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
            c[h2 + 16 + 16 >> 2] = c[d2 + 16 >> 2];
            c[h2 + 16 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
            c[h2 + 16 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
            c[h2 + 16 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
            c[h2 + 16 + 32 >> 2] = c[d2 + 32 >> 2];
            c[h2 + 16 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
            c[h2 + 16 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
            c[h2 + 16 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
            c[h2 + 16 + 48 >> 2] = c[d2 + 48 >> 2];
            c[h2 + 16 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
            c[h2 + 16 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
            c[h2 + 16 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
            c[h2 + 16 + 64 >> 2] = c[e2 >> 2];
            c[h2 + 16 + 64 + 4 >> 2] = c[e2 + 4 >> 2];
            c[h2 + 16 + 64 + 8 >> 2] = c[e2 + 8 >> 2];
            c[h2 + 16 + 64 + 12 >> 2] = c[e2 + 12 >> 2];
            c[h2 + 16 + 80 >> 2] = c[e2 + 16 >> 2];
            c[h2 + 16 + 80 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
            c[h2 + 16 + 80 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
            c[h2 + 16 + 80 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
            c[h2 + 16 + 96 >> 2] = c[e2 + 32 >> 2];
            c[h2 + 16 + 96 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
            c[h2 + 16 + 96 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
            c[h2 + 16 + 96 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
            c[h2 + 16 + 112 >> 2] = c[e2 + 48 >> 2];
            c[h2 + 16 + 112 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
            c[h2 + 16 + 112 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
            c[h2 + 16 + 112 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
            uc(h2 + 152 | 0, h2 + 16 | 0, f2, 0, 0);
            i = h2;
            return;
          }
        }
        function wd(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0;
          F2 = i;
          i = i + 96 | 0;
          d2 = c[a2 + 216 >> 2] | 0;
          if (+g[d2 + 4 >> 2] == 0) {
            E2 = 0;
            i = F2;
            return E2 | 0;
          }
          E2 = c[b2 >> 2] | 0;
          if (!(Jb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 31](d2, c[E2 + 188 >> 2] | 0) | 0)) {
            E2 = 1;
            i = F2;
            return E2 | 0;
          }
          b2 = c[E2 + 192 >> 2] | 0;
          D2 = c[a2 + 216 >> 2] | 0;
          if ((c[b2 + 4 >> 2] | 0) != 32) {
            c[F2 + 32 >> 2] = 0;
            c[F2 + 32 + 4 >> 2] = b2;
            c[F2 + 32 + 8 >> 2] = E2;
            c[F2 + 32 + 12 >> 2] = E2 + 4;
            c[F2 + 32 + 16 >> 2] = -1;
            c[F2 + 32 + 20 >> 2] = -1;
            Vc(a2 + 68 | 0, a2 + 132 | 0, F2 + 32 | 0, D2);
            E2 = 1;
            i = F2;
            return E2 | 0;
          }
          if ((E2 | 0) == 0 ? 1 : (c[E2 + 248 >> 2] | 0) != 8) {
            E2 = 1;
            i = F2;
            return E2 | 0;
          }
          if (c[E2 + 792 >> 2] | 0 ? (c[E2 + 1028 >> 2] | 0) == 0 : 0)
            Uf(E2);
          A2 = +g[a2 + 180 >> 2] - +g[a2 + 116 >> 2];
          B2 = +g[a2 + 184 >> 2] - +g[a2 + 120 >> 2];
          C2 = +g[a2 + 188 >> 2] - +g[a2 + 124 >> 2];
          b2 = c[E2 + 1028 >> 2] | 0;
          if (!b2) {
            q2 = c[E2 + 792 >> 2] | 0;
            if ((q2 | 0) > 0) {
              r2 = c[E2 + 800 >> 2] | 0;
              p2 = 0;
              d2 = 0;
              b2 = -1;
              k2 = 1065353216;
              h2 = 0;
              do {
                I2 = c[r2 + (p2 * 44 | 0) + 8 >> 2] | 0;
                H2 = c[r2 + (p2 * 44 | 0) + 12 >> 2] | 0;
                z2 = c[r2 + (p2 * 44 | 0) + 16 >> 2] | 0;
                e2 = +Dh(a2 + 116 | 0, A2, B2, C2, +g[I2 + 8 >> 2], +g[I2 + 12 >> 2], +g[I2 + 16 >> 2], +g[H2 + 8 >> 2], +g[H2 + 12 >> 2], +g[H2 + 16 >> 2], +g[z2 + 8 >> 2], +g[z2 + 12 >> 2], +g[z2 + 16 >> 2], (c[l >> 2] = k2, +g[l >> 2]));
                if (e2 > 0) {
                  d2 = d2 + 1 | 0;
                  b2 = p2;
                  k2 = (g[l >> 2] = e2, c[l >> 2] | 0);
                  h2 = 3;
                }
                p2 = p2 + 1 | 0;
              } while ((p2 | 0) != (q2 | 0));
            } else {
              d2 = 0;
              b2 = -1;
              k2 = 1065353216;
              h2 = 0;
            }
          } else {
            c[F2 + 32 >> 2] = 3036;
            c[F2 + 32 + 4 >> 2] = c[a2 + 116 >> 2];
            c[F2 + 32 + 4 + 4 >> 2] = c[a2 + 116 + 4 >> 2];
            c[F2 + 32 + 4 + 8 >> 2] = c[a2 + 116 + 8 >> 2];
            c[F2 + 32 + 4 + 12 >> 2] = c[a2 + 116 + 12 >> 2];
            g[F2 + 32 + 36 >> 2] = A2;
            g[F2 + 32 + 40 >> 2] = B2;
            g[F2 + 32 + 44 >> 2] = C2;
            g[F2 + 32 + 48 >> 2] = 0;
            c[F2 + 32 + 20 >> 2] = c[a2 + 180 >> 2];
            c[F2 + 32 + 20 + 4 >> 2] = c[a2 + 180 + 4 >> 2];
            c[F2 + 32 + 20 + 8 >> 2] = c[a2 + 180 + 8 >> 2];
            c[F2 + 32 + 20 + 12 >> 2] = c[a2 + 180 + 12 >> 2];
            c[F2 + 32 + 52 >> 2] = 1065353216;
            c[F2 + 32 + 56 >> 2] = 0;
            c[F2 + 32 + 60 >> 2] = 0;
            Me(b2, a2 + 116 | 0, a2 + 180 | 0, F2 + 32 | 0);
            b2 = c[F2 + 32 + 56 >> 2] | 0;
            if (!b2) {
              d2 = 0;
              b2 = -1;
              k2 = 1065353216;
              h2 = 0;
            } else {
              d2 = 1;
              b2 = (b2 - (c[E2 + 800 >> 2] | 0) | 0) / 44 | 0;
              k2 = c[F2 + 32 + 52 >> 2] | 0;
              h2 = 3;
            }
          }
          r2 = c[E2 + 812 >> 2] | 0;
          if ((r2 | 0) > 0) {
            z2 = c[E2 + 820 >> 2] | 0;
            q2 = 0;
            do {
              I2 = c[z2 + (q2 * 104 | 0) + 8 >> 2] | 0;
              t2 = +g[I2 + 8 >> 2];
              w2 = +g[I2 + 12 >> 2];
              y2 = +g[I2 + 16 >> 2];
              I2 = c[z2 + (q2 * 104 | 0) + 12 >> 2] | 0;
              j2 = +g[I2 + 8 >> 2];
              n2 = +g[I2 + 12 >> 2];
              s2 = +g[I2 + 16 >> 2];
              I2 = c[z2 + (q2 * 104 | 0) + 16 >> 2] | 0;
              u2 = +g[I2 + 8 >> 2];
              v2 = +g[I2 + 12 >> 2];
              x2 = +g[I2 + 16 >> 2];
              e2 = (c[l >> 2] = k2, +g[l >> 2]);
              f2 = +Dh(a2 + 116 | 0, A2, B2, C2, t2, w2, y2, j2, n2, s2, u2, v2, x2, e2);
              if (f2 > 0) {
                d2 = d2 + 1 | 0;
                b2 = q2;
                k2 = (g[l >> 2] = f2, c[l >> 2] | 0);
                h2 = 4;
                e2 = f2;
              }
              I2 = c[z2 + (q2 * 104 | 0) + 20 >> 2] | 0;
              f2 = +g[I2 + 8 >> 2];
              m2 = +g[I2 + 12 >> 2];
              o2 = +g[I2 + 16 >> 2];
              e2 = +Dh(a2 + 116 | 0, A2, B2, C2, t2, w2, y2, j2, n2, s2, f2, m2, o2, e2);
              if (e2 > 0) {
                d2 = d2 + 1 | 0;
                b2 = q2;
                p2 = (g[l >> 2] = e2, c[l >> 2] | 0);
                h2 = 4;
              } else {
                p2 = k2;
                e2 = (c[l >> 2] = k2, +g[l >> 2]);
              }
              e2 = +Dh(a2 + 116 | 0, A2, B2, C2, j2, n2, s2, u2, v2, x2, f2, m2, o2, e2);
              if (e2 > 0) {
                d2 = d2 + 1 | 0;
                b2 = q2;
                k2 = (g[l >> 2] = e2, c[l >> 2] | 0);
                h2 = 4;
              } else {
                k2 = p2;
                e2 = (c[l >> 2] = p2, +g[l >> 2]);
              }
              e2 = +Dh(a2 + 116 | 0, A2, B2, C2, t2, w2, y2, u2, v2, x2, f2, m2, o2, e2);
              if (e2 > 0) {
                d2 = d2 + 1 | 0;
                b2 = q2;
                k2 = (g[l >> 2] = e2, c[l >> 2] | 0);
                h2 = 4;
              }
              q2 = q2 + 1 | 0;
            } while ((q2 | 0) != (r2 | 0));
          }
          if (!d2) {
            I2 = 1;
            i = F2;
            return I2 | 0;
          }
          if (!((c[l >> 2] = k2, +g[l >> 2]) <= +g[D2 + 4 >> 2])) {
            I2 = 1;
            i = F2;
            return I2 | 0;
          }
          c[F2 + 32 >> 2] = 0;
          c[F2 + 32 + 4 >> 2] = b2;
          m2 = +g[a2 + 180 >> 2] - +g[a2 + 116 >> 2];
          n2 = +g[a2 + 184 >> 2] - +g[a2 + 120 >> 2];
          o2 = +g[a2 + 188 >> 2] - +g[a2 + 124 >> 2];
          e2 = 1 / +G(+(m2 * m2 + n2 * n2 + o2 * o2));
          if ((h2 | 0) == 3) {
            d2 = c[E2 + 788 + 12 >> 2] | 0;
            e2 = +g[d2 + (b2 * 44 | 0) + 20 >> 2];
            j2 = +g[d2 + (b2 * 44 | 0) + 24 >> 2];
            f2 = +g[d2 + (b2 * 44 | 0) + 28 >> 2];
            if (m2 * e2 + n2 * j2 + o2 * f2 > 0) {
              m2 = -e2;
              j2 = -j2;
              f2 = -f2;
              e2 = 0;
            } else {
              m2 = e2;
              e2 = +g[d2 + (b2 * 44 | 0) + 32 >> 2];
            }
          } else {
            m2 = -(m2 * e2);
            j2 = -(n2 * e2);
            f2 = -(o2 * e2);
            e2 = 0;
          }
          c[F2 >> 2] = E2;
          c[F2 + 4 >> 2] = F2 + 32;
          g[F2 + 8 >> 2] = m2;
          g[F2 + 12 >> 2] = j2;
          g[F2 + 16 >> 2] = f2;
          g[F2 + 20 >> 2] = e2;
          c[F2 + 24 >> 2] = k2;
          +Kb[c[(c[D2 >> 2] | 0) + 12 >> 2] & 15](D2, F2, 1);
          I2 = 1;
          i = F2;
          return I2 | 0;
        }
        function xd(d2, e2, f2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          t2 = i;
          i = i + 32 | 0;
          g2 = ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 127](d2) | 0;
          c[e2 + 20 >> 2] = g2;
          c[e2 >> 2] = 0;
          if (!g2) {
            s2 = d2 + 4 | 0;
            f2 = e2 + 4 | 0;
            s2 = c[s2 >> 2] | 0;
            c[f2 >> 2] = s2;
            f2 = d2 + 8 | 0;
            f2 = c[f2 >> 2] | 0;
            s2 = e2 + 8 | 0;
            c[s2 >> 2] = f2;
            s2 = d2 + 12 | 0;
            s2 = c[s2 >> 2] | 0;
            f2 = e2 + 12 | 0;
            c[f2 >> 2] = s2;
            d2 = d2 + 16 | 0;
            d2 = c[d2 >> 2] | 0;
            f2 = e2 + 16 | 0;
            c[f2 >> 2] = d2;
            i = t2;
            return 18870;
          }
          s2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 32, g2) | 0;
          g2 = c[s2 + 8 >> 2] | 0;
          c[e2 >> 2] = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, g2) | 0;
          r2 = ob[c[(c[d2 >> 2] | 0) + 28 >> 2] & 127](d2) | 0;
          a:
            do
              if ((r2 | 0) > 0) {
                q2 = 0;
                while (1) {
                  Ib[c[(c[d2 >> 2] | 0) + 16 >> 2] & 3](d2, t2 + 28 | 0, t2 + 4 | 0, t2 + 16 | 0, t2 + 8 | 0, t2 + 24 | 0, t2 + 20 | 0, t2, t2 + 12 | 0, q2);
                  j2 = c[t2 >> 2] | 0;
                  c[g2 + 24 >> 2] = j2;
                  c[g2 + 28 >> 2] = c[t2 + 4 >> 2];
                  k2 = g2 + 12 | 0;
                  m2 = g2 + 16 | 0;
                  p2 = g2 + 4 | 0;
                  c[g2 >> 2] = 0;
                  c[g2 + 4 >> 2] = 0;
                  c[g2 + 8 >> 2] = 0;
                  c[g2 + 12 >> 2] = 0;
                  c[g2 + 16 >> 2] = 0;
                  c[g2 + 20 >> 2] = 0;
                  switch (c[t2 + 12 >> 2] | 0) {
                    case 2: {
                      if (j2 | 0) {
                        k2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 4, j2 * 3 | 0) | 0;
                        l2 = c[k2 + 8 >> 2] | 0;
                        c[g2 + 8 >> 2] = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, l2) | 0;
                        if ((c[t2 >> 2] | 0) > 0) {
                          m2 = c[t2 + 24 >> 2] | 0;
                          j2 = 0;
                          do {
                            n2 = m2 + (S(c[t2 + 20 >> 2] | 0, j2) | 0) | 0;
                            o2 = j2 * 3 | 0;
                            c[l2 + (o2 << 2) >> 2] = c[n2 >> 2];
                            c[l2 + (o2 + 1 << 2) >> 2] = c[n2 + 4 >> 2];
                            c[l2 + (o2 + 2 << 2) >> 2] = c[n2 + 8 >> 2];
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) < (c[t2 >> 2] | 0));
                        }
                        ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 18751, 1497453121, c[k2 + 8 >> 2] | 0);
                      }
                      break;
                    }
                    case 3: {
                      if (j2 | 0) {
                        n2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 8, j2) | 0;
                        o2 = c[n2 + 8 >> 2] | 0;
                        c[k2 >> 2] = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, o2) | 0;
                        k2 = c[t2 >> 2] | 0;
                        if ((k2 | 0) > 0) {
                          l2 = c[t2 + 24 >> 2] | 0;
                          m2 = c[t2 + 20 >> 2] | 0;
                          j2 = 0;
                          do {
                            u2 = l2 + (S(m2, j2) | 0) | 0;
                            b[o2 + (j2 << 3) >> 1] = b[u2 >> 1] | 0;
                            b[o2 + (j2 << 3) + 2 >> 1] = b[u2 + 2 >> 1] | 0;
                            b[o2 + (j2 << 3) + 4 >> 1] = b[u2 + 4 >> 1] | 0;
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) != (k2 | 0));
                        }
                        ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, n2, 18766, 1497453121, c[n2 + 8 >> 2] | 0);
                      }
                      break;
                    }
                    case 5: {
                      if (j2 | 0) {
                        k2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 4, j2) | 0;
                        l2 = c[k2 + 8 >> 2] | 0;
                        c[m2 >> 2] = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, l2) | 0;
                        if ((c[t2 >> 2] | 0) > 0) {
                          j2 = 0;
                          do {
                            u2 = (c[t2 + 24 >> 2] | 0) + (S(c[t2 + 20 >> 2] | 0, j2) | 0) | 0;
                            a[l2 + (j2 << 2) >> 0] = a[u2 >> 0] | 0;
                            a[l2 + (j2 << 2) + 1 >> 0] = a[u2 + 1 >> 0] | 0;
                            a[l2 + (j2 << 2) + 2 >> 0] = a[u2 + 2 >> 0] | 0;
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) < (c[t2 >> 2] | 0));
                        }
                        ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 18793, 1497453121, c[k2 + 8 >> 2] | 0);
                      }
                      break;
                    }
                    default: {
                    }
                  }
                  switch (c[t2 + 16 >> 2] | 0) {
                    case 0: {
                      j2 = c[t2 + 4 >> 2] | 0;
                      if (j2 | 0) {
                        k2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 16, j2) | 0;
                        l2 = c[k2 + 8 >> 2] | 0;
                        c[g2 >> 2] = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, l2) | 0;
                        m2 = c[t2 + 4 >> 2] | 0;
                        if ((m2 | 0) > 0) {
                          n2 = c[t2 + 28 >> 2] | 0;
                          o2 = c[t2 + 8 >> 2] | 0;
                          j2 = 0;
                          do {
                            u2 = n2 + (S(o2, j2) | 0) | 0;
                            c[l2 + (j2 << 4) >> 2] = c[u2 >> 2];
                            c[l2 + (j2 << 4) + 4 >> 2] = c[u2 + 4 >> 2];
                            c[l2 + (j2 << 4) + 8 >> 2] = c[u2 + 8 >> 2];
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) != (m2 | 0));
                        }
                        ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 18816, 1497453121, c[k2 + 8 >> 2] | 0);
                      }
                      break;
                    }
                    case 1: {
                      j2 = c[t2 + 4 >> 2] | 0;
                      if (j2 | 0) {
                        n2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 32, j2) | 0;
                        o2 = c[n2 + 8 >> 2] | 0;
                        c[p2 >> 2] = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, o2) | 0;
                        k2 = c[t2 + 4 >> 2] | 0;
                        if ((k2 | 0) > 0) {
                          l2 = c[t2 + 28 >> 2] | 0;
                          m2 = c[t2 + 8 >> 2] | 0;
                          j2 = 0;
                          do {
                            u2 = l2 + (S(m2, j2) | 0) | 0;
                            h[o2 + (j2 << 5) >> 3] = +h[u2 >> 3];
                            h[o2 + (j2 << 5) + 8 >> 3] = +h[u2 + 8 >> 3];
                            h[o2 + (j2 << 5) + 16 >> 3] = +h[u2 + 16 >> 3];
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) != (k2 | 0));
                        }
                        ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, n2, 18835, 1497453121, c[n2 + 8 >> 2] | 0);
                      }
                      break;
                    }
                    default: {
                    }
                  }
                  mb[c[(c[d2 >> 2] | 0) + 24 >> 2] & 127](d2, q2);
                  q2 = q2 + 1 | 0;
                  if ((q2 | 0) == (r2 | 0)) {
                    g2 = f2;
                    break a;
                  } else
                    g2 = g2 + 32 | 0;
                }
              } else
                g2 = f2;
            while (0);
          ib[c[(c[g2 >> 2] | 0) + 20 >> 2] & 31](f2, s2, 18855, 1497453121, c[s2 + 8 >> 2] | 0);
          u2 = d2 + 4 | 0;
          f2 = e2 + 4 | 0;
          u2 = c[u2 >> 2] | 0;
          c[f2 >> 2] = u2;
          f2 = d2 + 8 | 0;
          f2 = c[f2 >> 2] | 0;
          u2 = e2 + 8 | 0;
          c[u2 >> 2] = f2;
          u2 = d2 + 12 | 0;
          u2 = c[u2 >> 2] | 0;
          f2 = e2 + 12 | 0;
          c[f2 >> 2] = u2;
          f2 = d2 + 16 | 0;
          f2 = c[f2 >> 2] | 0;
          u2 = e2 + 16 | 0;
          c[u2 >> 2] = f2;
          i = t2;
          return 18870;
        }
        function yd(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
          c[a2 + 556 >> 2] = c[b2 >> 2];
          c[a2 + 556 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 556 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 556 + 12 >> 2] = c[b2 + 12 >> 2];
          s2 = +g[a2 + 568 >> 2];
          k2 = +g[5703];
          t2 = +g[a2 + 560 >> 2];
          h2 = +g[5705];
          q2 = +g[a2 + 564 >> 2];
          i2 = +g[5704];
          r2 = +g[a2 + 556 >> 2];
          j2 = (k2 * q2 + s2 * i2 - h2 * r2) * -q2 + (s2 * (s2 * k2 + t2 * h2 - q2 * i2) + (-(k2 * r2) - t2 * i2 - h2 * q2) * -r2) - (s2 * h2 + i2 * r2 - k2 * t2) * -t2;
          m2 = (s2 * h2 + i2 * r2 - k2 * t2) * -r2 + (s2 * (k2 * q2 + s2 * i2 - h2 * r2) + (-(k2 * r2) - t2 * i2 - h2 * q2) * -t2) - (s2 * k2 + t2 * h2 - q2 * i2) * -q2;
          d2 = (s2 * k2 + t2 * h2 - q2 * i2) * -t2 + ((-(k2 * r2) - t2 * i2 - h2 * q2) * -q2 + s2 * (s2 * h2 + i2 * r2 - k2 * t2)) - (k2 * q2 + s2 * i2 - h2 * r2) * -r2;
          do
            if (h2 * d2 + (i2 * m2 + k2 * j2) < -0.9999998807907104)
              if (+F(+h2) > 0.7071067690849304) {
                d2 = 1 / +G(+(h2 * h2 + i2 * i2));
                e2 = 0;
                h2 = -(h2 * d2);
                b2 = (g[l >> 2] = i2 * d2, c[l >> 2] | 0);
                d2 = 0;
                break;
              } else {
                h2 = 1 / +G(+(k2 * k2 + i2 * i2));
                e2 = (g[l >> 2] = -(i2 * h2), c[l >> 2] | 0);
                h2 = k2 * h2;
                b2 = 0;
                d2 = 0;
                break;
              }
            else {
              C2 = +G(+((h2 * d2 + (i2 * m2 + k2 * j2) + 1) * 2));
              e2 = (g[l >> 2] = (i2 * d2 - h2 * m2) * (1 / C2), c[l >> 2] | 0);
              h2 = (h2 * j2 - k2 * d2) * (1 / C2);
              b2 = (g[l >> 2] = (k2 * m2 - i2 * j2) * (1 / C2), c[l >> 2] | 0);
              d2 = C2 * 0.5;
            }
          while (0);
          j2 = (c[l >> 2] = e2, +g[l >> 2]);
          m2 = (c[l >> 2] = b2, +g[l >> 2]);
          w2 = 1 / +G(+(d2 * d2 + (j2 * j2 + h2 * h2 + m2 * m2)));
          o2 = (g[l >> 2] = j2 * w2, c[l >> 2] | 0);
          x2 = h2 * w2;
          v2 = (g[l >> 2] = m2 * w2, c[l >> 2] | 0);
          d2 = d2 * w2;
          u2 = (g[l >> 2] = d2, c[l >> 2] | 0);
          A2 = r2 * d2 + s2 * -(j2 * w2) + q2 * -x2 - t2 * -(m2 * w2);
          B2 = r2 * -(m2 * w2) + (s2 * -x2 + d2 * t2) - q2 * -(j2 * w2);
          C2 = s2 * -(m2 * w2) + d2 * q2 + t2 * -(j2 * w2) - r2 * -x2;
          q2 = d2 * s2 - r2 * -(j2 * w2) - t2 * -x2 - q2 * -(m2 * w2);
          r2 = 1 / +G(+(q2 * q2 + (C2 * C2 + (A2 * A2 + B2 * B2))));
          f2 = (g[l >> 2] = A2 * r2, c[l >> 2] | 0);
          b2 = (g[l >> 2] = r2 * B2, c[l >> 2] | 0);
          e2 = (g[l >> 2] = r2 * C2, c[l >> 2] | 0);
          h2 = +g[a2 + 444 >> 2];
          n2 = (g[l >> 2] = h2, c[l >> 2] | 0);
          if (h2 >= 0.05000000074505806 ? (z2 = +g[a2 + 448 >> 2], z2 >= 0.05000000074505806) : 0) {
            d2 = d2 < -1 ? -1 : d2;
            d2 = +L(+(d2 > 1 ? 1 : d2)) * 2;
            if (d2 > 11920928955078125e-23) {
              i2 = 1 / +G(+(m2 * w2 * m2 * w2 + (j2 * w2 * j2 * w2 + x2 * x2)));
              if (+F(+(x2 * i2)) > 11920928955078125e-23) {
                k2 = +G(+((m2 * w2 * i2 * m2 * w2 * i2 / (x2 * i2 * x2 * i2) + 1) / (1 / (z2 * z2) + m2 * w2 * i2 * m2 * w2 * i2 / (x2 * i2 * x2 * i2) / (h2 * h2))));
                j2 = j2 * w2 * i2;
                n2 = (g[l >> 2] = k2, c[l >> 2] | 0);
                k2 = x2 * i2;
                i2 = m2 * w2 * i2;
              } else {
                j2 = j2 * w2 * i2;
                k2 = x2 * i2;
                i2 = m2 * w2 * i2;
              }
            } else {
              j2 = 0;
              n2 = 0;
              k2 = 0;
              i2 = 0;
            }
            if (+F(+d2) > 11920928955078125e-23) {
              h2 = (c[l >> 2] = n2, +g[l >> 2]);
              if (!(d2 > h2)) {
                if (d2 < -h2)
                  d2 = -h2;
              } else
                d2 = h2;
              z2 = d2 * 0.5;
              m2 = +J(+z2) / +G(+(j2 * j2 + k2 * k2 + i2 * i2));
              z2 = +I(+z2);
              y2 = (g[l >> 2] = j2 * m2, c[l >> 2] | 0);
              v2 = (g[l >> 2] = i2 * m2, c[l >> 2] | 0);
              m2 = k2 * m2;
              u2 = (g[l >> 2] = z2, c[l >> 2] | 0);
            } else {
              y2 = o2;
              m2 = x2;
            }
          } else {
            y2 = o2;
            m2 = x2;
          }
          k2 = +g[a2 + 452 >> 2];
          if (k2 >= 0.05000000074505806) {
            d2 = r2 * q2 < -1 ? -1 : r2 * q2;
            d2 = +L(+(d2 > 1 ? 1 : d2)) * 2;
            if (d2 > 3.1415927410125732) {
              p2 = (g[l >> 2] = -(A2 * r2), c[l >> 2] | 0);
              o2 = (g[l >> 2] = -(r2 * B2), c[l >> 2] | 0);
              d2 = -(r2 * q2) < -1 ? -1 : -(r2 * q2);
              d2 = +L(+(d2 > 1 ? 1 : d2)) * 2;
              n2 = (g[l >> 2] = -(r2 * C2), c[l >> 2] | 0);
            } else {
              p2 = f2;
              o2 = b2;
              n2 = e2;
            }
            h2 = (c[l >> 2] = p2, +g[l >> 2]);
            i2 = (c[l >> 2] = o2, +g[l >> 2]);
            j2 = (c[l >> 2] = n2, +g[l >> 2]);
            if (d2 > 11920928955078125e-23) {
              C2 = 1 / +G(+(h2 * h2 + i2 * i2 + j2 * j2));
              p2 = (g[l >> 2] = h2 * C2, c[l >> 2] | 0);
              o2 = (g[l >> 2] = i2 * C2, c[l >> 2] | 0);
              n2 = (g[l >> 2] = j2 * C2, c[l >> 2] | 0);
            }
            if (+F(+d2) > 11920928955078125e-23) {
              if (!(d2 > k2)) {
                if (d2 < -k2)
                  d2 = -k2;
              } else
                d2 = k2;
              z2 = (c[l >> 2] = p2, +g[l >> 2]);
              A2 = (c[l >> 2] = o2, +g[l >> 2]);
              B2 = (c[l >> 2] = n2, +g[l >> 2]);
              d2 = d2 * 0.5;
              C2 = +J(+d2) / +G(+(B2 * B2 + (A2 * A2 + z2 * z2)));
              d2 = +I(+d2);
              f2 = (g[l >> 2] = z2 * C2, c[l >> 2] | 0);
              b2 = (g[l >> 2] = A2 * C2, c[l >> 2] | 0);
              e2 = (g[l >> 2] = B2 * C2, c[l >> 2] | 0);
            } else
              d2 = r2 * q2;
          } else
            d2 = r2 * q2;
          w2 = (c[l >> 2] = u2, +g[l >> 2]);
          z2 = (c[l >> 2] = f2, +g[l >> 2]);
          x2 = (c[l >> 2] = y2, +g[l >> 2]);
          C2 = (c[l >> 2] = e2, +g[l >> 2]);
          B2 = (c[l >> 2] = v2, +g[l >> 2]);
          A2 = (c[l >> 2] = b2, +g[l >> 2]);
          g[a2 + 556 >> 2] = m2 * C2 + (w2 * z2 + x2 * d2) - B2 * A2;
          g[a2 + 560 >> 2] = B2 * z2 + (w2 * A2 + m2 * d2) - x2 * C2;
          g[a2 + 564 >> 2] = x2 * A2 + (w2 * C2 + B2 * d2) - m2 * z2;
          g[a2 + 568 >> 2] = w2 * d2 - x2 * z2 - m2 * A2 - B2 * C2;
          return;
        }
        function zd(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          o2 = c[a2 + 192 >> 2] | 0;
          n2 = +Cb[c[(c[o2 >> 2] | 0) + 48 >> 2] & 15](o2);
          o2 = c[a2 + 752 >> 2] | 0;
          if ((o2 | 0) > 0) {
            i2 = 0;
            do {
              m2 = c[a2 + 760 >> 2] | 0;
              f2 = m2 + (i2 * 104 | 0) + 8 | 0;
              q2 = +g[f2 >> 2];
              h2 = m2 + (i2 * 104 | 0) + 12 | 0;
              p2 = +g[h2 >> 2];
              d2 = m2 + (i2 * 104 | 0) + 16 | 0;
              l2 = +g[d2 >> 2];
              j2 = q2 * +g[b2 >> 2] + p2 * +g[b2 + 4 >> 2] + l2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
              k2 = q2 * +g[b2 + 16 >> 2] + p2 * +g[b2 + 20 >> 2] + l2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
              l2 = q2 * +g[b2 + 32 >> 2] + p2 * +g[b2 + 36 >> 2] + l2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
              g[f2 >> 2] = j2;
              g[h2 >> 2] = k2;
              g[d2 >> 2] = l2;
              g[m2 + (i2 * 104 | 0) + 20 >> 2] = 0;
              d2 = m2 + (i2 * 104 | 0) + 24 | 0;
              p2 = +g[d2 >> 2];
              h2 = m2 + (i2 * 104 | 0) + 28 | 0;
              q2 = +g[h2 >> 2];
              f2 = m2 + (i2 * 104 | 0) + 32 | 0;
              r2 = +g[f2 >> 2];
              s2 = p2 * +g[b2 + 16 >> 2] + q2 * +g[b2 + 20 >> 2] + r2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
              t2 = p2 * +g[b2 + 32 >> 2] + q2 * +g[b2 + 36 >> 2] + r2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
              g[d2 >> 2] = p2 * +g[b2 >> 2] + q2 * +g[b2 + 4 >> 2] + r2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
              g[h2 >> 2] = s2;
              g[f2 >> 2] = t2;
              g[m2 + (i2 * 104 | 0) + 36 >> 2] = 0;
              f2 = m2 + (i2 * 104 | 0) + 72 | 0;
              t2 = +g[f2 >> 2];
              h2 = m2 + (i2 * 104 | 0) + 76 | 0;
              s2 = +g[h2 >> 2];
              d2 = m2 + (i2 * 104 | 0) + 80 | 0;
              r2 = +g[d2 >> 2];
              q2 = t2 * +g[b2 + 16 >> 2] + s2 * +g[b2 + 20 >> 2] + r2 * +g[b2 + 24 >> 2];
              p2 = t2 * +g[b2 + 32 >> 2] + s2 * +g[b2 + 36 >> 2] + r2 * +g[b2 + 40 >> 2];
              g[f2 >> 2] = +g[b2 >> 2] * t2 + +g[b2 + 4 >> 2] * s2 + +g[b2 + 8 >> 2] * r2;
              g[h2 >> 2] = q2;
              g[d2 >> 2] = p2;
              g[m2 + (i2 * 104 | 0) + 84 >> 2] = 0;
              m2 = c[m2 + (i2 * 104 | 0) + 96 >> 2] | 0;
              d2 = Wg(a2 + 968 | 0, m2) | 0;
              a:
                do
                  if (d2) {
                    h2 = c[a2 + 976 >> 2] | 0;
                    if ((h2 | 0) <= -1) {
                      d2 = c[a2 + 968 >> 2] | 0;
                      break;
                    }
                    if (h2) {
                      e2 = 0;
                      while (1) {
                        f2 = c[d2 + 32 >> 2] | 0;
                        e2 = e2 + 1 | 0;
                        if (!f2)
                          break a;
                        if ((e2 | 0) >= (h2 | 0)) {
                          d2 = f2;
                          break;
                        } else
                          d2 = f2;
                      }
                    }
                  } else
                    d2 = 0;
                while (0);
              g[m2 >> 2] = j2 - n2;
              g[m2 + 4 >> 2] = k2 - n2;
              g[m2 + 8 >> 2] = l2 - n2;
              g[m2 + 12 >> 2] = 0;
              g[m2 + 16 >> 2] = n2 + j2;
              g[m2 + 20 >> 2] = n2 + k2;
              g[m2 + 24 >> 2] = n2 + l2;
              g[m2 + 28 >> 2] = 0;
              Ze(a2 + 968 | 0, d2, m2);
              i2 = i2 + 1 | 0;
            } while ((i2 | 0) != (o2 | 0));
          }
          rg(a2);
          d2 = c[a2 + 968 >> 2] | 0;
          if (d2) {
            o2 = c[a2 + 192 >> 2] | 0;
            r2 = +Cb[c[(c[o2 >> 2] | 0) + 48 >> 2] & 15](o2);
            t2 = +g[d2 + 4 >> 2] - r2;
            s2 = +g[d2 + 8 >> 2] - r2;
            g[a2 + 932 >> 2] = +g[d2 >> 2] - r2;
            g[a2 + 936 >> 2] = t2;
            g[a2 + 940 >> 2] = s2;
            g[a2 + 944 >> 2] = 0;
            s2 = r2 + +g[d2 + 20 >> 2];
            t2 = r2 + +g[d2 + 24 >> 2];
            g[a2 + 948 >> 2] = r2 + +g[d2 + 16 >> 2];
            g[a2 + 952 >> 2] = s2;
            g[a2 + 956 >> 2] = t2;
            g[a2 + 960 >> 2] = 0;
            d2 = c[a2 + 188 >> 2] | 0;
            if (d2 | 0) {
              o2 = c[a2 + 724 >> 2] | 0;
              m2 = c[o2 + 32 >> 2] | 0;
              ib[c[(c[m2 >> 2] | 0) + 16 >> 2] & 31](m2, d2, a2 + 932 | 0, a2 + 948 | 0, c[o2 + 36 >> 2] | 0);
            }
          } else {
            c[a2 + 932 >> 2] = 0;
            c[a2 + 932 + 4 >> 2] = 0;
            c[a2 + 932 + 8 >> 2] = 0;
            c[a2 + 932 + 12 >> 2] = 0;
            c[a2 + 932 + 16 >> 2] = 0;
            c[a2 + 932 + 20 >> 2] = 0;
            c[a2 + 932 + 24 >> 2] = 0;
            c[a2 + 932 + 28 >> 2] = 0;
          }
          e2 = c[a2 + 772 >> 2] | 0;
          if ((e2 | 0) <= 0) {
            Vf(a2);
            o2 = a2 + 1188 | 0;
            c[o2 >> 2] = c[b2 >> 2];
            c[o2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[o2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[o2 + 12 >> 2] = c[b2 + 12 >> 2];
            o2 = a2 + 1204 | 0;
            m2 = b2 + 16 | 0;
            c[o2 >> 2] = c[m2 >> 2];
            c[o2 + 4 >> 2] = c[m2 + 4 >> 2];
            c[o2 + 8 >> 2] = c[m2 + 8 >> 2];
            c[o2 + 12 >> 2] = c[m2 + 12 >> 2];
            o2 = a2 + 1220 | 0;
            m2 = b2 + 32 | 0;
            c[o2 >> 2] = c[m2 >> 2];
            c[o2 + 4 >> 2] = c[m2 + 4 >> 2];
            c[o2 + 8 >> 2] = c[m2 + 8 >> 2];
            c[o2 + 12 >> 2] = c[m2 + 12 >> 2];
            a2 = a2 + 1236 | 0;
            b2 = b2 + 48 | 0;
            c[a2 >> 2] = c[b2 >> 2];
            c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[b2 + 12 >> 2];
            return;
          }
          f2 = c[a2 + 780 >> 2] | 0;
          d2 = 0;
          do {
            m2 = c[f2 + (d2 * 52 | 0) + 8 >> 2] | 0;
            o2 = c[f2 + (d2 * 52 | 0) + 12 >> 2] | 0;
            r2 = +g[m2 + 8 >> 2] - +g[o2 + 8 >> 2];
            s2 = +g[m2 + 12 >> 2] - +g[o2 + 12 >> 2];
            t2 = +g[m2 + 16 >> 2] - +g[o2 + 16 >> 2];
            t2 = +G(+(r2 * r2 + s2 * s2 + t2 * t2));
            g[f2 + (d2 * 52 | 0) + 16 >> 2] = t2;
            g[f2 + (d2 * 52 | 0) + 28 >> 2] = t2 * t2;
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != (e2 | 0));
          d2 = 0;
          do {
            g[f2 + (d2 * 52 | 0) + 24 >> 2] = (+g[(c[f2 + (d2 * 52 | 0) + 8 >> 2] | 0) + 88 >> 2] + +g[(c[f2 + (d2 * 52 | 0) + 12 >> 2] | 0) + 88 >> 2]) / +g[(c[f2 + (d2 * 52 | 0) + 4 >> 2] | 0) + 4 >> 2];
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != (e2 | 0));
          Vf(a2);
          o2 = a2 + 1188 | 0;
          c[o2 >> 2] = c[b2 >> 2];
          c[o2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[o2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[o2 + 12 >> 2] = c[b2 + 12 >> 2];
          o2 = a2 + 1204 | 0;
          m2 = b2 + 16 | 0;
          c[o2 >> 2] = c[m2 >> 2];
          c[o2 + 4 >> 2] = c[m2 + 4 >> 2];
          c[o2 + 8 >> 2] = c[m2 + 8 >> 2];
          c[o2 + 12 >> 2] = c[m2 + 12 >> 2];
          o2 = a2 + 1220 | 0;
          m2 = b2 + 32 | 0;
          c[o2 >> 2] = c[m2 >> 2];
          c[o2 + 4 >> 2] = c[m2 + 4 >> 2];
          c[o2 + 8 >> 2] = c[m2 + 8 >> 2];
          c[o2 + 12 >> 2] = c[m2 + 12 >> 2];
          a2 = a2 + 1236 | 0;
          b2 = b2 + 48 | 0;
          c[a2 >> 2] = c[b2 >> 2];
          c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Ad(b2, d2, e2, f2, h2, i2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = +i2;
          var j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
          B2 = c[b2 + 88 >> 2] | 0;
          if ((B2 | 0) == (c[b2 + 92 >> 2] | 0) ? (o2 = B2 | 0 ? B2 << 1 : 1, (B2 | 0) < (o2 | 0)) : 0) {
            if (!o2) {
              j2 = 0;
              n2 = B2;
            } else {
              c[6324] = (c[6324] | 0) + 1;
              j2 = ic((o2 * 152 | 3) + 16 | 0) | 0;
              if (!j2)
                j2 = 0;
              else {
                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                j2 = j2 + 4 + 15 & -16;
              }
              n2 = c[b2 + 88 >> 2] | 0;
            }
            if ((n2 | 0) > 0) {
              k2 = 0;
              do {
                Lm(j2 + (k2 * 152 | 0) | 0, (c[b2 + 96 >> 2] | 0) + (k2 * 152 | 0) | 0, 152) | 0;
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) != (n2 | 0));
            }
            k2 = c[b2 + 96 >> 2] | 0;
            if (k2 | 0) {
              if (a[b2 + 100 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[k2 + -4 >> 2] | 0);
              }
              c[b2 + 96 >> 2] = 0;
            }
            a[b2 + 100 >> 0] = 1;
            c[b2 + 96 >> 2] = j2;
            c[b2 + 92 >> 2] = o2;
            j2 = c[b2 + 88 >> 2] | 0;
          } else
            j2 = B2;
          c[b2 + 88 >> 2] = j2 + 1;
          A2 = c[b2 + 96 >> 2] | 0;
          c[A2 + (B2 * 152 | 0) + 140 >> 2] = h2;
          c[A2 + (B2 * 152 | 0) + 16 >> 2] = 0;
          c[A2 + (B2 * 152 | 0) + 16 + 4 >> 2] = 0;
          c[A2 + (B2 * 152 | 0) + 16 + 8 >> 2] = 0;
          c[A2 + (B2 * 152 | 0) + 16 + 12 >> 2] = 0;
          g[A2 + (B2 * 152 | 0) + 48 >> 2] = -0;
          g[A2 + (B2 * 152 | 0) + 52 >> 2] = -0;
          g[A2 + (B2 * 152 | 0) + 56 >> 2] = -0;
          g[A2 + (B2 * 152 | 0) + 60 >> 2] = 0;
          b2 = c[b2 + 16 >> 2] | 0;
          o2 = c[b2 + (e2 * 244 | 0) + 240 >> 2] | 0;
          h2 = c[b2 + (f2 * 244 | 0) + 240 >> 2] | 0;
          c[A2 + (B2 * 152 | 0) + 144 >> 2] = e2;
          c[A2 + (B2 * 152 | 0) + 148 >> 2] = f2;
          g[A2 + (B2 * 152 | 0) + 104 >> 2] = i2;
          c[A2 + (B2 * 152 | 0) + 132 >> 2] = 0;
          g[A2 + (B2 * 152 | 0) + 100 >> 2] = 0;
          g[A2 + (B2 * 152 | 0) + 96 >> 2] = 0;
          x2 = -+g[d2 >> 2];
          y2 = -+g[d2 + 4 >> 2];
          z2 = -+g[d2 + 8 >> 2];
          g[A2 + (B2 * 152 | 0) >> 2] = x2;
          g[A2 + (B2 * 152 | 0) + 4 >> 2] = y2;
          g[A2 + (B2 * 152 | 0) + 8 >> 2] = z2;
          g[A2 + (B2 * 152 | 0) + 12 >> 2] = 0;
          if (o2 | 0) {
            j2 = (g[l >> 2] = (+g[o2 + 304 >> 2] * x2 + +g[o2 + 308 >> 2] * y2 + +g[o2 + 312 >> 2] * z2) * +g[o2 + 584 >> 2], c[l >> 2] | 0);
            k2 = (g[l >> 2] = (+g[o2 + 320 >> 2] * x2 + +g[o2 + 324 >> 2] * y2 + +g[o2 + 328 >> 2] * z2) * +g[o2 + 588 >> 2], c[l >> 2] | 0);
            n2 = (g[l >> 2] = (+g[o2 + 336 >> 2] * x2 + +g[o2 + 340 >> 2] * y2 + +g[o2 + 344 >> 2] * z2) * +g[o2 + 592 >> 2], c[l >> 2] | 0);
          } else {
            j2 = 0;
            k2 = 0;
            n2 = 0;
          }
          c[A2 + (B2 * 152 | 0) + 64 >> 2] = j2;
          c[A2 + (B2 * 152 | 0) + 68 >> 2] = k2;
          c[A2 + (B2 * 152 | 0) + 72 >> 2] = n2;
          g[A2 + (B2 * 152 | 0) + 76 >> 2] = 0;
          u2 = +g[d2 >> 2];
          v2 = +g[d2 + 4 >> 2];
          w2 = +g[d2 + 8 >> 2];
          d2 = c[d2 + 12 >> 2] | 0;
          g[A2 + (B2 * 152 | 0) + 32 >> 2] = u2;
          g[A2 + (B2 * 152 | 0) + 36 >> 2] = v2;
          g[A2 + (B2 * 152 | 0) + 40 >> 2] = w2;
          c[A2 + (B2 * 152 | 0) + 44 >> 2] = d2;
          if (h2 | 0) {
            j2 = (g[l >> 2] = (u2 * +g[h2 + 304 >> 2] + v2 * +g[h2 + 308 >> 2] + w2 * +g[h2 + 312 >> 2]) * +g[h2 + 584 >> 2], c[l >> 2] | 0);
            k2 = (g[l >> 2] = (u2 * +g[h2 + 320 >> 2] + v2 * +g[h2 + 324 >> 2] + w2 * +g[h2 + 328 >> 2]) * +g[h2 + 588 >> 2], c[l >> 2] | 0);
            n2 = (g[l >> 2] = (u2 * +g[h2 + 336 >> 2] + v2 * +g[h2 + 340 >> 2] + w2 * +g[h2 + 344 >> 2]) * +g[h2 + 592 >> 2], c[l >> 2] | 0);
          } else {
            j2 = 0;
            k2 = 0;
            n2 = 0;
          }
          c[A2 + (B2 * 152 | 0) + 80 >> 2] = j2;
          c[A2 + (B2 * 152 | 0) + 84 >> 2] = k2;
          c[A2 + (B2 * 152 | 0) + 88 >> 2] = n2;
          g[A2 + (B2 * 152 | 0) + 92 >> 2] = 0;
          if (o2 | 0) {
            p2 = +g[o2 + 304 >> 2] * x2 + +g[o2 + 308 >> 2] * y2 + +g[o2 + 312 >> 2] * z2;
            r2 = +g[o2 + 320 >> 2] * x2 + +g[o2 + 324 >> 2] * y2 + +g[o2 + 328 >> 2] * z2;
            t2 = +g[o2 + 336 >> 2] * x2 + +g[o2 + 340 >> 2] * y2 + +g[o2 + 344 >> 2] * z2;
          } else {
            p2 = 0;
            r2 = 0;
            t2 = 0;
          }
          if (h2 | 0) {
            m2 = +g[h2 + 304 >> 2] * u2 + +g[h2 + 308 >> 2] * v2 + +g[h2 + 312 >> 2] * w2;
            q2 = u2 * +g[h2 + 320 >> 2] + v2 * +g[h2 + 324 >> 2] + w2 * +g[h2 + 328 >> 2];
            s2 = u2 * +g[h2 + 336 >> 2] + v2 * +g[h2 + 340 >> 2] + w2 * +g[h2 + 344 >> 2];
          } else {
            m2 = 0;
            q2 = 0;
            s2 = 0;
          }
          s2 = 1 / (p2 * x2 + r2 * y2 + t2 * z2 + 0 + (m2 * u2 + q2 * v2 + s2 * w2));
          g[A2 + (B2 * 152 | 0) + 108 >> 2] = s2;
          if (o2 | 0) {
            p2 = +g[b2 + (e2 * 244 | 0) + 192 >> 2];
            q2 = +g[b2 + (e2 * 244 | 0) + 196 >> 2];
            r2 = +g[b2 + (e2 * 244 | 0) + 200 >> 2];
            m2 = (+g[b2 + (e2 * 244 | 0) + 176 >> 2] + +g[b2 + (e2 * 244 | 0) + 208 >> 2]) * 0 + (+g[b2 + (e2 * 244 | 0) + 180 >> 2] + +g[b2 + (e2 * 244 | 0) + 212 >> 2]) * 0 + (+g[b2 + (e2 * 244 | 0) + 184 >> 2] + +g[b2 + (e2 * 244 | 0) + 216 >> 2]) * 0;
          } else {
            p2 = 0;
            q2 = 0;
            r2 = 0;
            m2 = 0;
          }
          m2 = m2 + (p2 * x2 + q2 * y2 + r2 * z2);
          if (!h2) {
            t2 = 0;
            x2 = 0;
            z2 = 0;
            y2 = -0;
            u2 = t2 * u2;
            x2 = x2 * v2;
            x2 = u2 + x2;
            z2 = z2 * w2;
            z2 = x2 + z2;
            z2 = y2 + z2;
            z2 = m2 + z2;
            z2 = 0 - z2;
            z2 = s2 * z2;
            f2 = A2 + (B2 * 152 | 0) + 112 | 0;
            g[f2 >> 2] = z2;
            f2 = A2 + (B2 * 152 | 0) + 116 | 0;
            g[f2 >> 2] = 0;
            z2 = -i2;
            f2 = A2 + (B2 * 152 | 0) + 120 | 0;
            g[f2 >> 2] = z2;
            B2 = A2 + (B2 * 152 | 0) + 124 | 0;
            g[B2 >> 2] = i2;
            return;
          }
          t2 = +g[b2 + (f2 * 244 | 0) + 192 >> 2];
          x2 = +g[b2 + (f2 * 244 | 0) + 196 >> 2];
          z2 = +g[b2 + (f2 * 244 | 0) + 200 >> 2];
          y2 = (+g[b2 + (f2 * 244 | 0) + 176 >> 2] + +g[b2 + (f2 * 244 | 0) + 208 >> 2]) * -0 + (+g[b2 + (f2 * 244 | 0) + 180 >> 2] + +g[b2 + (f2 * 244 | 0) + 212 >> 2]) * -0 + (+g[b2 + (f2 * 244 | 0) + 184 >> 2] + +g[b2 + (f2 * 244 | 0) + 216 >> 2]) * -0;
          u2 = t2 * u2;
          x2 = x2 * v2;
          x2 = u2 + x2;
          z2 = z2 * w2;
          z2 = x2 + z2;
          z2 = y2 + z2;
          z2 = m2 + z2;
          z2 = 0 - z2;
          z2 = s2 * z2;
          f2 = A2 + (B2 * 152 | 0) + 112 | 0;
          g[f2 >> 2] = z2;
          f2 = A2 + (B2 * 152 | 0) + 116 | 0;
          g[f2 >> 2] = 0;
          z2 = -i2;
          f2 = A2 + (B2 * 152 | 0) + 120 | 0;
          g[f2 >> 2] = z2;
          B2 = A2 + (B2 * 152 | 0) + 124 | 0;
          g[B2 >> 2] = i2;
          return;
        }
        function Bd(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          q2 = i;
          i = i + 192 | 0;
          if (!(ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0)) {
            i = q2;
            return;
          }
          j2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
          mb[c[(c[j2 >> 2] | 0) + 8 >> 2] & 127](q2 + 80 | 0, j2);
          j2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
          if (((ob[c[(c[j2 >> 2] | 0) + 56 >> 2] & 127](j2) | 0) & 8 | 0 ? (e2 = c[b2 + 24 >> 2] | 0, e2 | 0) : 0) ? (k2 = ob[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0, (k2 | 0) > 0) : 0) {
            f2 = 0;
            do {
              h2 = c[b2 + 24 >> 2] | 0;
              h2 = Jb[c[(c[h2 >> 2] | 0) + 40 >> 2] & 31](h2, f2) | 0;
              j2 = c[h2 + 780 >> 2] | 0;
              if ((j2 | 0) > 0) {
                e2 = 0;
                do {
                  r2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  lb[c[(c[r2 >> 2] | 0) + 40 >> 2] & 0](r2, h2 + 4 + (e2 * 192 | 0) + 32 | 0, h2 + 4 + (e2 * 192 | 0) + 64 | 0, +g[h2 + 4 + (e2 * 192 | 0) + 80 >> 2], c[h2 + 4 + (e2 * 192 | 0) + 156 >> 2] | 0, q2 + 80 + 96 | 0);
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != (j2 | 0));
              }
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (k2 | 0));
          }
          r2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
          if ((ob[c[(c[r2 >> 2] | 0) + 56 >> 2] & 127](r2) | 0) & 3 | 0 ? (c[b2 + 8 >> 2] | 0) > 0 : 0) {
            h2 = 0;
            do {
              f2 = c[(c[b2 + 16 >> 2] | 0) + (h2 << 2) >> 2] | 0;
              if (!(c[f2 + 204 >> 2] & 32)) {
                if (ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0 ? (r2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0, (ob[c[(c[r2 >> 2] | 0) + 56 >> 2] & 127](r2) | 0) & 1 | 0) : 0) {
                  c[q2 + 64 >> 2] = 1053609165;
                  c[q2 + 64 + 4 >> 2] = 1053609165;
                  c[q2 + 64 + 8 >> 2] = 1053609165;
                  g[q2 + 64 + 12 >> 2] = 0;
                  switch (c[f2 + 216 >> 2] | 0) {
                    case 1: {
                      c[q2 + 64 >> 2] = c[q2 + 80 >> 2];
                      c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 4 >> 2];
                      c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 8 >> 2];
                      c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 12 >> 2];
                      break;
                    }
                    case 2: {
                      c[q2 + 64 >> 2] = c[q2 + 80 + 16 >> 2];
                      c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 16 + 4 >> 2];
                      c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 16 + 8 >> 2];
                      c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 16 + 12 >> 2];
                      break;
                    }
                    case 3: {
                      c[q2 + 64 >> 2] = c[q2 + 80 + 32 >> 2];
                      c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 32 + 4 >> 2];
                      c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 32 + 8 >> 2];
                      c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 32 + 12 >> 2];
                      break;
                    }
                    case 4: {
                      c[q2 + 64 >> 2] = c[q2 + 80 + 48 >> 2];
                      c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 48 + 4 >> 2];
                      c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 48 + 8 >> 2];
                      c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 48 + 12 >> 2];
                      break;
                    }
                    case 5: {
                      c[q2 + 64 >> 2] = c[q2 + 80 + 64 >> 2];
                      c[q2 + 64 + 4 >> 2] = c[q2 + 80 + 64 + 4 >> 2];
                      c[q2 + 64 + 8 >> 2] = c[q2 + 80 + 64 + 8 >> 2];
                      c[q2 + 64 + 12 >> 2] = c[q2 + 80 + 64 + 12 >> 2];
                      break;
                    }
                    default: {
                      c[q2 + 64 >> 2] = 1050253722;
                      c[q2 + 64 + 4 >> 2] = 1050253722;
                      c[q2 + 64 + 8 >> 2] = 1050253722;
                      g[q2 + 64 + 12 >> 2] = 0;
                    }
                  }
                  Yb[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2, f2 + 4 | 0, c[f2 + 192 >> 2] | 0, q2 + 64 | 0);
                }
                e2 = c[b2 + 72 >> 2] | 0;
                if (e2 | 0 ? (ob[c[(c[e2 >> 2] | 0) + 56 >> 2] & 127](e2) | 0) & 2 | 0 : 0) {
                  c[q2 + 32 >> 2] = c[q2 + 80 + 80 >> 2];
                  c[q2 + 32 + 4 >> 2] = c[q2 + 80 + 80 + 4 >> 2];
                  c[q2 + 32 + 8 >> 2] = c[q2 + 80 + 80 + 8 >> 2];
                  c[q2 + 32 + 12 >> 2] = c[q2 + 80 + 80 + 12 >> 2];
                  r2 = c[f2 + 192 >> 2] | 0;
                  Yb[c[(c[r2 >> 2] | 0) + 8 >> 2] & 127](r2, f2 + 4 | 0, q2 + 64 | 0, q2 + 48 | 0);
                  g[q2 + 64 >> 2] = +g[q2 + 64 >> 2] + -0.019999999552965164;
                  g[q2 + 64 + 4 >> 2] = +g[q2 + 64 + 4 >> 2] + -0.019999999552965164;
                  g[q2 + 64 + 8 >> 2] = +g[q2 + 64 + 8 >> 2] + -0.019999999552965164;
                  g[q2 + 48 >> 2] = +g[q2 + 48 >> 2] + 0.019999999552965164;
                  g[q2 + 48 + 4 >> 2] = +g[q2 + 48 + 4 >> 2] + 0.019999999552965164;
                  g[q2 + 48 + 8 >> 2] = +g[q2 + 48 + 8 >> 2] + 0.019999999552965164;
                  do
                    if ((a[b2 + 44 >> 0] | 0 ? (c[f2 + 248 >> 2] | 0) == 2 : 0) ? (c[f2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                      r2 = c[f2 + 192 >> 2] | 0;
                      Yb[c[(c[r2 >> 2] | 0) + 8 >> 2] & 127](r2, f2 + 68 | 0, q2 + 16 | 0, q2);
                      d2 = +g[q2 + 16 >> 2] + -0.019999999552965164;
                      g[q2 + 16 >> 2] = d2;
                      l2 = +g[q2 + 16 + 4 >> 2] + -0.019999999552965164;
                      g[q2 + 16 + 4 >> 2] = l2;
                      m2 = +g[q2 + 16 + 8 >> 2] + -0.019999999552965164;
                      g[q2 + 16 + 8 >> 2] = m2;
                      n2 = +g[q2 >> 2] + 0.019999999552965164;
                      g[q2 >> 2] = n2;
                      o2 = +g[q2 + 4 >> 2] + 0.019999999552965164;
                      g[q2 + 4 >> 2] = o2;
                      p2 = +g[q2 + 8 >> 2] + 0.019999999552965164;
                      g[q2 + 8 >> 2] = p2;
                      if (d2 < +g[q2 + 64 >> 2])
                        g[q2 + 64 >> 2] = d2;
                      if (l2 < +g[q2 + 64 + 4 >> 2])
                        g[q2 + 64 + 4 >> 2] = l2;
                      if (m2 < +g[q2 + 64 + 8 >> 2])
                        g[q2 + 64 + 8 >> 2] = m2;
                      d2 = +g[q2 + 16 + 12 >> 2];
                      if (d2 < +g[q2 + 64 + 12 >> 2])
                        g[q2 + 64 + 12 >> 2] = d2;
                      if (+g[q2 + 48 >> 2] < n2)
                        g[q2 + 48 >> 2] = n2;
                      if (+g[q2 + 48 + 4 >> 2] < o2)
                        g[q2 + 48 + 4 >> 2] = o2;
                      if (+g[q2 + 48 + 8 >> 2] < p2)
                        g[q2 + 48 + 8 >> 2] = p2;
                      d2 = +g[q2 + 12 >> 2];
                      if (!(+g[q2 + 48 + 12 >> 2] < d2))
                        break;
                      g[q2 + 48 + 12 >> 2] = d2;
                    }
                  while (0);
                  r2 = c[b2 + 72 >> 2] | 0;
                  Yb[c[(c[r2 >> 2] | 0) + 60 >> 2] & 127](r2, q2 + 64 | 0, q2 + 48 | 0, q2 + 32 | 0);
                }
              }
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) < (c[b2 + 8 >> 2] | 0));
          }
          i = q2;
          return;
        }
        function Cd(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          if (a[b2 + 165 >> 0] | 0) {
            h2 = c[b2 + 88 >> 2] | 0;
            a:
              do
                if ((h2 | 0) > 0 & e2) {
                  f2 = c[b2 + 96 >> 2] | 0;
                  j2 = +g[d2 >> 2];
                  k2 = +g[d2 + 4 >> 2];
                  l2 = +g[d2 + 8 >> 2];
                  m2 = +g[b2 + 168 >> 2];
                  e2 = 0;
                  while (1) {
                    s2 = +g[f2 + (e2 << 4) >> 2] - j2;
                    r2 = +g[f2 + (e2 << 4) + 4 >> 2] - k2;
                    q2 = +g[f2 + (e2 << 4) + 8 >> 2] - l2;
                    if (s2 * s2 + r2 * r2 + q2 * q2 <= m2)
                      break;
                    e2 = e2 + 1 | 0;
                    if ((e2 | 0) >= (h2 | 0))
                      break a;
                  }
                  return e2 | 0;
                }
              while (0);
            p2 = (c[b2 + 32 >> 2] | 0) + 12 | 0;
            c[p2 >> 2] = (c[p2 >> 2] | 0) + 1;
            if ((h2 | 0) == (c[b2 + 92 >> 2] | 0) ? (i2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (i2 | 0)) : 0) {
              if (!i2)
                e2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((i2 << 4 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                h2 = c[b2 + 88 >> 2] | 0;
              }
              if ((h2 | 0) > 0) {
                f2 = 0;
                do {
                  p2 = e2 + (f2 << 4) | 0;
                  o2 = (c[b2 + 96 >> 2] | 0) + (f2 << 4) | 0;
                  c[p2 >> 2] = c[o2 >> 2];
                  c[p2 + 4 >> 2] = c[o2 + 4 >> 2];
                  c[p2 + 8 >> 2] = c[o2 + 8 >> 2];
                  c[p2 + 12 >> 2] = c[o2 + 12 >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (h2 | 0));
              }
              f2 = c[b2 + 96 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 100 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 96 >> 2] = 0;
              }
              a[b2 + 100 >> 0] = 1;
              c[b2 + 96 >> 2] = e2;
              c[b2 + 92 >> 2] = i2;
              e2 = c[b2 + 88 >> 2] | 0;
            } else
              e2 = h2;
            p2 = (c[b2 + 96 >> 2] | 0) + (e2 << 4) | 0;
            c[p2 >> 2] = c[d2 >> 2];
            c[p2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[p2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[p2 + 12 >> 2] = c[d2 + 12 >> 2];
            d2 = c[b2 + 88 >> 2] | 0;
            c[b2 + 88 >> 2] = d2 + 1;
            c[(c[b2 + 32 >> 2] | 0) + 16 >> 2] = c[b2 + 96 >> 2];
            return d2 | 0;
          }
          h2 = c[b2 + 108 >> 2] | 0;
          b:
            do
              if ((h2 | 0) > 0 & e2) {
                f2 = c[b2 + 116 >> 2] | 0;
                j2 = +g[d2 >> 2];
                k2 = +g[d2 + 4 >> 2];
                l2 = +g[d2 + 8 >> 2];
                m2 = +g[b2 + 168 >> 2];
                e2 = 0;
                while (1) {
                  q2 = +g[f2 + (e2 << 2) >> 2] - j2;
                  r2 = +g[f2 + (e2 + 1 << 2) >> 2] - k2;
                  s2 = +g[f2 + (e2 + 2 << 2) >> 2] - l2;
                  i2 = e2 + 3 | 0;
                  if (q2 * q2 + r2 * r2 + s2 * s2 <= m2)
                    break;
                  if ((i2 | 0) < (h2 | 0))
                    e2 = i2;
                  else
                    break b;
                }
                d2 = (e2 | 0) / 3 | 0;
                return d2 | 0;
              }
            while (0);
          e2 = c[b2 + 112 >> 2] | 0;
          if ((h2 | 0) == (e2 | 0)) {
            n2 = h2 | 0 ? h2 << 1 : 1;
            if ((h2 | 0) < (n2 | 0)) {
              if (!n2)
                e2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((n2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                h2 = c[b2 + 108 >> 2] | 0;
              }
              i2 = c[b2 + 116 >> 2] | 0;
              if ((h2 | 0) <= 0)
                if (!i2)
                  f2 = b2 + 120 | 0;
                else
                  p2 = 34;
              else {
                f2 = 0;
                do {
                  c[e2 + (f2 << 2) >> 2] = c[i2 + (f2 << 2) >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (h2 | 0));
                p2 = 34;
              }
              if ((p2 | 0) == 34) {
                if (a[b2 + 120 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[i2 + -4 >> 2] | 0);
                }
                c[b2 + 116 >> 2] = 0;
                f2 = b2 + 120 | 0;
              }
              a[f2 >> 0] = 1;
              c[b2 + 116 >> 2] = e2;
              c[b2 + 112 >> 2] = n2;
              f2 = c[b2 + 108 >> 2] | 0;
              i2 = n2;
            } else {
              f2 = h2;
              i2 = h2;
            }
          } else {
            f2 = h2;
            i2 = e2;
          }
          h2 = c[b2 + 116 >> 2] | 0;
          c[h2 + (f2 << 2) >> 2] = c[d2 >> 2];
          e2 = f2 + 1 | 0;
          c[b2 + 108 >> 2] = e2;
          if ((e2 | 0) == (i2 | 0)) {
            n2 = i2 | 0 ? i2 << 1 : 1;
            if ((i2 | 0) < (n2 | 0)) {
              if (!n2)
                e2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((n2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                i2 = c[b2 + 108 >> 2] | 0;
                h2 = c[b2 + 116 >> 2] | 0;
              }
              if ((i2 | 0) <= 0)
                if (!h2)
                  f2 = b2 + 120 | 0;
                else
                  p2 = 48;
              else {
                f2 = 0;
                do {
                  c[e2 + (f2 << 2) >> 2] = c[h2 + (f2 << 2) >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (i2 | 0));
                p2 = 48;
              }
              if ((p2 | 0) == 48) {
                if (a[b2 + 120 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[h2 + -4 >> 2] | 0);
                }
                c[b2 + 116 >> 2] = 0;
                f2 = b2 + 120 | 0;
              }
              a[f2 >> 0] = 1;
              c[b2 + 116 >> 2] = e2;
              c[b2 + 112 >> 2] = n2;
              o2 = e2;
              f2 = c[b2 + 108 >> 2] | 0;
              i2 = n2;
            } else {
              o2 = h2;
              f2 = i2;
              e2 = h2;
            }
          } else {
            o2 = h2;
            f2 = e2;
            e2 = h2;
          }
          c[o2 + (f2 << 2) >> 2] = c[d2 + 4 >> 2];
          f2 = f2 + 1 | 0;
          c[b2 + 108 >> 2] = f2;
          if ((f2 | 0) == (i2 | 0)) {
            n2 = i2 | 0 ? i2 << 1 : 1;
            if ((i2 | 0) < (n2 | 0)) {
              if (!n2) {
                e2 = 0;
                h2 = o2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((n2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                i2 = c[b2 + 108 >> 2] | 0;
                h2 = c[b2 + 116 >> 2] | 0;
              }
              if ((i2 | 0) <= 0)
                if (!h2)
                  f2 = b2 + 120 | 0;
                else
                  p2 = 62;
              else {
                f2 = 0;
                do {
                  c[e2 + (f2 << 2) >> 2] = c[h2 + (f2 << 2) >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (i2 | 0));
                p2 = 62;
              }
              if ((p2 | 0) == 62) {
                if (a[b2 + 120 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[h2 + -4 >> 2] | 0);
                }
                c[b2 + 116 >> 2] = 0;
                f2 = b2 + 120 | 0;
              }
              a[f2 >> 0] = 1;
              c[b2 + 116 >> 2] = e2;
              c[b2 + 112 >> 2] = n2;
              h2 = e2;
              f2 = c[b2 + 108 >> 2] | 0;
            } else {
              h2 = o2;
              f2 = i2;
            }
          } else
            h2 = o2;
          c[h2 + (f2 << 2) >> 2] = c[d2 + 8 >> 2];
          d2 = f2 + 1 | 0;
          c[b2 + 108 >> 2] = d2;
          b2 = c[b2 + 32 >> 2] | 0;
          c[b2 + 12 >> 2] = (c[b2 + 12 >> 2] | 0) + 1;
          c[b2 + 16 >> 2] = e2;
          d2 = ((d2 | 0) / 3 | 0) + -1 | 0;
          return d2 | 0;
        }
        function Dd(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          j2 = i;
          i = i + 16 | 0;
          if (!(a[b2 + 1308 >> 0] | 0)) {
            i = j2;
            return;
          }
          g[b2 + 928 >> 2] = 0;
          g[b2 + 992 >> 2] = 0;
          g[b2 + 1056 >> 2] = 0;
          c[b2 + 712 >> 2] = 0;
          c[b2 + 712 + 4 >> 2] = 0;
          c[b2 + 712 + 8 >> 2] = 0;
          c[b2 + 712 + 12 >> 2] = 0;
          ed(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
          kb[c[(c[b2 >> 2] | 0) + 44 >> 2] & 255](b2);
          e2 = +g[b2 + 1284 >> 2];
          f2 = +g[b2 + 1288 >> 2];
          h2 = +g[b2 + 1292 >> 2];
          if (+g[b2 + 696 >> 2] >= +g[b2 + 680 >> 2]) {
            l2 = (a[b2 + 1300 >> 0] | 0) == 0;
            d2 = c[(l2 ? b2 + 1160 | 0 : b2 + 1096 | 0) >> 2] | 0;
            k2 = c[(l2 ? b2 + 1144 | 0 : b2 + 1080 | 0) >> 2] | 0;
            c[j2 >> 2] = c[(l2 ? b2 + 1128 | 0 : b2 + 1064 | 0) >> 2];
            c[j2 + 4 >> 2] = k2;
            c[j2 + 8 >> 2] = d2;
            g[j2 + 12 >> 2] = 0;
            Bh(c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, b2 + 176 | 0, j2, e2, f2, h2, e2, f2, h2);
          }
          if (+g[b2 + 700 >> 2] >= +g[b2 + 684 >> 2]) {
            d2 = (a[b2 + 1300 >> 0] | 0) == 0;
            l2 = c[(d2 ? b2 + 1164 | 0 : b2 + 1100 | 0) >> 2] | 0;
            k2 = c[(d2 ? b2 + 1148 | 0 : b2 + 1084 | 0) >> 2] | 0;
            c[j2 >> 2] = c[(d2 ? b2 + 1132 | 0 : b2 + 1068 | 0) >> 2];
            c[j2 + 4 >> 2] = k2;
            c[j2 + 8 >> 2] = l2;
            g[j2 + 12 >> 2] = 0;
            Bh(c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, b2 + 260 | 0, j2, e2, f2, h2, e2, f2, h2);
          }
          if (+g[b2 + 704 >> 2] >= +g[b2 + 688 >> 2]) {
            d2 = (a[b2 + 1300 >> 0] | 0) == 0;
            l2 = c[(d2 ? b2 + 1168 | 0 : b2 + 1104 | 0) >> 2] | 0;
            k2 = c[(d2 ? b2 + 1152 | 0 : b2 + 1088 | 0) >> 2] | 0;
            c[j2 >> 2] = c[(d2 ? b2 + 1136 | 0 : b2 + 1072 | 0) >> 2];
            c[j2 + 4 >> 2] = k2;
            c[j2 + 8 >> 2] = l2;
            g[j2 + 12 >> 2] = 0;
            Bh(c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, b2 + 344 | 0, j2, e2, f2, h2, e2, f2, h2);
          }
          e2 = +g[b2 + 868 >> 2];
          f2 = +g[b2 + 872 >> 2];
          h2 = +Tj(+g[b2 + 1192 >> 2], e2, f2);
          g[b2 + 920 >> 2] = h2;
          do
            if (!(e2 > f2)) {
              if (e2 > h2) {
                c[b2 + 924 >> 2] = 1;
                g[b2 + 916 >> 2] = h2 - e2;
                if (h2 - e2 > 3.1415927410125732) {
                  g[b2 + 916 >> 2] = h2 - e2 + -6.2831854820251465;
                  d2 = 5;
                  break;
                }
                if (!(h2 - e2 < -3.1415927410125732)) {
                  d2 = 5;
                  break;
                }
                g[b2 + 916 >> 2] = h2 - e2 + 6.2831854820251465;
                d2 = 5;
                break;
              }
              if (!(f2 < h2)) {
                c[b2 + 924 >> 2] = 0;
                d2 = 54;
                break;
              }
              c[b2 + 924 >> 2] = 2;
              g[b2 + 916 >> 2] = h2 - f2;
              if (h2 - f2 > 3.1415927410125732) {
                g[b2 + 916 >> 2] = h2 - f2 + -6.2831854820251465;
                d2 = 5;
                break;
              }
              if (h2 - f2 < -3.1415927410125732) {
                g[b2 + 916 >> 2] = h2 - f2 + 6.2831854820251465;
                d2 = 5;
              } else
                d2 = 5;
            } else {
              c[b2 + 924 >> 2] = 0;
              d2 = 54;
            }
          while (0);
          if ((d2 | 0) == 54 ? a[b2 + 912 >> 0] | 0 : 0)
            d2 = 5;
          if ((d2 | 0) == 5) {
            c[j2 >> 2] = c[b2 + 1208 >> 2];
            c[j2 + 4 >> 2] = c[b2 + 1208 + 4 >> 2];
            c[j2 + 8 >> 2] = c[b2 + 1208 + 8 >> 2];
            c[j2 + 12 >> 2] = c[b2 + 1208 + 12 >> 2];
            Bg(c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, b2 + 428 | 0, j2);
          }
          e2 = +g[b2 + 932 >> 2];
          f2 = +g[b2 + 936 >> 2];
          h2 = +Tj(+g[b2 + 1196 >> 2], e2, f2);
          g[b2 + 984 >> 2] = h2;
          do
            if (!(e2 > f2)) {
              if (e2 > h2) {
                c[b2 + 988 >> 2] = 1;
                g[b2 + 980 >> 2] = h2 - e2;
                if (h2 - e2 > 3.1415927410125732) {
                  g[b2 + 980 >> 2] = h2 - e2 + -6.2831854820251465;
                  d2 = 21;
                  break;
                }
                if (!(h2 - e2 < -3.1415927410125732)) {
                  d2 = 21;
                  break;
                }
                g[b2 + 980 >> 2] = h2 - e2 + 6.2831854820251465;
                d2 = 21;
                break;
              }
              if (!(f2 < h2)) {
                c[b2 + 988 >> 2] = 0;
                d2 = 19;
                break;
              }
              c[b2 + 988 >> 2] = 2;
              g[b2 + 980 >> 2] = h2 - f2;
              if (h2 - f2 > 3.1415927410125732) {
                g[b2 + 980 >> 2] = h2 - f2 + -6.2831854820251465;
                d2 = 21;
                break;
              }
              if (h2 - f2 < -3.1415927410125732) {
                g[b2 + 980 >> 2] = h2 - f2 + 6.2831854820251465;
                d2 = 21;
              } else
                d2 = 21;
            } else {
              c[b2 + 988 >> 2] = 0;
              d2 = 19;
            }
          while (0);
          if ((d2 | 0) == 19 ? a[b2 + 976 >> 0] | 0 : 0)
            d2 = 21;
          if ((d2 | 0) == 21) {
            c[j2 >> 2] = c[b2 + 1224 >> 2];
            c[j2 + 4 >> 2] = c[b2 + 1224 + 4 >> 2];
            c[j2 + 8 >> 2] = c[b2 + 1224 + 8 >> 2];
            c[j2 + 12 >> 2] = c[b2 + 1224 + 12 >> 2];
            Bg(c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, b2 + 512 | 0, j2);
          }
          e2 = +g[b2 + 996 >> 2];
          f2 = +g[b2 + 1e3 >> 2];
          h2 = +Tj(+g[b2 + 1200 >> 2], e2, f2);
          g[b2 + 1048 >> 2] = h2;
          do
            if (!(e2 > f2)) {
              if (e2 > h2) {
                c[b2 + 1052 >> 2] = 1;
                g[b2 + 1044 >> 2] = h2 - e2;
                if (h2 - e2 > 3.1415927410125732) {
                  g[b2 + 1044 >> 2] = h2 - e2 + -6.2831854820251465;
                  d2 = 36;
                  break;
                }
                if (!(h2 - e2 < -3.1415927410125732)) {
                  d2 = 36;
                  break;
                }
                g[b2 + 1044 >> 2] = h2 - e2 + 6.2831854820251465;
                d2 = 36;
                break;
              }
              if (!(f2 < h2)) {
                c[b2 + 1052 >> 2] = 0;
                d2 = 35;
                break;
              }
              c[b2 + 1052 >> 2] = 2;
              g[b2 + 1044 >> 2] = h2 - f2;
              if (h2 - f2 > 3.1415927410125732) {
                g[b2 + 1044 >> 2] = h2 - f2 + -6.2831854820251465;
                d2 = 36;
                break;
              }
              if (h2 - f2 < -3.1415927410125732) {
                g[b2 + 1044 >> 2] = h2 - f2 + 6.2831854820251465;
                d2 = 36;
              } else
                d2 = 36;
            } else {
              c[b2 + 1052 >> 2] = 0;
              d2 = 35;
            }
          while (0);
          if ((d2 | 0) == 35 ? a[b2 + 1040 >> 0] | 0 : 0)
            d2 = 36;
          if ((d2 | 0) == 36) {
            c[j2 >> 2] = c[b2 + 1240 >> 2];
            c[j2 + 4 >> 2] = c[b2 + 1240 + 4 >> 2];
            c[j2 + 8 >> 2] = c[b2 + 1240 + 8 >> 2];
            c[j2 + 12 >> 2] = c[b2 + 1240 + 12 >> 2];
            Bg(c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, b2 + 596 | 0, j2);
          }
          i = j2;
          return;
        }
        function Ed(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          p2 = i;
          i = i + 128 | 0;
          c[b2 + 72 >> 2] = (c[b2 + 72 >> 2] | 0) + 1;
          c[p2 >> 2] = c[d2 >> 2];
          c[p2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[p2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[p2 + 12 >> 2] = c[d2 + 12 >> 2];
          c[p2 + 16 >> 2] = c[d2 + 16 >> 2];
          c[p2 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[p2 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[p2 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[p2 + 32 >> 2] = c[d2 + 32 >> 2];
          c[p2 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[p2 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[p2 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          c[p2 + 48 >> 2] = c[d2 + 48 >> 2];
          c[p2 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[p2 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[p2 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          n2 = c[e2 + 4 >> 2] | 0;
          o2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
          Yb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, d2, p2 + 112 | 0, p2 + 96 | 0);
          f2 = +g[p2 + 112 >> 2];
          if (+g[b2 + 36 >> 2] > f2)
            g[b2 + 36 >> 2] = f2;
          f2 = +g[p2 + 96 >> 2];
          if (+g[b2 + 52 >> 2] < f2)
            g[b2 + 52 >> 2] = f2;
          f2 = +g[p2 + 112 + 4 >> 2];
          if (+g[b2 + 40 >> 2] > f2)
            g[b2 + 40 >> 2] = f2;
          f2 = +g[p2 + 96 + 4 >> 2];
          if (+g[b2 + 56 >> 2] < f2)
            g[b2 + 56 >> 2] = f2;
          f2 = +g[p2 + 112 + 8 >> 2];
          if (+g[b2 + 44 >> 2] > f2)
            g[b2 + 44 >> 2] = f2;
          f2 = +g[p2 + 96 + 8 >> 2];
          if (+g[b2 + 60 >> 2] < f2)
            g[b2 + 60 >> 2] = f2;
          l2 = c[b2 + 68 >> 2] | 0;
          if (!l2) {
            l2 = b2 + 20 | 0;
            k2 = 0;
          } else {
            c[p2 + 64 >> 2] = c[p2 + 112 >> 2];
            c[p2 + 64 + 4 >> 2] = c[p2 + 112 + 4 >> 2];
            c[p2 + 64 + 8 >> 2] = c[p2 + 112 + 8 >> 2];
            c[p2 + 64 + 12 >> 2] = c[p2 + 112 + 12 >> 2];
            c[p2 + 64 + 16 >> 2] = c[p2 + 96 >> 2];
            c[p2 + 64 + 16 + 4 >> 2] = c[p2 + 96 + 4 >> 2];
            c[p2 + 64 + 16 + 8 >> 2] = c[p2 + 96 + 8 >> 2];
            c[p2 + 64 + 16 + 12 >> 2] = c[p2 + 96 + 12 >> 2];
            k2 = c[b2 + 20 >> 2] | 0;
            d2 = c[l2 + 4 >> 2] | 0;
            if (!d2) {
              c[6324] = (c[6324] | 0) + 1;
              d2 = ic(63) | 0;
              if (!d2)
                d2 = 0;
              else {
                c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                d2 = d2 + 4 + 15 & -16;
              }
              h2 = d2;
              j2 = h2 + 44 | 0;
              do {
                c[h2 >> 2] = 0;
                h2 = h2 + 4 | 0;
              } while ((h2 | 0) < (j2 | 0));
            } else
              c[l2 + 4 >> 2] = 0;
            c[d2 + 32 >> 2] = 0;
            c[d2 + 36 >> 2] = k2;
            c[d2 + 40 >> 2] = 0;
            c[d2 >> 2] = c[p2 + 64 >> 2];
            c[d2 + 4 >> 2] = c[p2 + 64 + 4 >> 2];
            c[d2 + 8 >> 2] = c[p2 + 64 + 8 >> 2];
            c[d2 + 12 >> 2] = c[p2 + 64 + 12 >> 2];
            c[d2 + 16 >> 2] = c[p2 + 64 + 16 >> 2];
            c[d2 + 20 >> 2] = c[p2 + 64 + 20 >> 2];
            c[d2 + 24 >> 2] = c[p2 + 64 + 24 >> 2];
            c[d2 + 28 >> 2] = c[p2 + 64 + 28 >> 2];
            Ze(l2, c[l2 >> 2] | 0, d2);
            c[l2 + 12 >> 2] = (c[l2 + 12 >> 2] | 0) + 1;
            l2 = b2 + 20 | 0;
            k2 = d2;
          }
          d2 = c[l2 >> 2] | 0;
          if ((d2 | 0) == (c[b2 + 24 >> 2] | 0) ? (m2 = d2 | 0 ? d2 << 1 : 1, (d2 | 0) < (m2 | 0)) : 0) {
            if (!m2)
              j2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              d2 = ic((m2 * 80 | 3) + 16 | 0) | 0;
              if (!d2)
                d2 = 0;
              else {
                c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                d2 = d2 + 4 + 15 & -16;
              }
              j2 = d2;
              d2 = c[l2 >> 2] | 0;
            }
            if ((d2 | 0) > 0) {
              h2 = 0;
              do {
                q2 = j2 + (h2 * 80 | 0) | 0;
                r2 = c[b2 + 28 >> 2] | 0;
                s2 = r2 + (h2 * 80 | 0) | 0;
                c[q2 >> 2] = c[s2 >> 2];
                c[q2 + 4 >> 2] = c[s2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[s2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[s2 + 12 >> 2];
                q2 = j2 + (h2 * 80 | 0) + 16 | 0;
                s2 = r2 + (h2 * 80 | 0) + 16 | 0;
                c[q2 >> 2] = c[s2 >> 2];
                c[q2 + 4 >> 2] = c[s2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[s2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[s2 + 12 >> 2];
                q2 = j2 + (h2 * 80 | 0) + 32 | 0;
                s2 = r2 + (h2 * 80 | 0) + 32 | 0;
                c[q2 >> 2] = c[s2 >> 2];
                c[q2 + 4 >> 2] = c[s2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[s2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[s2 + 12 >> 2];
                q2 = j2 + (h2 * 80 | 0) + 48 | 0;
                s2 = r2 + (h2 * 80 | 0) + 48 | 0;
                c[q2 >> 2] = c[s2 >> 2];
                c[q2 + 4 >> 2] = c[s2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[s2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[s2 + 12 >> 2];
                q2 = j2 + (h2 * 80 | 0) + 64 | 0;
                r2 = r2 + (h2 * 80 | 0) + 64 | 0;
                c[q2 >> 2] = c[r2 >> 2];
                c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (d2 | 0));
            }
            d2 = c[b2 + 28 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 32 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 28 >> 2] = 0;
            }
            a[b2 + 32 >> 0] = 1;
            c[b2 + 28 >> 2] = j2;
            c[b2 + 24 >> 2] = m2;
            d2 = c[l2 >> 2] | 0;
          }
          s2 = c[b2 + 28 >> 2] | 0;
          r2 = s2 + (d2 * 80 | 0) | 0;
          c[r2 >> 2] = c[p2 >> 2];
          c[r2 + 4 >> 2] = c[p2 + 4 >> 2];
          c[r2 + 8 >> 2] = c[p2 + 8 >> 2];
          c[r2 + 12 >> 2] = c[p2 + 12 >> 2];
          r2 = s2 + (d2 * 80 | 0) + 16 | 0;
          c[r2 >> 2] = c[p2 + 16 >> 2];
          c[r2 + 4 >> 2] = c[p2 + 16 + 4 >> 2];
          c[r2 + 8 >> 2] = c[p2 + 16 + 8 >> 2];
          c[r2 + 12 >> 2] = c[p2 + 16 + 12 >> 2];
          r2 = s2 + (d2 * 80 | 0) + 32 | 0;
          c[r2 >> 2] = c[p2 + 32 >> 2];
          c[r2 + 4 >> 2] = c[p2 + 32 + 4 >> 2];
          c[r2 + 8 >> 2] = c[p2 + 32 + 8 >> 2];
          c[r2 + 12 >> 2] = c[p2 + 32 + 12 >> 2];
          r2 = s2 + (d2 * 80 | 0) + 48 | 0;
          c[r2 >> 2] = c[p2 + 48 >> 2];
          c[r2 + 4 >> 2] = c[p2 + 48 + 4 >> 2];
          c[r2 + 8 >> 2] = c[p2 + 48 + 8 >> 2];
          c[r2 + 12 >> 2] = c[p2 + 48 + 12 >> 2];
          s2 = s2 + (d2 * 80 | 0) + 64 | 0;
          c[s2 >> 2] = e2;
          c[s2 + 4 >> 2] = n2;
          g[s2 + 8 >> 2] = o2;
          c[s2 + 12 >> 2] = k2;
          c[l2 >> 2] = (c[l2 >> 2] | 0) + 1;
          i = p2;
          return;
        }
        function Fd(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          m2 = i;
          i = i + 400 | 0;
          f2 = c[d2 + 36 >> 2] | 0;
          d2 = c[e2 + 36 >> 2] | 0;
          e2 = c[b2 + 24 >> 2] | 0;
          if (((e2 | 0) == (c[b2 + 28 >> 2] | 0) ? c[e2 + 1172 >> 2] | 0 : 0) ? (k2 = (S(c[d2 + 380 >> 2] | 0, c[e2 + 1152 >> 2] | 0) | 0) + (c[f2 + 380 >> 2] | 0) | 0, a[(c[e2 + 1180 >> 2] | 0) + k2 >> 0] | 0) : 0) {
            c[5690] = (c[5690] | 0) + 1;
            i = m2;
            return;
          }
          c[m2 + 332 + 4 >> 2] = 35;
          c[m2 + 332 + 8 >> 2] = 0;
          c[m2 + 332 + 12 >> 2] = -1;
          c[m2 + 332 + 16 >> 2] = 1065353216;
          c[m2 + 332 + 20 >> 2] = 1065353216;
          c[m2 + 332 + 24 >> 2] = 1065353216;
          g[m2 + 332 + 28 >> 2] = 0;
          c[m2 + 332 >> 2] = 3252;
          c[m2 + 332 + 56 >> 2] = f2;
          g[m2 + 332 + 48 >> 2] = 0;
          c[m2 + 272 + 4 >> 2] = 35;
          c[m2 + 272 + 8 >> 2] = 0;
          c[m2 + 272 + 12 >> 2] = -1;
          c[m2 + 272 + 16 >> 2] = 1065353216;
          c[m2 + 272 + 20 >> 2] = 1065353216;
          c[m2 + 272 + 24 >> 2] = 1065353216;
          g[m2 + 272 + 28 >> 2] = 0;
          c[m2 + 272 >> 2] = 3252;
          c[m2 + 272 + 56 >> 2] = d2;
          g[m2 + 272 + 48 >> 2] = 0;
          if (!(a[21984] | 0)) {
            a[21984] = 1;
            if (!(a[21992] | 0)) {
              a[21992] = 1;
              c[5577] = 1065353216;
              c[5578] = 0;
              c[5579] = 0;
              c[5580] = 0;
              c[5581] = 0;
              c[5582] = 1065353216;
              c[5583] = 0;
              c[5584] = 0;
              c[5585] = 0;
              c[5586] = 0;
              c[5587] = 1065353216;
              g[5588] = 0;
            }
            c[5561] = c[5577];
            c[5562] = c[5578];
            c[5563] = c[5579];
            c[5564] = c[5580];
            c[5565] = c[5581];
            c[5566] = c[5582];
            c[5567] = c[5583];
            c[5568] = c[5584];
            c[5569] = c[5585];
            c[5570] = c[5586];
            c[5571] = c[5587];
            c[5572] = c[5588];
            c[5573] = 0;
            c[5574] = 0;
            c[5575] = 0;
            c[5576] = 0;
          }
          if (!(a[21984] | 0)) {
            a[21984] = 1;
            if (!(a[21992] | 0)) {
              a[21992] = 1;
              c[5577] = 1065353216;
              c[5578] = 0;
              c[5579] = 0;
              c[5580] = 0;
              c[5581] = 0;
              c[5582] = 1065353216;
              c[5583] = 0;
              c[5584] = 0;
              c[5585] = 0;
              c[5586] = 0;
              c[5587] = 1065353216;
              g[5588] = 0;
            }
            c[5561] = c[5577];
            c[5562] = c[5578];
            c[5563] = c[5579];
            c[5564] = c[5580];
            c[5565] = c[5581];
            c[5566] = c[5582];
            c[5567] = c[5583];
            c[5568] = c[5584];
            c[5569] = c[5585];
            c[5570] = c[5586];
            c[5571] = c[5587];
            c[5572] = c[5588];
            c[5573] = 0;
            c[5574] = 0;
            c[5575] = 0;
            c[5576] = 0;
          }
          o2 = +g[f2 + 232 >> 2] - +g[d2 + 232 >> 2];
          n2 = +g[f2 + 236 >> 2] - +g[d2 + 236 >> 2];
          g[m2 >> 2] = +g[f2 + 228 >> 2] - +g[d2 + 228 >> 2];
          g[m2 + 4 >> 2] = o2;
          g[m2 + 8 >> 2] = n2;
          g[m2 + 12 >> 2] = 0;
          if (!(!(td(m2 + 332 | 0, 22244, m2 + 272 | 0, 22244, m2, m2 + 216 | 0) | 0) ? !(Bc(m2 + 332 | 0, 22244, m2 + 272 | 0, 22244, m2, m2 + 216 | 0, 0) | 0) : 0))
            h2 = 15;
          if ((h2 | 0) == 15 ? (c[m2 + 4 >> 2] = 0, c[m2 + 4 + 4 >> 2] = 0, c[m2 + 4 + 8 >> 2] = 0, c[m2 + 4 + 12 >> 2] = 0, c[m2 + 4 + 16 >> 2] = 0, c[m2 + 4 + 20 >> 2] = 0, a[m2 + 152 >> 0] = 0, c[m2 >> 2] = 3072, Uc(b2, m2 + 216 | 0, f2, 0, 0, d2, 0, 0, m2) | 0) : 0) {
            c[6324] = (c[6324] | 0) + 1;
            d2 = ic(235) | 0;
            if (!d2)
              k2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              k2 = d2 + 4 + 15 & -16;
            }
            e2 = k2 + 4 | 0;
            d2 = k2 + 152 | 0;
            yn(e2 | 0, 0, 212) | 0;
            c[k2 >> 2] = 3072;
            f2 = m2 + 4 | 0;
            h2 = e2 + 100 | 0;
            do {
              c[e2 >> 2] = c[f2 >> 2];
              e2 = e2 + 4 | 0;
              f2 = f2 + 4 | 0;
            } while ((e2 | 0) < (h2 | 0));
            e2 = k2 + 104 | 0;
            c[e2 >> 2] = c[m2 + 104 >> 2];
            c[e2 + 4 >> 2] = c[m2 + 104 + 4 >> 2];
            c[e2 + 8 >> 2] = c[m2 + 104 + 8 >> 2];
            c[e2 + 12 >> 2] = c[m2 + 104 + 12 >> 2];
            e2 = k2 + 120 | 0;
            c[e2 >> 2] = c[m2 + 120 >> 2];
            c[e2 + 4 >> 2] = c[m2 + 120 + 4 >> 2];
            c[e2 + 8 >> 2] = c[m2 + 120 + 8 >> 2];
            c[e2 + 12 >> 2] = c[m2 + 120 + 12 >> 2];
            e2 = k2 + 136 | 0;
            c[e2 >> 2] = c[m2 + 136 >> 2];
            c[e2 + 4 >> 2] = c[m2 + 136 + 4 >> 2];
            c[e2 + 8 >> 2] = c[m2 + 136 + 8 >> 2];
            c[e2 + 12 >> 2] = c[m2 + 136 + 12 >> 2];
            a[d2 >> 0] = a[m2 + 152 >> 0] | 0;
            e2 = k2 + 156 | 0;
            f2 = m2 + 156 | 0;
            h2 = e2 + 60 | 0;
            do {
              c[e2 >> 2] = c[f2 >> 2];
              e2 = e2 + 4 | 0;
              f2 = f2 + 4 | 0;
            } while ((e2 | 0) < (h2 | 0));
            h2 = c[b2 + 24 >> 2] | 0;
            j2 = k2;
            d2 = c[h2 + 892 >> 2] | 0;
            if ((d2 | 0) == (c[h2 + 896 >> 2] | 0) ? (l2 = d2 | 0 ? d2 << 1 : 1, (d2 | 0) < (l2 | 0)) : 0) {
              if (!l2)
                f2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic((l2 << 2 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                f2 = d2;
                d2 = c[h2 + 892 >> 2] | 0;
              }
              if ((d2 | 0) > 0) {
                e2 = 0;
                do {
                  c[f2 + (e2 << 2) >> 2] = c[(c[h2 + 900 >> 2] | 0) + (e2 << 2) >> 2];
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != (d2 | 0));
              }
              e2 = c[h2 + 900 >> 2] | 0;
              if (e2) {
                if (a[h2 + 904 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[e2 + -4 >> 2] | 0);
                  d2 = c[h2 + 892 >> 2] | 0;
                }
                c[h2 + 900 >> 2] = 0;
              }
              a[h2 + 904 >> 0] = 1;
              c[h2 + 900 >> 2] = f2;
              c[h2 + 896 >> 2] = l2;
            }
            c[(c[h2 + 900 >> 2] | 0) + (d2 << 2) >> 2] = j2;
            c[h2 + 892 >> 2] = d2 + 1;
            j2 = c[b2 + 24 >> 2] | 0;
            l2 = c[b2 + 28 >> 2] | 0;
            n2 = +g[j2 + 388 >> 2];
            o2 = +g[l2 + 388 >> 2];
            b2 = k2 + 64 | 0;
            g[b2 >> 2] = +g[b2 >> 2] * (n2 > o2 ? n2 : o2);
            b2 = k2 + 68 | 0;
            g[b2 >> 2] = +g[b2 >> 2] * (+g[j2 + 400 >> 2] + +g[l2 + 400 >> 2]) * 0.5;
          }
          i = m2;
          return;
        }
        function Gd(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          while (1) {
            o2 = (b2 + d2 | 0) / 2 | 0;
            m2 = c[a2 + 12 >> 2] | 0;
            p2 = c[m2 + (o2 << 4) >> 2] | 0;
            n2 = c[m2 + (o2 << 4) + 4 >> 2] | 0;
            o2 = c[m2 + (o2 << 4) + 8 >> 2] | 0;
            e2 = d2;
            f2 = b2;
            while (1) {
              a:
                do
                  if (!p2)
                    while (1) {
                      j2 = c[m2 + (f2 << 4) >> 2] | 0;
                      if (!j2)
                        g2 = -1;
                      else
                        g2 = c[j2 + 12 >> 2] | 0;
                      k2 = c[m2 + (f2 << 4) + 4 >> 2] | 0;
                      if (!k2)
                        h2 = -1;
                      else
                        h2 = c[k2 + 12 >> 2] | 0;
                      if (!n2)
                        i2 = -1;
                      else
                        i2 = c[n2 + 12 >> 2] | 0;
                      do
                        if ((g2 | 0) <= -1) {
                          g2 = (h2 | 0) > (i2 | 0);
                          if (g2 | (j2 | 0) == 0 ^ 1)
                            if ((j2 | 0) == 0 & g2)
                              break;
                            else
                              break a;
                          if ((k2 | 0) != (n2 | 0))
                            break a;
                          if ((c[m2 + (f2 << 4) + 8 >> 2] | 0) >>> 0 <= o2 >>> 0)
                            break a;
                        }
                      while (0);
                      f2 = f2 + 1 | 0;
                    }
                  else {
                    l2 = c[p2 + 12 >> 2] | 0;
                    if (!n2)
                      while (1) {
                        i2 = c[m2 + (f2 << 4) >> 2] | 0;
                        if (!i2)
                          g2 = -1;
                        else
                          g2 = c[i2 + 12 >> 2] | 0;
                        j2 = c[m2 + (f2 << 4) + 4 >> 2] | 0;
                        if (!j2)
                          h2 = -1;
                        else
                          h2 = c[j2 + 12 >> 2] | 0;
                        do
                          if ((g2 | 0) <= (l2 | 0)) {
                            g2 = (h2 | 0) > -1;
                            if (g2 | (i2 | 0) == (p2 | 0) ^ 1)
                              if ((i2 | 0) == (p2 | 0) & g2)
                                break;
                              else
                                break a;
                            if (j2 | 0)
                              break a;
                            if ((c[m2 + (f2 << 4) + 8 >> 2] | 0) >>> 0 <= o2 >>> 0)
                              break a;
                          }
                        while (0);
                        f2 = f2 + 1 | 0;
                      }
                    k2 = c[n2 + 12 >> 2] | 0;
                    while (1) {
                      i2 = c[m2 + (f2 << 4) >> 2] | 0;
                      if (!i2)
                        g2 = -1;
                      else
                        g2 = c[i2 + 12 >> 2] | 0;
                      j2 = c[m2 + (f2 << 4) + 4 >> 2] | 0;
                      if (!j2)
                        h2 = -1;
                      else
                        h2 = c[j2 + 12 >> 2] | 0;
                      do
                        if ((g2 | 0) <= (l2 | 0)) {
                          g2 = (h2 | 0) > (k2 | 0);
                          if (g2 | (i2 | 0) == (p2 | 0) ^ 1)
                            if ((i2 | 0) == (p2 | 0) & g2)
                              break;
                            else
                              break a;
                          if ((j2 | 0) != (n2 | 0))
                            break a;
                          if ((c[m2 + (f2 << 4) + 8 >> 2] | 0) >>> 0 <= o2 >>> 0)
                            break a;
                        }
                      while (0);
                      f2 = f2 + 1 | 0;
                    }
                  }
                while (0);
              b:
                do
                  if (!p2)
                    while (1) {
                      j2 = c[m2 + (e2 << 4) >> 2] | 0;
                      if (!j2)
                        g2 = -1;
                      else
                        g2 = c[j2 + 12 >> 2] | 0;
                      if (!n2)
                        h2 = -1;
                      else
                        h2 = c[n2 + 12 >> 2] | 0;
                      k2 = c[m2 + (e2 << 4) + 4 >> 2] | 0;
                      if (!k2)
                        i2 = -1;
                      else
                        i2 = c[k2 + 12 >> 2] | 0;
                      do
                        if ((g2 | 0) >= -1) {
                          g2 = (h2 | 0) > (i2 | 0);
                          if (g2 | (j2 | 0) == 0 ^ 1)
                            if ((j2 | 0) == 0 & g2)
                              break;
                            else
                              break b;
                          if ((n2 | 0) != (k2 | 0))
                            break b;
                          if (o2 >>> 0 <= (c[m2 + (e2 << 4) + 8 >> 2] | 0) >>> 0)
                            break b;
                        }
                      while (0);
                      e2 = e2 + -1 | 0;
                    }
                  else {
                    l2 = c[p2 + 12 >> 2] | 0;
                    if (!n2)
                      while (1) {
                        i2 = c[m2 + (e2 << 4) >> 2] | 0;
                        if (!i2)
                          g2 = -1;
                        else
                          g2 = c[i2 + 12 >> 2] | 0;
                        j2 = c[m2 + (e2 << 4) + 4 >> 2] | 0;
                        if (!j2)
                          h2 = -1;
                        else
                          h2 = c[j2 + 12 >> 2] | 0;
                        do
                          if ((l2 | 0) <= (g2 | 0)) {
                            g2 = (h2 | 0) < -1;
                            if (g2 | (p2 | 0) == (i2 | 0) ^ 1)
                              if ((p2 | 0) == (i2 | 0) & g2)
                                break;
                              else
                                break b;
                            if (j2 | 0)
                              break b;
                            if (o2 >>> 0 <= (c[m2 + (e2 << 4) + 8 >> 2] | 0) >>> 0)
                              break b;
                          }
                        while (0);
                        e2 = e2 + -1 | 0;
                      }
                    k2 = c[n2 + 12 >> 2] | 0;
                    while (1) {
                      i2 = c[m2 + (e2 << 4) >> 2] | 0;
                      if (!i2)
                        g2 = -1;
                      else
                        g2 = c[i2 + 12 >> 2] | 0;
                      j2 = c[m2 + (e2 << 4) + 4 >> 2] | 0;
                      if (!j2)
                        h2 = -1;
                      else
                        h2 = c[j2 + 12 >> 2] | 0;
                      do
                        if ((l2 | 0) <= (g2 | 0)) {
                          g2 = (k2 | 0) > (h2 | 0);
                          if (g2 | (p2 | 0) == (i2 | 0) ^ 1)
                            if ((p2 | 0) == (i2 | 0) & g2)
                              break;
                            else
                              break b;
                          if ((n2 | 0) != (j2 | 0))
                            break b;
                          if (o2 >>> 0 <= (c[m2 + (e2 << 4) + 8 >> 2] | 0) >>> 0)
                            break b;
                        }
                      while (0);
                      e2 = e2 + -1 | 0;
                    }
                  }
                while (0);
              if ((f2 | 0) <= (e2 | 0)) {
                h2 = m2 + (f2 << 4) | 0;
                i2 = c[h2 >> 2] | 0;
                j2 = c[m2 + (f2 << 4) + 4 >> 2] | 0;
                k2 = c[m2 + (f2 << 4) + 8 >> 2] | 0;
                l2 = c[m2 + (f2 << 4) + 12 >> 2] | 0;
                m2 = m2 + (e2 << 4) | 0;
                c[h2 >> 2] = c[m2 >> 2];
                c[h2 + 4 >> 2] = c[m2 + 4 >> 2];
                c[h2 + 8 >> 2] = c[m2 + 8 >> 2];
                c[h2 + 12 >> 2] = c[m2 + 12 >> 2];
                m2 = c[a2 + 12 >> 2] | 0;
                c[m2 + (e2 << 4) >> 2] = i2;
                c[m2 + (e2 << 4) + 4 >> 2] = j2;
                c[m2 + (e2 << 4) + 8 >> 2] = k2;
                c[m2 + (e2 << 4) + 12 >> 2] = l2;
                e2 = e2 + -1 | 0;
                f2 = f2 + 1 | 0;
              }
              if ((f2 | 0) > (e2 | 0))
                break;
              m2 = c[a2 + 12 >> 2] | 0;
            }
            if ((e2 | 0) > (b2 | 0))
              Gd(a2, b2, e2);
            if ((f2 | 0) < (d2 | 0))
              b2 = f2;
            else
              break;
          }
          return;
        }
        function Hd(a2, b2, d2, e2, f2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = +h2;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          j2 = i;
          i = i + 464 | 0;
          c[j2 + 128 >> 2] = c[d2 >> 2];
          c[j2 + 128 + 4 >> 2] = c[d2 + 4 >> 2];
          c[j2 + 128 + 8 >> 2] = c[d2 + 8 >> 2];
          c[j2 + 128 + 12 >> 2] = c[d2 + 12 >> 2];
          c[j2 + 128 + 16 >> 2] = c[d2 + 16 >> 2];
          c[j2 + 128 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[j2 + 128 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[j2 + 128 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[j2 + 128 + 32 >> 2] = c[d2 + 32 >> 2];
          c[j2 + 128 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[j2 + 128 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[j2 + 128 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          l2 = j2 + 128 + 48 | 0;
          c[l2 >> 2] = c[d2 + 48 >> 2];
          c[l2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[l2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[l2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          c[j2 + 64 >> 2] = c[e2 >> 2];
          c[j2 + 64 + 4 >> 2] = c[e2 + 4 >> 2];
          c[j2 + 64 + 8 >> 2] = c[e2 + 8 >> 2];
          c[j2 + 64 + 12 >> 2] = c[e2 + 12 >> 2];
          c[j2 + 64 + 16 >> 2] = c[e2 + 16 >> 2];
          c[j2 + 64 + 16 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[j2 + 64 + 16 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[j2 + 64 + 16 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          c[j2 + 64 + 32 >> 2] = c[e2 + 32 >> 2];
          c[j2 + 64 + 32 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[j2 + 64 + 32 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[j2 + 64 + 32 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          k2 = j2 + 64 + 48 | 0;
          c[k2 >> 2] = c[e2 + 48 >> 2];
          c[k2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[k2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[k2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          rf(j2 + 128 | 0, j2 + 64 | 0, j2 + 256 | 0, j2 + 192 | 0);
          t2 = +g[j2 + 192 >> 2];
          m2 = t2 * +g[j2 + 256 + 4 >> 2];
          r2 = t2 * +g[j2 + 256 + 8 >> 2];
          g[j2 + 16 >> 2] = +g[j2 + 256 >> 2] * t2;
          g[j2 + 16 + 4 >> 2] = m2;
          g[j2 + 16 + 8 >> 2] = r2;
          g[j2 + 16 + 12 >> 2] = 0;
          c[j2 + 256 >> 2] = 0;
          c[j2 + 256 + 4 >> 2] = 0;
          c[j2 + 256 + 8 >> 2] = 0;
          c[j2 + 256 + 12 >> 2] = 0;
          c[j2 + 192 + 48 >> 2] = 0;
          c[j2 + 192 + 48 + 4 >> 2] = 0;
          c[j2 + 192 + 48 + 8 >> 2] = 0;
          c[j2 + 192 + 48 + 12 >> 2] = 0;
          Jg(j2 + 128 | 0, j2);
          r2 = +g[j2 >> 2];
          m2 = +g[j2 + 4 >> 2];
          t2 = +g[j2 + 8 >> 2];
          q2 = +g[j2 + 12 >> 2];
          o2 = r2 * (2 / (r2 * r2 + m2 * m2 + t2 * t2 + q2 * q2));
          n2 = m2 * (2 / (r2 * r2 + m2 * m2 + t2 * t2 + q2 * q2));
          p2 = t2 * (2 / (r2 * r2 + m2 * m2 + t2 * t2 + q2 * q2));
          g[j2 + 192 >> 2] = 1 - (m2 * n2 + t2 * p2);
          g[j2 + 192 + 4 >> 2] = r2 * n2 - q2 * p2;
          g[j2 + 192 + 8 >> 2] = r2 * p2 + q2 * n2;
          g[j2 + 192 + 12 >> 2] = 0;
          g[j2 + 192 + 16 >> 2] = r2 * n2 + q2 * p2;
          g[j2 + 192 + 20 >> 2] = 1 - (r2 * o2 + t2 * p2);
          g[j2 + 192 + 24 >> 2] = m2 * p2 - q2 * o2;
          g[j2 + 192 + 28 >> 2] = 0;
          g[j2 + 192 + 32 >> 2] = r2 * p2 - q2 * n2;
          g[j2 + 192 + 36 >> 2] = m2 * p2 + q2 * o2;
          g[j2 + 192 + 40 >> 2] = 1 - (r2 * o2 + m2 * n2);
          g[j2 + 192 + 44 >> 2] = 0;
          eh(b2, j2 + 192 | 0, j2 + 256 | 0, j2 + 16 | 0, j2 + 48 | 0, j2 + 32 | 0);
          c[j2 + 256 >> 2] = 5968;
          c[j2 + 256 + 36 >> 2] = c[d2 >> 2];
          c[j2 + 256 + 36 + 4 >> 2] = c[d2 + 4 >> 2];
          c[j2 + 256 + 36 + 8 >> 2] = c[d2 + 8 >> 2];
          c[j2 + 256 + 36 + 12 >> 2] = c[d2 + 12 >> 2];
          c[j2 + 256 + 52 >> 2] = c[d2 + 16 >> 2];
          c[j2 + 256 + 52 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[j2 + 256 + 52 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[j2 + 256 + 52 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[j2 + 256 + 68 >> 2] = c[d2 + 32 >> 2];
          c[j2 + 256 + 68 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[j2 + 256 + 68 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[j2 + 256 + 68 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          s2 = j2 + 256 + 84 | 0;
          c[s2 >> 2] = c[d2 + 48 >> 2];
          c[s2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[s2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[s2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          c[j2 + 256 + 100 >> 2] = c[e2 >> 2];
          c[j2 + 256 + 100 + 4 >> 2] = c[e2 + 4 >> 2];
          c[j2 + 256 + 100 + 8 >> 2] = c[e2 + 8 >> 2];
          c[j2 + 256 + 100 + 12 >> 2] = c[e2 + 12 >> 2];
          c[j2 + 256 + 116 >> 2] = c[e2 + 16 >> 2];
          c[j2 + 256 + 116 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[j2 + 256 + 116 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[j2 + 256 + 116 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          c[j2 + 256 + 132 >> 2] = c[e2 + 32 >> 2];
          c[j2 + 256 + 132 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[j2 + 256 + 132 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[j2 + 256 + 132 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          d2 = j2 + 256 + 148 | 0;
          c[d2 >> 2] = c[e2 + 48 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          c[j2 + 256 + 180 >> 2] = a2;
          c[j2 + 256 + 184 >> 2] = f2;
          g[j2 + 256 + 188 >> 2] = h2;
          c[j2 + 256 + 192 >> 2] = b2;
          n2 = +g[d2 >> 2] - +g[s2 >> 2];
          m2 = +g[j2 + 256 + 152 >> 2] - +g[j2 + 256 + 88 >> 2];
          o2 = +g[j2 + 256 + 156 >> 2] - +g[j2 + 256 + 92 >> 2];
          h2 = 1 / +G(+(n2 * n2 + m2 * m2 + o2 * o2));
          r2 = n2 * h2 == 0 ? 999999984306749400 : 1 / (n2 * h2);
          g[j2 + 256 + 4 >> 2] = r2;
          q2 = m2 * h2 == 0 ? 999999984306749400 : 1 / (m2 * h2);
          g[j2 + 256 + 8 >> 2] = q2;
          p2 = o2 * h2 == 0 ? 999999984306749400 : 1 / (o2 * h2);
          g[j2 + 256 + 12 >> 2] = p2;
          c[j2 + 256 + 20 >> 2] = r2 < 0 & 1;
          c[j2 + 256 + 24 >> 2] = q2 < 0 & 1;
          c[j2 + 256 + 28 >> 2] = p2 < 0 & 1;
          g[j2 + 256 + 32 >> 2] = o2 * o2 * h2 + (n2 * n2 * h2 + m2 * m2 * h2);
          f2 = c[a2 + 68 >> 2] | 0;
          Ab[c[(c[f2 >> 2] | 0) + 24 >> 2] & 7](f2, l2, k2, j2 + 256 | 0, j2 + 48 | 0, j2 + 32 | 0);
          i = j2;
          return;
        }
        function Id(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, I2 = 0;
          B2 = i;
          i = i + 192 | 0;
          A2 = c[a2 + 4 >> 2] | 0;
          t2 = +g[A2 + 784 >> 2];
          if (t2 < e2) {
            i = B2;
            return;
          }
          y2 = c[A2 + 772 >> 2] | 0;
          w2 = (c[a2 + 8 >> 2] | 0) + 8 | 0;
          z2 = c[w2 >> 2] | 0;
          j2 = +g[d2 >> 2];
          q2 = +g[b2 >> 2] * e2 + j2;
          k2 = +g[d2 + 4 >> 2];
          r2 = +g[b2 + 4 >> 2] * e2 + k2;
          h2 = +g[d2 + 8 >> 2];
          s2 = +g[b2 + 8 >> 2] * e2 + h2;
          x2 = (c[a2 + 12 >> 2] | 0) + 8 | 0;
          f2 = c[x2 >> 2] | 0;
          n2 = +g[f2 + 52 >> 2];
          o2 = +g[f2 + 56 >> 2];
          if ((y2 | 0) != (z2 | 0)) {
            C2 = s2 - +g[f2 + 60 >> 2];
            v2 = j2 - +g[z2 + 52 >> 2];
            u2 = k2 - +g[z2 + 56 >> 2];
            h2 = h2 - +g[z2 + 60 >> 2];
            l2 = v2 * +g[z2 + 4 >> 2] + u2 * +g[z2 + 20 >> 2] + h2 * +g[z2 + 36 >> 2];
            m2 = v2 * +g[z2 + 8 >> 2] + u2 * +g[z2 + 24 >> 2] + h2 * +g[z2 + 40 >> 2];
            h2 = v2 * +g[z2 + 12 >> 2] + u2 * +g[z2 + 28 >> 2] + h2 * +g[z2 + 44 >> 2];
            u2 = (q2 - n2) * +g[f2 + 4 >> 2] + (r2 - o2) * +g[f2 + 20 >> 2] + C2 * +g[f2 + 36 >> 2];
            v2 = (q2 - n2) * +g[f2 + 8 >> 2] + (r2 - o2) * +g[f2 + 24 >> 2] + C2 * +g[f2 + 40 >> 2];
            n2 = (q2 - n2) * +g[f2 + 12 >> 2] + (r2 - o2) * +g[f2 + 28 >> 2] + C2 * +g[f2 + 44 >> 2];
          } else {
            E2 = q2 - +g[y2 + 52 >> 2];
            D2 = r2 - +g[y2 + 56 >> 2];
            C2 = s2 - +g[y2 + 60 >> 2];
            h2 = h2 - +g[f2 + 60 >> 2];
            l2 = (j2 - n2) * +g[f2 + 4 >> 2] + (k2 - o2) * +g[f2 + 20 >> 2] + h2 * +g[f2 + 36 >> 2];
            m2 = (j2 - n2) * +g[f2 + 8 >> 2] + (k2 - o2) * +g[f2 + 24 >> 2] + h2 * +g[f2 + 40 >> 2];
            h2 = (j2 - n2) * +g[f2 + 12 >> 2] + (k2 - o2) * +g[f2 + 28 >> 2] + h2 * +g[f2 + 44 >> 2];
            u2 = E2 * +g[y2 + 4 >> 2] + D2 * +g[y2 + 20 >> 2] + C2 * +g[y2 + 36 >> 2];
            v2 = E2 * +g[y2 + 8 >> 2] + D2 * +g[y2 + 24 >> 2] + C2 * +g[y2 + 40 >> 2];
            n2 = E2 * +g[y2 + 12 >> 2] + D2 * +g[y2 + 28 >> 2] + C2 * +g[y2 + 44 >> 2];
          }
          g[B2 >> 2] = u2;
          g[B2 + 4 >> 2] = v2;
          g[B2 + 8 >> 2] = n2;
          g[B2 + 12 >> 2] = 0;
          g[B2 + 16 >> 2] = l2;
          g[B2 + 20 >> 2] = m2;
          g[B2 + 24 >> 2] = h2;
          g[B2 + 28 >> 2] = 0;
          c[B2 + 64 >> 2] = c[b2 >> 2];
          c[B2 + 64 + 4 >> 2] = c[b2 + 4 >> 2];
          c[B2 + 64 + 8 >> 2] = c[b2 + 8 >> 2];
          c[B2 + 64 + 12 >> 2] = c[b2 + 12 >> 2];
          g[B2 + 80 >> 2] = e2;
          c[B2 + 84 >> 2] = 0;
          c[B2 + 84 + 4 >> 2] = 0;
          c[B2 + 84 + 8 >> 2] = 0;
          c[B2 + 84 + 12 >> 2] = 0;
          f2 = B2 + 116 | 0;
          b2 = f2 + 44 | 0;
          do {
            c[f2 >> 2] = 0;
            f2 = f2 + 4 | 0;
          } while ((f2 | 0) < (b2 | 0));
          g[B2 + 48 >> 2] = q2;
          g[B2 + 52 >> 2] = r2;
          g[B2 + 56 >> 2] = s2;
          g[B2 + 60 >> 2] = 0;
          c[B2 + 32 >> 2] = c[d2 >> 2];
          c[B2 + 32 + 4 >> 2] = c[d2 + 4 >> 2];
          c[B2 + 32 + 8 >> 2] = c[d2 + 8 >> 2];
          c[B2 + 32 + 12 >> 2] = c[d2 + 12 >> 2];
          p2 = c[A2 + 780 >> 2] | 0;
          if ((p2 | 0) > 0) {
            d2 = -1;
            b2 = 0;
            h2 = t2 * t2;
            while (1) {
              j2 = +g[A2 + 4 + (b2 * 192 | 0) >> 2] - u2;
              k2 = +g[A2 + 4 + (b2 * 192 | 0) + 4 >> 2] - v2;
              l2 = +g[A2 + 4 + (b2 * 192 | 0) + 8 >> 2] - n2;
              f2 = j2 * j2 + k2 * k2 + l2 * l2 < h2;
              d2 = f2 ? b2 : d2;
              b2 = b2 + 1 | 0;
              if ((b2 | 0) == (p2 | 0))
                break;
              else
                h2 = f2 ? j2 * j2 + k2 * k2 + l2 * l2 : h2;
            }
          } else
            d2 = -1;
          b2 = c[w2 >> 2] | 0;
          f2 = c[x2 >> 2] | 0;
          E2 = +g[b2 + 224 >> 2];
          D2 = +g[f2 + 224 >> 2];
          C2 = E2 * D2 < -10 ? -10 : E2 * D2;
          g[B2 + 84 >> 2] = C2 > 10 ? 10 : C2;
          g[B2 + 96 >> 2] = +g[b2 + 228 >> 2] * +g[f2 + 228 >> 2];
          C2 = +g[b2 + 232 >> 2] * D2 + +g[f2 + 232 >> 2] * E2;
          C2 = C2 < -10 ? -10 : C2;
          g[B2 + 88 >> 2] = C2 > 10 ? 10 : C2;
          E2 = +g[b2 + 236 >> 2] * D2 + +g[f2 + 236 >> 2] * E2;
          E2 = E2 < -10 ? -10 : E2;
          g[B2 + 92 >> 2] = E2 > 10 ? 10 : E2;
          if (!((c[b2 + 204 >> 2] & 128 | 0) == 0 ? !(c[f2 + 204 >> 2] & 128 | 0) : 0)) {
            g[B2 + 148 >> 2] = +g[b2 + 240 >> 2] + +g[f2 + 240 >> 2];
            g[B2 + 144 >> 2] = 1 / (1 / +g[b2 + 244 >> 2] + 1 / +g[f2 + 244 >> 2]);
            c[B2 + 120 >> 2] = 8;
          }
          h2 = +g[B2 + 72 >> 2];
          x2 = +F(+h2) > 0.7071067690849304;
          k2 = +g[B2 + 68 >> 2];
          if (x2) {
            j2 = 1 / +G(+(h2 * h2 + k2 * k2));
            m2 = +g[B2 + 64 >> 2];
            l2 = -(j2 * k2 * m2);
            m2 = m2 * -(j2 * h2);
            n2 = (h2 * h2 + k2 * k2) * j2;
            o2 = j2 * k2;
            j2 = -(j2 * h2);
            h2 = 0;
          } else {
            j2 = +g[B2 + 64 >> 2];
            E2 = 1 / +G(+(j2 * j2 + k2 * k2));
            l2 = h2 * -(k2 * E2);
            m2 = (j2 * j2 + k2 * k2) * E2;
            n2 = -(E2 * j2 * h2);
            o2 = 0;
            j2 = E2 * j2;
            h2 = -(k2 * E2);
          }
          g[B2 + 160 >> 2] = h2;
          g[B2 + 164 >> 2] = j2;
          g[B2 + 168 >> 2] = o2;
          g[B2 + 176 >> 2] = n2;
          g[B2 + 180 >> 2] = l2;
          g[B2 + 184 >> 2] = m2;
          w2 = c[a2 + 20 >> 2] | 0;
          p2 = c[a2 + 16 >> 2] | 0;
          x2 = c[a2 + 28 >> 2] | 0;
          a2 = c[a2 + 24 >> 2] | 0;
          c[B2 + 100 >> 2] = (y2 | 0) != (z2 | 0) ? w2 : p2;
          c[B2 + 104 >> 2] = (y2 | 0) != (z2 | 0) ? p2 : w2;
          c[B2 + 108 >> 2] = (y2 | 0) != (z2 | 0) ? x2 : a2;
          c[B2 + 112 >> 2] = (y2 | 0) != (z2 | 0) ? a2 : x2;
          if ((d2 | 0) > -1) {
            z2 = A2 + 4 + (d2 * 192 | 0) + 156 | 0;
            y2 = c[z2 >> 2] | 0;
            b2 = A2 + 4 + (d2 * 192 | 0) + 124 | 0;
            f2 = c[b2 >> 2] | 0;
            w2 = A2 + 4 + (d2 * 192 | 0) + 128 | 0;
            p2 = c[w2 >> 2] | 0;
            a2 = A2 + 4 + (d2 * 192 | 0) + 132 | 0;
            x2 = c[a2 >> 2] | 0;
            H2 = A2 + 4 + (d2 * 192 | 0) + 116 | 0;
            I2 = c[H2 >> 2] | 0;
            Lm(A2 + 4 + (d2 * 192 | 0) | 0, B2 | 0, 192) | 0;
            c[H2 >> 2] = I2;
            c[b2 >> 2] = f2;
            c[w2 >> 2] = p2;
            c[a2 >> 2] = x2;
            c[z2 >> 2] = y2;
          } else
            Le(A2, B2) | 0;
          i = B2;
          return;
        }
        function Jd(b2, d2, e2, f2, h2, j2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
          C2 = i;
          i = i + 272 | 0;
          z2 = +g[e2 + 48 >> 2] - +g[d2 + 48 >> 2];
          A2 = +g[e2 + 52 >> 2] - +g[d2 + 52 >> 2];
          B2 = +g[e2 + 56 >> 2] - +g[d2 + 56 >> 2];
          rf(d2, e2, C2 + 256 | 0, C2 + 208 | 0);
          v2 = +g[C2 + 208 >> 2];
          t2 = +g[C2 + 256 >> 2] * v2;
          u2 = v2 * +g[C2 + 256 + 4 >> 2];
          v2 = v2 * +g[C2 + 256 + 8 >> 2];
          g[C2 + 192 >> 2] = t2;
          g[C2 + 192 + 4 >> 2] = u2;
          g[C2 + 192 + 8 >> 2] = v2;
          g[C2 + 192 + 12 >> 2] = 0;
          w2 = +g[h2 + 48 >> 2] - +g[f2 + 48 >> 2];
          x2 = +g[h2 + 52 >> 2] - +g[f2 + 52 >> 2];
          y2 = +g[h2 + 56 >> 2] - +g[f2 + 56 >> 2];
          rf(f2, h2, C2 + 256 | 0, C2 + 208 | 0);
          r2 = +g[C2 + 208 >> 2];
          p2 = +g[C2 + 256 >> 2] * r2;
          q2 = r2 * +g[C2 + 256 + 4 >> 2];
          r2 = r2 * +g[C2 + 256 + 8 >> 2];
          g[C2 + 176 >> 2] = p2;
          g[C2 + 176 + 4 >> 2] = q2;
          g[C2 + 176 + 8 >> 2] = r2;
          g[C2 + 176 + 12 >> 2] = 0;
          e2 = c[b2 + 12 >> 2] | 0;
          s2 = +Cb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 15](e2);
          e2 = c[b2 + 16 >> 2] | 0;
          if (!e2)
            m2 = 0;
          else
            m2 = +Cb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 15](e2);
          s2 = s2 * +G(+(t2 * t2 + u2 * u2 + v2 * v2)) + m2 * +G(+(p2 * p2 + q2 * q2 + r2 * r2));
          if (s2 + +G(+((w2 - z2) * (w2 - z2) + (x2 - A2) * (x2 - A2) + (y2 - B2) * (y2 - B2))) == 0) {
            j2 = 0;
            i = C2;
            return j2 | 0;
          }
          c[C2 + 208 >> 2] = 8756;
          g[C2 + 208 + 36 >> 2] = 999999984306749400;
          a[C2 + 208 + 40 >> 0] = 0;
          vd(b2, d2, f2, C2 + 208 | 0);
          h2 = (a[C2 + 208 + 40 >> 0] | 0) == 0;
          c[C2 + 256 >> 2] = c[C2 + 208 + 20 >> 2];
          c[C2 + 256 + 4 >> 2] = c[C2 + 208 + 20 + 4 >> 2];
          c[C2 + 256 + 8 >> 2] = c[C2 + 208 + 20 + 8 >> 2];
          c[C2 + 256 + 12 >> 2] = c[C2 + 208 + 20 + 12 >> 2];
          a:
            do
              if (!h2 ? (o2 = c[C2 + 208 + 4 >> 2] | 0, k2 = c[C2 + 208 + 8 >> 2] | 0, n2 = c[C2 + 208 + 12 >> 2] | 0, v2 = (w2 - z2) * (c[l >> 2] = o2, +g[l >> 2]), v2 = v2 + (x2 - A2) * (c[l >> 2] = k2, +g[l >> 2]), !(s2 + (v2 + (y2 - B2) * (c[l >> 2] = n2, +g[l >> 2])) <= 11920928955078125e-23)) : 0) {
                m2 = +g[C2 + 208 + 16 >> 2];
                p2 = +g[C2 + 208 + 36 >> 2] + +g[j2 + 172 >> 2];
                b:
                  do
                    if (p2 > 0.0010000000474974513) {
                      h2 = 0;
                      q2 = 0;
                      r2 = p2;
                      while (1) {
                        e2 = c[j2 + 168 >> 2] | 0;
                        if (e2 | 0) {
                          D2 = c[(c[e2 >> 2] | 0) + 28 >> 2] | 0;
                          c[C2 + 112 >> 2] = 1065353216;
                          c[C2 + 112 + 4 >> 2] = 1065353216;
                          c[C2 + 112 + 8 >> 2] = 1065353216;
                          g[C2 + 112 + 12 >> 2] = 0;
                          pb[D2 & 7](e2, C2 + 256 | 0, 0.20000000298023224, C2 + 112 | 0);
                        }
                        m2 = (w2 - z2) * (c[l >> 2] = o2, +g[l >> 2]);
                        m2 = m2 + (x2 - A2) * (c[l >> 2] = k2, +g[l >> 2]);
                        m2 = s2 + (m2 + (y2 - B2) * (c[l >> 2] = n2, +g[l >> 2]));
                        if (m2 <= 11920928955078125e-23) {
                          k2 = 0;
                          break a;
                        }
                        p2 = q2 + r2 / m2;
                        if (!(!(p2 <= q2) & (!(p2 < 0) & !(p2 > 1)))) {
                          k2 = 0;
                          break a;
                        }
                        Mg(d2, z2, A2, B2, C2 + 192 | 0, p2, C2 + 112 | 0);
                        Mg(f2, w2, x2, y2, C2 + 176 | 0, p2, C2 + 48 | 0);
                        k2 = c[j2 + 168 >> 2] | 0;
                        if (k2 | 0) {
                          D2 = c[(c[k2 >> 2] | 0) + 28 >> 2] | 0;
                          c[C2 >> 2] = 1065353216;
                          c[C2 + 4 >> 2] = 0;
                          c[C2 + 8 >> 2] = 0;
                          g[C2 + 12 >> 2] = 0;
                          pb[D2 & 7](k2, C2 + 112 + 48 | 0, 0.20000000298023224, C2);
                        }
                        jb[c[c[j2 >> 2] >> 2] & 31](j2, p2);
                        c[C2 >> 2] = 8756;
                        g[C2 + 36 >> 2] = 999999984306749400;
                        a[C2 + 40 >> 0] = 0;
                        vd(b2, C2 + 112 | 0, C2 + 48 | 0, C2);
                        if (!(a[C2 + 40 >> 0] | 0)) {
                          k2 = 15;
                          break;
                        }
                        m2 = +g[C2 + 36 >> 2];
                        q2 = +g[j2 + 172 >> 2];
                        c[C2 + 256 >> 2] = c[C2 + 20 >> 2];
                        c[C2 + 256 + 4 >> 2] = c[C2 + 20 + 4 >> 2];
                        c[C2 + 256 + 8 >> 2] = c[C2 + 20 + 8 >> 2];
                        c[C2 + 256 + 12 >> 2] = c[C2 + 20 + 12 >> 2];
                        e2 = h2 + 1 | 0;
                        if ((h2 | 0) > 63) {
                          k2 = 16;
                          break;
                        }
                        n2 = c[C2 + 12 >> 2] | 0;
                        k2 = c[C2 + 8 >> 2] | 0;
                        o2 = c[C2 + 4 >> 2] | 0;
                        r2 = m2 + q2;
                        if (!(r2 > 0.0010000000474974513)) {
                          m2 = +g[C2 + 16 >> 2];
                          break b;
                        } else {
                          h2 = e2;
                          q2 = p2;
                        }
                      }
                      if ((k2 | 0) == 15)
                        Ub[c[(c[j2 >> 2] | 0) + 8 >> 2] & 127](j2, -1, h2);
                      else if ((k2 | 0) == 16)
                        Ub[c[(c[j2 >> 2] | 0) + 8 >> 2] & 127](j2, -2, e2);
                      k2 = 0;
                      break a;
                    } else
                      p2 = 0;
                  while (0);
                g[j2 + 164 >> 2] = p2;
                c[j2 + 132 >> 2] = o2;
                c[j2 + 136 >> 2] = k2;
                c[j2 + 140 >> 2] = n2;
                g[j2 + 144 >> 2] = m2;
                c[j2 + 148 >> 2] = c[C2 + 256 >> 2];
                c[j2 + 148 + 4 >> 2] = c[C2 + 256 + 4 >> 2];
                c[j2 + 148 + 8 >> 2] = c[C2 + 256 + 8 >> 2];
                c[j2 + 148 + 12 >> 2] = c[C2 + 256 + 12 >> 2];
                k2 = 1;
              } else
                k2 = 0;
            while (0);
          D2 = k2;
          i = C2;
          return D2 | 0;
        }
        function Kd(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = +h2;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
          D2 = i;
          i = i + 80 | 0;
          o2 = +g[e2 + 4 >> 2];
          p2 = +g[e2 + 20 >> 2];
          q2 = +g[e2 + 36 >> 2];
          r2 = +g[e2 + 8 >> 2];
          s2 = +g[e2 + 24 >> 2];
          t2 = +g[e2 + 40 >> 2];
          u2 = +g[e2 + 12 >> 2];
          v2 = +g[e2 + 28 >> 2];
          w2 = +g[e2 + 44 >> 2];
          x2 = -+g[e2 + 52 >> 2];
          y2 = -+g[e2 + 56 >> 2];
          z2 = -+g[e2 + 60 >> 2];
          l2 = c[b2 + 760 >> 2] | 0;
          A2 = +g[l2 + (d2 * 104 | 0) + 8 >> 2];
          B2 = +g[l2 + (d2 * 104 | 0) + 12 >> 2];
          C2 = +g[l2 + (d2 * 104 | 0) + 16 >> 2];
          a:
            do
              if (f2) {
                f2 = c[b2 + 308 >> 2] | 0;
                b:
                  do
                    if ((f2 | 0) > 0) {
                      k2 = c[b2 + 316 >> 2] | 0;
                      j2 = 0;
                      while (1) {
                        if ((c[k2 + (j2 << 2) >> 2] | 0) == (e2 | 0))
                          break;
                        j2 = j2 + 1 | 0;
                        if ((j2 | 0) >= (f2 | 0))
                          break b;
                      }
                      if ((j2 | 0) != (f2 | 0)) {
                        f2 = l2;
                        break a;
                      }
                    }
                  while (0);
                if ((f2 | 0) == (c[b2 + 312 >> 2] | 0) ? (m2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (m2 | 0)) : 0) {
                  if (!m2)
                    k2 = 0;
                  else {
                    c[6324] = (c[6324] | 0) + 1;
                    f2 = ic((m2 << 2 | 3) + 16 | 0) | 0;
                    if (!f2)
                      f2 = 0;
                    else {
                      c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                      f2 = f2 + 4 + 15 & -16;
                    }
                    k2 = f2;
                    f2 = c[b2 + 308 >> 2] | 0;
                  }
                  if ((f2 | 0) > 0) {
                    j2 = 0;
                    do {
                      c[k2 + (j2 << 2) >> 2] = c[(c[b2 + 316 >> 2] | 0) + (j2 << 2) >> 2];
                      j2 = j2 + 1 | 0;
                    } while ((j2 | 0) != (f2 | 0));
                  }
                  j2 = c[b2 + 316 >> 2] | 0;
                  if (j2) {
                    if (a[b2 + 320 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[j2 + -4 >> 2] | 0);
                      f2 = c[b2 + 308 >> 2] | 0;
                    }
                    c[b2 + 316 >> 2] = 0;
                  }
                  a[b2 + 320 >> 0] = 1;
                  c[b2 + 316 >> 2] = k2;
                  c[b2 + 312 >> 2] = m2;
                }
                c[(c[b2 + 316 >> 2] | 0) + (f2 << 2) >> 2] = e2;
                c[b2 + 308 >> 2] = f2 + 1;
                f2 = c[b2 + 760 >> 2] | 0;
              } else
                f2 = l2;
            while (0);
          l2 = f2 + (d2 * 104 | 0) | 0;
          f2 = f2 + (d2 * 104 | 0) + 100 | 0;
          a[f2 >> 0] = a[f2 >> 0] | 1;
          f2 = c[b2 + 832 >> 2] | 0;
          if ((f2 | 0) == (c[b2 + 836 >> 2] | 0) ? (n2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (n2 | 0)) : 0) {
            if (!n2)
              k2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic(n2 * 96 | 19) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              k2 = f2;
              f2 = c[b2 + 832 >> 2] | 0;
            }
            if ((f2 | 0) > 0) {
              j2 = 0;
              do {
                d2 = k2 + (j2 * 96 | 0) | 0;
                m2 = c[b2 + 840 >> 2] | 0;
                E2 = m2 + (j2 * 96 | 0) | 0;
                c[d2 >> 2] = c[E2 >> 2];
                c[d2 + 4 >> 2] = c[E2 + 4 >> 2];
                c[d2 + 8 >> 2] = c[E2 + 8 >> 2];
                c[d2 + 12 >> 2] = c[E2 + 12 >> 2];
                c[d2 + 16 >> 2] = c[E2 + 16 >> 2];
                c[d2 + 20 >> 2] = c[E2 + 20 >> 2];
                c[d2 + 24 >> 2] = c[E2 + 24 >> 2];
                d2 = k2 + (j2 * 96 | 0) + 28 | 0;
                E2 = m2 + (j2 * 96 | 0) + 28 | 0;
                c[d2 >> 2] = c[E2 >> 2];
                c[d2 + 4 >> 2] = c[E2 + 4 >> 2];
                c[d2 + 8 >> 2] = c[E2 + 8 >> 2];
                c[d2 + 12 >> 2] = c[E2 + 12 >> 2];
                d2 = k2 + (j2 * 96 | 0) + 44 | 0;
                E2 = m2 + (j2 * 96 | 0) + 44 | 0;
                c[d2 >> 2] = c[E2 >> 2];
                c[d2 + 4 >> 2] = c[E2 + 4 >> 2];
                c[d2 + 8 >> 2] = c[E2 + 8 >> 2];
                c[d2 + 12 >> 2] = c[E2 + 12 >> 2];
                d2 = k2 + (j2 * 96 | 0) + 60 | 0;
                E2 = m2 + (j2 * 96 | 0) + 60 | 0;
                c[d2 >> 2] = c[E2 >> 2];
                c[d2 + 4 >> 2] = c[E2 + 4 >> 2];
                c[d2 + 8 >> 2] = c[E2 + 8 >> 2];
                c[d2 + 12 >> 2] = c[E2 + 12 >> 2];
                d2 = k2 + (j2 * 96 | 0) + 76 | 0;
                m2 = m2 + (j2 * 96 | 0) + 76 | 0;
                c[d2 >> 2] = c[m2 >> 2];
                c[d2 + 4 >> 2] = c[m2 + 4 >> 2];
                c[d2 + 8 >> 2] = c[m2 + 8 >> 2];
                c[d2 + 12 >> 2] = c[m2 + 12 >> 2];
                c[d2 + 16 >> 2] = c[m2 + 16 >> 2];
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (f2 | 0));
            }
            f2 = c[b2 + 840 >> 2] | 0;
            if (f2 | 0) {
              if (a[b2 + 844 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[b2 + 840 >> 2] = 0;
            }
            a[b2 + 844 >> 0] = 1;
            c[b2 + 840 >> 2] = k2;
            c[b2 + 836 >> 2] = n2;
            f2 = c[b2 + 832 >> 2] | 0;
          }
          E2 = c[b2 + 840 >> 2] | 0;
          c[E2 + (f2 * 96 | 0) >> 2] = l2;
          g[E2 + (f2 * 96 | 0) + 4 >> 2] = o2 * x2 + p2 * y2 + q2 * z2 + (o2 * A2 + p2 * B2 + q2 * C2);
          g[E2 + (f2 * 96 | 0) + 8 >> 2] = r2 * x2 + s2 * y2 + t2 * z2 + (r2 * A2 + s2 * B2 + t2 * C2);
          g[E2 + (f2 * 96 | 0) + 12 >> 2] = u2 * x2 + v2 * y2 + w2 * z2 + (u2 * A2 + v2 * B2 + w2 * C2);
          g[E2 + (f2 * 96 | 0) + 16 >> 2] = 0;
          c[E2 + (f2 * 96 | 0) + 20 >> 2] = e2;
          g[E2 + (f2 * 96 | 0) + 24 >> 2] = h2;
          e2 = E2 + (f2 * 96 | 0) + 28 | 0;
          c[e2 >> 2] = c[D2 + 56 >> 2];
          c[e2 + 4 >> 2] = c[D2 + 56 + 4 >> 2];
          c[e2 + 8 >> 2] = c[D2 + 56 + 8 >> 2];
          c[e2 + 12 >> 2] = c[D2 + 56 + 12 >> 2];
          e2 = E2 + (f2 * 96 | 0) + 44 | 0;
          c[e2 >> 2] = c[D2 + 40 >> 2];
          c[e2 + 4 >> 2] = c[D2 + 40 + 4 >> 2];
          c[e2 + 8 >> 2] = c[D2 + 40 + 8 >> 2];
          c[e2 + 12 >> 2] = c[D2 + 40 + 12 >> 2];
          e2 = E2 + (f2 * 96 | 0) + 60 | 0;
          c[e2 >> 2] = c[D2 + 24 >> 2];
          c[e2 + 4 >> 2] = c[D2 + 24 + 4 >> 2];
          c[e2 + 8 >> 2] = c[D2 + 24 + 8 >> 2];
          c[e2 + 12 >> 2] = c[D2 + 24 + 12 >> 2];
          E2 = E2 + (f2 * 96 | 0) + 76 | 0;
          c[E2 >> 2] = c[D2 >> 2];
          c[E2 + 4 >> 2] = c[D2 + 4 >> 2];
          c[E2 + 8 >> 2] = c[D2 + 8 >> 2];
          c[E2 + 12 >> 2] = c[D2 + 12 >> 2];
          c[E2 + 16 >> 2] = c[D2 + 16 >> 2];
          c[b2 + 832 >> 2] = (c[b2 + 832 >> 2] | 0) + 1;
          i = D2;
          return;
        }
        function Ld(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
          E2 = i;
          i = i + 32 | 0;
          A2 = +g[b2 + 48 >> 2] - +g[b2 + 112 >> 2];
          h2 = +g[b2 + 52 >> 2] - +g[b2 + 116 >> 2];
          D2 = +g[b2 + 56 >> 2] - +g[b2 + 120 >> 2];
          B2 = A2 * +g[b2 + 64 >> 2] + h2 * +g[b2 + 80 >> 2] + D2 * +g[b2 + 96 >> 2];
          C2 = A2 * +g[b2 + 68 >> 2] + h2 * +g[b2 + 84 >> 2] + D2 * +g[b2 + 100 >> 2];
          D2 = A2 * +g[b2 + 72 >> 2] + h2 * +g[b2 + 88 >> 2] + D2 * +g[b2 + 104 >> 2];
          e2 = c[a2 + 8 >> 2] | 0;
          z2 = c[a2 + 4 >> 2] | 0;
          h2 = +g[z2 + 32 >> 2] * +g[z2 + 16 >> 2];
          A2 = h2 + +g[a2 + 12 >> 2];
          p2 = +g[e2 + 76 >> 2];
          q2 = +g[e2 + 60 >> 2];
          r2 = +g[e2 + 80 >> 2];
          s2 = +g[e2 + 64 >> 2];
          t2 = +g[e2 + 84 >> 2];
          u2 = +g[e2 + 68 >> 2];
          v2 = +g[e2 + 92 >> 2];
          w2 = +g[e2 + 96 >> 2];
          x2 = +g[e2 + 100 >> 2];
          k2 = (r2 - s2) * (x2 - u2) - (t2 - u2) * (w2 - s2);
          m2 = (t2 - u2) * (v2 - q2) - (p2 - q2) * (x2 - u2);
          o2 = (p2 - q2) * (w2 - s2) - (r2 - s2) * (v2 - q2);
          n2 = 1 / +G(+(o2 * o2 + (k2 * k2 + m2 * m2)));
          j2 = (B2 - q2) * n2 * k2 + (C2 - s2) * n2 * m2 + n2 * o2 * (D2 - u2);
          if (j2 < 0) {
            y2 = -j2;
            l2 = -(n2 * k2);
            j2 = -(n2 * m2);
            k2 = -(n2 * o2);
          } else {
            y2 = j2;
            l2 = n2 * k2;
            j2 = n2 * m2;
            k2 = n2 * o2;
          }
          if (!(y2 < A2)) {
            i = E2;
            return;
          }
          o2 = (D2 - u2) * ((p2 - q2) * j2 - (r2 - s2) * l2) + ((B2 - q2) * ((r2 - s2) * k2 - (t2 - u2) * j2) + (C2 - s2) * ((t2 - u2) * l2 - (p2 - q2) * k2));
          t2 = (D2 - t2) * ((v2 - p2) * j2 - (w2 - r2) * l2) + ((B2 - p2) * ((w2 - r2) * k2 - (x2 - t2) * j2) + (C2 - r2) * ((x2 - t2) * l2 - (v2 - p2) * k2));
          x2 = (D2 - x2) * ((q2 - v2) * j2 - (s2 - w2) * l2) + ((B2 - v2) * ((s2 - w2) * k2 - (u2 - x2) * j2) + (C2 - w2) * ((u2 - x2) * l2 - (q2 - v2) * k2));
          if (!(x2 > 0 & (o2 > 0 & t2 > 0)) ? !(x2 <= 0 & (o2 <= 0 & t2 <= 0)) : 0) {
            if ((ob[c[(c[e2 >> 2] | 0) + 100 >> 2] & 127](e2) | 0) <= 0) {
              i = E2;
              return;
            }
            e2 = 0;
            z2 = 0;
            s2 = 0;
            r2 = 0;
            q2 = 0;
            do {
              F2 = c[a2 + 8 >> 2] | 0;
              Yb[c[(c[F2 >> 2] | 0) + 104 >> 2] & 127](F2, z2, E2 + 16 | 0, E2);
              p2 = +g[E2 + 16 >> 2];
              x2 = +g[E2 + 16 + 4 >> 2];
              u2 = +g[E2 + 16 + 8 >> 2];
              t2 = +g[E2 >> 2] - p2;
              y2 = +g[E2 + 4 >> 2] - x2;
              v2 = +g[E2 + 8 >> 2] - u2;
              do
                if ((B2 - p2) * t2 + (C2 - x2) * y2 + (D2 - u2) * v2 > 0)
                  if ((B2 - p2) * t2 + (C2 - x2) * y2 + (D2 - u2) * v2 < t2 * t2 + y2 * y2 + v2 * v2) {
                    o2 = ((B2 - p2) * t2 + (C2 - x2) * y2 + (D2 - u2) * v2) / (t2 * t2 + y2 * y2 + v2 * v2);
                    w2 = o2;
                    m2 = B2 - p2 - t2 * o2;
                    n2 = C2 - x2 - y2 * o2;
                    o2 = D2 - u2 - v2 * o2;
                    break;
                  } else {
                    w2 = 1;
                    m2 = B2 - p2 - t2;
                    n2 = C2 - x2 - y2;
                    o2 = D2 - u2 - v2;
                    break;
                  }
                else {
                  w2 = 0;
                  m2 = B2 - p2;
                  n2 = C2 - x2;
                  o2 = D2 - u2;
                }
              while (0);
              if (m2 * m2 + n2 * n2 + o2 * o2 < A2 * A2) {
                e2 = 1;
                s2 = p2 + t2 * w2;
                r2 = u2 + v2 * w2;
                q2 = x2 + y2 * w2;
              }
              z2 = z2 + 1 | 0;
              F2 = c[a2 + 8 >> 2] | 0;
            } while ((z2 | 0) < (ob[c[(c[F2 >> 2] | 0) + 100 >> 2] & 127](F2) | 0));
            if (!(e2 & 1)) {
              i = E2;
              return;
            } else
              p2 = A2 * A2;
          } else {
            p2 = A2 * A2;
            s2 = B2 - y2 * l2;
            r2 = D2 - y2 * k2;
            q2 = C2 - y2 * j2;
          }
          n2 = B2 - s2;
          o2 = C2 - q2;
          m2 = D2 - r2;
          if (!(n2 * n2 + o2 * o2 + m2 * m2 < p2)) {
            i = E2;
            return;
          }
          if (n2 * n2 + o2 * o2 + m2 * m2 > 11920928955078125e-23) {
            j2 = +G(+(n2 * n2 + o2 * o2 + m2 * m2));
            h2 = h2 - j2;
            l2 = n2 * (1 / j2);
            k2 = m2 * (1 / j2);
            j2 = o2 * (1 / j2);
          }
          h2 = -h2;
          if (f2) {
            x2 = +g[b2 + 64 >> 2];
            y2 = +g[b2 + 68 >> 2];
            A2 = +g[b2 + 72 >> 2];
            B2 = x2 * l2 + y2 * j2 + A2 * k2;
            o2 = +g[b2 + 80 >> 2];
            p2 = +g[b2 + 84 >> 2];
            t2 = +g[b2 + 88 >> 2];
            C2 = l2 * o2 + j2 * p2 + k2 * t2;
            u2 = +g[b2 + 96 >> 2];
            v2 = +g[b2 + 100 >> 2];
            w2 = +g[b2 + 104 >> 2];
            D2 = l2 * u2 + j2 * v2 + k2 * w2;
            g[E2 + 16 >> 2] = -B2;
            g[E2 + 16 + 4 >> 2] = -C2;
            g[E2 + 16 + 8 >> 2] = -D2;
            g[E2 + 16 + 12 >> 2] = 0;
            C2 = s2 * o2 + q2 * p2 + r2 * t2 + +g[b2 + 116 >> 2] + C2 * h2;
            D2 = s2 * u2 + q2 * v2 + r2 * w2 + +g[b2 + 120 >> 2] + D2 * h2;
            g[E2 >> 2] = s2 * x2 + q2 * y2 + r2 * A2 + +g[b2 + 112 >> 2] + B2 * h2;
            g[E2 + 4 >> 2] = C2;
            g[E2 + 8 >> 2] = D2;
            g[E2 + 12 >> 2] = 0;
            Tb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 15](d2, E2 + 16 | 0, E2, h2);
            i = E2;
            return;
          } else {
            F2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
            y2 = +g[b2 + 64 >> 2];
            A2 = +g[b2 + 68 >> 2];
            B2 = +g[b2 + 72 >> 2];
            u2 = +g[b2 + 80 >> 2];
            v2 = +g[b2 + 84 >> 2];
            C2 = +g[b2 + 88 >> 2];
            w2 = +g[b2 + 96 >> 2];
            x2 = +g[b2 + 100 >> 2];
            D2 = +g[b2 + 104 >> 2];
            g[E2 + 16 >> 2] = y2 * l2 + A2 * j2 + B2 * k2;
            g[E2 + 16 + 4 >> 2] = l2 * u2 + j2 * v2 + k2 * C2;
            g[E2 + 16 + 8 >> 2] = l2 * w2 + j2 * x2 + k2 * D2;
            g[E2 + 16 + 12 >> 2] = 0;
            C2 = s2 * u2 + q2 * v2 + r2 * C2 + +g[b2 + 116 >> 2];
            D2 = s2 * w2 + q2 * x2 + r2 * D2 + +g[b2 + 120 >> 2];
            g[E2 >> 2] = s2 * y2 + q2 * A2 + r2 * B2 + +g[b2 + 112 >> 2];
            g[E2 + 4 >> 2] = C2;
            g[E2 + 8 >> 2] = D2;
            g[E2 + 12 >> 2] = 0;
            Tb[F2 & 15](d2, E2 + 16 | 0, E2, h2);
            i = E2;
            return;
          }
        }
        function Md(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0;
          j2 = i;
          i = i + 16 | 0;
          if (!(a[22088] | 0)) {
            a[22088] = 1;
            c[j2 >> 2] = 0;
            c[j2 + 4 >> 2] = 0;
            c[j2 + 8 >> 2] = 0;
            c[j2 + 12 >> 2] = 0;
            If(22832, 0, 0, 0, j2);
          }
          c[5759] = c[5759] | 1;
          g[5804] = 0;
          k2 = +g[5814] * 0;
          l2 = +g[5815] * 0;
          g[5809] = +g[5813] * 0;
          g[5810] = k2;
          g[5811] = l2;
          g[5812] = 0;
          c[5817] = 0;
          c[5818] = 0;
          c[5819] = 0;
          c[5820] = 0;
          l2 = +g[5806] * 0;
          k2 = +g[5807] * 0;
          g[5858] = +g[5805] * 0;
          g[5859] = l2;
          g[5860] = k2;
          g[5861] = 0;
          c[b2 + 4 >> 2] = 6;
          c[b2 + 8 >> 2] = -1;
          c[b2 + 12 >> 2] = -1;
          g[b2 + 16 >> 2] = 34028234663852886e22;
          a[b2 + 20 >> 0] = 1;
          a[b2 + 21 >> 0] = 0;
          c[b2 + 24 >> 2] = -1;
          c[b2 + 28 >> 2] = 22832;
          c[b2 + 32 >> 2] = d2;
          g[b2 + 36 >> 2] = 0;
          g[b2 + 40 >> 2] = 0.30000001192092896;
          c[b2 + 44 >> 2] = 0;
          c[b2 >> 2] = 4328;
          c[b2 + 112 >> 2] = c[e2 >> 2];
          c[b2 + 112 + 4 >> 2] = c[e2 + 4 >> 2];
          c[b2 + 112 + 8 >> 2] = c[e2 + 8 >> 2];
          c[b2 + 112 + 12 >> 2] = c[e2 + 12 >> 2];
          c[b2 + 128 >> 2] = c[e2 + 16 >> 2];
          c[b2 + 128 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[b2 + 128 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[b2 + 128 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          c[b2 + 144 >> 2] = c[e2 + 32 >> 2];
          c[b2 + 144 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[b2 + 144 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[b2 + 144 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          c[b2 + 160 >> 2] = c[e2 + 48 >> 2];
          c[b2 + 160 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[b2 + 160 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[b2 + 160 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          e2 = b2 + 680 | 0;
          h2 = e2 + 48 | 0;
          do {
            c[e2 >> 2] = 0;
            e2 = e2 + 4 | 0;
          } while ((e2 | 0) < (h2 | 0));
          c[b2 + 740 >> 2] = 0;
          c[b2 + 740 + 4 >> 2] = 0;
          c[b2 + 740 + 8 >> 2] = 0;
          c[b2 + 740 + 12 >> 2] = 0;
          c[b2 + 756 >> 2] = 1045220557;
          c[b2 + 760 >> 2] = 1045220557;
          c[b2 + 764 >> 2] = 1045220557;
          c[b2 + 768 >> 2] = 0;
          c[b2 + 768 + 4 >> 2] = 0;
          c[b2 + 768 + 8 >> 2] = 0;
          c[b2 + 768 + 12 >> 2] = 0;
          c[b2 + 768 + 16 >> 2] = 0;
          g[b2 + 728 >> 2] = 0.699999988079071;
          g[b2 + 732 >> 2] = 1;
          g[b2 + 736 >> 2] = 0.5;
          a[b2 + 788 >> 0] = 0;
          g[b2 + 792 >> 2] = 0;
          g[b2 + 808 >> 2] = 0;
          a[b2 + 789 >> 0] = 0;
          g[b2 + 796 >> 2] = 0;
          g[b2 + 812 >> 2] = 0;
          a[b2 + 790 >> 0] = 0;
          g[b2 + 800 >> 2] = 0;
          g[b2 + 816 >> 2] = 0;
          g[b2 + 928 >> 2] = 0;
          g[b2 + 876 >> 2] = 0;
          g[b2 + 880 >> 2] = 0.10000000149011612;
          g[b2 + 884 >> 2] = 300;
          g[b2 + 868 >> 2] = 1;
          g[b2 + 872 >> 2] = -1;
          g[b2 + 896 >> 2] = 0;
          g[b2 + 900 >> 2] = 0.20000000298023224;
          g[b2 + 904 >> 2] = 0;
          g[b2 + 908 >> 2] = 0;
          g[b2 + 888 >> 2] = 1;
          g[b2 + 892 >> 2] = 0.5;
          c[b2 + 924 >> 2] = 0;
          g[b2 + 916 >> 2] = 0;
          a[b2 + 912 >> 0] = 0;
          g[b2 + 992 >> 2] = 0;
          g[b2 + 940 >> 2] = 0;
          g[b2 + 944 >> 2] = 0.10000000149011612;
          g[b2 + 948 >> 2] = 300;
          g[b2 + 932 >> 2] = 1;
          g[b2 + 936 >> 2] = -1;
          g[b2 + 960 >> 2] = 0;
          g[b2 + 964 >> 2] = 0.20000000298023224;
          g[b2 + 968 >> 2] = 0;
          g[b2 + 972 >> 2] = 0;
          g[b2 + 952 >> 2] = 1;
          g[b2 + 956 >> 2] = 0.5;
          c[b2 + 988 >> 2] = 0;
          g[b2 + 980 >> 2] = 0;
          a[b2 + 976 >> 0] = 0;
          g[b2 + 1056 >> 2] = 0;
          g[b2 + 1004 >> 2] = 0;
          g[b2 + 1008 >> 2] = 0.10000000149011612;
          g[b2 + 1012 >> 2] = 300;
          g[b2 + 996 >> 2] = 1;
          g[b2 + 1e3 >> 2] = -1;
          g[b2 + 1024 >> 2] = 0;
          g[b2 + 1028 >> 2] = 0.20000000298023224;
          g[b2 + 1032 >> 2] = 0;
          g[b2 + 1036 >> 2] = 0;
          g[b2 + 1016 >> 2] = 1;
          g[b2 + 1020 >> 2] = 0.5;
          c[b2 + 1052 >> 2] = 0;
          g[b2 + 1044 >> 2] = 0;
          a[b2 + 1040 >> 0] = 0;
          a[b2 + 1300 >> 0] = f2 & 1;
          a[b2 + 1301 >> 0] = 1;
          c[b2 + 1304 >> 2] = 0;
          a[b2 + 1308 >> 0] = 0;
          y2 = +g[b2 + 112 >> 2];
          E2 = +g[d2 + 4 >> 2];
          x2 = +g[b2 + 128 >> 2];
          D2 = +g[d2 + 8 >> 2];
          w2 = +g[b2 + 144 >> 2];
          C2 = +g[d2 + 12 >> 2];
          v2 = +g[b2 + 116 >> 2];
          u2 = +g[b2 + 132 >> 2];
          t2 = +g[b2 + 148 >> 2];
          s2 = +g[b2 + 120 >> 2];
          q2 = +g[b2 + 136 >> 2];
          o2 = +g[b2 + 152 >> 2];
          B2 = +g[d2 + 20 >> 2];
          A2 = +g[d2 + 24 >> 2];
          z2 = +g[d2 + 28 >> 2];
          r2 = +g[d2 + 36 >> 2];
          p2 = +g[d2 + 40 >> 2];
          n2 = +g[d2 + 44 >> 2];
          G2 = +g[b2 + 160 >> 2];
          F2 = +g[b2 + 164 >> 2];
          l2 = +g[b2 + 168 >> 2];
          m2 = +g[d2 + 52 >> 2] + (E2 * G2 + D2 * F2 + C2 * l2);
          k2 = B2 * G2 + A2 * F2 + z2 * l2 + +g[d2 + 56 >> 2];
          l2 = r2 * G2 + p2 * F2 + n2 * l2 + +g[d2 + 60 >> 2];
          g[b2 + 48 >> 2] = y2 * E2 + x2 * D2 + w2 * C2;
          g[b2 + 52 >> 2] = E2 * v2 + D2 * u2 + C2 * t2;
          g[b2 + 56 >> 2] = E2 * s2 + D2 * q2 + C2 * o2;
          g[b2 + 60 >> 2] = 0;
          g[b2 + 64 >> 2] = y2 * B2 + x2 * A2 + w2 * z2;
          g[b2 + 68 >> 2] = v2 * B2 + u2 * A2 + t2 * z2;
          g[b2 + 72 >> 2] = s2 * B2 + q2 * A2 + o2 * z2;
          g[b2 + 76 >> 2] = 0;
          g[b2 + 80 >> 2] = y2 * r2 + x2 * p2 + w2 * n2;
          g[b2 + 84 >> 2] = v2 * r2 + u2 * p2 + t2 * n2;
          g[b2 + 88 >> 2] = s2 * r2 + q2 * p2 + o2 * n2;
          g[b2 + 92 >> 2] = 0;
          g[b2 + 96 >> 2] = m2;
          g[b2 + 100 >> 2] = k2;
          g[b2 + 104 >> 2] = l2;
          g[b2 + 108 >> 2] = 0;
          ed(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
          i = j2;
          return;
        }
        function Nd(b2, d2, e2, f2, h2, j2, k2, l2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = +h2;
          j2 = +j2;
          k2 = k2 | 0;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          w2 = i;
          i = i + 288 | 0;
          c[w2 + 208 >> 2] = c[d2 >> 2];
          c[w2 + 208 + 4 >> 2] = c[d2 + 4 >> 2];
          c[w2 + 208 + 8 >> 2] = c[d2 + 8 >> 2];
          c[w2 + 208 + 12 >> 2] = c[d2 + 12 >> 2];
          o2 = w2 + 208 + 16 | 0;
          c[o2 >> 2] = c[e2 >> 2];
          c[o2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[o2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[o2 + 12 >> 2] = c[e2 + 12 >> 2];
          e2 = w2 + 208 + 32 | 0;
          c[e2 >> 2] = c[f2 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
          v2 = c[k2 >> 2] | 0;
          q2 = c[k2 + 4 >> 2] | 0;
          r2 = c[k2 + 8 >> 2] | 0;
          s2 = c[k2 + 16 >> 2] | 0;
          t2 = c[k2 + 12 >> 2] | 0;
          p2 = c[k2 + 20 >> 2] | 0;
          c[w2 + 156 >> 2] = c[w2 + 208 >> 2];
          c[w2 + 156 + 4 >> 2] = c[w2 + 208 + 4 >> 2];
          c[w2 + 156 + 8 >> 2] = c[w2 + 208 + 8 >> 2];
          c[w2 + 156 + 12 >> 2] = c[w2 + 208 + 12 >> 2];
          c[w2 + 172 >> 2] = c[o2 >> 2];
          c[w2 + 172 + 4 >> 2] = c[o2 + 4 >> 2];
          c[w2 + 172 + 8 >> 2] = c[o2 + 8 >> 2];
          c[w2 + 172 + 12 >> 2] = c[o2 + 12 >> 2];
          c[w2 + 188 >> 2] = c[e2 >> 2];
          c[w2 + 188 + 4 >> 2] = c[e2 + 4 >> 2];
          c[w2 + 188 + 8 >> 2] = c[e2 + 8 >> 2];
          c[w2 + 188 + 12 >> 2] = c[e2 + 12 >> 2];
          e2 = c[b2 + 128 >> 2] | 0;
          if ((e2 | 0) == (c[b2 + 132 >> 2] | 0) ? (u2 = e2 | 0 ? e2 << 1 : 1, (e2 | 0) < (u2 | 0)) : 0) {
            if (!u2)
              d2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              d2 = ic((u2 * 284 | 3) + 16 | 0) | 0;
              if (!d2)
                d2 = 0;
              else {
                c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                d2 = d2 + 4 + 15 & -16;
              }
              e2 = c[b2 + 128 >> 2] | 0;
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                k2 = c[b2 + 136 >> 2] | 0;
                m2 = d2 + (f2 * 284 | 0) | 0;
                n2 = k2 + (f2 * 284 | 0) | 0;
                o2 = m2 + 92 | 0;
                do {
                  c[m2 >> 2] = c[n2 >> 2];
                  m2 = m2 + 4 | 0;
                  n2 = n2 + 4 | 0;
                } while ((m2 | 0) < (o2 | 0));
                m2 = d2 + (f2 * 284 | 0) + 92 | 0;
                n2 = k2 + (f2 * 284 | 0) + 92 | 0;
                c[m2 >> 2] = c[n2 >> 2];
                c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
                m2 = d2 + (f2 * 284 | 0) + 108 | 0;
                n2 = k2 + (f2 * 284 | 0) + 108 | 0;
                c[m2 >> 2] = c[n2 >> 2];
                c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
                m2 = d2 + (f2 * 284 | 0) + 124 | 0;
                n2 = k2 + (f2 * 284 | 0) + 124 | 0;
                c[m2 >> 2] = c[n2 >> 2];
                c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
                m2 = d2 + (f2 * 284 | 0) + 140 | 0;
                n2 = k2 + (f2 * 284 | 0) + 140 | 0;
                c[m2 >> 2] = c[n2 >> 2];
                c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
                c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
                c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
                m2 = d2 + (f2 * 284 | 0) + 156 | 0;
                n2 = k2 + (f2 * 284 | 0) + 156 | 0;
                o2 = m2 + 128 | 0;
                do {
                  c[m2 >> 2] = c[n2 >> 2];
                  m2 = m2 + 4 | 0;
                  n2 = n2 + 4 | 0;
                } while ((m2 | 0) < (o2 | 0));
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (e2 | 0));
            }
            e2 = c[b2 + 136 >> 2] | 0;
            if (e2 | 0) {
              if (a[b2 + 140 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[e2 + -4 >> 2] | 0);
              }
              c[b2 + 136 >> 2] = 0;
            }
            a[b2 + 140 >> 0] = 1;
            c[b2 + 136 >> 2] = d2;
            c[b2 + 132 >> 2] = u2;
            e2 = c[b2 + 128 >> 2] | 0;
          }
          d2 = c[b2 + 136 >> 2] | 0;
          m2 = d2 + (e2 * 284 | 0) | 0;
          n2 = w2;
          o2 = m2 + 92 | 0;
          do {
            c[m2 >> 2] = c[n2 >> 2];
            m2 = m2 + 4 | 0;
            n2 = n2 + 4 | 0;
          } while ((m2 | 0) < (o2 | 0));
          m2 = d2 + (e2 * 284 | 0) + 92 | 0;
          c[m2 >> 2] = c[w2 + 92 >> 2];
          c[m2 + 4 >> 2] = c[w2 + 92 + 4 >> 2];
          c[m2 + 8 >> 2] = c[w2 + 92 + 8 >> 2];
          c[m2 + 12 >> 2] = c[w2 + 92 + 12 >> 2];
          m2 = d2 + (e2 * 284 | 0) + 108 | 0;
          c[m2 >> 2] = c[w2 + 108 >> 2];
          c[m2 + 4 >> 2] = c[w2 + 108 + 4 >> 2];
          c[m2 + 8 >> 2] = c[w2 + 108 + 8 >> 2];
          c[m2 + 12 >> 2] = c[w2 + 108 + 12 >> 2];
          m2 = d2 + (e2 * 284 | 0) + 124 | 0;
          c[m2 >> 2] = c[w2 + 124 >> 2];
          c[m2 + 4 >> 2] = c[w2 + 124 + 4 >> 2];
          c[m2 + 8 >> 2] = c[w2 + 124 + 8 >> 2];
          c[m2 + 12 >> 2] = c[w2 + 124 + 12 >> 2];
          m2 = d2 + (e2 * 284 | 0) + 140 | 0;
          c[m2 >> 2] = c[w2 + 140 >> 2];
          c[m2 + 4 >> 2] = c[w2 + 140 + 4 >> 2];
          c[m2 + 8 >> 2] = c[w2 + 140 + 8 >> 2];
          c[m2 + 12 >> 2] = c[w2 + 140 + 12 >> 2];
          d2 = d2 + (e2 * 284 | 0) + 156 | 0;
          m2 = d2;
          n2 = w2 + 156 | 0;
          o2 = m2 + 48 | 0;
          do {
            c[m2 >> 2] = c[n2 >> 2];
            m2 = m2 + 4 | 0;
            n2 = n2 + 4 | 0;
          } while ((m2 | 0) < (o2 | 0));
          g[d2 + 48 >> 2] = h2;
          c[d2 + 52 >> 2] = t2;
          g[d2 + 56 >> 2] = j2;
          c[d2 + 60 >> 2] = v2;
          c[d2 + 64 >> 2] = q2;
          c[d2 + 68 >> 2] = r2;
          c[d2 + 72 >> 2] = s2;
          g[d2 + 76 >> 2] = 0;
          g[d2 + 80 >> 2] = 0;
          g[d2 + 84 >> 2] = 0;
          g[d2 + 88 >> 2] = 0.10000000149011612;
          c[d2 + 92 >> 2] = p2;
          g[d2 + 96 >> 2] = 0;
          g[d2 + 100 >> 2] = 0;
          a[d2 + 104 >> 0] = l2 & 1;
          m2 = d2 + 105 | 0;
          n2 = w2 + 256 | 0;
          o2 = m2 + 23 | 0;
          do {
            a[m2 >> 0] = a[n2 >> 0] | 0;
            m2 = m2 + 1 | 0;
            n2 = n2 + 1 | 0;
          } while ((m2 | 0) < (o2 | 0));
          l2 = c[b2 + 128 >> 2] | 0;
          c[b2 + 128 >> 2] = l2 + 1;
          l2 = (c[b2 + 136 >> 2] | 0) + (l2 * 284 | 0) | 0;
          Gg(c[b2 + 108 >> 2] | 0, l2, 0);
          me(c[b2 + 108 >> 2] | 0, c[b2 + 136 >> 2] | 0, (c[b2 + 128 >> 2] | 0) + -1 | 0, 0);
          i = w2;
          return l2 | 0;
        }
        function Od(a2, d2, f2, h2, j2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0;
          I2 = i;
          i = i + 16 | 0;
          c[d2 + 16 >> 2] = c[f2 >> 2];
          c[d2 + 16 + 4 >> 2] = c[f2 + 4 >> 2];
          c[d2 + 16 + 8 >> 2] = c[f2 + 8 >> 2];
          c[d2 + 16 + 12 >> 2] = c[f2 + 12 >> 2];
          c[d2 + 32 >> 2] = c[h2 >> 2];
          c[d2 + 32 + 4 >> 2] = c[h2 + 4 >> 2];
          c[d2 + 32 + 8 >> 2] = c[h2 + 8 >> 2];
          c[d2 + 32 + 12 >> 2] = c[h2 + 12 >> 2];
          x2 = c[a2 + 60 >> 2] | 0;
          y2 = c[d2 + 12 >> 2] & 65535;
          lj(a2, I2 + 6 | 0, +g[f2 >> 2], +g[f2 + 4 >> 2], +g[f2 + 8 >> 2], 0);
          lj(a2, I2, +g[h2 >> 2], +g[h2 + 4 >> 2], +g[h2 + 8 >> 2], 1);
          u2 = 0;
          do {
            t2 = b[x2 + (y2 << 6) + 48 + (u2 << 1) >> 1] | 0;
            A2 = b[x2 + (y2 << 6) + 54 + (u2 << 1) >> 1] | 0;
            q2 = b[I2 + 6 + (u2 << 1) >> 1] | 0;
            n2 = a2 + 68 + (u2 << 2) | 0;
            s2 = c[n2 >> 2] | 0;
            o2 = (q2 & 65535) - (e[s2 + ((t2 & 65535) << 2) >> 1] | 0) | 0;
            r2 = b[I2 + (u2 << 1) >> 1] | 0;
            B2 = (r2 & 65535) - (e[s2 + ((A2 & 65535) << 2) >> 1] | 0) | 0;
            b[s2 + ((t2 & 65535) << 2) >> 1] = q2;
            b[s2 + ((A2 & 65535) << 2) >> 1] = r2;
            if ((o2 | 0) < 0)
              ph(a2, u2, t2);
            a:
              do
                if ((B2 | 0) > 0 ? (C2 = c[n2 >> 2] | 0, D2 = c[a2 + 60 >> 2] | 0, E2 = e[C2 + ((A2 & 65535) << 2) + 2 >> 1] | 0, F2 = b[C2 + ((A2 & 65535) << 2) + 6 >> 1] | 0, F2 << 16 >> 16) : 0) {
                  p2 = 1 << u2 & 3;
                  q2 = D2 + (E2 << 6) + 54 + (u2 << 1) | 0;
                  l2 = C2 + ((A2 & 65535) << 2) | 0;
                  k2 = F2;
                  do {
                    m2 = l2;
                    l2 = l2 + 4 | 0;
                    r2 = b[l2 >> 1] | 0;
                    if ((e[m2 >> 1] | 0) < (r2 & 65535))
                      break a;
                    s2 = c[a2 + 60 >> 2] | 0;
                    k2 = k2 & 65535;
                    if (!(r2 & 1)) {
                      if (((((e[D2 + (E2 << 6) + 54 + (p2 << 1) >> 1] | 0) >= (e[s2 + (k2 << 6) + 48 + (p2 << 1) >> 1] | 0) ? (e[s2 + (k2 << 6) + 54 + (p2 << 1) >> 1] | 0) >= (e[D2 + (E2 << 6) + 48 + (p2 << 1) >> 1] | 0) : 0) ? (e[D2 + (E2 << 6) + 54 + ((1 << p2 & 3) << 1) >> 1] | 0) >= (e[s2 + (k2 << 6) + 48 + ((1 << p2 & 3) << 1) >> 1] | 0) : 0) ? (e[s2 + (k2 << 6) + 54 + ((1 << p2 & 3) << 1) >> 1] | 0) >= (e[D2 + (E2 << 6) + 48 + ((1 << p2 & 3) << 1) >> 1] | 0) : 0) ? (H2 = c[a2 + 92 >> 2] | 0, G2 = s2 + ((e[m2 + 2 >> 1] | 0) << 6) | 0, yb[c[(c[H2 >> 2] | 0) + 8 >> 2] & 63](H2, G2, s2 + (k2 << 6) | 0) | 0, H2 = c[a2 + 96 >> 2] | 0, H2 | 0) : 0)
                        yb[c[(c[H2 >> 2] | 0) + 8 >> 2] & 63](H2, G2, s2 + (k2 << 6) | 0) | 0;
                      s2 = s2 + (k2 << 6) + 48 + (u2 << 1) | 0;
                      b[s2 >> 1] = (b[s2 >> 1] | 0) + -1 << 16 >> 16;
                    } else {
                      s2 = s2 + (k2 << 6) + 54 + (u2 << 1) | 0;
                      b[s2 >> 1] = (b[s2 >> 1] | 0) + -1 << 16 >> 16;
                    }
                    b[q2 >> 1] = (b[q2 >> 1] | 0) + 1 << 16 >> 16;
                    k2 = e[m2 >> 1] | e[m2 + 2 >> 1] << 16;
                    s2 = e[l2 >> 1] | e[l2 + 2 >> 1] << 16;
                    b[m2 >> 1] = s2;
                    b[m2 + 2 >> 1] = s2 >>> 16;
                    b[l2 >> 1] = k2;
                    b[l2 + 2 >> 1] = k2 >>> 16;
                    k2 = b[m2 + 10 >> 1] | 0;
                  } while (k2 << 16 >> 16 != 0);
                }
              while (0);
            b:
              do
                if ((o2 | 0) > 0 ? (v2 = c[n2 >> 2] | 0, w2 = b[v2 + ((t2 & 65535) << 2) + 6 >> 1] | 0, w2 << 16 >> 16) : 0) {
                  q2 = (c[a2 + 60 >> 2] | 0) + ((e[v2 + ((t2 & 65535) << 2) + 2 >> 1] | 0) << 6) + 48 + (u2 << 1) | 0;
                  r2 = 1 << u2 & 3;
                  n2 = v2 + ((t2 & 65535) << 2) | 0;
                  k2 = w2;
                  do {
                    o2 = n2;
                    n2 = n2 + 4 | 0;
                    l2 = b[n2 >> 1] | 0;
                    if ((e[o2 >> 1] | 0) < (l2 & 65535))
                      break b;
                    p2 = c[a2 + 60 >> 2] | 0;
                    m2 = k2 & 65535;
                    if (!(l2 & 1)) {
                      t2 = p2 + (m2 << 6) + 48 + (u2 << 1) | 0;
                      b[t2 >> 1] = (b[t2 >> 1] | 0) + -1 << 16 >> 16;
                    } else {
                      k2 = e[o2 + 2 >> 1] | 0;
                      if (((((e[p2 + (k2 << 6) + 54 + (r2 << 1) >> 1] | 0) >= (e[p2 + (m2 << 6) + 48 + (r2 << 1) >> 1] | 0) ? (e[p2 + (m2 << 6) + 54 + (r2 << 1) >> 1] | 0) >= (e[p2 + (k2 << 6) + 48 + (r2 << 1) >> 1] | 0) : 0) ? (e[p2 + (k2 << 6) + 54 + ((1 << r2 & 3) << 1) >> 1] | 0) >= (e[p2 + (m2 << 6) + 48 + ((1 << r2 & 3) << 1) >> 1] | 0) : 0) ? (e[p2 + (m2 << 6) + 54 + ((1 << r2 & 3) << 1) >> 1] | 0) >= (e[p2 + (k2 << 6) + 48 + ((1 << r2 & 3) << 1) >> 1] | 0) : 0) ? (z2 = c[a2 + 92 >> 2] | 0, sb[c[(c[z2 >> 2] | 0) + 12 >> 2] & 31](z2, p2 + (k2 << 6) | 0, p2 + (m2 << 6) | 0, j2) | 0, z2 = c[a2 + 96 >> 2] | 0, z2 | 0) : 0)
                        sb[c[(c[z2 >> 2] | 0) + 12 >> 2] & 31](z2, p2 + (k2 << 6) | 0, p2 + (m2 << 6) | 0, j2) | 0;
                      t2 = p2 + (m2 << 6) + 54 + (u2 << 1) | 0;
                      b[t2 >> 1] = (b[t2 >> 1] | 0) + -1 << 16 >> 16;
                    }
                    b[q2 >> 1] = (b[q2 >> 1] | 0) + 1 << 16 >> 16;
                    k2 = e[o2 >> 1] | e[o2 + 2 >> 1] << 16;
                    t2 = e[n2 >> 1] | e[n2 + 2 >> 1] << 16;
                    b[o2 >> 1] = t2;
                    b[o2 + 2 >> 1] = t2 >>> 16;
                    b[n2 >> 1] = k2;
                    b[n2 + 2 >> 1] = k2 >>> 16;
                    k2 = b[o2 + 10 >> 1] | 0;
                  } while (k2 << 16 >> 16 != 0);
                }
              while (0);
            if ((B2 | 0) < 0)
              ih(a2, u2, A2, j2);
            u2 = u2 + 1 | 0;
          } while ((u2 | 0) != 3);
          k2 = c[a2 + 108 >> 2] | 0;
          if (!k2) {
            i = I2;
            return;
          }
          ib[c[(c[k2 >> 2] | 0) + 16 >> 2] & 31](k2, c[d2 + 60 >> 2] | 0, f2, h2, j2);
          i = I2;
          return;
        }
        function Pd(b2, d2, e2, f2, g2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          if ((h2 | 0) < 0) {
            o2 = c[b2 + 8 >> 2] | 0;
            +Lb[c[(c[o2 >> 2] | 0) + 12 >> 2] & 3](o2, d2, e2, f2, g2, c[b2 + 12 >> 2] | 0, c[b2 + 16 >> 2] | 0, c[b2 + 4 >> 2] | 0, c[b2 + 20 >> 2] | 0, c[b2 + 24 >> 2] | 0);
            return;
          }
          o2 = c[b2 + 16 >> 2] | 0;
          a:
            do
              if ((o2 | 0) > 0) {
                m2 = c[b2 + 12 >> 2] | 0;
                i2 = 0;
                while (1) {
                  l2 = m2 + (i2 << 2) | 0;
                  k2 = c[l2 >> 2] | 0;
                  j2 = c[(c[k2 + 28 >> 2] | 0) + 208 >> 2] | 0;
                  if ((j2 | 0) <= -1)
                    j2 = c[(c[k2 + 32 >> 2] | 0) + 208 >> 2] | 0;
                  if ((j2 | 0) == (h2 | 0))
                    break a;
                  i2 = i2 + 1 | 0;
                  if ((i2 | 0) >= (o2 | 0)) {
                    l2 = 0;
                    break;
                  }
                }
              } else {
                l2 = 0;
                i2 = 0;
              }
            while (0);
          if ((i2 | 0) < (o2 | 0)) {
            n2 = c[b2 + 12 >> 2] | 0;
            j2 = 0;
            do {
              m2 = c[n2 + (i2 << 2) >> 2] | 0;
              k2 = c[(c[m2 + 28 >> 2] | 0) + 208 >> 2] | 0;
              if ((k2 | 0) <= -1)
                k2 = c[(c[m2 + 32 >> 2] | 0) + 208 >> 2] | 0;
              j2 = ((k2 | 0) == (h2 | 0) & 1) + j2 | 0;
              i2 = i2 + 1 | 0;
            } while ((i2 | 0) != (o2 | 0));
            o2 = j2;
          } else
            o2 = 0;
          i2 = c[b2 + 4 >> 2] | 0;
          if ((c[i2 + 72 >> 2] | 0) < 2) {
            h2 = c[b2 + 8 >> 2] | 0;
            +Lb[c[(c[h2 >> 2] | 0) + 12 >> 2] & 3](h2, d2, e2, f2, g2, l2, o2, i2, c[b2 + 20 >> 2] | 0, c[b2 + 24 >> 2] | 0);
            return;
          }
          if ((e2 | 0) > 0) {
            n2 = 0;
            i2 = c[b2 + 32 >> 2] | 0;
            j2 = c[b2 + 36 >> 2] | 0;
            do {
              h2 = d2 + (n2 << 2) | 0;
              if ((i2 | 0) == (j2 | 0)) {
                m2 = j2 | 0 ? j2 << 1 : 1;
                if ((j2 | 0) < (m2 | 0)) {
                  if (!m2)
                    i2 = 0;
                  else {
                    c[6324] = (c[6324] | 0) + 1;
                    i2 = ic((m2 << 2 | 3) + 16 | 0) | 0;
                    if (!i2)
                      i2 = 0;
                    else {
                      c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
                      i2 = i2 + 4 + 15 & -16;
                    }
                    j2 = c[b2 + 32 >> 2] | 0;
                  }
                  if ((j2 | 0) > 0) {
                    k2 = 0;
                    do {
                      c[i2 + (k2 << 2) >> 2] = c[(c[b2 + 40 >> 2] | 0) + (k2 << 2) >> 2];
                      k2 = k2 + 1 | 0;
                    } while ((k2 | 0) != (j2 | 0));
                  }
                  k2 = c[b2 + 40 >> 2] | 0;
                  if (k2) {
                    if (a[b2 + 44 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[k2 + -4 >> 2] | 0);
                      j2 = c[b2 + 32 >> 2] | 0;
                    }
                    c[b2 + 40 >> 2] = 0;
                  }
                  a[b2 + 44 >> 0] = 1;
                  c[b2 + 40 >> 2] = i2;
                  c[b2 + 36 >> 2] = m2;
                  i2 = j2;
                  j2 = m2;
                } else
                  i2 = j2;
              }
              c[(c[b2 + 40 >> 2] | 0) + (i2 << 2) >> 2] = c[h2 >> 2];
              i2 = i2 + 1 | 0;
              c[b2 + 32 >> 2] = i2;
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != (e2 | 0));
          }
          if ((g2 | 0) > 0) {
            n2 = 0;
            i2 = c[b2 + 52 >> 2] | 0;
            j2 = c[b2 + 56 >> 2] | 0;
            do {
              h2 = f2 + (n2 << 2) | 0;
              if ((i2 | 0) == (j2 | 0)) {
                m2 = j2 | 0 ? j2 << 1 : 1;
                if ((j2 | 0) < (m2 | 0)) {
                  if (!m2)
                    i2 = 0;
                  else {
                    c[6324] = (c[6324] | 0) + 1;
                    i2 = ic((m2 << 2 | 3) + 16 | 0) | 0;
                    if (!i2)
                      i2 = 0;
                    else {
                      c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
                      i2 = i2 + 4 + 15 & -16;
                    }
                    j2 = c[b2 + 52 >> 2] | 0;
                  }
                  if ((j2 | 0) > 0) {
                    k2 = 0;
                    do {
                      c[i2 + (k2 << 2) >> 2] = c[(c[b2 + 60 >> 2] | 0) + (k2 << 2) >> 2];
                      k2 = k2 + 1 | 0;
                    } while ((k2 | 0) != (j2 | 0));
                  }
                  k2 = c[b2 + 60 >> 2] | 0;
                  if (k2) {
                    if (a[b2 + 64 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[k2 + -4 >> 2] | 0);
                      j2 = c[b2 + 52 >> 2] | 0;
                    }
                    c[b2 + 60 >> 2] = 0;
                  }
                  a[b2 + 64 >> 0] = 1;
                  c[b2 + 60 >> 2] = i2;
                  c[b2 + 56 >> 2] = m2;
                  i2 = j2;
                  j2 = m2;
                } else
                  i2 = j2;
              }
              c[(c[b2 + 60 >> 2] | 0) + (i2 << 2) >> 2] = c[h2 >> 2];
              i2 = i2 + 1 | 0;
              c[b2 + 52 >> 2] = i2;
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != (g2 | 0));
          }
          if ((o2 | 0) > 0) {
            h2 = 0;
            i2 = c[b2 + 72 >> 2] | 0;
            j2 = c[b2 + 76 >> 2] | 0;
            do {
              n2 = l2 + (h2 << 2) | 0;
              if ((i2 | 0) == (j2 | 0)) {
                m2 = j2 | 0 ? j2 << 1 : 1;
                if ((j2 | 0) < (m2 | 0)) {
                  if (!m2) {
                    k2 = 0;
                    i2 = j2;
                  } else {
                    c[6324] = (c[6324] | 0) + 1;
                    i2 = ic((m2 << 2 | 3) + 16 | 0) | 0;
                    if (!i2)
                      i2 = 0;
                    else {
                      c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
                      i2 = i2 + 4 + 15 & -16;
                    }
                    k2 = i2;
                    i2 = c[b2 + 72 >> 2] | 0;
                  }
                  if ((i2 | 0) > 0) {
                    j2 = 0;
                    do {
                      c[k2 + (j2 << 2) >> 2] = c[(c[b2 + 80 >> 2] | 0) + (j2 << 2) >> 2];
                      j2 = j2 + 1 | 0;
                    } while ((j2 | 0) != (i2 | 0));
                  }
                  j2 = c[b2 + 80 >> 2] | 0;
                  if (j2) {
                    if (a[b2 + 84 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[j2 + -4 >> 2] | 0);
                      i2 = c[b2 + 72 >> 2] | 0;
                    }
                    c[b2 + 80 >> 2] = 0;
                  }
                  a[b2 + 84 >> 0] = 1;
                  c[b2 + 80 >> 2] = k2;
                  c[b2 + 76 >> 2] = m2;
                  j2 = m2;
                } else
                  i2 = j2;
              }
              c[(c[b2 + 80 >> 2] | 0) + (i2 << 2) >> 2] = c[n2 >> 2];
              i2 = i2 + 1 | 0;
              c[b2 + 72 >> 2] = i2;
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != (o2 | 0));
          } else
            i2 = c[b2 + 72 >> 2] | 0;
          if (((c[b2 + 52 >> 2] | 0) + i2 | 0) <= (c[(c[b2 + 4 >> 2] | 0) + 72 >> 2] | 0))
            return;
          ah(b2);
          return;
        }
        function Qd(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          c[b2 + 24 >> 2] = d2;
          g[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 36 >> 2] = 1;
          g[b2 + 40 >> 2] = 1;
          a[b2 + 44 >> 0] = 1;
          c[b2 + 48 >> 2] = 0;
          a[b2 + 52 >> 0] = 0;
          a[b2 + 53 >> 0] = 1;
          a[b2 + 54 >> 0] = 1;
          g[b2 + 56 >> 2] = 0.03999999910593033;
          a[b2 + 60 >> 0] = 0;
          g[b2 + 64 >> 2] = 0;
          c[b2 + 68 >> 2] = e2;
          c[b2 + 72 >> 2] = 0;
          a[b2 + 76 >> 0] = 1;
          c[b2 + 80 >> 2] = 0;
          c[b2 + 84 >> 2] = 0;
          c[b2 + 88 >> 2] = 0;
          g[b2 + 92 >> 2] = 0.6000000238418579;
          g[b2 + 96 >> 2] = 1;
          g[b2 + 100 >> 2] = 0.30000001192092896;
          g[b2 + 104 >> 2] = 0.01666666753590107;
          g[b2 + 108 >> 2] = 0;
          g[b2 + 116 >> 2] = 20;
          c[b2 + 112 >> 2] = 10;
          g[b2 + 124 >> 2] = 0.20000000298023224;
          g[b2 + 128 >> 2] = 0.20000000298023224;
          g[b2 + 132 >> 2] = 0;
          g[b2 + 120 >> 2] = 1;
          c[b2 + 136 >> 2] = 1;
          g[b2 + 140 >> 2] = -0.03999999910593033;
          g[b2 + 144 >> 2] = 0.10000000149011612;
          g[b2 + 148 >> 2] = 0;
          g[b2 + 152 >> 2] = 0.8500000238418579;
          c[b2 + 156 >> 2] = 260;
          c[b2 + 160 >> 2] = 2;
          c[b2 + 164 >> 2] = 128;
          g[b2 + 168 >> 2] = 100;
          g[b2 + 172 >> 2] = 10000000150474662e14;
          c[b2 >> 2] = 4680;
          a[b2 + 192 >> 0] = 1;
          c[b2 + 188 >> 2] = 0;
          c[b2 + 180 >> 2] = 0;
          c[b2 + 184 >> 2] = 0;
          c[b2 + 196 >> 2] = 0;
          c[b2 + 200 >> 2] = f2;
          a[b2 + 224 >> 0] = 1;
          c[b2 + 220 >> 2] = 0;
          c[b2 + 212 >> 2] = 0;
          c[b2 + 216 >> 2] = 0;
          a[b2 + 244 >> 0] = 1;
          c[b2 + 240 >> 2] = 0;
          c[b2 + 232 >> 2] = 0;
          c[b2 + 236 >> 2] = 0;
          c[b2 + 248 >> 2] = 0;
          c[b2 + 252 >> 2] = -1054867456;
          a[b2 + 274 >> 0] = 0;
          a[b2 + 275 >> 0] = 0;
          c[b2 + 256 >> 2] = 0;
          c[b2 + 256 + 4 >> 2] = 0;
          c[b2 + 256 + 8 >> 2] = 0;
          c[b2 + 256 + 12 >> 2] = 0;
          a[b2 + 292 >> 0] = 1;
          c[b2 + 288 >> 2] = 0;
          c[b2 + 280 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          c[b2 + 296 >> 2] = 0;
          a[b2 + 300 >> 0] = 1;
          a[b2 + 320 >> 0] = 1;
          c[b2 + 316 >> 2] = 0;
          c[b2 + 308 >> 2] = 0;
          c[b2 + 312 >> 2] = 0;
          if (!f2) {
            c[6324] = (c[6324] | 0) + 1;
            e2 = ic(223) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            c[e2 >> 2] = 4564;
            a[e2 + 20 >> 0] = 1;
            c[e2 + 16 >> 2] = 0;
            c[e2 + 8 >> 2] = 0;
            c[e2 + 12 >> 2] = 0;
            a[e2 + 40 >> 0] = 1;
            c[e2 + 36 >> 2] = 0;
            c[e2 + 28 >> 2] = 0;
            c[e2 + 32 >> 2] = 0;
            a[e2 + 60 >> 0] = 1;
            c[e2 + 56 >> 2] = 0;
            c[e2 + 48 >> 2] = 0;
            c[e2 + 52 >> 2] = 0;
            a[e2 + 80 >> 0] = 1;
            c[e2 + 76 >> 2] = 0;
            c[e2 + 68 >> 2] = 0;
            c[e2 + 72 >> 2] = 0;
            a[e2 + 100 >> 0] = 1;
            c[e2 + 96 >> 2] = 0;
            c[e2 + 88 >> 2] = 0;
            c[e2 + 92 >> 2] = 0;
            a[e2 + 120 >> 0] = 1;
            c[e2 + 116 >> 2] = 0;
            c[e2 + 108 >> 2] = 0;
            c[e2 + 112 >> 2] = 0;
            a[e2 + 140 >> 0] = 1;
            c[e2 + 136 >> 2] = 0;
            c[e2 + 128 >> 2] = 0;
            c[e2 + 132 >> 2] = 0;
            a[e2 + 160 >> 0] = 1;
            c[e2 + 156 >> 2] = 0;
            c[e2 + 148 >> 2] = 0;
            c[e2 + 152 >> 2] = 0;
            a[e2 + 180 >> 0] = 1;
            c[e2 + 176 >> 2] = 0;
            c[e2 + 168 >> 2] = 0;
            c[e2 + 172 >> 2] = 0;
            c[e2 + 192 >> 2] = 13;
            c[e2 + 196 >> 2] = 14;
            c[e2 + 200 >> 2] = 0;
            c[b2 + 200 >> 2] = e2;
            a[b2 + 273 >> 0] = 1;
          } else
            a[b2 + 273 >> 0] = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(87) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          c[e2 >> 2] = 6412;
          a[e2 + 20 >> 0] = 1;
          c[e2 + 16 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = 0;
          a[e2 + 40 >> 0] = 1;
          c[e2 + 36 >> 2] = 0;
          c[e2 + 28 >> 2] = 0;
          c[e2 + 32 >> 2] = 0;
          a[e2 + 60 >> 0] = 1;
          c[e2 + 56 >> 2] = 0;
          c[e2 + 48 >> 2] = 0;
          c[e2 + 52 >> 2] = 0;
          a[e2 + 64 >> 0] = 1;
          c[b2 + 204 >> 2] = e2;
          a[b2 + 272 >> 0] = 1;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(107) | 0;
          if (!e2) {
            f2 = 0;
            h2 = c[b2 + 200 >> 2] | 0;
            c[f2 >> 2] = 4896;
            e2 = f2 + 4 | 0;
            c[e2 >> 2] = 0;
            e2 = f2 + 8 | 0;
            c[e2 >> 2] = h2;
            e2 = f2 + 12 | 0;
            c[e2 >> 2] = 0;
            e2 = f2 + 16 | 0;
            c[e2 >> 2] = 0;
            e2 = f2 + 20 | 0;
            c[e2 >> 2] = 0;
            e2 = f2 + 24 | 0;
            c[e2 >> 2] = d2;
            d2 = f2 + 44 | 0;
            a[d2 >> 0] = 1;
            d2 = f2 + 40 | 0;
            c[d2 >> 2] = 0;
            d2 = f2 + 32 | 0;
            c[d2 >> 2] = 0;
            d2 = f2 + 36 | 0;
            c[d2 >> 2] = 0;
            d2 = f2 + 64 | 0;
            a[d2 >> 0] = 1;
            d2 = f2 + 60 | 0;
            c[d2 >> 2] = 0;
            d2 = f2 + 52 | 0;
            c[d2 >> 2] = 0;
            d2 = f2 + 56 | 0;
            c[d2 >> 2] = 0;
            d2 = f2 + 84 | 0;
            a[d2 >> 0] = 1;
            d2 = f2 + 80 | 0;
            c[d2 >> 2] = 0;
            d2 = f2 + 72 | 0;
            c[d2 >> 2] = 0;
            d2 = f2 + 76 | 0;
            c[d2 >> 2] = 0;
            c[b2 + 196 >> 2] = f2;
            return;
          }
          c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
          h2 = e2 + 4 + 15 & -16;
          e2 = c[b2 + 200 >> 2] | 0;
          c[h2 >> 2] = 4896;
          f2 = h2 + 4 | 0;
          c[f2 >> 2] = 0;
          f2 = h2 + 8 | 0;
          c[f2 >> 2] = e2;
          f2 = h2 + 12 | 0;
          c[f2 >> 2] = 0;
          f2 = h2 + 16 | 0;
          c[f2 >> 2] = 0;
          f2 = h2 + 20 | 0;
          c[f2 >> 2] = 0;
          f2 = h2 + 24 | 0;
          c[f2 >> 2] = d2;
          d2 = h2 + 44 | 0;
          a[d2 >> 0] = 1;
          d2 = h2 + 40 | 0;
          c[d2 >> 2] = 0;
          d2 = h2 + 32 | 0;
          c[d2 >> 2] = 0;
          d2 = h2 + 36 | 0;
          c[d2 >> 2] = 0;
          d2 = h2 + 64 | 0;
          a[d2 >> 0] = 1;
          d2 = h2 + 60 | 0;
          c[d2 >> 2] = 0;
          d2 = h2 + 52 | 0;
          c[d2 >> 2] = 0;
          d2 = h2 + 56 | 0;
          c[d2 >> 2] = 0;
          d2 = h2 + 84 | 0;
          a[d2 >> 0] = 1;
          d2 = h2 + 80 | 0;
          c[d2 >> 2] = 0;
          d2 = h2 + 72 | 0;
          c[d2 >> 2] = 0;
          d2 = h2 + 76 | 0;
          c[d2 >> 2] = 0;
          c[b2 + 196 >> 2] = h2;
          return;
        }
        function Rd(d2, f2, h2, j2) {
          d2 = d2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0;
          w2 = i;
          i = i + 80 | 0;
          v2 = c[d2 + 52 >> 2] | 0;
          c[w2 >> 2] = 6740;
          c[w2 + 4 >> 2] = v2;
          c[w2 + 8 >> 2] = f2;
          c[w2 + 60 >> 2] = 0;
          v2 = c[d2 + 56 >> 2] | 0;
          if (!(a[v2 + 60 >> 0] | 0)) {
            f2 = c[v2 + 56 >> 2] | 0;
            if ((f2 | 0) > 0) {
              p2 = 0;
              d2 = 0;
              m2 = c[v2 + 96 >> 2] | 0;
              while (1) {
                d2 = d2 + 1 | 0;
                if (!(+g[h2 >> 2] > +g[m2 + 16 >> 2]) ? !(+g[j2 >> 2] < +g[m2 >> 2]) : 0)
                  k2 = 1;
                else
                  k2 = 0;
                if (!(!(+g[h2 + 8 >> 2] > +g[m2 + 24 >> 2]) ? !(+g[j2 + 8 >> 2] < +g[m2 + 8 >> 2]) : 0))
                  k2 = 0;
                if (!(+g[h2 + 4 >> 2] > +g[m2 + 20 >> 2]) ? !(+g[j2 + 4 >> 2] < +g[m2 + 4 >> 2]) : 0) {
                  l2 = c[m2 + 32 >> 2] | 0;
                  if (k2 & (l2 | 0) == -1) {
                    Ub[c[(c[w2 >> 2] | 0) + 8 >> 2] & 127](w2, c[m2 + 36 >> 2] | 0, c[m2 + 40 >> 2] | 0);
                    f2 = c[v2 + 56 >> 2] | 0;
                    o2 = 43;
                  } else {
                    n2 = (l2 | 0) == -1;
                    o2 = 42;
                  }
                } else {
                  l2 = c[m2 + 32 >> 2] | 0;
                  n2 = (l2 | 0) == -1;
                  k2 = 0;
                  o2 = 42;
                }
                if ((o2 | 0) == 42) {
                  o2 = 0;
                  if (n2 | k2)
                    o2 = 43;
                  else {
                    m2 = m2 + (l2 << 6) | 0;
                    k2 = l2 + p2 | 0;
                  }
                }
                if ((o2 | 0) == 43) {
                  m2 = m2 + 64 | 0;
                  k2 = p2 + 1 | 0;
                }
                if ((k2 | 0) < (f2 | 0))
                  p2 = k2;
                else
                  break;
              }
            } else
              d2 = 0;
            if ((c[6317] | 0) >= (d2 | 0)) {
              i = w2;
              return;
            }
            c[6317] = d2;
            i = w2;
            return;
          }
          D2 = +g[h2 >> 2];
          H2 = +g[h2 + 4 >> 2];
          z2 = +g[h2 + 8 >> 2];
          G2 = +g[v2 + 4 >> 2];
          D2 = D2 < G2 ? G2 : D2;
          y2 = +g[v2 + 8 >> 2];
          H2 = H2 < y2 ? y2 : H2;
          C2 = +g[v2 + 12 >> 2];
          z2 = z2 < C2 ? C2 : z2;
          I2 = +g[v2 + 20 >> 2];
          A2 = +g[v2 + 24 >> 2];
          E2 = +g[v2 + 28 >> 2];
          F2 = +g[v2 + 36 >> 2];
          x2 = +g[v2 + 40 >> 2];
          B2 = +g[v2 + 44 >> 2];
          u2 = ~~(((I2 < D2 ? I2 : D2) - G2) * F2) & 65534;
          b[w2 + 70 >> 1] = u2;
          s2 = ~~(((E2 < z2 ? E2 : z2) - C2) * B2) & 65534;
          t2 = ~~(((A2 < H2 ? A2 : H2) - y2) * x2) & 65534;
          b[w2 + 70 + 2 >> 1] = t2;
          b[w2 + 70 + 4 >> 1] = s2;
          H2 = +g[j2 >> 2];
          z2 = +g[j2 + 4 >> 2];
          D2 = +g[j2 + 8 >> 2];
          H2 = H2 < G2 ? G2 : H2;
          z2 = z2 < y2 ? y2 : z2;
          D2 = D2 < C2 ? C2 : D2;
          r2 = (~~(((I2 < H2 ? I2 : H2) - G2) * F2 + 1) & 65535 | 1) & 65535;
          b[w2 + 64 >> 1] = r2;
          j2 = (~~(((E2 < D2 ? E2 : D2) - C2) * B2 + 1) & 65535 | 1) & 65535;
          q2 = (~~(((A2 < z2 ? A2 : z2) - y2) * x2 + 1) & 65535 | 1) & 65535;
          b[w2 + 64 + 2 >> 1] = q2;
          b[w2 + 64 + 4 >> 1] = j2;
          switch (c[v2 + 144 >> 2] | 0) {
            case 0: {
              o2 = c[v2 + 56 >> 2] | 0;
              if ((o2 | 0) > 0) {
                d2 = 0;
                f2 = c[v2 + 136 >> 2] | 0;
                k2 = 0;
                do {
                  d2 = d2 + 1 | 0;
                  l2 = f2 + 12 | 0;
                  m2 = c[l2 >> 2] | 0;
                  n2 = (((r2 & 65535) >= (e[f2 >> 1] | 0) ? (u2 & 65535) <= (e[f2 + 6 >> 1] | 0) : 0) & (s2 & 65535) <= (e[f2 + 10 >> 1] | 0) & (j2 & 65535) >= (e[f2 + 4 >> 1] | 0) & (t2 & 65535) <= (e[f2 + 8 >> 1] | 0) & (q2 & 65535) >= (e[f2 + 2 >> 1] | 0) | 0) != 0;
                  if ((m2 | 0) > -1 & n2)
                    Ub[c[(c[w2 >> 2] | 0) + 8 >> 2] & 127](w2, m2 >> 21, m2 & 2097151);
                  if ((m2 | 0) > -1 | n2) {
                    k2 = k2 + 1 | 0;
                    f2 = f2 + 16 | 0;
                  } else {
                    v2 = c[l2 >> 2] | 0;
                    k2 = k2 - v2 | 0;
                    f2 = f2 + (0 - v2 << 4) | 0;
                  }
                } while ((k2 | 0) < (o2 | 0));
              } else
                d2 = 0;
              if ((c[6317] | 0) < (d2 | 0))
                c[6317] = d2;
              break;
            }
            case 1: {
              if ((c[v2 + 152 >> 2] | 0) > 0) {
                h2 = 0;
                do {
                  d2 = c[v2 + 160 >> 2] | 0;
                  if (((r2 & 65535) >= (e[d2 + (h2 << 5) >> 1] | 0) ? (u2 & 65535) <= (e[d2 + (h2 << 5) + 6 >> 1] | 0) : 0) & (s2 & 65535) <= (e[d2 + (h2 << 5) + 10 >> 1] | 0) & (j2 & 65535) >= (e[d2 + (h2 << 5) + 4 >> 1] | 0) & (t2 & 65535) <= (e[d2 + (h2 << 5) + 8 >> 1] | 0) & (q2 & 65535) >= (e[d2 + (h2 << 5) + 2 >> 1] | 0) | 0) {
                    p2 = c[d2 + (h2 << 5) + 12 >> 2] | 0;
                    o2 = c[d2 + (h2 << 5) + 16 >> 2] | 0;
                    if ((o2 | 0) > 0) {
                      d2 = 0;
                      f2 = (c[v2 + 136 >> 2] | 0) + (p2 << 4) | 0;
                      k2 = p2;
                      do {
                        d2 = d2 + 1 | 0;
                        l2 = f2 + 12 | 0;
                        m2 = c[l2 >> 2] | 0;
                        n2 = (((r2 & 65535) >= (e[f2 >> 1] | 0) ? (u2 & 65535) <= (e[f2 + 6 >> 1] | 0) : 0) & (s2 & 65535) <= (e[f2 + 10 >> 1] | 0) & (j2 & 65535) >= (e[f2 + 4 >> 1] | 0) & (t2 & 65535) <= (e[f2 + 8 >> 1] | 0) & (q2 & 65535) >= (e[f2 + 2 >> 1] | 0) | 0) != 0;
                        if ((m2 | 0) > -1 & n2)
                          Ub[c[(c[w2 >> 2] | 0) + 8 >> 2] & 127](w2, m2 >> 21, m2 & 2097151);
                        if ((m2 | 0) > -1 | n2) {
                          k2 = k2 + 1 | 0;
                          f2 = f2 + 16 | 0;
                        } else {
                          n2 = c[l2 >> 2] | 0;
                          k2 = k2 - n2 | 0;
                          f2 = f2 + (0 - n2 << 4) | 0;
                        }
                      } while ((k2 | 0) < (o2 + p2 | 0));
                    } else
                      d2 = 0;
                    if ((c[6317] | 0) < (d2 | 0))
                      c[6317] = d2;
                  }
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) < (c[v2 + 152 >> 2] | 0));
              }
              break;
            }
            case 2: {
              xk(c[v2 + 136 >> 2] | 0, w2, w2 + 70 | 0, w2 + 64 | 0);
              break;
            }
            default: {
            }
          }
          i = w2;
          return;
        }
        function Sd(b2, d2, e2, f2, h2, i2, j2, k2, l2, m2, n2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
          if ((j2 | 0) < 2 | (k2 | 0) < 2) {
            m2 = 0;
            return m2 | 0;
          }
          u2 = S(k2, j2) | 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(u2 >>> 0 > 268435455 ? 18 : (u2 << 4 | 3) + 16 | 0) | 0;
          if (!b2)
            s2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            s2 = b2 + 4 + 15 & -16;
          }
          o2 = u2 >>> 0 > 1073741823 ? -1 : u2 << 2;
          o2 = (o2 | 0) == 0 ? 1 : o2;
          while (1) {
            b2 = ic(o2) | 0;
            if (b2 | 0) {
              q2 = b2;
              break;
            }
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              q2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          if ((k2 | 0) > 0 ? (j2 | 0) > 0 : 0) {
            b2 = 0;
            do {
              z2 = +(b2 | 0) / +(k2 + -1 | 0);
              r2 = +g[e2 >> 2];
              r2 = r2 + z2 * (+g[h2 >> 2] - r2);
              t2 = +g[e2 + 4 >> 2];
              t2 = t2 + z2 * (+g[h2 + 4 >> 2] - t2);
              v2 = +g[e2 + 8 >> 2];
              v2 = v2 + z2 * (+g[h2 + 8 >> 2] - v2);
              w2 = +g[f2 >> 2];
              x2 = +g[f2 + 4 >> 2];
              y2 = +g[f2 + 8 >> 2];
              p2 = S(b2, j2) | 0;
              w2 = w2 + z2 * (+g[i2 >> 2] - w2) - r2;
              x2 = x2 + z2 * (+g[i2 + 4 >> 2] - x2) - t2;
              y2 = y2 + z2 * (+g[i2 + 8 >> 2] - y2) - v2;
              o2 = 0;
              do {
                z2 = +(o2 | 0) / +(j2 + -1 | 0);
                A2 = o2 + p2 | 0;
                g[s2 + (A2 << 4) >> 2] = r2 + w2 * z2;
                g[s2 + (A2 << 4) + 4 >> 2] = t2 + x2 * z2;
                g[s2 + (A2 << 4) + 8 >> 2] = v2 + y2 * z2;
                g[s2 + (A2 << 4) + 12 >> 2] = 0;
                g[q2 + (A2 << 2) >> 2] = 1;
                o2 = o2 + 1 | 0;
              } while ((o2 | 0) != (j2 | 0));
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) != (k2 | 0));
          }
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(1311) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          tc(b2, d2, u2, s2, q2);
          if (l2 & 1 | 0) {
            g[(c[b2 + 760 >> 2] | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 2 | 0) {
            g[(c[b2 + 760 >> 2] | 0) + ((j2 + -1 | 0) * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 4 | 0) {
            A2 = S(k2 + -1 | 0, j2) | 0;
            g[(c[b2 + 760 >> 2] | 0) + (A2 * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 8 | 0) {
            A2 = j2 + -1 + (S(k2 + -1 | 0, j2) | 0) | 0;
            g[(c[b2 + 760 >> 2] | 0) + (A2 * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 16 | 0) {
            g[(c[b2 + 760 >> 2] | 0) + (((j2 + -1 | 0) / 2 | 0) * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 32 | 0) {
            A2 = S((k2 + -1 | 0) / 2 | 0, j2) | 0;
            g[(c[b2 + 760 >> 2] | 0) + (A2 * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 64 | 0) {
            A2 = j2 + -1 + (S((k2 + -1 | 0) / 2 | 0, j2) | 0) | 0;
            g[(c[b2 + 760 >> 2] | 0) + (A2 * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 128 | 0) {
            A2 = (S(k2 + -1 | 0, j2) | 0) + ((j2 + -1 | 0) / 2 | 0) | 0;
            g[(c[b2 + 760 >> 2] | 0) + (A2 * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 256 | 0) {
            A2 = (S((k2 + -1 | 0) / 2 | 0, j2) | 0) + ((j2 + -1 | 0) / 2 | 0) | 0;
            g[(c[b2 + 760 >> 2] | 0) + (A2 * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (s2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[s2 + -4 >> 2] | 0);
          }
          Rc(q2);
          if ((k2 | 0) <= 0) {
            A2 = b2;
            return A2 | 0;
          }
          o2 = 0;
          u2 = 0;
          d2 = j2 + -1 | 0;
          while (1) {
            p2 = u2;
            u2 = u2 + 1 | 0;
            a:
              do
                if ((j2 | 0) > 0) {
                  i2 = S(p2, j2) | 0;
                  h2 = S(u2, j2) | 0;
                  t2 = 1 / +(k2 + -1 | 0) * +(k2 + -1 - p2 | 0);
                  r2 = 1 / +(k2 + -1 | 0) * +(k2 + -2 - p2 | 0);
                  if ((u2 | 0) < (k2 | 0)) {
                    p2 = 0;
                    q2 = o2;
                  } else {
                    p2 = 0;
                    while (1) {
                      q2 = p2;
                      p2 = p2 + 1 | 0;
                      if ((p2 | 0) < (j2 | 0))
                        Gf(b2, q2 + i2 | 0, p2 + i2 | 0, 0, 0);
                      if ((p2 | 0) == (j2 | 0))
                        break a;
                    }
                  }
                  while (1) {
                    s2 = p2 + 1 | 0;
                    e2 = p2 + i2 | 0;
                    f2 = p2 + h2 | 0;
                    if ((p2 | 0) == (j2 + -1 | 0))
                      break;
                    Gf(b2, e2, s2 + i2 | 0, 0, 0);
                    Gf(b2, e2, f2, 0, 0);
                    Pf(b2, e2, f2, s2 + h2 | 0, 0);
                    if (!n2)
                      Pf(b2, s2 + h2 | 0, s2 + i2 | 0, e2, 0);
                    else {
                      z2 = 1 / +(j2 + -1 | 0) * +(p2 | 0);
                      g[n2 + (q2 << 2) >> 2] = z2;
                      g[n2 + (q2 + 1 << 2) >> 2] = t2;
                      g[n2 + (q2 + 2 << 2) >> 2] = z2;
                      g[n2 + (q2 + 3 << 2) >> 2] = r2;
                      y2 = 1 / +(j2 + -1 | 0) * +(s2 | 0);
                      g[n2 + (q2 + 4 << 2) >> 2] = y2;
                      g[n2 + (q2 + 5 << 2) >> 2] = r2;
                      Pf(b2, s2 + h2 | 0, s2 + i2 | 0, e2, 0);
                      g[n2 + (q2 + 6 << 2) >> 2] = y2;
                      g[n2 + (q2 + 7 << 2) >> 2] = r2;
                      g[n2 + (q2 + 8 << 2) >> 2] = y2;
                      g[n2 + (q2 + 9 << 2) >> 2] = t2;
                      g[n2 + (q2 + 10 << 2) >> 2] = z2;
                      g[n2 + (q2 + 11 << 2) >> 2] = t2;
                    }
                    if (m2)
                      Gf(b2, e2, s2 + h2 | 0, 0, 0);
                    p2 = s2;
                    q2 = q2 + 12 | 0;
                  }
                  Gf(b2, d2, f2, 0, 0);
                  o2 = (j2 * 12 | 0) + -12 + o2 | 0;
                }
              while (0);
            if ((u2 | 0) == (k2 | 0))
              break;
            else
              d2 = d2 + j2 | 0;
          }
          return b2 | 0;
        }
        function Td(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = +d2;
          e2 = +e2;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0;
          s2 = i;
          i = i + 80 | 0;
          f2 = c[b2 + 8 >> 2] | 0;
          if (!f2) {
            f2 = c[b2 + 4 >> 2] | 0;
            if (!f2) {
              d2 = 0;
              k2 = 0;
              n2 = 0;
              o2 = 0;
              l2 = 0;
              m2 = 0;
            } else {
              r2 = +g[f2 + 336 >> 2];
              n2 = +g[b2 + 172 >> 2];
              o2 = +g[f2 + 340 >> 2];
              p2 = +g[b2 + 168 >> 2];
              m2 = +g[b2 + 164 >> 2];
              q2 = +g[f2 + 332 >> 2];
              d2 = r2 * n2 - o2 * p2;
              k2 = +g[f2 + 316 >> 2];
              n2 = o2 * m2 - n2 * q2;
              o2 = +g[f2 + 320 >> 2];
              l2 = +g[f2 + 324 >> 2];
              m2 = p2 * q2 - r2 * m2;
            }
          } else {
            r2 = +g[f2 + 372 >> 2];
            n2 = +g[b2 + 172 >> 2];
            o2 = +g[f2 + 376 >> 2];
            p2 = +g[b2 + 168 >> 2];
            m2 = +g[b2 + 164 >> 2];
            q2 = +g[f2 + 368 >> 2];
            d2 = r2 * n2 - o2 * p2;
            k2 = +g[f2 + 352 >> 2];
            n2 = o2 * m2 - n2 * q2;
            o2 = +g[f2 + 356 >> 2];
            l2 = +g[f2 + 360 >> 2];
            m2 = p2 * q2 - r2 * m2;
          }
          p2 = k2 + d2;
          r2 = o2 + n2;
          q2 = l2 + m2;
          f2 = c[b2 + 20 >> 2] | 0;
          if (!f2) {
            f2 = c[b2 + 16 >> 2] | 0;
            if (!f2) {
              d2 = 0;
              k2 = 0;
              n2 = 0;
              o2 = 0;
              l2 = 0;
              m2 = 0;
            } else {
              t2 = +g[f2 + 336 >> 2];
              n2 = +g[b2 + 188 >> 2];
              o2 = +g[f2 + 340 >> 2];
              v2 = +g[b2 + 184 >> 2];
              m2 = +g[b2 + 180 >> 2];
              u2 = +g[f2 + 332 >> 2];
              d2 = t2 * n2 - o2 * v2;
              k2 = +g[f2 + 316 >> 2];
              n2 = o2 * m2 - n2 * u2;
              o2 = +g[f2 + 320 >> 2];
              l2 = +g[f2 + 324 >> 2];
              m2 = v2 * u2 - t2 * m2;
            }
          } else {
            v2 = +g[f2 + 372 >> 2];
            n2 = +g[b2 + 188 >> 2];
            o2 = +g[f2 + 376 >> 2];
            t2 = +g[b2 + 184 >> 2];
            m2 = +g[b2 + 180 >> 2];
            u2 = +g[f2 + 368 >> 2];
            d2 = v2 * n2 - o2 * t2;
            k2 = +g[f2 + 352 >> 2];
            n2 = o2 * m2 - n2 * u2;
            o2 = +g[f2 + 356 >> 2];
            l2 = +g[f2 + 360 >> 2];
            m2 = t2 * u2 - v2 * m2;
          }
          p2 = p2 - (k2 + d2);
          n2 = r2 - (o2 + n2);
          d2 = q2 - (l2 + m2);
          k2 = +g[b2 + 196 >> 2];
          l2 = +g[b2 + 200 >> 2];
          m2 = +g[b2 + 204 >> 2];
          a[s2 + 36 + 32 >> 0] = 1;
          c[s2 + 36 + 16 >> 2] = 0;
          c[s2 + 36 + 16 + 4 >> 2] = 0;
          c[s2 + 36 + 16 + 8 >> 2] = 0;
          c[s2 + 36 + 16 + 12 >> 2] = 0;
          c[s2 + 36 >> 2] = c[b2 + 72 >> 2];
          c[s2 + 36 + 4 >> 2] = c[b2 + 72 + 4 >> 2];
          c[s2 + 36 + 8 >> 2] = c[b2 + 72 + 8 >> 2];
          c[s2 + 36 + 12 >> 2] = c[b2 + 72 + 12 >> 2];
          if (k2 * p2 + n2 * l2 + d2 * m2 < 0) {
            t2 = +g[b2 + 212 >> 2];
            u2 = +g[s2 + 36 >> 2] + ((k2 * p2 + n2 * l2 + d2 * m2) * k2 + (p2 - (k2 * p2 + n2 * l2 + d2 * m2) * k2) * t2);
            g[s2 + 36 >> 2] = u2;
            v2 = (k2 * p2 + n2 * l2 + d2 * m2) * l2 + t2 * (n2 - (k2 * p2 + n2 * l2 + d2 * m2) * l2) + +g[s2 + 36 + 4 >> 2];
            g[s2 + 36 + 4 >> 2] = v2;
            l2 = (k2 * p2 + n2 * l2 + d2 * m2) * m2 + t2 * (d2 - (k2 * p2 + n2 * l2 + d2 * m2) * m2) + +g[s2 + 36 + 8 >> 2];
            g[s2 + 36 + 8 >> 2] = l2;
            f2 = s2 + 36 + 4 | 0;
            h2 = s2 + 36 + 8 | 0;
            j2 = s2 + 36 | 0;
            d2 = u2;
            k2 = v2;
          } else {
            f2 = s2 + 36 + 4 | 0;
            h2 = s2 + 36 + 8 | 0;
            j2 = s2 + 36 | 0;
            d2 = +g[s2 + 36 >> 2];
            k2 = +g[s2 + 36 + 4 >> 2];
            l2 = +g[s2 + 36 + 8 >> 2];
          }
          m2 = (+g[b2 + 104 >> 2] * d2 + +g[b2 + 108 >> 2] * k2 + +g[b2 + 112 >> 2] * l2) * e2;
          n2 = (d2 * +g[b2 + 120 >> 2] + k2 * +g[b2 + 124 >> 2] + l2 * +g[b2 + 128 >> 2]) * e2;
          d2 = (d2 * +g[b2 + 136 >> 2] + k2 * +g[b2 + 140 >> 2] + l2 * +g[b2 + 144 >> 2]) * e2;
          g[j2 >> 2] = m2;
          g[f2 >> 2] = n2;
          g[h2 >> 2] = d2;
          g[s2 + 36 + 12 >> 2] = 0;
          f2 = c[b2 + 4 >> 2] | 0;
          if ((f2 | 0) != (c[b2 + 16 >> 2] | 0)) {
            f2 = s2;
            h2 = s2 + 36 | 0;
            j2 = f2 + 36 | 0;
            do {
              c[f2 >> 2] = c[h2 >> 2];
              f2 = f2 + 4 | 0;
              h2 = h2 + 4 | 0;
            } while ((f2 | 0) < (j2 | 0));
            v2 = -+g[s2 + 4 >> 2];
            u2 = -+g[s2 + 8 >> 2];
            g[s2 >> 2] = -+g[s2 >> 2];
            g[s2 + 4 >> 2] = v2;
            g[s2 + 8 >> 2] = u2;
            g[s2 + 12 >> 2] = 0;
            u2 = -+g[s2 + 20 >> 2];
            v2 = -+g[s2 + 24 >> 2];
            g[s2 + 16 >> 2] = -+g[s2 + 16 >> 2];
            g[s2 + 20 >> 2] = u2;
            g[s2 + 24 >> 2] = v2;
            g[s2 + 28 >> 2] = 0;
            Nh(b2 + 4 | 0, s2, b2 + 164 | 0);
            Nh(b2 + 16 | 0, s2 + 36 | 0, b2 + 180 | 0);
            i = s2;
            return;
          }
          if (!(m2 == m2 & n2 == n2 & (d2 == d2 & true))) {
            i = s2;
            return;
          }
          v2 = +G(+(m2 * m2 + n2 * n2 + d2 * d2));
          if (v2 < +g[f2 + 368 >> 2]) {
            i = s2;
            return;
          }
          h2 = c[s2 + 36 + 32 >> 2] | 0;
          v2 = +g[f2 + 372 >> 2];
          g[s2 + 12 >> 2] = 0;
          g[s2 + 28 >> 2] = 0;
          c[s2 + 32 >> 2] = h2;
          g[s2 >> 2] = -(m2 * v2);
          g[s2 + 4 >> 2] = -(n2 * v2);
          g[s2 + 8 >> 2] = -(d2 * v2);
          g[s2 + 16 >> 2] = v2 * -0;
          g[s2 + 20 >> 2] = v2 * -0;
          g[s2 + 24 >> 2] = v2 * -0;
          Nh(b2 + 4 | 0, s2, b2 + 164 | 0);
          d2 = +g[(c[b2 + 4 >> 2] | 0) + 372 >> 2];
          f2 = s2;
          h2 = s2 + 36 | 0;
          j2 = f2 + 36 | 0;
          do {
            c[f2 >> 2] = c[h2 >> 2];
            f2 = f2 + 4 | 0;
            h2 = h2 + 4 | 0;
          } while ((f2 | 0) < (j2 | 0));
          g[s2 >> 2] = d2 * +g[s2 >> 2];
          g[s2 + 4 >> 2] = d2 * +g[s2 + 4 >> 2];
          g[s2 + 8 >> 2] = d2 * +g[s2 + 8 >> 2];
          g[s2 + 16 >> 2] = d2 * +g[s2 + 16 >> 2];
          g[s2 + 20 >> 2] = d2 * +g[s2 + 20 >> 2];
          g[s2 + 24 >> 2] = d2 * +g[s2 + 24 >> 2];
          Nh(b2 + 16 | 0, s2, b2 + 180 | 0);
          i = s2;
          return;
        }
        function Ud(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          c[b2 >> 2] = 6036;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(379) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          g[e2 + 308 >> 2] = 9999999747378752e-20;
          l2 = e2 + 332 | 0;
          a[l2 >> 0] = a[l2 >> 0] & -16;
          c[b2 + 24 >> 2] = e2;
          l2 = (c[d2 + 20 >> 2] | 0) == 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(23) | 0;
          f2 = e2 + 4 + 15 & -16;
          c[f2 + -4 >> 2] = e2;
          if (l2) {
            c[(e2 + 4 + 15 & -16) >> 2] = 8868;
            c[b2 + 28 >> 2] = f2;
          } else {
            c[(e2 + 4 + 15 & -16) >> 2] = 8828;
            c[b2 + 28 >> 2] = f2;
          }
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(43) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          k2 = c[b2 + 24 >> 2] | 0;
          l2 = c[b2 + 28 >> 2] | 0;
          a[e2 + 4 >> 0] = 0;
          c[e2 >> 2] = 9240;
          c[e2 + 16 >> 2] = 0;
          c[e2 + 20 >> 2] = 3;
          c[e2 + 12 >> 2] = k2;
          c[e2 + 8 >> 2] = l2;
          c[b2 + 32 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(27) | 0;
          l2 = e2 + 4 + 15 & -16;
          c[l2 + -4 >> 2] = e2;
          a[l2 + 4 >> 0] = 0;
          c[(e2 + 4 + 15 & -16) >> 2] = 6068;
          c[b2 + 36 >> 2] = l2;
          c[6324] = (c[6324] | 0) + 1;
          l2 = ic(27) | 0;
          e2 = l2 + 4 + 15 & -16;
          c[e2 + -4 >> 2] = l2;
          a[e2 + 4 >> 0] = 0;
          c[(l2 + 4 + 15 & -16) >> 2] = 6088;
          c[b2 + 40 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(27) | 0;
          l2 = e2 + 4 + 15 & -16;
          c[l2 + -4 >> 2] = e2;
          a[l2 + 4 >> 0] = 0;
          c[(e2 + 4 + 15 & -16) >> 2] = 6108;
          c[b2 + 44 >> 2] = l2;
          c[6324] = (c[6324] | 0) + 1;
          l2 = ic(27) | 0;
          e2 = l2 + 4 + 15 & -16;
          c[e2 + -4 >> 2] = l2;
          a[e2 + 4 >> 0] = 0;
          c[(l2 + 4 + 15 & -16) >> 2] = 6128;
          c[b2 + 48 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(27) | 0;
          l2 = e2 + 4 + 15 & -16;
          c[l2 + -4 >> 2] = e2;
          a[l2 + 4 >> 0] = 0;
          c[(e2 + 4 + 15 & -16) >> 2] = 6148;
          c[b2 + 52 >> 2] = l2;
          c[6324] = (c[6324] | 0) + 1;
          l2 = ic(27) | 0;
          e2 = l2 + 4 + 15 & -16;
          c[e2 + -4 >> 2] = l2;
          a[e2 + 4 >> 0] = 0;
          c[(l2 + 4 + 15 & -16) >> 2] = 6168;
          c[b2 + 56 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(27) | 0;
          l2 = e2 + 4 + 15 & -16;
          c[l2 + -4 >> 2] = e2;
          a[l2 + 4 >> 0] = 0;
          c[(e2 + 4 + 15 & -16) >> 2] = 6188;
          c[b2 + 60 >> 2] = l2;
          c[6324] = (c[6324] | 0) + 1;
          l2 = ic(27) | 0;
          e2 = l2 + 4 + 15 & -16;
          c[e2 + -4 >> 2] = l2;
          a[e2 + 4 >> 0] = 0;
          c[(l2 + 4 + 15 & -16) >> 2] = 6208;
          c[b2 + 76 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(27) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          c[e2 >> 2] = 6208;
          c[b2 + 80 >> 2] = e2;
          a[e2 + 4 >> 0] = 1;
          c[6324] = (c[6324] | 0) + 1;
          l2 = ic(27) | 0;
          e2 = l2 + 4 + 15 & -16;
          c[e2 + -4 >> 2] = l2;
          a[e2 + 4 >> 0] = 0;
          c[(l2 + 4 + 15 & -16) >> 2] = 6228;
          c[b2 + 72 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(35) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          a[e2 + 4 >> 0] = 0;
          c[e2 >> 2] = 6248;
          c[e2 + 8 >> 2] = 1;
          c[e2 + 12 >> 2] = 0;
          c[b2 + 88 >> 2] = e2;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(35) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          c[e2 >> 2] = 6248;
          c[e2 + 8 >> 2] = 1;
          c[e2 + 12 >> 2] = 0;
          c[b2 + 84 >> 2] = e2;
          a[e2 + 4 >> 0] = 1;
          l2 = c[d2 + 16 >> 2] | 0;
          l2 = (l2 | 0) > 80 ? l2 : 80;
          e2 = c[d2 >> 2] | 0;
          if (!e2) {
            a[b2 + 12 >> 0] = 1;
            c[6324] = (c[6324] | 0) + 1;
            e2 = ic(39) | 0;
            if (!e2)
              k2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              k2 = e2 + 4 + 15 & -16;
            }
            e2 = c[d2 + 8 >> 2] | 0;
            c[k2 >> 2] = 804;
            f2 = k2 + 4 | 0;
            c[f2 >> 2] = e2;
            c[6324] = (c[6324] | 0) + 1;
            e2 = ic((e2 * 804 | 3) + 16 | 0) | 0;
            if (!e2)
              e2 = 0;
            else {
              c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
              e2 = e2 + 4 + 15 & -16;
            }
            c[k2 + 16 >> 2] = e2;
            c[k2 + 12 >> 2] = e2;
            h2 = c[f2 >> 2] | 0;
            c[k2 + 8 >> 2] = h2;
            if (h2 + -1 | 0) {
              i2 = c[k2 >> 2] | 0;
              f2 = e2;
              j2 = h2 + -1 | 0;
              do {
                m2 = f2;
                f2 = f2 + i2 | 0;
                c[m2 >> 2] = f2;
                j2 = j2 + -1 | 0;
              } while ((j2 | 0) != 0);
              e2 = e2 + (S(i2, h2 + -1 | 0) | 0) | 0;
            }
            c[e2 >> 2] = 0;
            c[b2 + 8 >> 2] = k2;
          } else {
            a[b2 + 12 >> 0] = 0;
            c[b2 + 8 >> 2] = e2;
          }
          h2 = (l2 | 0) > 116 ? l2 + 16 & -16 : 128;
          e2 = c[d2 + 4 >> 2] | 0;
          if (e2 | 0) {
            a[b2 + 20 >> 0] = 0;
            c[b2 + 16 >> 2] = e2;
            return;
          }
          a[b2 + 20 >> 0] = 1;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(39) | 0;
          if (!e2)
            k2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            k2 = e2 + 4 + 15 & -16;
          }
          e2 = c[d2 + 12 >> 2] | 0;
          c[k2 >> 2] = h2;
          f2 = k2 + 4 | 0;
          c[f2 >> 2] = e2;
          e2 = S(e2, h2) | 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic((e2 | 3) + 16 | 0) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          c[k2 + 16 >> 2] = e2;
          c[k2 + 12 >> 2] = e2;
          h2 = c[f2 >> 2] | 0;
          c[k2 + 8 >> 2] = h2;
          if (h2 + -1 | 0) {
            i2 = c[k2 >> 2] | 0;
            f2 = e2;
            j2 = h2 + -1 | 0;
            do {
              m2 = f2;
              f2 = f2 + i2 | 0;
              c[m2 >> 2] = f2;
              j2 = j2 + -1 | 0;
            } while ((j2 | 0) != 0);
            e2 = e2 + (S(i2, h2 + -1 | 0) | 0) | 0;
          }
          c[e2 >> 2] = 0;
          c[b2 + 16 >> 2] = k2;
          return;
        }
        function Vd(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          s2 = i;
          i = i + 48 | 0;
          c[s2 + 16 >> 2] = c[e2 >> 2];
          c[s2 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
          c[s2 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
          c[s2 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
          c[s2 + 16 + 16 >> 2] = c[f2 >> 2];
          c[s2 + 16 + 16 + 4 >> 2] = c[f2 + 4 >> 2];
          c[s2 + 16 + 16 + 8 >> 2] = c[f2 + 8 >> 2];
          c[s2 + 16 + 16 + 12 >> 2] = c[f2 + 12 >> 2];
          do
            if ((c[d2 + 60 >> 2] | 0) == 2) {
              h2 = c[d2 + 48 >> 2] | 0;
              Wg(b2 + 64 | 0, h2) | 0;
              j2 = c[b2 + 68 >> 2] | 0;
              if (j2 | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[j2 + -4 >> 2] | 0);
              }
              c[b2 + 68 >> 2] = h2;
              c[b2 + 76 >> 2] = (c[b2 + 76 >> 2] | 0) + -1;
              h2 = c[b2 + 8 >> 2] | 0;
              if (!h2) {
                c[6324] = (c[6324] | 0) + 1;
                h2 = ic(63) | 0;
                if (!h2)
                  h2 = 0;
                else {
                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                  h2 = h2 + 4 + 15 & -16;
                }
                j2 = h2;
                k2 = j2 + 44 | 0;
                do {
                  c[j2 >> 2] = 0;
                  j2 = j2 + 4 | 0;
                } while ((j2 | 0) < (k2 | 0));
              } else
                c[b2 + 8 >> 2] = 0;
              c[h2 + 32 >> 2] = 0;
              c[h2 + 36 >> 2] = d2;
              c[h2 + 40 >> 2] = 0;
              c[h2 >> 2] = c[s2 + 16 >> 2];
              c[h2 + 4 >> 2] = c[s2 + 16 + 4 >> 2];
              c[h2 + 8 >> 2] = c[s2 + 16 + 8 >> 2];
              c[h2 + 12 >> 2] = c[s2 + 16 + 12 >> 2];
              c[h2 + 16 >> 2] = c[s2 + 16 + 16 >> 2];
              c[h2 + 20 >> 2] = c[s2 + 16 + 20 >> 2];
              c[h2 + 24 >> 2] = c[s2 + 16 + 24 >> 2];
              c[h2 + 28 >> 2] = c[s2 + 16 + 28 >> 2];
              Ze(b2 + 4 | 0, c[b2 + 4 >> 2] | 0, h2);
              c[b2 + 16 >> 2] = (c[b2 + 16 >> 2] | 0) + 1;
              c[d2 + 48 >> 2] = h2;
              h2 = 1;
            } else {
              c[b2 + 168 >> 2] = (c[b2 + 168 >> 2] | 0) + 1;
              r2 = c[d2 + 48 >> 2] | 0;
              if (((((+g[r2 >> 2] <= +g[s2 + 16 + 16 >> 2] ? +g[r2 + 16 >> 2] >= +g[s2 + 16 >> 2] : 0) ? +g[r2 + 4 >> 2] <= +g[s2 + 16 + 20 >> 2] : 0) ? +g[r2 + 20 >> 2] >= +g[s2 + 16 + 4 >> 2] : 0) ? +g[r2 + 8 >> 2] <= +g[s2 + 16 + 24 >> 2] : 0) ? +g[r2 + 24 >> 2] >= +g[s2 + 16 + 8 >> 2] : 0) {
                l2 = +g[d2 + 16 >> 2];
                t2 = +g[e2 >> 2] - l2;
                m2 = +g[d2 + 20 >> 2];
                p2 = +g[e2 + 4 >> 2] - m2;
                n2 = +g[d2 + 24 >> 2];
                q2 = +g[e2 + 8 >> 2] - n2;
                u2 = +g[b2 + 140 >> 2];
                l2 = (+g[d2 + 32 >> 2] - l2) * 0.5 * u2;
                m2 = (+g[d2 + 36 >> 2] - m2) * 0.5 * u2;
                n2 = u2 * (+g[d2 + 40 >> 2] - n2) * 0.5;
                g[s2 >> 2] = l2;
                g[s2 + 4 >> 2] = m2;
                g[s2 + 8 >> 2] = n2;
                g[s2 + 12 >> 2] = 0;
                if (t2 < 0)
                  g[s2 >> 2] = -l2;
                if (p2 < 0)
                  g[s2 + 4 >> 2] = -m2;
                if (q2 < 0)
                  g[s2 + 8 >> 2] = -n2;
                if (Yg(b2 + 4 | 0, r2, s2 + 16 | 0, s2, 0.05000000074505806) | 0) {
                  c[b2 + 172 >> 2] = (c[b2 + 172 >> 2] | 0) + 1;
                  h2 = 1;
                } else
                  h2 = 0;
                break;
              }
              h2 = Wg(b2 + 4 | 0, r2) | 0;
              a:
                do
                  if (h2) {
                    o2 = c[b2 + 12 >> 2] | 0;
                    if ((o2 | 0) <= -1) {
                      h2 = c[b2 + 4 >> 2] | 0;
                      break;
                    }
                    if (o2) {
                      j2 = 0;
                      while (1) {
                        k2 = c[h2 + 32 >> 2] | 0;
                        j2 = j2 + 1 | 0;
                        if (!k2)
                          break a;
                        if ((j2 | 0) >= (o2 | 0)) {
                          h2 = k2;
                          break;
                        } else
                          h2 = k2;
                      }
                    }
                  } else
                    h2 = 0;
                while (0);
              c[r2 >> 2] = c[s2 + 16 >> 2];
              c[r2 + 4 >> 2] = c[s2 + 16 + 4 >> 2];
              c[r2 + 8 >> 2] = c[s2 + 16 + 8 >> 2];
              c[r2 + 12 >> 2] = c[s2 + 16 + 12 >> 2];
              c[r2 + 16 >> 2] = c[s2 + 16 + 16 >> 2];
              c[r2 + 20 >> 2] = c[s2 + 16 + 20 >> 2];
              c[r2 + 24 >> 2] = c[s2 + 16 + 24 >> 2];
              c[r2 + 28 >> 2] = c[s2 + 16 + 28 >> 2];
              Ze(b2 + 4 | 0, h2, r2);
              c[b2 + 172 >> 2] = (c[b2 + 172 >> 2] | 0) + 1;
              h2 = 1;
            }
          while (0);
          j2 = c[d2 + 52 >> 2] | 0;
          k2 = c[d2 + 56 >> 2] | 0;
          if (!j2)
            c[b2 + 124 + (c[d2 + 60 >> 2] << 2) >> 2] = k2;
          else
            c[j2 + 56 >> 2] = k2;
          j2 = c[d2 + 56 >> 2] | 0;
          if (j2 | 0)
            c[j2 + 52 >> 2] = c[d2 + 52 >> 2];
          c[d2 + 16 >> 2] = c[e2 >> 2];
          c[d2 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
          c[d2 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
          c[d2 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
          c[d2 + 32 >> 2] = c[f2 >> 2];
          c[d2 + 32 + 4 >> 2] = c[f2 + 4 >> 2];
          c[d2 + 32 + 8 >> 2] = c[f2 + 8 >> 2];
          c[d2 + 32 + 12 >> 2] = c[f2 + 12 >> 2];
          j2 = c[b2 + 144 >> 2] | 0;
          c[d2 + 60 >> 2] = j2;
          c[d2 + 52 >> 2] = 0;
          c[d2 + 56 >> 2] = c[b2 + 124 + (j2 << 2) >> 2];
          k2 = c[b2 + 124 + (j2 << 2) >> 2] | 0;
          if (k2 | 0)
            c[k2 + 52 >> 2] = d2;
          c[b2 + 124 + (j2 << 2) >> 2] = d2;
          if (!h2) {
            i = s2;
            return;
          }
          a[b2 + 194 >> 0] = 1;
          if (a[b2 + 193 >> 0] | 0) {
            i = s2;
            return;
          }
          c[s2 >> 2] = 5276;
          c[s2 + 4 >> 2] = b2;
          ge(b2 + 64 | 0, c[b2 + 64 >> 2] | 0, c[d2 + 48 >> 2] | 0, s2);
          ge(b2 + 4 | 0, c[b2 + 4 >> 2] | 0, c[d2 + 48 >> 2] | 0, s2);
          i = s2;
          return;
        }
        function Wd(d2, e2, f2, h2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
          k2 = +g[e2 >> 2];
          i2 = (g[l >> 2] = k2, c[l >> 2] | 0);
          r2 = k2 < 999999984306749400 ? i2 : 1566444395;
          j2 = +g[e2 + 4 >> 2];
          n2 = (g[l >> 2] = j2, c[l >> 2] | 0);
          u2 = j2 < 999999984306749400 ? n2 : 1566444395;
          A2 = +g[e2 + 8 >> 2];
          p2 = (g[l >> 2] = A2, c[l >> 2] | 0);
          z2 = A2 < 999999984306749400 ? p2 : 1566444395;
          i2 = k2 > -999999984306749400 ? i2 : -581039253;
          n2 = j2 > -999999984306749400 ? n2 : -581039253;
          p2 = A2 > -999999984306749400 ? p2 : -581039253;
          A2 = +g[e2 + 16 >> 2];
          v2 = A2 < (c[l >> 2] = r2, +g[l >> 2]);
          m2 = (g[l >> 2] = A2, c[l >> 2] | 0);
          r2 = v2 ? m2 : r2;
          j2 = +g[e2 + 20 >> 2];
          v2 = j2 < (c[l >> 2] = u2, +g[l >> 2]);
          o2 = (g[l >> 2] = j2, c[l >> 2] | 0);
          u2 = v2 ? o2 : u2;
          k2 = +g[e2 + 24 >> 2];
          v2 = k2 < (c[l >> 2] = z2, +g[l >> 2]);
          q2 = (g[l >> 2] = k2, c[l >> 2] | 0);
          z2 = v2 ? q2 : z2;
          v2 = (c[l >> 2] = i2, +g[l >> 2]) < A2 ? m2 : i2;
          t2 = (c[l >> 2] = n2, +g[l >> 2]) < j2 ? o2 : n2;
          s2 = (c[l >> 2] = p2, +g[l >> 2]) < k2 ? q2 : p2;
          A2 = +g[e2 + 32 >> 2];
          o2 = A2 < (c[l >> 2] = r2, +g[l >> 2]);
          n2 = (g[l >> 2] = A2, c[l >> 2] | 0);
          o2 = o2 ? n2 : r2;
          k2 = +g[e2 + 36 >> 2];
          m2 = k2 < (c[l >> 2] = u2, +g[l >> 2]);
          q2 = (g[l >> 2] = k2, c[l >> 2] | 0);
          m2 = m2 ? q2 : u2;
          j2 = +g[e2 + 40 >> 2];
          i2 = j2 < (c[l >> 2] = z2, +g[l >> 2]);
          p2 = (g[l >> 2] = j2, c[l >> 2] | 0);
          i2 = i2 ? p2 : z2;
          n2 = (c[l >> 2] = v2, +g[l >> 2]) < A2 ? n2 : v2;
          q2 = (c[l >> 2] = t2, +g[l >> 2]) < k2 ? q2 : t2;
          p2 = (c[l >> 2] = s2, +g[l >> 2]) < j2 ? p2 : s2;
          j2 = (c[l >> 2] = n2, +g[l >> 2]);
          k2 = (c[l >> 2] = o2, +g[l >> 2]);
          if (j2 - k2 < 0.0020000000949949026) {
            n2 = (g[l >> 2] = j2 + 0.0010000000474974513, c[l >> 2] | 0);
            o2 = (g[l >> 2] = k2 + -0.0010000000474974513, c[l >> 2] | 0);
          }
          j2 = (c[l >> 2] = q2, +g[l >> 2]);
          k2 = (c[l >> 2] = m2, +g[l >> 2]);
          if (j2 - k2 < 0.0020000000949949026) {
            q2 = (g[l >> 2] = j2 + 0.0010000000474974513, c[l >> 2] | 0);
            m2 = (g[l >> 2] = k2 + -0.0010000000474974513, c[l >> 2] | 0);
          }
          j2 = (c[l >> 2] = p2, +g[l >> 2]);
          k2 = (c[l >> 2] = i2, +g[l >> 2]);
          if (j2 - k2 < 0.0020000000949949026) {
            p2 = (g[l >> 2] = j2 + 0.0010000000474974513, c[l >> 2] | 0);
            i2 = (g[l >> 2] = k2 + -0.0010000000474974513, c[l >> 2] | 0);
          }
          r2 = c[d2 + 8 >> 2] | 0;
          k2 = +g[r2 + 4 >> 2];
          A2 = (c[l >> 2] = o2, +g[l >> 2]) - k2;
          j2 = +g[r2 + 8 >> 2];
          x2 = (c[l >> 2] = m2, +g[l >> 2]) - j2;
          D2 = +g[r2 + 12 >> 2];
          y2 = +g[r2 + 36 >> 2];
          w2 = +g[r2 + 40 >> 2];
          C2 = +g[r2 + 44 >> 2];
          r2 = ~~(((c[l >> 2] = i2, +g[l >> 2]) - D2) * C2) & 65534;
          k2 = (c[l >> 2] = n2, +g[l >> 2]) - k2;
          j2 = (c[l >> 2] = q2, +g[l >> 2]) - j2;
          p2 = (~~(((c[l >> 2] = p2, +g[l >> 2]) - D2) * C2 + 1) & 65535 | 1) & 65535;
          o2 = c[d2 + 4 >> 2] | 0;
          i2 = c[o2 + 4 >> 2] | 0;
          if ((i2 | 0) == (c[o2 + 8 >> 2] | 0) ? (B2 = i2 | 0 ? i2 << 1 : 1, (i2 | 0) < (B2 | 0)) : 0) {
            if (!B2)
              n2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              i2 = ic((B2 << 4 | 3) + 16 | 0) | 0;
              if (!i2)
                i2 = 0;
              else {
                c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
                i2 = i2 + 4 + 15 & -16;
              }
              n2 = i2;
              i2 = c[o2 + 4 >> 2] | 0;
            }
            if ((i2 | 0) > 0) {
              m2 = 0;
              do {
                d2 = n2 + (m2 << 4) | 0;
                z2 = (c[o2 + 12 >> 2] | 0) + (m2 << 4) | 0;
                c[d2 >> 2] = c[z2 >> 2];
                c[d2 + 4 >> 2] = c[z2 + 4 >> 2];
                c[d2 + 8 >> 2] = c[z2 + 8 >> 2];
                c[d2 + 12 >> 2] = c[z2 + 12 >> 2];
                m2 = m2 + 1 | 0;
              } while ((m2 | 0) != (i2 | 0));
            }
            i2 = c[o2 + 12 >> 2] | 0;
            if (i2 | 0) {
              if (a[o2 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[i2 + -4 >> 2] | 0);
              }
              c[o2 + 12 >> 2] = 0;
            }
            a[o2 + 16 >> 0] = 1;
            c[o2 + 12 >> 2] = n2;
            c[o2 + 8 >> 2] = B2;
            i2 = c[o2 + 4 >> 2] | 0;
          }
          B2 = c[o2 + 12 >> 2] | 0;
          b[B2 + (i2 << 4) >> 1] = ~~(A2 * y2) & 65534;
          b[B2 + (i2 << 4) + 2 >> 1] = ~~(x2 * w2) & 65534;
          b[B2 + (i2 << 4) + 4 >> 1] = r2;
          b[B2 + (i2 << 4) + 6 >> 1] = ~~(k2 * y2 + 1) & 65535 | 1;
          b[B2 + (i2 << 4) + 8 >> 1] = ~~(j2 * w2 + 1) & 65535 | 1;
          b[B2 + (i2 << 4) + 10 >> 1] = p2;
          c[B2 + (i2 << 4) + 12 >> 2] = f2 << 21 | h2;
          c[o2 + 4 >> 2] = (c[o2 + 4 >> 2] | 0) + 1;
          return;
        }
        function Xd(b2, d2, e2, f2, h2, i2, j2, k2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
          c[b2 + 4 >> 2] = 4;
          c[b2 + 8 >> 2] = -1;
          c[b2 + 12 >> 2] = -1;
          g[b2 + 16 >> 2] = 34028234663852886e22;
          a[b2 + 20 >> 0] = 1;
          a[b2 + 21 >> 0] = 0;
          c[b2 + 24 >> 2] = -1;
          c[b2 + 28 >> 2] = d2;
          c[b2 + 32 >> 2] = e2;
          g[b2 + 36 >> 2] = 0;
          g[b2 + 40 >> 2] = 0.30000001192092896;
          c[b2 + 44 >> 2] = 0;
          c[b2 >> 2] = 4452;
          g[b2 + 688 >> 2] = 0;
          g[b2 + 692 >> 2] = -1;
          g[b2 + 696 >> 2] = 0.8999999761581421;
          g[b2 + 700 >> 2] = 0.30000001192092896;
          g[b2 + 704 >> 2] = 1;
          g[b2 + 708 >> 2] = 0;
          g[b2 + 712 >> 2] = 0;
          a[b2 + 716 >> 0] = 0;
          a[b2 + 736 >> 0] = 0;
          a[b2 + 737 >> 0] = 0;
          a[b2 + 738 >> 0] = 0;
          a[b2 + 739 >> 0] = 1;
          a[b2 + 740 >> 0] = k2 & 1;
          c[b2 + 748 >> 2] = 0;
          c[b2 + 748 + 4 >> 2] = 0;
          c[b2 + 748 + 8 >> 2] = 0;
          c[b2 + 748 + 12 >> 2] = 0;
          c[b2 + 748 + 16 >> 2] = 0;
          c[b2 + 600 >> 2] = c[f2 >> 2];
          c[b2 + 600 + 4 >> 2] = c[f2 + 4 >> 2];
          c[b2 + 600 + 8 >> 2] = c[f2 + 8 >> 2];
          c[b2 + 600 + 12 >> 2] = c[f2 + 12 >> 2];
          m2 = +g[d2 + 4 >> 2];
          n2 = +g[d2 + 20 >> 2];
          o2 = +g[d2 + 36 >> 2];
          p2 = +g[i2 >> 2];
          q2 = +g[i2 + 4 >> 2];
          r2 = +g[i2 + 8 >> 2];
          do
            if (!(m2 * p2 + n2 * q2 + o2 * r2 >= 0.9999998807907104))
              if (!(m2 * p2 + n2 * q2 + o2 * r2 <= -0.9999998807907104)) {
                f2 = (g[l >> 2] = o2 * q2 - n2 * r2, c[l >> 2] | 0);
                e2 = (g[l >> 2] = m2 * r2 - o2 * p2, c[l >> 2] | 0);
                k2 = (g[l >> 2] = n2 * p2 - m2 * q2, c[l >> 2] | 0);
                u2 = (g[l >> 2] = r2 * (m2 * r2 - o2 * p2) - q2 * (n2 * p2 - m2 * q2), c[l >> 2] | 0);
                v2 = (g[l >> 2] = p2 * (n2 * p2 - m2 * q2) - r2 * (o2 * q2 - n2 * r2), c[l >> 2] | 0);
                t2 = (g[l >> 2] = q2 * (o2 * q2 - n2 * r2) - p2 * (m2 * r2 - o2 * p2), c[l >> 2] | 0);
                break;
              } else {
                f2 = c[d2 + 8 >> 2] | 0;
                u2 = c[d2 + 12 >> 2] | 0;
                v2 = c[d2 + 28 >> 2] | 0;
                k2 = c[d2 + 40 >> 2] | 0;
                t2 = c[d2 + 44 >> 2] | 0;
                e2 = c[d2 + 24 >> 2] | 0;
                break;
              }
            else {
              u2 = (g[l >> 2] = -+g[d2 + 12 >> 2], c[l >> 2] | 0);
              v2 = (g[l >> 2] = -+g[d2 + 28 >> 2], c[l >> 2] | 0);
              f2 = c[d2 + 8 >> 2] | 0;
              k2 = c[d2 + 40 >> 2] | 0;
              t2 = (g[l >> 2] = -+g[d2 + 44 >> 2], c[l >> 2] | 0);
              e2 = c[d2 + 24 >> 2] | 0;
            }
          while (0);
          c[b2 + 552 >> 2] = u2;
          c[b2 + 556 >> 2] = f2;
          c[b2 + 560 >> 2] = c[i2 >> 2];
          g[b2 + 564 >> 2] = 0;
          c[b2 + 568 >> 2] = v2;
          c[b2 + 572 >> 2] = e2;
          c[b2 + 576 >> 2] = c[i2 + 4 >> 2];
          g[b2 + 580 >> 2] = 0;
          c[b2 + 584 >> 2] = t2;
          c[b2 + 588 >> 2] = k2;
          c[b2 + 592 >> 2] = c[i2 + 8 >> 2];
          g[b2 + 596 >> 2] = 0;
          p2 = +g[i2 + 4 >> 2];
          q2 = +g[j2 + 8 >> 2];
          m2 = +g[i2 + 8 >> 2];
          r2 = +g[j2 + 4 >> 2];
          s2 = +g[j2 >> 2];
          n2 = +g[i2 >> 2];
          do
            if (q2 * m2 + (p2 * r2 + s2 * n2) < -0.9999998807907104)
              if (+F(+m2) > 0.7071067690849304) {
                n2 = 1 / +G(+(p2 * p2 + m2 * m2));
                f2 = 0;
                o2 = 0;
                m2 = -(m2 * n2);
                e2 = (g[l >> 2] = p2 * n2, c[l >> 2] | 0);
                break;
              } else {
                m2 = 1 / +G(+(p2 * p2 + n2 * n2));
                f2 = (g[l >> 2] = -(p2 * m2), c[l >> 2] | 0);
                o2 = 0;
                m2 = n2 * m2;
                e2 = 0;
                break;
              }
            else {
              w2 = +G(+((q2 * m2 + (p2 * r2 + s2 * n2) + 1) * 2));
              f2 = (g[l >> 2] = (p2 * q2 - m2 * r2) * (1 / w2), c[l >> 2] | 0);
              o2 = w2 * 0.5;
              m2 = (m2 * s2 - q2 * n2) * (1 / w2);
              e2 = (g[l >> 2] = (r2 * n2 - p2 * s2) * (1 / w2), c[l >> 2] | 0);
            }
          while (0);
          p2 = (c[l >> 2] = u2, +g[l >> 2]);
          A2 = (c[l >> 2] = t2, +g[l >> 2]);
          z2 = (c[l >> 2] = e2, +g[l >> 2]);
          w2 = (c[l >> 2] = v2, +g[l >> 2]);
          B2 = p2 * o2 + A2 * m2 - w2 * z2;
          n2 = (c[l >> 2] = f2, +g[l >> 2]);
          x2 = w2 * o2 + p2 * z2 - A2 * n2;
          y2 = A2 * o2 + w2 * n2 - p2 * m2;
          A2 = -(p2 * n2) - w2 * m2 - A2 * z2;
          m2 = -m2;
          w2 = x2 * -z2 + (o2 * B2 + A2 * -n2) - y2 * m2;
          p2 = y2 * -n2 + (o2 * x2 + A2 * m2) - B2 * -z2;
          o2 = B2 * m2 + (A2 * -z2 + o2 * y2) - x2 * -n2;
          c[b2 + 664 >> 2] = c[h2 >> 2];
          c[b2 + 664 + 4 >> 2] = c[h2 + 4 >> 2];
          c[b2 + 664 + 8 >> 2] = c[h2 + 8 >> 2];
          c[b2 + 664 + 12 >> 2] = c[h2 + 12 >> 2];
          g[b2 + 616 >> 2] = w2;
          g[b2 + 620 >> 2] = r2 * o2 - q2 * p2;
          c[b2 + 624 >> 2] = c[j2 >> 2];
          g[b2 + 628 >> 2] = 0;
          g[b2 + 632 >> 2] = p2;
          g[b2 + 636 >> 2] = q2 * w2 - s2 * o2;
          c[b2 + 640 >> 2] = c[j2 + 4 >> 2];
          g[b2 + 644 >> 2] = 0;
          g[b2 + 648 >> 2] = o2;
          g[b2 + 652 >> 2] = s2 * p2 - r2 * w2;
          c[b2 + 656 >> 2] = c[j2 + 8 >> 2];
          g[b2 + 660 >> 2] = 0;
          g[b2 + 732 >> 2] = a[b2 + 740 >> 0] | 0 ? -1 : 1;
          return;
        }
        function Yd(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          p2 = i;
          i = i + 144 | 0;
          if ((c[a2 + 20 >> 2] | 0) <= 0) {
            o2 = a2 + 80 | 0;
            c[o2 >> 2] = c[b2 >> 2];
            c[o2 + 4 >> 2] = c[b2 + 4 >> 2];
            c[o2 + 8 >> 2] = c[b2 + 8 >> 2];
            c[o2 + 12 >> 2] = c[b2 + 12 >> 2];
            o2 = c[a2 >> 2] | 0;
            o2 = o2 + 68 | 0;
            o2 = c[o2 >> 2] | 0;
            kb[o2 & 255](a2);
            i = p2;
            return;
          }
          k2 = p2 + 16 + 16 | 0;
          l2 = p2 + 16 + 32 | 0;
          m2 = p2 + 16 + 48 | 0;
          j2 = 0;
          do {
            o2 = c[a2 + 28 >> 2] | 0;
            n2 = o2 + (j2 * 80 | 0) | 0;
            c[p2 + 16 >> 2] = c[n2 >> 2];
            c[p2 + 16 + 4 >> 2] = c[n2 + 4 >> 2];
            c[p2 + 16 + 8 >> 2] = c[n2 + 8 >> 2];
            c[p2 + 16 + 12 >> 2] = c[n2 + 12 >> 2];
            n2 = o2 + (j2 * 80 | 0) + 16 | 0;
            c[k2 >> 2] = c[n2 >> 2];
            c[k2 + 4 >> 2] = c[n2 + 4 >> 2];
            c[k2 + 8 >> 2] = c[n2 + 8 >> 2];
            c[k2 + 12 >> 2] = c[n2 + 12 >> 2];
            n2 = o2 + (j2 * 80 | 0) + 32 | 0;
            c[l2 >> 2] = c[n2 >> 2];
            c[l2 + 4 >> 2] = c[n2 + 4 >> 2];
            c[l2 + 8 >> 2] = c[n2 + 8 >> 2];
            c[l2 + 12 >> 2] = c[n2 + 12 >> 2];
            n2 = o2 + (j2 * 80 | 0) + 48 | 0;
            c[m2 >> 2] = c[n2 >> 2];
            c[m2 + 4 >> 2] = c[n2 + 4 >> 2];
            c[m2 + 8 >> 2] = c[n2 + 8 >> 2];
            c[m2 + 12 >> 2] = c[n2 + 12 >> 2];
            o2 = c[o2 + (j2 * 80 | 0) + 64 >> 2] | 0;
            o2 = ob[c[(c[o2 >> 2] | 0) + 28 >> 2] & 127](o2) | 0;
            c[p2 >> 2] = c[o2 >> 2];
            c[p2 + 4 >> 2] = c[o2 + 4 >> 2];
            c[p2 + 8 >> 2] = c[o2 + 8 >> 2];
            q2 = +g[p2 + 4 >> 2] * +g[b2 + 4 >> 2] / +g[a2 + 84 >> 2];
            r2 = +g[p2 + 8 >> 2] * +g[b2 + 8 >> 2] / +g[a2 + 88 >> 2];
            g[p2 >> 2] = +g[p2 >> 2] * +g[b2 >> 2] / +g[a2 + 80 >> 2];
            g[p2 + 4 >> 2] = q2;
            g[p2 + 8 >> 2] = r2;
            g[p2 + 12 >> 2] = 0;
            o2 = c[(c[a2 + 28 >> 2] | 0) + (j2 * 80 | 0) + 64 >> 2] | 0;
            mb[c[(c[o2 >> 2] | 0) + 24 >> 2] & 127](o2, p2);
            r2 = +g[p2 + 16 + 52 >> 2] * +g[b2 + 4 >> 2] / +g[a2 + 84 >> 2];
            q2 = +g[p2 + 16 + 56 >> 2] * +g[b2 + 8 >> 2] / +g[a2 + 88 >> 2];
            g[p2 + 16 + 48 >> 2] = +g[m2 >> 2] * +g[b2 >> 2] / +g[a2 + 80 >> 2];
            g[p2 + 16 + 52 >> 2] = r2;
            g[p2 + 16 + 56 >> 2] = q2;
            g[p2 + 16 + 60 >> 2] = 0;
            o2 = c[a2 + 28 >> 2] | 0;
            n2 = o2 + (j2 * 80 | 0) | 0;
            c[n2 >> 2] = c[p2 + 16 >> 2];
            c[n2 + 4 >> 2] = c[p2 + 16 + 4 >> 2];
            c[n2 + 8 >> 2] = c[p2 + 16 + 8 >> 2];
            c[n2 + 12 >> 2] = c[p2 + 16 + 12 >> 2];
            n2 = o2 + (j2 * 80 | 0) + 16 | 0;
            c[n2 >> 2] = c[k2 >> 2];
            c[n2 + 4 >> 2] = c[k2 + 4 >> 2];
            c[n2 + 8 >> 2] = c[k2 + 8 >> 2];
            c[n2 + 12 >> 2] = c[k2 + 12 >> 2];
            n2 = o2 + (j2 * 80 | 0) + 32 | 0;
            c[n2 >> 2] = c[l2 >> 2];
            c[n2 + 4 >> 2] = c[l2 + 4 >> 2];
            c[n2 + 8 >> 2] = c[l2 + 8 >> 2];
            c[n2 + 12 >> 2] = c[l2 + 12 >> 2];
            o2 = o2 + (j2 * 80 | 0) + 48 | 0;
            c[o2 >> 2] = c[m2 >> 2];
            c[o2 + 4 >> 2] = c[m2 + 4 >> 2];
            c[o2 + 8 >> 2] = c[m2 + 8 >> 2];
            c[o2 + 12 >> 2] = c[m2 + 12 >> 2];
            if (c[a2 + 68 >> 2] | 0) {
              n2 = c[(c[a2 + 28 >> 2] | 0) + (j2 * 80 | 0) + 64 >> 2] | 0;
              Yb[c[(c[n2 >> 2] | 0) + 8 >> 2] & 127](n2, p2 + 16 | 0, p2 + 128 | 0, p2 + 112 | 0);
              c[p2 + 80 >> 2] = c[p2 + 128 >> 2];
              c[p2 + 80 + 4 >> 2] = c[p2 + 128 + 4 >> 2];
              c[p2 + 80 + 8 >> 2] = c[p2 + 128 + 8 >> 2];
              c[p2 + 80 + 12 >> 2] = c[p2 + 128 + 12 >> 2];
              c[p2 + 80 + 16 >> 2] = c[p2 + 112 >> 2];
              c[p2 + 80 + 16 + 4 >> 2] = c[p2 + 112 + 4 >> 2];
              c[p2 + 80 + 16 + 8 >> 2] = c[p2 + 112 + 8 >> 2];
              c[p2 + 80 + 16 + 12 >> 2] = c[p2 + 112 + 12 >> 2];
              n2 = c[a2 + 68 >> 2] | 0;
              o2 = c[(c[a2 + 28 >> 2] | 0) + (j2 * 80 | 0) + 76 >> 2] | 0;
              d2 = Wg(n2, o2) | 0;
              a:
                do
                  if (d2) {
                    h2 = c[n2 + 8 >> 2] | 0;
                    if ((h2 | 0) <= -1) {
                      d2 = c[n2 >> 2] | 0;
                      break;
                    }
                    if (h2) {
                      e2 = 0;
                      while (1) {
                        f2 = c[d2 + 32 >> 2] | 0;
                        e2 = e2 + 1 | 0;
                        if (!f2)
                          break a;
                        if ((e2 | 0) >= (h2 | 0)) {
                          d2 = f2;
                          break;
                        } else
                          d2 = f2;
                      }
                    }
                  } else
                    d2 = 0;
                while (0);
              c[o2 >> 2] = c[p2 + 80 >> 2];
              c[o2 + 4 >> 2] = c[p2 + 80 + 4 >> 2];
              c[o2 + 8 >> 2] = c[p2 + 80 + 8 >> 2];
              c[o2 + 12 >> 2] = c[p2 + 80 + 12 >> 2];
              c[o2 + 16 >> 2] = c[p2 + 80 + 16 >> 2];
              c[o2 + 20 >> 2] = c[p2 + 80 + 20 >> 2];
              c[o2 + 24 >> 2] = c[p2 + 80 + 24 >> 2];
              c[o2 + 28 >> 2] = c[p2 + 80 + 28 >> 2];
              Ze(n2, d2, o2);
            }
            j2 = j2 + 1 | 0;
          } while ((j2 | 0) < (c[a2 + 20 >> 2] | 0));
          o2 = a2 + 80 | 0;
          c[o2 >> 2] = c[b2 >> 2];
          c[o2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[o2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[o2 + 12 >> 2] = c[b2 + 12 >> 2];
          o2 = c[a2 >> 2] | 0;
          o2 = o2 + 68 | 0;
          o2 = c[o2 >> 2] | 0;
          kb[o2 & 255](a2);
          i = p2;
          return;
        }
        function Zd(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          s2 = i;
          i = i + 96 | 0;
          q2 = c[b2 + 12 >> 2] | 0;
          Yb[c[(c[q2 >> 2] | 0) + 8 >> 2] & 127](q2, (c[b2 + 8 >> 2] | 0) + 4 | 0, s2 + 80 | 0, s2 + 64 | 0);
          q2 = c[d2 + 68 >> 2] | 0;
          ib[c[(c[q2 >> 2] | 0) + 16 >> 2] & 31](q2, c[(c[b2 + 8 >> 2] | 0) + 188 >> 2] | 0, s2 + 80 | 0, s2 + 64 | 0, c[d2 + 24 >> 2] | 0);
          q2 = c[d2 + 24 >> 2] | 0;
          Yb[c[(c[q2 >> 2] | 0) + 32 >> 2] & 127](q2, c[(c[b2 + 8 >> 2] | 0) + 324 >> 2] | 0, d2 + 28 | 0, q2);
          q2 = c[b2 + 8 >> 2] | 0;
          c[b2 + 132 >> 2] = c[q2 + 52 >> 2];
          c[b2 + 132 + 4 >> 2] = c[q2 + 52 + 4 >> 2];
          c[b2 + 132 + 8 >> 2] = c[q2 + 52 + 8 >> 2];
          c[b2 + 132 + 12 >> 2] = c[q2 + 52 + 12 >> 2];
          q2 = c[q2 + 324 >> 2] | 0;
          if ((ob[c[(c[q2 >> 2] | 0) + 36 >> 2] & 127](q2) | 0) > 0) {
            d2 = 0;
            q2 = 0;
            do {
              e2 = c[b2 + 204 >> 2] | 0;
              if ((e2 | 0) < 0) {
                if ((c[b2 + 208 >> 2] | 0) < 0) {
                  f2 = c[b2 + 212 >> 2] | 0;
                  if (f2 | 0) {
                    if (a[b2 + 216 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[f2 + -4 >> 2] | 0);
                    }
                    c[b2 + 212 >> 2] = 0;
                  }
                  a[b2 + 216 >> 0] = 1;
                  c[b2 + 212 >> 2] = 0;
                  c[b2 + 208 >> 2] = 0;
                }
                do {
                  c[(c[b2 + 212 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != 0);
              }
              c[b2 + 204 >> 2] = 0;
              e2 = c[(c[b2 + 8 >> 2] | 0) + 324 >> 2] | 0;
              e2 = c[(ob[c[(c[e2 >> 2] | 0) + 28 >> 2] & 127](e2) | 0) + 12 >> 2] | 0;
              f2 = c[c[e2 + (q2 << 4) >> 2] >> 2] | 0;
              h2 = c[c[e2 + (q2 << 4) + 4 >> 2] >> 2] | 0;
              if (!((f2 | 0) != 0 ? (c[f2 + 204 >> 2] & 4 | 0) != 0 : 0))
                r2 = 14;
              do
                if ((r2 | 0) == 14) {
                  r2 = 0;
                  if (h2 | 0 ? c[h2 + 204 >> 2] & 4 | 0 : 0)
                    break;
                  if (yb[c[(c[b2 >> 2] | 0) + 56 >> 2] & 63](b2, f2, h2) | 0) {
                    e2 = c[e2 + (q2 << 4) + 8 >> 2] | 0;
                    if (e2 | 0)
                      mb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, b2 + 200 | 0);
                    p2 = c[b2 + 204 >> 2] | 0;
                    if ((p2 | 0) > 0) {
                      n2 = c[b2 + 212 >> 2] | 0;
                      o2 = c[b2 + 8 >> 2] | 0;
                      m2 = 0;
                      do {
                        f2 = c[n2 + (m2 << 2) >> 2] | 0;
                        k2 = (c[f2 + 772 >> 2] | 0) == (o2 | 0) ? -1 : 1;
                        h2 = c[f2 + 780 >> 2] | 0;
                        if ((h2 | 0) > 0) {
                          l2 = -+g[b2 + 16 >> 2];
                          e2 = 0;
                          do {
                            j2 = +g[f2 + 4 + (e2 * 192 | 0) + 80 >> 2];
                            if (j2 < l2) {
                              u2 = j2 * k2 * +g[f2 + 4 + (e2 * 192 | 0) + 68 >> 2] * 0.20000000298023224;
                              t2 = j2 * k2 * +g[f2 + 4 + (e2 * 192 | 0) + 72 >> 2] * 0.20000000298023224;
                              g[b2 + 132 >> 2] = j2 * k2 * +g[f2 + 4 + (e2 * 192 | 0) + 64 >> 2] * 0.20000000298023224 + +g[b2 + 132 >> 2];
                              g[b2 + 136 >> 2] = u2 + +g[b2 + 136 >> 2];
                              g[b2 + 140 >> 2] = t2 + +g[b2 + 140 >> 2];
                              d2 = 1;
                            }
                            e2 = e2 + 1 | 0;
                          } while ((e2 | 0) != (h2 | 0));
                        }
                        m2 = m2 + 1 | 0;
                      } while ((m2 | 0) != (p2 | 0));
                    }
                  }
                }
              while (0);
              q2 = q2 + 1 | 0;
              p2 = c[(c[b2 + 8 >> 2] | 0) + 324 >> 2] | 0;
            } while ((q2 | 0) < (ob[c[(c[p2 >> 2] | 0) + 36 >> 2] & 127](p2) | 0));
          } else
            d2 = 0;
          r2 = c[b2 + 8 >> 2] | 0;
          c[s2 >> 2] = c[r2 + 4 >> 2];
          c[s2 + 4 >> 2] = c[r2 + 4 + 4 >> 2];
          c[s2 + 8 >> 2] = c[r2 + 4 + 8 >> 2];
          c[s2 + 12 >> 2] = c[r2 + 4 + 12 >> 2];
          c[s2 + 16 >> 2] = c[r2 + 20 >> 2];
          c[s2 + 16 + 4 >> 2] = c[r2 + 20 + 4 >> 2];
          c[s2 + 16 + 8 >> 2] = c[r2 + 20 + 8 >> 2];
          c[s2 + 16 + 12 >> 2] = c[r2 + 20 + 12 >> 2];
          c[s2 + 32 >> 2] = c[r2 + 36 >> 2];
          c[s2 + 32 + 4 >> 2] = c[r2 + 36 + 4 >> 2];
          c[s2 + 32 + 8 >> 2] = c[r2 + 36 + 8 >> 2];
          c[s2 + 32 + 12 >> 2] = c[r2 + 36 + 12 >> 2];
          c[s2 + 48 >> 2] = c[b2 + 132 >> 2];
          c[s2 + 48 + 4 >> 2] = c[b2 + 132 + 4 >> 2];
          c[s2 + 48 + 8 >> 2] = c[b2 + 132 + 8 >> 2];
          c[s2 + 48 + 12 >> 2] = c[b2 + 132 + 12 >> 2];
          c[r2 + 300 >> 2] = (c[r2 + 300 >> 2] | 0) + 1;
          c[r2 + 4 >> 2] = c[s2 >> 2];
          c[r2 + 4 + 4 >> 2] = c[s2 + 4 >> 2];
          c[r2 + 4 + 8 >> 2] = c[s2 + 8 >> 2];
          c[r2 + 4 + 12 >> 2] = c[s2 + 12 >> 2];
          c[r2 + 20 >> 2] = c[s2 + 16 >> 2];
          c[r2 + 20 + 4 >> 2] = c[s2 + 16 + 4 >> 2];
          c[r2 + 20 + 8 >> 2] = c[s2 + 16 + 8 >> 2];
          c[r2 + 20 + 12 >> 2] = c[s2 + 16 + 12 >> 2];
          c[r2 + 36 >> 2] = c[s2 + 32 >> 2];
          c[r2 + 36 + 4 >> 2] = c[s2 + 32 + 4 >> 2];
          c[r2 + 36 + 8 >> 2] = c[s2 + 32 + 8 >> 2];
          c[r2 + 36 + 12 >> 2] = c[s2 + 32 + 12 >> 2];
          c[r2 + 52 >> 2] = c[s2 + 48 >> 2];
          c[r2 + 52 + 4 >> 2] = c[s2 + 48 + 4 >> 2];
          c[r2 + 52 + 8 >> 2] = c[s2 + 48 + 8 >> 2];
          c[r2 + 52 + 12 >> 2] = c[s2 + 48 + 12 >> 2];
          i = s2;
          return d2 | 0;
        }
        function _d(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          m2 = i;
          i = i + 336 | 0;
          f2 = c[d2 + 36 >> 2] | 0;
          c[m2 + 272 + 4 >> 2] = 35;
          c[m2 + 272 + 8 >> 2] = 0;
          c[m2 + 272 + 12 >> 2] = -1;
          c[m2 + 272 + 16 >> 2] = 1065353216;
          c[m2 + 272 + 20 >> 2] = 1065353216;
          c[m2 + 272 + 24 >> 2] = 1065353216;
          g[m2 + 272 + 28 >> 2] = 0;
          c[m2 + 272 >> 2] = 3252;
          c[m2 + 272 + 56 >> 2] = f2;
          g[m2 + 272 + 48 >> 2] = 0;
          k2 = c[b2 + 28 >> 2] | 0;
          d2 = c[k2 + 4 >> 2] | 0;
          if (c[(c[k2 + 8 >> 2] | 0) + 204 >> 2] & 3 | 0 ? a[f2 + 376 >> 0] | 0 : 0) {
            i = m2;
            return;
          }
          if (!(a[21984] | 0)) {
            a[21984] = 1;
            if (!(a[21992] | 0)) {
              a[21992] = 1;
              c[5577] = 1065353216;
              c[5578] = 0;
              c[5579] = 0;
              c[5580] = 0;
              c[5581] = 0;
              c[5582] = 1065353216;
              c[5583] = 0;
              c[5584] = 0;
              c[5585] = 0;
              c[5586] = 0;
              c[5587] = 1065353216;
              g[5588] = 0;
            }
            c[5561] = c[5577];
            c[5562] = c[5578];
            c[5563] = c[5579];
            c[5564] = c[5580];
            c[5565] = c[5581];
            c[5566] = c[5582];
            c[5567] = c[5583];
            c[5568] = c[5584];
            c[5569] = c[5585];
            c[5570] = c[5586];
            c[5571] = c[5587];
            c[5572] = c[5588];
            c[5573] = 0;
            c[5574] = 0;
            c[5575] = 0;
            c[5576] = 0;
          }
          e2 = c[(c[b2 + 28 >> 2] | 0) + 12 >> 2] | 0;
          c[m2 >> 2] = 1065353216;
          c[m2 + 4 >> 2] = 0;
          c[m2 + 8 >> 2] = 0;
          g[m2 + 12 >> 2] = 0;
          if (!(!(td(m2 + 272 | 0, 22244, d2, e2, m2, m2 + 216 | 0) | 0) ? !(Bc(m2 + 272 | 0, 22244, d2, e2, m2, m2 + 216 | 0, 0) | 0) : 0)) {
            c[m2 + 4 >> 2] = 0;
            c[m2 + 4 + 4 >> 2] = 0;
            c[m2 + 4 + 8 >> 2] = 0;
            c[m2 + 4 + 12 >> 2] = 0;
            c[m2 + 4 + 16 >> 2] = 0;
            c[m2 + 4 + 20 >> 2] = 0;
            a[m2 + 152 >> 0] = 0;
            c[m2 >> 2] = 3072;
            k2 = c[(c[b2 + 28 >> 2] | 0) + 8 >> 2] | 0;
            do
              if (Uc(b2, m2 + 216 | 0, f2, 0, 0, 0, (c[k2 + 248 >> 2] & 2 | 0) == 0 ? 0 : k2, k2, m2) | 0) {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic(235) | 0;
                if (!d2)
                  k2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  k2 = d2 + 4 + 15 & -16;
                }
                e2 = k2 + 4 | 0;
                d2 = k2 + 152 | 0;
                yn(e2 | 0, 0, 212) | 0;
                c[k2 >> 2] = 3072;
                f2 = m2 + 4 | 0;
                h2 = e2 + 100 | 0;
                do {
                  c[e2 >> 2] = c[f2 >> 2];
                  e2 = e2 + 4 | 0;
                  f2 = f2 + 4 | 0;
                } while ((e2 | 0) < (h2 | 0));
                e2 = k2 + 104 | 0;
                c[e2 >> 2] = c[m2 + 104 >> 2];
                c[e2 + 4 >> 2] = c[m2 + 104 + 4 >> 2];
                c[e2 + 8 >> 2] = c[m2 + 104 + 8 >> 2];
                c[e2 + 12 >> 2] = c[m2 + 104 + 12 >> 2];
                e2 = k2 + 120 | 0;
                c[e2 >> 2] = c[m2 + 120 >> 2];
                c[e2 + 4 >> 2] = c[m2 + 120 + 4 >> 2];
                c[e2 + 8 >> 2] = c[m2 + 120 + 8 >> 2];
                c[e2 + 12 >> 2] = c[m2 + 120 + 12 >> 2];
                e2 = k2 + 136 | 0;
                c[e2 >> 2] = c[m2 + 136 >> 2];
                c[e2 + 4 >> 2] = c[m2 + 136 + 4 >> 2];
                c[e2 + 8 >> 2] = c[m2 + 136 + 8 >> 2];
                c[e2 + 12 >> 2] = c[m2 + 136 + 12 >> 2];
                a[d2 >> 0] = a[m2 + 152 >> 0] | 0;
                e2 = k2 + 156 | 0;
                f2 = m2 + 156 | 0;
                h2 = e2 + 60 | 0;
                do {
                  c[e2 >> 2] = c[f2 >> 2];
                  e2 = e2 + 4 | 0;
                  f2 = f2 + 4 | 0;
                } while ((e2 | 0) < (h2 | 0));
                h2 = c[b2 + 24 >> 2] | 0;
                j2 = k2;
                d2 = c[h2 + 892 >> 2] | 0;
                if ((d2 | 0) == (c[h2 + 896 >> 2] | 0) ? (l2 = d2 | 0 ? d2 << 1 : 1, (d2 | 0) < (l2 | 0)) : 0) {
                  if (!l2)
                    f2 = 0;
                  else {
                    c[6324] = (c[6324] | 0) + 1;
                    d2 = ic((l2 << 2 | 3) + 16 | 0) | 0;
                    if (!d2)
                      d2 = 0;
                    else {
                      c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                      d2 = d2 + 4 + 15 & -16;
                    }
                    f2 = d2;
                    d2 = c[h2 + 892 >> 2] | 0;
                  }
                  if ((d2 | 0) > 0) {
                    e2 = 0;
                    do {
                      c[f2 + (e2 << 2) >> 2] = c[(c[h2 + 900 >> 2] | 0) + (e2 << 2) >> 2];
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (d2 | 0));
                  }
                  e2 = c[h2 + 900 >> 2] | 0;
                  if (e2) {
                    if (a[h2 + 904 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[e2 + -4 >> 2] | 0);
                      d2 = c[h2 + 892 >> 2] | 0;
                    }
                    c[h2 + 900 >> 2] = 0;
                  }
                  a[h2 + 904 >> 0] = 1;
                  c[h2 + 900 >> 2] = f2;
                  c[h2 + 896 >> 2] = l2;
                }
                c[(c[h2 + 900 >> 2] | 0) + (d2 << 2) >> 2] = j2;
                c[h2 + 892 >> 2] = d2 + 1;
                d2 = c[b2 + 24 >> 2] | 0;
                if (!(c[(c[(c[b2 + 28 >> 2] | 0) + 8 >> 2] | 0) + 204 >> 2] & 3)) {
                  b2 = k2 + 64 | 0;
                  g[b2 >> 2] = +g[d2 + 380 >> 2] * +g[b2 >> 2];
                  b2 = k2 + 68 | 0;
                  g[b2 >> 2] = +g[d2 + 392 >> 2] * +g[b2 >> 2];
                  break;
                } else {
                  b2 = k2 + 64 | 0;
                  g[b2 >> 2] = +g[d2 + 384 >> 2] * +g[b2 >> 2];
                  b2 = k2 + 68 | 0;
                  g[b2 >> 2] = +g[d2 + 396 >> 2] * +g[b2 >> 2];
                  break;
                }
              }
            while (0);
          }
          i = m2;
          return;
        }
        function $d(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0;
          B2 = c[a2 + 752 >> 2] | 0;
          if ((B2 | 0) >= 1) {
            c[6324] = (c[6324] | 0) + 1;
            d2 = ic((B2 << 4 | 3) + 16 | 0) | 0;
            if (!d2)
              h2 = 0;
            else {
              c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
              h2 = d2 + 4 + 15 & -16;
            }
            yn(h2 | 0, 0, B2 << 4 | 0) | 0;
            f2 = c[a2 + 752 >> 2] | 0;
            if ((f2 | 0) > 0) {
              c[6324] = (c[6324] | 0) + 1;
              d2 = ic((f2 << 2 | 3) + 16 | 0) | 0;
              if (!d2)
                d2 = 0;
              else {
                c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                d2 = d2 + 4 + 15 & -16;
              }
              yn(d2 | 0, 0, f2 << 2 | 0) | 0;
              A2 = d2;
              z2 = h2;
            } else {
              A2 = 0;
              z2 = h2;
            }
          } else {
            A2 = 0;
            z2 = 0;
          }
          y2 = c[a2 + 1152 >> 2] | 0;
          if (b2) {
            if ((y2 | 0) > 0) {
              i2 = c[a2 + 1160 >> 2] | 0;
              d2 = 0;
              do {
                f2 = c[i2 + (d2 << 2) >> 2] | 0;
                h2 = c[f2 + 312 >> 2] | 0;
                if (h2 | 0) {
                  g[f2 + 276 >> 2] = 1 / +(h2 | 0) * +g[f2 + 276 >> 2];
                  g[f2 + 280 >> 2] = 1 / +(h2 | 0) * +g[f2 + 280 >> 2];
                  g[f2 + 284 >> 2] = 1 / +(h2 | 0) * +g[f2 + 284 >> 2];
                  g[f2 + 292 >> 2] = +g[f2 + 292 >> 2] * (1 / +(h2 | 0));
                  g[f2 + 296 >> 2] = 1 / +(h2 | 0) * +g[f2 + 296 >> 2];
                  g[f2 + 300 >> 2] = 1 / +(h2 | 0) * +g[f2 + 300 >> 2];
                }
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) != (y2 | 0));
              i2 = 11;
            }
          } else
            i2 = 11;
          if ((i2 | 0) == 11 ? (y2 | 0) > 0 : 0) {
            k2 = c[a2 + 1160 >> 2] | 0;
            if (b2) {
              f2 = 0;
              do {
                h2 = c[k2 + (f2 << 2) >> 2] | 0;
                if ((c[h2 + 312 >> 2] | 0) > 0 ? (w2 = +g[a2 + 492 >> 2], r2 = +g[h2 + 276 >> 2] * w2, s2 = w2 * +g[h2 + 280 >> 2], t2 = w2 * +g[h2 + 284 >> 2], u2 = w2 * +g[h2 + 292 >> 2], v2 = w2 * +g[h2 + 296 >> 2], w2 = w2 * +g[h2 + 300 >> 2], x2 = c[h2 + 24 >> 2] | 0, (x2 | 0) > 0) : 0) {
                  i2 = c[h2 + 32 >> 2] | 0;
                  b2 = c[a2 + 760 >> 2] | 0;
                  j2 = c[h2 + 12 >> 2] | 0;
                  d2 = 0;
                  do {
                    q2 = c[i2 + (d2 << 2) >> 2] | 0;
                    p2 = +g[j2 + (d2 << 2) >> 2];
                    o2 = +g[q2 + 8 >> 2] - +g[h2 + 228 >> 2];
                    n2 = +g[q2 + 12 >> 2] - +g[h2 + 232 >> 2];
                    m2 = +g[q2 + 16 >> 2] - +g[h2 + 236 >> 2];
                    C2 = z2 + (((q2 - b2 | 0) / 104 | 0) << 4) | 0;
                    g[C2 >> 2] = +g[C2 >> 2] + p2 * (r2 + (v2 * m2 - w2 * n2));
                    C2 = z2 + (((q2 - b2 | 0) / 104 | 0) << 4) + 4 | 0;
                    g[C2 >> 2] = +g[C2 >> 2] + p2 * (s2 + (w2 * o2 - u2 * m2));
                    C2 = z2 + (((q2 - b2 | 0) / 104 | 0) << 4) + 8 | 0;
                    g[C2 >> 2] = p2 * (t2 + (u2 * n2 - v2 * o2)) + +g[C2 >> 2];
                    q2 = A2 + (((q2 - b2 | 0) / 104 | 0) << 2) | 0;
                    g[q2 >> 2] = p2 + +g[q2 >> 2];
                    d2 = d2 + 1 | 0;
                  } while ((d2 | 0) != (x2 | 0));
                }
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (y2 | 0));
            } else {
              f2 = 0;
              do {
                h2 = c[k2 + (f2 << 2) >> 2] | 0;
                if ((c[h2 + 308 >> 2] | 0) > 0 ? (p2 = +g[a2 + 492 >> 2], e2 = +g[h2 + 244 >> 2] * p2, l2 = p2 * +g[h2 + 248 >> 2], m2 = p2 * +g[h2 + 252 >> 2], n2 = p2 * +g[h2 + 260 >> 2], o2 = p2 * +g[h2 + 264 >> 2], p2 = p2 * +g[h2 + 268 >> 2], q2 = c[h2 + 24 >> 2] | 0, (q2 | 0) > 0) : 0) {
                  i2 = c[h2 + 32 >> 2] | 0;
                  b2 = c[a2 + 760 >> 2] | 0;
                  j2 = c[h2 + 12 >> 2] | 0;
                  d2 = 0;
                  do {
                    C2 = c[i2 + (d2 << 2) >> 2] | 0;
                    w2 = +g[j2 + (d2 << 2) >> 2];
                    v2 = +g[C2 + 8 >> 2] - +g[h2 + 228 >> 2];
                    u2 = +g[C2 + 12 >> 2] - +g[h2 + 232 >> 2];
                    t2 = +g[C2 + 16 >> 2] - +g[h2 + 236 >> 2];
                    x2 = z2 + (((C2 - b2 | 0) / 104 | 0) << 4) | 0;
                    g[x2 >> 2] = +g[x2 >> 2] + w2 * (e2 + (o2 * t2 - p2 * u2));
                    x2 = z2 + (((C2 - b2 | 0) / 104 | 0) << 4) + 4 | 0;
                    g[x2 >> 2] = +g[x2 >> 2] + w2 * (l2 + (p2 * v2 - n2 * t2));
                    x2 = z2 + (((C2 - b2 | 0) / 104 | 0) << 4) + 8 | 0;
                    g[x2 >> 2] = w2 * (m2 + (n2 * u2 - o2 * v2)) + +g[x2 >> 2];
                    C2 = A2 + (((C2 - b2 | 0) / 104 | 0) << 2) | 0;
                    g[C2 >> 2] = w2 + +g[C2 >> 2];
                    d2 = d2 + 1 | 0;
                  } while ((d2 | 0) != (q2 | 0));
                }
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (y2 | 0));
            }
          }
          if ((B2 | 0) > 0) {
            d2 = 0;
            do {
              e2 = +g[A2 + (d2 << 2) >> 2];
              if (e2 > 0) {
                C2 = c[a2 + 760 >> 2] | 0;
                v2 = 1 / e2 * +g[z2 + (d2 << 4) + 4 >> 2];
                w2 = 1 / e2 * +g[z2 + (d2 << 4) + 8 >> 2];
                y2 = C2 + (d2 * 104 | 0) + 8 | 0;
                g[y2 >> 2] = 1 / e2 * +g[z2 + (d2 << 4) >> 2] + +g[y2 >> 2];
                y2 = C2 + (d2 * 104 | 0) + 12 | 0;
                g[y2 >> 2] = v2 + +g[y2 >> 2];
                C2 = C2 + (d2 * 104 | 0) + 16 | 0;
                g[C2 >> 2] = w2 + +g[C2 >> 2];
              }
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (B2 | 0));
          }
          if (A2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[A2 + -4 >> 2] | 0);
          }
          if (!z2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[z2 + -4 >> 2] | 0);
          return;
        }
        function ae(d2, f2, h2, i2, j2, k2) {
          d2 = d2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var l2 = 0, m2 = 0, n2 = 0;
          c[d2 >> 2] = 5072;
          b[d2 + 4 >> 1] = -2;
          b[d2 + 6 >> 1] = -1;
          c[d2 + 92 >> 2] = j2;
          c[d2 + 96 >> 2] = 0;
          a[d2 + 100 >> 0] = 0;
          c[d2 + 104 >> 2] = 0;
          c[d2 + 108 >> 2] = 0;
          if (!j2) {
            c[6324] = (c[6324] | 0) + 1;
            j2 = ic(91) | 0;
            if (!j2)
              j2 = 0;
            else {
              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
              j2 = j2 + 4 + 15 & -16;
            }
            Hi(j2);
            c[d2 + 92 >> 2] = j2;
            a[d2 + 100 >> 0] = 1;
          }
          if (!k2) {
            c[6324] = (c[6324] | 0) + 1;
            j2 = ic(43) | 0;
            if (!j2)
              j2 = 0;
            else {
              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
              j2 = j2 + 4 + 15 & -16;
            }
            k2 = j2 + 4 | 0;
            c[k2 >> 2] = 0;
            c[k2 + 4 >> 2] = 0;
            c[k2 + 8 >> 2] = 0;
            c[k2 + 12 >> 2] = 0;
            c[k2 + 16 >> 2] = 0;
            c[j2 >> 2] = 5136;
            a[j2 + 20 >> 0] = 1;
            c[j2 + 16 >> 2] = 0;
            c[j2 + 8 >> 2] = 0;
            c[j2 + 12 >> 2] = 0;
            c[d2 + 112 >> 2] = j2;
            c[6324] = (c[6324] | 0) + 1;
            j2 = ic(215) | 0;
            if (!j2)
              j2 = 0;
            else {
              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
              j2 = j2 + 4 + 15 & -16;
            }
            Oh(j2, c[d2 + 112 >> 2] | 0);
            c[d2 + 108 >> 2] = j2;
            a[j2 + 193 >> 0] = 1;
          }
          c[d2 + 8 >> 2] = c[f2 >> 2];
          c[d2 + 8 + 4 >> 2] = c[f2 + 4 >> 2];
          c[d2 + 8 + 8 >> 2] = c[f2 + 8 >> 2];
          c[d2 + 8 + 12 >> 2] = c[f2 + 12 >> 2];
          c[d2 + 24 >> 2] = c[h2 >> 2];
          c[d2 + 24 + 4 >> 2] = c[h2 + 4 >> 2];
          c[d2 + 24 + 8 >> 2] = c[h2 + 8 >> 2];
          c[d2 + 24 + 12 >> 2] = c[h2 + 12 >> 2];
          n2 = +(e[d2 + 6 >> 1] | 0);
          m2 = n2 / (+g[d2 + 28 >> 2] - +g[d2 + 12 >> 2]);
          l2 = n2 / (+g[d2 + 32 >> 2] - +g[d2 + 16 >> 2]);
          g[d2 + 40 >> 2] = n2 / (+g[d2 + 24 >> 2] - +g[d2 + 8 >> 2]);
          g[d2 + 44 >> 2] = m2;
          g[d2 + 48 >> 2] = l2;
          g[d2 + 52 >> 2] = 0;
          h2 = (i2 & 65535) + 1 & 65535;
          c[6324] = (c[6324] | 0) + 1;
          j2 = ic(h2 << 6 | 19) | 0;
          if (!j2)
            f2 = 0;
          else {
            c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
            f2 = j2 + 4 + 15 & -16;
          }
          if (h2 | 0) {
            j2 = f2 + (h2 << 6) | 0;
            k2 = f2;
            do {
              c[k2 >> 2] = 0;
              c[k2 + 8 >> 2] = 0;
              k2 = k2 + 64 | 0;
            } while ((k2 | 0) != (j2 | 0));
          }
          c[d2 + 60 >> 2] = f2;
          b[d2 + 58 >> 1] = (i2 & 65535) + 1;
          b[d2 + 56 >> 1] = 0;
          b[d2 + 64 >> 1] = 1;
          if (h2 >>> 0 > 1) {
            j2 = 1;
            k2 = 1;
            do {
              b[f2 + (k2 << 6) + 48 >> 1] = k2 + 1;
              j2 = j2 + 1 << 16 >> 16;
              k2 = j2 & 65535;
            } while (k2 >>> 0 < h2 >>> 0);
          }
          b[f2 + (h2 + -1 << 6) + 48 >> 1] = 0;
          c[6324] = (c[6324] | 0) + 1;
          j2 = ic((h2 << 3 | 3) + 16 | 0) | 0;
          if (!j2)
            j2 = 0;
          else {
            c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
            j2 = j2 + 4 + 15 & -16;
          }
          c[d2 + 80 >> 2] = j2;
          c[d2 + 68 >> 2] = j2;
          c[6324] = (c[6324] | 0) + 1;
          j2 = ic((h2 << 3 | 3) + 16 | 0) | 0;
          if (!j2)
            j2 = 0;
          else {
            c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
            j2 = j2 + 4 + 15 & -16;
          }
          c[d2 + 84 >> 2] = j2;
          c[d2 + 72 >> 2] = j2;
          c[6324] = (c[6324] | 0) + 1;
          j2 = ic((h2 << 3 | 3) + 16 | 0) | 0;
          if (!j2) {
            f2 = 0;
            i2 = d2 + 88 | 0;
            c[i2 >> 2] = f2;
            i2 = d2 + 76 | 0;
            c[i2 >> 2] = f2;
            f2 = c[d2 + 60 >> 2] | 0;
            c[f2 >> 2] = 0;
            h2 = f2 + 48 | 0;
            b[h2 >> 1] = 0;
            h2 = f2 + 54 | 0;
            b[h2 >> 1] = 1;
            h2 = c[d2 + 68 >> 2] | 0;
            b[h2 >> 1] = 0;
            k2 = h2 + 2 | 0;
            b[k2 >> 1] = 0;
            k2 = b[d2 + 6 >> 1] | 0;
            j2 = h2 + 4 | 0;
            b[j2 >> 1] = k2;
            h2 = h2 + 6 | 0;
            b[h2 >> 1] = 0;
            h2 = f2 + 50 | 0;
            b[h2 >> 1] = 0;
            h2 = f2 + 56 | 0;
            b[h2 >> 1] = 1;
            h2 = c[d2 + 72 >> 2] | 0;
            b[h2 >> 1] = 0;
            j2 = h2 + 2 | 0;
            b[j2 >> 1] = 0;
            j2 = b[d2 + 6 >> 1] | 0;
            k2 = h2 + 4 | 0;
            b[k2 >> 1] = j2;
            h2 = h2 + 6 | 0;
            b[h2 >> 1] = 0;
            h2 = f2 + 52 | 0;
            b[h2 >> 1] = 0;
            f2 = f2 + 58 | 0;
            b[f2 >> 1] = 1;
            i2 = c[i2 >> 2] | 0;
            b[i2 >> 1] = 0;
            f2 = i2 + 2 | 0;
            b[f2 >> 1] = 0;
            f2 = b[d2 + 6 >> 1] | 0;
            h2 = i2 + 4 | 0;
            b[h2 >> 1] = f2;
            i2 = i2 + 6 | 0;
            b[i2 >> 1] = 0;
            c[d2 >> 2] = 5008;
            return;
          }
          c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
          f2 = j2 + 4 + 15 & -16;
          i2 = d2 + 88 | 0;
          c[i2 >> 2] = f2;
          i2 = d2 + 76 | 0;
          c[i2 >> 2] = f2;
          f2 = c[d2 + 60 >> 2] | 0;
          c[f2 >> 2] = 0;
          h2 = f2 + 48 | 0;
          b[h2 >> 1] = 0;
          h2 = f2 + 54 | 0;
          b[h2 >> 1] = 1;
          h2 = c[d2 + 68 >> 2] | 0;
          b[h2 >> 1] = 0;
          k2 = h2 + 2 | 0;
          b[k2 >> 1] = 0;
          k2 = b[d2 + 6 >> 1] | 0;
          j2 = h2 + 4 | 0;
          b[j2 >> 1] = k2;
          h2 = h2 + 6 | 0;
          b[h2 >> 1] = 0;
          h2 = f2 + 50 | 0;
          b[h2 >> 1] = 0;
          h2 = f2 + 56 | 0;
          b[h2 >> 1] = 1;
          h2 = c[d2 + 72 >> 2] | 0;
          b[h2 >> 1] = 0;
          j2 = h2 + 2 | 0;
          b[j2 >> 1] = 0;
          j2 = b[d2 + 6 >> 1] | 0;
          k2 = h2 + 4 | 0;
          b[k2 >> 1] = j2;
          h2 = h2 + 6 | 0;
          b[h2 >> 1] = 0;
          h2 = f2 + 52 | 0;
          b[h2 >> 1] = 0;
          f2 = f2 + 58 | 0;
          b[f2 >> 1] = 1;
          i2 = c[i2 >> 2] | 0;
          b[i2 >> 1] = 0;
          f2 = i2 + 2 | 0;
          b[f2 >> 1] = 0;
          f2 = b[d2 + 6 >> 1] | 0;
          h2 = i2 + 4 | 0;
          b[h2 >> 1] = f2;
          i2 = i2 + 6 | 0;
          b[i2 >> 1] = 0;
          c[d2 >> 2] = 5008;
          return;
        }
        function be(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          s2 = i;
          i = i + 80 | 0;
          m2 = +g[b2 + 12 >> 2];
          if (+g[a2 + 268 >> 2] == m2) {
            d2 = +g[a2 + 264 >> 2];
            e2 = +g[b2 + 8 >> 2];
            if ((d2 == e2 ? +g[a2 + 260 >> 2] == +g[b2 + 4 >> 2] : 0) ? +g[a2 + 256 >> 2] == +g[b2 >> 2] : 0) {
              i = s2;
              return;
            } else
              k2 = a2 + 264 | 0;
          } else {
            k2 = a2 + 264 | 0;
            d2 = +g[a2 + 264 >> 2];
            e2 = +g[b2 + 8 >> 2];
          }
          q2 = +g[a2 + 256 >> 2];
          r2 = +g[a2 + 260 >> 2];
          h2 = +g[b2 >> 2];
          j2 = +g[b2 + 4 >> 2];
          f2 = h2 * h2 + j2 * j2 + e2 * e2;
          if (f2 > 0) {
            t2 = 1 / +G(+f2);
            n2 = e2 * t2;
            g[a2 + 256 >> 2] = h2 * t2;
            g[a2 + 260 >> 2] = j2 * t2;
            g[k2 >> 2] = n2;
            g[a2 + 268 >> 2] = m2;
            f2 = h2 * t2;
            h2 = j2 * t2;
            j2 = n2;
          } else {
            c[a2 + 256 >> 2] = 0;
            c[a2 + 256 + 4 >> 2] = 0;
            c[a2 + 256 + 8 >> 2] = 0;
            c[a2 + 256 + 12 >> 2] = 0;
            f2 = 0;
            h2 = 0;
            j2 = 0;
          }
          p2 = c[a2 + 8 >> 2] | 0;
          if (!p2) {
            i = s2;
            return;
          }
          e2 = f2 * f2 + h2 * h2 + j2 * j2;
          if (!(e2 == 0) ? (o2 = q2 * q2 + r2 * r2 + d2 * d2, !(o2 == 0)) : 0) {
            e2 = 1 / +G(+e2);
            n2 = f2 * e2;
            g[a2 + 256 >> 2] = n2;
            m2 = h2 * e2;
            g[a2 + 260 >> 2] = m2;
            f2 = j2 * e2;
            g[k2 >> 2] = f2;
            h2 = 1 / +G(+o2);
            e2 = d2 * h2;
            do
              if (e2 * f2 + (r2 * h2 * m2 + q2 * h2 * n2) < -0.9999998807907104)
                if (+F(+f2) > 0.7071067690849304) {
                  t2 = 1 / +G(+(m2 * m2 + f2 * f2));
                  k2 = 0;
                  d2 = 0;
                  f2 = -(f2 * t2);
                  b2 = (g[l >> 2] = m2 * t2, c[l >> 2] | 0);
                  break;
                } else {
                  f2 = 1 / +G(+(m2 * m2 + n2 * n2));
                  k2 = (g[l >> 2] = -(m2 * f2), c[l >> 2] | 0);
                  d2 = 0;
                  f2 = n2 * f2;
                  b2 = 0;
                  break;
                }
              else {
                t2 = +G(+((e2 * f2 + (r2 * h2 * m2 + q2 * h2 * n2) + 1) * 2));
                k2 = (g[l >> 2] = (e2 * m2 - r2 * h2 * f2) * (1 / t2), c[l >> 2] | 0);
                d2 = t2 * 0.5;
                f2 = (f2 * q2 * h2 - e2 * n2) * (1 / t2);
                b2 = (g[l >> 2] = (r2 * h2 * n2 - m2 * q2 * h2) * (1 / t2), c[l >> 2] | 0);
              }
            while (0);
            h2 = (c[l >> 2] = k2, +g[l >> 2]);
            e2 = (c[l >> 2] = b2, +g[l >> 2]);
          } else {
            h2 = 0;
            f2 = 0;
            e2 = 0;
            d2 = 0;
          }
          c[s2 + 16 >> 2] = c[p2 + 4 >> 2];
          c[s2 + 16 + 4 >> 2] = c[p2 + 4 + 4 >> 2];
          c[s2 + 16 + 8 >> 2] = c[p2 + 4 + 8 >> 2];
          c[s2 + 16 + 12 >> 2] = c[p2 + 4 + 12 >> 2];
          u2 = s2 + 16 + 16 | 0;
          c[u2 >> 2] = c[p2 + 20 >> 2];
          c[u2 + 4 >> 2] = c[p2 + 20 + 4 >> 2];
          c[u2 + 8 >> 2] = c[p2 + 20 + 8 >> 2];
          c[u2 + 12 >> 2] = c[p2 + 20 + 12 >> 2];
          b2 = s2 + 16 + 32 | 0;
          c[b2 >> 2] = c[p2 + 36 >> 2];
          c[b2 + 4 >> 2] = c[p2 + 36 + 4 >> 2];
          c[b2 + 8 >> 2] = c[p2 + 36 + 8 >> 2];
          c[b2 + 12 >> 2] = c[p2 + 36 + 12 >> 2];
          k2 = s2 + 16 + 48 | 0;
          c[k2 >> 2] = c[p2 + 52 >> 2];
          c[k2 + 4 >> 2] = c[p2 + 52 + 4 >> 2];
          c[k2 + 8 >> 2] = c[p2 + 52 + 8 >> 2];
          c[k2 + 12 >> 2] = c[p2 + 52 + 12 >> 2];
          h2 = -h2;
          t2 = -f2;
          n2 = -e2;
          Jg(s2 + 16 | 0, s2);
          f2 = +g[s2 >> 2];
          e2 = +g[s2 + 12 >> 2];
          q2 = +g[s2 + 8 >> 2];
          m2 = +g[s2 + 4 >> 2];
          o2 = d2 * f2 + e2 * h2 + q2 * t2 - m2 * n2;
          r2 = f2 * n2 + (e2 * t2 + d2 * m2) - q2 * h2;
          j2 = e2 * n2 + d2 * q2 + m2 * h2 - f2 * t2;
          n2 = d2 * e2 - f2 * h2 - m2 * t2 - q2 * n2;
          q2 = o2 * (2 / (n2 * n2 + (j2 * j2 + (o2 * o2 + r2 * r2))));
          t2 = r2 * (2 / (n2 * n2 + (j2 * j2 + (o2 * o2 + r2 * r2))));
          m2 = j2 * (2 / (n2 * n2 + (j2 * j2 + (o2 * o2 + r2 * r2))));
          g[s2 + 16 >> 2] = 1 - (r2 * t2 + j2 * m2);
          g[s2 + 16 + 4 >> 2] = o2 * t2 - n2 * m2;
          g[s2 + 16 + 8 >> 2] = o2 * m2 + n2 * t2;
          g[s2 + 16 + 12 >> 2] = 0;
          g[s2 + 16 + 16 >> 2] = o2 * t2 + n2 * m2;
          g[s2 + 16 + 20 >> 2] = 1 - (o2 * q2 + j2 * m2);
          g[s2 + 16 + 24 >> 2] = r2 * m2 - n2 * q2;
          g[s2 + 16 + 28 >> 2] = 0;
          g[s2 + 16 + 32 >> 2] = o2 * m2 - n2 * t2;
          g[s2 + 16 + 36 >> 2] = r2 * m2 + n2 * q2;
          g[s2 + 16 + 40 >> 2] = 1 - (o2 * q2 + r2 * t2);
          g[s2 + 16 + 44 >> 2] = 0;
          a2 = c[a2 + 8 >> 2] | 0;
          c[a2 + 300 >> 2] = (c[a2 + 300 >> 2] | 0) + 1;
          c[a2 + 4 >> 2] = c[s2 + 16 >> 2];
          c[a2 + 4 + 4 >> 2] = c[s2 + 16 + 4 >> 2];
          c[a2 + 4 + 8 >> 2] = c[s2 + 16 + 8 >> 2];
          c[a2 + 4 + 12 >> 2] = c[s2 + 16 + 12 >> 2];
          c[a2 + 20 >> 2] = c[u2 >> 2];
          c[a2 + 20 + 4 >> 2] = c[u2 + 4 >> 2];
          c[a2 + 20 + 8 >> 2] = c[u2 + 8 >> 2];
          c[a2 + 20 + 12 >> 2] = c[u2 + 12 >> 2];
          c[a2 + 36 >> 2] = c[b2 >> 2];
          c[a2 + 36 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 36 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 36 + 12 >> 2] = c[b2 + 12 >> 2];
          c[a2 + 52 >> 2] = c[k2 >> 2];
          c[a2 + 52 + 4 >> 2] = c[k2 + 4 >> 2];
          c[a2 + 52 + 8 >> 2] = c[k2 + 8 >> 2];
          c[a2 + 52 + 12 >> 2] = c[k2 + 12 >> 2];
          i = s2;
          return;
        }
        function ce(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0;
          W2 = i;
          i = i + 240 | 0;
          f2 = (a[b2 + 8 >> 0] | 0) != 0;
          h2 = f2 ? e2 : d2;
          f2 = f2 ? d2 : e2;
          S2 = +g[h2 + 116 >> 2] - +g[h2 + 52 >> 2];
          T2 = +g[h2 + 120 >> 2] - +g[h2 + 56 >> 2];
          U2 = +g[h2 + 124 >> 2] - +g[h2 + 60 >> 2];
          V2 = +g[h2 + 272 >> 2];
          if (S2 * S2 + T2 * T2 + U2 * U2 < V2 * V2) {
            X2 = 1;
            i = W2;
            return +X2;
          }
          H2 = +g[f2 + 4 >> 2];
          I2 = +g[f2 + 20 >> 2];
          J2 = +g[f2 + 36 >> 2];
          K2 = +g[f2 + 8 >> 2];
          L2 = +g[f2 + 24 >> 2];
          M2 = +g[f2 + 40 >> 2];
          N2 = +g[f2 + 12 >> 2];
          O2 = +g[f2 + 28 >> 2];
          P2 = +g[f2 + 44 >> 2];
          k2 = -+g[f2 + 52 >> 2];
          l2 = -+g[f2 + 56 >> 2];
          m2 = -+g[f2 + 60 >> 2];
          Q2 = +g[h2 + 4 >> 2];
          R2 = +g[h2 + 20 >> 2];
          S2 = +g[h2 + 36 >> 2];
          T2 = +g[h2 + 8 >> 2];
          U2 = +g[h2 + 24 >> 2];
          V2 = +g[h2 + 40 >> 2];
          p2 = +g[h2 + 12 >> 2];
          q2 = +g[h2 + 28 >> 2];
          r2 = +g[h2 + 44 >> 2];
          w2 = +g[h2 + 52 >> 2];
          v2 = +g[h2 + 56 >> 2];
          u2 = +g[h2 + 60 >> 2];
          s2 = H2 * k2 + I2 * l2 + J2 * m2 + (H2 * w2 + I2 * v2 + J2 * u2);
          t2 = K2 * k2 + L2 * l2 + M2 * m2 + (K2 * w2 + L2 * v2 + M2 * u2);
          u2 = N2 * k2 + O2 * l2 + P2 * m2 + (N2 * w2 + O2 * v2 + P2 * u2);
          v2 = +g[h2 + 68 >> 2];
          w2 = +g[h2 + 84 >> 2];
          x2 = +g[h2 + 100 >> 2];
          y2 = +g[h2 + 72 >> 2];
          z2 = +g[h2 + 88 >> 2];
          A2 = +g[h2 + 104 >> 2];
          B2 = +g[h2 + 76 >> 2];
          C2 = +g[h2 + 92 >> 2];
          D2 = +g[h2 + 108 >> 2];
          n2 = +g[h2 + 116 >> 2];
          o2 = +g[h2 + 120 >> 2];
          G2 = +g[h2 + 124 >> 2];
          E2 = H2 * k2 + I2 * l2 + J2 * m2 + (H2 * n2 + I2 * o2 + J2 * G2);
          F2 = K2 * k2 + L2 * l2 + M2 * m2 + (K2 * n2 + L2 * o2 + M2 * G2);
          G2 = N2 * k2 + O2 * l2 + P2 * m2 + (N2 * n2 + O2 * o2 + P2 * G2);
          f2 = c[f2 + 192 >> 2] | 0;
          if (((c[f2 + 4 >> 2] | 0) + -21 | 0) >>> 0 >= 9) {
            X2 = 1;
            i = W2;
            return +X2;
          }
          g[W2 + 224 >> 2] = s2;
          g[W2 + 224 + 4 >> 2] = t2;
          g[W2 + 224 + 8 >> 2] = u2;
          g[W2 + 224 + 12 >> 2] = 0;
          if (E2 < s2) {
            g[W2 + 224 >> 2] = E2;
            j2 = E2;
          } else
            j2 = s2;
          if (F2 < t2) {
            g[W2 + 224 + 4 >> 2] = F2;
            k2 = F2;
          } else
            k2 = t2;
          if (G2 < u2) {
            g[W2 + 224 + 8 >> 2] = G2;
            l2 = G2;
          } else
            l2 = u2;
          g[W2 + 208 >> 2] = s2;
          g[W2 + 208 + 4 >> 2] = t2;
          g[W2 + 208 + 8 >> 2] = u2;
          g[W2 + 208 + 12 >> 2] = 0;
          if (s2 < E2) {
            g[W2 + 208 >> 2] = E2;
            m2 = E2;
          } else
            m2 = s2;
          if (t2 < F2) {
            g[W2 + 208 + 4 >> 2] = F2;
            n2 = F2;
          } else
            n2 = t2;
          if (u2 < G2) {
            g[W2 + 208 + 8 >> 2] = G2;
            o2 = G2;
          } else
            o2 = u2;
          Y2 = +g[h2 + 268 >> 2];
          g[W2 + 224 >> 2] = j2 - Y2;
          g[W2 + 224 + 4 >> 2] = k2 - Y2;
          g[W2 + 224 + 8 >> 2] = l2 - Y2;
          g[W2 + 208 >> 2] = Y2 + m2;
          g[W2 + 208 + 4 >> 2] = Y2 + n2;
          g[W2 + 208 + 8 >> 2] = Y2 + o2;
          c[W2 >> 2] = 3908;
          g[W2 + 4 >> 2] = H2 * Q2 + I2 * R2 + J2 * S2;
          g[W2 + 8 >> 2] = H2 * T2 + I2 * U2 + J2 * V2;
          g[W2 + 12 >> 2] = H2 * p2 + I2 * q2 + J2 * r2;
          g[W2 + 16 >> 2] = 0;
          g[W2 + 20 >> 2] = K2 * Q2 + L2 * R2 + M2 * S2;
          g[W2 + 24 >> 2] = K2 * T2 + L2 * U2 + M2 * V2;
          g[W2 + 28 >> 2] = K2 * p2 + L2 * q2 + M2 * r2;
          g[W2 + 32 >> 2] = 0;
          g[W2 + 36 >> 2] = N2 * Q2 + O2 * R2 + P2 * S2;
          g[W2 + 40 >> 2] = N2 * T2 + O2 * U2 + P2 * V2;
          g[W2 + 44 >> 2] = N2 * p2 + O2 * q2 + P2 * r2;
          g[W2 + 48 >> 2] = 0;
          g[W2 + 52 >> 2] = s2;
          g[W2 + 56 >> 2] = t2;
          g[W2 + 60 >> 2] = u2;
          g[W2 + 64 >> 2] = 0;
          g[W2 + 68 >> 2] = H2 * v2 + I2 * w2 + J2 * x2;
          g[W2 + 72 >> 2] = H2 * y2 + I2 * z2 + J2 * A2;
          g[W2 + 76 >> 2] = H2 * B2 + I2 * C2 + J2 * D2;
          g[W2 + 80 >> 2] = 0;
          g[W2 + 84 >> 2] = K2 * v2 + L2 * w2 + M2 * x2;
          g[W2 + 88 >> 2] = K2 * y2 + L2 * z2 + M2 * A2;
          g[W2 + 92 >> 2] = K2 * B2 + L2 * C2 + M2 * D2;
          g[W2 + 96 >> 2] = 0;
          g[W2 + 100 >> 2] = N2 * v2 + O2 * w2 + P2 * x2;
          g[W2 + 104 >> 2] = N2 * y2 + O2 * z2 + P2 * A2;
          g[W2 + 108 >> 2] = N2 * B2 + O2 * C2 + P2 * D2;
          g[W2 + 112 >> 2] = 0;
          g[W2 + 116 >> 2] = E2;
          g[W2 + 120 >> 2] = F2;
          g[W2 + 124 >> 2] = G2;
          g[W2 + 128 >> 2] = 0;
          g[W2 + 196 >> 2] = Y2;
          c[W2 + 200 >> 2] = c[h2 + 264 >> 2];
          if (f2 | 0 ? (Yb[c[(c[f2 >> 2] | 0) + 64 >> 2] & 127](f2, W2, W2 + 224 | 0, W2 + 208 | 0), X2 = +g[W2 + 200 >> 2], X2 < +g[h2 + 264 >> 2]) : 0) {
            g[h2 + 264 >> 2] = X2;
            Y2 = X2;
            i = W2;
            return +Y2;
          }
          Y2 = 1;
          i = W2;
          return +Y2;
        }
        function de(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0;
          W2 = i;
          i = i + 240 | 0;
          f2 = (a[b2 + 76 >> 0] | 0) != 0;
          h2 = f2 ? e2 : d2;
          f2 = f2 ? d2 : e2;
          S2 = +g[h2 + 116 >> 2] - +g[h2 + 52 >> 2];
          T2 = +g[h2 + 120 >> 2] - +g[h2 + 56 >> 2];
          U2 = +g[h2 + 124 >> 2] - +g[h2 + 60 >> 2];
          V2 = +g[h2 + 272 >> 2];
          if (S2 * S2 + T2 * T2 + U2 * U2 < V2 * V2) {
            X2 = 1;
            i = W2;
            return +X2;
          }
          H2 = +g[f2 + 4 >> 2];
          I2 = +g[f2 + 20 >> 2];
          J2 = +g[f2 + 36 >> 2];
          K2 = +g[f2 + 8 >> 2];
          L2 = +g[f2 + 24 >> 2];
          M2 = +g[f2 + 40 >> 2];
          N2 = +g[f2 + 12 >> 2];
          O2 = +g[f2 + 28 >> 2];
          P2 = +g[f2 + 44 >> 2];
          k2 = -+g[f2 + 52 >> 2];
          l2 = -+g[f2 + 56 >> 2];
          m2 = -+g[f2 + 60 >> 2];
          Q2 = +g[h2 + 4 >> 2];
          R2 = +g[h2 + 20 >> 2];
          S2 = +g[h2 + 36 >> 2];
          T2 = +g[h2 + 8 >> 2];
          U2 = +g[h2 + 24 >> 2];
          V2 = +g[h2 + 40 >> 2];
          p2 = +g[h2 + 12 >> 2];
          q2 = +g[h2 + 28 >> 2];
          r2 = +g[h2 + 44 >> 2];
          w2 = +g[h2 + 52 >> 2];
          v2 = +g[h2 + 56 >> 2];
          u2 = +g[h2 + 60 >> 2];
          s2 = H2 * k2 + I2 * l2 + J2 * m2 + (H2 * w2 + I2 * v2 + J2 * u2);
          t2 = K2 * k2 + L2 * l2 + M2 * m2 + (K2 * w2 + L2 * v2 + M2 * u2);
          u2 = N2 * k2 + O2 * l2 + P2 * m2 + (N2 * w2 + O2 * v2 + P2 * u2);
          v2 = +g[h2 + 68 >> 2];
          w2 = +g[h2 + 84 >> 2];
          x2 = +g[h2 + 100 >> 2];
          y2 = +g[h2 + 72 >> 2];
          z2 = +g[h2 + 88 >> 2];
          A2 = +g[h2 + 104 >> 2];
          B2 = +g[h2 + 76 >> 2];
          C2 = +g[h2 + 92 >> 2];
          D2 = +g[h2 + 108 >> 2];
          n2 = +g[h2 + 116 >> 2];
          o2 = +g[h2 + 120 >> 2];
          G2 = +g[h2 + 124 >> 2];
          E2 = H2 * k2 + I2 * l2 + J2 * m2 + (H2 * n2 + I2 * o2 + J2 * G2);
          F2 = K2 * k2 + L2 * l2 + M2 * m2 + (K2 * n2 + L2 * o2 + M2 * G2);
          G2 = N2 * k2 + O2 * l2 + P2 * m2 + (N2 * n2 + O2 * o2 + P2 * G2);
          f2 = c[f2 + 192 >> 2] | 0;
          if (((c[f2 + 4 >> 2] | 0) + -21 | 0) >>> 0 >= 9) {
            X2 = 1;
            i = W2;
            return +X2;
          }
          g[W2 + 224 >> 2] = s2;
          g[W2 + 224 + 4 >> 2] = t2;
          g[W2 + 224 + 8 >> 2] = u2;
          g[W2 + 224 + 12 >> 2] = 0;
          if (E2 < s2) {
            g[W2 + 224 >> 2] = E2;
            j2 = E2;
          } else
            j2 = s2;
          if (F2 < t2) {
            g[W2 + 224 + 4 >> 2] = F2;
            k2 = F2;
          } else
            k2 = t2;
          if (G2 < u2) {
            g[W2 + 224 + 8 >> 2] = G2;
            l2 = G2;
          } else
            l2 = u2;
          g[W2 + 208 >> 2] = s2;
          g[W2 + 208 + 4 >> 2] = t2;
          g[W2 + 208 + 8 >> 2] = u2;
          g[W2 + 208 + 12 >> 2] = 0;
          if (s2 < E2) {
            g[W2 + 208 >> 2] = E2;
            m2 = E2;
          } else
            m2 = s2;
          if (t2 < F2) {
            g[W2 + 208 + 4 >> 2] = F2;
            n2 = F2;
          } else
            n2 = t2;
          if (u2 < G2) {
            g[W2 + 208 + 8 >> 2] = G2;
            o2 = G2;
          } else
            o2 = u2;
          Y2 = +g[h2 + 268 >> 2];
          g[W2 + 224 >> 2] = j2 - Y2;
          g[W2 + 224 + 4 >> 2] = k2 - Y2;
          g[W2 + 224 + 8 >> 2] = l2 - Y2;
          g[W2 + 208 >> 2] = Y2 + m2;
          g[W2 + 208 + 4 >> 2] = Y2 + n2;
          g[W2 + 208 + 8 >> 2] = Y2 + o2;
          c[W2 >> 2] = 9200;
          g[W2 + 4 >> 2] = H2 * Q2 + I2 * R2 + J2 * S2;
          g[W2 + 8 >> 2] = H2 * T2 + I2 * U2 + J2 * V2;
          g[W2 + 12 >> 2] = H2 * p2 + I2 * q2 + J2 * r2;
          g[W2 + 16 >> 2] = 0;
          g[W2 + 20 >> 2] = K2 * Q2 + L2 * R2 + M2 * S2;
          g[W2 + 24 >> 2] = K2 * T2 + L2 * U2 + M2 * V2;
          g[W2 + 28 >> 2] = K2 * p2 + L2 * q2 + M2 * r2;
          g[W2 + 32 >> 2] = 0;
          g[W2 + 36 >> 2] = N2 * Q2 + O2 * R2 + P2 * S2;
          g[W2 + 40 >> 2] = N2 * T2 + O2 * U2 + P2 * V2;
          g[W2 + 44 >> 2] = N2 * p2 + O2 * q2 + P2 * r2;
          g[W2 + 48 >> 2] = 0;
          g[W2 + 52 >> 2] = s2;
          g[W2 + 56 >> 2] = t2;
          g[W2 + 60 >> 2] = u2;
          g[W2 + 64 >> 2] = 0;
          g[W2 + 68 >> 2] = H2 * v2 + I2 * w2 + J2 * x2;
          g[W2 + 72 >> 2] = H2 * y2 + I2 * z2 + J2 * A2;
          g[W2 + 76 >> 2] = H2 * B2 + I2 * C2 + J2 * D2;
          g[W2 + 80 >> 2] = 0;
          g[W2 + 84 >> 2] = K2 * v2 + L2 * w2 + M2 * x2;
          g[W2 + 88 >> 2] = K2 * y2 + L2 * z2 + M2 * A2;
          g[W2 + 92 >> 2] = K2 * B2 + L2 * C2 + M2 * D2;
          g[W2 + 96 >> 2] = 0;
          g[W2 + 100 >> 2] = N2 * v2 + O2 * w2 + P2 * x2;
          g[W2 + 104 >> 2] = N2 * y2 + O2 * z2 + P2 * A2;
          g[W2 + 108 >> 2] = N2 * B2 + O2 * C2 + P2 * D2;
          g[W2 + 112 >> 2] = 0;
          g[W2 + 116 >> 2] = E2;
          g[W2 + 120 >> 2] = F2;
          g[W2 + 124 >> 2] = G2;
          g[W2 + 128 >> 2] = 0;
          g[W2 + 196 >> 2] = Y2;
          c[W2 + 200 >> 2] = c[h2 + 264 >> 2];
          if (f2 | 0 ? (Yb[c[(c[f2 >> 2] | 0) + 64 >> 2] & 127](f2, W2, W2 + 224 | 0, W2 + 208 | 0), X2 = +g[W2 + 200 >> 2], X2 < +g[h2 + 264 >> 2]) : 0) {
            g[h2 + 264 >> 2] = X2;
            Y2 = X2;
            i = W2;
            return +Y2;
          }
          Y2 = 1;
          i = W2;
          return +Y2;
        }
        function ee(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          l2 = c[b2 >> 2] | 0;
          m2 = c[b2 + 4 >> 2] | 0;
          i2 = c[b2 + 8 >> 2] | 0;
          n2 = c[a2 + 4 >> 2] | 0;
          p2 = Kh(a2, d2, m2, i2) | 0;
          c[p2 + 12 >> 2] = c[b2 + 12 >> 2];
          c[p2 + 16 >> 2] = n2 + 1;
          c[p2 + 20 >> 2] = n2 + 2;
          h2 = c[(c[a2 + 12 >> 2] | 0) + (c[b2 + 12 >> 2] << 2) >> 2] | 0;
          e2 = c[h2 >> 2] | 0;
          f2 = c[h2 + 4 >> 2] | 0;
          do
            if (!((e2 | 0) == (m2 | 0) & (f2 | 0) == (i2 | 0))) {
              if ((e2 | 0) == (i2 | 0) ? (f2 | 0) == (m2 | 0) : 0) {
                e2 = h2 + 12 + 8 | 0;
                break;
              }
              g2 = c[h2 + 8 >> 2] | 0;
              if (!((f2 | 0) == (m2 | 0) & (g2 | 0) == (i2 | 0)))
                if (!((f2 | 0) == (i2 | 0) & (g2 | 0) == (m2 | 0)))
                  if ((g2 | 0) != (m2 | 0) | (e2 | 0) == (i2 | 0) ^ 1) {
                    if ((g2 | 0) == (i2 | 0) ? (e2 | 0) == (m2 | 0) : 0) {
                      e2 = h2 + 12 + 4 | 0;
                      break;
                    }
                    e2 = 9504;
                  } else {
                    e2 = 1;
                    o2 = 2;
                  }
                else
                  e2 = h2 + 12 | 0;
              else {
                e2 = 0;
                o2 = 2;
              }
            } else {
              e2 = 2;
              o2 = 2;
            }
          while (0);
          if ((o2 | 0) == 2)
            e2 = h2 + 12 + (e2 << 2) | 0;
          c[e2 >> 2] = n2;
          k2 = Kh(a2, d2, i2, l2) | 0;
          c[k2 + 12 >> 2] = c[b2 + 12 + 4 >> 2];
          c[k2 + 16 >> 2] = n2 + 2;
          c[k2 + 20 >> 2] = n2;
          h2 = c[(c[a2 + 12 >> 2] | 0) + (c[b2 + 12 + 4 >> 2] << 2) >> 2] | 0;
          e2 = c[h2 >> 2] | 0;
          f2 = c[h2 + 4 >> 2] | 0;
          do
            if (!((e2 | 0) == (i2 | 0) & (f2 | 0) == (l2 | 0))) {
              if ((e2 | 0) == (l2 | 0) ? (f2 | 0) == (i2 | 0) : 0) {
                e2 = h2 + 12 + 8 | 0;
                break;
              }
              g2 = c[h2 + 8 >> 2] | 0;
              if (!((f2 | 0) == (i2 | 0) & (g2 | 0) == (l2 | 0)))
                if (!((f2 | 0) == (l2 | 0) & (g2 | 0) == (i2 | 0)))
                  if ((g2 | 0) != (i2 | 0) | (e2 | 0) == (l2 | 0) ^ 1) {
                    if ((g2 | 0) == (l2 | 0) ? (e2 | 0) == (i2 | 0) : 0) {
                      e2 = h2 + 12 + 4 | 0;
                      break;
                    }
                    e2 = 9504;
                  } else {
                    e2 = 1;
                    o2 = 12;
                  }
                else
                  e2 = h2 + 12 | 0;
              else {
                e2 = 0;
                o2 = 12;
              }
            } else {
              e2 = 2;
              o2 = 12;
            }
          while (0);
          if ((o2 | 0) == 12)
            e2 = h2 + 12 + (e2 << 2) | 0;
          c[e2 >> 2] = n2 + 1;
          j2 = Kh(a2, d2, l2, m2) | 0;
          c[j2 + 12 >> 2] = c[b2 + 12 + 8 >> 2];
          c[j2 + 16 >> 2] = n2;
          c[j2 + 20 >> 2] = n2 + 1;
          e2 = c[a2 + 12 >> 2] | 0;
          i2 = c[e2 + (c[b2 + 12 + 8 >> 2] << 2) >> 2] | 0;
          f2 = c[i2 >> 2] | 0;
          g2 = c[i2 + 4 >> 2] | 0;
          do
            if (!((f2 | 0) == (l2 | 0) & (g2 | 0) == (m2 | 0))) {
              if ((f2 | 0) == (m2 | 0) ? (g2 | 0) == (l2 | 0) : 0) {
                f2 = i2 + 12 + 8 | 0;
                break;
              }
              h2 = c[i2 + 8 >> 2] | 0;
              if (!((g2 | 0) == (l2 | 0) & (h2 | 0) == (m2 | 0)))
                if (!((g2 | 0) == (m2 | 0) & (h2 | 0) == (l2 | 0)))
                  if ((h2 | 0) != (l2 | 0) | (f2 | 0) == (m2 | 0) ^ 1) {
                    if ((h2 | 0) == (m2 | 0) ? (f2 | 0) == (l2 | 0) : 0) {
                      f2 = i2 + 12 + 4 | 0;
                      break;
                    }
                    f2 = 9504;
                  } else {
                    f2 = 1;
                    o2 = 22;
                  }
                else
                  f2 = i2 + 12 | 0;
              else {
                f2 = 0;
                o2 = 22;
              }
            } else {
              f2 = 2;
              o2 = 22;
            }
          while (0);
          if ((o2 | 0) == 22)
            f2 = i2 + 12 + (f2 << 2) | 0;
          c[f2 >> 2] = n2 + 2;
          f2 = c[e2 + (c[p2 + 12 >> 2] << 2) >> 2] | 0;
          if (!(((c[f2 >> 2] | 0) != (d2 | 0) ? (c[f2 + 4 >> 2] | 0) != (d2 | 0) : 0) ? (c[f2 + 8 >> 2] | 0) != (d2 | 0) : 0)) {
            he(e2, p2, f2);
            c[(c[a2 + 12 >> 2] | 0) + (c[p2 + 24 >> 2] << 2) >> 2] = 0;
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[p2 + -4 >> 2] | 0);
            c[(c[a2 + 12 >> 2] | 0) + (c[f2 + 24 >> 2] << 2) >> 2] = 0;
            if (f2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[f2 + -4 >> 2] | 0);
            }
            e2 = c[a2 + 12 >> 2] | 0;
          }
          f2 = c[e2 + (c[k2 + 12 >> 2] << 2) >> 2] | 0;
          if (!(((c[f2 >> 2] | 0) != (d2 | 0) ? (c[f2 + 4 >> 2] | 0) != (d2 | 0) : 0) ? (c[f2 + 8 >> 2] | 0) != (d2 | 0) : 0)) {
            he(e2, k2, f2);
            c[(c[a2 + 12 >> 2] | 0) + (c[k2 + 24 >> 2] << 2) >> 2] = 0;
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[k2 + -4 >> 2] | 0);
            c[(c[a2 + 12 >> 2] | 0) + (c[f2 + 24 >> 2] << 2) >> 2] = 0;
            if (f2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[f2 + -4 >> 2] | 0);
            }
            e2 = c[a2 + 12 >> 2] | 0;
          }
          f2 = c[e2 + (c[j2 + 12 >> 2] << 2) >> 2] | 0;
          if (!(((c[f2 >> 2] | 0) != (d2 | 0) ? (c[f2 + 4 >> 2] | 0) != (d2 | 0) : 0) ? (c[f2 + 8 >> 2] | 0) != (d2 | 0) : 0)) {
            he(e2, j2, f2);
            c[(c[a2 + 12 >> 2] | 0) + (c[j2 + 24 >> 2] << 2) >> 2] = 0;
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[j2 + -4 >> 2] | 0);
            c[(c[a2 + 12 >> 2] | 0) + (c[f2 + 24 >> 2] << 2) >> 2] = 0;
            if (f2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[f2 + -4 >> 2] | 0);
            }
            e2 = c[a2 + 12 >> 2] | 0;
          }
          c[e2 + (c[b2 + 24 >> 2] << 2) >> 2] = 0;
          if (!b2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function fe(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0;
          h2 = i;
          i = i + 16 | 0;
          c[6324] = (c[6324] | 0) + 1;
          f2 = ic(1147) | 0;
          if (!f2)
            f2 = 0;
          else {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            f2 = f2 + 4 + 15 & -16;
          }
          if (!(a[22088] | 0)) {
            a[22088] = 1;
            c[h2 >> 2] = 0;
            c[h2 + 4 >> 2] = 0;
            c[h2 + 8 >> 2] = 0;
            c[h2 + 12 >> 2] = 0;
            If(22832, 0, 0, 0, h2);
          }
          c[5759] = c[5759] | 1;
          g[5804] = 0;
          z2 = +g[5814] * 0;
          F2 = +g[5815] * 0;
          g[5809] = +g[5813] * 0;
          g[5810] = z2;
          g[5811] = F2;
          g[5812] = 0;
          c[5817] = 0;
          c[5818] = 0;
          c[5819] = 0;
          c[5820] = 0;
          F2 = +g[5806] * 0;
          z2 = +g[5807] * 0;
          g[5858] = +g[5805] * 0;
          g[5859] = F2;
          g[5860] = z2;
          g[5861] = 0;
          c[f2 + 4 >> 2] = 7;
          c[f2 + 8 >> 2] = -1;
          c[f2 + 12 >> 2] = -1;
          g[f2 + 16 >> 2] = 34028234663852886e22;
          a[f2 + 20 >> 0] = 1;
          a[f2 + 21 >> 0] = 0;
          c[f2 + 24 >> 2] = -1;
          k2 = f2 + 28 | 0;
          c[k2 >> 2] = 22832;
          j2 = f2 + 32 | 0;
          c[j2 >> 2] = b2;
          g[f2 + 36 >> 2] = 0;
          g[f2 + 40 >> 2] = 0.30000001192092896;
          c[f2 + 44 >> 2] = 0;
          c[f2 >> 2] = 4624;
          a[f2 + 48 >> 0] = 0;
          L2 = f2 + 116 | 0;
          c[L2 >> 2] = c[d2 >> 2];
          c[L2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[L2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[L2 + 12 >> 2] = c[d2 + 12 >> 2];
          K2 = f2 + 132 | 0;
          c[K2 >> 2] = c[d2 + 16 >> 2];
          c[K2 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[K2 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[K2 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          J2 = f2 + 148 | 0;
          c[J2 >> 2] = c[d2 + 32 >> 2];
          c[J2 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[J2 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[J2 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          I2 = f2 + 164 | 0;
          c[I2 >> 2] = c[d2 + 48 >> 2];
          c[I2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[I2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[I2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          a[f2 + 180 >> 0] = e2 & 1;
          z2 = +g[L2 >> 2];
          F2 = +g[b2 + 4 >> 2];
          y2 = +g[K2 >> 2];
          E2 = +g[b2 + 8 >> 2];
          x2 = +g[J2 >> 2];
          D2 = +g[b2 + 12 >> 2];
          w2 = +g[f2 + 120 >> 2];
          v2 = +g[f2 + 136 >> 2];
          u2 = +g[f2 + 152 >> 2];
          t2 = +g[f2 + 124 >> 2];
          r2 = +g[f2 + 140 >> 2];
          p2 = +g[f2 + 156 >> 2];
          C2 = +g[b2 + 20 >> 2];
          B2 = +g[b2 + 24 >> 2];
          A2 = +g[b2 + 28 >> 2];
          s2 = +g[b2 + 36 >> 2];
          q2 = +g[b2 + 40 >> 2];
          o2 = +g[b2 + 44 >> 2];
          H2 = +g[I2 >> 2];
          G2 = +g[f2 + 168 >> 2];
          l2 = +g[f2 + 172 >> 2];
          n2 = +g[b2 + 52 >> 2] + (F2 * H2 + E2 * G2 + D2 * l2);
          m2 = C2 * H2 + B2 * G2 + A2 * l2 + +g[b2 + 56 >> 2];
          l2 = s2 * H2 + q2 * G2 + o2 * l2 + +g[b2 + 60 >> 2];
          g[f2 + 52 >> 2] = z2 * F2 + y2 * E2 + x2 * D2;
          g[f2 + 56 >> 2] = F2 * w2 + E2 * v2 + D2 * u2;
          g[f2 + 60 >> 2] = F2 * t2 + E2 * r2 + D2 * p2;
          g[f2 + 64 >> 2] = 0;
          g[f2 + 68 >> 2] = z2 * C2 + y2 * B2 + x2 * A2;
          g[f2 + 72 >> 2] = w2 * C2 + v2 * B2 + u2 * A2;
          g[f2 + 76 >> 2] = t2 * C2 + r2 * B2 + p2 * A2;
          g[f2 + 80 >> 2] = 0;
          g[f2 + 84 >> 2] = z2 * s2 + y2 * q2 + x2 * o2;
          g[f2 + 88 >> 2] = w2 * s2 + v2 * q2 + u2 * o2;
          g[f2 + 92 >> 2] = t2 * s2 + r2 * q2 + p2 * o2;
          g[f2 + 96 >> 2] = 0;
          g[f2 + 100 >> 2] = n2;
          g[f2 + 104 >> 2] = m2;
          g[f2 + 108 >> 2] = l2;
          g[f2 + 112 >> 2] = 0;
          g[f2 + 184 >> 2] = 1;
          g[f2 + 188 >> 2] = -1;
          g[f2 + 192 >> 2] = 0;
          g[f2 + 196 >> 2] = 0;
          g[f2 + 200 >> 2] = 1;
          g[f2 + 204 >> 2] = 0.699999988079071;
          g[f2 + 208 >> 2] = 0;
          g[f2 + 212 >> 2] = 0;
          g[f2 + 216 >> 2] = 1;
          g[f2 + 220 >> 2] = 0.699999988079071;
          g[f2 + 224 >> 2] = 0;
          g[f2 + 228 >> 2] = 0;
          g[f2 + 264 >> 2] = 1;
          g[f2 + 268 >> 2] = 0.699999988079071;
          g[f2 + 272 >> 2] = 1;
          g[f2 + 276 >> 2] = 0;
          g[f2 + 280 >> 2] = 1;
          g[f2 + 284 >> 2] = 0.699999988079071;
          g[f2 + 288 >> 2] = 1;
          g[f2 + 292 >> 2] = 0;
          g[f2 + 232 >> 2] = 1;
          g[f2 + 236 >> 2] = 0.699999988079071;
          g[f2 + 240 >> 2] = 1;
          g[f2 + 244 >> 2] = 0;
          g[f2 + 248 >> 2] = 1;
          g[f2 + 252 >> 2] = 0.699999988079071;
          g[f2 + 256 >> 2] = 1;
          g[f2 + 260 >> 2] = 0;
          a[f2 + 1096 >> 0] = 0;
          e2 = f2 + 1100 | 0;
          g[f2 + 1116 >> 2] = 0;
          g[f2 + 1120 >> 2] = 0;
          g[f2 + 1124 >> 2] = 0;
          c[f2 + 300 >> 2] = 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = 0;
          c[e2 + 8 >> 2] = 0;
          a[e2 + 12 >> 0] = 0;
          a[f2 + 49 >> 0] = 1;
          Tc(f2, (c[k2 >> 2] | 0) + 4 | 0, (c[j2 >> 2] | 0) + 4 | 0);
          i = h2;
          return f2 | 0;
        }
        function ge(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          if (!((d2 | 0) != 0 & (e2 | 0) != 0))
            return;
          if ((c[b2 + 24 >> 2] | 0) < 128 ? (c[b2 + 28 >> 2] | 0) < 128 : 0) {
            c[6324] = (c[6324] | 0) + 1;
            h2 = ic(1043) | 0;
            if (!h2)
              j2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              j2 = h2 + 4 + 15 & -16;
            }
            i2 = c[b2 + 24 >> 2] | 0;
            if ((i2 | 0) > 0) {
              h2 = 0;
              do {
                l2 = (c[b2 + 32 >> 2] | 0) + (h2 << 3) | 0;
                m2 = c[l2 + 4 >> 2] | 0;
                n2 = j2 + (h2 << 3) | 0;
                c[n2 >> 2] = c[l2 >> 2];
                c[n2 + 4 >> 2] = m2;
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (i2 | 0));
            }
            h2 = c[b2 + 32 >> 2] | 0;
            if (h2 | 0) {
              if (a[b2 + 36 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[h2 + -4 >> 2] | 0);
              }
              c[b2 + 32 >> 2] = 0;
            }
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = j2;
            c[b2 + 28 >> 2] = 128;
          }
          c[b2 + 24 >> 2] = 128;
          h2 = c[b2 + 32 >> 2] | 0;
          c[h2 >> 2] = d2;
          c[h2 + 4 >> 2] = e2;
          h2 = 1;
          i2 = 124;
          do {
            n2 = h2 + -1 | 0;
            j2 = c[b2 + 32 >> 2] | 0;
            l2 = c[j2 + (n2 << 3) >> 2] | 0;
            m2 = c[j2 + (n2 << 3) + 4 >> 2] | 0;
            if ((n2 | 0) > (i2 | 0)) {
              e2 = c[b2 + 24 >> 2] | 0;
              if ((e2 | 0) < (e2 << 1 | 0) ? (c[b2 + 28 >> 2] | 0) < (e2 << 1 | 0) : 0) {
                if (e2) {
                  c[6324] = (c[6324] | 0) + 1;
                  i2 = ic((e2 << 4 | 3) + 16 | 0) | 0;
                  if (!i2)
                    i2 = 0;
                  else {
                    c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
                    i2 = i2 + 4 + 15 & -16;
                  }
                  d2 = c[b2 + 24 >> 2] | 0;
                  if ((d2 | 0) > 0) {
                    j2 = 0;
                    do {
                      p2 = (c[b2 + 32 >> 2] | 0) + (j2 << 3) | 0;
                      o2 = c[p2 + 4 >> 2] | 0;
                      k2 = i2 + (j2 << 3) | 0;
                      c[k2 >> 2] = c[p2 >> 2];
                      c[k2 + 4 >> 2] = o2;
                      j2 = j2 + 1 | 0;
                    } while ((j2 | 0) != (d2 | 0));
                  }
                } else
                  i2 = 0;
                j2 = c[b2 + 32 >> 2] | 0;
                if (j2 | 0) {
                  if (a[b2 + 36 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[j2 + -4 >> 2] | 0);
                  }
                  c[b2 + 32 >> 2] = 0;
                }
                a[b2 + 36 >> 0] = 1;
                c[b2 + 32 >> 2] = i2;
                c[b2 + 28 >> 2] = e2 << 1;
                j2 = i2;
              }
              c[b2 + 24 >> 2] = e2 << 1;
              i2 = (e2 << 1) + -4 | 0;
            }
            do
              if ((l2 | 0) == (m2 | 0))
                if (!(c[l2 + 40 >> 2] | 0))
                  h2 = n2;
                else {
                  p2 = c[l2 + 36 >> 2] | 0;
                  c[j2 + (n2 << 3) >> 2] = p2;
                  c[j2 + (n2 << 3) + 4 >> 2] = p2;
                  p2 = h2 + 1 | 0;
                  o2 = c[b2 + 32 >> 2] | 0;
                  n2 = c[l2 + 40 >> 2] | 0;
                  c[o2 + (h2 << 3) >> 2] = n2;
                  c[o2 + (h2 << 3) + 4 >> 2] = n2;
                  o2 = c[b2 + 32 >> 2] | 0;
                  n2 = c[l2 + 40 >> 2] | 0;
                  c[o2 + (p2 << 3) >> 2] = c[l2 + 36 >> 2];
                  c[o2 + (p2 << 3) + 4 >> 2] = n2;
                  h2 = h2 + 2 | 0;
                }
              else if (((((+g[l2 >> 2] <= +g[m2 + 16 >> 2] ? +g[l2 + 16 >> 2] >= +g[m2 >> 2] : 0) ? +g[l2 + 4 >> 2] <= +g[m2 + 20 >> 2] : 0) ? +g[l2 + 20 >> 2] >= +g[m2 + 4 >> 2] : 0) ? +g[l2 + 8 >> 2] <= +g[m2 + 24 >> 2] : 0) ? +g[l2 + 24 >> 2] >= +g[m2 + 8 >> 2] : 0) {
                d2 = (c[m2 + 40 >> 2] | 0) != 0;
                if (!(c[l2 + 40 >> 2] | 0))
                  if (d2) {
                    p2 = c[m2 + 36 >> 2] | 0;
                    c[j2 + (n2 << 3) >> 2] = l2;
                    c[j2 + (n2 << 3) + 4 >> 2] = p2;
                    p2 = c[b2 + 32 >> 2] | 0;
                    o2 = c[m2 + 40 >> 2] | 0;
                    c[p2 + (h2 << 3) >> 2] = l2;
                    c[p2 + (h2 << 3) + 4 >> 2] = o2;
                    h2 = h2 + 1 | 0;
                    break;
                  } else {
                    Ub[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, l2, m2);
                    h2 = n2;
                    break;
                  }
                else {
                  e2 = j2 + (n2 << 3) | 0;
                  k2 = c[l2 + 36 >> 2] | 0;
                  if (d2) {
                    o2 = c[m2 + 36 >> 2] | 0;
                    c[e2 >> 2] = k2;
                    c[j2 + (n2 << 3) + 4 >> 2] = o2;
                    o2 = h2 + 1 | 0;
                    p2 = c[b2 + 32 >> 2] | 0;
                    n2 = c[m2 + 36 >> 2] | 0;
                    c[p2 + (h2 << 3) >> 2] = c[l2 + 40 >> 2];
                    c[p2 + (h2 << 3) + 4 >> 2] = n2;
                    p2 = h2 + 2 | 0;
                    n2 = c[b2 + 32 >> 2] | 0;
                    k2 = c[m2 + 40 >> 2] | 0;
                    c[n2 + (o2 << 3) >> 2] = c[l2 + 36 >> 2];
                    c[n2 + (o2 << 3) + 4 >> 2] = k2;
                    o2 = c[b2 + 32 >> 2] | 0;
                    n2 = c[m2 + 40 >> 2] | 0;
                    c[o2 + (p2 << 3) >> 2] = c[l2 + 40 >> 2];
                    c[o2 + (p2 << 3) + 4 >> 2] = n2;
                    h2 = h2 + 3 | 0;
                    break;
                  } else {
                    c[e2 >> 2] = k2;
                    c[j2 + (n2 << 3) + 4 >> 2] = m2;
                    p2 = c[b2 + 32 >> 2] | 0;
                    c[p2 + (h2 << 3) >> 2] = c[l2 + 40 >> 2];
                    c[p2 + (h2 << 3) + 4 >> 2] = m2;
                    h2 = h2 + 1 | 0;
                    break;
                  }
                }
              } else
                h2 = n2;
            while (0);
          } while ((h2 | 0) != 0);
          return;
        }
        function he(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          l2 = 0;
          do {
            k2 = l2;
            l2 = l2 + 1 | 0;
            m2 = (l2 | 0) == 3;
            j2 = c[b2 + ((m2 ? 0 : l2) << 2) >> 2] | 0;
            k2 = c[b2 + (((k2 + 2 | 0) % 3 | 0) << 2) >> 2] | 0;
            e2 = c[d2 >> 2] | 0;
            f2 = c[d2 + 4 >> 2] | 0;
            if (!((e2 | 0) == (k2 | 0) & (f2 | 0) == (j2 | 0)))
              if (!((e2 | 0) == (j2 | 0) & (f2 | 0) == (k2 | 0))) {
                g2 = c[d2 + 8 >> 2] | 0;
                if (!((f2 | 0) == (k2 | 0) & (g2 | 0) == (j2 | 0)))
                  if (!((f2 | 0) == (j2 | 0) & (g2 | 0) == (k2 | 0)))
                    if ((g2 | 0) != (k2 | 0) | (e2 | 0) == (j2 | 0) ^ 1)
                      e2 = (g2 | 0) != (j2 | 0) | (e2 | 0) == (k2 | 0) ^ 1 ? 9504 : d2 + 12 + 4 | 0;
                    else {
                      e2 = 1;
                      n2 = 3;
                    }
                  else
                    e2 = d2 + 12 | 0;
                else {
                  e2 = 0;
                  n2 = 3;
                }
              } else
                e2 = d2 + 12 + 8 | 0;
            else {
              e2 = 2;
              n2 = 3;
            }
            if ((n2 | 0) == 3) {
              n2 = 0;
              e2 = d2 + 12 + (e2 << 2) | 0;
            }
            i2 = c[e2 >> 2] | 0;
            e2 = c[b2 >> 2] | 0;
            f2 = c[b2 + 4 >> 2] | 0;
            if (!((e2 | 0) == (j2 | 0) & (f2 | 0) == (k2 | 0)))
              if (!((e2 | 0) == (k2 | 0) & (f2 | 0) == (j2 | 0))) {
                g2 = c[b2 + 8 >> 2] | 0;
                if (!((f2 | 0) == (j2 | 0) & (g2 | 0) == (k2 | 0)))
                  if (!((f2 | 0) == (k2 | 0) & (g2 | 0) == (j2 | 0)))
                    if ((g2 | 0) != (j2 | 0) | (e2 | 0) == (k2 | 0) ^ 1)
                      e2 = (g2 | 0) != (k2 | 0) | (e2 | 0) == (j2 | 0) ^ 1 ? 9504 : b2 + 12 + 4 | 0;
                    else {
                      e2 = 1;
                      n2 = 10;
                    }
                  else
                    e2 = b2 + 12 | 0;
                else {
                  e2 = 0;
                  n2 = 10;
                }
              } else
                e2 = b2 + 12 + 8 | 0;
            else {
              e2 = 2;
              n2 = 10;
            }
            if ((n2 | 0) == 10) {
              n2 = 0;
              e2 = b2 + 12 + (e2 << 2) | 0;
            }
            h2 = c[a2 + (c[e2 >> 2] << 2) >> 2] | 0;
            e2 = c[h2 >> 2] | 0;
            f2 = c[h2 + 4 >> 2] | 0;
            do
              if (!((e2 | 0) == (k2 | 0) & (f2 | 0) == (j2 | 0))) {
                if ((e2 | 0) == (j2 | 0) ? (f2 | 0) == (k2 | 0) : 0) {
                  e2 = h2 + 12 + 8 | 0;
                  break;
                }
                g2 = c[h2 + 8 >> 2] | 0;
                if (!((f2 | 0) == (k2 | 0) & (g2 | 0) == (j2 | 0)))
                  if (!((f2 | 0) == (j2 | 0) & (g2 | 0) == (k2 | 0)))
                    if ((g2 | 0) != (k2 | 0) | (e2 | 0) == (j2 | 0) ^ 1) {
                      if ((g2 | 0) == (j2 | 0) ? (e2 | 0) == (k2 | 0) : 0) {
                        e2 = h2 + 12 + 4 | 0;
                        break;
                      }
                      e2 = 9504;
                    } else {
                      e2 = 1;
                      n2 = 17;
                    }
                  else
                    e2 = h2 + 12 | 0;
                else {
                  e2 = 0;
                  n2 = 17;
                }
              } else {
                e2 = 2;
                n2 = 17;
              }
            while (0);
            if ((n2 | 0) == 17) {
              n2 = 0;
              e2 = h2 + 12 + (e2 << 2) | 0;
            }
            c[e2 >> 2] = i2;
            e2 = c[b2 >> 2] | 0;
            f2 = c[b2 + 4 >> 2] | 0;
            if (!((e2 | 0) == (j2 | 0) & (f2 | 0) == (k2 | 0)))
              if (!((e2 | 0) == (k2 | 0) & (f2 | 0) == (j2 | 0))) {
                g2 = c[b2 + 8 >> 2] | 0;
                if (!((f2 | 0) == (j2 | 0) & (g2 | 0) == (k2 | 0)))
                  if (!((f2 | 0) == (k2 | 0) & (g2 | 0) == (j2 | 0)))
                    if ((g2 | 0) != (j2 | 0) | (e2 | 0) == (k2 | 0) ^ 1)
                      e2 = (g2 | 0) != (k2 | 0) | (e2 | 0) == (j2 | 0) ^ 1 ? 9504 : b2 + 12 + 4 | 0;
                    else {
                      e2 = 1;
                      n2 = 27;
                    }
                  else
                    e2 = b2 + 12 | 0;
                else {
                  e2 = 0;
                  n2 = 27;
                }
              } else
                e2 = b2 + 12 + 8 | 0;
            else {
              e2 = 2;
              n2 = 27;
            }
            if ((n2 | 0) == 27) {
              n2 = 0;
              e2 = b2 + 12 + (e2 << 2) | 0;
            }
            i2 = c[e2 >> 2] | 0;
            e2 = c[d2 >> 2] | 0;
            f2 = c[d2 + 4 >> 2] | 0;
            if (!((e2 | 0) == (k2 | 0) & (f2 | 0) == (j2 | 0)))
              if (!((e2 | 0) == (j2 | 0) & (f2 | 0) == (k2 | 0))) {
                g2 = c[d2 + 8 >> 2] | 0;
                if (!((f2 | 0) == (k2 | 0) & (g2 | 0) == (j2 | 0)))
                  if (!((f2 | 0) == (j2 | 0) & (g2 | 0) == (k2 | 0)))
                    if ((g2 | 0) != (k2 | 0) | (e2 | 0) == (j2 | 0) ^ 1)
                      e2 = (g2 | 0) != (j2 | 0) | (e2 | 0) == (k2 | 0) ^ 1 ? 9504 : d2 + 12 + 4 | 0;
                    else {
                      e2 = 1;
                      n2 = 34;
                    }
                  else
                    e2 = d2 + 12 | 0;
                else {
                  e2 = 0;
                  n2 = 34;
                }
              } else
                e2 = d2 + 12 + 8 | 0;
            else {
              e2 = 2;
              n2 = 34;
            }
            if ((n2 | 0) == 34) {
              n2 = 0;
              e2 = d2 + 12 + (e2 << 2) | 0;
            }
            h2 = c[a2 + (c[e2 >> 2] << 2) >> 2] | 0;
            e2 = c[h2 >> 2] | 0;
            f2 = c[h2 + 4 >> 2] | 0;
            do
              if (!((e2 | 0) == (j2 | 0) & (f2 | 0) == (k2 | 0))) {
                if ((e2 | 0) == (k2 | 0) ? (f2 | 0) == (j2 | 0) : 0) {
                  e2 = h2 + 12 + 8 | 0;
                  break;
                }
                g2 = c[h2 + 8 >> 2] | 0;
                if (!((f2 | 0) == (j2 | 0) & (g2 | 0) == (k2 | 0)))
                  if (!((f2 | 0) == (k2 | 0) & (g2 | 0) == (j2 | 0)))
                    if ((g2 | 0) != (j2 | 0) | (e2 | 0) == (k2 | 0) ^ 1) {
                      if ((g2 | 0) == (k2 | 0) ? (e2 | 0) == (j2 | 0) : 0) {
                        e2 = h2 + 12 + 4 | 0;
                        break;
                      }
                      e2 = 9504;
                    } else {
                      e2 = 1;
                      n2 = 41;
                    }
                  else
                    e2 = h2 + 12 | 0;
                else {
                  e2 = 0;
                  n2 = 41;
                }
              } else {
                e2 = 2;
                n2 = 41;
              }
            while (0);
            if ((n2 | 0) == 41) {
              n2 = 0;
              e2 = h2 + 12 + (e2 << 2) | 0;
            }
            c[e2 >> 2] = i2;
          } while (!m2);
          return;
        }
        function ie(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
          u2 = i;
          i = i + 176 | 0;
          if (!(a[b2 + 527 >> 0] | 0)) {
            i = u2;
            return;
          }
          g[b2 + 36 >> 2] = 0;
          g[b2 + 520 >> 2] = 0;
          g[b2 + 516 >> 2] = 0;
          c[b2 + 576 >> 2] = 0;
          c[b2 + 576 + 4 >> 2] = 0;
          c[b2 + 576 + 8 >> 2] = 0;
          c[b2 + 576 + 12 >> 2] = 0;
          if (!(a[b2 + 524 >> 0] | 0)) {
            d2 = c[b2 + 28 >> 2] | 0;
            k2 = +g[b2 + 348 >> 2];
            l2 = +g[b2 + 352 >> 2];
            q2 = +g[b2 + 356 >> 2];
            s2 = k2 * +g[d2 + 20 >> 2] + l2 * +g[d2 + 24 >> 2] + q2 * +g[d2 + 28 >> 2] + +g[d2 + 56 >> 2];
            e2 = c[b2 + 32 >> 2] | 0;
            m2 = +g[b2 + 412 >> 2];
            n2 = +g[b2 + 416 >> 2];
            r2 = +g[b2 + 420 >> 2];
            t2 = m2 * +g[e2 + 20 >> 2] + n2 * +g[e2 + 24 >> 2] + r2 * +g[e2 + 28 >> 2] + +g[e2 + 56 >> 2];
            o2 = m2 * +g[e2 + 36 >> 2] + n2 * +g[e2 + 40 >> 2] + r2 * +g[e2 + 44 >> 2] + +g[e2 + 60 >> 2];
            p2 = k2 * +g[d2 + 4 >> 2] + l2 * +g[d2 + 8 >> 2] + q2 * +g[d2 + 12 >> 2] + +g[d2 + 52 >> 2];
            q2 = k2 * +g[d2 + 36 >> 2] + l2 * +g[d2 + 40 >> 2] + q2 * +g[d2 + 44 >> 2] + +g[d2 + 60 >> 2];
            r2 = m2 * +g[e2 + 4 >> 2] + n2 * +g[e2 + 8 >> 2] + r2 * +g[e2 + 12 >> 2] + +g[e2 + 52 >> 2];
            if ((r2 - p2) * (r2 - p2) + (t2 - s2) * (t2 - s2) + (o2 - q2) * (o2 - q2) > 11920928955078125e-23) {
              h2 = 1 / +G(+((r2 - p2) * (r2 - p2) + (t2 - s2) * (t2 - s2) + (o2 - q2) * (o2 - q2)));
              g[u2 + 128 >> 2] = (r2 - p2) * h2;
              g[u2 + 128 + 4 >> 2] = (t2 - s2) * h2;
              g[u2 + 128 + 8 >> 2] = (o2 - q2) * h2;
              c[u2 + 128 + 12 >> 2] = 0;
              m2 = (o2 - q2) * h2;
              f2 = (t2 - s2) * h2;
              h2 = (r2 - p2) * h2;
            } else {
              c[u2 + 128 >> 2] = 1065353216;
              c[u2 + 128 + 4 >> 2] = 0;
              c[u2 + 128 + 8 >> 2] = 0;
              g[u2 + 128 + 12 >> 2] = 0;
              m2 = 0;
              f2 = 0;
              h2 = 1;
            }
            if (+F(+m2) > 0.7071067690849304) {
              w2 = m2 * m2 + f2 * f2;
              v2 = 1 / +G(+w2);
              k2 = -(v2 * m2);
              m2 = v2 * f2;
              n2 = -(m2 * h2);
              j2 = h2 * k2;
              l2 = 0;
              f2 = w2 * v2;
              h2 = m2;
            } else {
              k2 = h2 * h2 + f2 * f2;
              j2 = 1 / +G(+k2);
              l2 = -(f2 * j2);
              f2 = j2 * h2;
              n2 = m2 * l2;
              j2 = k2 * j2;
              k2 = f2;
              f2 = -(f2 * m2);
              h2 = 0;
            }
            g[u2 + 128 + 16 >> 2] = l2;
            g[u2 + 128 + 20 >> 2] = k2;
            g[u2 + 128 + 24 >> 2] = h2;
            g[u2 + 128 + 32 >> 2] = f2;
            g[u2 + 128 + 36 >> 2] = n2;
            g[u2 + 128 + 40 >> 2] = j2;
            d2 = 0;
            while (1) {
              x2 = c[b2 + 28 >> 2] | 0;
              c[u2 + 80 >> 2] = c[x2 + 4 >> 2];
              c[u2 + 80 + 4 >> 2] = c[x2 + 20 >> 2];
              c[u2 + 80 + 8 >> 2] = c[x2 + 36 >> 2];
              g[u2 + 80 + 12 >> 2] = 0;
              c[u2 + 80 + 16 >> 2] = c[x2 + 8 >> 2];
              c[u2 + 80 + 20 >> 2] = c[x2 + 24 >> 2];
              c[u2 + 80 + 24 >> 2] = c[x2 + 40 >> 2];
              g[u2 + 80 + 28 >> 2] = 0;
              c[u2 + 80 + 32 >> 2] = c[x2 + 12 >> 2];
              c[u2 + 80 + 36 >> 2] = c[x2 + 28 >> 2];
              c[u2 + 80 + 40 >> 2] = c[x2 + 44 >> 2];
              g[u2 + 80 + 44 >> 2] = 0;
              c[u2 + 32 >> 2] = c[e2 + 4 >> 2];
              c[u2 + 32 + 4 >> 2] = c[e2 + 20 >> 2];
              c[u2 + 32 + 8 >> 2] = c[e2 + 36 >> 2];
              g[u2 + 32 + 12 >> 2] = 0;
              c[u2 + 32 + 16 >> 2] = c[e2 + 8 >> 2];
              c[u2 + 32 + 20 >> 2] = c[e2 + 24 >> 2];
              c[u2 + 32 + 24 >> 2] = c[e2 + 40 >> 2];
              g[u2 + 32 + 28 >> 2] = 0;
              c[u2 + 32 + 32 >> 2] = c[e2 + 12 >> 2];
              c[u2 + 32 + 36 >> 2] = c[e2 + 28 >> 2];
              c[u2 + 32 + 40 >> 2] = c[e2 + 44 >> 2];
              g[u2 + 32 + 44 >> 2] = 0;
              w2 = s2 - +g[x2 + 56 >> 2];
              v2 = q2 - +g[x2 + 60 >> 2];
              g[u2 + 16 >> 2] = p2 - +g[x2 + 52 >> 2];
              g[u2 + 16 + 4 >> 2] = w2;
              g[u2 + 16 + 8 >> 2] = v2;
              g[u2 + 16 + 12 >> 2] = 0;
              v2 = t2 - +g[e2 + 56 >> 2];
              w2 = o2 - +g[e2 + 60 >> 2];
              g[u2 >> 2] = r2 - +g[e2 + 52 >> 2];
              g[u2 + 4 >> 2] = v2;
              g[u2 + 8 >> 2] = w2;
              g[u2 + 12 >> 2] = 0;
              x2 = c[b2 + 28 >> 2] | 0;
              e2 = c[b2 + 32 >> 2] | 0;
              Eg(b2 + 48 + (d2 * 84 | 0) | 0, u2 + 80 | 0, u2 + 32 | 0, u2 + 16 | 0, u2, u2 + 128 + (d2 << 4) | 0, x2 + 436 | 0, +g[x2 + 384 >> 2], e2 + 436 | 0, +g[e2 + 384 >> 2]);
              d2 = d2 + 1 | 0;
              if ((d2 | 0) == 3)
                break;
              e2 = c[b2 + 32 >> 2] | 0;
            }
            d2 = b2 + 32 | 0;
          } else
            d2 = b2 + 32 | 0;
          e2 = c[b2 + 28 >> 2] | 0;
          x2 = c[d2 >> 2] | 0;
          qc(b2, e2 + 4 | 0, x2 + 4 | 0, e2 + 304 | 0, x2 + 304 | 0);
          i = u2;
          return;
        }
        function je(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          g2 = i;
          i = i + 80 | 0;
          c[a2 + 72 >> 2] = (c[a2 + 72 >> 2] | 0) + 1;
          f2 = c[a2 + 68 >> 2] | 0;
          if (f2 | 0) {
            d2 = c[(c[a2 + 28 >> 2] | 0) + (b2 * 80 | 0) + 76 >> 2] | 0;
            Wg(f2, d2) | 0;
            e2 = c[f2 + 4 >> 2] | 0;
            if (e2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[e2 + -4 >> 2] | 0);
            }
            c[f2 + 4 >> 2] = d2;
            c[f2 + 12 >> 2] = (c[f2 + 12 >> 2] | 0) + -1;
          }
          f2 = (c[a2 + 20 >> 2] | 0) + -1 | 0;
          e2 = c[a2 + 28 >> 2] | 0;
          c[g2 >> 2] = c[e2 + (b2 * 80 | 0) >> 2];
          c[g2 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 4 >> 2];
          c[g2 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 8 >> 2];
          c[g2 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 12 >> 2];
          c[g2 + 16 >> 2] = c[e2 + (b2 * 80 | 0) + 16 >> 2];
          c[g2 + 16 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 16 + 4 >> 2];
          c[g2 + 16 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 16 + 8 >> 2];
          c[g2 + 16 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 16 + 12 >> 2];
          c[g2 + 32 >> 2] = c[e2 + (b2 * 80 | 0) + 32 >> 2];
          c[g2 + 32 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 32 + 4 >> 2];
          c[g2 + 32 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 32 + 8 >> 2];
          c[g2 + 32 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 32 + 12 >> 2];
          c[g2 + 48 >> 2] = c[e2 + (b2 * 80 | 0) + 48 >> 2];
          c[g2 + 48 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 48 + 4 >> 2];
          c[g2 + 48 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 48 + 8 >> 2];
          c[g2 + 48 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 48 + 12 >> 2];
          c[g2 + 64 >> 2] = c[e2 + (b2 * 80 | 0) + 64 >> 2];
          c[g2 + 64 + 4 >> 2] = c[e2 + (b2 * 80 | 0) + 64 + 4 >> 2];
          c[g2 + 64 + 8 >> 2] = c[e2 + (b2 * 80 | 0) + 64 + 8 >> 2];
          c[g2 + 64 + 12 >> 2] = c[e2 + (b2 * 80 | 0) + 64 + 12 >> 2];
          c[e2 + (b2 * 80 | 0) >> 2] = c[e2 + (f2 * 80 | 0) >> 2];
          c[e2 + (b2 * 80 | 0) + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 4 >> 2];
          c[e2 + (b2 * 80 | 0) + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 8 >> 2];
          c[e2 + (b2 * 80 | 0) + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 12 >> 2];
          c[e2 + (b2 * 80 | 0) + 16 >> 2] = c[e2 + (f2 * 80 | 0) + 16 >> 2];
          c[e2 + (b2 * 80 | 0) + 16 + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 16 + 4 >> 2];
          c[e2 + (b2 * 80 | 0) + 16 + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 16 + 8 >> 2];
          c[e2 + (b2 * 80 | 0) + 16 + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 16 + 12 >> 2];
          c[e2 + (b2 * 80 | 0) + 32 >> 2] = c[e2 + (f2 * 80 | 0) + 32 >> 2];
          c[e2 + (b2 * 80 | 0) + 32 + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 32 + 4 >> 2];
          c[e2 + (b2 * 80 | 0) + 32 + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 32 + 8 >> 2];
          c[e2 + (b2 * 80 | 0) + 32 + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 32 + 12 >> 2];
          c[e2 + (b2 * 80 | 0) + 48 >> 2] = c[e2 + (f2 * 80 | 0) + 48 >> 2];
          c[e2 + (b2 * 80 | 0) + 48 + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 48 + 4 >> 2];
          c[e2 + (b2 * 80 | 0) + 48 + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 48 + 8 >> 2];
          c[e2 + (b2 * 80 | 0) + 48 + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 48 + 12 >> 2];
          c[e2 + (b2 * 80 | 0) + 64 >> 2] = c[e2 + (f2 * 80 | 0) + 64 >> 2];
          c[e2 + (b2 * 80 | 0) + 64 + 4 >> 2] = c[e2 + (f2 * 80 | 0) + 64 + 4 >> 2];
          c[e2 + (b2 * 80 | 0) + 64 + 8 >> 2] = c[e2 + (f2 * 80 | 0) + 64 + 8 >> 2];
          c[e2 + (b2 * 80 | 0) + 64 + 12 >> 2] = c[e2 + (f2 * 80 | 0) + 64 + 12 >> 2];
          e2 = c[a2 + 28 >> 2] | 0;
          c[e2 + (f2 * 80 | 0) >> 2] = c[g2 >> 2];
          c[e2 + (f2 * 80 | 0) + 4 >> 2] = c[g2 + 4 >> 2];
          c[e2 + (f2 * 80 | 0) + 8 >> 2] = c[g2 + 8 >> 2];
          c[e2 + (f2 * 80 | 0) + 12 >> 2] = c[g2 + 12 >> 2];
          c[e2 + (f2 * 80 | 0) + 16 >> 2] = c[g2 + 16 >> 2];
          c[e2 + (f2 * 80 | 0) + 16 + 4 >> 2] = c[g2 + 16 + 4 >> 2];
          c[e2 + (f2 * 80 | 0) + 16 + 8 >> 2] = c[g2 + 16 + 8 >> 2];
          c[e2 + (f2 * 80 | 0) + 16 + 12 >> 2] = c[g2 + 16 + 12 >> 2];
          c[e2 + (f2 * 80 | 0) + 32 >> 2] = c[g2 + 32 >> 2];
          c[e2 + (f2 * 80 | 0) + 32 + 4 >> 2] = c[g2 + 32 + 4 >> 2];
          c[e2 + (f2 * 80 | 0) + 32 + 8 >> 2] = c[g2 + 32 + 8 >> 2];
          c[e2 + (f2 * 80 | 0) + 32 + 12 >> 2] = c[g2 + 32 + 12 >> 2];
          c[e2 + (f2 * 80 | 0) + 48 >> 2] = c[g2 + 48 >> 2];
          c[e2 + (f2 * 80 | 0) + 48 + 4 >> 2] = c[g2 + 48 + 4 >> 2];
          c[e2 + (f2 * 80 | 0) + 48 + 8 >> 2] = c[g2 + 48 + 8 >> 2];
          c[e2 + (f2 * 80 | 0) + 48 + 12 >> 2] = c[g2 + 48 + 12 >> 2];
          c[e2 + (f2 * 80 | 0) + 64 >> 2] = c[g2 + 64 >> 2];
          c[e2 + (f2 * 80 | 0) + 64 + 4 >> 2] = c[g2 + 64 + 4 >> 2];
          c[e2 + (f2 * 80 | 0) + 64 + 8 >> 2] = c[g2 + 64 + 8 >> 2];
          c[e2 + (f2 * 80 | 0) + 64 + 12 >> 2] = c[g2 + 64 + 12 >> 2];
          if (!(c[a2 + 68 >> 2] | 0)) {
            f2 = c[a2 + 20 >> 2] | 0;
            f2 = f2 + -1 | 0;
            c[a2 + 20 >> 2] = f2;
            i = g2;
            return;
          }
          c[(c[(c[a2 + 28 >> 2] | 0) + (b2 * 80 | 0) + 76 >> 2] | 0) + 36 >> 2] = b2;
          f2 = c[a2 + 20 >> 2] | 0;
          f2 = f2 + -1 | 0;
          c[a2 + 20 >> 2] = f2;
          i = g2;
          return;
        }
        function ke(a2, d2, f2, h2, j2, k2, l2, m2, n2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          f2 = f2 | 0;
          h2 = +h2;
          j2 = +j2;
          k2 = +k2;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0;
          V2 = i;
          i = i + 32 | 0;
          U2 = +g[f2 >> 2];
          J2 = +g[f2 + 4 >> 2];
          M2 = +g[f2 + 8 >> 2];
          N2 = 1 / +G(+((h2 - U2) * (h2 - U2) + (j2 - J2) * (j2 - J2) + (k2 - M2) * (k2 - M2)));
          R2 = (h2 - U2) * N2 == 0 ? 999999984306749400 : 1 / ((h2 - U2) * N2);
          S2 = (j2 - J2) * N2 == 0 ? 999999984306749400 : 1 / ((j2 - J2) * N2);
          T2 = (k2 - M2) * N2 == 0 ? 999999984306749400 : 1 / ((k2 - M2) * N2);
          ea2 = (U2 > h2 ? h2 : U2) + +g[l2 >> 2];
          ca2 = (J2 > j2 ? j2 : J2) + +g[l2 + 4 >> 2];
          da2 = (M2 > k2 ? k2 : M2) + +g[l2 + 8 >> 2];
          aa2 = (U2 < h2 ? h2 : U2) + +g[m2 >> 2];
          t2 = (J2 < j2 ? j2 : J2) + +g[m2 + 4 >> 2];
          Y2 = (M2 < k2 ? k2 : M2) + +g[m2 + 8 >> 2];
          $2 = +g[a2 + 4 >> 2];
          ea2 = ea2 < $2 ? $2 : ea2;
          u2 = +g[a2 + 8 >> 2];
          ca2 = ca2 < u2 ? u2 : ca2;
          X2 = +g[a2 + 12 >> 2];
          da2 = da2 < X2 ? X2 : da2;
          ba2 = +g[a2 + 20 >> 2];
          s2 = +g[a2 + 24 >> 2];
          Z2 = +g[a2 + 28 >> 2];
          _2 = +g[a2 + 36 >> 2];
          v2 = +g[a2 + 40 >> 2];
          W2 = +g[a2 + 44 >> 2];
          K2 = ~~(((ba2 < ea2 ? ba2 : ea2) - $2) * _2) & 65534;
          F2 = ~~(((Z2 < da2 ? Z2 : da2) - X2) * W2) & 65534;
          I2 = ~~(((s2 < ca2 ? s2 : ca2) - u2) * v2) & 65534;
          aa2 = aa2 < $2 ? $2 : aa2;
          t2 = t2 < u2 ? u2 : t2;
          Y2 = Y2 < X2 ? X2 : Y2;
          L2 = (~~(((ba2 < aa2 ? ba2 : aa2) - $2) * _2 + 1) & 65535 | 1) & 65535;
          E2 = (~~(((Z2 < Y2 ? Z2 : Y2) - X2) * W2 + 1) & 65535 | 1) & 65535;
          H2 = (~~(((s2 < t2 ? s2 : t2) - u2) * v2 + 1) & 65535 | 1) & 65535;
          if ((n2 | 0) > 0) {
            p2 = 0;
            o2 = 0;
            q2 = c[a2 + 136 >> 2] | 0;
            do {
              o2 = o2 + 1 | 0;
              r2 = q2 + 6 | 0;
              w2 = b[q2 >> 1] | 0;
              x2 = q2 + 10 | 0;
              y2 = b[q2 + 4 >> 1] | 0;
              z2 = q2 + 8 | 0;
              A2 = b[q2 + 2 >> 1] | 0;
              B2 = q2 + 12 | 0;
              C2 = (c[B2 >> 2] | 0) > -1;
              do
                if (!(((L2 & 65535) >= (w2 & 65535) ? (K2 & 65535) <= (e[r2 >> 1] | 0) : 0) & (F2 & 65535) <= (e[x2 >> 1] | 0) & (E2 & 65535) >= (y2 & 65535) & (I2 & 65535) <= (e[z2 >> 1] | 0) & (H2 & 65535) >= (A2 & 65535))) {
                  r2 = 0;
                  w2 = 9;
                } else {
                  aa2 = +g[a2 + 36 >> 2];
                  ca2 = +g[a2 + 40 >> 2];
                  ea2 = +g[a2 + 44 >> 2];
                  ba2 = +g[a2 + 4 >> 2];
                  da2 = +g[a2 + 8 >> 2];
                  u2 = +g[a2 + 12 >> 2];
                  g[V2 + 12 >> 2] = 0;
                  v2 = +(e[r2 >> 1] | 0) / aa2 + ba2;
                  s2 = +(e[z2 >> 1] | 0) / ca2 + da2;
                  t2 = +(e[x2 >> 1] | 0) / ea2 + u2;
                  g[V2 + 28 >> 2] = 0;
                  g[V2 >> 2] = +(w2 & 65535) / aa2 + ba2 - +g[m2 >> 2];
                  g[V2 + 4 >> 2] = +(A2 & 65535) / ca2 + da2 - +g[m2 + 4 >> 2];
                  g[V2 + 8 >> 2] = +(y2 & 65535) / ea2 + u2 - +g[m2 + 8 >> 2];
                  g[V2 + 16 >> 2] = v2 - +g[l2 >> 2];
                  g[V2 + 20 >> 2] = s2 - +g[l2 + 4 >> 2];
                  g[V2 + 24 >> 2] = t2 - +g[l2 + 8 >> 2];
                  t2 = +g[f2 >> 2];
                  s2 = R2 * (+g[V2 + ((R2 < 0 & 1) << 4) >> 2] - t2);
                  t2 = R2 * (+g[V2 + ((R2 < 0 ^ 1) << 4) >> 2] - t2);
                  v2 = +g[f2 + 4 >> 2];
                  u2 = S2 * (+g[V2 + ((S2 < 0 & 1) << 4) + 4 >> 2] - v2);
                  v2 = S2 * (+g[V2 + ((S2 < 0 ^ 1) << 4) + 4 >> 2] - v2);
                  if (!(u2 > t2 | s2 > v2) ? (O2 = u2 > s2 ? u2 : s2, D2 = v2 < t2 ? v2 : t2, Q2 = +g[f2 + 8 >> 2], P2 = T2 * (+g[V2 + ((T2 < 0 & 1) << 4) + 8 >> 2] - Q2), Q2 = T2 * (+g[V2 + ((T2 < 0 ^ 1) << 4) + 8 >> 2] - Q2), !(P2 > D2 | O2 > Q2)) : 0) {
                    r2 = (Q2 < D2 ? Q2 : D2) > 0 ? (P2 > O2 ? P2 : O2) < (k2 - M2) * (k2 - M2) * N2 + ((h2 - U2) * (h2 - U2) * N2 + (j2 - J2) * (j2 - J2) * N2) : 0;
                    if (!(C2 & r2)) {
                      w2 = 9;
                      break;
                    }
                    w2 = c[B2 >> 2] | 0;
                    Ub[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, w2 >> 21, w2 & 2097151);
                    w2 = 10;
                    break;
                  }
                  r2 = 0;
                  w2 = 9;
                }
              while (0);
              if ((w2 | 0) == 9) {
                w2 = 0;
                if (C2 | r2)
                  w2 = 10;
                else {
                  C2 = c[B2 >> 2] | 0;
                  p2 = p2 - C2 | 0;
                  q2 = q2 + (0 - C2 << 4) | 0;
                }
              }
              if ((w2 | 0) == 10) {
                p2 = p2 + 1 | 0;
                q2 = q2 + 16 | 0;
              }
            } while ((p2 | 0) < (n2 | 0));
          } else
            o2 = 0;
          if ((c[6317] | 0) >= (o2 | 0)) {
            i = V2;
            return;
          }
          c[6317] = o2;
          i = V2;
          return;
        }
        function le(b2, d2, e2, f2, h2, j2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          s2 = i;
          i = i + 64 | 0;
          if ((h2 | 0) > 0) {
            b2 = 0;
            k2 = 0;
            do {
              r2 = c[f2 + (k2 << 2) >> 2] | 0;
              b2 = (r2 | 0) > (b2 | 0) ? r2 : b2;
              k2 = k2 + 1 | 0;
            } while ((k2 | 0) < (h2 * 3 | 0));
          } else
            b2 = 0;
          q2 = b2 + 1 | 0;
          l2 = S(q2, q2) | 0;
          if (!l2)
            k2 = 0;
          else {
            c[6324] = (c[6324] | 0) + 1;
            k2 = ic(l2 + 19 | 0) | 0;
            if (!k2)
              k2 = 0;
            else {
              c[(k2 + 4 + 15 & -16) + -4 >> 2] = k2;
              k2 = k2 + 4 + 15 & -16;
            }
            yn(k2 | 0, 0, l2 | 0) | 0;
          }
          if ((b2 | 0) > -1) {
            c[6324] = (c[6324] | 0) + 1;
            b2 = ic((q2 << 4 | 3) + 16 | 0) | 0;
            if (!b2)
              m2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              m2 = b2 + 4 + 15 & -16;
            }
            b2 = 0;
            do {
              r2 = m2 + (b2 << 4) | 0;
              c[r2 >> 2] = c[s2 >> 2];
              c[r2 + 4 >> 2] = c[s2 + 4 >> 2];
              c[r2 + 8 >> 2] = c[s2 + 8 >> 2];
              c[r2 + 12 >> 2] = c[s2 + 12 >> 2];
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) != (q2 | 0));
            b2 = 0;
            l2 = 0;
            while (1) {
              p2 = c[e2 + (l2 + 1 << 2) >> 2] | 0;
              r2 = c[e2 + (l2 + 2 << 2) >> 2] | 0;
              c[m2 + (b2 << 4) >> 2] = c[e2 + (l2 << 2) >> 2];
              c[m2 + (b2 << 4) + 4 >> 2] = p2;
              c[m2 + (b2 << 4) + 8 >> 2] = r2;
              g[m2 + (b2 << 4) + 12 >> 2] = 0;
              l2 = l2 + 3 | 0;
              if ((l2 | 0) >= (q2 * 3 | 0))
                break;
              else
                b2 = b2 + 1 | 0;
            }
          } else
            m2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(1311) | 0;
          if (!b2)
            r2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            r2 = b2 + 4 + 15 & -16;
          }
          tc(r2, d2, q2, m2, 0);
          if ((h2 | 0) > 0) {
            d2 = 0;
            do {
              n2 = c[f2 + (d2 << 2) >> 2] | 0;
              o2 = c[f2 + (d2 + 1 << 2) >> 2] | 0;
              p2 = c[f2 + (d2 + 2 << 2) >> 2] | 0;
              l2 = S(n2, q2) | 0;
              b2 = k2 + (l2 + p2) | 0;
              if (!(a[b2 >> 0] | 0)) {
                a[b2 >> 0] = 1;
                a[k2 + (n2 + (S(p2, q2) | 0)) >> 0] = 1;
                Gf(r2, p2, n2, 0, 0);
              }
              e2 = S(o2, q2) | 0;
              b2 = k2 + (e2 + n2) | 0;
              if (!(a[b2 >> 0] | 0)) {
                a[b2 >> 0] = 1;
                a[k2 + (o2 + l2) >> 0] = 1;
                Gf(r2, n2, o2, 0, 0);
              }
              b2 = k2 + ((S(p2, q2) | 0) + o2) | 0;
              if (!(a[b2 >> 0] | 0)) {
                a[b2 >> 0] = 1;
                a[k2 + (p2 + e2) >> 0] = 1;
                Gf(r2, o2, p2, 0, 0);
              }
              Pf(r2, n2, o2, p2, 0);
              d2 = d2 + 3 | 0;
            } while ((d2 | 0) < (h2 * 3 | 0));
          }
          if (j2) {
            e2 = c[r2 + 772 >> 2] | 0;
            if ((e2 | 0) > 0) {
              d2 = r2 + 780 | 0;
              b2 = 243703;
              l2 = 0;
              do {
                n2 = c[d2 >> 2] | 0;
                o2 = n2 + (l2 * 52 | 0) | 0;
                b2 = (S(b2, 1664525) | 0) + 1013904223 | 0;
                p2 = s2;
                q2 = o2;
                f2 = p2 + 52 | 0;
                do {
                  c[p2 >> 2] = c[q2 >> 2];
                  p2 = p2 + 4 | 0;
                  q2 = q2 + 4 | 0;
                } while ((p2 | 0) < (f2 | 0));
                p2 = o2;
                q2 = n2 + (((b2 >>> 0) % (e2 >>> 0) | 0) * 52 | 0) | 0;
                f2 = p2 + 52 | 0;
                do {
                  c[p2 >> 2] = c[q2 >> 2];
                  p2 = p2 + 4 | 0;
                  q2 = q2 + 4 | 0;
                } while ((p2 | 0) < (f2 | 0));
                p2 = n2 + (((b2 >>> 0) % (e2 >>> 0) | 0) * 52 | 0) | 0;
                q2 = s2;
                f2 = p2 + 52 | 0;
                do {
                  c[p2 >> 2] = c[q2 >> 2];
                  p2 = p2 + 4 | 0;
                  q2 = q2 + 4 | 0;
                } while ((p2 | 0) < (f2 | 0));
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) != (e2 | 0));
            } else
              b2 = 243703;
            n2 = c[r2 + 792 >> 2] | 0;
            if ((n2 | 0) > 0) {
              o2 = r2 + 800 | 0;
              l2 = 0;
              do {
                d2 = c[o2 >> 2] | 0;
                e2 = d2 + (l2 * 44 | 0) | 0;
                b2 = (S(b2, 1664525) | 0) + 1013904223 | 0;
                d2 = d2 + (((b2 >>> 0) % (n2 >>> 0) | 0) * 44 | 0) | 0;
                p2 = s2;
                q2 = e2;
                f2 = p2 + 44 | 0;
                do {
                  c[p2 >> 2] = c[q2 >> 2];
                  p2 = p2 + 4 | 0;
                  q2 = q2 + 4 | 0;
                } while ((p2 | 0) < (f2 | 0));
                p2 = e2;
                q2 = d2;
                f2 = p2 + 44 | 0;
                do {
                  c[p2 >> 2] = c[q2 >> 2];
                  p2 = p2 + 4 | 0;
                  q2 = q2 + 4 | 0;
                } while ((p2 | 0) < (f2 | 0));
                p2 = d2;
                q2 = s2;
                f2 = p2 + 44 | 0;
                do {
                  c[p2 >> 2] = c[q2 >> 2];
                  p2 = p2 + 4 | 0;
                  q2 = q2 + 4 | 0;
                } while ((p2 | 0) < (f2 | 0));
                l2 = l2 + 1 | 0;
              } while ((l2 | 0) != (n2 | 0));
            }
          }
          if (m2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[m2 + -4 >> 2] | 0);
          }
          if (!k2) {
            i = s2;
            return r2 | 0;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[k2 + -4 >> 2] | 0);
          i = s2;
          return r2 | 0;
        }
        function me(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0;
          Gg(a2, b2 + (c2 * 284 | 0) | 0, d2);
          m2 = +g[b2 + (c2 * 284 | 0) + 52 >> 2];
          h2 = +g[b2 + (c2 * 284 | 0) + 56 >> 2];
          q2 = +g[b2 + (c2 * 284 | 0) + 60 >> 2];
          H2 = +g[b2 + (c2 * 284 | 0) + 76 >> 2];
          x2 = +g[b2 + (c2 * 284 | 0) + 72 >> 2];
          z2 = +g[b2 + (c2 * 284 | 0) + 68 >> 2];
          w2 = 1 / +G(+((x2 * -m2 - z2 * -h2) * (x2 * -m2 - z2 * -h2) + ((H2 * -h2 - x2 * -q2) * (H2 * -h2 - x2 * -q2) + (z2 * -q2 - H2 * -m2) * (z2 * -q2 - H2 * -m2))));
          v2 = (H2 * -h2 - x2 * -q2) * w2;
          u2 = w2 * (z2 * -q2 - H2 * -m2);
          w2 = w2 * (x2 * -m2 - z2 * -h2);
          e2 = +g[b2 + (c2 * 284 | 0) + 232 >> 2] * 0.5;
          k2 = +J(+e2) / +G(+(m2 * m2 + h2 * h2 + q2 * q2));
          e2 = +I(+e2);
          l2 = 2 / (e2 * e2 + (k2 * -q2 * k2 * -q2 + (k2 * -m2 * k2 * -m2 + k2 * -h2 * k2 * -h2)));
          E2 = 1 - (k2 * -h2 * k2 * -h2 * l2 + k2 * -q2 * k2 * -q2 * l2);
          D2 = k2 * -m2 * k2 * -h2 * l2 - e2 * k2 * -q2 * l2;
          F2 = k2 * -m2 * k2 * -q2 * l2 + e2 * k2 * -h2 * l2;
          B2 = k2 * -m2 * k2 * -h2 * l2 + e2 * k2 * -q2 * l2;
          A2 = 1 - (k2 * -m2 * k2 * -m2 * l2 + k2 * -q2 * k2 * -q2 * l2);
          C2 = k2 * -h2 * k2 * -q2 * l2 - e2 * k2 * -m2 * l2;
          j2 = k2 * -m2 * k2 * -q2 * l2 - e2 * k2 * -h2 * l2;
          e2 = k2 * -h2 * k2 * -q2 * l2 + e2 * k2 * -m2 * l2;
          l2 = 1 - (k2 * -m2 * k2 * -m2 * l2 + k2 * -h2 * k2 * -h2 * l2);
          k2 = +g[b2 + (c2 * 284 | 0) + 236 >> 2] * -0.5;
          y2 = +J(+k2) / +G(+(H2 * H2 + (x2 * x2 + z2 * z2)));
          k2 = +I(+k2);
          r2 = 2 / (k2 * k2 + (H2 * y2 * H2 * y2 + (z2 * y2 * z2 * y2 + x2 * y2 * x2 * y2)));
          n2 = 1 - (x2 * y2 * x2 * y2 * r2 + H2 * y2 * H2 * y2 * r2);
          i2 = z2 * y2 * x2 * y2 * r2 - k2 * H2 * y2 * r2;
          t2 = z2 * y2 * H2 * y2 * r2 + k2 * x2 * y2 * r2;
          o2 = z2 * y2 * x2 * y2 * r2 + k2 * H2 * y2 * r2;
          f2 = 1 - (z2 * y2 * z2 * y2 * r2 + H2 * y2 * H2 * y2 * r2);
          s2 = x2 * y2 * H2 * y2 * r2 - k2 * z2 * y2 * r2;
          p2 = z2 * y2 * H2 * y2 * r2 - k2 * x2 * y2 * r2;
          k2 = x2 * y2 * H2 * y2 * r2 + k2 * z2 * y2 * r2;
          r2 = 1 - (z2 * y2 * z2 * y2 * r2 + x2 * y2 * x2 * y2 * r2);
          y2 = +g[b2 + (c2 * 284 | 0) + 68 >> 2];
          x2 = +g[b2 + (c2 * 284 | 0) + 72 >> 2];
          z2 = +g[b2 + (c2 * 284 | 0) + 76 >> 2];
          g[b2 + (c2 * 284 | 0) + 92 >> 2] = z2 * (E2 * t2 + D2 * s2 + F2 * r2) + (y2 * (F2 * p2 + (D2 * o2 + E2 * n2)) + x2 * (F2 * k2 + (E2 * i2 + D2 * f2)));
          g[b2 + (c2 * 284 | 0) + 96 >> 2] = w2 * (E2 * t2 + D2 * s2 + F2 * r2) + (v2 * (F2 * p2 + (D2 * o2 + E2 * n2)) + u2 * (F2 * k2 + (E2 * i2 + D2 * f2)));
          g[b2 + (c2 * 284 | 0) + 100 >> 2] = (E2 * t2 + D2 * s2 + F2 * r2) * -q2 + ((F2 * p2 + (D2 * o2 + E2 * n2)) * -m2 + (F2 * k2 + (E2 * i2 + D2 * f2)) * -h2);
          g[b2 + (c2 * 284 | 0) + 104 >> 2] = 0;
          g[b2 + (c2 * 284 | 0) + 108 >> 2] = z2 * (B2 * t2 + A2 * s2 + C2 * r2) + (y2 * (C2 * p2 + (A2 * o2 + B2 * n2)) + x2 * (C2 * k2 + (B2 * i2 + A2 * f2)));
          g[b2 + (c2 * 284 | 0) + 112 >> 2] = w2 * (B2 * t2 + A2 * s2 + C2 * r2) + (v2 * (C2 * p2 + (A2 * o2 + B2 * n2)) + u2 * (C2 * k2 + (B2 * i2 + A2 * f2)));
          g[b2 + (c2 * 284 | 0) + 116 >> 2] = (B2 * t2 + A2 * s2 + C2 * r2) * -q2 + ((C2 * p2 + (A2 * o2 + B2 * n2)) * -m2 + (C2 * k2 + (B2 * i2 + A2 * f2)) * -h2);
          g[b2 + (c2 * 284 | 0) + 120 >> 2] = 0;
          g[b2 + (c2 * 284 | 0) + 124 >> 2] = z2 * (j2 * t2 + e2 * s2 + l2 * r2) + (y2 * (l2 * p2 + (e2 * o2 + j2 * n2)) + x2 * (l2 * k2 + (j2 * i2 + e2 * f2)));
          g[b2 + (c2 * 284 | 0) + 128 >> 2] = w2 * (j2 * t2 + e2 * s2 + l2 * r2) + (v2 * (l2 * p2 + (e2 * o2 + j2 * n2)) + u2 * (l2 * k2 + (j2 * i2 + e2 * f2)));
          g[b2 + (c2 * 284 | 0) + 132 >> 2] = (j2 * t2 + e2 * s2 + l2 * r2) * -q2 + ((l2 * p2 + (e2 * o2 + j2 * n2)) * -m2 + (l2 * k2 + (j2 * i2 + e2 * f2)) * -h2);
          g[b2 + (c2 * 284 | 0) + 136 >> 2] = 0;
          h2 = +g[b2 + (c2 * 284 | 0) + 32 >> 2];
          f2 = h2 * +g[b2 + (c2 * 284 | 0) + 56 >> 2] + +g[b2 + (c2 * 284 | 0) + 40 >> 2];
          e2 = h2 * +g[b2 + (c2 * 284 | 0) + 60 >> 2] + +g[b2 + (c2 * 284 | 0) + 44 >> 2];
          g[b2 + (c2 * 284 | 0) + 140 >> 2] = +g[b2 + (c2 * 284 | 0) + 52 >> 2] * h2 + +g[b2 + (c2 * 284 | 0) + 36 >> 2];
          g[b2 + (c2 * 284 | 0) + 144 >> 2] = f2;
          g[b2 + (c2 * 284 | 0) + 148 >> 2] = e2;
          g[b2 + (c2 * 284 | 0) + 152 >> 2] = 0;
          return;
        }
        function ne(b2, d2, e2, f2, h2, j2, k2, l2, m2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = +j2;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
          D2 = i;
          i = i + 32 | 0;
          if (!d2) {
            i = D2;
            return;
          }
          n2 = c[b2 + 44 >> 2] | 0;
          if ((n2 | 0) < 128) {
            if ((c[b2 + 48 >> 2] | 0) < 128) {
              c[6324] = (c[6324] | 0) + 1;
              o2 = ic(531) | 0;
              if (!o2)
                q2 = 0;
              else {
                c[(o2 + 4 + 15 & -16) + -4 >> 2] = o2;
                q2 = o2 + 4 + 15 & -16;
              }
              p2 = c[b2 + 44 >> 2] | 0;
              if ((p2 | 0) > 0) {
                o2 = 0;
                do {
                  c[q2 + (o2 << 2) >> 2] = c[(c[b2 + 52 >> 2] | 0) + (o2 << 2) >> 2];
                  o2 = o2 + 1 | 0;
                } while ((o2 | 0) != (p2 | 0));
              }
              o2 = c[b2 + 52 >> 2] | 0;
              if (o2 | 0) {
                if (a[b2 + 56 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[o2 + -4 >> 2] | 0);
                }
                c[b2 + 52 >> 2] = 0;
              }
              a[b2 + 56 >> 0] = 1;
              c[b2 + 52 >> 2] = q2;
              c[b2 + 48 >> 2] = 128;
              o2 = b2 + 52 | 0;
            } else
              o2 = b2 + 52 | 0;
            do {
              c[(c[o2 >> 2] | 0) + (n2 << 2) >> 2] = 0;
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != 128);
            y2 = b2 + 48 | 0;
          } else {
            o2 = b2 + 52 | 0;
            y2 = b2 + 48 | 0;
          }
          c[b2 + 44 >> 2] = 128;
          c[c[o2 >> 2] >> 2] = d2;
          p2 = 1;
          n2 = 126;
          do {
            w2 = p2 + -1 | 0;
            q2 = c[o2 >> 2] | 0;
            x2 = c[q2 + (w2 << 2) >> 2] | 0;
            u2 = +g[x2 + 4 >> 2] - +g[l2 + 4 >> 2];
            s2 = +g[x2 + 8 >> 2] - +g[l2 + 8 >> 2];
            g[D2 >> 2] = +g[x2 >> 2] - +g[l2 >> 2];
            g[D2 + 4 >> 2] = u2;
            g[D2 + 8 >> 2] = s2;
            g[D2 + 12 >> 2] = 0;
            s2 = +g[x2 + 20 >> 2] - +g[k2 + 4 >> 2];
            u2 = +g[x2 + 24 >> 2] - +g[k2 + 8 >> 2];
            g[D2 + 16 >> 2] = +g[x2 + 16 >> 2] - +g[k2 >> 2];
            g[D2 + 20 >> 2] = s2;
            g[D2 + 24 >> 2] = u2;
            g[D2 + 28 >> 2] = 0;
            v2 = c[h2 >> 2] | 0;
            u2 = +g[e2 >> 2];
            s2 = +g[f2 >> 2];
            t2 = (+g[D2 + (v2 << 4) >> 2] - u2) * s2;
            u2 = s2 * (+g[D2 + (1 - v2 << 4) >> 2] - u2);
            v2 = c[h2 + 4 >> 2] | 0;
            s2 = +g[e2 + 4 >> 2];
            E2 = +g[f2 + 4 >> 2];
            r2 = (+g[D2 + (v2 << 4) + 4 >> 2] - s2) * E2;
            s2 = E2 * (+g[D2 + (1 - v2 << 4) + 4 >> 2] - s2);
            do
              if ((!(r2 > u2 | t2 > s2) ? (A2 = r2 > t2 ? r2 : t2, z2 = s2 < u2 ? s2 : u2, v2 = c[h2 + 8 >> 2] | 0, C2 = +g[e2 + 8 >> 2], E2 = +g[f2 + 8 >> 2], B2 = (+g[D2 + (v2 << 4) + 8 >> 2] - C2) * E2, C2 = E2 * (+g[D2 + (1 - v2 << 4) + 8 >> 2] - C2), !(B2 > z2 | A2 > C2)) : 0) ? (C2 < z2 ? C2 : z2) > 0 ? (B2 > A2 ? B2 : A2) < j2 : 0 : 0) {
                if (!(c[x2 + 40 >> 2] | 0)) {
                  mb[c[(c[m2 >> 2] | 0) + 12 >> 2] & 127](m2, x2);
                  p2 = w2;
                  break;
                }
                if ((w2 | 0) > (n2 | 0)) {
                  v2 = c[b2 + 44 >> 2] | 0;
                  if ((v2 | 0) < (v2 << 1 | 0)) {
                    if ((c[y2 >> 2] | 0) < (v2 << 1 | 0)) {
                      if (v2) {
                        c[6324] = (c[6324] | 0) + 1;
                        n2 = ic((v2 << 3 | 3) + 16 | 0) | 0;
                        if (!n2)
                          q2 = 0;
                        else {
                          c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                          q2 = n2 + 4 + 15 & -16;
                        }
                        d2 = c[b2 + 44 >> 2] | 0;
                        if ((d2 | 0) > 0) {
                          n2 = 0;
                          do {
                            c[q2 + (n2 << 2) >> 2] = c[(c[o2 >> 2] | 0) + (n2 << 2) >> 2];
                            n2 = n2 + 1 | 0;
                          } while ((n2 | 0) != (d2 | 0));
                        }
                      } else
                        q2 = 0;
                      n2 = c[o2 >> 2] | 0;
                      if (n2 | 0) {
                        if (a[b2 + 56 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[n2 + -4 >> 2] | 0);
                        }
                        c[o2 >> 2] = 0;
                      }
                      a[b2 + 56 >> 0] = 1;
                      c[o2 >> 2] = q2;
                      c[y2 >> 2] = v2 << 1;
                      n2 = v2;
                    } else
                      n2 = v2;
                    do {
                      c[q2 + (n2 << 2) >> 2] = 0;
                      n2 = n2 + 1 | 0;
                      q2 = c[o2 >> 2] | 0;
                    } while ((n2 | 0) != (v2 << 1 | 0));
                  }
                  c[b2 + 44 >> 2] = v2 << 1;
                  n2 = (v2 << 1) + -2 | 0;
                }
                c[q2 + (w2 << 2) >> 2] = c[x2 + 36 >> 2];
                c[(c[o2 >> 2] | 0) + (p2 << 2) >> 2] = c[x2 + 40 >> 2];
                p2 = p2 + 1 | 0;
              } else
                p2 = w2;
            while (0);
          } while ((p2 | 0) != 0);
          i = D2;
          return;
        }
        function oe(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
          D2 = i;
          i = i + 32 | 0;
          q2 = +g[d2 >> 2];
          h2 = (g[l >> 2] = q2, c[l >> 2] | 0);
          t2 = q2 < 999999984306749400 ? h2 : 1566444395;
          p2 = +g[d2 + 4 >> 2];
          k2 = (g[l >> 2] = p2, c[l >> 2] | 0);
          u2 = p2 < 999999984306749400 ? k2 : 1566444395;
          E2 = +g[d2 + 8 >> 2];
          n2 = (g[l >> 2] = E2, c[l >> 2] | 0);
          w2 = E2 < 999999984306749400 ? n2 : 1566444395;
          r2 = +g[d2 + 12 >> 2];
          y2 = r2 < 0 ? r2 : 0;
          h2 = q2 > -999999984306749400 ? h2 : -581039253;
          k2 = p2 > -999999984306749400 ? k2 : -581039253;
          n2 = E2 > -999999984306749400 ? n2 : -581039253;
          r2 = r2 > 0 ? r2 : 0;
          E2 = +g[d2 + 16 >> 2];
          B2 = E2 < (c[l >> 2] = t2, +g[l >> 2]);
          j2 = (g[l >> 2] = E2, c[l >> 2] | 0);
          t2 = B2 ? j2 : t2;
          p2 = +g[d2 + 20 >> 2];
          B2 = p2 < (c[l >> 2] = u2, +g[l >> 2]);
          m2 = (g[l >> 2] = p2, c[l >> 2] | 0);
          u2 = B2 ? m2 : u2;
          q2 = +g[d2 + 24 >> 2];
          B2 = q2 < (c[l >> 2] = w2, +g[l >> 2]);
          o2 = (g[l >> 2] = q2, c[l >> 2] | 0);
          w2 = B2 ? o2 : w2;
          s2 = +g[d2 + 28 >> 2];
          y2 = s2 < y2 ? s2 : y2;
          x2 = (c[l >> 2] = h2, +g[l >> 2]) < E2 ? j2 : h2;
          v2 = (c[l >> 2] = k2, +g[l >> 2]) < p2 ? m2 : k2;
          m2 = (c[l >> 2] = n2, +g[l >> 2]) < q2 ? o2 : n2;
          s2 = r2 < s2 ? s2 : r2;
          E2 = +g[d2 + 32 >> 2];
          B2 = E2 < (c[l >> 2] = t2, +g[l >> 2]);
          h2 = (g[l >> 2] = E2, c[l >> 2] | 0);
          B2 = B2 ? h2 : t2;
          q2 = +g[d2 + 36 >> 2];
          A2 = q2 < (c[l >> 2] = u2, +g[l >> 2]);
          j2 = (g[l >> 2] = q2, c[l >> 2] | 0);
          A2 = A2 ? j2 : u2;
          r2 = +g[d2 + 40 >> 2];
          z2 = r2 < (c[l >> 2] = w2, +g[l >> 2]);
          k2 = (g[l >> 2] = r2, c[l >> 2] | 0);
          z2 = z2 ? k2 : w2;
          p2 = +g[d2 + 44 >> 2];
          y2 = p2 < y2 ? p2 : y2;
          w2 = (c[l >> 2] = x2, +g[l >> 2]) < E2 ? h2 : x2;
          v2 = (c[l >> 2] = v2, +g[l >> 2]) < q2 ? j2 : v2;
          u2 = (c[l >> 2] = m2, +g[l >> 2]) < r2 ? k2 : m2;
          p2 = s2 < p2 ? p2 : s2;
          t2 = c[b2 + 4 >> 2] | 0;
          h2 = c[t2 + 4 >> 2] | 0;
          if ((h2 | 0) == (c[t2 + 8 >> 2] | 0) ? (C2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (C2 | 0)) : 0) {
            if (!C2)
              o2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              h2 = ic(C2 << 6 | 19) | 0;
              if (!h2)
                h2 = 0;
              else {
                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                h2 = h2 + 4 + 15 & -16;
              }
              o2 = h2;
              h2 = c[t2 + 4 >> 2] | 0;
            }
            if ((h2 | 0) > 0) {
              j2 = 0;
              do {
                k2 = o2 + (j2 << 6) | 0;
                m2 = (c[t2 + 12 >> 2] | 0) + (j2 << 6) | 0;
                n2 = k2 + 64 | 0;
                do {
                  c[k2 >> 2] = c[m2 >> 2];
                  k2 = k2 + 4 | 0;
                  m2 = m2 + 4 | 0;
                } while ((k2 | 0) < (n2 | 0));
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
            }
            h2 = c[t2 + 12 >> 2] | 0;
            if (h2 | 0) {
              if (a[t2 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[h2 + -4 >> 2] | 0);
              }
              c[t2 + 12 >> 2] = 0;
            }
            a[t2 + 16 >> 0] = 1;
            c[t2 + 12 >> 2] = o2;
            c[t2 + 8 >> 2] = C2;
            h2 = c[t2 + 4 >> 2] | 0;
          }
          C2 = c[t2 + 12 >> 2] | 0;
          c[C2 + (h2 << 6) >> 2] = B2;
          c[C2 + (h2 << 6) + 4 >> 2] = A2;
          c[C2 + (h2 << 6) + 8 >> 2] = z2;
          g[C2 + (h2 << 6) + 12 >> 2] = y2;
          c[C2 + (h2 << 6) + 16 >> 2] = w2;
          c[C2 + (h2 << 6) + 20 >> 2] = v2;
          c[C2 + (h2 << 6) + 24 >> 2] = u2;
          g[C2 + (h2 << 6) + 28 >> 2] = p2;
          c[C2 + (h2 << 6) + 32 >> 2] = -1;
          c[C2 + (h2 << 6) + 36 >> 2] = e2;
          c[C2 + (h2 << 6) + 40 >> 2] = f2;
          f2 = C2 + (h2 << 6) + 44 | 0;
          c[f2 >> 2] = c[D2 >> 2];
          c[f2 + 4 >> 2] = c[D2 + 4 >> 2];
          c[f2 + 8 >> 2] = c[D2 + 8 >> 2];
          c[f2 + 12 >> 2] = c[D2 + 12 >> 2];
          c[f2 + 16 >> 2] = c[D2 + 16 >> 2];
          c[t2 + 4 >> 2] = (c[t2 + 4 >> 2] | 0) + 1;
          i = D2;
          return;
        }
        function pe(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0;
          o2 = i;
          i = i + 16 | 0;
          n2 = +g[d2 >> 2];
          j2 = +g[d2 + 4 >> 2];
          k2 = +g[d2 + 8 >> 2];
          l2 = +g[e2 >> 2];
          m2 = +g[e2 + 4 >> 2];
          h2 = +g[e2 + 8 >> 2];
          if (!(a[b2 + 228 >> 0] | 0)) {
            z2 = +g[b2 + 100 >> 2];
            w2 = +g[b2 + 116 >> 2];
            C2 = +g[b2 + 132 >> 2];
            y2 = +g[b2 + 104 >> 2];
            u2 = +g[b2 + 120 >> 2];
            B2 = +g[b2 + 136 >> 2];
            x2 = +g[b2 + 108 >> 2];
            s2 = +g[b2 + 124 >> 2];
            A2 = +g[b2 + 140 >> 2];
            F2 = -+g[b2 + 148 >> 2];
            E2 = -+g[b2 + 152 >> 2];
            D2 = -+g[b2 + 156 >> 2];
            J2 = +g[b2 + 164 >> 2];
            I2 = +g[b2 + 168 >> 2];
            r2 = +g[b2 + 172 >> 2];
            H2 = +g[b2 + 180 >> 2];
            G2 = +g[b2 + 184 >> 2];
            q2 = +g[b2 + 188 >> 2];
            v2 = +g[b2 + 196 >> 2];
            t2 = +g[b2 + 200 >> 2];
            p2 = +g[b2 + 204 >> 2];
            r2 = h2 * (C2 * J2 + B2 * I2 + A2 * r2) + (l2 * (z2 * J2 + y2 * I2 + x2 * r2) + m2 * (w2 * J2 + u2 * I2 + s2 * r2)) + (J2 * (z2 * F2 + w2 * E2 + C2 * D2) + (y2 * F2 + u2 * E2 + B2 * D2) * I2 + (x2 * F2 + s2 * E2 + A2 * D2) * r2 + +g[b2 + 212 >> 2]);
            q2 = h2 * (C2 * H2 + B2 * G2 + A2 * q2) + (l2 * (z2 * H2 + y2 * G2 + x2 * q2) + m2 * (w2 * H2 + u2 * G2 + s2 * q2)) + ((z2 * F2 + w2 * E2 + C2 * D2) * H2 + (y2 * F2 + u2 * E2 + B2 * D2) * G2 + (x2 * F2 + s2 * E2 + A2 * D2) * q2 + +g[b2 + 216 >> 2]);
            p2 = (z2 * F2 + w2 * E2 + C2 * D2) * v2 + (y2 * F2 + u2 * E2 + B2 * D2) * t2 + (x2 * F2 + s2 * E2 + A2 * D2) * p2 + +g[b2 + 220 >> 2] + (h2 * (C2 * v2 + B2 * t2 + A2 * p2) + (l2 * (z2 * v2 + y2 * t2 + x2 * p2) + m2 * (w2 * v2 + u2 * t2 + s2 * p2)));
            g[o2 >> 2] = r2;
            g[o2 + 4 >> 2] = q2;
            n2 = (n2 * f2 + l2 - r2) * +g[d2 >> 2] + (j2 * f2 + m2 - q2) * +g[d2 + 4 >> 2] + (k2 * f2 + h2 - p2) * +g[d2 + 8 >> 2];
            f2 = p2;
            e2 = o2 + 8 | 0;
            g[e2 >> 2] = f2;
            e2 = o2 + 12 | 0;
            g[e2 >> 2] = 0;
            b2 = b2 + 32 | 0;
            b2 = c[b2 >> 2] | 0;
            e2 = c[b2 >> 2] | 0;
            e2 = e2 + 16 | 0;
            e2 = c[e2 >> 2] | 0;
            Tb[e2 & 15](b2, d2, o2, n2);
            i = o2;
            return;
          } else {
            z2 = +g[b2 + 36 >> 2];
            C2 = +g[b2 + 52 >> 2];
            w2 = +g[b2 + 68 >> 2];
            A2 = +g[b2 + 40 >> 2];
            E2 = +g[b2 + 56 >> 2];
            x2 = +g[b2 + 72 >> 2];
            B2 = +g[b2 + 44 >> 2];
            J2 = +g[b2 + 60 >> 2];
            y2 = +g[b2 + 76 >> 2];
            t2 = -+g[b2 + 84 >> 2];
            u2 = -+g[b2 + 88 >> 2];
            v2 = -+g[b2 + 92 >> 2];
            p2 = +g[b2 + 164 >> 2];
            q2 = +g[b2 + 168 >> 2];
            G2 = +g[b2 + 172 >> 2];
            r2 = +g[b2 + 180 >> 2];
            s2 = +g[b2 + 184 >> 2];
            H2 = +g[b2 + 188 >> 2];
            D2 = +g[b2 + 196 >> 2];
            F2 = +g[b2 + 200 >> 2];
            I2 = +g[b2 + 204 >> 2];
            G2 = (k2 * f2 + h2) * (w2 * p2 + x2 * q2 + y2 * G2) + ((n2 * f2 + l2) * (z2 * p2 + A2 * q2 + B2 * G2) + (j2 * f2 + m2) * (C2 * p2 + E2 * q2 + J2 * G2)) + (p2 * (z2 * t2 + C2 * u2 + w2 * v2) + (A2 * t2 + E2 * u2 + x2 * v2) * q2 + (B2 * t2 + J2 * u2 + y2 * v2) * G2 + +g[b2 + 212 >> 2]);
            H2 = (k2 * f2 + h2) * (w2 * r2 + x2 * s2 + y2 * H2) + ((n2 * f2 + l2) * (z2 * r2 + A2 * s2 + B2 * H2) + (j2 * f2 + m2) * (C2 * r2 + E2 * s2 + J2 * H2)) + ((z2 * t2 + C2 * u2 + w2 * v2) * r2 + (A2 * t2 + E2 * u2 + x2 * v2) * s2 + (B2 * t2 + J2 * u2 + y2 * v2) * H2 + +g[b2 + 216 >> 2]);
            I2 = (z2 * t2 + C2 * u2 + w2 * v2) * D2 + (A2 * t2 + E2 * u2 + x2 * v2) * F2 + (B2 * t2 + J2 * u2 + y2 * v2) * I2 + +g[b2 + 220 >> 2] + ((k2 * f2 + h2) * (w2 * D2 + x2 * F2 + y2 * I2) + ((n2 * f2 + l2) * (z2 * D2 + A2 * F2 + B2 * I2) + (j2 * f2 + m2) * (C2 * D2 + E2 * F2 + J2 * I2)));
            g[o2 >> 2] = G2 + n2 * (n2 * (G2 - l2) + j2 * (H2 - m2) + k2 * (I2 - h2));
            g[o2 + 4 >> 2] = H2 + j2 * (n2 * (G2 - l2) + j2 * (H2 - m2) + k2 * (I2 - h2));
            J2 = n2 * (G2 - l2) + j2 * (H2 - m2) + k2 * (I2 - h2);
            I2 = I2 + k2 * (n2 * (G2 - l2) + j2 * (H2 - m2) + k2 * (I2 - h2));
            e2 = o2 + 8 | 0;
            g[e2 >> 2] = I2;
            e2 = o2 + 12 | 0;
            g[e2 >> 2] = 0;
            b2 = b2 + 32 | 0;
            b2 = c[b2 >> 2] | 0;
            e2 = c[b2 >> 2] | 0;
            e2 = e2 + 16 | 0;
            e2 = c[e2 >> 2] | 0;
            Tb[e2 & 15](b2, d2, o2, J2);
            i = o2;
            return;
          }
        }
        function qe(b2, d2, e2, f2, h2, i2, j2, k2, l2, m2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
          if ((j2 | 0) < 2 | (k2 | 0) < 2) {
            m2 = 0;
            return m2 | 0;
          }
          r2 = S(k2, j2) | 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(r2 >>> 0 > 268435455 ? 18 : (r2 << 4 | 3) + 16 | 0) | 0;
          if (!b2)
            q2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            q2 = b2 + 4 + 15 & -16;
          }
          n2 = r2 >>> 0 > 1073741823 ? -1 : r2 << 2;
          n2 = (n2 | 0) == 0 ? 1 : n2;
          while (1) {
            b2 = ic(n2) | 0;
            if (b2 | 0) {
              p2 = b2;
              break;
            }
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              p2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          if ((k2 | 0) > 0 ? (j2 | 0) > 0 : 0) {
            b2 = 0;
            do {
              y2 = +(b2 | 0) / +(k2 + -1 | 0);
              s2 = +g[e2 >> 2];
              s2 = s2 + y2 * (+g[h2 >> 2] - s2);
              t2 = +g[e2 + 4 >> 2];
              t2 = t2 + y2 * (+g[h2 + 4 >> 2] - t2);
              u2 = +g[e2 + 8 >> 2];
              u2 = u2 + y2 * (+g[h2 + 8 >> 2] - u2);
              v2 = +g[f2 >> 2];
              w2 = +g[f2 + 4 >> 2];
              x2 = +g[f2 + 8 >> 2];
              o2 = S(b2, j2) | 0;
              v2 = v2 + y2 * (+g[i2 >> 2] - v2) - s2;
              w2 = w2 + y2 * (+g[i2 + 4 >> 2] - w2) - t2;
              x2 = x2 + y2 * (+g[i2 + 8 >> 2] - x2) - u2;
              n2 = 0;
              do {
                y2 = +(n2 | 0) / +(j2 + -1 | 0);
                z2 = n2 + o2 | 0;
                g[q2 + (z2 << 4) >> 2] = s2 + v2 * y2;
                g[q2 + (z2 << 4) + 4 >> 2] = t2 + w2 * y2;
                g[q2 + (z2 << 4) + 8 >> 2] = u2 + x2 * y2;
                g[q2 + (z2 << 4) + 12 >> 2] = 0;
                g[p2 + (z2 << 2) >> 2] = 1;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != (j2 | 0));
              b2 = b2 + 1 | 0;
            } while ((b2 | 0) != (k2 | 0));
          }
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(1311) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          tc(b2, d2, r2, q2, p2);
          if (l2 & 1 | 0) {
            g[(c[b2 + 760 >> 2] | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 2 | 0) {
            g[(c[b2 + 760 >> 2] | 0) + ((j2 + -1 | 0) * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 4 | 0) {
            z2 = S(k2 + -1 | 0, j2) | 0;
            g[(c[b2 + 760 >> 2] | 0) + (z2 * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (l2 & 8 | 0) {
            z2 = j2 + -1 + (S(k2 + -1 | 0, j2) | 0) | 0;
            g[(c[b2 + 760 >> 2] | 0) + (z2 * 104 | 0) + 88 >> 2] = 0;
            a[b2 + 964 >> 0] = 1;
          }
          if (q2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[q2 + -4 >> 2] | 0);
          }
          Rc(p2);
          if ((k2 | 0) <= 0) {
            z2 = b2;
            return z2 | 0;
          }
          n2 = 0;
          do
            a:
              do
                if ((j2 | 0) > 0) {
                  i2 = S(n2, j2) | 0;
                  r2 = n2 + 1 | 0;
                  q2 = S(r2, j2) | 0;
                  if ((r2 | 0) < (k2 | 0))
                    o2 = 0;
                  else {
                    n2 = 0;
                    while (1) {
                      o2 = n2;
                      n2 = n2 + 1 | 0;
                      if ((n2 | 0) < (j2 | 0))
                        Gf(b2, o2 + i2 | 0, n2 + i2 | 0, 0, 0);
                      if ((n2 | 0) == (j2 | 0)) {
                        n2 = r2;
                        break a;
                      }
                    }
                  }
                  do {
                    e2 = o2 + i2 | 0;
                    p2 = o2;
                    o2 = o2 + 1 | 0;
                    do
                      if ((o2 | 0) < (j2 | 0)) {
                        f2 = o2 + i2 | 0;
                        Gf(b2, e2, f2, 0, 0);
                        Gf(b2, e2, p2 + q2 | 0, 0, 0);
                        if (!(p2 + n2 & 1)) {
                          Pf(b2, p2 + q2 | 0, e2, f2, 0);
                          Pf(b2, p2 + q2 | 0, f2, o2 + q2 | 0, 0);
                          if (!m2)
                            break;
                          Gf(b2, f2, p2 + q2 | 0, 0, 0);
                          break;
                        } else {
                          h2 = o2 + q2 | 0;
                          Pf(b2, e2, f2, h2, 0);
                          Pf(b2, e2, h2, p2 + q2 | 0, 0);
                          if (!m2)
                            break;
                          Gf(b2, e2, h2, 0, 0);
                          break;
                        }
                      } else
                        Gf(b2, e2, p2 + q2 | 0, 0, 0);
                    while (0);
                  } while ((o2 | 0) != (j2 | 0));
                  n2 = r2;
                } else
                  n2 = n2 + 1 | 0;
              while (0);
          while ((n2 | 0) != (k2 | 0));
          return b2 | 0;
        }
        function re(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var f2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          r2 = i;
          i = i + 80 | 0;
          n2 = c[a2 + 4 >> 2] | 0;
          Ib[c[(c[n2 >> 2] | 0) + 16 >> 2] & 3](n2, r2 + 28 | 0, r2 + 24 | 0, r2 + 20 | 0, r2 + 16 | 0, r2 + 12 | 0, r2 + 8 | 0, r2 + 4 | 0, r2, b2);
          n2 = (c[r2 + 12 >> 2] | 0) + (S(c[r2 + 8 >> 2] | 0, d2) | 0) | 0;
          q2 = c[a2 + 4 >> 2] | 0;
          p2 = (c[r2 + 20 >> 2] | 0) == 0;
          o2 = c[r2 + 28 >> 2] | 0;
          if ((c[r2 >> 2] | 0) == 3) {
            m2 = c[r2 + 16 >> 2] | 0;
            l2 = o2 + (S(m2, e[n2 + 4 >> 1] | 0) | 0) | 0;
            if (p2) {
              j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
              k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
              f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
            } else {
              j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
              k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
              f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
            }
            g[r2 + 32 + 32 >> 2] = f2;
            g[r2 + 32 + 36 >> 2] = k2;
            g[r2 + 32 + 40 >> 2] = j2;
            g[r2 + 32 + 44 >> 2] = 0;
            l2 = o2 + (S(m2, e[n2 + 2 >> 1] | 0) | 0) | 0;
            if (p2) {
              j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
              k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
              f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
            } else {
              j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
              k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
              f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
            }
            g[r2 + 32 + 16 >> 2] = f2;
            g[r2 + 32 + 20 >> 2] = k2;
            g[r2 + 32 + 24 >> 2] = j2;
            g[r2 + 32 + 28 >> 2] = 0;
            l2 = o2 + (S(m2, e[n2 >> 1] | 0) | 0) | 0;
            if (p2) {
              j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
              k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
              f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
            } else {
              j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
              k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
              f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
            }
            g[r2 + 32 >> 2] = f2;
            g[r2 + 32 + 4 >> 2] = k2;
            g[r2 + 32 + 8 >> 2] = j2;
            g[r2 + 32 + 12 >> 2] = 0;
            q2 = a2 + 8 | 0;
            q2 = c[q2 >> 2] | 0;
            p2 = c[q2 >> 2] | 0;
            p2 = p2 + 8 | 0;
            p2 = c[p2 >> 2] | 0;
            Yb[p2 & 127](q2, r2 + 32 | 0, b2, d2);
            d2 = c[a2 + 4 >> 2] | 0;
            a2 = c[d2 >> 2] | 0;
            a2 = a2 + 24 | 0;
            a2 = c[a2 >> 2] | 0;
            mb[a2 & 127](d2, b2);
            i = r2;
            return;
          } else {
            m2 = c[r2 + 16 >> 2] | 0;
            l2 = o2 + (S(m2, c[n2 + 8 >> 2] | 0) | 0) | 0;
            if (p2) {
              j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
              k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
              f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
            } else {
              j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
              k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
              f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
            }
            g[r2 + 32 + 32 >> 2] = f2;
            g[r2 + 32 + 36 >> 2] = k2;
            g[r2 + 32 + 40 >> 2] = j2;
            g[r2 + 32 + 44 >> 2] = 0;
            l2 = o2 + (S(m2, c[n2 + 4 >> 2] | 0) | 0) | 0;
            if (p2) {
              j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
              k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
              f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
            } else {
              j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
              k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
              f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
            }
            g[r2 + 32 + 16 >> 2] = f2;
            g[r2 + 32 + 20 >> 2] = k2;
            g[r2 + 32 + 24 >> 2] = j2;
            g[r2 + 32 + 28 >> 2] = 0;
            l2 = o2 + (S(m2, c[n2 >> 2] | 0) | 0) | 0;
            if (p2) {
              j2 = +g[l2 + 8 >> 2] * +g[q2 + 12 >> 2];
              k2 = +g[l2 + 4 >> 2] * +g[q2 + 8 >> 2];
              f2 = +g[l2 >> 2] * +g[q2 + 4 >> 2];
            } else {
              j2 = +h[l2 + 16 >> 3] * +g[q2 + 12 >> 2];
              k2 = +h[l2 + 8 >> 3] * +g[q2 + 8 >> 2];
              f2 = +h[l2 >> 3] * +g[q2 + 4 >> 2];
            }
            g[r2 + 32 >> 2] = f2;
            g[r2 + 32 + 4 >> 2] = k2;
            g[r2 + 32 + 8 >> 2] = j2;
            g[r2 + 32 + 12 >> 2] = 0;
            q2 = a2 + 8 | 0;
            q2 = c[q2 >> 2] | 0;
            p2 = c[q2 >> 2] | 0;
            p2 = p2 + 8 | 0;
            p2 = c[p2 >> 2] | 0;
            Yb[p2 & 127](q2, r2 + 32 | 0, b2, d2);
            d2 = c[a2 + 4 >> 2] | 0;
            a2 = c[d2 >> 2] | 0;
            a2 = a2 + 24 | 0;
            a2 = c[a2 >> 2] | 0;
            mb[a2 & 127](d2, b2);
            i = r2;
            return;
          }
        }
        function se(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0;
          d2 = i;
          i = i + 96 | 0;
          l2 = +g[b2 >> 2];
          m2 = +g[a2 + 28 >> 2];
          n2 = +g[b2 + 4 >> 2];
          o2 = +g[a2 + 32 >> 2];
          p2 = +g[b2 + 8 >> 2];
          q2 = +g[a2 + 36 >> 2];
          r2 = +g[a2 + 44 >> 2];
          s2 = +g[a2 + 48 >> 2];
          t2 = +g[a2 + 52 >> 2];
          u2 = +g[a2 + 60 >> 2];
          v2 = +g[a2 + 64 >> 2];
          w2 = +g[a2 + 68 >> 2];
          x2 = +g[a2 + 76 >> 2];
          y2 = +g[a2 + 80 >> 2];
          z2 = +g[a2 + 84 >> 2];
          g[d2 + 80 >> 2] = l2 * m2 + n2 * o2 + p2 * q2 + x2;
          g[d2 + 80 + 4 >> 2] = l2 * r2 + n2 * s2 + p2 * t2 + y2;
          g[d2 + 80 + 8 >> 2] = l2 * u2 + n2 * v2 + p2 * w2 + z2;
          g[d2 + 80 + 12 >> 2] = 0;
          A2 = +g[b2 + 16 >> 2];
          B2 = +g[b2 + 20 >> 2];
          C2 = +g[b2 + 24 >> 2];
          g[d2 + 64 >> 2] = A2 * m2 + B2 * o2 + C2 * q2 + x2;
          g[d2 + 64 + 4 >> 2] = A2 * r2 + B2 * s2 + C2 * t2 + y2;
          g[d2 + 64 + 8 >> 2] = A2 * u2 + B2 * v2 + C2 * w2 + z2;
          g[d2 + 64 + 12 >> 2] = 0;
          D2 = +g[b2 + 32 >> 2];
          E2 = +g[b2 + 36 >> 2];
          k2 = +g[b2 + 40 >> 2];
          g[d2 + 48 >> 2] = D2 * m2 + E2 * o2 + k2 * q2 + x2;
          g[d2 + 48 + 4 >> 2] = D2 * r2 + E2 * s2 + k2 * t2 + y2;
          g[d2 + 48 + 8 >> 2] = D2 * u2 + E2 * v2 + k2 * w2 + z2;
          g[d2 + 48 + 12 >> 2] = 0;
          f2 = (l2 * m2 + n2 * o2 + p2 * q2 + x2 + (A2 * m2 + B2 * o2 + C2 * q2 + x2) + (D2 * m2 + E2 * o2 + k2 * q2 + x2)) * 0.3333333432674408;
          h2 = (l2 * r2 + n2 * s2 + p2 * t2 + y2 + (A2 * r2 + B2 * s2 + C2 * t2 + y2) + (D2 * r2 + E2 * s2 + k2 * t2 + y2)) * 0.3333333432674408;
          j2 = (l2 * u2 + n2 * v2 + p2 * w2 + z2 + (A2 * u2 + B2 * v2 + C2 * w2 + z2) + (D2 * u2 + E2 * v2 + k2 * w2 + z2)) * 0.3333333432674408;
          g[d2 + 32 >> 2] = f2;
          g[d2 + 32 + 4 >> 2] = h2;
          g[d2 + 32 + 8 >> 2] = j2;
          g[d2 + 32 + 12 >> 2] = 0;
          b2 = c[a2 + 8 >> 2] | 0;
          if (!((ob[c[(c[b2 >> 2] | 0) + 56 >> 2] & 127](b2) | 0) & 16384)) {
            e2 = c[a2 + 8 >> 2] | 0;
            F2 = c[e2 >> 2] | 0;
            F2 = F2 + 16 | 0;
            F2 = c[F2 >> 2] | 0;
            b2 = a2 + 12 | 0;
            Yb[F2 & 127](e2, d2 + 80 | 0, d2 + 64 | 0, b2);
            e2 = c[a2 + 8 >> 2] | 0;
            F2 = c[e2 >> 2] | 0;
            F2 = F2 + 16 | 0;
            F2 = c[F2 >> 2] | 0;
            Yb[F2 & 127](e2, d2 + 64 | 0, d2 + 48 | 0, b2);
            a2 = c[a2 + 8 >> 2] | 0;
            e2 = c[a2 >> 2] | 0;
            e2 = e2 + 16 | 0;
            e2 = c[e2 >> 2] | 0;
            Yb[e2 & 127](a2, d2 + 48 | 0, d2 + 80 | 0, b2);
            i = d2;
            return;
          }
          J2 = +g[d2 + 80 >> 2];
          I2 = A2 * r2 + B2 * s2 + C2 * t2 + y2 - (l2 * r2 + n2 * s2 + p2 * t2 + y2);
          H2 = A2 * u2 + B2 * v2 + C2 * w2 + z2 - (l2 * u2 + n2 * v2 + p2 * w2 + z2);
          y2 = D2 * r2 + E2 * s2 + k2 * t2 + y2 - (l2 * r2 + n2 * s2 + p2 * t2 + y2);
          w2 = D2 * u2 + E2 * v2 + k2 * w2 + z2 - (l2 * u2 + n2 * v2 + p2 * w2 + z2);
          z2 = H2 * (D2 * m2 + E2 * o2 + k2 * q2 + x2 - J2) - (A2 * m2 + B2 * o2 + C2 * q2 + x2 - J2) * w2;
          E2 = (A2 * m2 + B2 * o2 + C2 * q2 + x2 - J2) * y2 - I2 * (D2 * m2 + E2 * o2 + k2 * q2 + x2 - J2);
          D2 = 1 / +G(+(E2 * E2 + ((I2 * w2 - H2 * y2) * (I2 * w2 - H2 * y2) + z2 * z2)));
          c[d2 + 16 >> 2] = 1065353216;
          c[d2 + 16 + 4 >> 2] = 1065353216;
          c[d2 + 16 + 8 >> 2] = 0;
          g[d2 + 16 + 12 >> 2] = 0;
          b2 = c[a2 + 8 >> 2] | 0;
          e2 = c[(c[b2 >> 2] | 0) + 16 >> 2] | 0;
          g[d2 >> 2] = D2 * (I2 * w2 - H2 * y2) + f2;
          g[d2 + 4 >> 2] = D2 * z2 + h2;
          g[d2 + 8 >> 2] = D2 * E2 + j2;
          g[d2 + 12 >> 2] = 0;
          Yb[e2 & 127](b2, d2 + 32 | 0, d2, d2 + 16 | 0);
          b2 = c[a2 + 8 >> 2] | 0;
          e2 = c[b2 >> 2] | 0;
          e2 = e2 + 16 | 0;
          e2 = c[e2 >> 2] | 0;
          F2 = a2 + 12 | 0;
          Yb[e2 & 127](b2, d2 + 80 | 0, d2 + 64 | 0, F2);
          b2 = c[a2 + 8 >> 2] | 0;
          e2 = c[b2 >> 2] | 0;
          e2 = e2 + 16 | 0;
          e2 = c[e2 >> 2] | 0;
          Yb[e2 & 127](b2, d2 + 64 | 0, d2 + 48 | 0, F2);
          a2 = c[a2 + 8 >> 2] | 0;
          b2 = c[a2 >> 2] | 0;
          b2 = b2 + 16 | 0;
          b2 = c[b2 >> 2] | 0;
          Yb[b2 & 127](a2, d2 + 48 | 0, d2 + 80 | 0, F2);
          i = d2;
          return;
        }
        function te(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
          a2 = i;
          i = i + 144 | 0;
          switch (c[b2 + 428 >> 2] & 15) {
            case 1: {
              c[a2 + 112 >> 2] = 3180;
              h2 = c[d2 + 8 >> 2] | 0;
              h2 = (c[h2 + 248 >> 2] & 2 | 0) == 0 ? 0 : h2;
              j2 = c[d2 + 12 >> 2] | 0;
              k2 = +g[j2 + 48 >> 2];
              e2 = +g[j2 + 52 >> 2];
              f2 = +g[j2 + 56 >> 2];
              f2 = +G(+((k2 - k2) * (k2 - k2) + (e2 - e2) * (e2 - e2) + (f2 - f2) * (f2 - f2)));
              j2 = c[b2 + 192 >> 2] | 0;
              e2 = +Cb[c[(c[j2 >> 2] | 0) + 48 >> 2] & 15](j2);
              j2 = c[d2 + 4 >> 2] | 0;
              Yb[c[(c[j2 >> 2] | 0) + 8 >> 2] & 127](j2, c[d2 + 12 >> 2] | 0, a2 + 96 | 0, a2 + 64 | 0);
              c[a2 >> 2] = c[a2 + 96 >> 2];
              c[a2 + 4 >> 2] = c[a2 + 96 + 4 >> 2];
              c[a2 + 8 >> 2] = c[a2 + 96 + 8 >> 2];
              c[a2 + 12 >> 2] = c[a2 + 96 + 12 >> 2];
              c[a2 + 16 >> 2] = c[a2 + 64 >> 2];
              c[a2 + 16 + 4 >> 2] = c[a2 + 64 + 4 >> 2];
              c[a2 + 16 + 8 >> 2] = c[a2 + 64 + 8 >> 2];
              c[a2 + 16 + 12 >> 2] = c[a2 + 64 + 12 >> 2];
              c[a2 + 32 >> 2] = c[a2 >> 2];
              c[a2 + 32 + 4 >> 2] = c[a2 + 4 >> 2];
              c[a2 + 32 + 8 >> 2] = c[a2 + 8 >> 2];
              c[a2 + 32 + 12 >> 2] = c[a2 + 12 >> 2];
              c[a2 + 32 + 16 >> 2] = c[a2 + 16 >> 2];
              c[a2 + 32 + 20 >> 2] = c[a2 + 20 >> 2];
              c[a2 + 32 + 24 >> 2] = c[a2 + 24 >> 2];
              c[a2 + 32 + 28 >> 2] = c[a2 + 28 >> 2];
              g[a2 + 32 >> 2] = +g[a2 + 32 >> 2] - e2;
              g[a2 + 32 + 4 >> 2] = +g[a2 + 32 + 4 >> 2] - e2;
              g[a2 + 32 + 8 >> 2] = +g[a2 + 32 + 8 >> 2] - e2;
              g[a2 + 32 + 16 >> 2] = e2 + +g[a2 + 32 + 16 >> 2];
              g[a2 + 32 + 20 >> 2] = e2 + +g[a2 + 32 + 20 >> 2];
              g[a2 + 32 + 24 >> 2] = e2 + +g[a2 + 32 + 24 >> 2];
              c[a2 + 112 + 4 >> 2] = b2;
              c[a2 + 112 + 8 >> 2] = d2;
              c[a2 + 112 + 12 >> 2] = h2;
              g[a2 + 112 + 16 >> 2] = f2 + e2;
              g[a2 + 112 + 20 >> 2] = e2;
              Mf(c[b2 + 968 >> 2] | 0, a2 + 32 | 0, a2 + 112 | 0);
              i = a2;
              return;
            }
            case 2: {
              g[a2 + 4 >> 2] = 1;
              c[a2 + 8 + 4 >> 2] = 0;
              c[a2 + 8 + 4 + 4 >> 2] = 0;
              c[a2 + 8 + 4 + 8 >> 2] = 0;
              c[a2 >> 2] = 3216;
              c[a2 + 24 >> 2] = b2;
              c[a2 + 28 >> 2] = d2;
              c[a2 + 8 >> 2] = c[b2 + 496 >> 2];
              j2 = c[d2 + 4 >> 2] | 0;
              k2 = +Cb[c[(c[j2 >> 2] | 0) + 48 >> 2] & 15](j2);
              j2 = c[b2 + 192 >> 2] | 0;
              k2 = k2 + +Cb[c[(c[j2 >> 2] | 0) + 48 >> 2] & 15](j2);
              g[a2 + 12 >> 2] = k2;
              f2 = +g[(c[d2 + 8 >> 2] | 0) + 224 >> 2];
              g[a2 + 112 >> 2] = f2;
              c[a2 + 16 >> 2] = c[(+g[b2 + 356 >> 2] < f2 ? b2 + 356 | 0 : a2 + 112 | 0) >> 2];
              j2 = c[d2 + 4 >> 2] | 0;
              Yb[c[(c[j2 >> 2] | 0) + 8 >> 2] & 127](j2, c[d2 + 12 >> 2] | 0, a2 + 112 | 0, a2 + 96 | 0);
              c[a2 + 32 >> 2] = c[a2 + 112 >> 2];
              c[a2 + 32 + 4 >> 2] = c[a2 + 112 + 4 >> 2];
              c[a2 + 32 + 8 >> 2] = c[a2 + 112 + 8 >> 2];
              c[a2 + 32 + 12 >> 2] = c[a2 + 112 + 12 >> 2];
              c[a2 + 32 + 16 >> 2] = c[a2 + 96 >> 2];
              c[a2 + 32 + 16 + 4 >> 2] = c[a2 + 96 + 4 >> 2];
              c[a2 + 32 + 16 + 8 >> 2] = c[a2 + 96 + 8 >> 2];
              c[a2 + 32 + 16 + 12 >> 2] = c[a2 + 96 + 12 >> 2];
              c[a2 + 64 >> 2] = c[a2 + 32 >> 2];
              c[a2 + 64 + 4 >> 2] = c[a2 + 32 + 4 >> 2];
              c[a2 + 64 + 8 >> 2] = c[a2 + 32 + 8 >> 2];
              c[a2 + 64 + 12 >> 2] = c[a2 + 32 + 12 >> 2];
              c[a2 + 64 + 16 >> 2] = c[a2 + 32 + 16 >> 2];
              c[a2 + 64 + 20 >> 2] = c[a2 + 32 + 20 >> 2];
              c[a2 + 64 + 24 >> 2] = c[a2 + 32 + 24 >> 2];
              c[a2 + 64 + 28 >> 2] = c[a2 + 32 + 28 >> 2];
              g[a2 + 64 >> 2] = +g[a2 + 64 >> 2] - k2;
              g[a2 + 64 + 4 >> 2] = +g[a2 + 64 + 4 >> 2] - k2;
              g[a2 + 64 + 8 >> 2] = +g[a2 + 64 + 8 >> 2] - k2;
              g[a2 + 64 + 16 >> 2] = k2 + +g[a2 + 64 + 16 >> 2];
              g[a2 + 64 + 20 >> 2] = k2 + +g[a2 + 64 + 20 >> 2];
              g[a2 + 64 + 24 >> 2] = k2 + +g[a2 + 64 + 24 >> 2];
              Mf(c[b2 + 1088 >> 2] | 0, a2 + 64 | 0, a2);
              i = a2;
              return;
            }
            default: {
              i = a2;
              return;
            }
          }
        }
        function ue(b2, d2, e2, f2, h2, i2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          c[b2 + 4 >> 2] = 6;
          c[b2 + 8 >> 2] = -1;
          c[b2 + 12 >> 2] = -1;
          g[b2 + 16 >> 2] = 34028234663852886e22;
          a[b2 + 20 >> 0] = 1;
          a[b2 + 21 >> 0] = 0;
          c[b2 + 24 >> 2] = -1;
          c[b2 + 28 >> 2] = d2;
          c[b2 + 32 >> 2] = e2;
          g[b2 + 36 >> 2] = 0;
          g[b2 + 40 >> 2] = 0.30000001192092896;
          c[b2 + 44 >> 2] = 0;
          c[b2 >> 2] = 4328;
          c[b2 + 48 >> 2] = c[f2 >> 2];
          c[b2 + 48 + 4 >> 2] = c[f2 + 4 >> 2];
          c[b2 + 48 + 8 >> 2] = c[f2 + 8 >> 2];
          c[b2 + 48 + 12 >> 2] = c[f2 + 12 >> 2];
          c[b2 + 64 >> 2] = c[f2 + 16 >> 2];
          c[b2 + 64 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
          c[b2 + 64 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
          c[b2 + 64 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
          c[b2 + 80 >> 2] = c[f2 + 32 >> 2];
          c[b2 + 80 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
          c[b2 + 80 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
          c[b2 + 80 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
          c[b2 + 96 >> 2] = c[f2 + 48 >> 2];
          c[b2 + 96 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
          c[b2 + 96 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
          c[b2 + 96 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
          c[b2 + 112 >> 2] = c[h2 >> 2];
          c[b2 + 112 + 4 >> 2] = c[h2 + 4 >> 2];
          c[b2 + 112 + 8 >> 2] = c[h2 + 8 >> 2];
          c[b2 + 112 + 12 >> 2] = c[h2 + 12 >> 2];
          c[b2 + 128 >> 2] = c[h2 + 16 >> 2];
          c[b2 + 128 + 4 >> 2] = c[h2 + 16 + 4 >> 2];
          c[b2 + 128 + 8 >> 2] = c[h2 + 16 + 8 >> 2];
          c[b2 + 128 + 12 >> 2] = c[h2 + 16 + 12 >> 2];
          c[b2 + 144 >> 2] = c[h2 + 32 >> 2];
          c[b2 + 144 + 4 >> 2] = c[h2 + 32 + 4 >> 2];
          c[b2 + 144 + 8 >> 2] = c[h2 + 32 + 8 >> 2];
          c[b2 + 144 + 12 >> 2] = c[h2 + 32 + 12 >> 2];
          c[b2 + 160 >> 2] = c[h2 + 48 >> 2];
          c[b2 + 160 + 4 >> 2] = c[h2 + 48 + 4 >> 2];
          c[b2 + 160 + 8 >> 2] = c[h2 + 48 + 8 >> 2];
          c[b2 + 160 + 12 >> 2] = c[h2 + 48 + 12 >> 2];
          d2 = b2 + 680 | 0;
          e2 = d2 + 48 | 0;
          do {
            c[d2 >> 2] = 0;
            d2 = d2 + 4 | 0;
          } while ((d2 | 0) < (e2 | 0));
          c[b2 + 740 >> 2] = 0;
          c[b2 + 740 + 4 >> 2] = 0;
          c[b2 + 740 + 8 >> 2] = 0;
          c[b2 + 740 + 12 >> 2] = 0;
          c[b2 + 756 >> 2] = 1045220557;
          c[b2 + 760 >> 2] = 1045220557;
          c[b2 + 764 >> 2] = 1045220557;
          c[b2 + 768 >> 2] = 0;
          c[b2 + 768 + 4 >> 2] = 0;
          c[b2 + 768 + 8 >> 2] = 0;
          c[b2 + 768 + 12 >> 2] = 0;
          c[b2 + 768 + 16 >> 2] = 0;
          g[b2 + 728 >> 2] = 0.699999988079071;
          g[b2 + 732 >> 2] = 1;
          g[b2 + 736 >> 2] = 0.5;
          a[b2 + 788 >> 0] = 0;
          g[b2 + 792 >> 2] = 0;
          g[b2 + 808 >> 2] = 0;
          a[b2 + 789 >> 0] = 0;
          g[b2 + 796 >> 2] = 0;
          g[b2 + 812 >> 2] = 0;
          a[b2 + 790 >> 0] = 0;
          g[b2 + 800 >> 2] = 0;
          g[b2 + 816 >> 2] = 0;
          g[b2 + 928 >> 2] = 0;
          g[b2 + 876 >> 2] = 0;
          g[b2 + 880 >> 2] = 0.10000000149011612;
          g[b2 + 884 >> 2] = 300;
          g[b2 + 868 >> 2] = 1;
          g[b2 + 872 >> 2] = -1;
          g[b2 + 896 >> 2] = 0;
          g[b2 + 900 >> 2] = 0.20000000298023224;
          g[b2 + 904 >> 2] = 0;
          g[b2 + 908 >> 2] = 0;
          g[b2 + 888 >> 2] = 1;
          g[b2 + 892 >> 2] = 0.5;
          c[b2 + 924 >> 2] = 0;
          g[b2 + 916 >> 2] = 0;
          a[b2 + 912 >> 0] = 0;
          g[b2 + 992 >> 2] = 0;
          g[b2 + 940 >> 2] = 0;
          g[b2 + 944 >> 2] = 0.10000000149011612;
          g[b2 + 948 >> 2] = 300;
          g[b2 + 932 >> 2] = 1;
          g[b2 + 936 >> 2] = -1;
          g[b2 + 960 >> 2] = 0;
          g[b2 + 964 >> 2] = 0.20000000298023224;
          g[b2 + 968 >> 2] = 0;
          g[b2 + 972 >> 2] = 0;
          g[b2 + 952 >> 2] = 1;
          g[b2 + 956 >> 2] = 0.5;
          c[b2 + 988 >> 2] = 0;
          g[b2 + 980 >> 2] = 0;
          a[b2 + 976 >> 0] = 0;
          g[b2 + 1056 >> 2] = 0;
          g[b2 + 1004 >> 2] = 0;
          g[b2 + 1008 >> 2] = 0.10000000149011612;
          g[b2 + 1012 >> 2] = 300;
          g[b2 + 996 >> 2] = 1;
          g[b2 + 1e3 >> 2] = -1;
          g[b2 + 1024 >> 2] = 0;
          g[b2 + 1028 >> 2] = 0.20000000298023224;
          g[b2 + 1032 >> 2] = 0;
          g[b2 + 1036 >> 2] = 0;
          g[b2 + 1016 >> 2] = 1;
          g[b2 + 1020 >> 2] = 0.5;
          c[b2 + 1052 >> 2] = 0;
          g[b2 + 1044 >> 2] = 0;
          a[b2 + 1040 >> 0] = 0;
          a[b2 + 1300 >> 0] = i2 & 1;
          a[b2 + 1301 >> 0] = 1;
          c[b2 + 1304 >> 2] = 0;
          a[b2 + 1308 >> 0] = 0;
          ed(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
          return;
        }
        function ve(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          if (!b2)
            b2 = 0;
          else
            b2 = (c[b2 + 248 >> 2] & 2 | 0) == 0 ? 0 : b2;
          c[a2 + 64 >> 2] = 0;
          c[a2 + 64 + 4 >> 2] = 0;
          c[a2 + 64 + 8 >> 2] = 0;
          c[a2 + 64 + 12 >> 2] = 0;
          c[a2 + 64 + 16 >> 2] = 0;
          c[a2 + 64 + 20 >> 2] = 0;
          c[a2 + 64 + 24 >> 2] = 0;
          c[a2 + 64 + 28 >> 2] = 0;
          c[a2 + 144 >> 2] = 0;
          c[a2 + 144 + 4 >> 2] = 0;
          c[a2 + 144 + 8 >> 2] = 0;
          c[a2 + 144 + 12 >> 2] = 0;
          c[a2 + 144 + 16 >> 2] = 0;
          c[a2 + 144 + 20 >> 2] = 0;
          c[a2 + 144 + 24 >> 2] = 0;
          c[a2 + 144 + 28 >> 2] = 0;
          if (!b2) {
            c[a2 >> 2] = 1065353216;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 4 + 4 >> 2] = 0;
            c[a2 + 4 + 8 >> 2] = 0;
            c[a2 + 4 + 12 >> 2] = 0;
            c[a2 + 20 >> 2] = 1065353216;
            c[a2 + 24 >> 2] = 0;
            c[a2 + 24 + 4 >> 2] = 0;
            c[a2 + 24 + 8 >> 2] = 0;
            c[a2 + 24 + 12 >> 2] = 0;
            c[a2 + 40 >> 2] = 1065353216;
            c[a2 + 44 >> 2] = 0;
            c[a2 + 44 + 4 >> 2] = 0;
            c[a2 + 44 + 8 >> 2] = 0;
            c[a2 + 44 + 12 >> 2] = 0;
            c[a2 + 44 + 16 >> 2] = 0;
            c[a2 + 240 >> 2] = 0;
            c[a2 + 128 >> 2] = 0;
            c[a2 + 128 + 4 >> 2] = 0;
            c[a2 + 128 + 8 >> 2] = 0;
            c[a2 + 128 + 12 >> 2] = 0;
            c[a2 + 96 >> 2] = 1065353216;
            c[a2 + 100 >> 2] = 1065353216;
            c[a2 + 104 >> 2] = 1065353216;
            g[a2 + 108 >> 2] = 0;
            c[a2 + 112 >> 2] = 1065353216;
            c[a2 + 116 >> 2] = 1065353216;
            c[a2 + 120 >> 2] = 1065353216;
            g[a2 + 124 >> 2] = 0;
            b2 = a2 + 176 | 0;
            e2 = b2 + 60 | 0;
            do {
              c[b2 >> 2] = 0;
              b2 = b2 + 4 | 0;
            } while ((b2 | 0) < (e2 | 0));
            a2 = a2 + 236 | 0;
            g[a2 >> 2] = 0;
            return;
          } else {
            e2 = b2 + 4 | 0;
            c[a2 >> 2] = c[e2 >> 2];
            c[a2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[e2 + 12 >> 2];
            e2 = b2 + 20 | 0;
            c[a2 + 16 >> 2] = c[e2 >> 2];
            c[a2 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
            c[a2 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
            c[a2 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
            e2 = b2 + 36 | 0;
            c[a2 + 32 >> 2] = c[e2 >> 2];
            c[a2 + 32 + 4 >> 2] = c[e2 + 4 >> 2];
            c[a2 + 32 + 8 >> 2] = c[e2 + 8 >> 2];
            c[a2 + 32 + 12 >> 2] = c[e2 + 12 >> 2];
            e2 = b2 + 52 | 0;
            c[a2 + 48 >> 2] = c[e2 >> 2];
            c[a2 + 48 + 4 >> 2] = c[e2 + 4 >> 2];
            c[a2 + 48 + 8 >> 2] = c[e2 + 8 >> 2];
            c[a2 + 48 + 12 >> 2] = c[e2 + 12 >> 2];
            e2 = b2 + 384 | 0;
            k2 = +g[e2 >> 2];
            l2 = b2 + 388 | 0;
            j2 = k2 * +g[b2 + 392 >> 2];
            i2 = k2 * +g[b2 + 396 >> 2];
            g[a2 + 128 >> 2] = k2 * +g[l2 >> 2];
            g[a2 + 132 >> 2] = j2;
            g[a2 + 136 >> 2] = i2;
            g[a2 + 140 >> 2] = 0;
            c[a2 + 240 >> 2] = b2;
            m2 = b2 + 584 | 0;
            c[a2 + 96 >> 2] = c[m2 >> 2];
            c[a2 + 96 + 4 >> 2] = c[m2 + 4 >> 2];
            c[a2 + 96 + 8 >> 2] = c[m2 + 8 >> 2];
            c[a2 + 96 + 12 >> 2] = c[m2 + 12 >> 2];
            c[a2 + 112 >> 2] = c[l2 >> 2];
            c[a2 + 112 + 4 >> 2] = c[l2 + 4 >> 2];
            c[a2 + 112 + 8 >> 2] = c[l2 + 8 >> 2];
            c[a2 + 112 + 12 >> 2] = c[l2 + 12 >> 2];
            l2 = b2 + 352 | 0;
            c[a2 + 176 >> 2] = c[l2 >> 2];
            c[a2 + 176 + 4 >> 2] = c[l2 + 4 >> 2];
            c[a2 + 176 + 8 >> 2] = c[l2 + 8 >> 2];
            c[a2 + 176 + 12 >> 2] = c[l2 + 12 >> 2];
            l2 = b2 + 368 | 0;
            c[a2 + 192 >> 2] = c[l2 >> 2];
            c[a2 + 192 + 4 >> 2] = c[l2 + 4 >> 2];
            c[a2 + 192 + 8 >> 2] = c[l2 + 8 >> 2];
            c[a2 + 192 + 12 >> 2] = c[l2 + 12 >> 2];
            i2 = +g[e2 >> 2];
            j2 = i2 * +g[b2 + 456 >> 2] * d2;
            k2 = i2 * +g[b2 + 460 >> 2] * d2;
            g[a2 + 208 >> 2] = i2 * +g[b2 + 452 >> 2] * d2;
            g[a2 + 212 >> 2] = j2;
            g[a2 + 216 >> 2] = k2;
            g[a2 + 220 >> 2] = 0;
            k2 = +g[b2 + 468 >> 2];
            j2 = +g[b2 + 472 >> 2];
            i2 = +g[b2 + 476 >> 2];
            h2 = (k2 * +g[b2 + 308 >> 2] + j2 * +g[b2 + 324 >> 2] + i2 * +g[b2 + 340 >> 2]) * d2;
            f2 = (k2 * +g[b2 + 312 >> 2] + j2 * +g[b2 + 328 >> 2] + i2 * +g[b2 + 344 >> 2]) * d2;
            g[a2 + 224 >> 2] = (+g[b2 + 304 >> 2] * k2 + +g[b2 + 320 >> 2] * j2 + +g[b2 + 336 >> 2] * i2) * d2;
            g[a2 + 228 >> 2] = h2;
            g[a2 + 232 >> 2] = f2;
            a2 = a2 + 236 | 0;
            g[a2 >> 2] = 0;
            return;
          }
        }
        function we(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0;
          M2 = i;
          i = i + 64 | 0;
          c[M2 + 48 >> 2] = a2;
          c[M2 + 48 + 4 >> 2] = b2;
          c[M2 + 48 + 8 >> 2] = d2;
          L2 = +g[a2 >> 2];
          z2 = +g[b2 >> 2];
          A2 = +g[a2 + 4 >> 2];
          B2 = +g[b2 + 4 >> 2];
          C2 = +g[a2 + 8 >> 2];
          D2 = +g[b2 + 8 >> 2];
          g[M2 >> 2] = L2 - z2;
          g[M2 + 4 >> 2] = A2 - B2;
          g[M2 + 8 >> 2] = C2 - D2;
          g[M2 + 12 >> 2] = 0;
          E2 = +g[d2 >> 2];
          F2 = +g[d2 + 4 >> 2];
          H2 = +g[d2 + 8 >> 2];
          g[M2 + 16 >> 2] = z2 - E2;
          g[M2 + 20 >> 2] = B2 - F2;
          g[M2 + 24 >> 2] = D2 - H2;
          g[M2 + 28 >> 2] = 0;
          g[M2 + 32 >> 2] = E2 - L2;
          g[M2 + 36 >> 2] = F2 - A2;
          g[M2 + 40 >> 2] = H2 - C2;
          g[M2 + 44 >> 2] = 0;
          I2 = (A2 - B2) * (D2 - H2) - (C2 - D2) * (B2 - F2);
          J2 = (C2 - D2) * (z2 - E2) - (D2 - H2) * (L2 - z2);
          K2 = (B2 - F2) * (L2 - z2) - (A2 - B2) * (z2 - E2);
          if (K2 * K2 + (I2 * I2 + J2 * J2) > 0) {
            k2 = 0;
            x2 = -1;
            y2 = 0;
            m2 = 0;
            h2 = 0;
            o2 = A2 - B2;
            p2 = C2 - D2;
            j2 = L2 - z2;
            u2 = L2;
            v2 = A2;
            w2 = C2;
          } else {
            L2 = -1;
            i = M2;
            return +L2;
          }
          while (1) {
            if (u2 * (K2 * o2 - J2 * p2) + v2 * (I2 * p2 - K2 * j2) + (J2 * j2 - I2 * o2) * w2 > 0) {
              n2 = c[8796 + (y2 << 2) >> 2] | 0;
              N2 = c[M2 + 48 + (n2 << 2) >> 2] | 0;
              r2 = +g[N2 >> 2];
              j2 = r2 - u2;
              s2 = +g[N2 + 4 >> 2];
              p2 = s2 - v2;
              t2 = +g[N2 + 8 >> 2];
              q2 = t2 - w2;
              do
                if (j2 * j2 + p2 * p2 + q2 * q2 > 0) {
                  o2 = -(u2 * j2 + v2 * p2 + w2 * q2) / (j2 * j2 + p2 * p2 + q2 * q2);
                  if (o2 >= 1) {
                    k2 = 2;
                    j2 = r2 * r2 + s2 * s2 + t2 * t2;
                    m2 = 0;
                    h2 = 1065353216;
                    break;
                  }
                  if (!(o2 <= 0)) {
                    h2 = (g[l >> 2] = o2, c[l >> 2] | 0);
                    u2 = u2 + j2 * o2;
                    j2 = v2 + p2 * o2;
                    w2 = w2 + q2 * o2;
                    k2 = 3;
                    j2 = w2 * w2 + (u2 * u2 + j2 * j2);
                    m2 = (g[l >> 2] = 1 - o2, c[l >> 2] | 0);
                    break;
                  } else {
                    k2 = 1;
                    j2 = u2 * u2 + v2 * v2 + w2 * w2;
                    m2 = 1065353216;
                    h2 = 0;
                    break;
                  }
                } else
                  j2 = -1;
              while (0);
              if (x2 < 0 | j2 < x2) {
                c[f2 >> 2] = (k2 & 1 | 0 ? 1 << y2 : 0) + (k2 & 2 | 0 ? 1 << n2 : 0);
                c[e2 + (y2 << 2) >> 2] = m2;
                c[e2 + (n2 << 2) >> 2] = h2;
                g[e2 + (c[8796 + (n2 << 2) >> 2] << 2) >> 2] = 0;
              } else
                j2 = x2;
            } else
              j2 = x2;
            n2 = y2 + 1 | 0;
            if ((n2 | 0) == 3)
              break;
            N2 = c[M2 + 48 + (n2 << 2) >> 2] | 0;
            x2 = j2;
            y2 = n2;
            o2 = +g[M2 + (n2 << 4) + 4 >> 2];
            p2 = +g[M2 + (n2 << 4) + 8 >> 2];
            j2 = +g[M2 + (n2 << 4) >> 2];
            u2 = +g[N2 >> 2];
            v2 = +g[N2 + 4 >> 2];
            w2 = +g[N2 + 8 >> 2];
          }
          if (!(j2 < 0)) {
            L2 = j2;
            i = M2;
            return +L2;
          }
          w2 = +G(+(K2 * K2 + (I2 * I2 + J2 * J2)));
          x2 = (I2 * +g[a2 >> 2] + J2 * +g[a2 + 4 >> 2] + K2 * +g[a2 + 8 >> 2]) / (K2 * K2 + (I2 * I2 + J2 * J2));
          c[f2 >> 2] = 7;
          u2 = +g[b2 >> 2] - I2 * x2;
          t2 = +g[b2 + 4 >> 2] - J2 * x2;
          v2 = +g[b2 + 8 >> 2] - K2 * x2;
          D2 = +G(+((t2 * (z2 - E2) - u2 * (B2 - F2)) * (t2 * (z2 - E2) - u2 * (B2 - F2)) + (((B2 - F2) * v2 - t2 * (D2 - H2)) * ((B2 - F2) * v2 - t2 * (D2 - H2)) + (u2 * (D2 - H2) - v2 * (z2 - E2)) * (u2 * (D2 - H2) - v2 * (z2 - E2))))) / w2;
          g[e2 >> 2] = D2;
          z2 = +g[d2 >> 2] - I2 * x2;
          v2 = +g[d2 + 4 >> 2] - J2 * x2;
          B2 = +g[d2 + 8 >> 2] - K2 * x2;
          L2 = +G(+((v2 * (E2 - L2) - z2 * (F2 - A2)) * (v2 * (E2 - L2) - z2 * (F2 - A2)) + (((F2 - A2) * B2 - v2 * (H2 - C2)) * ((F2 - A2) * B2 - v2 * (H2 - C2)) + (z2 * (H2 - C2) - B2 * (E2 - L2)) * (z2 * (H2 - C2) - B2 * (E2 - L2))))) / w2;
          g[e2 + 4 >> 2] = L2;
          g[e2 + 8 >> 2] = 1 - (L2 + D2);
          L2 = K2 * x2 * K2 * x2 + (I2 * x2 * I2 * x2 + J2 * x2 * J2 * x2);
          i = M2;
          return +L2;
        }
        function xe(a2, e2, f2) {
          a2 = a2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          c[e2 + 16 >> 2] = c[a2 + 20 >> 2];
          c[e2 + 20 >> 2] = c[a2 + 24 >> 2];
          c[e2 + 24 >> 2] = c[a2 + 28 >> 2];
          c[e2 + 28 >> 2] = c[a2 + 32 >> 2];
          c[e2 >> 2] = c[a2 + 4 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 8 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 12 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 16 >> 2];
          c[e2 + 32 >> 2] = c[a2 + 36 >> 2];
          c[e2 + 36 >> 2] = c[a2 + 40 >> 2];
          c[e2 + 40 >> 2] = c[a2 + 44 >> 2];
          c[e2 + 44 >> 2] = c[a2 + 48 >> 2];
          c[e2 + 48 >> 2] = c[a2 + 56 >> 2];
          c[e2 + 52 >> 2] = d[a2 + 60 >> 0];
          k2 = c[a2 + 88 >> 2] | 0;
          c[e2 + 56 >> 2] = k2;
          if (k2) {
            k2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[a2 + 96 >> 2] | 0) | 0;
            c[e2 + 64 >> 2] = k2;
            if (k2 | 0) {
              j2 = c[a2 + 88 >> 2] | 0;
              k2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 48, j2) | 0;
              if ((j2 | 0) > 0) {
                g2 = c[a2 + 96 >> 2] | 0;
                h2 = c[k2 + 8 >> 2] | 0;
                i2 = 0;
                while (1) {
                  c[h2 + 16 >> 2] = c[g2 + (i2 << 6) + 16 >> 2];
                  c[h2 + 20 >> 2] = c[g2 + (i2 << 6) + 20 >> 2];
                  c[h2 + 24 >> 2] = c[g2 + (i2 << 6) + 24 >> 2];
                  c[h2 + 28 >> 2] = c[g2 + (i2 << 6) + 28 >> 2];
                  c[h2 >> 2] = c[g2 + (i2 << 6) >> 2];
                  c[h2 + 4 >> 2] = c[g2 + (i2 << 6) + 4 >> 2];
                  c[h2 + 8 >> 2] = c[g2 + (i2 << 6) + 8 >> 2];
                  c[h2 + 12 >> 2] = c[g2 + (i2 << 6) + 12 >> 2];
                  c[h2 + 32 >> 2] = c[g2 + (i2 << 6) + 32 >> 2];
                  c[h2 + 36 >> 2] = c[g2 + (i2 << 6) + 36 >> 2];
                  c[h2 + 40 >> 2] = c[g2 + (i2 << 6) + 40 >> 2];
                  i2 = i2 + 1 | 0;
                  if ((i2 | 0) == (j2 | 0))
                    break;
                  else
                    h2 = h2 + 48 | 0;
                }
              } else
                g2 = c[a2 + 96 >> 2] | 0;
              ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 17765, 1497453121, g2);
            }
          } else
            c[e2 + 64 >> 2] = 0;
          k2 = c[a2 + 128 >> 2] | 0;
          c[e2 + 60 >> 2] = k2;
          if (k2) {
            k2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[a2 + 136 >> 2] | 0) | 0;
            c[e2 + 68 >> 2] = k2;
            if (k2 | 0) {
              j2 = c[a2 + 128 >> 2] | 0;
              k2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 16, j2) | 0;
              if ((j2 | 0) > 0) {
                g2 = c[a2 + 136 >> 2] | 0;
                h2 = c[k2 + 8 >> 2] | 0;
                i2 = 0;
                while (1) {
                  c[h2 + 12 >> 2] = c[g2 + (i2 << 4) + 12 >> 2];
                  b[h2 + 6 >> 1] = b[g2 + (i2 << 4) + 6 >> 1] | 0;
                  b[h2 + 8 >> 1] = b[g2 + (i2 << 4) + 8 >> 1] | 0;
                  b[h2 + 10 >> 1] = b[g2 + (i2 << 4) + 10 >> 1] | 0;
                  b[h2 >> 1] = b[g2 + (i2 << 4) >> 1] | 0;
                  b[h2 + 2 >> 1] = b[g2 + (i2 << 4) + 2 >> 1] | 0;
                  b[h2 + 4 >> 1] = b[g2 + (i2 << 4) + 4 >> 1] | 0;
                  i2 = i2 + 1 | 0;
                  if ((i2 | 0) == (j2 | 0))
                    break;
                  else
                    h2 = h2 + 16 | 0;
                }
              } else
                g2 = c[a2 + 136 >> 2] | 0;
              ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 17788, 1497453121, g2);
            }
          } else
            c[e2 + 68 >> 2] = 0;
          c[e2 + 76 >> 2] = c[a2 + 144 >> 2];
          k2 = c[a2 + 152 >> 2] | 0;
          c[e2 + 80 >> 2] = k2;
          if (!k2) {
            c[e2 + 72 >> 2] = 0;
            return 17832;
          }
          k2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[a2 + 160 >> 2] | 0) | 0;
          c[e2 + 72 >> 2] = k2;
          if (!k2)
            return 17832;
          j2 = c[a2 + 152 >> 2] | 0;
          k2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 20, j2) | 0;
          if ((j2 | 0) > 0) {
            g2 = c[a2 + 160 >> 2] | 0;
            h2 = c[k2 + 8 >> 2] | 0;
            i2 = 0;
            while (1) {
              b[h2 + 14 >> 1] = b[g2 + (i2 << 5) + 6 >> 1] | 0;
              b[h2 + 16 >> 1] = b[g2 + (i2 << 5) + 8 >> 1] | 0;
              b[h2 + 18 >> 1] = b[g2 + (i2 << 5) + 10 >> 1] | 0;
              b[h2 + 8 >> 1] = b[g2 + (i2 << 5) >> 1] | 0;
              b[h2 + 10 >> 1] = b[g2 + (i2 << 5) + 2 >> 1] | 0;
              b[h2 + 12 >> 1] = b[g2 + (i2 << 5) + 4 >> 1] | 0;
              c[h2 >> 2] = c[g2 + (i2 << 5) + 12 >> 2];
              c[h2 + 4 >> 2] = c[g2 + (i2 << 5) + 16 >> 2];
              i2 = i2 + 1 | 0;
              if ((i2 | 0) == (j2 | 0))
                break;
              else
                h2 = h2 + 20 | 0;
            }
          } else
            g2 = c[a2 + 160 >> 2] | 0;
          ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, k2, 17811, 1497453121, g2);
          return 17832;
        }
        function ye(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0;
          d2 = i;
          i = i + 144 | 0;
          g[a2 + 36 >> 2] = 0;
          c[d2 + 128 >> 2] = 0;
          c[d2 + 128 + 4 >> 2] = 0;
          c[d2 + 128 + 8 >> 2] = 0;
          c[d2 + 128 + 12 >> 2] = 0;
          b2 = 0;
          do {
            e2 = d2 + 128 + (b2 << 2) | 0;
            g[e2 >> 2] = 1;
            A2 = c[a2 + 28 >> 2] | 0;
            I2 = c[A2 + 4 >> 2] | 0;
            c[d2 + 80 >> 2] = I2;
            F2 = c[A2 + 20 >> 2] | 0;
            c[d2 + 80 + 4 >> 2] = F2;
            C2 = c[A2 + 36 >> 2] | 0;
            c[d2 + 80 + 8 >> 2] = C2;
            g[d2 + 80 + 12 >> 2] = 0;
            H2 = c[A2 + 8 >> 2] | 0;
            c[d2 + 80 + 16 >> 2] = H2;
            E2 = c[A2 + 24 >> 2] | 0;
            c[d2 + 80 + 20 >> 2] = E2;
            B2 = c[A2 + 40 >> 2] | 0;
            c[d2 + 80 + 24 >> 2] = B2;
            g[d2 + 80 + 28 >> 2] = 0;
            G2 = c[A2 + 12 >> 2] | 0;
            c[d2 + 80 + 32 >> 2] = G2;
            D2 = c[A2 + 28 >> 2] | 0;
            c[d2 + 80 + 36 >> 2] = D2;
            z2 = c[A2 + 44 >> 2] | 0;
            c[d2 + 80 + 40 >> 2] = z2;
            g[d2 + 80 + 44 >> 2] = 0;
            f2 = c[a2 + 32 >> 2] | 0;
            y2 = c[f2 + 4 >> 2] | 0;
            c[d2 + 32 >> 2] = y2;
            v2 = c[f2 + 20 >> 2] | 0;
            c[d2 + 32 + 4 >> 2] = v2;
            s2 = c[f2 + 36 >> 2] | 0;
            c[d2 + 32 + 8 >> 2] = s2;
            g[d2 + 32 + 12 >> 2] = 0;
            x2 = c[f2 + 8 >> 2] | 0;
            c[d2 + 32 + 16 >> 2] = x2;
            u2 = c[f2 + 24 >> 2] | 0;
            c[d2 + 32 + 20 >> 2] = u2;
            r2 = c[f2 + 40 >> 2] | 0;
            c[d2 + 32 + 24 >> 2] = r2;
            g[d2 + 32 + 28 >> 2] = 0;
            w2 = c[f2 + 12 >> 2] | 0;
            c[d2 + 32 + 32 >> 2] = w2;
            t2 = c[f2 + 28 >> 2] | 0;
            c[d2 + 32 + 36 >> 2] = t2;
            h2 = c[f2 + 44 >> 2] | 0;
            c[d2 + 32 + 40 >> 2] = h2;
            g[d2 + 32 + 44 >> 2] = 0;
            p2 = +g[a2 + 300 >> 2];
            m2 = p2 * (c[l >> 2] = I2, +g[l >> 2]);
            j2 = +g[a2 + 304 >> 2];
            m2 = m2 + j2 * (c[l >> 2] = H2, +g[l >> 2]);
            k2 = +g[a2 + 308 >> 2];
            m2 = m2 + k2 * (c[l >> 2] = G2, +g[l >> 2]);
            q2 = p2 * (c[l >> 2] = F2, +g[l >> 2]);
            q2 = q2 + j2 * (c[l >> 2] = E2, +g[l >> 2]);
            q2 = q2 + k2 * (c[l >> 2] = D2, +g[l >> 2]);
            p2 = p2 * (c[l >> 2] = C2, +g[l >> 2]);
            j2 = p2 + j2 * (c[l >> 2] = B2, +g[l >> 2]);
            p2 = +g[A2 + 52 >> 2];
            o2 = +g[A2 + 56 >> 2];
            n2 = +g[A2 + 60 >> 2];
            n2 = j2 + k2 * (c[l >> 2] = z2, +g[l >> 2]) + n2 - n2;
            g[d2 + 16 >> 2] = m2 + p2 - p2;
            g[d2 + 16 + 4 >> 2] = q2 + o2 - o2;
            g[d2 + 16 + 8 >> 2] = n2;
            g[d2 + 16 + 12 >> 2] = 0;
            n2 = +g[a2 + 316 >> 2];
            o2 = n2 * (c[l >> 2] = y2, +g[l >> 2]);
            q2 = +g[a2 + 320 >> 2];
            o2 = o2 + q2 * (c[l >> 2] = x2, +g[l >> 2]);
            p2 = +g[a2 + 324 >> 2];
            o2 = o2 + p2 * (c[l >> 2] = w2, +g[l >> 2]);
            m2 = n2 * (c[l >> 2] = v2, +g[l >> 2]);
            m2 = m2 + q2 * (c[l >> 2] = u2, +g[l >> 2]);
            m2 = m2 + p2 * (c[l >> 2] = t2, +g[l >> 2]);
            n2 = n2 * (c[l >> 2] = s2, +g[l >> 2]);
            q2 = n2 + q2 * (c[l >> 2] = r2, +g[l >> 2]);
            n2 = +g[f2 + 52 >> 2];
            k2 = +g[f2 + 56 >> 2];
            j2 = +g[f2 + 60 >> 2];
            j2 = q2 + p2 * (c[l >> 2] = h2, +g[l >> 2]) + j2 - j2;
            g[d2 >> 2] = o2 + n2 - n2;
            g[d2 + 4 >> 2] = m2 + k2 - k2;
            g[d2 + 8 >> 2] = j2;
            g[d2 + 12 >> 2] = 0;
            h2 = c[a2 + 28 >> 2] | 0;
            f2 = c[a2 + 32 >> 2] | 0;
            Eg(a2 + 48 + (b2 * 84 | 0) | 0, d2 + 80 | 0, d2 + 32 | 0, d2 + 16 | 0, d2, d2 + 128 | 0, h2 + 436 | 0, +g[h2 + 384 >> 2], f2 + 436 | 0, +g[f2 + 384 >> 2]);
            g[e2 >> 2] = 0;
            b2 = b2 + 1 | 0;
          } while ((b2 | 0) != 3);
          i = d2;
          return;
        }
        function ze(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          if (a[b2 + 1308 >> 0] | 0) {
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            return;
          }
          ed(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 6;
          if ((c[b2 + 856 >> 2] | 0) == 0 ? (a[b2 + 788 >> 0] | 0) == 0 : 0) {
            e2 = 0;
            f2 = 6;
          } else {
            c[d2 >> 2] = 1;
            c[d2 + 4 >> 2] = 5;
            e2 = 1;
            f2 = 5;
          }
          if (!((c[b2 + 860 >> 2] | 0) == 0 ? (a[b2 + 789 >> 0] | 0) == 0 : 0)) {
            e2 = e2 + 1 | 0;
            c[d2 >> 2] = e2;
            f2 = f2 + -1 | 0;
            c[d2 + 4 >> 2] = f2;
          }
          if (!((c[b2 + 864 >> 2] | 0) == 0 ? (a[b2 + 790 >> 0] | 0) == 0 : 0)) {
            e2 = e2 + 1 | 0;
            c[d2 >> 2] = e2;
            f2 = f2 + -1 | 0;
            c[d2 + 4 >> 2] = f2;
          }
          h2 = +g[b2 + 868 >> 2];
          i2 = +g[b2 + 872 >> 2];
          j2 = +Tj(+g[b2 + 1192 >> 2], h2, i2);
          g[b2 + 920 >> 2] = j2;
          do
            if (!(h2 > i2)) {
              if (h2 > j2) {
                c[b2 + 924 >> 2] = 1;
                g[b2 + 916 >> 2] = j2 - h2;
                if (j2 - h2 > 3.1415927410125732) {
                  g[b2 + 916 >> 2] = j2 - h2 + -6.2831854820251465;
                  k2 = 7;
                  break;
                }
                if (!(j2 - h2 < -3.1415927410125732)) {
                  k2 = 7;
                  break;
                }
                g[b2 + 916 >> 2] = j2 - h2 + 6.2831854820251465;
                k2 = 7;
                break;
              }
              if (!(i2 < j2)) {
                c[b2 + 924 >> 2] = 0;
                k2 = 57;
                break;
              }
              c[b2 + 924 >> 2] = 2;
              g[b2 + 916 >> 2] = j2 - i2;
              if (j2 - i2 > 3.1415927410125732) {
                g[b2 + 916 >> 2] = j2 - i2 + -6.2831854820251465;
                k2 = 7;
                break;
              }
              if (j2 - i2 < -3.1415927410125732) {
                g[b2 + 916 >> 2] = j2 - i2 + 6.2831854820251465;
                k2 = 7;
              } else
                k2 = 7;
            } else {
              c[b2 + 924 >> 2] = 0;
              k2 = 57;
            }
          while (0);
          if ((k2 | 0) == 57) {
            if (a[b2 + 912 >> 0] | 0)
              k2 = 7;
          }
          if ((k2 | 0) == 7) {
            e2 = e2 + 1 | 0;
            c[d2 >> 2] = e2;
            f2 = f2 + -1 | 0;
            c[d2 + 4 >> 2] = f2;
          }
          h2 = +g[b2 + 932 >> 2];
          i2 = +g[b2 + 936 >> 2];
          j2 = +Tj(+g[b2 + 1196 >> 2], h2, i2);
          g[b2 + 984 >> 2] = j2;
          do
            if (!(h2 > i2)) {
              if (h2 > j2) {
                c[b2 + 988 >> 2] = 1;
                g[b2 + 980 >> 2] = j2 - h2;
                if (j2 - h2 > 3.1415927410125732) {
                  g[b2 + 980 >> 2] = j2 - h2 + -6.2831854820251465;
                  k2 = 23;
                  break;
                }
                if (!(j2 - h2 < -3.1415927410125732)) {
                  k2 = 23;
                  break;
                }
                g[b2 + 980 >> 2] = j2 - h2 + 6.2831854820251465;
                k2 = 23;
                break;
              }
              if (!(i2 < j2)) {
                c[b2 + 988 >> 2] = 0;
                k2 = 21;
                break;
              }
              c[b2 + 988 >> 2] = 2;
              g[b2 + 980 >> 2] = j2 - i2;
              if (j2 - i2 > 3.1415927410125732) {
                g[b2 + 980 >> 2] = j2 - i2 + -6.2831854820251465;
                k2 = 23;
                break;
              }
              if (j2 - i2 < -3.1415927410125732) {
                g[b2 + 980 >> 2] = j2 - i2 + 6.2831854820251465;
                k2 = 23;
              } else
                k2 = 23;
            } else {
              c[b2 + 988 >> 2] = 0;
              k2 = 21;
            }
          while (0);
          if ((k2 | 0) == 21) {
            if (a[b2 + 976 >> 0] | 0)
              k2 = 23;
          }
          if ((k2 | 0) == 23) {
            e2 = e2 + 1 | 0;
            c[d2 >> 2] = e2;
            f2 = f2 + -1 | 0;
            c[d2 + 4 >> 2] = f2;
          }
          h2 = +g[b2 + 996 >> 2];
          i2 = +g[b2 + 1e3 >> 2];
          j2 = +Tj(+g[b2 + 1200 >> 2], h2, i2);
          g[b2 + 1048 >> 2] = j2;
          do
            if (!(h2 > i2)) {
              if (h2 > j2) {
                c[b2 + 1052 >> 2] = 1;
                g[b2 + 1044 >> 2] = j2 - h2;
                if (j2 - h2 > 3.1415927410125732) {
                  g[b2 + 1044 >> 2] = j2 - h2 + -6.2831854820251465;
                  break;
                }
                if (!(j2 - h2 < -3.1415927410125732))
                  break;
                g[b2 + 1044 >> 2] = j2 - h2 + 6.2831854820251465;
                break;
              }
              if (!(i2 < j2)) {
                c[b2 + 1052 >> 2] = 0;
                k2 = 37;
                break;
              }
              c[b2 + 1052 >> 2] = 2;
              g[b2 + 1044 >> 2] = j2 - i2;
              if (j2 - i2 > 3.1415927410125732) {
                g[b2 + 1044 >> 2] = j2 - i2 + -6.2831854820251465;
                break;
              }
              if (j2 - i2 < -3.1415927410125732)
                g[b2 + 1044 >> 2] = j2 - i2 + 6.2831854820251465;
            } else {
              c[b2 + 1052 >> 2] = 0;
              k2 = 37;
            }
          while (0);
          if ((k2 | 0) == 37 ? (a[b2 + 1040 >> 0] | 0) == 0 : 0)
            return;
          c[d2 >> 2] = e2 + 1;
          c[d2 + 4 >> 2] = f2 + -1;
          return;
        }
        function Ae(a2, b2, d2, e2, f2, h2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          f2 = +f2;
          h2 = +h2;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0;
          V2 = i;
          i = i + 32 | 0;
          A2 = +g[d2 >> 2];
          C2 = +g[d2 + 4 >> 2];
          B2 = +g[d2 + 8 >> 2];
          w2 = +g[j2 >> 2];
          t2 = +g[j2 + 4 >> 2];
          r2 = +g[j2 + 8 >> 2];
          q2 = +g[k2 >> 2];
          s2 = +g[k2 + 4 >> 2];
          v2 = +g[k2 + 8 >> 2];
          L2 = 1 / +G(+((e2 - A2) * (e2 - A2) + (f2 - C2) * (f2 - C2) + (h2 - B2) * (h2 - B2)));
          M2 = (e2 - A2) * L2 == 0 ? 999999984306749400 : 1 / ((e2 - A2) * L2);
          N2 = (f2 - C2) * L2 == 0 ? 999999984306749400 : 1 / ((f2 - C2) * L2);
          O2 = (h2 - B2) * L2 == 0 ? 999999984306749400 : 1 / ((h2 - B2) * L2);
          P2 = (A2 > e2 ? e2 : A2) + w2;
          Q2 = (C2 > f2 ? f2 : C2) + t2;
          R2 = (B2 > h2 ? h2 : B2) + r2;
          S2 = (A2 < e2 ? e2 : A2) + q2;
          T2 = (C2 < f2 ? f2 : C2) + s2;
          U2 = (B2 < h2 ? h2 : B2) + v2;
          m2 = c[a2 + 56 >> 2] | 0;
          a:
            do
              if ((m2 | 0) > 0) {
                o2 = c[a2 + 96 >> 2] | 0;
                l2 = 0;
                y2 = 0;
                x2 = m2;
                while (1) {
                  l2 = l2 + 1 | 0;
                  c[V2 >> 2] = c[o2 >> 2];
                  c[V2 + 4 >> 2] = c[o2 + 4 >> 2];
                  c[V2 + 8 >> 2] = c[o2 + 8 >> 2];
                  c[V2 + 12 >> 2] = c[o2 + 12 >> 2];
                  u2 = o2 + 16 | 0;
                  c[V2 + 16 >> 2] = c[u2 >> 2];
                  c[V2 + 16 + 4 >> 2] = c[u2 + 4 >> 2];
                  c[V2 + 16 + 8 >> 2] = c[u2 + 8 >> 2];
                  c[V2 + 16 + 12 >> 2] = c[u2 + 12 >> 2];
                  g[V2 >> 2] = +g[V2 >> 2] - q2;
                  g[V2 + 4 >> 2] = +g[V2 + 4 >> 2] - s2;
                  g[V2 + 8 >> 2] = +g[V2 + 8 >> 2] - v2;
                  g[V2 + 16 >> 2] = +g[V2 + 16 >> 2] - w2;
                  g[V2 + 20 >> 2] = +g[V2 + 20 >> 2] - t2;
                  g[V2 + 24 >> 2] = +g[V2 + 24 >> 2] - r2;
                  if (!(P2 > +g[u2 >> 2]) ? !(S2 < +g[o2 >> 2]) : 0)
                    m2 = 1;
                  else
                    m2 = 0;
                  if (!(!(R2 > +g[o2 + 24 >> 2]) ? !(U2 < +g[o2 + 8 >> 2]) : 0))
                    m2 = 0;
                  if (((!(Q2 > +g[o2 + 20 >> 2]) ? !(T2 < +g[o2 + 4 >> 2] | m2 ^ 1) : 0) ? (E2 = +g[d2 >> 2], D2 = M2 * (+g[V2 + ((M2 < 0 & 1) << 4) >> 2] - E2), E2 = M2 * (+g[V2 + ((M2 < 0 ^ 1) << 4) >> 2] - E2), H2 = +g[d2 + 4 >> 2], F2 = N2 * (+g[V2 + ((N2 < 0 & 1) << 4) + 4 >> 2] - H2), H2 = N2 * (+g[V2 + ((N2 < 0 ^ 1) << 4) + 4 >> 2] - H2), !(F2 > E2 | D2 > H2)) : 0) ? (I2 = F2 > D2 ? F2 : D2, z2 = H2 < E2 ? H2 : E2, K2 = +g[d2 + 8 >> 2], J2 = O2 * (+g[V2 + ((O2 < 0 & 1) << 4) + 8 >> 2] - K2), K2 = O2 * (+g[V2 + ((O2 < 0 ^ 1) << 4) + 8 >> 2] - K2), !(J2 > z2 | I2 > K2)) : 0) {
                    m2 = (K2 < z2 ? K2 : z2) > 0 ? (J2 > I2 ? J2 : I2) < (h2 - B2) * (h2 - B2) * L2 + ((e2 - A2) * (e2 - A2) * L2 + (f2 - C2) * (f2 - C2) * L2) : 0;
                    n2 = c[o2 + 32 >> 2] | 0;
                    if (m2 & (n2 | 0) == -1) {
                      Ub[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, c[o2 + 36 >> 2] | 0, c[o2 + 40 >> 2] | 0);
                      m2 = c[a2 + 56 >> 2] | 0;
                      u2 = 17;
                    } else {
                      p2 = (n2 | 0) == -1;
                      u2 = 16;
                    }
                  } else {
                    n2 = c[o2 + 32 >> 2] | 0;
                    p2 = (n2 | 0) == -1;
                    m2 = 0;
                    u2 = 16;
                  }
                  if ((u2 | 0) == 16) {
                    u2 = 0;
                    if (p2 | m2) {
                      m2 = x2;
                      u2 = 17;
                    } else {
                      o2 = o2 + (n2 << 6) | 0;
                      n2 = n2 + y2 | 0;
                      m2 = x2;
                    }
                  }
                  if ((u2 | 0) == 17) {
                    o2 = o2 + 64 | 0;
                    n2 = y2 + 1 | 0;
                  }
                  if ((n2 | 0) >= (m2 | 0))
                    break a;
                  y2 = n2;
                  x2 = m2;
                  q2 = +g[k2 >> 2];
                  s2 = +g[k2 + 4 >> 2];
                  v2 = +g[k2 + 8 >> 2];
                  w2 = +g[j2 >> 2];
                  t2 = +g[j2 + 4 >> 2];
                  r2 = +g[j2 + 8 >> 2];
                }
              } else
                l2 = 0;
            while (0);
          if ((c[6317] | 0) >= (l2 | 0)) {
            i = V2;
            return;
          }
          c[6317] = l2;
          i = V2;
          return;
        }
        function Be(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          if (!(c[a2 + 204 >> 2] & 2)) {
            c[a2 + 68 >> 2] = c[b2 >> 2];
            c[a2 + 68 + 4 >> 2] = c[b2 + 4 >> 2];
            c[a2 + 68 + 8 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 68 + 12 >> 2] = c[b2 + 12 >> 2];
            c[a2 + 84 >> 2] = c[b2 + 16 >> 2];
            c[a2 + 84 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
            c[a2 + 84 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
            c[a2 + 84 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
            c[a2 + 100 >> 2] = c[b2 + 32 >> 2];
            c[a2 + 100 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
            c[a2 + 100 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
            c[a2 + 100 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
            c[a2 + 116 >> 2] = c[b2 + 48 >> 2];
            c[a2 + 116 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
            c[a2 + 116 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
            c[a2 + 116 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
            d2 = a2 + 20 | 0;
            e2 = b2 + 16 | 0;
            f2 = a2 + 36 | 0;
            h2 = b2 + 32 | 0;
            i2 = a2 + 52 | 0;
            j2 = b2 + 48 | 0;
            k2 = a2 + 4 | 0;
          } else {
            c[a2 + 68 >> 2] = c[a2 + 4 >> 2];
            c[a2 + 68 + 4 >> 2] = c[a2 + 4 + 4 >> 2];
            c[a2 + 68 + 8 >> 2] = c[a2 + 4 + 8 >> 2];
            c[a2 + 68 + 12 >> 2] = c[a2 + 4 + 12 >> 2];
            c[a2 + 84 >> 2] = c[a2 + 20 >> 2];
            c[a2 + 84 + 4 >> 2] = c[a2 + 20 + 4 >> 2];
            c[a2 + 84 + 8 >> 2] = c[a2 + 20 + 8 >> 2];
            c[a2 + 84 + 12 >> 2] = c[a2 + 20 + 12 >> 2];
            c[a2 + 100 >> 2] = c[a2 + 36 >> 2];
            c[a2 + 100 + 4 >> 2] = c[a2 + 36 + 4 >> 2];
            c[a2 + 100 + 8 >> 2] = c[a2 + 36 + 8 >> 2];
            c[a2 + 100 + 12 >> 2] = c[a2 + 36 + 12 >> 2];
            c[a2 + 116 >> 2] = c[a2 + 52 >> 2];
            c[a2 + 116 + 4 >> 2] = c[a2 + 52 + 4 >> 2];
            c[a2 + 116 + 8 >> 2] = c[a2 + 52 + 8 >> 2];
            c[a2 + 116 + 12 >> 2] = c[a2 + 52 + 12 >> 2];
            d2 = a2 + 20 | 0;
            e2 = b2 + 16 | 0;
            f2 = a2 + 36 | 0;
            h2 = b2 + 32 | 0;
            i2 = a2 + 52 | 0;
            j2 = b2 + 48 | 0;
            k2 = a2 + 4 | 0;
          }
          c[a2 + 132 >> 2] = c[a2 + 352 >> 2];
          c[a2 + 132 + 4 >> 2] = c[a2 + 352 + 4 >> 2];
          c[a2 + 132 + 8 >> 2] = c[a2 + 352 + 8 >> 2];
          c[a2 + 132 + 12 >> 2] = c[a2 + 352 + 12 >> 2];
          c[a2 + 148 >> 2] = c[a2 + 368 >> 2];
          c[a2 + 148 + 4 >> 2] = c[a2 + 368 + 4 >> 2];
          c[a2 + 148 + 8 >> 2] = c[a2 + 368 + 8 >> 2];
          c[a2 + 148 + 12 >> 2] = c[a2 + 368 + 12 >> 2];
          c[k2 >> 2] = c[b2 >> 2];
          c[k2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[k2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[k2 + 12 >> 2] = c[b2 + 12 >> 2];
          c[d2 >> 2] = c[e2 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
          c[f2 >> 2] = c[h2 >> 2];
          c[f2 + 4 >> 2] = c[h2 + 4 >> 2];
          c[f2 + 8 >> 2] = c[h2 + 8 >> 2];
          c[f2 + 12 >> 2] = c[h2 + 12 >> 2];
          c[i2 >> 2] = c[j2 >> 2];
          c[i2 + 4 >> 2] = c[j2 + 4 >> 2];
          c[i2 + 8 >> 2] = c[j2 + 8 >> 2];
          c[i2 + 12 >> 2] = c[j2 + 12 >> 2];
          w2 = +g[a2 + 4 >> 2];
          q2 = +g[a2 + 436 >> 2];
          v2 = +g[a2 + 8 >> 2];
          o2 = +g[a2 + 440 >> 2];
          u2 = +g[a2 + 12 >> 2];
          m2 = +g[a2 + 444 >> 2];
          t2 = +g[a2 + 20 >> 2];
          s2 = +g[a2 + 24 >> 2];
          r2 = +g[a2 + 28 >> 2];
          p2 = +g[a2 + 36 >> 2];
          n2 = +g[a2 + 40 >> 2];
          l2 = +g[a2 + 44 >> 2];
          g[a2 + 304 >> 2] = w2 * w2 * q2 + v2 * v2 * o2 + u2 * u2 * m2;
          g[a2 + 308 >> 2] = w2 * q2 * t2 + v2 * o2 * s2 + u2 * m2 * r2;
          g[a2 + 312 >> 2] = w2 * q2 * p2 + v2 * o2 * n2 + u2 * m2 * l2;
          g[a2 + 316 >> 2] = 0;
          g[a2 + 320 >> 2] = w2 * q2 * t2 + v2 * o2 * s2 + u2 * m2 * r2;
          g[a2 + 324 >> 2] = t2 * q2 * t2 + s2 * o2 * s2 + r2 * m2 * r2;
          g[a2 + 328 >> 2] = q2 * t2 * p2 + o2 * s2 * n2 + m2 * r2 * l2;
          g[a2 + 332 >> 2] = 0;
          g[a2 + 336 >> 2] = w2 * q2 * p2 + v2 * o2 * n2 + u2 * m2 * l2;
          g[a2 + 340 >> 2] = t2 * q2 * p2 + s2 * o2 * n2 + r2 * m2 * l2;
          g[a2 + 344 >> 2] = p2 * q2 * p2 + n2 * o2 * n2 + l2 * m2 * l2;
          g[a2 + 348 >> 2] = 0;
          return;
        }
        function Ce(a2, b2, d2, e2, f2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          e2 = +e2;
          f2 = +f2;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
          a:
            while (1) {
              if ((b2 | 0) > 0) {
                i2 = -1;
                j2 = 0;
                do {
                  do
                    if (c[h2 + (j2 << 2) >> 2] | 0) {
                      if ((i2 | 0) != -1 ? !(+g[a2 + (j2 << 4) >> 2] * d2 + +g[a2 + (j2 << 4) + 4 >> 2] * e2 + +g[a2 + (j2 << 4) + 8 >> 2] * f2 > +g[a2 + (i2 << 4) >> 2] * d2 + +g[a2 + (i2 << 4) + 4 >> 2] * e2 + +g[a2 + (i2 << 4) + 8 >> 2] * f2) : 0)
                        break;
                      i2 = j2;
                    }
                  while (0);
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (b2 | 0));
              } else
                i2 = -1;
              A2 = h2 + (i2 << 2) | 0;
              if ((c[A2 >> 2] | 0) == 3) {
                j2 = 37;
                break;
              }
              k2 = +G(+((e2 - f2 * 0) * (e2 - f2 * 0) + (f2 * 0 - d2) * (f2 * 0 - d2) + (d2 * 0 - e2 * 0) * (d2 * 0 - e2 * 0)));
              l2 = +G(+((d2 - e2 * 0) * (d2 - e2 * 0) + ((e2 * 0 - f2) * (e2 * 0 - f2) + (f2 * 0 - d2 * 0) * (f2 * 0 - d2 * 0))));
              if (k2 > l2) {
                y2 = (e2 - f2 * 0) * (1 / k2);
                z2 = (d2 * 0 - e2 * 0) * (1 / k2);
                s2 = (f2 * 0 - d2) * (1 / k2);
              } else {
                y2 = (e2 * 0 - f2) * (1 / l2);
                z2 = (d2 - e2 * 0) * (1 / l2);
                s2 = (f2 * 0 - d2 * 0) * (1 / l2);
              }
              t2 = s2 * f2 - z2 * e2;
              u2 = z2 * d2 - y2 * f2;
              v2 = y2 * e2 - s2 * d2;
              w2 = (i2 | 0) == -1;
              r2 = 0;
              j2 = -1;
              while (1) {
                x2 = +(r2 | 0);
                q2 = +J(+(x2 * 0.01745329238474369));
                o2 = +I(+(x2 * 0.01745329238474369));
                k2 = (y2 * q2 + t2 * o2) * 0.02500000037252903 + d2;
                l2 = (s2 * q2 + u2 * o2) * 0.02500000037252903 + e2;
                o2 = (z2 * q2 + v2 * o2) * 0.02500000037252903 + f2;
                if ((b2 | 0) > 0) {
                  m2 = -1;
                  n2 = 0;
                  do {
                    do
                      if (c[h2 + (n2 << 2) >> 2] | 0) {
                        if ((m2 | 0) != -1 ? !(k2 * +g[a2 + (n2 << 4) >> 2] + l2 * +g[a2 + (n2 << 4) + 4 >> 2] + o2 * +g[a2 + (n2 << 4) + 8 >> 2] > k2 * +g[a2 + (m2 << 4) >> 2] + l2 * +g[a2 + (m2 << 4) + 4 >> 2] + o2 * +g[a2 + (m2 << 4) + 8 >> 2]) : 0)
                          break;
                        m2 = n2;
                      }
                    while (0);
                    n2 = n2 + 1 | 0;
                  } while ((n2 | 0) != (b2 | 0));
                } else
                  m2 = -1;
                if ((j2 | 0) == (i2 | 0) & (m2 | 0) == (i2 | 0)) {
                  j2 = 20;
                  break a;
                }
                b:
                  do
                    if (!((j2 | 0) == -1 | (j2 | 0) == (m2 | 0)) ? x2 + -40 <= x2 : 0) {
                      if ((b2 | 0) > 0)
                        q2 = x2 + -40;
                      else {
                        k2 = x2 + -40;
                        while (1) {
                          if ((j2 | 0) == (i2 | 0) & w2) {
                            i2 = -1;
                            j2 = 33;
                            break a;
                          }
                          k2 = k2 + 5;
                          if (!(k2 <= x2))
                            break b;
                          else
                            j2 = -1;
                        }
                      }
                      while (1) {
                        o2 = q2 * 0.01745329238474369;
                        B2 = +J(+o2);
                        o2 = +I(+o2);
                        k2 = (y2 * B2 + t2 * o2) * 0.02500000037252903 + d2;
                        l2 = (s2 * B2 + u2 * o2) * 0.02500000037252903 + e2;
                        o2 = (z2 * B2 + v2 * o2) * 0.02500000037252903 + f2;
                        n2 = -1;
                        p2 = 0;
                        do {
                          do
                            if (c[h2 + (p2 << 2) >> 2] | 0) {
                              if ((n2 | 0) != -1 ? !(k2 * +g[a2 + (p2 << 4) >> 2] + l2 * +g[a2 + (p2 << 4) + 4 >> 2] + o2 * +g[a2 + (p2 << 4) + 8 >> 2] > k2 * +g[a2 + (n2 << 4) >> 2] + l2 * +g[a2 + (n2 << 4) + 4 >> 2] + o2 * +g[a2 + (n2 << 4) + 8 >> 2]) : 0)
                                break;
                              n2 = p2;
                            }
                          while (0);
                          p2 = p2 + 1 | 0;
                        } while ((p2 | 0) != (b2 | 0));
                        if ((j2 | 0) == (i2 | 0) & (n2 | 0) == (i2 | 0)) {
                          j2 = 33;
                          break a;
                        }
                        q2 = q2 + 5;
                        if (!(q2 <= x2))
                          break;
                        else
                          j2 = n2;
                      }
                    }
                  while (0);
                r2 = r2 + 45 | 0;
                if ((r2 | 0) > 360)
                  break;
                else
                  j2 = m2;
              }
              c[A2 >> 2] = 0;
            }
          if ((j2 | 0) == 20) {
            c[A2 >> 2] = 3;
            h2 = i2;
            return h2 | 0;
          } else if ((j2 | 0) == 33) {
            c[h2 + (i2 << 2) >> 2] = 3;
            h2 = i2;
            return h2 | 0;
          } else if ((j2 | 0) == 37)
            return i2 | 0;
          return 0;
        }
        function De(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
          h2 = i;
          i = i + 160 | 0;
          e2 = c[a2 + 4 >> 2] | 0;
          f2 = c[e2 + 12 >> 2] | 0;
          D2 = +g[f2 >> 2];
          C2 = +g[f2 + 4 >> 2];
          B2 = +g[f2 + 8 >> 2];
          A2 = +g[f2 + 16 >> 2];
          z2 = +g[f2 + 20 >> 2];
          y2 = +g[f2 + 24 >> 2];
          r2 = +g[f2 + 32 >> 2];
          p2 = +g[f2 + 36 >> 2];
          n2 = +g[f2 + 40 >> 2];
          e2 = c[(c[e2 + 4 >> 2] | 0) + 28 >> 2] | 0;
          x2 = +g[e2 + (d2 * 80 | 0) >> 2];
          w2 = +g[e2 + (d2 * 80 | 0) + 16 >> 2];
          v2 = +g[e2 + (d2 * 80 | 0) + 32 >> 2];
          u2 = +g[e2 + (d2 * 80 | 0) + 4 >> 2];
          t2 = +g[e2 + (d2 * 80 | 0) + 20 >> 2];
          s2 = +g[e2 + (d2 * 80 | 0) + 36 >> 2];
          q2 = +g[e2 + (d2 * 80 | 0) + 8 >> 2];
          o2 = +g[e2 + (d2 * 80 | 0) + 24 >> 2];
          m2 = +g[e2 + (d2 * 80 | 0) + 40 >> 2];
          F2 = +g[e2 + (d2 * 80 | 0) + 48 >> 2];
          E2 = +g[e2 + (d2 * 80 | 0) + 52 >> 2];
          j2 = +g[e2 + (d2 * 80 | 0) + 56 >> 2];
          l2 = +g[f2 + 48 >> 2] + (D2 * F2 + C2 * E2 + B2 * j2);
          k2 = +g[f2 + 52 >> 2] + (A2 * F2 + z2 * E2 + y2 * j2);
          j2 = +g[f2 + 56 >> 2] + (r2 * F2 + p2 * E2 + n2 * j2);
          g[h2 + 88 >> 2] = D2 * x2 + C2 * w2 + B2 * v2;
          g[h2 + 88 + 4 >> 2] = D2 * u2 + C2 * t2 + B2 * s2;
          g[h2 + 88 + 8 >> 2] = D2 * q2 + C2 * o2 + B2 * m2;
          g[h2 + 88 + 12 >> 2] = 0;
          g[h2 + 88 + 16 >> 2] = A2 * x2 + z2 * w2 + y2 * v2;
          g[h2 + 88 + 20 >> 2] = A2 * u2 + z2 * t2 + y2 * s2;
          g[h2 + 88 + 24 >> 2] = A2 * q2 + z2 * o2 + y2 * m2;
          g[h2 + 88 + 28 >> 2] = 0;
          g[h2 + 88 + 32 >> 2] = r2 * x2 + p2 * w2 + n2 * v2;
          g[h2 + 88 + 36 >> 2] = r2 * u2 + p2 * t2 + n2 * s2;
          g[h2 + 88 + 40 >> 2] = r2 * q2 + p2 * o2 + n2 * m2;
          g[h2 + 88 + 44 >> 2] = 0;
          g[h2 + 88 + 48 >> 2] = l2;
          g[h2 + 88 + 52 >> 2] = k2;
          g[h2 + 88 + 56 >> 2] = j2;
          g[h2 + 88 + 60 >> 2] = 0;
          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, h2 + 88 | 0, h2 + 72 | 0, h2 + 56 | 0);
          f2 = c[a2 + 8 >> 2] | 0;
          e2 = c[f2 + 4 >> 2] | 0;
          Yb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, c[f2 + 12 >> 2] | 0, h2 + 40 | 0, h2 + 24 | 0);
          if (!(+g[h2 + 72 >> 2] > +g[h2 + 24 >> 2]) ? !(+g[h2 + 56 >> 2] < +g[h2 + 40 >> 2]) : 0)
            e2 = 1;
          else
            e2 = 0;
          if (!(!(+g[h2 + 72 + 8 >> 2] > +g[h2 + 24 + 8 >> 2]) ? !(+g[h2 + 56 + 8 >> 2] < +g[h2 + 40 + 8 >> 2]) : 0))
            e2 = 0;
          if (+g[h2 + 72 + 4 >> 2] > +g[h2 + 24 + 4 >> 2]) {
            i = h2;
            return;
          }
          if (+g[h2 + 56 + 4 >> 2] < +g[h2 + 40 + 4 >> 2] | e2 ^ 1) {
            i = h2;
            return;
          }
          e2 = c[a2 + 4 >> 2] | 0;
          f2 = c[e2 + 8 >> 2] | 0;
          c[h2 >> 2] = e2;
          c[h2 + 4 >> 2] = b2;
          c[h2 + 8 >> 2] = f2;
          c[h2 + 12 >> 2] = h2 + 88;
          c[h2 + 16 >> 2] = -1;
          c[h2 + 20 >> 2] = d2;
          if (!(c[(c[a2 + 24 >> 2] | 0) + (d2 << 2) >> 2] | 0)) {
            e2 = c[a2 + 12 >> 2] | 0;
            e2 = sb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 31](e2, h2, c[a2 + 8 >> 2] | 0, c[a2 + 28 >> 2] | 0) | 0;
            c[(c[a2 + 24 >> 2] | 0) + (d2 << 2) >> 2] = e2;
            e2 = c[a2 + 4 >> 2] | 0;
          }
          f2 = c[a2 + 20 >> 2] | 0;
          b2 = c[f2 + 8 >> 2] | 0;
          if ((c[b2 + 8 >> 2] | 0) == (c[e2 + 8 >> 2] | 0)) {
            c[f2 + 8 >> 2] = h2;
            Ub[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, -1, d2);
          } else {
            b2 = c[f2 + 12 >> 2] | 0;
            c[f2 + 12 >> 2] = h2;
            Ub[c[(c[f2 >> 2] | 0) + 12 >> 2] & 127](f2, -1, d2);
          }
          e2 = c[(c[a2 + 24 >> 2] | 0) + (d2 << 2) >> 2] | 0;
          ib[c[(c[e2 >> 2] | 0) + 8 >> 2] & 31](e2, h2, c[a2 + 8 >> 2] | 0, c[a2 + 16 >> 2] | 0, c[a2 + 20 >> 2] | 0);
          e2 = c[a2 + 20 >> 2] | 0;
          if ((c[(c[e2 + 8 >> 2] | 0) + 8 >> 2] | 0) == (c[(c[a2 + 4 >> 2] | 0) + 8 >> 2] | 0))
            c[e2 + 8 >> 2] = b2;
          else
            c[e2 + 12 >> 2] = b2;
          i = h2;
          return;
        }
        function Ee() {
          if (a[22112] | 0)
            return;
          a[22112] = 1;
          c[6069] = 0;
          c[6070] = -2147483648;
          c[6071] = -1082130432;
          g[6072] = 0;
          c[6073] = 1060716128;
          c[6074] = -1090087446;
          c[6075] = -1092290076;
          g[6076] = 0;
          c[6077] = -1098022214;
          c[6078] = -1084636126;
          c[6079] = -1092290076;
          g[6080] = 0;
          c[6081] = -1083901670;
          c[6082] = -2147483648;
          c[6083] = -1092290177;
          g[6084] = 0;
          c[6085] = -1098022214;
          c[6086] = 1062847522;
          c[6087] = -1092290043;
          g[6088] = 0;
          c[6089] = 1060716128;
          c[6090] = 1057396202;
          c[6091] = -1092290076;
          g[6092] = 0;
          c[6093] = 1049461434;
          c[6094] = -1084636126;
          c[6095] = 1055193605;
          g[6096] = 0;
          c[6097] = -1086767520;
          c[6098] = -1090087446;
          c[6099] = 1055193572;
          g[6100] = 0;
          c[6101] = -1086767520;
          c[6102] = 1057396202;
          c[6103] = 1055193572;
          g[6104] = 0;
          c[6105] = 1049461434;
          c[6106] = 1062847522;
          c[6107] = 1055193572;
          g[6108] = 0;
          c[6109] = 1063581978;
          c[6110] = 0;
          c[6111] = 1055193471;
          g[6112] = 0;
          c[6113] = -2147483648;
          c[6114] = 0;
          c[6115] = 1065353216;
          g[6116] = 0;
          c[6117] = 1054458864;
          c[6118] = -1096927567;
          c[6119] = -1084636042;
          g[6120] = 0;
          c[6121] = -1104782626;
          c[6122] = -1090519208;
          c[6123] = -1084636042;
          g[6124] = 0;
          c[6125] = 1049007812;
          c[6126] = -1085334679;
          c[6127] = -1090087228;
          g[6128] = 0;
          c[6129] = 1054458864;
          c[6130] = 1050556081;
          c[6131] = -1084636042;
          g[6132] = 0;
          c[6133] = 1062847505;
          c[6134] = -2147483648;
          c[6135] = -1090087262;
          g[6136] = 0;
          c[6137] = -1090087362;
          c[6138] = -2147483648;
          c[6139] = -1084636076;
          g[6140] = 0;
          c[6141] = -1087361736;
          c[6142] = -1090519141;
          c[6143] = -1090087262;
          g[6144] = 0;
          c[6145] = -1104782626;
          c[6146] = 1056964440;
          c[6147] = -1084636042;
          g[6148] = 0;
          c[6149] = -1087361736;
          c[6150] = 1056964507;
          c[6151] = -1090087262;
          g[6152] = 0;
          c[6153] = 1049007812;
          c[6154] = 1062148969;
          c[6155] = -1090087228;
          g[6156] = 0;
          c[6157] = 1064532105;
          c[6158] = 1050556148;
          c[6159] = 0;
          g[6160] = 0;
          c[6161] = 1064532105;
          c[6162] = -1096927500;
          c[6163] = 0;
          g[6164] = 0;
          c[6165] = 1058437413;
          c[6166] = -1085334595;
          c[6167] = 0;
          g[6168] = 0;
          c[6169] = 0;
          c[6170] = -1082130432;
          c[6171] = 0;
          g[6172] = 0;
          c[6173] = -1089046235;
          c[6174] = -1085334595;
          c[6175] = 0;
          g[6176] = 0;
          c[6177] = -1082951543;
          c[6178] = -1096927500;
          c[6179] = -2147483648;
          g[6180] = 0;
          c[6181] = -1082951543;
          c[6182] = 1050556148;
          c[6183] = -2147483648;
          g[6184] = 0;
          c[6185] = -1089046235;
          c[6186] = 1062149053;
          c[6187] = -2147483648;
          g[6188] = 0;
          c[6189] = -2147483648;
          c[6190] = 1065353216;
          c[6191] = -2147483648;
          g[6192] = 0;
          c[6193] = 1058437413;
          c[6194] = 1062149053;
          c[6195] = -2147483648;
          g[6196] = 0;
          c[6197] = 1060121912;
          c[6198] = -1090519141;
          c[6199] = 1057396386;
          g[6200] = 0;
          c[6201] = -1098475836;
          c[6202] = -1085334679;
          c[6203] = 1057396420;
          g[6204] = 0;
          c[6205] = -1084636143;
          c[6206] = 0;
          c[6207] = 1057396386;
          g[6208] = 0;
          c[6209] = -1098475836;
          c[6210] = 1062148969;
          c[6211] = 1057396420;
          g[6212] = 0;
          c[6213] = 1060121912;
          c[6214] = 1056964507;
          c[6215] = 1057396386;
          g[6216] = 0;
          c[6217] = 1057396286;
          c[6218] = 0;
          c[6219] = 1062847572;
          g[6220] = 0;
          c[6221] = 1042701022;
          c[6222] = -1090519208;
          c[6223] = 1062847606;
          g[6224] = 0;
          c[6225] = -1093024784;
          c[6226] = -1096927567;
          c[6227] = 1062847606;
          g[6228] = 0;
          c[6229] = -1093024784;
          c[6230] = 1050556081;
          c[6231] = 1062847606;
          g[6232] = 0;
          c[6233] = 1042701022;
          c[6234] = 1056964440;
          c[6235] = 1062847606;
          g[6236] = 0;
          return;
        }
        function Fe(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
          x2 = a[h2 + 16 >> 0] & -16;
          a[h2 + 16 >> 0] = x2;
          y2 = +g[e2 >> 2];
          z2 = +g[d2 >> 2];
          q2 = +g[e2 + 4 >> 2];
          r2 = +g[d2 + 4 >> 2];
          s2 = +g[e2 + 8 >> 2];
          t2 = +g[d2 + 8 >> 2];
          u2 = +g[f2 >> 2];
          v2 = +g[f2 + 4 >> 2];
          w2 = +g[f2 + 8 >> 2];
          m2 = +g[b2 >> 2];
          n2 = +g[b2 + 4 >> 2];
          i2 = +g[b2 + 8 >> 2];
          o2 = (y2 - z2) * (m2 - z2) + (q2 - r2) * (n2 - r2) + (s2 - t2) * (i2 - t2);
          p2 = (u2 - z2) * (m2 - z2) + (v2 - r2) * (n2 - r2) + (w2 - t2) * (i2 - t2);
          if (o2 <= 0 & p2 <= 0) {
            c[h2 >> 2] = c[d2 >> 2];
            c[h2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[h2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[h2 + 12 >> 2] = c[d2 + 12 >> 2];
            a[h2 + 16 >> 0] = x2 | 1;
            g[h2 + 20 >> 2] = 1;
            g[h2 + 24 >> 2] = 0;
            g[h2 + 28 >> 2] = 0;
            g[h2 + 32 >> 2] = 0;
            return;
          }
          k2 = (y2 - z2) * (m2 - y2) + (q2 - r2) * (n2 - q2) + (s2 - t2) * (i2 - s2);
          l2 = (u2 - z2) * (m2 - y2) + (v2 - r2) * (n2 - q2) + (w2 - t2) * (i2 - s2);
          if (!(!(k2 >= 0) | !(l2 <= k2))) {
            c[h2 >> 2] = c[e2 >> 2];
            c[h2 + 4 >> 2] = c[e2 + 4 >> 2];
            c[h2 + 8 >> 2] = c[e2 + 8 >> 2];
            c[h2 + 12 >> 2] = c[e2 + 12 >> 2];
            a[h2 + 16 >> 0] = x2 | 2;
            g[h2 + 20 >> 2] = 0;
            g[h2 + 24 >> 2] = 1;
            g[h2 + 28 >> 2] = 0;
            g[h2 + 32 >> 2] = 0;
            return;
          }
          if (k2 <= 0 & (o2 >= 0 ? o2 * l2 - k2 * p2 <= 0 : 0)) {
            g[h2 >> 2] = z2 + (y2 - z2) * (o2 / (o2 - k2));
            g[h2 + 4 >> 2] = r2 + (q2 - r2) * (o2 / (o2 - k2));
            g[h2 + 8 >> 2] = t2 + (s2 - t2) * (o2 / (o2 - k2));
            g[h2 + 12 >> 2] = 0;
            a[h2 + 16 >> 0] = x2 | 3;
            g[h2 + 20 >> 2] = 1 - o2 / (o2 - k2);
            g[h2 + 24 >> 2] = o2 / (o2 - k2);
            g[h2 + 28 >> 2] = 0;
            g[h2 + 32 >> 2] = 0;
            return;
          }
          j2 = (y2 - z2) * (m2 - u2) + (q2 - r2) * (n2 - v2) + (s2 - t2) * (i2 - w2);
          i2 = (u2 - z2) * (m2 - u2) + (v2 - r2) * (n2 - v2) + (w2 - t2) * (i2 - w2);
          if (!(!(i2 >= 0) | !(j2 <= i2))) {
            c[h2 >> 2] = c[f2 >> 2];
            c[h2 + 4 >> 2] = c[f2 + 4 >> 2];
            c[h2 + 8 >> 2] = c[f2 + 8 >> 2];
            c[h2 + 12 >> 2] = c[f2 + 12 >> 2];
            a[h2 + 16 >> 0] = x2 | 4;
            g[h2 + 20 >> 2] = 0;
            g[h2 + 24 >> 2] = 0;
            g[h2 + 28 >> 2] = 1;
            g[h2 + 32 >> 2] = 0;
            return;
          }
          if (i2 <= 0 & (p2 >= 0 ? j2 * p2 - o2 * i2 <= 0 : 0)) {
            g[h2 >> 2] = z2 + (u2 - z2) * (p2 / (p2 - i2));
            g[h2 + 4 >> 2] = r2 + (v2 - r2) * (p2 / (p2 - i2));
            g[h2 + 8 >> 2] = t2 + (w2 - t2) * (p2 / (p2 - i2));
            g[h2 + 12 >> 2] = 0;
            a[h2 + 16 >> 0] = x2 | 5;
            g[h2 + 20 >> 2] = 1 - p2 / (p2 - i2);
            g[h2 + 24 >> 2] = 0;
            g[h2 + 28 >> 2] = p2 / (p2 - i2);
            g[h2 + 32 >> 2] = 0;
            return;
          }
          if ((k2 * i2 - j2 * l2 <= 0 ? l2 - k2 >= 0 : 0) ? j2 - i2 >= 0 : 0) {
            z2 = (l2 - k2) / (l2 - k2 + (j2 - i2));
            g[h2 >> 2] = y2 + (u2 - y2) * z2;
            g[h2 + 4 >> 2] = q2 + (v2 - q2) * z2;
            g[h2 + 8 >> 2] = s2 + (w2 - s2) * z2;
            g[h2 + 12 >> 2] = 0;
            a[h2 + 16 >> 0] = x2 | 6;
            g[h2 + 20 >> 2] = 0;
            g[h2 + 24 >> 2] = 1 - z2;
            g[h2 + 28 >> 2] = z2;
            g[h2 + 32 >> 2] = 0;
            return;
          }
          m2 = 1 / (o2 * l2 - k2 * p2 + (k2 * i2 - j2 * l2 + (j2 * p2 - o2 * i2)));
          n2 = (j2 * p2 - o2 * i2) * m2;
          p2 = (o2 * l2 - k2 * p2) * m2;
          g[h2 >> 2] = (u2 - z2) * p2 + ((y2 - z2) * n2 + z2);
          g[h2 + 4 >> 2] = (v2 - r2) * p2 + ((q2 - r2) * n2 + r2);
          g[h2 + 8 >> 2] = (w2 - t2) * p2 + ((s2 - t2) * n2 + t2);
          g[h2 + 12 >> 2] = 0;
          a[h2 + 16 >> 0] = x2 | 7;
          g[h2 + 20 >> 2] = 1 - n2 - p2;
          g[h2 + 24 >> 2] = n2;
          g[h2 + 28 >> 2] = p2;
          g[h2 + 32 >> 2] = 0;
          return;
        }
        function Ge(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          if (!((a2 | 0) != 0 & (b2 | 0) != 0))
            return;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(1043) | 0;
          if (!e2)
            f2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            f2 = e2 + 4 + 15 & -16;
          }
          c[f2 >> 2] = a2;
          c[f2 + 4 >> 2] = b2;
          e2 = 1;
          a2 = 124;
          b2 = 128;
          h2 = 128;
          while (1) {
            n2 = e2 + -1 | 0;
            l2 = c[f2 + (n2 << 3) >> 2] | 0;
            m2 = c[f2 + (n2 << 3) + 4 >> 2] | 0;
            if ((n2 | 0) > (a2 | 0)) {
              j2 = h2 << 1;
              do
                if ((h2 | 0) < (j2 | 0) & (b2 | 0) < (j2 | 0)) {
                  if (h2) {
                    c[6324] = (c[6324] | 0) + 1;
                    a2 = ic((h2 << 4 | 3) + 16 | 0) | 0;
                    if (!a2)
                      a2 = 0;
                    else {
                      c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
                      a2 = a2 + 4 + 15 & -16;
                    }
                    if ((h2 | 0) > 0) {
                      b2 = 0;
                      do {
                        p2 = f2 + (b2 << 3) | 0;
                        i2 = c[p2 + 4 >> 2] | 0;
                        k2 = a2 + (b2 << 3) | 0;
                        c[k2 >> 2] = c[p2 >> 2];
                        c[k2 + 4 >> 2] = i2;
                        b2 = b2 + 1 | 0;
                      } while ((b2 | 0) != (h2 | 0));
                    } else
                      o2 = 12;
                  } else {
                    a2 = 0;
                    o2 = 12;
                  }
                  if ((o2 | 0) == 12) {
                    o2 = 0;
                    if (!f2) {
                      b2 = j2;
                      f2 = a2;
                      break;
                    }
                  }
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                  b2 = j2;
                  f2 = a2;
                }
              while (0);
              k2 = j2 + -4 | 0;
            } else {
              k2 = a2;
              j2 = h2;
            }
            do
              if ((l2 | 0) == (m2 | 0))
                if (!(c[l2 + 40 >> 2] | 0))
                  e2 = n2;
                else {
                  p2 = c[l2 + 36 >> 2] | 0;
                  c[f2 + (n2 << 3) >> 2] = p2;
                  c[f2 + (n2 << 3) + 4 >> 2] = p2;
                  p2 = e2 + 1 | 0;
                  n2 = c[l2 + 40 >> 2] | 0;
                  c[f2 + (e2 << 3) >> 2] = n2;
                  c[f2 + (e2 << 3) + 4 >> 2] = n2;
                  n2 = c[l2 + 40 >> 2] | 0;
                  c[f2 + (p2 << 3) >> 2] = c[l2 + 36 >> 2];
                  c[f2 + (p2 << 3) + 4 >> 2] = n2;
                  e2 = e2 + 2 | 0;
                }
              else if (((((+g[l2 >> 2] <= +g[m2 + 16 >> 2] ? +g[l2 + 16 >> 2] >= +g[m2 >> 2] : 0) ? +g[l2 + 4 >> 2] <= +g[m2 + 20 >> 2] : 0) ? +g[l2 + 20 >> 2] >= +g[m2 + 4 >> 2] : 0) ? +g[l2 + 8 >> 2] <= +g[m2 + 24 >> 2] : 0) ? +g[l2 + 24 >> 2] >= +g[m2 + 8 >> 2] : 0) {
                a2 = (c[m2 + 40 >> 2] | 0) != 0;
                if (!(c[l2 + 40 >> 2] | 0))
                  if (a2) {
                    p2 = c[m2 + 36 >> 2] | 0;
                    c[f2 + (n2 << 3) >> 2] = l2;
                    c[f2 + (n2 << 3) + 4 >> 2] = p2;
                    p2 = c[m2 + 40 >> 2] | 0;
                    c[f2 + (e2 << 3) >> 2] = l2;
                    c[f2 + (e2 << 3) + 4 >> 2] = p2;
                    e2 = e2 + 1 | 0;
                    break;
                  } else {
                    Ub[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, l2, m2);
                    e2 = n2;
                    break;
                  }
                else {
                  h2 = f2 + (n2 << 3) | 0;
                  i2 = c[l2 + 36 >> 2] | 0;
                  if (a2) {
                    p2 = c[m2 + 36 >> 2] | 0;
                    c[h2 >> 2] = i2;
                    c[f2 + (n2 << 3) + 4 >> 2] = p2;
                    n2 = e2 + 1 | 0;
                    p2 = c[m2 + 36 >> 2] | 0;
                    c[f2 + (e2 << 3) >> 2] = c[l2 + 40 >> 2];
                    c[f2 + (e2 << 3) + 4 >> 2] = p2;
                    p2 = e2 + 2 | 0;
                    i2 = c[m2 + 40 >> 2] | 0;
                    c[f2 + (n2 << 3) >> 2] = c[l2 + 36 >> 2];
                    c[f2 + (n2 << 3) + 4 >> 2] = i2;
                    n2 = c[m2 + 40 >> 2] | 0;
                    c[f2 + (p2 << 3) >> 2] = c[l2 + 40 >> 2];
                    c[f2 + (p2 << 3) + 4 >> 2] = n2;
                    e2 = e2 + 3 | 0;
                    break;
                  } else {
                    c[h2 >> 2] = i2;
                    c[f2 + (n2 << 3) + 4 >> 2] = m2;
                    c[f2 + (e2 << 3) >> 2] = c[l2 + 40 >> 2];
                    c[f2 + (e2 << 3) + 4 >> 2] = m2;
                    e2 = e2 + 1 | 0;
                    break;
                  }
                }
              } else
                e2 = n2;
            while (0);
            if (!e2)
              break;
            else {
              a2 = k2;
              h2 = j2;
            }
          }
          if (!f2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[f2 + -4 >> 2] | 0);
          return;
        }
        function He(b2, d2) {
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          n2 = c[b2 + 452 >> 2] | 0;
          Ub[c[(c[n2 >> 2] | 0) + 16 >> 2] & 127](n2, b2 + 324 | 0, 0);
          n2 = c[b2 + 452 >> 2] | 0;
          ob[c[(c[n2 >> 2] | 0) + 12 >> 2] & 127](n2) | 0;
          Wc(b2, d2);
          n2 = c[b2 + 328 >> 2] | 0;
          if ((n2 | 0) > 0) {
            f2 = c[b2 + 336 >> 2] | 0;
            e2 = 0;
            k2 = 0;
            do {
              m2 = c[(c[f2 + (e2 << 2) >> 2] | 0) + 424 >> 2] | 0;
              k2 = (k2 | 0) > (m2 | 0) ? k2 : m2;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (n2 | 0));
            e2 = 0;
            while (1) {
              h2 = c[f2 + (e2 << 2) >> 2] | 0;
              if ((c[h2 + 892 >> 2] | 0) > 0) {
                f2 = 0;
                do {
                  m2 = c[(c[h2 + 900 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                  tb[c[(c[m2 >> 2] | 0) + 8 >> 2] & 15](m2, +g[h2 + 492 >> 2], k2);
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) < (c[h2 + 892 >> 2] | 0));
              }
              e2 = e2 + 1 | 0;
              if ((e2 | 0) == (n2 | 0))
                break;
              f2 = c[b2 + 336 >> 2] | 0;
            }
            if ((k2 | 0) > 0) {
              h2 = 0;
              do {
                e2 = 0;
                do {
                  i2 = c[(c[b2 + 336 >> 2] | 0) + (e2 << 2) >> 2] | 0;
                  j2 = c[i2 + 892 >> 2] | 0;
                  if ((j2 | 0) > 0) {
                    f2 = 0;
                    do {
                      m2 = c[(c[i2 + 900 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                      xb[c[(c[m2 >> 2] | 0) + 12 >> 2] & 7](m2, +g[i2 + 492 >> 2], 1);
                      f2 = f2 + 1 | 0;
                    } while ((f2 | 0) != (j2 | 0));
                  }
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) != (n2 | 0));
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (k2 | 0));
              l2 = 0;
            } else
              l2 = 0;
            do {
              m2 = c[(c[b2 + 336 >> 2] | 0) + (l2 << 2) >> 2] | 0;
              if ((c[m2 + 892 >> 2] | 0) > 0) {
                e2 = 0;
                do {
                  f2 = c[(c[m2 + 900 >> 2] | 0) + (e2 << 2) >> 2] | 0;
                  jb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 31](f2, +g[m2 + 492 >> 2]);
                  f2 = c[m2 + 900 >> 2] | 0;
                  h2 = c[f2 + (e2 << 2) >> 2] | 0;
                  a:
                    do
                      if (a[h2 + 152 >> 0] | 0) {
                        if (!h2)
                          k2 = f2;
                        else {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[h2 + -4 >> 2] | 0);
                          k2 = c[m2 + 900 >> 2] | 0;
                        }
                        j2 = e2 + -1 | 0;
                        f2 = c[m2 + 892 >> 2] | 0;
                        if ((f2 | 0) > 0) {
                          i2 = c[k2 + (e2 << 2) >> 2] | 0;
                          e2 = 0;
                          while (1) {
                            h2 = k2 + (e2 << 2) | 0;
                            if ((c[h2 >> 2] | 0) == (i2 | 0))
                              break;
                            e2 = e2 + 1 | 0;
                            if ((e2 | 0) >= (f2 | 0)) {
                              e2 = j2;
                              break a;
                            }
                          }
                          if ((e2 | 0) < (f2 | 0)) {
                            c[h2 >> 2] = c[k2 + (f2 + -1 << 2) >> 2];
                            c[(c[m2 + 900 >> 2] | 0) + (f2 + -1 << 2) >> 2] = i2;
                            c[m2 + 892 >> 2] = f2 + -1;
                            e2 = j2;
                            f2 = f2 + -1 | 0;
                          } else
                            e2 = j2;
                        } else
                          e2 = j2;
                      } else
                        f2 = c[m2 + 892 >> 2] | 0;
                    while (0);
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) < (f2 | 0));
              }
              l2 = l2 + 1 | 0;
            } while ((l2 | 0) != (n2 | 0));
          }
          n2 = c[b2 + 452 >> 2] | 0;
          jb[c[(c[n2 >> 2] | 0) + 28 >> 2] & 31](n2, +g[n2 + 12 >> 2] * d2);
          if ((c[b2 + 328 >> 2] | 0) <= 0) {
            b2 = c[b2 + 452 >> 2] | 0;
            n2 = c[b2 >> 2] | 0;
            n2 = n2 + 32 | 0;
            n2 = c[n2 >> 2] | 0;
            kb[n2 & 255](b2);
            return;
          }
          e2 = 0;
          do {
            n2 = c[(c[b2 + 336 >> 2] | 0) + (e2 << 2) >> 2] | 0;
            Yh(n2, n2);
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) < (c[b2 + 328 >> 2] | 0));
          b2 = c[b2 + 452 >> 2] | 0;
          n2 = c[b2 >> 2] | 0;
          n2 = n2 + 32 | 0;
          n2 = c[n2 >> 2] | 0;
          kb[n2 & 255](b2);
          return;
        }
        function Ie(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          o2 = c[a2 + 192 >> 2] | 0;
          n2 = +Cb[c[(c[o2 >> 2] | 0) + 48 >> 2] & 15](o2);
          o2 = c[a2 + 752 >> 2] | 0;
          if ((o2 | 0) > 0) {
            i2 = 0;
            do {
              m2 = c[a2 + 760 >> 2] | 0;
              d2 = m2 + (i2 * 104 | 0) + 8 | 0;
              j2 = +g[b2 >> 2] * +g[d2 >> 2];
              g[d2 >> 2] = j2;
              d2 = m2 + (i2 * 104 | 0) + 12 | 0;
              k2 = +g[b2 + 4 >> 2] * +g[d2 >> 2];
              g[d2 >> 2] = k2;
              d2 = m2 + (i2 * 104 | 0) + 16 | 0;
              l2 = +g[b2 + 8 >> 2] * +g[d2 >> 2];
              g[d2 >> 2] = l2;
              d2 = m2 + (i2 * 104 | 0) + 24 | 0;
              g[d2 >> 2] = +g[b2 >> 2] * +g[d2 >> 2];
              d2 = m2 + (i2 * 104 | 0) + 28 | 0;
              g[d2 >> 2] = +g[b2 + 4 >> 2] * +g[d2 >> 2];
              d2 = m2 + (i2 * 104 | 0) + 32 | 0;
              g[d2 >> 2] = +g[b2 + 8 >> 2] * +g[d2 >> 2];
              m2 = c[m2 + (i2 * 104 | 0) + 96 >> 2] | 0;
              d2 = Wg(a2 + 968 | 0, m2) | 0;
              a:
                do
                  if (d2) {
                    h2 = c[a2 + 976 >> 2] | 0;
                    if ((h2 | 0) <= -1) {
                      d2 = c[a2 + 968 >> 2] | 0;
                      break;
                    }
                    if (h2) {
                      e2 = 0;
                      while (1) {
                        f2 = c[d2 + 32 >> 2] | 0;
                        e2 = e2 + 1 | 0;
                        if (!f2)
                          break a;
                        if ((e2 | 0) >= (h2 | 0)) {
                          d2 = f2;
                          break;
                        } else
                          d2 = f2;
                      }
                    }
                  } else
                    d2 = 0;
                while (0);
              g[m2 >> 2] = j2 - n2;
              g[m2 + 4 >> 2] = k2 - n2;
              g[m2 + 8 >> 2] = l2 - n2;
              g[m2 + 12 >> 2] = 0;
              g[m2 + 16 >> 2] = n2 + j2;
              g[m2 + 20 >> 2] = n2 + k2;
              g[m2 + 24 >> 2] = n2 + l2;
              g[m2 + 28 >> 2] = 0;
              Ze(a2 + 968 | 0, d2, m2);
              i2 = i2 + 1 | 0;
            } while ((i2 | 0) != (o2 | 0));
          }
          rg(a2);
          d2 = c[a2 + 968 >> 2] | 0;
          if (d2) {
            o2 = c[a2 + 192 >> 2] | 0;
            k2 = +Cb[c[(c[o2 >> 2] | 0) + 48 >> 2] & 15](o2);
            n2 = +g[d2 + 4 >> 2] - k2;
            l2 = +g[d2 + 8 >> 2] - k2;
            g[a2 + 932 >> 2] = +g[d2 >> 2] - k2;
            g[a2 + 936 >> 2] = n2;
            g[a2 + 940 >> 2] = l2;
            g[a2 + 944 >> 2] = 0;
            l2 = k2 + +g[d2 + 20 >> 2];
            n2 = k2 + +g[d2 + 24 >> 2];
            g[a2 + 948 >> 2] = k2 + +g[d2 + 16 >> 2];
            g[a2 + 952 >> 2] = l2;
            g[a2 + 956 >> 2] = n2;
            g[a2 + 960 >> 2] = 0;
            d2 = c[a2 + 188 >> 2] | 0;
            if (d2 | 0) {
              o2 = c[a2 + 724 >> 2] | 0;
              m2 = c[o2 + 32 >> 2] | 0;
              ib[c[(c[m2 >> 2] | 0) + 16 >> 2] & 31](m2, d2, a2 + 932 | 0, a2 + 948 | 0, c[o2 + 36 >> 2] | 0);
            }
          } else {
            c[a2 + 932 >> 2] = 0;
            c[a2 + 932 + 4 >> 2] = 0;
            c[a2 + 932 + 8 >> 2] = 0;
            c[a2 + 932 + 12 >> 2] = 0;
            c[a2 + 932 + 16 >> 2] = 0;
            c[a2 + 932 + 20 >> 2] = 0;
            c[a2 + 932 + 24 >> 2] = 0;
            c[a2 + 932 + 28 >> 2] = 0;
          }
          e2 = c[a2 + 772 >> 2] | 0;
          if ((e2 | 0) <= 0) {
            Vf(a2);
            return;
          }
          f2 = c[a2 + 780 >> 2] | 0;
          d2 = 0;
          do {
            m2 = c[f2 + (d2 * 52 | 0) + 8 >> 2] | 0;
            o2 = c[f2 + (d2 * 52 | 0) + 12 >> 2] | 0;
            k2 = +g[m2 + 8 >> 2] - +g[o2 + 8 >> 2];
            l2 = +g[m2 + 12 >> 2] - +g[o2 + 12 >> 2];
            n2 = +g[m2 + 16 >> 2] - +g[o2 + 16 >> 2];
            n2 = +G(+(k2 * k2 + l2 * l2 + n2 * n2));
            g[f2 + (d2 * 52 | 0) + 16 >> 2] = n2;
            g[f2 + (d2 * 52 | 0) + 28 >> 2] = n2 * n2;
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != (e2 | 0));
          d2 = 0;
          do {
            g[f2 + (d2 * 52 | 0) + 24 >> 2] = (+g[(c[f2 + (d2 * 52 | 0) + 8 >> 2] | 0) + 88 >> 2] + +g[(c[f2 + (d2 * 52 | 0) + 12 >> 2] | 0) + 88 >> 2]) / +g[(c[f2 + (d2 * 52 | 0) + 4 >> 2] | 0) + 4 >> 2];
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != (e2 | 0));
          Vf(a2);
          return;
        }
        function Je(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0;
          h2 = i;
          i = i + 48 | 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = -1;
          g[b2 + 16 >> 2] = 0;
          c[b2 >> 2] = 8612;
          c[b2 + 52 >> 2] = d2;
          c[b2 + 4 >> 2] = 21;
          if (ob[c[(c[d2 >> 2] | 0) + 40 >> 2] & 127](d2) | 0)
            Ub[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, b2 + 20 | 0, b2 + 36 | 0);
          else {
            d2 = h2 + 32 + 4 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            g[h2 + 32 >> 2] = 1;
            Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2 + 16 | 0, b2, h2 + 32 | 0);
            g[b2 + 36 >> 2] = +g[h2 + 16 >> 2] + +g[b2 + 16 >> 2];
            g[h2 + 32 >> 2] = -1;
            Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2, b2, h2 + 32 | 0);
            c[h2 + 16 >> 2] = c[h2 >> 2];
            c[h2 + 16 + 4 >> 2] = c[h2 + 4 >> 2];
            c[h2 + 16 + 8 >> 2] = c[h2 + 8 >> 2];
            c[h2 + 16 + 12 >> 2] = c[h2 + 12 >> 2];
            g[b2 + 20 >> 2] = +g[h2 + 16 >> 2] - +g[b2 + 16 >> 2];
            c[h2 + 32 >> 2] = 0;
            c[h2 + 32 + 4 >> 2] = 0;
            c[h2 + 32 + 8 >> 2] = 0;
            c[h2 + 32 + 12 >> 2] = 0;
            g[d2 >> 2] = 1;
            Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2 + 16 | 0, b2, h2 + 32 | 0);
            g[b2 + 40 >> 2] = +g[h2 + 16 + 4 >> 2] + +g[b2 + 16 >> 2];
            g[d2 >> 2] = -1;
            Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2, b2, h2 + 32 | 0);
            c[h2 + 16 >> 2] = c[h2 >> 2];
            c[h2 + 16 + 4 >> 2] = c[h2 + 4 >> 2];
            c[h2 + 16 + 8 >> 2] = c[h2 + 8 >> 2];
            c[h2 + 16 + 12 >> 2] = c[h2 + 12 >> 2];
            g[b2 + 24 >> 2] = +g[h2 + 16 + 4 >> 2] - +g[b2 + 16 >> 2];
            c[h2 + 32 >> 2] = 0;
            c[h2 + 32 + 4 >> 2] = 0;
            c[h2 + 32 + 8 >> 2] = 0;
            c[h2 + 32 + 12 >> 2] = 0;
            g[h2 + 32 + 8 >> 2] = 1;
            Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2 + 16 | 0, b2, h2 + 32 | 0);
            g[b2 + 44 >> 2] = +g[h2 + 16 + 8 >> 2] + +g[b2 + 16 >> 2];
            g[h2 + 32 + 8 >> 2] = -1;
            Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](h2, b2, h2 + 32 | 0);
            c[h2 + 16 >> 2] = c[h2 >> 2];
            c[h2 + 16 + 4 >> 2] = c[h2 + 4 >> 2];
            c[h2 + 16 + 8 >> 2] = c[h2 + 8 >> 2];
            c[h2 + 16 + 12 >> 2] = c[h2 + 12 >> 2];
            g[b2 + 28 >> 2] = +g[h2 + 16 + 8 >> 2] - +g[b2 + 16 >> 2];
          }
          c[b2 >> 2] = 6648;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 60 >> 2] = 0;
          a[b2 + 64 >> 0] = e2 & 1;
          a[b2 + 65 >> 0] = 0;
          c[b2 + 4 >> 2] = 21;
          if (!f2) {
            i = h2;
            return;
          }
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(191) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 52 >> 2] = 285;
          a[d2 + 60 >> 0] = 0;
          a[d2 + 80 >> 0] = 1;
          c[d2 + 76 >> 2] = 0;
          c[d2 + 68 >> 2] = 0;
          c[d2 + 72 >> 2] = 0;
          a[d2 + 100 >> 0] = 1;
          c[d2 + 96 >> 2] = 0;
          c[d2 + 88 >> 2] = 0;
          c[d2 + 92 >> 2] = 0;
          a[d2 + 120 >> 0] = 1;
          c[d2 + 116 >> 2] = 0;
          c[d2 + 108 >> 2] = 0;
          c[d2 + 112 >> 2] = 0;
          a[d2 + 140 >> 0] = 1;
          c[d2 + 136 >> 2] = 0;
          c[d2 + 128 >> 2] = 0;
          c[d2 + 132 >> 2] = 0;
          c[d2 + 144 >> 2] = 0;
          a[d2 + 164 >> 0] = 1;
          c[d2 + 160 >> 2] = 0;
          c[d2 + 152 >> 2] = 0;
          c[d2 + 156 >> 2] = 0;
          c[d2 + 168 >> 2] = 0;
          c[d2 + 4 >> 2] = -8388609;
          c[d2 + 8 >> 2] = -8388609;
          c[d2 + 12 >> 2] = -8388609;
          g[d2 + 16 >> 2] = 0;
          c[d2 + 20 >> 2] = 2139095039;
          c[d2 + 24 >> 2] = 2139095039;
          c[d2 + 28 >> 2] = 2139095039;
          g[d2 + 32 >> 2] = 0;
          c[d2 >> 2] = 8156;
          c[b2 + 56 >> 2] = d2;
          _c(d2, c[b2 + 52 >> 2] | 0, (a[b2 + 64 >> 0] | 0) != 0, b2 + 20 | 0, b2 + 36 | 0);
          a[b2 + 65 >> 0] = 1;
          i = h2;
          return;
        }
        function Ke(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          r2 = i;
          i = i + 64 | 0;
          d2 = c[b2 + 8 >> 2] | 0;
          if ((d2 | 0) <= 0) {
            i = r2;
            return;
          }
          o2 = 0;
          do {
            n2 = c[(c[b2 + 16 >> 2] | 0) + (o2 << 2) >> 2] | 0;
            if (!(a[b2 + 76 >> 0] | 0))
              switch (c[n2 + 216 >> 2] | 0) {
                case 2:
                case 5:
                  break;
                default:
                  q2 = 6;
              }
            else
              q2 = 6;
            if ((q2 | 0) == 6) {
              q2 = 0;
              d2 = c[n2 + 192 >> 2] | 0;
              Yb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, n2 + 4 | 0, r2 + 48 | 0, r2 + 32 | 0);
              e2 = +g[r2 + 48 >> 2] + -0.019999999552965164;
              g[r2 + 48 >> 2] = e2;
              j2 = +g[r2 + 48 + 4 >> 2] + -0.019999999552965164;
              g[r2 + 48 + 4 >> 2] = j2;
              k2 = +g[r2 + 48 + 8 >> 2] + -0.019999999552965164;
              g[r2 + 48 + 8 >> 2] = k2;
              h2 = +g[r2 + 32 >> 2] + 0.019999999552965164;
              g[r2 + 32 >> 2] = h2;
              l2 = +g[r2 + 32 + 4 >> 2] + 0.019999999552965164;
              g[r2 + 32 + 4 >> 2] = l2;
              f2 = +g[r2 + 32 + 8 >> 2] + 0.019999999552965164;
              g[r2 + 32 + 8 >> 2] = f2;
              if (((a[b2 + 44 >> 0] | 0) != 0 ? (c[n2 + 248 >> 2] | 0) == 2 : 0) ? (c[n2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                d2 = c[n2 + 192 >> 2] | 0;
                Yb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, n2 + 68 | 0, r2 + 16 | 0, r2);
                e2 = +g[r2 + 16 >> 2] + -0.019999999552965164;
                g[r2 + 16 >> 2] = e2;
                k2 = +g[r2 + 16 + 4 >> 2] + -0.019999999552965164;
                g[r2 + 16 + 4 >> 2] = k2;
                l2 = +g[r2 + 16 + 8 >> 2] + -0.019999999552965164;
                g[r2 + 16 + 8 >> 2] = l2;
                h2 = +g[r2 >> 2] + 0.019999999552965164;
                g[r2 >> 2] = h2;
                m2 = +g[r2 + 4 >> 2] + 0.019999999552965164;
                g[r2 + 4 >> 2] = m2;
                f2 = +g[r2 + 8 >> 2] + 0.019999999552965164;
                g[r2 + 8 >> 2] = f2;
                j2 = +g[r2 + 48 >> 2];
                if (e2 < j2)
                  g[r2 + 48 >> 2] = e2;
                else
                  e2 = j2;
                j2 = +g[r2 + 48 + 4 >> 2];
                if (k2 < j2) {
                  g[r2 + 48 + 4 >> 2] = k2;
                  j2 = k2;
                }
                k2 = +g[r2 + 48 + 8 >> 2];
                if (l2 < k2) {
                  g[r2 + 48 + 8 >> 2] = l2;
                  k2 = l2;
                }
                l2 = +g[r2 + 16 + 12 >> 2];
                if (l2 < +g[r2 + 48 + 12 >> 2])
                  g[r2 + 48 + 12 >> 2] = l2;
                l2 = +g[r2 + 32 >> 2];
                if (l2 < h2)
                  g[r2 + 32 >> 2] = h2;
                else
                  h2 = l2;
                l2 = +g[r2 + 32 + 4 >> 2];
                if (l2 < m2) {
                  g[r2 + 32 + 4 >> 2] = m2;
                  l2 = m2;
                }
                m2 = +g[r2 + 32 + 8 >> 2];
                if (m2 < f2)
                  g[r2 + 32 + 8 >> 2] = f2;
                else
                  f2 = m2;
                m2 = +g[r2 + 12 >> 2];
                if (+g[r2 + 32 + 12 >> 2] < m2)
                  g[r2 + 32 + 12 >> 2] = m2;
              }
              d2 = c[b2 + 68 >> 2] | 0;
              if ((c[n2 + 204 >> 2] & 1 | 0) == 0 ? (h2 = h2 - e2, l2 = l2 - j2, m2 = f2 - k2, !(h2 * h2 + l2 * l2 + m2 * m2 < 999999995904)) : 0) {
                if ((c[n2 + 216 >> 2] & -2 | 0) != 4)
                  c[n2 + 216 >> 2] = 5;
                if (a[13798] | 0 ? (p2 = c[b2 + 72 >> 2] | 0, p2 | 0) : 0) {
                  a[13798] = 0;
                  mb[c[(c[p2 >> 2] | 0) + 44 >> 2] & 127](p2, 13799);
                  n2 = c[b2 + 72 >> 2] | 0;
                  mb[c[(c[n2 >> 2] | 0) + 44 >> 2] & 127](n2, 13848);
                  n2 = c[b2 + 72 >> 2] | 0;
                  mb[c[(c[n2 >> 2] | 0) + 44 >> 2] & 127](n2, 13916);
                  n2 = c[b2 + 72 >> 2] | 0;
                  mb[c[(c[n2 >> 2] | 0) + 44 >> 2] & 127](n2, 13981);
                }
              } else
                ib[c[(c[d2 >> 2] | 0) + 16 >> 2] & 31](d2, c[n2 + 188 >> 2] | 0, r2 + 48 | 0, r2 + 32 | 0, c[b2 + 24 >> 2] | 0);
              d2 = c[b2 + 8 >> 2] | 0;
            }
            o2 = o2 + 1 | 0;
          } while ((o2 | 0) < (d2 | 0));
          i = r2;
          return;
        }
        function Le(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
          d2 = c[a2 + 780 >> 2] | 0;
          if ((d2 | 0) != 4) {
            c[a2 + 780 >> 2] = d2 + 1;
            x2 = d2;
            w2 = (x2 | 0) < 0;
            x2 = w2 ? 0 : x2;
            a2 = a2 + 4 + (x2 * 192 | 0) | 0;
            Lm(a2 | 0, b2 | 0, 192) | 0;
            return x2 | 0;
          }
          y2 = +g[b2 + 80 >> 2];
          v2 = +g[a2 + 84 >> 2];
          u2 = v2 < y2 ? v2 : y2;
          t2 = +g[a2 + 276 >> 2];
          s2 = t2 < u2 ? t2 : u2;
          r2 = +g[a2 + 468 >> 2];
          w2 = +g[a2 + 660 >> 2] < (r2 < s2 ? r2 : s2);
          f2 = w2 ? 3 : r2 < s2 ? 2 : t2 < u2 ? 1 : (v2 < y2 ^ 1) << 31 >> 31;
          y2 = +g[b2 >> 2];
          if (f2) {
            k2 = +g[a2 + 196 >> 2];
            n2 = +g[b2 + 4 >> 2];
            m2 = +g[a2 + 200 >> 2];
            o2 = +g[b2 + 8 >> 2];
            i2 = +g[a2 + 204 >> 2];
            s2 = +g[a2 + 580 >> 2];
            p2 = +g[a2 + 388 >> 2];
            u2 = +g[a2 + 584 >> 2];
            j2 = +g[a2 + 392 >> 2];
            r2 = +g[a2 + 588 >> 2];
            h2 = +g[a2 + 396 >> 2];
            d2 = (g[l >> 2] = ((y2 - k2) * (u2 - j2) - (n2 - m2) * (s2 - p2)) * ((y2 - k2) * (u2 - j2) - (n2 - m2) * (s2 - p2)) + (((n2 - m2) * (r2 - h2) - (o2 - i2) * (u2 - j2)) * ((n2 - m2) * (r2 - h2) - (o2 - i2) * (u2 - j2)) + ((o2 - i2) * (s2 - p2) - (y2 - k2) * (r2 - h2)) * ((o2 - i2) * (s2 - p2) - (y2 - k2) * (r2 - h2))), c[l >> 2] | 0);
            if ((f2 | 0) == 1) {
              e2 = 0;
              q2 = +g[a2 + 8 >> 2];
              t2 = +g[a2 + 12 >> 2];
              v2 = o2;
              o2 = +g[a2 + 4 >> 2];
              x2 = 7;
            } else {
              v2 = o2;
              x2 = 6;
            }
          } else {
            k2 = +g[a2 + 196 >> 2];
            m2 = +g[a2 + 200 >> 2];
            i2 = +g[a2 + 204 >> 2];
            d2 = 0;
            n2 = +g[b2 + 4 >> 2];
            v2 = +g[b2 + 8 >> 2];
            p2 = +g[a2 + 388 >> 2];
            s2 = +g[a2 + 580 >> 2];
            j2 = +g[a2 + 392 >> 2];
            u2 = +g[a2 + 584 >> 2];
            h2 = +g[a2 + 396 >> 2];
            r2 = +g[a2 + 588 >> 2];
            x2 = 6;
          }
          if ((x2 | 0) == 6) {
            o2 = +g[a2 + 4 >> 2];
            q2 = +g[a2 + 8 >> 2];
            D2 = n2 - q2;
            t2 = +g[a2 + 12 >> 2];
            B2 = v2 - t2;
            A2 = s2 - p2;
            C2 = u2 - j2;
            z2 = r2 - h2;
            e2 = (g[l >> 2] = ((y2 - o2) * C2 - D2 * A2) * ((y2 - o2) * C2 - D2 * A2) + ((D2 * z2 - B2 * C2) * (D2 * z2 - B2 * C2) + (B2 * A2 - (y2 - o2) * z2) * (B2 * A2 - (y2 - o2) * z2)), c[l >> 2] | 0);
            if ((f2 | 0) == 2) {
              f2 = 0;
              r2 = v2;
              x2 = 8;
            } else
              x2 = 7;
          }
          if ((x2 | 0) == 7) {
            C2 = y2 - o2;
            E2 = n2 - q2;
            A2 = v2 - t2;
            B2 = s2 - k2;
            z2 = u2 - m2;
            D2 = r2 - i2;
            f2 = (g[l >> 2] = (C2 * z2 - E2 * B2) * (C2 * z2 - E2 * B2) + ((E2 * D2 - A2 * z2) * (E2 * D2 - A2 * z2) + (A2 * B2 - C2 * D2) * (A2 * B2 - C2 * D2)), c[l >> 2] | 0);
            if (w2)
              h2 = 0;
            else {
              r2 = v2;
              x2 = 8;
            }
          }
          if ((x2 | 0) == 8) {
            E2 = y2 - o2;
            A2 = n2 - q2;
            C2 = r2 - t2;
            D2 = p2 - k2;
            B2 = j2 - m2;
            h2 = h2 - i2;
            h2 = (E2 * B2 - A2 * D2) * (E2 * B2 - A2 * D2) + ((A2 * h2 - C2 * B2) * (A2 * h2 - C2 * B2) + (C2 * D2 - E2 * h2) * (C2 * D2 - E2 * h2));
          }
          E2 = +F(+(c[l >> 2] = d2, +g[l >> 2]));
          C2 = +F(+(c[l >> 2] = e2, +g[l >> 2]));
          A2 = +F(+(c[l >> 2] = f2, +g[l >> 2]));
          z2 = +F(+h2);
          D2 = E2 > -999999984306749400 ? E2 : -999999984306749400;
          B2 = C2 > D2 ? C2 : D2;
          x2 = z2 > (A2 > B2 ? A2 : B2) ? 3 : A2 > B2 ? 2 : C2 > D2 ? 1 : (E2 > -999999984306749400 ^ 1) << 31 >> 31;
          w2 = (x2 | 0) < 0;
          x2 = w2 ? 0 : x2;
          a2 = a2 + 4 + (x2 * 192 | 0) | 0;
          Lm(a2 | 0, b2 | 0, 192) | 0;
          return x2 | 0;
        }
        function Me(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
          E2 = i;
          i = i + 32 | 0;
          if (!a2) {
            i = E2;
            return;
          }
          z2 = +g[d2 >> 2] - +g[b2 >> 2];
          y2 = +g[d2 + 4 >> 2] - +g[b2 + 4 >> 2];
          s2 = +g[d2 + 8 >> 2] - +g[b2 + 8 >> 2];
          t2 = 1 / +G(+(z2 * z2 + y2 * y2 + s2 * s2));
          u2 = z2 * t2 == 0 ? 999999984306749400 : 1 / (z2 * t2);
          v2 = y2 * t2 == 0 ? 999999984306749400 : 1 / (y2 * t2);
          w2 = s2 * t2 == 0 ? 999999984306749400 : 1 / (s2 * t2);
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(531) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          yn(d2 + 4 | 0, 0, 508) | 0;
          c[d2 >> 2] = a2;
          n2 = 1;
          m2 = 126;
          a2 = 128;
          r2 = 128;
          while (1) {
            p2 = n2 + -1 | 0;
            q2 = c[d2 + (p2 << 2) >> 2] | 0;
            c[E2 >> 2] = c[q2 >> 2];
            c[E2 + 4 >> 2] = c[q2 + 4 >> 2];
            c[E2 + 8 >> 2] = c[q2 + 8 >> 2];
            c[E2 + 12 >> 2] = c[q2 + 12 >> 2];
            c[E2 + 16 >> 2] = c[q2 + 16 >> 2];
            c[E2 + 16 + 4 >> 2] = c[q2 + 16 + 4 >> 2];
            c[E2 + 16 + 8 >> 2] = c[q2 + 16 + 8 >> 2];
            c[E2 + 16 + 12 >> 2] = c[q2 + 16 + 12 >> 2];
            j2 = +g[b2 >> 2];
            h2 = u2 * (+g[E2 + ((u2 < 0 & 1) << 4) >> 2] - j2);
            j2 = u2 * (+g[E2 + ((u2 < 0 ^ 1) << 4) >> 2] - j2);
            l2 = +g[b2 + 4 >> 2];
            k2 = v2 * (+g[E2 + ((v2 < 0 & 1) << 4) + 4 >> 2] - l2);
            l2 = v2 * (+g[E2 + ((v2 < 0 ^ 1) << 4) + 4 >> 2] - l2);
            do
              if ((!(k2 > j2 | h2 > l2) ? (A2 = k2 > h2 ? k2 : h2, x2 = l2 < j2 ? l2 : j2, C2 = +g[b2 + 8 >> 2], B2 = w2 * (+g[E2 + ((w2 < 0 & 1) << 4) + 8 >> 2] - C2), C2 = w2 * (+g[E2 + ((w2 < 0 ^ 1) << 4) + 8 >> 2] - C2), !(B2 > x2 | A2 > C2)) : 0) ? (C2 < x2 ? C2 : x2) > 0 ? (B2 > A2 ? B2 : A2) < z2 * t2 * z2 + y2 * t2 * y2 + s2 * t2 * s2 : 0 : 0) {
                if (!(c[q2 + 40 >> 2] | 0)) {
                  mb[c[(c[e2 >> 2] | 0) + 12 >> 2] & 127](e2, q2);
                  n2 = p2;
                  f2 = r2;
                  break;
                }
                if ((p2 | 0) > (m2 | 0)) {
                  o2 = r2 << 1;
                  if ((r2 | 0) < (o2 | 0)) {
                    do
                      if ((a2 | 0) < (o2 | 0)) {
                        if (r2) {
                          c[6324] = (c[6324] | 0) + 1;
                          a2 = ic((r2 << 3 | 3) + 16 | 0) | 0;
                          if (!a2)
                            a2 = 0;
                          else {
                            c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
                            a2 = a2 + 4 + 15 & -16;
                          }
                          if ((r2 | 0) > 0) {
                            f2 = 0;
                            do {
                              c[a2 + (f2 << 2) >> 2] = c[d2 + (f2 << 2) >> 2];
                              f2 = f2 + 1 | 0;
                            } while ((f2 | 0) != (r2 | 0));
                          } else
                            D2 = 17;
                        } else {
                          a2 = 0;
                          D2 = 17;
                        }
                        if ((D2 | 0) == 17) {
                          D2 = 0;
                          if (!d2) {
                            f2 = o2;
                            d2 = a2;
                            break;
                          }
                        }
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[d2 + -4 >> 2] | 0);
                        f2 = o2;
                        d2 = a2;
                      } else
                        f2 = a2;
                    while (0);
                    yn(d2 + (r2 << 2) | 0, 0, r2 << 2 | 0) | 0;
                    a2 = f2;
                  }
                  m2 = o2 + -2 | 0;
                  f2 = o2;
                } else
                  f2 = r2;
                c[d2 + (p2 << 2) >> 2] = c[q2 + 36 >> 2];
                c[d2 + (n2 << 2) >> 2] = c[q2 + 40 >> 2];
                n2 = n2 + 1 | 0;
              } else {
                n2 = p2;
                f2 = r2;
              }
            while (0);
            if (!n2)
              break;
            else
              r2 = f2;
          }
          if (!d2) {
            i = E2;
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          i = E2;
          return;
        }
        function Ne(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          if (!b2)
            if (!e2) {
              if (f2 | 0) {
                c[f2 >> 2] = (a2 >>> 0) % (d2 >>> 0);
                c[f2 + 4 >> 2] = 0;
              }
              e2 = 0;
              f2 = (a2 >>> 0) / (d2 >>> 0) >>> 0;
              return (D = e2, f2) | 0;
            } else {
              if (!f2) {
                e2 = 0;
                f2 = 0;
                return (D = e2, f2) | 0;
              }
              c[f2 >> 2] = a2 | 0;
              c[f2 + 4 >> 2] = b2 & 0;
              e2 = 0;
              f2 = 0;
              return (D = e2, f2) | 0;
            }
          do
            if (d2) {
              if (e2 | 0) {
                h2 = (V(e2 | 0) | 0) - (V(b2 | 0) | 0) | 0;
                if (h2 >>> 0 <= 31) {
                  n2 = h2 + 1 | 0;
                  i2 = a2 >>> ((h2 + 1 | 0) >>> 0) & h2 - 31 >> 31 | b2 << 31 - h2;
                  m2 = b2 >>> ((h2 + 1 | 0) >>> 0) & h2 - 31 >> 31;
                  g2 = 0;
                  h2 = a2 << 31 - h2;
                  break;
                }
                if (!f2) {
                  e2 = 0;
                  f2 = 0;
                  return (D = e2, f2) | 0;
                }
                c[f2 >> 2] = a2 | 0;
                c[f2 + 4 >> 2] = b2 | b2 & 0;
                e2 = 0;
                f2 = 0;
                return (D = e2, f2) | 0;
              }
              if (d2 - 1 & d2 | 0) {
                h2 = (V(d2 | 0) | 0) + 33 - (V(b2 | 0) | 0) | 0;
                n2 = h2;
                i2 = 32 - h2 - 1 >> 31 & b2 >>> ((h2 - 32 | 0) >>> 0) | (b2 << 32 - h2 | a2 >>> (h2 >>> 0)) & h2 - 32 >> 31;
                m2 = h2 - 32 >> 31 & b2 >>> (h2 >>> 0);
                g2 = a2 << 64 - h2 & 32 - h2 >> 31;
                h2 = (b2 << 64 - h2 | a2 >>> ((h2 - 32 | 0) >>> 0)) & 32 - h2 >> 31 | a2 << 32 - h2 & h2 - 33 >> 31;
                break;
              }
              if (f2 | 0) {
                c[f2 >> 2] = d2 - 1 & a2;
                c[f2 + 4 >> 2] = 0;
              }
              if ((d2 | 0) == 1) {
                e2 = b2 | b2 & 0;
                f2 = a2 | 0 | 0;
                return (D = e2, f2) | 0;
              } else {
                f2 = Ip(d2 | 0) | 0;
                e2 = b2 >>> (f2 >>> 0) | 0;
                f2 = b2 << 32 - f2 | a2 >>> (f2 >>> 0) | 0;
                return (D = e2, f2) | 0;
              }
            } else {
              if (!e2) {
                if (f2 | 0) {
                  c[f2 >> 2] = (b2 >>> 0) % (d2 >>> 0);
                  c[f2 + 4 >> 2] = 0;
                }
                e2 = 0;
                f2 = (b2 >>> 0) / (d2 >>> 0) >>> 0;
                return (D = e2, f2) | 0;
              }
              if (!a2) {
                if (f2 | 0) {
                  c[f2 >> 2] = 0;
                  c[f2 + 4 >> 2] = (b2 >>> 0) % (e2 >>> 0);
                }
                d2 = 0;
                f2 = (b2 >>> 0) / (e2 >>> 0) >>> 0;
                return (D = d2, f2) | 0;
              }
              if (!(e2 - 1 & e2)) {
                if (f2 | 0) {
                  c[f2 >> 2] = a2 | 0;
                  c[f2 + 4 >> 2] = e2 - 1 & b2 | b2 & 0;
                }
                d2 = 0;
                f2 = b2 >>> ((Ip(e2 | 0) | 0) >>> 0);
                return (D = d2, f2) | 0;
              }
              h2 = (V(e2 | 0) | 0) - (V(b2 | 0) | 0) | 0;
              if (h2 >>> 0 <= 30) {
                n2 = h2 + 1 | 0;
                i2 = b2 << 31 - h2 | a2 >>> ((h2 + 1 | 0) >>> 0);
                m2 = b2 >>> ((h2 + 1 | 0) >>> 0);
                g2 = 0;
                h2 = a2 << 31 - h2;
                break;
              }
              if (!f2) {
                e2 = 0;
                f2 = 0;
                return (D = e2, f2) | 0;
              }
              c[f2 >> 2] = a2 | 0;
              c[f2 + 4 >> 2] = b2 | b2 & 0;
              e2 = 0;
              f2 = 0;
              return (D = e2, f2) | 0;
            }
          while (0);
          if (!n2) {
            j2 = h2;
            b2 = m2;
            a2 = 0;
            h2 = 0;
          } else {
            k2 = Ct(d2 | 0 | 0, e2 | e2 & 0 | 0, -1, -1) | 0;
            l2 = D;
            j2 = h2;
            b2 = m2;
            a2 = n2;
            h2 = 0;
            do {
              p2 = j2;
              j2 = g2 >>> 31 | j2 << 1;
              g2 = h2 | g2 << 1;
              p2 = i2 << 1 | p2 >>> 31 | 0;
              o2 = i2 >>> 31 | b2 << 1 | 0;
              Ds(k2 | 0, l2 | 0, p2 | 0, o2 | 0) | 0;
              n2 = D;
              m2 = n2 >> 31 | ((n2 | 0) < 0 ? -1 : 0) << 1;
              h2 = m2 & 1;
              i2 = Ds(p2 | 0, o2 | 0, m2 & (d2 | 0) | 0, (((n2 | 0) < 0 ? -1 : 0) >> 31 | ((n2 | 0) < 0 ? -1 : 0) << 1) & (e2 | e2 & 0) | 0) | 0;
              b2 = D;
              a2 = a2 - 1 | 0;
            } while ((a2 | 0) != 0);
            a2 = 0;
          }
          if (f2 | 0) {
            c[f2 >> 2] = i2;
            c[f2 + 4 >> 2] = b2;
          }
          o2 = (g2 | 0) >>> 31 | j2 << 1 | (0 << 1 | g2 >>> 31) & 0 | a2;
          p2 = (g2 << 1 | 0 >>> 31) & -2 | h2;
          return (D = o2, p2) | 0;
        }
        function Oe(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          o2 = i;
          i = i + 144 | 0;
          j2 = +g[b2 >> 2];
          k2 = +g[b2 + 16 >> 2];
          p2 = j2 < k2 ? j2 : k2;
          h2 = +g[b2 + 32 >> 2];
          if ((p2 < h2 ? p2 : h2) > +g[a2 + 20 >> 2]) {
            i = o2;
            return;
          }
          m2 = j2 > k2 ? b2 : b2 + 16 | 0;
          if (+g[(+g[m2 >> 2] > h2 ? m2 : b2 + 32 | 0) >> 2] < +g[a2 + 4 >> 2]) {
            i = o2;
            return;
          }
          h2 = +g[b2 + 8 >> 2];
          j2 = +g[b2 + 24 >> 2];
          p2 = h2 < j2 ? h2 : j2;
          k2 = +g[b2 + 40 >> 2];
          if ((p2 < k2 ? p2 : k2) > +g[a2 + 28 >> 2]) {
            i = o2;
            return;
          }
          m2 = h2 > j2 ? b2 + 8 | 0 : b2 + 24 | 0;
          if (+g[(+g[m2 >> 2] > k2 ? m2 : b2 + 40 | 0) >> 2] < +g[a2 + 12 >> 2]) {
            i = o2;
            return;
          }
          h2 = +g[b2 + 4 >> 2];
          j2 = +g[b2 + 20 >> 2];
          p2 = h2 < j2 ? h2 : j2;
          k2 = +g[b2 + 36 >> 2];
          if ((p2 < k2 ? p2 : k2) > +g[a2 + 24 >> 2]) {
            i = o2;
            return;
          }
          m2 = h2 > j2 ? b2 + 4 | 0 : b2 + 20 | 0;
          if (+g[(+g[m2 >> 2] > k2 ? m2 : b2 + 36 | 0) >> 2] < +g[a2 + 8 >> 2]) {
            i = o2;
            return;
          }
          m2 = c[a2 + 48 >> 2] | 0;
          f2 = c[a2 + 36 >> 2] | 0;
          if ((c[(c[f2 + 4 >> 2] | 0) + 4 >> 2] | 0) >= 20) {
            i = o2;
            return;
          }
          c[o2 + 24 + 8 >> 2] = 0;
          c[o2 + 24 + 12 >> 2] = -1;
          c[o2 + 24 + 16 >> 2] = 1065353216;
          c[o2 + 24 + 20 >> 2] = 1065353216;
          c[o2 + 24 + 24 >> 2] = 1065353216;
          g[o2 + 24 + 28 >> 2] = 0;
          c[o2 + 24 + 56 >> 2] = 0;
          c[o2 + 24 >> 2] = 3956;
          c[o2 + 24 + 4 >> 2] = 1;
          c[o2 + 24 + 60 >> 2] = c[b2 >> 2];
          c[o2 + 24 + 60 + 4 >> 2] = c[b2 + 4 >> 2];
          c[o2 + 24 + 60 + 8 >> 2] = c[b2 + 8 >> 2];
          c[o2 + 24 + 60 + 12 >> 2] = c[b2 + 12 >> 2];
          c[o2 + 24 + 76 >> 2] = c[b2 + 16 >> 2];
          c[o2 + 24 + 76 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
          c[o2 + 24 + 76 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
          c[o2 + 24 + 76 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
          c[o2 + 24 + 92 >> 2] = c[b2 + 32 >> 2];
          c[o2 + 24 + 92 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
          c[o2 + 24 + 92 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
          c[o2 + 24 + 92 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
          c[o2 + 24 + 48 >> 2] = c[a2 + 56 >> 2];
          q2 = c[a2 + 40 >> 2] | 0;
          b2 = c[q2 + 8 >> 2] | 0;
          l2 = c[q2 + 12 >> 2] | 0;
          c[o2 >> 2] = q2;
          c[o2 + 4 >> 2] = o2 + 24;
          c[o2 + 8 >> 2] = b2;
          c[o2 + 12 >> 2] = l2;
          c[o2 + 16 >> 2] = d2;
          c[o2 + 20 >> 2] = e2;
          l2 = sb[c[(c[m2 >> 2] | 0) + 8 >> 2] & 31](m2, f2, o2, c[a2 + 64 >> 2] | 0) | 0;
          b2 = c[a2 + 44 >> 2] | 0;
          f2 = c[b2 + 8 >> 2] | 0;
          if ((c[f2 + 8 >> 2] | 0) == (c[(c[a2 + 40 >> 2] | 0) + 8 >> 2] | 0)) {
            c[b2 + 8 >> 2] = o2;
            Ub[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, d2, e2);
          } else {
            f2 = c[b2 + 12 >> 2] | 0;
            c[b2 + 12 >> 2] = o2;
            Ub[c[(c[b2 >> 2] | 0) + 12 >> 2] & 127](b2, d2, e2);
          }
          ib[c[(c[l2 >> 2] | 0) + 8 >> 2] & 31](l2, c[a2 + 36 >> 2] | 0, o2, c[a2 + 52 >> 2] | 0, c[a2 + 44 >> 2] | 0);
          b2 = c[a2 + 44 >> 2] | 0;
          if ((c[(c[b2 + 8 >> 2] | 0) + 8 >> 2] | 0) == (c[(c[a2 + 40 >> 2] | 0) + 8 >> 2] | 0))
            c[b2 + 8 >> 2] = f2;
          else
            c[b2 + 12 >> 2] = f2;
          kb[c[c[l2 >> 2] >> 2] & 255](l2);
          mb[c[(c[m2 >> 2] | 0) + 60 >> 2] & 127](m2, l2);
          c[o2 + 24 >> 2] = 8236;
          f2 = c[o2 + 24 + 56 >> 2] | 0;
          if (f2 | 0 ? (kb[c[c[f2 >> 2] >> 2] & 255](f2), n2 = c[o2 + 24 + 56 >> 2] | 0, n2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[n2 + -4 >> 2] | 0);
          }
          i = o2;
          return;
        }
        function Pe(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
          w2 = i;
          i = i + 192 | 0;
          v2 = c[(c[a2 + 4 >> 2] | 0) + 772 >> 2] | 0;
          r2 = c[(c[a2 + 8 >> 2] | 0) + 8 >> 2] | 0;
          j2 = +g[d2 >> 2];
          s2 = +g[b2 >> 2] * e2 + j2;
          k2 = +g[d2 + 4 >> 2];
          t2 = +g[b2 + 4 >> 2] * e2 + k2;
          h2 = +g[d2 + 8 >> 2];
          u2 = +g[b2 + 8 >> 2] * e2 + h2;
          f2 = c[(c[a2 + 12 >> 2] | 0) + 8 >> 2] | 0;
          p2 = +g[f2 + 52 >> 2];
          q2 = +g[f2 + 56 >> 2];
          if ((v2 | 0) != (r2 | 0)) {
            x2 = u2 - +g[f2 + 60 >> 2];
            y2 = j2 - +g[r2 + 52 >> 2];
            k2 = k2 - +g[r2 + 56 >> 2];
            j2 = h2 - +g[r2 + 60 >> 2];
            l2 = y2 * +g[r2 + 4 >> 2] + k2 * +g[r2 + 20 >> 2] + j2 * +g[r2 + 36 >> 2];
            m2 = (s2 - p2) * +g[f2 + 4 >> 2] + (t2 - q2) * +g[f2 + 20 >> 2] + x2 * +g[f2 + 36 >> 2];
            n2 = y2 * +g[r2 + 8 >> 2] + k2 * +g[r2 + 24 >> 2] + j2 * +g[r2 + 40 >> 2];
            o2 = (s2 - p2) * +g[f2 + 8 >> 2] + (t2 - q2) * +g[f2 + 24 >> 2] + x2 * +g[f2 + 40 >> 2];
            j2 = y2 * +g[r2 + 12 >> 2] + k2 * +g[r2 + 28 >> 2] + j2 * +g[r2 + 44 >> 2];
            h2 = (s2 - p2) * +g[f2 + 12 >> 2] + (t2 - q2) * +g[f2 + 28 >> 2] + x2 * +g[f2 + 44 >> 2];
          } else {
            z2 = s2 - +g[v2 + 52 >> 2];
            x2 = t2 - +g[v2 + 56 >> 2];
            y2 = u2 - +g[v2 + 60 >> 2];
            h2 = h2 - +g[f2 + 60 >> 2];
            l2 = (j2 - p2) * +g[f2 + 4 >> 2] + (k2 - q2) * +g[f2 + 20 >> 2] + h2 * +g[f2 + 36 >> 2];
            m2 = z2 * +g[v2 + 4 >> 2] + x2 * +g[v2 + 20 >> 2] + y2 * +g[v2 + 36 >> 2];
            n2 = (j2 - p2) * +g[f2 + 8 >> 2] + (k2 - q2) * +g[f2 + 24 >> 2] + h2 * +g[f2 + 40 >> 2];
            o2 = z2 * +g[v2 + 8 >> 2] + x2 * +g[v2 + 24 >> 2] + y2 * +g[v2 + 40 >> 2];
            j2 = (j2 - p2) * +g[f2 + 12 >> 2] + (k2 - q2) * +g[f2 + 28 >> 2] + h2 * +g[f2 + 44 >> 2];
            h2 = z2 * +g[v2 + 12 >> 2] + x2 * +g[v2 + 28 >> 2] + y2 * +g[v2 + 44 >> 2];
          }
          g[w2 >> 2] = m2;
          g[w2 + 4 >> 2] = o2;
          g[w2 + 8 >> 2] = h2;
          g[w2 + 12 >> 2] = 0;
          g[w2 + 16 >> 2] = l2;
          g[w2 + 20 >> 2] = n2;
          g[w2 + 24 >> 2] = j2;
          g[w2 + 28 >> 2] = 0;
          c[w2 + 64 >> 2] = c[b2 >> 2];
          c[w2 + 64 + 4 >> 2] = c[b2 + 4 >> 2];
          c[w2 + 64 + 8 >> 2] = c[b2 + 8 >> 2];
          c[w2 + 64 + 12 >> 2] = c[b2 + 12 >> 2];
          g[w2 + 80 >> 2] = e2;
          c[w2 + 84 >> 2] = 0;
          c[w2 + 84 + 4 >> 2] = 0;
          c[w2 + 84 + 8 >> 2] = 0;
          c[w2 + 84 + 12 >> 2] = 0;
          f2 = w2 + 116 | 0;
          b2 = f2 + 44 | 0;
          do {
            c[f2 >> 2] = 0;
            f2 = f2 + 4 | 0;
          } while ((f2 | 0) < (b2 | 0));
          g[w2 + 48 >> 2] = s2;
          g[w2 + 52 >> 2] = t2;
          g[w2 + 56 >> 2] = u2;
          g[w2 + 60 >> 2] = 0;
          c[w2 + 32 >> 2] = c[d2 >> 2];
          c[w2 + 32 + 4 >> 2] = c[d2 + 4 >> 2];
          c[w2 + 32 + 8 >> 2] = c[d2 + 8 >> 2];
          c[w2 + 32 + 12 >> 2] = c[d2 + 12 >> 2];
          b2 = c[a2 + 20 >> 2] | 0;
          f2 = c[a2 + 16 >> 2] | 0;
          d2 = c[a2 + 28 >> 2] | 0;
          B2 = c[a2 + 24 >> 2] | 0;
          A2 = (v2 | 0) != (r2 | 0) ? b2 : f2;
          b2 = (v2 | 0) != (r2 | 0) ? f2 : b2;
          f2 = (v2 | 0) != (r2 | 0) ? d2 : B2;
          d2 = (v2 | 0) != (r2 | 0) ? B2 : d2;
          c[w2 + 100 >> 2] = A2;
          c[w2 + 104 >> 2] = b2;
          c[w2 + 108 >> 2] = f2;
          c[w2 + 112 >> 2] = d2;
          B2 = c[a2 + 32 >> 2] | 0;
          +ub[c[(c[B2 >> 2] | 0) + 12 >> 2] & 1](B2, w2, c[((v2 | 0) != (r2 | 0) ? a2 + 12 | 0 : a2 + 8 | 0) >> 2] | 0, A2, f2, c[((v2 | 0) != (r2 | 0) ? a2 + 8 | 0 : a2 + 12 | 0) >> 2] | 0, b2, d2);
          i = w2;
          return;
        }
        function Qe(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
          l2 = i;
          i = i + 128 | 0;
          a2 = c[a2 + 20 >> 2] | 0;
          n2 = +g[a2 + 932 >> 2];
          x2 = +g[a2 + 936 >> 2];
          v2 = +g[a2 + 940 >> 2];
          w2 = +g[a2 + 948 >> 2];
          f2 = +g[a2 + 952 >> 2];
          j2 = +g[a2 + 956 >> 2];
          z2 = +g[b2 >> 2];
          m2 = +g[b2 + 4 >> 2];
          p2 = v2 * +g[b2 + 8 >> 2];
          q2 = +g[b2 + 16 >> 2];
          r2 = +g[b2 + 20 >> 2];
          t2 = v2 * +g[b2 + 24 >> 2];
          u2 = +g[b2 + 32 >> 2];
          o2 = +g[b2 + 36 >> 2];
          s2 = +g[b2 + 40 >> 2];
          y2 = +g[b2 + 48 >> 2];
          k2 = +g[b2 + 52 >> 2];
          h2 = +g[b2 + 56 >> 2];
          g[l2 >> 2] = n2 * z2 + x2 * m2 + p2 + y2;
          g[l2 + 4 >> 2] = n2 * q2 + x2 * r2 + t2 + k2;
          g[l2 + 8 >> 2] = n2 * u2 + x2 * o2 + v2 * s2 + h2;
          g[l2 + 12 >> 2] = 0;
          g[l2 + 16 >> 2] = w2 * z2 + x2 * m2 + p2 + y2;
          g[l2 + 20 >> 2] = w2 * q2 + x2 * r2 + t2 + k2;
          g[l2 + 24 >> 2] = w2 * u2 + x2 * o2 + v2 * s2 + h2;
          g[l2 + 28 >> 2] = 0;
          g[l2 + 32 >> 2] = w2 * z2 + f2 * m2 + p2 + y2;
          g[l2 + 36 >> 2] = w2 * q2 + f2 * r2 + t2 + k2;
          g[l2 + 40 >> 2] = w2 * u2 + f2 * o2 + v2 * s2 + h2;
          g[l2 + 44 >> 2] = 0;
          g[l2 + 48 >> 2] = n2 * z2 + f2 * m2 + p2 + y2;
          g[l2 + 52 >> 2] = n2 * q2 + f2 * r2 + t2 + k2;
          g[l2 + 56 >> 2] = n2 * u2 + f2 * o2 + v2 * s2 + h2;
          g[l2 + 60 >> 2] = 0;
          v2 = +g[b2 >> 2];
          u2 = +g[b2 + 4 >> 2];
          t2 = j2 * +g[b2 + 8 >> 2];
          r2 = +g[b2 + 16 >> 2];
          q2 = +g[b2 + 20 >> 2];
          p2 = j2 * +g[b2 + 24 >> 2];
          m2 = +g[b2 + 32 >> 2];
          g[l2 + 64 >> 2] = n2 * v2 + x2 * u2 + t2 + y2;
          g[l2 + 68 >> 2] = n2 * r2 + x2 * q2 + p2 + k2;
          g[l2 + 72 >> 2] = n2 * m2 + x2 * o2 + j2 * s2 + h2;
          g[l2 + 76 >> 2] = 0;
          h2 = +g[b2 + 36 >> 2];
          j2 = j2 * +g[b2 + 40 >> 2];
          s2 = +g[b2 + 48 >> 2];
          o2 = +g[b2 + 52 >> 2];
          k2 = +g[b2 + 56 >> 2];
          g[l2 + 80 >> 2] = w2 * v2 + x2 * u2 + t2 + s2;
          g[l2 + 84 >> 2] = w2 * r2 + x2 * q2 + p2 + o2;
          g[l2 + 88 >> 2] = w2 * m2 + x2 * h2 + j2 + k2;
          g[l2 + 92 >> 2] = 0;
          g[l2 + 96 >> 2] = w2 * v2 + f2 * u2 + t2 + s2;
          g[l2 + 100 >> 2] = w2 * r2 + f2 * q2 + p2 + o2;
          g[l2 + 104 >> 2] = w2 * m2 + f2 * h2 + j2 + k2;
          g[l2 + 108 >> 2] = 0;
          g[l2 + 112 >> 2] = n2 * v2 + f2 * u2 + t2 + s2;
          g[l2 + 116 >> 2] = n2 * r2 + f2 * q2 + p2 + o2;
          g[l2 + 120 >> 2] = n2 * m2 + f2 * h2 + j2 + k2;
          g[l2 + 124 >> 2] = 0;
          c[e2 >> 2] = c[l2 >> 2];
          c[e2 + 4 >> 2] = c[l2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[l2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[l2 + 12 >> 2];
          c[d2 >> 2] = c[l2 >> 2];
          c[d2 + 4 >> 2] = c[l2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[l2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[l2 + 12 >> 2];
          a2 = 1;
          do {
            f2 = +g[l2 + (a2 << 4) >> 2];
            if (f2 < +g[d2 >> 2])
              g[d2 >> 2] = f2;
            h2 = +g[l2 + (a2 << 4) + 4 >> 2];
            if (h2 < +g[d2 + 4 >> 2])
              g[d2 + 4 >> 2] = h2;
            j2 = +g[l2 + (a2 << 4) + 8 >> 2];
            if (j2 < +g[d2 + 8 >> 2])
              g[d2 + 8 >> 2] = j2;
            k2 = +g[l2 + (a2 << 4) + 12 >> 2];
            if (k2 < +g[d2 + 12 >> 2])
              g[d2 + 12 >> 2] = k2;
            if (+g[e2 >> 2] < f2)
              g[e2 >> 2] = f2;
            if (+g[e2 + 4 >> 2] < h2)
              g[e2 + 4 >> 2] = h2;
            if (+g[e2 + 8 >> 2] < j2)
              g[e2 + 8 >> 2] = j2;
            if (+g[e2 + 12 >> 2] < k2)
              g[e2 + 12 >> 2] = k2;
            a2 = a2 + 1 | 0;
          } while ((a2 | 0) != 8);
          i = l2;
          return;
        }
        function Re(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
          k2 = i;
          i = i + 64 | 0;
          l2 = (a[b2 + 76 >> 0] | 0) != 0;
          j2 = l2 ? e2 : d2;
          d2 = l2 ? d2 : e2;
          e2 = c[d2 + 4 >> 2] | 0;
          if (((c[e2 + 4 >> 2] | 0) + -21 | 0) >>> 0 >= 9) {
            i = k2;
            return;
          }
          if ((c[(c[j2 + 4 >> 2] | 0) + 4 >> 2] | 0) >= 20) {
            i = k2;
            return;
          }
          m2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
          c[h2 + 4 >> 2] = c[b2 + 72 >> 2];
          c[b2 + 44 >> 2] = j2;
          c[b2 + 48 >> 2] = d2;
          c[b2 + 60 >> 2] = f2;
          g[b2 + 64 >> 2] = m2;
          c[b2 + 52 >> 2] = h2;
          l2 = c[d2 + 12 >> 2] | 0;
          B2 = +g[l2 >> 2];
          A2 = +g[l2 + 16 >> 2];
          z2 = +g[l2 + 32 >> 2];
          y2 = +g[l2 + 4 >> 2];
          x2 = +g[l2 + 20 >> 2];
          w2 = +g[l2 + 36 >> 2];
          s2 = +g[l2 + 8 >> 2];
          q2 = +g[l2 + 24 >> 2];
          o2 = +g[l2 + 40 >> 2];
          v2 = -+g[l2 + 48 >> 2];
          u2 = -+g[l2 + 52 >> 2];
          t2 = -+g[l2 + 56 >> 2];
          l2 = c[j2 + 12 >> 2] | 0;
          K2 = +g[l2 >> 2];
          J2 = +g[l2 + 16 >> 2];
          I2 = +g[l2 + 32 >> 2];
          H2 = +g[l2 + 4 >> 2];
          G2 = +g[l2 + 20 >> 2];
          F2 = +g[l2 + 36 >> 2];
          E2 = +g[l2 + 8 >> 2];
          D2 = +g[l2 + 24 >> 2];
          C2 = +g[l2 + 40 >> 2];
          r2 = +g[l2 + 48 >> 2];
          p2 = +g[l2 + 52 >> 2];
          n2 = +g[l2 + 56 >> 2];
          g[k2 >> 2] = B2 * K2 + A2 * J2 + z2 * I2;
          g[k2 + 4 >> 2] = B2 * H2 + A2 * G2 + z2 * F2;
          g[k2 + 8 >> 2] = B2 * E2 + A2 * D2 + z2 * C2;
          g[k2 + 12 >> 2] = 0;
          g[k2 + 16 >> 2] = y2 * K2 + x2 * J2 + w2 * I2;
          g[k2 + 20 >> 2] = y2 * H2 + x2 * G2 + w2 * F2;
          g[k2 + 24 >> 2] = y2 * E2 + x2 * D2 + w2 * C2;
          g[k2 + 28 >> 2] = 0;
          g[k2 + 32 >> 2] = s2 * K2 + q2 * J2 + o2 * I2;
          g[k2 + 36 >> 2] = s2 * H2 + q2 * G2 + o2 * F2;
          g[k2 + 40 >> 2] = s2 * E2 + q2 * D2 + o2 * C2;
          g[k2 + 44 >> 2] = 0;
          g[k2 + 48 >> 2] = B2 * v2 + A2 * u2 + z2 * t2 + (B2 * r2 + A2 * p2 + z2 * n2);
          g[k2 + 52 >> 2] = y2 * v2 + x2 * u2 + w2 * t2 + (y2 * r2 + x2 * p2 + w2 * n2);
          g[k2 + 56 >> 2] = s2 * v2 + q2 * u2 + o2 * t2 + (s2 * r2 + q2 * p2 + o2 * n2);
          g[k2 + 60 >> 2] = 0;
          l2 = c[(c[b2 + 44 >> 2] | 0) + 4 >> 2] | 0;
          Yb[c[(c[l2 >> 2] | 0) + 8 >> 2] & 127](l2, k2, b2 + 12 | 0, b2 + 28 | 0);
          g[b2 + 28 >> 2] = +g[b2 + 28 >> 2] + m2;
          g[b2 + 32 >> 2] = +g[b2 + 32 >> 2] + m2;
          g[b2 + 36 >> 2] = +g[b2 + 36 >> 2] + m2;
          g[b2 + 12 >> 2] = +g[b2 + 12 >> 2] - m2;
          g[b2 + 16 >> 2] = +g[b2 + 16 >> 2] - m2;
          g[b2 + 20 >> 2] = +g[b2 + 20 >> 2] - m2;
          l2 = c[b2 + 72 >> 2] | 0;
          f2 = c[d2 + 8 >> 2] | 0;
          c[l2 + 772 >> 2] = c[j2 + 8 >> 2];
          c[l2 + 776 >> 2] = f2;
          Yb[c[(c[e2 >> 2] | 0) + 64 >> 2] & 127](e2, b2 + 8 | 0, b2 + 12 | 0, b2 + 28 | 0);
          e2 = c[h2 + 4 >> 2] | 0;
          do
            if (c[e2 + 780 >> 2] | 0) {
              f2 = c[e2 + 772 >> 2] | 0;
              j2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
              d2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
              if ((f2 | 0) == (j2 | 0)) {
                Te(e2, f2 + 4 | 0, d2 + 4 | 0);
                break;
              } else {
                Te(e2, d2 + 4 | 0, j2 + 4 | 0);
                break;
              }
            }
          while (0);
          c[b2 + 44 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          i = k2;
          return;
        }
        function Se(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          e2 = c[b2 + 528 >> 2] | 0;
          a:
            do
              if ((e2 | 0) > 0) {
                g2 = c[b2 + 536 >> 2] | 0;
                f2 = 0;
                while (1) {
                  if ((c[g2 + (f2 << 2) >> 2] | 0) == (d2 | 0))
                    break;
                  f2 = f2 + 1 | 0;
                  if ((f2 | 0) >= (e2 | 0))
                    break a;
                }
                if ((f2 | 0) != (e2 | 0))
                  return;
              }
            while (0);
          if ((e2 | 0) == (c[b2 + 532 >> 2] | 0) ? (h2 = e2 | 0 ? e2 << 1 : 1, (e2 | 0) < (h2 | 0)) : 0) {
            if (!h2)
              g2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              e2 = ic((h2 << 2 | 3) + 16 | 0) | 0;
              if (!e2)
                e2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                e2 = e2 + 4 + 15 & -16;
              }
              g2 = e2;
              e2 = c[b2 + 528 >> 2] | 0;
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                c[g2 + (f2 << 2) >> 2] = c[(c[b2 + 536 >> 2] | 0) + (f2 << 2) >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (e2 | 0));
            }
            f2 = c[b2 + 536 >> 2] | 0;
            if (f2) {
              if (a[b2 + 540 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
                e2 = c[b2 + 528 >> 2] | 0;
              }
              c[b2 + 536 >> 2] = 0;
            }
            a[b2 + 540 >> 0] = 1;
            c[b2 + 536 >> 2] = g2;
            c[b2 + 532 >> 2] = h2;
          }
          c[(c[b2 + 536 >> 2] | 0) + (e2 << 2) >> 2] = d2;
          c[b2 + 528 >> 2] = e2 + 1;
          h2 = c[d2 + 28 >> 2] | 0;
          d2 = c[d2 + 32 >> 2] | 0;
          if ((h2 | 0) == (b2 | 0)) {
            e2 = c[b2 + 284 >> 2] | 0;
            if ((e2 | 0) == (c[b2 + 288 >> 2] | 0) ? (j2 = e2 | 0 ? e2 << 1 : 1, (e2 | 0) < (j2 | 0)) : 0) {
              if (!j2)
                g2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                g2 = e2;
                e2 = c[b2 + 284 >> 2] | 0;
              }
              if ((e2 | 0) > 0) {
                f2 = 0;
                do {
                  c[g2 + (f2 << 2) >> 2] = c[(c[b2 + 292 >> 2] | 0) + (f2 << 2) >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (e2 | 0));
              }
              f2 = c[b2 + 292 >> 2] | 0;
              if (f2) {
                if (a[b2 + 296 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                  e2 = c[b2 + 284 >> 2] | 0;
                }
                c[b2 + 292 >> 2] = 0;
              }
              a[b2 + 296 >> 0] = 1;
              c[b2 + 292 >> 2] = g2;
              c[b2 + 288 >> 2] = j2;
            }
            c[(c[b2 + 292 >> 2] | 0) + (e2 << 2) >> 2] = d2;
            c[b2 + 284 >> 2] = e2 + 1;
            c[b2 + 276 >> 2] = e2 >>> 31 ^ 1;
            return;
          } else {
            e2 = c[d2 + 284 >> 2] | 0;
            if ((e2 | 0) == (c[d2 + 288 >> 2] | 0) ? (i2 = e2 | 0 ? e2 << 1 : 1, (e2 | 0) < (i2 | 0)) : 0) {
              if (!i2)
                g2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((i2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                g2 = e2;
                e2 = c[d2 + 284 >> 2] | 0;
              }
              if ((e2 | 0) > 0) {
                f2 = 0;
                do {
                  c[g2 + (f2 << 2) >> 2] = c[(c[d2 + 292 >> 2] | 0) + (f2 << 2) >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (e2 | 0));
              }
              f2 = c[d2 + 292 >> 2] | 0;
              if (f2) {
                if (a[d2 + 296 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                  e2 = c[d2 + 284 >> 2] | 0;
                }
                c[d2 + 292 >> 2] = 0;
              }
              a[d2 + 296 >> 0] = 1;
              c[d2 + 292 >> 2] = g2;
              c[d2 + 288 >> 2] = i2;
            }
            c[(c[d2 + 292 >> 2] | 0) + (e2 << 2) >> 2] = h2;
            c[d2 + 284 >> 2] = e2 + 1;
            c[d2 + 276 >> 2] = e2 >>> 31 ^ 1;
            return;
          }
        }
        function Te(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          e2 = c[a2 + 780 >> 2] | 0;
          if ((e2 | 0) <= 0)
            return;
          do {
            j2 = e2;
            e2 = e2 + -1 | 0;
            o2 = +g[a2 + 4 + (e2 * 192 | 0) >> 2];
            p2 = +g[a2 + 4 + (e2 * 192 | 0) + 4 >> 2];
            f2 = +g[a2 + 4 + (e2 * 192 | 0) + 8 >> 2];
            n2 = o2 * +g[b2 >> 2] + p2 * +g[b2 + 4 >> 2] + f2 * +g[b2 + 8 >> 2] + +g[b2 + 48 >> 2];
            l2 = o2 * +g[b2 + 16 >> 2] + p2 * +g[b2 + 20 >> 2] + f2 * +g[b2 + 24 >> 2] + +g[b2 + 52 >> 2];
            f2 = o2 * +g[b2 + 32 >> 2] + p2 * +g[b2 + 36 >> 2] + f2 * +g[b2 + 40 >> 2] + +g[b2 + 56 >> 2];
            g[a2 + 4 + (e2 * 192 | 0) + 48 >> 2] = n2;
            g[a2 + 4 + (e2 * 192 | 0) + 52 >> 2] = l2;
            g[a2 + 4 + (e2 * 192 | 0) + 56 >> 2] = f2;
            g[a2 + 4 + (e2 * 192 | 0) + 60 >> 2] = 0;
            p2 = +g[a2 + 4 + (e2 * 192 | 0) + 16 >> 2];
            o2 = +g[a2 + 4 + (e2 * 192 | 0) + 20 >> 2];
            h2 = +g[a2 + 4 + (e2 * 192 | 0) + 24 >> 2];
            m2 = p2 * +g[d2 >> 2] + o2 * +g[d2 + 4 >> 2] + h2 * +g[d2 + 8 >> 2] + +g[d2 + 48 >> 2];
            k2 = p2 * +g[d2 + 16 >> 2] + o2 * +g[d2 + 20 >> 2] + h2 * +g[d2 + 24 >> 2] + +g[d2 + 52 >> 2];
            h2 = p2 * +g[d2 + 32 >> 2] + o2 * +g[d2 + 36 >> 2] + h2 * +g[d2 + 40 >> 2] + +g[d2 + 56 >> 2];
            g[a2 + 4 + (e2 * 192 | 0) + 32 >> 2] = m2;
            g[a2 + 4 + (e2 * 192 | 0) + 36 >> 2] = k2;
            g[a2 + 4 + (e2 * 192 | 0) + 40 >> 2] = h2;
            g[a2 + 4 + (e2 * 192 | 0) + 44 >> 2] = 0;
            g[a2 + 4 + (e2 * 192 | 0) + 80 >> 2] = (n2 - m2) * +g[a2 + 4 + (e2 * 192 | 0) + 64 >> 2] + (l2 - k2) * +g[a2 + 4 + (e2 * 192 | 0) + 68 >> 2] + (f2 - h2) * +g[a2 + 4 + (e2 * 192 | 0) + 72 >> 2];
            i2 = a2 + 4 + (e2 * 192 | 0) + 156 | 0;
            c[i2 >> 2] = (c[i2 >> 2] | 0) + 1;
          } while ((j2 | 0) > 1);
          e2 = c[a2 + 780 >> 2] | 0;
          if ((e2 | 0) <= 0)
            return;
          j2 = e2;
          do {
            i2 = j2;
            j2 = j2 + -1 | 0;
            d2 = a2 + 4 + (j2 * 192 | 0) | 0;
            f2 = +g[a2 + 4 + (j2 * 192 | 0) + 80 >> 2];
            h2 = +g[a2 + 784 >> 2];
            if (f2 <= h2) {
              n2 = +g[a2 + 4 + (j2 * 192 | 0) + 32 >> 2] - (+g[a2 + 4 + (j2 * 192 | 0) + 48 >> 2] - +g[a2 + 4 + (j2 * 192 | 0) + 64 >> 2] * f2);
              o2 = +g[a2 + 4 + (j2 * 192 | 0) + 36 >> 2] - (+g[a2 + 4 + (j2 * 192 | 0) + 52 >> 2] - f2 * +g[a2 + 4 + (j2 * 192 | 0) + 68 >> 2]);
              p2 = +g[a2 + 4 + (j2 * 192 | 0) + 40 >> 2] - (+g[a2 + 4 + (j2 * 192 | 0) + 56 >> 2] - f2 * +g[a2 + 4 + (j2 * 192 | 0) + 72 >> 2]);
              if (n2 * n2 + o2 * o2 + p2 * p2 > h2 * h2) {
                b2 = e2 + -1 | 0;
                if ((b2 | 0) != (j2 | 0)) {
                  Lm(d2 | 0, a2 + 4 + (b2 * 192 | 0) | 0, 192) | 0;
                  c[a2 + 4 + (b2 * 192 | 0) + 156 >> 2] = 0;
                  c[a2 + 4 + (b2 * 192 | 0) + 116 >> 2] = 0;
                  c[a2 + 4 + (b2 * 192 | 0) + 116 + 4 >> 2] = 0;
                  c[a2 + 4 + (b2 * 192 | 0) + 116 + 8 >> 2] = 0;
                  c[a2 + 4 + (b2 * 192 | 0) + 116 + 12 >> 2] = 0;
                  c[a2 + 4 + (b2 * 192 | 0) + 116 + 16 >> 2] = 0;
                  e2 = c[a2 + 780 >> 2] | 0;
                }
                e2 = e2 + -1 | 0;
                c[a2 + 780 >> 2] = e2;
              }
            } else {
              b2 = e2 + -1 | 0;
              if ((b2 | 0) != (j2 | 0)) {
                Lm(d2 | 0, a2 + 4 + (b2 * 192 | 0) | 0, 192) | 0;
                c[a2 + 4 + (b2 * 192 | 0) + 156 >> 2] = 0;
                c[a2 + 4 + (b2 * 192 | 0) + 116 >> 2] = 0;
                c[a2 + 4 + (b2 * 192 | 0) + 116 + 4 >> 2] = 0;
                c[a2 + 4 + (b2 * 192 | 0) + 116 + 8 >> 2] = 0;
                c[a2 + 4 + (b2 * 192 | 0) + 116 + 12 >> 2] = 0;
                c[a2 + 4 + (b2 * 192 | 0) + 116 + 16 >> 2] = 0;
                e2 = c[a2 + 780 >> 2] | 0;
              }
              e2 = e2 + -1 | 0;
              c[a2 + 780 >> 2] = e2;
            }
          } while ((i2 | 0) > 1);
          return;
        }
        function Ue(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          c[b2 + 16 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 20 >> 2] = c[a2 + 8 >> 2];
          c[b2 + 24 >> 2] = c[a2 + 12 >> 2];
          c[b2 + 28 >> 2] = c[a2 + 16 >> 2];
          c[b2 + 32 >> 2] = c[a2 + 20 >> 2];
          c[b2 + 36 >> 2] = c[a2 + 24 >> 2];
          c[b2 + 40 >> 2] = c[a2 + 28 >> 2];
          c[b2 + 44 >> 2] = c[a2 + 32 >> 2];
          c[b2 + 48 >> 2] = c[a2 + 36 >> 2];
          c[b2 + 52 >> 2] = c[a2 + 40 >> 2];
          c[b2 + 56 >> 2] = c[a2 + 44 >> 2];
          c[b2 + 60 >> 2] = c[a2 + 48 >> 2];
          c[b2 + 64 >> 2] = c[a2 + 52 >> 2];
          c[b2 + 68 >> 2] = c[a2 + 56 >> 2];
          c[b2 + 72 >> 2] = c[a2 + 60 >> 2];
          c[b2 + 76 >> 2] = c[a2 + 64 >> 2];
          c[b2 + 80 >> 2] = c[a2 + 68 >> 2];
          c[b2 + 84 >> 2] = c[a2 + 72 >> 2];
          c[b2 + 88 >> 2] = c[a2 + 76 >> 2];
          c[b2 + 92 >> 2] = c[a2 + 80 >> 2];
          c[b2 + 96 >> 2] = c[a2 + 84 >> 2];
          c[b2 + 100 >> 2] = c[a2 + 88 >> 2];
          c[b2 + 104 >> 2] = c[a2 + 92 >> 2];
          c[b2 + 108 >> 2] = c[a2 + 96 >> 2];
          c[b2 + 112 >> 2] = c[a2 + 100 >> 2];
          c[b2 + 116 >> 2] = c[a2 + 104 >> 2];
          c[b2 + 120 >> 2] = c[a2 + 108 >> 2];
          c[b2 + 124 >> 2] = c[a2 + 112 >> 2];
          c[b2 + 128 >> 2] = c[a2 + 116 >> 2];
          c[b2 + 132 >> 2] = c[a2 + 120 >> 2];
          c[b2 + 136 >> 2] = c[a2 + 124 >> 2];
          c[b2 + 140 >> 2] = c[a2 + 128 >> 2];
          c[b2 + 144 >> 2] = c[a2 + 132 >> 2];
          c[b2 + 148 >> 2] = c[a2 + 136 >> 2];
          c[b2 + 152 >> 2] = c[a2 + 140 >> 2];
          c[b2 + 156 >> 2] = c[a2 + 144 >> 2];
          c[b2 + 160 >> 2] = c[a2 + 148 >> 2];
          c[b2 + 164 >> 2] = c[a2 + 152 >> 2];
          c[b2 + 168 >> 2] = c[a2 + 156 >> 2];
          c[b2 + 172 >> 2] = c[a2 + 160 >> 2];
          c[b2 + 176 >> 2] = c[a2 + 164 >> 2];
          c[b2 + 180 >> 2] = c[a2 + 168 >> 2];
          c[b2 + 184 >> 2] = c[a2 + 172 >> 2];
          c[b2 + 188 >> 2] = c[a2 + 176 >> 2];
          c[b2 + 232 >> 2] = c[a2 + 180 >> 2];
          c[b2 + 192 >> 2] = c[a2 + 184 >> 2];
          c[b2 >> 2] = 0;
          c[b2 + 4 >> 2] = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, c[a2 + 192 >> 2] | 0) | 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 236 >> 2] = c[a2 + 204 >> 2];
          c[b2 + 240 >> 2] = c[a2 + 208 >> 2];
          c[b2 + 244 >> 2] = c[a2 + 212 >> 2];
          c[b2 + 248 >> 2] = c[a2 + 216 >> 2];
          c[b2 + 196 >> 2] = c[a2 + 220 >> 2];
          c[b2 + 200 >> 2] = c[a2 + 224 >> 2];
          c[b2 + 204 >> 2] = c[a2 + 232 >> 2];
          c[b2 + 208 >> 2] = c[a2 + 240 >> 2];
          c[b2 + 212 >> 2] = c[a2 + 244 >> 2];
          c[b2 + 216 >> 2] = c[a2 + 228 >> 2];
          c[b2 + 252 >> 2] = c[a2 + 248 >> 2];
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          f2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 + 12 >> 2] = f2;
          if (!f2) {
            f2 = a2 + 264 | 0;
            f2 = c[f2 >> 2] | 0;
            d2 = b2 + 220 | 0;
            c[d2 >> 2] = f2;
            d2 = a2 + 268 | 0;
            d2 = c[d2 >> 2] | 0;
            f2 = b2 + 224 | 0;
            c[f2 >> 2] = d2;
            f2 = a2 + 272 | 0;
            f2 = c[f2 >> 2] | 0;
            d2 = b2 + 228 | 0;
            c[d2 >> 2] = f2;
            d2 = a2 + 276 | 0;
            d2 = c[d2 >> 2] | 0;
            f2 = b2 + 256 | 0;
            c[f2 >> 2] = d2;
            return 13154;
          }
          mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          f2 = a2 + 264 | 0;
          f2 = c[f2 >> 2] | 0;
          d2 = b2 + 220 | 0;
          c[d2 >> 2] = f2;
          d2 = a2 + 268 | 0;
          d2 = c[d2 >> 2] | 0;
          f2 = b2 + 224 | 0;
          c[f2 >> 2] = d2;
          f2 = a2 + 272 | 0;
          f2 = c[f2 >> 2] | 0;
          d2 = b2 + 228 | 0;
          c[d2 >> 2] = f2;
          d2 = a2 + 276 | 0;
          d2 = c[d2 >> 2] | 0;
          f2 = b2 + 256 | 0;
          c[f2 >> 2] = d2;
          return 13154;
        }
        function Ve(a2, d2, f2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          g2 = c[a2 + 108 >> 2] | 0;
          if (g2 | 0)
            Ub[c[(c[g2 >> 2] | 0) + 12 >> 2] & 127](g2, c[d2 + 60 >> 2] | 0, f2);
          p2 = c[d2 + 12 >> 2] | 0;
          q2 = c[a2 + 60 >> 2] | 0;
          o2 = c[a2 + 92 >> 2] | 0;
          if (!(ob[c[(c[o2 >> 2] | 0) + 56 >> 2] & 127](o2) | 0)) {
            o2 = c[a2 + 92 >> 2] | 0;
            Ub[c[(c[o2 >> 2] | 0) + 16 >> 2] & 127](o2, q2 + ((p2 & 65535) << 6) | 0, f2);
          }
          n2 = e[a2 + 56 >> 1] | 0;
          m2 = c[a2 + 60 >> 2] | 0;
          b[m2 + 54 >> 1] = (e[m2 + 54 >> 1] | 0) + 65534;
          b[m2 + 56 >> 1] = (e[m2 + 56 >> 1] | 0) + 65534;
          b[m2 + 58 >> 1] = (e[m2 + 58 >> 1] | 0) + 65534;
          m2 = 0;
          d2 = b[a2 + 6 >> 1] | 0;
          do {
            l2 = a2 + 68 + (m2 << 2) | 0;
            o2 = c[l2 >> 2] | 0;
            g2 = e[q2 + ((p2 & 65535) << 6) + 54 + (m2 << 1) >> 1] | 0;
            b[o2 + (g2 << 2) >> 1] = d2;
            f2 = b[o2 + (g2 << 2) + 6 >> 1] | 0;
            if (!(f2 << 16 >> 16))
              f2 = o2;
            else {
              k2 = (c[a2 + 60 >> 2] | 0) + ((e[o2 + (g2 << 2) + 2 >> 1] | 0) << 6) + 54 + (m2 << 1) | 0;
              j2 = o2 + (g2 << 2) | 0;
              while (1) {
                i2 = j2;
                j2 = j2 + 4 | 0;
                h2 = b[j2 >> 1] | 0;
                if ((d2 & 65535) < (h2 & 65535))
                  break;
                g2 = c[a2 + 60 >> 2] | 0;
                d2 = f2 & 65535;
                if (!(h2 & 1)) {
                  h2 = g2 + (d2 << 6) + 48 + (m2 << 1) | 0;
                  b[h2 >> 1] = (b[h2 >> 1] | 0) + -1 << 16 >> 16;
                } else {
                  h2 = g2 + (d2 << 6) + 54 + (m2 << 1) | 0;
                  b[h2 >> 1] = (b[h2 >> 1] | 0) + -1 << 16 >> 16;
                }
                b[k2 >> 1] = (b[k2 >> 1] | 0) + 1 << 16 >> 16;
                d2 = e[i2 >> 1] | e[i2 + 2 >> 1] << 16;
                f2 = e[j2 >> 1] | e[j2 + 2 >> 1] << 16;
                b[i2 >> 1] = f2;
                b[i2 + 2 >> 1] = f2 >>> 16;
                b[j2 >> 1] = d2;
                b[j2 + 2 >> 1] = d2 >>> 16;
                f2 = b[i2 + 10 >> 1] | 0;
                if (!(f2 << 16 >> 16))
                  break;
                else
                  d2 = d2 & 65535;
              }
              d2 = b[a2 + 6 >> 1] | 0;
              f2 = c[l2 >> 2] | 0;
            }
            g2 = e[q2 + ((p2 & 65535) << 6) + 48 + (m2 << 1) >> 1] | 0;
            b[o2 + (g2 << 2) >> 1] = d2;
            h2 = f2 + (g2 << 2) | 0;
            i2 = b[h2 + 6 >> 1] | 0;
            if (i2 << 16 >> 16) {
              k2 = (c[a2 + 60 >> 2] | 0) + ((e[f2 + (g2 << 2) + 2 >> 1] | 0) << 6) + 48 + (m2 << 1) | 0;
              j2 = h2;
              d2 = b[h2 >> 1] | 0;
              h2 = i2;
              while (1) {
                i2 = j2;
                j2 = j2 + 4 | 0;
                f2 = b[j2 >> 1] | 0;
                if ((d2 & 65535) < (f2 & 65535))
                  break;
                g2 = c[a2 + 60 >> 2] | 0;
                d2 = h2 & 65535;
                if (!(f2 & 1)) {
                  l2 = g2 + (d2 << 6) + 48 + (m2 << 1) | 0;
                  b[l2 >> 1] = (b[l2 >> 1] | 0) + -1 << 16 >> 16;
                } else {
                  l2 = g2 + (d2 << 6) + 54 + (m2 << 1) | 0;
                  b[l2 >> 1] = (b[l2 >> 1] | 0) + -1 << 16 >> 16;
                }
                b[k2 >> 1] = (b[k2 >> 1] | 0) + 1 << 16 >> 16;
                d2 = e[i2 >> 1] | e[i2 + 2 >> 1] << 16;
                h2 = e[j2 >> 1] | e[j2 + 2 >> 1] << 16;
                b[i2 >> 1] = h2;
                b[i2 + 2 >> 1] = h2 >>> 16;
                b[j2 >> 1] = d2;
                b[j2 + 2 >> 1] = d2 >>> 16;
                h2 = b[i2 + 10 >> 1] | 0;
                if (!(h2 << 16 >> 16))
                  break;
                else
                  d2 = d2 & 65535;
              }
              d2 = b[a2 + 6 >> 1] | 0;
            }
            b[o2 + ((n2 << 1) + -1 << 2) + 2 >> 1] = 0;
            b[o2 + ((n2 << 1) + -1 << 2) >> 1] = d2;
            m2 = m2 + 1 | 0;
          } while ((m2 | 0) != 3);
          b[(c[a2 + 60 >> 2] | 0) + ((p2 & 65535) << 6) + 48 >> 1] = b[a2 + 64 >> 1] | 0;
          b[a2 + 64 >> 1] = p2;
          b[a2 + 56 >> 1] = (b[a2 + 56 >> 1] | 0) + -1 << 16 >> 16;
          return;
        }
        function We(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = c[b2 >> 2] | 0;
          do
            if ((e2 | 0) > 3)
              if (!(a[d2 >> 0] & 8)) {
                c[b2 >> 2] = e2 + -1;
                f2 = b2 + 4 + (e2 + -1 << 4) | 0;
                c[b2 + 52 >> 2] = c[f2 >> 2];
                c[b2 + 52 + 4 >> 2] = c[f2 + 4 >> 2];
                c[b2 + 52 + 8 >> 2] = c[f2 + 8 >> 2];
                c[b2 + 52 + 12 >> 2] = c[f2 + 12 >> 2];
                f2 = b2 + 84 + (e2 + -1 << 4) | 0;
                c[b2 + 132 >> 2] = c[f2 >> 2];
                c[b2 + 132 + 4 >> 2] = c[f2 + 4 >> 2];
                c[b2 + 132 + 8 >> 2] = c[f2 + 8 >> 2];
                c[b2 + 132 + 12 >> 2] = c[f2 + 12 >> 2];
                f2 = b2 + 164 + (e2 + -1 << 4) | 0;
                c[b2 + 212 >> 2] = c[f2 >> 2];
                c[b2 + 212 + 4 >> 2] = c[f2 + 4 >> 2];
                c[b2 + 212 + 8 >> 2] = c[f2 + 8 >> 2];
                c[b2 + 212 + 12 >> 2] = c[f2 + 12 >> 2];
                e2 = e2 + -1 | 0;
                f2 = 6;
              } else
                f2 = 6;
            else {
              if ((e2 | 0) == 3) {
                e2 = 3;
                f2 = 6;
                break;
              }
              if ((e2 | 0) > 1) {
                e2 = 2;
                f2 = 10;
                break;
              }
              if ((e2 | 0) == 1) {
                e2 = 1;
                break;
              } else
                return;
            }
          while (0);
          if ((f2 | 0) == 6)
            if (!(a[d2 >> 0] & 4)) {
              e2 = e2 + -1 | 0;
              c[b2 >> 2] = e2;
              c[b2 + 36 >> 2] = c[b2 + 4 + (e2 << 4) >> 2];
              c[b2 + 36 + 4 >> 2] = c[b2 + 4 + (e2 << 4) + 4 >> 2];
              c[b2 + 36 + 8 >> 2] = c[b2 + 4 + (e2 << 4) + 8 >> 2];
              c[b2 + 36 + 12 >> 2] = c[b2 + 4 + (e2 << 4) + 12 >> 2];
              c[b2 + 116 >> 2] = c[b2 + 84 + (e2 << 4) >> 2];
              c[b2 + 116 + 4 >> 2] = c[b2 + 84 + (e2 << 4) + 4 >> 2];
              c[b2 + 116 + 8 >> 2] = c[b2 + 84 + (e2 << 4) + 8 >> 2];
              c[b2 + 116 + 12 >> 2] = c[b2 + 84 + (e2 << 4) + 12 >> 2];
              c[b2 + 196 >> 2] = c[b2 + 164 + (e2 << 4) >> 2];
              c[b2 + 196 + 4 >> 2] = c[b2 + 164 + (e2 << 4) + 4 >> 2];
              c[b2 + 196 + 8 >> 2] = c[b2 + 164 + (e2 << 4) + 8 >> 2];
              c[b2 + 196 + 12 >> 2] = c[b2 + 164 + (e2 << 4) + 12 >> 2];
              f2 = 10;
            } else
              f2 = 10;
          if ((f2 | 0) == 10) {
            if (!(a[d2 >> 0] & 2)) {
              e2 = e2 + -1 | 0;
              c[b2 >> 2] = e2;
              c[b2 + 20 >> 2] = c[b2 + 4 + (e2 << 4) >> 2];
              c[b2 + 20 + 4 >> 2] = c[b2 + 4 + (e2 << 4) + 4 >> 2];
              c[b2 + 20 + 8 >> 2] = c[b2 + 4 + (e2 << 4) + 8 >> 2];
              c[b2 + 20 + 12 >> 2] = c[b2 + 4 + (e2 << 4) + 12 >> 2];
              c[b2 + 100 >> 2] = c[b2 + 84 + (e2 << 4) >> 2];
              c[b2 + 100 + 4 >> 2] = c[b2 + 84 + (e2 << 4) + 4 >> 2];
              c[b2 + 100 + 8 >> 2] = c[b2 + 84 + (e2 << 4) + 8 >> 2];
              c[b2 + 100 + 12 >> 2] = c[b2 + 84 + (e2 << 4) + 12 >> 2];
              c[b2 + 180 >> 2] = c[b2 + 164 + (e2 << 4) >> 2];
              c[b2 + 180 + 4 >> 2] = c[b2 + 164 + (e2 << 4) + 4 >> 2];
              c[b2 + 180 + 8 >> 2] = c[b2 + 164 + (e2 << 4) + 8 >> 2];
              c[b2 + 180 + 12 >> 2] = c[b2 + 164 + (e2 << 4) + 12 >> 2];
            }
          }
          if (a[d2 >> 0] & 1)
            return;
          f2 = e2 + -1 | 0;
          c[b2 >> 2] = f2;
          c[b2 + 4 >> 2] = c[b2 + 4 + (f2 << 4) >> 2];
          c[b2 + 4 + 4 >> 2] = c[b2 + 4 + (f2 << 4) + 4 >> 2];
          c[b2 + 4 + 8 >> 2] = c[b2 + 4 + (f2 << 4) + 8 >> 2];
          c[b2 + 4 + 12 >> 2] = c[b2 + 4 + (f2 << 4) + 12 >> 2];
          c[b2 + 84 >> 2] = c[b2 + 84 + (f2 << 4) >> 2];
          c[b2 + 84 + 4 >> 2] = c[b2 + 84 + (f2 << 4) + 4 >> 2];
          c[b2 + 84 + 8 >> 2] = c[b2 + 84 + (f2 << 4) + 8 >> 2];
          c[b2 + 84 + 12 >> 2] = c[b2 + 84 + (f2 << 4) + 12 >> 2];
          c[b2 + 164 >> 2] = c[b2 + 164 + (f2 << 4) >> 2];
          c[b2 + 164 + 4 >> 2] = c[b2 + 164 + (f2 << 4) + 4 >> 2];
          c[b2 + 164 + 8 >> 2] = c[b2 + 164 + (f2 << 4) + 8 >> 2];
          c[b2 + 164 + 12 >> 2] = c[b2 + 164 + (f2 << 4) + 12 >> 2];
          return;
        }
        function Xe(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[b2 >> 2] = 6036;
          if (a[b2 + 20 >> 0] | 0) {
            d2 = c[b2 + 16 >> 2] | 0;
            e2 = c[d2 + 16 >> 2] | 0;
            if (e2) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[e2 + -4 >> 2] | 0);
              d2 = c[b2 + 16 >> 2] | 0;
            }
            if (d2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
          }
          if (a[b2 + 12 >> 0] | 0) {
            d2 = c[b2 + 8 >> 2] | 0;
            e2 = c[d2 + 16 >> 2] | 0;
            if (e2) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[e2 + -4 >> 2] | 0);
              d2 = c[b2 + 8 >> 2] | 0;
            }
            if (d2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
          }
          d2 = c[b2 + 32 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 32 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 36 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 36 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 40 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 40 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 44 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 44 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 48 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 48 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 52 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 52 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 56 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 56 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 60 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 60 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 76 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 76 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 80 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 80 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 72 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 72 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 88 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 88 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 84 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 84 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 24 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 28 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 28 >> 2] | 0;
          if (!d2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          return;
        }
        function Ye(a2, b2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          f2 = f2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          t2 = i;
          i = i + 32 | 0;
          c[a2 + 60 >> 2] = (c[a2 + 60 >> 2] | 0) + 1;
          o2 = c[a2 + 4 >> 2] | 0;
          Ib[c[(c[o2 >> 2] | 0) + 16 >> 2] & 3](o2, t2 + 28 | 0, t2 + 24 | 0, t2 + 20 | 0, t2 + 16 | 0, t2 + 12 | 0, t2 + 8 | 0, t2 + 4 | 0, t2, b2);
          o2 = (c[t2 + 12 >> 2] | 0) + (S(c[t2 + 8 >> 2] | 0, f2) | 0) | 0;
          r2 = c[a2 + 4 >> 2] | 0;
          n2 = c[t2 >> 2] | 0;
          switch (n2 | 0) {
            case 3: {
              j2 = e[o2 + 4 >> 1] | 0;
              break;
            }
            case 2: {
              j2 = c[o2 + 8 >> 2] | 0;
              break;
            }
            default:
              j2 = d[o2 + 2 >> 0] | 0;
          }
          s2 = (c[t2 + 20 >> 2] | 0) == 0;
          p2 = c[t2 + 28 >> 2] | 0;
          q2 = c[t2 + 16 >> 2] | 0;
          j2 = p2 + (S(q2, j2) | 0) | 0;
          if (s2) {
            l2 = +g[j2 + 8 >> 2] * +g[r2 + 12 >> 2];
            m2 = +g[j2 + 4 >> 2] * +g[r2 + 8 >> 2];
            k2 = +g[j2 >> 2] * +g[r2 + 4 >> 2];
          } else {
            l2 = +h[j2 + 16 >> 3] * +g[r2 + 12 >> 2];
            m2 = +h[j2 + 8 >> 3] * +g[r2 + 8 >> 2];
            k2 = +h[j2 >> 3] * +g[r2 + 4 >> 2];
          }
          g[a2 + 44 >> 2] = k2;
          g[a2 + 48 >> 2] = m2;
          g[a2 + 52 >> 2] = l2;
          g[a2 + 56 >> 2] = 0;
          switch (n2 | 0) {
            case 3: {
              j2 = e[o2 + 2 >> 1] | 0;
              break;
            }
            case 2: {
              j2 = c[o2 + 4 >> 2] | 0;
              break;
            }
            default:
              j2 = d[o2 + 1 >> 0] | 0;
          }
          j2 = p2 + (S(q2, j2) | 0) | 0;
          if (s2) {
            l2 = +g[j2 + 8 >> 2] * +g[r2 + 12 >> 2];
            m2 = +g[j2 + 4 >> 2] * +g[r2 + 8 >> 2];
            k2 = +g[j2 >> 2] * +g[r2 + 4 >> 2];
          } else {
            l2 = +h[j2 + 16 >> 3] * +g[r2 + 12 >> 2];
            m2 = +h[j2 + 8 >> 3] * +g[r2 + 8 >> 2];
            k2 = +h[j2 >> 3] * +g[r2 + 4 >> 2];
          }
          g[a2 + 28 >> 2] = k2;
          g[a2 + 32 >> 2] = m2;
          g[a2 + 36 >> 2] = l2;
          g[a2 + 40 >> 2] = 0;
          switch (n2 | 0) {
            case 3: {
              j2 = e[o2 >> 1] | 0;
              break;
            }
            case 2: {
              j2 = c[o2 >> 2] | 0;
              break;
            }
            default:
              j2 = d[o2 >> 0] | 0;
          }
          j2 = p2 + (S(q2, j2) | 0) | 0;
          if (s2) {
            m2 = +g[j2 + 8 >> 2] * +g[r2 + 12 >> 2];
            l2 = +g[j2 + 4 >> 2] * +g[r2 + 8 >> 2];
            k2 = +g[j2 >> 2] * +g[r2 + 4 >> 2];
            r2 = a2 + 12 | 0;
            g[r2 >> 2] = k2;
            r2 = a2 + 16 | 0;
            g[r2 >> 2] = l2;
            r2 = a2 + 20 | 0;
            g[r2 >> 2] = m2;
            r2 = a2 + 24 | 0;
            g[r2 >> 2] = 0;
            r2 = a2 + 8 | 0;
            r2 = c[r2 >> 2] | 0;
            q2 = c[r2 >> 2] | 0;
            q2 = q2 + 8 | 0;
            q2 = c[q2 >> 2] | 0;
            s2 = a2 + 12 | 0;
            Yb[q2 & 127](r2, s2, b2, f2);
            s2 = c[a2 + 4 >> 2] | 0;
            r2 = c[s2 >> 2] | 0;
            r2 = r2 + 24 | 0;
            r2 = c[r2 >> 2] | 0;
            mb[r2 & 127](s2, b2);
            i = t2;
            return;
          } else {
            m2 = +h[j2 + 16 >> 3] * +g[r2 + 12 >> 2];
            l2 = +h[j2 + 8 >> 3] * +g[r2 + 8 >> 2];
            k2 = +h[j2 >> 3] * +g[r2 + 4 >> 2];
            r2 = a2 + 12 | 0;
            g[r2 >> 2] = k2;
            r2 = a2 + 16 | 0;
            g[r2 >> 2] = l2;
            r2 = a2 + 20 | 0;
            g[r2 >> 2] = m2;
            r2 = a2 + 24 | 0;
            g[r2 >> 2] = 0;
            r2 = a2 + 8 | 0;
            r2 = c[r2 >> 2] | 0;
            q2 = c[r2 >> 2] | 0;
            q2 = q2 + 8 | 0;
            q2 = c[q2 >> 2] | 0;
            s2 = a2 + 12 | 0;
            Yb[q2 & 127](r2, s2, b2, f2);
            s2 = c[a2 + 4 >> 2] | 0;
            r2 = c[s2 >> 2] | 0;
            r2 = r2 + 24 | 0;
            r2 = c[r2 >> 2] | 0;
            mb[r2 & 127](s2, b2);
            i = t2;
            return;
          }
        }
        function Ze(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          if (!(c[a2 >> 2] | 0)) {
            c[a2 >> 2] = d2;
            c[d2 + 32 >> 2] = 0;
            return;
          }
          f2 = c[b2 + 40 >> 2] | 0;
          if (!f2)
            n2 = b2;
          else {
            e2 = +g[d2 >> 2] + +g[d2 + 16 >> 2];
            i2 = +g[d2 + 4 >> 2] + +g[d2 + 20 >> 2];
            j2 = +g[d2 + 8 >> 2] + +g[d2 + 24 >> 2];
            do {
              p2 = c[b2 + 36 >> 2] | 0;
              m2 = +F(+(e2 - (+g[p2 >> 2] + +g[p2 + 16 >> 2]))) + +F(+(i2 - (+g[p2 + 4 >> 2] + +g[p2 + 20 >> 2]))) + +F(+(j2 - (+g[p2 + 8 >> 2] + +g[p2 + 24 >> 2])));
              b2 = c[b2 + 36 + ((!(m2 < +F(+(e2 - (+g[f2 >> 2] + +g[f2 + 16 >> 2]))) + +F(+(i2 - (+g[f2 + 4 >> 2] + +g[f2 + 20 >> 2]))) + +F(+(j2 - (+g[f2 + 8 >> 2] + +g[f2 + 24 >> 2])))) & 1) << 2) >> 2] | 0;
              f2 = c[b2 + 40 >> 2] | 0;
            } while ((f2 | 0) != 0);
            n2 = b2;
          }
          o2 = n2 + 32 | 0;
          p2 = c[o2 >> 2] | 0;
          b2 = c[a2 + 4 >> 2] | 0;
          if (!b2) {
            c[6324] = (c[6324] | 0) + 1;
            b2 = ic(63) | 0;
            if (!b2)
              b2 = 0;
            else {
              c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
              b2 = b2 + 4 + 15 & -16;
            }
            f2 = b2;
            h2 = f2 + 44 | 0;
            do {
              c[f2 >> 2] = 0;
              f2 = f2 + 4 | 0;
            } while ((f2 | 0) < (h2 | 0));
          } else
            c[a2 + 4 >> 2] = 0;
          c[b2 + 32 >> 2] = p2;
          c[b2 + 36 >> 2] = 0;
          f2 = b2 + 40 | 0;
          c[f2 >> 2] = 0;
          q2 = +g[d2 >> 2];
          m2 = +g[n2 >> 2];
          m2 = q2 < m2 ? q2 : m2;
          g[b2 >> 2] = m2;
          q2 = +g[d2 + 16 >> 2];
          j2 = +g[n2 + 16 >> 2];
          j2 = q2 > j2 ? q2 : j2;
          g[b2 + 16 >> 2] = j2;
          q2 = +g[d2 + 4 >> 2];
          l2 = +g[n2 + 4 >> 2];
          l2 = q2 < l2 ? q2 : l2;
          g[b2 + 4 >> 2] = l2;
          q2 = +g[d2 + 20 >> 2];
          i2 = +g[n2 + 20 >> 2];
          i2 = q2 > i2 ? q2 : i2;
          g[b2 + 20 >> 2] = i2;
          q2 = +g[d2 + 8 >> 2];
          k2 = +g[n2 + 8 >> 2];
          k2 = q2 < k2 ? q2 : k2;
          g[b2 + 8 >> 2] = k2;
          q2 = +g[d2 + 24 >> 2];
          e2 = +g[n2 + 24 >> 2];
          e2 = q2 > e2 ? q2 : e2;
          g[b2 + 24 >> 2] = e2;
          if (!p2) {
            c[b2 + 36 >> 2] = n2;
            c[o2 >> 2] = b2;
            c[f2 >> 2] = d2;
            c[d2 + 32 >> 2] = b2;
            c[a2 >> 2] = b2;
            return;
          }
          c[p2 + 36 + (((c[(c[o2 >> 2] | 0) + 40 >> 2] | 0) == (n2 | 0) & 1) << 2) >> 2] = b2;
          c[b2 + 36 >> 2] = n2;
          c[o2 >> 2] = b2;
          c[f2 >> 2] = d2;
          c[d2 + 32 >> 2] = b2;
          f2 = p2;
          while (1) {
            b2 = f2 + 4 | 0;
            if (((((+g[f2 >> 2] <= m2 ? +g[b2 >> 2] <= l2 : 0) ? +g[f2 + 8 >> 2] <= k2 : 0) ? +g[f2 + 16 >> 2] >= j2 : 0) ? +g[f2 + 20 >> 2] >= i2 : 0) ? +g[f2 + 24 >> 2] >= e2 : 0) {
              b2 = 21;
              break;
            }
            a2 = c[f2 + 36 >> 2] | 0;
            d2 = c[f2 + 40 >> 2] | 0;
            q2 = +g[a2 >> 2];
            m2 = +g[d2 >> 2];
            m2 = q2 < m2 ? q2 : m2;
            g[f2 >> 2] = m2;
            q2 = +g[a2 + 16 >> 2];
            j2 = +g[d2 + 16 >> 2];
            j2 = q2 > j2 ? q2 : j2;
            g[f2 + 16 >> 2] = j2;
            q2 = +g[a2 + 4 >> 2];
            l2 = +g[d2 + 4 >> 2];
            l2 = q2 < l2 ? q2 : l2;
            g[b2 >> 2] = l2;
            q2 = +g[a2 + 20 >> 2];
            i2 = +g[d2 + 20 >> 2];
            i2 = q2 > i2 ? q2 : i2;
            g[f2 + 20 >> 2] = i2;
            q2 = +g[a2 + 8 >> 2];
            k2 = +g[d2 + 8 >> 2];
            k2 = q2 < k2 ? q2 : k2;
            g[f2 + 8 >> 2] = k2;
            q2 = +g[a2 + 24 >> 2];
            e2 = +g[d2 + 24 >> 2];
            e2 = q2 > e2 ? q2 : e2;
            g[f2 + 24 >> 2] = e2;
            f2 = c[f2 + 32 >> 2] | 0;
            if (!f2) {
              b2 = 21;
              break;
            }
          }
          if ((b2 | 0) == 21)
            return;
        }
        function _e(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          q2 = c[b2 + 18504 >> 2] | 0;
          if (!q2) {
            c[b2 >> 2] = 5;
            q2 = 0;
            return q2 | 0;
          }
          i2 = c[q2 + 48 >> 2] | 0;
          if (i2 | 0)
            c[i2 + 44 >> 2] = c[q2 + 44 >> 2];
          i2 = c[q2 + 44 >> 2] | 0;
          if (i2 | 0)
            c[i2 + 48 >> 2] = c[q2 + 48 >> 2];
          if ((c[b2 + 18504 >> 2] | 0) == (q2 | 0))
            c[b2 + 18504 >> 2] = c[q2 + 48 >> 2];
          c[b2 + 18508 >> 2] = (c[b2 + 18508 >> 2] | 0) + -1;
          c[q2 + 44 >> 2] = 0;
          c[q2 + 48 >> 2] = c[b2 + 18496 >> 2];
          i2 = c[b2 + 18496 >> 2] | 0;
          if (i2 | 0)
            c[i2 + 44 >> 2] = q2;
          c[b2 + 18496 >> 2] = q2;
          c[b2 + 18500 >> 2] = (c[b2 + 18500 >> 2] | 0) + 1;
          a[q2 + 55 >> 0] = 0;
          c[q2 + 20 >> 2] = d2;
          c[q2 + 24 >> 2] = e2;
          c[q2 + 28 >> 2] = f2;
          m2 = +g[d2 + 16 >> 2];
          j2 = +g[e2 + 16 >> 2] - m2;
          n2 = +g[d2 + 20 >> 2];
          k2 = +g[e2 + 20 >> 2] - n2;
          o2 = +g[d2 + 24 >> 2];
          l2 = +g[e2 + 24 >> 2] - o2;
          m2 = +g[f2 + 16 >> 2] - m2;
          n2 = +g[f2 + 20 >> 2] - n2;
          o2 = +g[f2 + 24 >> 2] - o2;
          g[q2 >> 2] = k2 * o2 - l2 * n2;
          g[q2 + 4 >> 2] = l2 * m2 - j2 * o2;
          g[q2 + 8 >> 2] = j2 * n2 - k2 * m2;
          g[q2 + 12 >> 2] = 0;
          p2 = +G(+((k2 * o2 - l2 * n2) * (k2 * o2 - l2 * n2) + (l2 * m2 - j2 * o2) * (l2 * m2 - j2 * o2) + (j2 * n2 - k2 * m2) * (j2 * n2 - k2 * m2)));
          do
            if (p2 > 9999999747378752e-20) {
              if ((!(Jk(k2 * o2 - l2 * n2, l2 * m2 - j2 * o2, j2 * n2 - k2 * m2, +g[d2 + 16 >> 2], +g[d2 + 20 >> 2], +g[d2 + 24 >> 2], +g[e2 + 16 >> 2], +g[e2 + 20 >> 2], +g[e2 + 24 >> 2], q2 + 16 | 0) | 0) ? !(Jk(+g[q2 >> 2], +g[q2 + 4 >> 2], +g[q2 + 8 >> 2], +g[e2 + 16 >> 2], +g[e2 + 20 >> 2], +g[e2 + 24 >> 2], +g[f2 + 16 >> 2], +g[f2 + 20 >> 2], +g[f2 + 24 >> 2], q2 + 16 | 0) | 0) : 0) ? !(Jk(+g[q2 >> 2], +g[q2 + 4 >> 2], +g[q2 + 8 >> 2], +g[f2 + 16 >> 2], +g[f2 + 20 >> 2], +g[f2 + 24 >> 2], +g[d2 + 16 >> 2], +g[d2 + 20 >> 2], +g[d2 + 24 >> 2], q2 + 16 | 0) | 0) : 0)
                g[q2 + 16 >> 2] = (+g[d2 + 16 >> 2] * +g[q2 >> 2] + +g[d2 + 20 >> 2] * +g[q2 + 4 >> 2] + +g[d2 + 24 >> 2] * +g[q2 + 8 >> 2]) / p2;
              g[q2 >> 2] = 1 / p2 * +g[q2 >> 2];
              g[q2 + 4 >> 2] = 1 / p2 * +g[q2 + 4 >> 2];
              g[q2 + 8 >> 2] = 1 / p2 * +g[q2 + 8 >> 2];
              if (h2)
                return q2 | 0;
              if (!(+g[q2 + 16 >> 2] >= -9999999747378752e-21)) {
                c[b2 >> 2] = 3;
                break;
              } else
                return q2 | 0;
            } else
              c[b2 >> 2] = 2;
          while (0);
          i2 = c[q2 + 48 >> 2] | 0;
          if (i2 | 0)
            c[i2 + 44 >> 2] = c[q2 + 44 >> 2];
          i2 = c[q2 + 44 >> 2] | 0;
          if (i2 | 0)
            c[i2 + 48 >> 2] = c[q2 + 48 >> 2];
          if ((c[b2 + 18496 >> 2] | 0) == (q2 | 0))
            c[b2 + 18496 >> 2] = c[q2 + 48 >> 2];
          c[b2 + 18500 >> 2] = (c[b2 + 18500 >> 2] | 0) + -1;
          c[q2 + 44 >> 2] = 0;
          c[q2 + 48 >> 2] = c[b2 + 18504 >> 2];
          i2 = c[b2 + 18504 >> 2] | 0;
          if (i2 | 0)
            c[i2 + 44 >> 2] = q2;
          c[b2 + 18504 >> 2] = q2;
          c[b2 + 18508 >> 2] = (c[b2 + 18508 >> 2] | 0) + 1;
          q2 = 0;
          return q2 | 0;
        }
        function $e(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          f2 = ic(479) | 0;
          if (!f2)
            s2 = 0;
          else {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            s2 = f2 + 4 + 15 & -16;
          }
          Qd(s2, b2, d2, e2);
          c[s2 >> 2] = 3568;
          a[s2 + 340 >> 0] = 1;
          c[s2 + 336 >> 2] = 0;
          c[s2 + 328 >> 2] = 0;
          c[s2 + 332 >> 2] = 0;
          k2 = s2 + 352 | 0;
          g[k2 >> 2] = 1.2000000476837158;
          l2 = s2 + 356 | 0;
          g[l2 >> 2] = 0;
          m2 = s2 + 360 | 0;
          g[m2 >> 2] = 0;
          g[s2 + 364 >> 2] = 1e3;
          n2 = s2 + 368 | 0;
          o2 = s2 + 396 | 0;
          c[n2 >> 2] = 0;
          c[n2 + 4 >> 2] = 0;
          c[n2 + 8 >> 2] = 0;
          c[n2 + 12 >> 2] = 0;
          c[n2 + 16 >> 2] = 0;
          c[n2 + 20 >> 2] = 0;
          c[n2 + 24 >> 2] = 0;
          c[o2 >> 2] = -1054867456;
          p2 = s2 + 400 | 0;
          c[p2 >> 2] = 0;
          q2 = s2 + 404 | 0;
          g[q2 >> 2] = 0;
          a[s2 + 424 >> 0] = 1;
          r2 = s2 + 420 | 0;
          c[r2 >> 2] = 0;
          j2 = s2 + 412 | 0;
          c[j2 >> 2] = 0;
          c[s2 + 416 >> 2] = 0;
          e2 = s2 + 452 | 0;
          c[e2 >> 2] = h2;
          i2 = s2 + 456 | 0;
          a[i2 >> 0] = 0;
          if (!h2) {
            c[6324] = (c[6324] | 0) + 1;
            f2 = ic(59) | 0;
            if (!f2)
              f2 = 0;
            else {
              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
              f2 = f2 + 4 + 15 & -16;
            }
            g[f2 + 12 >> 2] = 1;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 4 >> 2] = 5;
            c[f2 >> 2] = 3808;
            a[f2 + 36 >> 0] = 1;
            c[f2 + 32 >> 2] = 0;
            c[f2 + 24 >> 2] = 0;
            c[f2 + 28 >> 2] = 0;
            a[f2 + 16 >> 0] = 1;
            c[e2 >> 2] = f2;
            a[i2 >> 0] = 1;
          }
          c[s2 + 344 >> 2] = 4302;
          a[s2 + 348 >> 0] = 1;
          a[s2 + 349 >> 0] = 0;
          a[s2 + 350 >> 0] = 0;
          c[s2 + 384 >> 2] = d2;
          c[s2 + 388 >> 2] = b2;
          h2 = s2 + 408 | 0;
          yi(h2);
          i2 = c[j2 >> 2] | 0;
          if ((i2 | 0) > 0)
            e2 = 0;
          else {
            r2 = s2 + 428 | 0;
            g[r2 >> 2] = 0.25;
            r2 = s2 + 432 | 0;
            c[r2 >> 2] = 0;
            r2 = s2 + 436 | 0;
            c[r2 >> 2] = 0;
            r2 = s2 + 444 | 0;
            c[r2 >> 2] = 1;
            r2 = s2 + 448 | 0;
            c[r2 >> 2] = 1;
            g[k2 >> 2] = 1.2000000476837158;
            g[l2 >> 2] = 0;
            g[m2 >> 2] = 0;
            r2 = s2 + 392 | 0;
            c[r2 >> 2] = 0;
            c[n2 >> 2] = 0;
            c[n2 + 4 >> 2] = 0;
            c[n2 + 8 >> 2] = 0;
            c[n2 + 12 >> 2] = 0;
            c[o2 >> 2] = -1054867456;
            c[p2 >> 2] = 0;
            g[q2 >> 2] = 0;
            yi(h2);
            return s2 | 0;
          }
          do {
            d2 = (c[r2 >> 2] | 0) + (e2 << 2) | 0;
            f2 = c[d2 >> 2] | 0;
            c[d2 >> 2] = 0;
            if (f2 | 0)
              do {
                d2 = f2;
                f2 = c[f2 + 280 >> 2] | 0;
                Rc(d2);
              } while ((f2 | 0) != 0);
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) != (i2 | 0));
          r2 = s2 + 428 | 0;
          g[r2 >> 2] = 0.25;
          r2 = s2 + 432 | 0;
          c[r2 >> 2] = 0;
          r2 = s2 + 436 | 0;
          c[r2 >> 2] = 0;
          r2 = s2 + 444 | 0;
          c[r2 >> 2] = 1;
          r2 = s2 + 448 | 0;
          c[r2 >> 2] = 1;
          g[k2 >> 2] = 1.2000000476837158;
          g[l2 >> 2] = 0;
          g[m2 >> 2] = 0;
          r2 = s2 + 392 | 0;
          c[r2 >> 2] = 0;
          c[n2 >> 2] = 0;
          c[n2 + 4 >> 2] = 0;
          c[n2 + 8 >> 2] = 0;
          c[n2 + 12 >> 2] = 0;
          c[o2 >> 2] = -1054867456;
          c[p2 >> 2] = 0;
          g[q2 >> 2] = 0;
          yi(h2);
          return s2 | 0;
        }
        function af(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          h2 = c[d2 + 8 >> 2] | 0;
          if ((h2 | 0) > 0) {
            i2 = c[d2 + 16 >> 2] | 0;
            f2 = 0;
            e2 = 0;
            do {
              j2 = c[i2 + (f2 << 2) >> 2] | 0;
              if (!(c[j2 + 204 >> 2] & 3)) {
                c[j2 + 208 >> 2] = e2;
                e2 = e2 + 1 | 0;
              }
              c[j2 + 212 >> 2] = -1;
              g[j2 + 264 >> 2] = 1;
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (h2 | 0));
            j2 = e2;
          } else
            j2 = 0;
          i2 = c[b2 + 8 >> 2] | 0;
          if ((i2 | 0) < (j2 | 0)) {
            if ((c[b2 + 12 >> 2] | 0) < (j2 | 0)) {
              if (!j2) {
                e2 = 0;
                h2 = i2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((j2 << 3 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                h2 = c[b2 + 8 >> 2] | 0;
              }
              if ((h2 | 0) > 0) {
                f2 = 0;
                do {
                  m2 = (c[b2 + 16 >> 2] | 0) + (f2 << 3) | 0;
                  k2 = c[m2 + 4 >> 2] | 0;
                  l2 = e2 + (f2 << 3) | 0;
                  c[l2 >> 2] = c[m2 >> 2];
                  c[l2 + 4 >> 2] = k2;
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (h2 | 0));
              }
              f2 = c[b2 + 16 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 20 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 16 >> 2] = 0;
              }
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = e2;
              c[b2 + 12 >> 2] = j2;
              f2 = b2 + 16 | 0;
            } else
              f2 = b2 + 16 | 0;
            e2 = i2;
            do {
              m2 = (c[f2 >> 2] | 0) + (e2 << 3) | 0;
              c[m2 >> 2] = 0;
              c[m2 + 4 >> 2] = 0;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (j2 | 0));
          }
          c[b2 + 8 >> 2] = j2;
          if ((j2 | 0) > 0) {
            f2 = c[b2 + 16 >> 2] | 0;
            e2 = 0;
            do {
              c[f2 + (e2 << 3) >> 2] = e2;
              c[f2 + (e2 << 3) + 4 >> 2] = 1;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (j2 | 0));
          }
          e2 = c[d2 + 68 >> 2] | 0;
          e2 = ob[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0;
          l2 = ob[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0;
          if (!l2)
            return;
          k2 = ob[c[(c[e2 >> 2] | 0) + 20 >> 2] & 127](e2) | 0;
          if ((l2 | 0) <= 0)
            return;
          d2 = 0;
          do {
            e2 = c[c[k2 + (d2 << 4) >> 2] >> 2] | 0;
            f2 = c[c[k2 + (d2 << 4) + 4 >> 2] >> 2] | 0;
            if ((e2 | 0 ? f2 | 0 ? (c[e2 + 204 >> 2] & 7 | 0) == 0 : 0 : 0) ? (c[f2 + 204 >> 2] & 7 | 0) == 0 : 0) {
              i2 = c[e2 + 208 >> 2] | 0;
              e2 = c[f2 + 208 >> 2] | 0;
              j2 = c[b2 + 16 >> 2] | 0;
              f2 = c[j2 + (i2 << 3) >> 2] | 0;
              if ((f2 | 0) != (i2 | 0)) {
                h2 = j2 + (i2 << 3) | 0;
                do {
                  i2 = j2 + (f2 << 3) | 0;
                  c[h2 >> 2] = c[i2 >> 2];
                  i2 = c[i2 >> 2] | 0;
                  h2 = j2 + (i2 << 3) | 0;
                  f2 = c[h2 >> 2] | 0;
                } while ((i2 | 0) != (f2 | 0));
              }
              f2 = c[j2 + (e2 << 3) >> 2] | 0;
              if ((f2 | 0) != (e2 | 0)) {
                h2 = j2 + (e2 << 3) | 0;
                do {
                  e2 = j2 + (f2 << 3) | 0;
                  c[h2 >> 2] = c[e2 >> 2];
                  e2 = c[e2 >> 2] | 0;
                  h2 = j2 + (e2 << 3) | 0;
                  f2 = c[h2 >> 2] | 0;
                } while ((e2 | 0) != (f2 | 0));
              }
              if ((i2 | 0) != (e2 | 0)) {
                c[j2 + (i2 << 3) >> 2] = e2;
                m2 = j2 + (e2 << 3) + 4 | 0;
                c[m2 >> 2] = (c[m2 >> 2] | 0) + (c[j2 + (i2 << 3) + 4 >> 2] | 0);
              }
            }
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) != (l2 | 0));
          return;
        }
        function bf(b2, d2, e2, f2, g2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          var h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          a:
            do
              if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
                if ((c[d2 + 4 >> 2] | 0) == (e2 | 0) ? (c[d2 + 28 >> 2] | 0) != 1 : 0)
                  c[d2 + 28 >> 2] = f2;
              } else {
                if ((b2 | 0) != (c[d2 >> 2] | 0)) {
                  i2 = c[b2 + 12 >> 2] | 0;
                  Kn(b2 + 16 | 0, d2, e2, f2, g2);
                  if ((i2 | 0) <= 1)
                    break;
                  h2 = c[b2 + 8 >> 2] | 0;
                  if ((h2 & 2 | 0) == 0 ? (c[d2 + 36 >> 2] | 0) != 1 : 0) {
                    if (!(h2 & 1)) {
                      h2 = b2 + 24 | 0;
                      while (1) {
                        if (a[d2 + 54 >> 0] | 0)
                          break a;
                        if ((c[d2 + 36 >> 2] | 0) == 1)
                          break a;
                        Kn(h2, d2, e2, f2, g2);
                        h2 = h2 + 8 | 0;
                        if (h2 >>> 0 >= (b2 + 16 + (i2 << 3) | 0) >>> 0)
                          break a;
                      }
                    }
                    h2 = b2 + 24 | 0;
                    while (1) {
                      if (a[d2 + 54 >> 0] | 0)
                        break a;
                      if ((c[d2 + 36 >> 2] | 0) == 1 ? (c[d2 + 24 >> 2] | 0) == 1 : 0)
                        break a;
                      Kn(h2, d2, e2, f2, g2);
                      h2 = h2 + 8 | 0;
                      if (h2 >>> 0 >= (b2 + 16 + (i2 << 3) | 0) >>> 0)
                        break a;
                    }
                  }
                  h2 = b2 + 24 | 0;
                  while (1) {
                    if (a[d2 + 54 >> 0] | 0)
                      break a;
                    Kn(h2, d2, e2, f2, g2);
                    h2 = h2 + 8 | 0;
                    if (h2 >>> 0 >= (b2 + 16 + (i2 << 3) | 0) >>> 0)
                      break a;
                  }
                }
                if ((c[d2 + 16 >> 2] | 0) != (e2 | 0) ? (c[d2 + 20 >> 2] | 0) != (e2 | 0) : 0) {
                  c[d2 + 32 >> 2] = f2;
                  if ((c[d2 + 44 >> 2] | 0) == 4)
                    break;
                  j2 = b2 + 16 + (c[b2 + 12 >> 2] << 3) | 0;
                  h2 = 0;
                  i2 = b2 + 16 | 0;
                  k2 = 0;
                  b:
                    while (1) {
                      if (i2 >>> 0 >= j2 >>> 0) {
                        f2 = 20;
                        break;
                      }
                      a[d2 + 52 >> 0] = 0;
                      a[d2 + 53 >> 0] = 0;
                      wn(i2, d2, e2, e2, 1, g2);
                      if (a[d2 + 54 >> 0] | 0) {
                        f2 = 20;
                        break;
                      }
                      do
                        if (a[d2 + 53 >> 0] | 0) {
                          if (!(a[d2 + 52 >> 0] | 0))
                            if (!(c[b2 + 8 >> 2] & 1)) {
                              h2 = 1;
                              f2 = 20;
                              break b;
                            } else {
                              h2 = 1;
                              f2 = k2;
                              break;
                            }
                          if ((c[d2 + 24 >> 2] | 0) == 1) {
                            f2 = 25;
                            break b;
                          }
                          if (!(c[b2 + 8 >> 2] & 2)) {
                            f2 = 25;
                            break b;
                          } else {
                            h2 = 1;
                            f2 = 1;
                          }
                        } else
                          f2 = k2;
                      while (0);
                      i2 = i2 + 8 | 0;
                      k2 = f2;
                    }
                  do
                    if ((f2 | 0) == 20) {
                      if ((!k2 ? (c[d2 + 20 >> 2] = e2, c[d2 + 40 >> 2] = (c[d2 + 40 >> 2] | 0) + 1, (c[d2 + 36 >> 2] | 0) == 1) : 0) ? (c[d2 + 24 >> 2] | 0) == 2 : 0) {
                        a[d2 + 54 >> 0] = 1;
                        if (h2) {
                          f2 = 25;
                          break;
                        } else {
                          h2 = 4;
                          break;
                        }
                      }
                      if (h2)
                        f2 = 25;
                      else
                        h2 = 4;
                    }
                  while (0);
                  if ((f2 | 0) == 25)
                    h2 = 3;
                  c[d2 + 44 >> 2] = h2;
                  break;
                }
                if ((f2 | 0) == 1)
                  c[d2 + 32 >> 2] = 1;
              }
            while (0);
          return;
        }
        function cf(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          i2 = ic(1147) | 0;
          if (!i2)
            i2 = 0;
          else {
            c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
            i2 = i2 + 4 + 15 & -16;
          }
          c[i2 + 4 >> 2] = 7;
          c[i2 + 8 >> 2] = -1;
          c[i2 + 12 >> 2] = -1;
          g[i2 + 16 >> 2] = 34028234663852886e22;
          a[i2 + 20 >> 0] = 1;
          a[i2 + 21 >> 0] = 0;
          c[i2 + 24 >> 2] = -1;
          j2 = i2 + 28 | 0;
          c[j2 >> 2] = b2;
          b2 = i2 + 32 | 0;
          c[b2 >> 2] = d2;
          g[i2 + 36 >> 2] = 0;
          g[i2 + 40 >> 2] = 0.30000001192092896;
          c[i2 + 44 >> 2] = 0;
          c[i2 >> 2] = 4624;
          a[i2 + 48 >> 0] = 0;
          d2 = i2 + 52 | 0;
          c[d2 >> 2] = c[e2 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
          d2 = i2 + 68 | 0;
          c[d2 >> 2] = c[e2 + 16 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          d2 = i2 + 84 | 0;
          c[d2 >> 2] = c[e2 + 32 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          d2 = i2 + 100 | 0;
          c[d2 >> 2] = c[e2 + 48 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          e2 = i2 + 116 | 0;
          c[e2 >> 2] = c[f2 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
          e2 = i2 + 132 | 0;
          c[e2 >> 2] = c[f2 + 16 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
          e2 = i2 + 148 | 0;
          c[e2 >> 2] = c[f2 + 32 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
          e2 = i2 + 164 | 0;
          c[e2 >> 2] = c[f2 + 48 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
          a[i2 + 180 >> 0] = h2 & 1;
          g[i2 + 184 >> 2] = 1;
          g[i2 + 188 >> 2] = -1;
          g[i2 + 192 >> 2] = 0;
          g[i2 + 196 >> 2] = 0;
          g[i2 + 200 >> 2] = 1;
          g[i2 + 204 >> 2] = 0.699999988079071;
          g[i2 + 208 >> 2] = 0;
          g[i2 + 212 >> 2] = 0;
          g[i2 + 216 >> 2] = 1;
          g[i2 + 220 >> 2] = 0.699999988079071;
          g[i2 + 224 >> 2] = 0;
          g[i2 + 228 >> 2] = 0;
          g[i2 + 264 >> 2] = 1;
          g[i2 + 268 >> 2] = 0.699999988079071;
          g[i2 + 272 >> 2] = 1;
          g[i2 + 276 >> 2] = 0;
          g[i2 + 280 >> 2] = 1;
          g[i2 + 284 >> 2] = 0.699999988079071;
          g[i2 + 288 >> 2] = 1;
          g[i2 + 292 >> 2] = 0;
          g[i2 + 232 >> 2] = 1;
          g[i2 + 236 >> 2] = 0.699999988079071;
          g[i2 + 240 >> 2] = 1;
          g[i2 + 244 >> 2] = 0;
          g[i2 + 248 >> 2] = 1;
          g[i2 + 252 >> 2] = 0.699999988079071;
          g[i2 + 256 >> 2] = 1;
          g[i2 + 260 >> 2] = 0;
          a[i2 + 1096 >> 0] = 0;
          h2 = i2 + 1100 | 0;
          g[i2 + 1116 >> 2] = 0;
          g[i2 + 1120 >> 2] = 0;
          g[i2 + 1124 >> 2] = 0;
          c[i2 + 300 >> 2] = 0;
          c[h2 >> 2] = 0;
          c[h2 + 4 >> 2] = 0;
          c[h2 + 8 >> 2] = 0;
          a[h2 + 12 >> 0] = 0;
          a[i2 + 49 >> 0] = 1;
          Tc(i2, (c[j2 >> 2] | 0) + 4 | 0, (c[b2 >> 2] | 0) + 4 | 0);
          return i2 | 0;
        }
        function df(d2, e2, f2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          c[6040] = (c[6040] | 0) + 1;
          g2 = c[d2 + 24 >> 2] | 0;
          if (!g2) {
            g2 = c[e2 + 4 >> 2] | 0;
            if (!((b[f2 + 6 >> 1] & (g2 & 65535)) << 16 >> 16)) {
              d2 = 0;
              return d2 | 0;
            }
            if (!((b[f2 + 4 >> 1] & (g2 >>> 16 & 65535)) << 16 >> 16)) {
              d2 = 0;
              return d2 | 0;
            }
          } else if (!(yb[c[(c[g2 >> 2] | 0) + 8 >> 2] & 63](g2, e2, f2) | 0)) {
            d2 = 0;
            return d2 | 0;
          }
          l2 = (c[e2 + 12 >> 2] | 0) > (c[f2 + 12 >> 2] | 0);
          m2 = l2 ? f2 : e2;
          h2 = c[m2 + 12 >> 2] | 0;
          l2 = l2 ? e2 : f2;
          e2 = c[l2 + 12 >> 2] | 0;
          j2 = ((e2 << 16 | h2) + ~((e2 << 16 | h2) << 15) >> 10 ^ (e2 << 16 | h2) + ~((e2 << 16 | h2) << 15)) * 9 | 0;
          j2 = (j2 >> 6 ^ j2) + ~((j2 >> 6 ^ j2) << 11) >> 16 ^ (j2 >> 6 ^ j2) + ~((j2 >> 6 ^ j2) << 11);
          k2 = c[d2 + 12 >> 2] | 0;
          g2 = c[(c[d2 + 40 >> 2] | 0) + ((j2 & k2 + -1) << 2) >> 2] | 0;
          a:
            do
              if ((g2 | 0) != -1) {
                f2 = c[d2 + 16 >> 2] | 0;
                while (1) {
                  if ((c[(c[f2 + (g2 << 4) >> 2] | 0) + 12 >> 2] | 0) == (h2 | 0) ? (c[(c[f2 + (g2 << 4) + 4 >> 2] | 0) + 12 >> 2] | 0) == (e2 | 0) : 0)
                    break;
                  g2 = c[(c[d2 + 60 >> 2] | 0) + (g2 << 2) >> 2] | 0;
                  if ((g2 | 0) == -1)
                    break a;
                }
                g2 = f2 + (g2 << 4) | 0;
                if (g2 | 0) {
                  d2 = g2;
                  return d2 | 0;
                }
              }
            while (0);
          i2 = c[d2 + 8 >> 2] | 0;
          if ((i2 | 0) == (k2 | 0)) {
            h2 = k2 | 0 ? k2 << 1 : 1;
            if ((k2 | 0) < (h2 | 0)) {
              if (!h2) {
                g2 = 0;
                e2 = k2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                g2 = ic((h2 << 4 | 3) + 16 | 0) | 0;
                if (!g2)
                  g2 = 0;
                else {
                  c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
                  g2 = g2 + 4 + 15 & -16;
                }
                e2 = c[d2 + 8 >> 2] | 0;
              }
              if ((e2 | 0) > 0) {
                f2 = 0;
                do {
                  n2 = c[d2 + 16 >> 2] | 0;
                  c[g2 + (f2 << 4) >> 2] = c[n2 + (f2 << 4) >> 2];
                  c[g2 + (f2 << 4) + 4 >> 2] = c[n2 + (f2 << 4) + 4 >> 2];
                  c[g2 + (f2 << 4) + 8 >> 2] = c[n2 + (f2 << 4) + 8 >> 2];
                  c[g2 + (f2 << 4) + 12 >> 2] = c[n2 + (f2 << 4) + 12 >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (e2 | 0));
              }
              f2 = c[d2 + 16 >> 2] | 0;
              if (f2) {
                if (a[d2 + 20 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                  e2 = c[d2 + 8 >> 2] | 0;
                }
                c[d2 + 16 >> 2] = 0;
              }
              a[d2 + 20 >> 0] = 1;
              c[d2 + 16 >> 2] = g2;
              c[d2 + 12 >> 2] = h2;
              g2 = h2;
            } else {
              e2 = k2;
              g2 = k2;
            }
          } else {
            e2 = i2;
            g2 = k2;
          }
          c[d2 + 8 >> 2] = e2 + 1;
          f2 = c[d2 + 16 >> 2] | 0;
          e2 = c[d2 + 68 >> 2] | 0;
          if (e2) {
            yb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 63](e2, m2, l2) | 0;
            g2 = c[d2 + 12 >> 2] | 0;
          }
          if ((k2 | 0) < (g2 | 0)) {
            tf(d2);
            g2 = (c[d2 + 12 >> 2] | 0) + -1 & j2;
          } else
            g2 = j2 & k2 + -1;
          n2 = (c[m2 + 12 >> 2] | 0) < (c[l2 + 12 >> 2] | 0);
          c[f2 + (i2 << 4) >> 2] = n2 ? m2 : l2;
          c[f2 + (i2 << 4) + 4 >> 2] = n2 ? l2 : m2;
          c[f2 + (i2 << 4) + 8 >> 2] = 0;
          c[f2 + (i2 << 4) + 8 + 4 >> 2] = 0;
          n2 = (c[d2 + 40 >> 2] | 0) + (g2 << 2) | 0;
          c[(c[d2 + 60 >> 2] | 0) + (i2 << 2) >> 2] = c[n2 >> 2];
          c[n2 >> 2] = i2;
          n2 = f2 + (i2 << 4) | 0;
          return n2 | 0;
        }
        function ef(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
          u2 = +g[b2 >> 2];
          t2 = +g[b2 + 4 >> 2];
          s2 = +g[b2 + 8 >> 2];
          r2 = 1 / +G(+(u2 * u2 + t2 * t2 + s2 * s2));
          y2 = +g[d2 >> 2];
          x2 = +g[d2 + 4 >> 2];
          w2 = +g[d2 + 8 >> 2];
          v2 = 1 / +G(+(y2 * y2 + x2 * x2 + w2 * w2));
          B2 = s2 * r2 * x2 * v2 - t2 * r2 * w2 * v2;
          A2 = u2 * r2 * w2 * v2 - s2 * r2 * y2 * v2;
          z2 = t2 * r2 * y2 * v2 - u2 * r2 * x2 * v2;
          d2 = c[a2 + 28 >> 2] | 0;
          e2 = +g[d2 + 4 >> 2];
          h2 = +g[d2 + 20 >> 2];
          j2 = +g[d2 + 36 >> 2];
          f2 = +g[d2 + 8 >> 2];
          i2 = +g[d2 + 24 >> 2];
          k2 = +g[d2 + 40 >> 2];
          l2 = +g[d2 + 12 >> 2];
          n2 = +g[d2 + 28 >> 2];
          p2 = +g[d2 + 44 >> 2];
          m2 = -+g[d2 + 52 >> 2];
          o2 = -+g[d2 + 56 >> 2];
          q2 = -+g[d2 + 60 >> 2];
          g[a2 + 48 >> 2] = z2 * j2 + (e2 * B2 + h2 * A2);
          g[a2 + 52 >> 2] = e2 * y2 * v2 + x2 * v2 * h2 + w2 * v2 * j2;
          g[a2 + 56 >> 2] = u2 * r2 * e2 + t2 * r2 * h2 + s2 * r2 * j2;
          g[a2 + 60 >> 2] = 0;
          g[a2 + 64 >> 2] = B2 * f2 + A2 * i2 + z2 * k2;
          g[a2 + 68 >> 2] = y2 * v2 * f2 + x2 * v2 * i2 + w2 * v2 * k2;
          g[a2 + 72 >> 2] = u2 * r2 * f2 + t2 * r2 * i2 + s2 * r2 * k2;
          g[a2 + 76 >> 2] = 0;
          g[a2 + 80 >> 2] = B2 * l2 + A2 * n2 + z2 * p2;
          g[a2 + 84 >> 2] = y2 * v2 * l2 + x2 * v2 * n2 + w2 * v2 * p2;
          g[a2 + 88 >> 2] = u2 * r2 * l2 + t2 * r2 * n2 + s2 * r2 * p2;
          g[a2 + 92 >> 2] = 0;
          g[a2 + 96 >> 2] = e2 * 0 + h2 * 0 + j2 * 0 + (e2 * m2 + h2 * o2 + j2 * q2);
          g[a2 + 100 >> 2] = f2 * 0 + i2 * 0 + k2 * 0 + (f2 * m2 + i2 * o2 + k2 * q2);
          g[a2 + 104 >> 2] = l2 * 0 + n2 * 0 + p2 * 0 + (l2 * m2 + n2 * o2 + p2 * q2);
          g[a2 + 108 >> 2] = 0;
          d2 = c[a2 + 32 >> 2] | 0;
          q2 = +g[d2 + 4 >> 2];
          p2 = +g[d2 + 20 >> 2];
          o2 = +g[d2 + 36 >> 2];
          n2 = +g[d2 + 8 >> 2];
          m2 = +g[d2 + 24 >> 2];
          l2 = +g[d2 + 40 >> 2];
          k2 = +g[d2 + 12 >> 2];
          i2 = +g[d2 + 28 >> 2];
          f2 = +g[d2 + 44 >> 2];
          j2 = -+g[d2 + 52 >> 2];
          h2 = -+g[d2 + 56 >> 2];
          e2 = -+g[d2 + 60 >> 2];
          g[a2 + 112 >> 2] = B2 * q2 + A2 * p2 + z2 * o2;
          g[a2 + 116 >> 2] = y2 * v2 * q2 + x2 * v2 * p2 + w2 * v2 * o2;
          g[a2 + 120 >> 2] = u2 * r2 * q2 + t2 * r2 * p2 + s2 * r2 * o2;
          g[a2 + 124 >> 2] = 0;
          g[a2 + 128 >> 2] = B2 * n2 + A2 * m2 + z2 * l2;
          g[a2 + 132 >> 2] = y2 * v2 * n2 + x2 * v2 * m2 + w2 * v2 * l2;
          g[a2 + 136 >> 2] = u2 * r2 * n2 + t2 * r2 * m2 + s2 * r2 * l2;
          g[a2 + 140 >> 2] = 0;
          g[a2 + 144 >> 2] = B2 * k2 + A2 * i2 + z2 * f2;
          g[a2 + 148 >> 2] = y2 * v2 * k2 + x2 * v2 * i2 + w2 * v2 * f2;
          g[a2 + 152 >> 2] = u2 * r2 * k2 + t2 * r2 * i2 + s2 * r2 * f2;
          g[a2 + 156 >> 2] = 0;
          g[a2 + 160 >> 2] = q2 * 0 + p2 * 0 + o2 * 0 + (q2 * j2 + p2 * h2 + o2 * e2);
          g[a2 + 164 >> 2] = n2 * 0 + m2 * 0 + l2 * 0 + (n2 * j2 + m2 * h2 + l2 * e2);
          g[a2 + 168 >> 2] = k2 * 0 + i2 * 0 + f2 * 0 + (k2 * j2 + i2 * h2 + f2 * e2);
          g[a2 + 172 >> 2] = 0;
          ed(a2, (c[a2 + 28 >> 2] | 0) + 4 | 0, (c[a2 + 32 >> 2] | 0) + 4 | 0);
          return;
        }
        function ff(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
          w2 = i;
          i = i + 32 | 0;
          q2 = c[a2 + 12 >> 2] | 0;
          r2 = +g[q2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) >> 2];
          t2 = +g[q2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) + 4 >> 2];
          u2 = +g[q2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) + 8 >> 2];
          v2 = +g[q2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) + 16 >> 2];
          s2 = c[q2 + (((e2 + d2 | 0) / 2 | 0) * 24 | 0) + 20 >> 2] | 0;
          f2 = e2;
          h2 = d2;
          while (1) {
            m2 = +g[b2 >> 2];
            n2 = +g[b2 + 4 >> 2];
            o2 = +g[b2 + 8 >> 2];
            p2 = (r2 - m2) * (r2 - m2) + (t2 - n2) * (t2 - n2) + (u2 - o2) * (u2 - o2);
            a:
              while (1) {
                j2 = +g[q2 + (h2 * 24 | 0) + 16 >> 2];
                do
                  if (j2 != v2) {
                    if (!(j2 < v2))
                      break a;
                  } else {
                    j2 = +g[q2 + (h2 * 24 | 0) >> 2] - m2;
                    k2 = +g[q2 + (h2 * 24 | 0) + 4 >> 2] - n2;
                    l2 = +g[q2 + (h2 * 24 | 0) + 8 >> 2] - o2;
                    if (j2 * j2 + k2 * k2 + l2 * l2 != p2)
                      if (j2 * j2 + k2 * k2 + l2 * l2 < p2)
                        break;
                      else
                        break a;
                    else if ((c[q2 + (h2 * 24 | 0) + 20 >> 2] | 0) < (s2 | 0))
                      break;
                    else
                      break a;
                  }
                while (0);
                h2 = h2 + 1 | 0;
              }
            b:
              while (1) {
                j2 = +g[q2 + (f2 * 24 | 0) + 16 >> 2];
                do
                  if (v2 != j2) {
                    if (!(v2 < j2))
                      break b;
                  } else {
                    j2 = +g[q2 + (f2 * 24 | 0) >> 2] - m2;
                    k2 = +g[q2 + (f2 * 24 | 0) + 4 >> 2] - n2;
                    l2 = +g[q2 + (f2 * 24 | 0) + 8 >> 2] - o2;
                    if (p2 != j2 * j2 + k2 * k2 + l2 * l2)
                      if (p2 < j2 * j2 + k2 * k2 + l2 * l2)
                        break;
                      else
                        break b;
                    else if ((s2 | 0) < (c[q2 + (f2 * 24 | 0) + 20 >> 2] | 0))
                      break;
                    else
                      break b;
                  }
                while (0);
                f2 = f2 + -1 | 0;
              }
            if ((h2 | 0) <= (f2 | 0)) {
              x2 = q2 + (h2 * 24 | 0) | 0;
              c[w2 >> 2] = c[x2 >> 2];
              c[w2 + 4 >> 2] = c[x2 + 4 >> 2];
              c[w2 + 8 >> 2] = c[x2 + 8 >> 2];
              c[w2 + 12 >> 2] = c[x2 + 12 >> 2];
              c[w2 + 16 >> 2] = c[x2 + 16 >> 2];
              c[w2 + 20 >> 2] = c[x2 + 20 >> 2];
              q2 = q2 + (f2 * 24 | 0) | 0;
              c[x2 >> 2] = c[q2 >> 2];
              c[x2 + 4 >> 2] = c[q2 + 4 >> 2];
              c[x2 + 8 >> 2] = c[q2 + 8 >> 2];
              c[x2 + 12 >> 2] = c[q2 + 12 >> 2];
              c[x2 + 16 >> 2] = c[q2 + 16 >> 2];
              c[x2 + 20 >> 2] = c[q2 + 20 >> 2];
              q2 = (c[a2 + 12 >> 2] | 0) + (f2 * 24 | 0) | 0;
              c[q2 >> 2] = c[w2 >> 2];
              c[q2 + 4 >> 2] = c[w2 + 4 >> 2];
              c[q2 + 8 >> 2] = c[w2 + 8 >> 2];
              c[q2 + 12 >> 2] = c[w2 + 12 >> 2];
              c[q2 + 16 >> 2] = c[w2 + 16 >> 2];
              c[q2 + 20 >> 2] = c[w2 + 20 >> 2];
              f2 = f2 + -1 | 0;
              h2 = h2 + 1 | 0;
            }
            if ((h2 | 0) > (f2 | 0))
              break;
            q2 = c[a2 + 12 >> 2] | 0;
          }
          if ((f2 | 0) > (d2 | 0))
            ff(a2, b2, d2, f2);
          if ((h2 | 0) >= (e2 | 0)) {
            i = w2;
            return;
          }
          ff(a2, b2, h2, e2);
          i = w2;
          return;
        }
        function gf(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
          z2 = c[a2 + 872 >> 2] | 0;
          if ((z2 | 0) <= 0)
            return;
          u2 = c[a2 + 880 >> 2] | 0;
          i2 = 0;
          do {
            y2 = c[u2 + (i2 * 56 | 0) >> 2] | 0;
            n2 = c[u2 + (i2 * 56 | 0) + 4 >> 2] | 0;
            a2 = c[n2 + 8 >> 2] | 0;
            e2 = c[n2 + 12 >> 2] | 0;
            f2 = c[n2 + 16 >> 2] | 0;
            j2 = u2 + (i2 * 56 | 0) + 8 | 0;
            w2 = +g[j2 >> 2];
            k2 = u2 + (i2 * 56 | 0) + 12 | 0;
            v2 = +g[k2 >> 2];
            m2 = u2 + (i2 * 56 | 0) + 16 | 0;
            t2 = +g[m2 >> 2];
            b2 = +g[a2 + 8 >> 2] * w2 + +g[e2 + 8 >> 2] * v2 + +g[f2 + 8 >> 2] * t2;
            d2 = +g[a2 + 12 >> 2] * w2 + +g[e2 + 12 >> 2] * v2 + +g[f2 + 12 >> 2] * t2;
            h2 = +g[a2 + 16 >> 2] * w2 + +g[e2 + 16 >> 2] * v2 + +g[f2 + 16 >> 2] * t2;
            o2 = +g[y2 + 8 >> 2];
            p2 = +g[y2 + 12 >> 2];
            q2 = +g[y2 + 16 >> 2];
            r2 = o2 - +g[y2 + 24 >> 2] - (b2 - (w2 * +g[a2 + 24 >> 2] + v2 * +g[e2 + 24 >> 2] + t2 * +g[f2 + 24 >> 2]));
            s2 = p2 - +g[y2 + 28 >> 2] - (d2 - (w2 * +g[a2 + 28 >> 2] + v2 * +g[e2 + 28 >> 2] + t2 * +g[f2 + 28 >> 2]));
            t2 = q2 - +g[y2 + 32 >> 2] - (h2 - (w2 * +g[a2 + 32 >> 2] + v2 * +g[e2 + 32 >> 2] + t2 * +g[f2 + 32 >> 2]));
            v2 = +g[u2 + (i2 * 56 | 0) + 24 >> 2];
            w2 = +g[u2 + (i2 * 56 | 0) + 28 >> 2];
            x2 = +g[u2 + (i2 * 56 | 0) + 32 >> 2];
            if (r2 * v2 + s2 * w2 + t2 * x2 < 0) {
              h2 = +g[u2 + (i2 * 56 | 0) + 40 >> 2] - (o2 * v2 + p2 * w2 + q2 * x2 - (b2 * v2 + d2 * w2 + h2 * x2));
              a2 = (g[l >> 2] = v2 * h2 + 0, c[l >> 2] | 0);
              e2 = (g[l >> 2] = w2 * h2 + 0, c[l >> 2] | 0);
              f2 = (g[l >> 2] = x2 * h2 + 0, c[l >> 2] | 0);
            } else {
              a2 = 0;
              e2 = 0;
              f2 = 0;
            }
            b2 = +g[u2 + (i2 * 56 | 0) + 44 >> 2];
            d2 = (c[l >> 2] = a2, +g[l >> 2]) - b2 * (r2 - v2 * (r2 * v2 + s2 * w2 + t2 * x2));
            h2 = (c[l >> 2] = e2, +g[l >> 2]) - b2 * (s2 - w2 * (r2 * v2 + s2 * w2 + t2 * x2));
            w2 = (c[l >> 2] = f2, +g[l >> 2]) - b2 * (t2 - x2 * (r2 * v2 + s2 * w2 + t2 * x2));
            x2 = +g[u2 + (i2 * 56 | 0) + 48 >> 2];
            g[y2 + 8 >> 2] = o2 + x2 * d2;
            g[y2 + 12 >> 2] = p2 + x2 * h2;
            g[y2 + 16 >> 2] = x2 * w2 + q2;
            y2 = c[n2 + 8 >> 2] | 0;
            f2 = u2 + (i2 * 56 | 0) + 52 | 0;
            x2 = +g[f2 >> 2] * +g[j2 >> 2];
            g[y2 + 8 >> 2] = +g[y2 + 8 >> 2] - d2 * x2;
            g[y2 + 12 >> 2] = +g[y2 + 12 >> 2] - h2 * x2;
            g[y2 + 16 >> 2] = +g[y2 + 16 >> 2] - w2 * x2;
            y2 = c[n2 + 12 >> 2] | 0;
            x2 = +g[f2 >> 2] * +g[k2 >> 2];
            g[y2 + 8 >> 2] = +g[y2 + 8 >> 2] - d2 * x2;
            g[y2 + 12 >> 2] = +g[y2 + 12 >> 2] - h2 * x2;
            g[y2 + 16 >> 2] = +g[y2 + 16 >> 2] - w2 * x2;
            y2 = c[n2 + 16 >> 2] | 0;
            x2 = +g[f2 >> 2] * +g[m2 >> 2];
            g[y2 + 8 >> 2] = +g[y2 + 8 >> 2] - d2 * x2;
            g[y2 + 12 >> 2] = +g[y2 + 12 >> 2] - h2 * x2;
            g[y2 + 16 >> 2] = +g[y2 + 16 >> 2] - w2 * x2;
            i2 = i2 + 1 | 0;
          } while ((i2 | 0) != (z2 | 0));
          return;
        }
        function Bc(b2, e2, f2, h2, j2, k2, m2) {
          b2 = b2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0;
          w2 = i;
          i = i + 19040 | 0;
          q2 = k2;
          r2 = q2 + 36 | 0;
          do {
            c[q2 >> 2] = 0;
            q2 = q2 + 4 | 0;
          } while ((q2 | 0) < (r2 | 0));
          c[w2 + 18896 >> 2] = b2;
          c[w2 + 18896 + 4 >> 2] = f2;
          z2 = +g[h2 >> 2];
          M2 = +g[e2 >> 2];
          A2 = +g[h2 + 16 >> 2];
          C2 = +g[e2 + 16 >> 2];
          B2 = +g[h2 + 32 >> 2];
          N2 = +g[e2 + 32 >> 2];
          D2 = +g[e2 + 4 >> 2];
          O2 = +g[e2 + 20 >> 2];
          E2 = +g[e2 + 36 >> 2];
          s2 = +g[e2 + 8 >> 2];
          n2 = +g[e2 + 24 >> 2];
          y2 = +g[e2 + 40 >> 2];
          L2 = +g[h2 + 4 >> 2];
          K2 = +g[h2 + 20 >> 2];
          J2 = +g[h2 + 36 >> 2];
          I2 = +g[h2 + 8 >> 2];
          H2 = +g[h2 + 24 >> 2];
          F2 = +g[h2 + 40 >> 2];
          g[w2 + 18896 + 8 >> 2] = z2 * M2 + A2 * C2 + B2 * N2;
          g[w2 + 18896 + 12 >> 2] = z2 * D2 + A2 * O2 + B2 * E2;
          g[w2 + 18896 + 16 >> 2] = z2 * s2 + A2 * n2 + B2 * y2;
          g[w2 + 18896 + 20 >> 2] = 0;
          g[w2 + 18896 + 24 >> 2] = M2 * L2 + C2 * K2 + N2 * J2;
          g[w2 + 18896 + 28 >> 2] = D2 * L2 + O2 * K2 + E2 * J2;
          g[w2 + 18896 + 32 >> 2] = s2 * L2 + n2 * K2 + y2 * J2;
          g[w2 + 18896 + 36 >> 2] = 0;
          g[w2 + 18896 + 40 >> 2] = M2 * I2 + C2 * H2 + N2 * F2;
          g[w2 + 18896 + 44 >> 2] = D2 * I2 + O2 * H2 + E2 * F2;
          g[w2 + 18896 + 48 >> 2] = s2 * I2 + n2 * H2 + y2 * F2;
          g[w2 + 18896 + 52 >> 2] = 0;
          y2 = +g[h2 + 48 >> 2] - +g[e2 + 48 >> 2];
          n2 = +g[h2 + 52 >> 2] - +g[e2 + 52 >> 2];
          s2 = +g[h2 + 56 >> 2] - +g[e2 + 56 >> 2];
          E2 = +g[e2 >> 2];
          O2 = +g[h2 >> 2];
          D2 = +g[e2 + 16 >> 2];
          N2 = +g[h2 + 16 >> 2];
          C2 = +g[e2 + 32 >> 2];
          M2 = +g[h2 + 32 >> 2];
          B2 = +g[e2 + 4 >> 2];
          A2 = +g[e2 + 20 >> 2];
          z2 = +g[e2 + 36 >> 2];
          x2 = +g[e2 + 8 >> 2];
          o2 = +g[e2 + 24 >> 2];
          p2 = +g[e2 + 40 >> 2];
          g[w2 + 18896 + 56 >> 2] = E2 * O2 + D2 * N2 + C2 * M2;
          g[w2 + 18896 + 60 >> 2] = E2 * L2 + D2 * K2 + C2 * J2;
          g[w2 + 18896 + 64 >> 2] = E2 * I2 + D2 * H2 + C2 * F2;
          g[w2 + 18896 + 68 >> 2] = 0;
          g[w2 + 18896 + 72 >> 2] = O2 * B2 + N2 * A2 + M2 * z2;
          g[w2 + 18896 + 76 >> 2] = L2 * B2 + K2 * A2 + J2 * z2;
          g[w2 + 18896 + 80 >> 2] = I2 * B2 + H2 * A2 + F2 * z2;
          g[w2 + 18896 + 84 >> 2] = 0;
          g[w2 + 18896 + 88 >> 2] = O2 * x2 + N2 * o2 + M2 * p2;
          g[w2 + 18896 + 92 >> 2] = L2 * x2 + K2 * o2 + J2 * p2;
          g[w2 + 18896 + 96 >> 2] = I2 * x2 + H2 * o2 + F2 * p2;
          g[w2 + 18896 + 100 >> 2] = 0;
          g[w2 + 18896 + 104 >> 2] = y2 * E2 + n2 * D2 + s2 * C2;
          g[w2 + 18896 + 108 >> 2] = y2 * B2 + n2 * A2 + s2 * z2;
          g[w2 + 18896 + 112 >> 2] = y2 * x2 + n2 * o2 + s2 * p2;
          g[w2 + 18896 + 116 >> 2] = 0;
          c[w2 + 18896 + 120 >> 2] = m2 ? 81 : 80;
          c[w2 + 18896 + 124 >> 2] = 0;
          c[w2 + 18512 + 364 >> 2] = 0;
          c[w2 + 18512 + 128 >> 2] = 0;
          c[w2 + 18512 + 128 + 4 >> 2] = 0;
          c[w2 + 18512 + 128 + 8 >> 2] = 0;
          c[w2 + 18512 + 128 + 12 >> 2] = 0;
          c[w2 + 18512 + 376 >> 2] = 2;
          c[w2 + 18512 + 368 >> 2] = 0;
          g[w2 + 18512 + 144 >> 2] = 0;
          p2 = -+g[j2 + 4 >> 2];
          s2 = -+g[j2 + 8 >> 2];
          g[w2 + 19024 >> 2] = -+g[j2 >> 2];
          g[w2 + 19024 + 4 >> 2] = p2;
          g[w2 + 19024 + 8 >> 2] = s2;
          g[w2 + 19024 + 12 >> 2] = 0;
          switch (Ec(w2 + 18512 | 0, w2 + 18896 | 0, w2 + 19024 | 0) | 0) {
            case 1: {
              c[w2 + 18496 >> 2] = 0;
              c[w2 + 18496 + 4 >> 2] = 0;
              c[w2 + 18496 + 8 >> 2] = 0;
              c[w2 + 18496 + 12 >> 2] = 0;
              c[w2 >> 2] = 9;
              c[w2 + 18492 >> 2] = 0;
              c[w2 + 40 >> 2] = 0;
              c[w2 + 40 + 4 >> 2] = 0;
              c[w2 + 40 + 8 >> 2] = 0;
              c[w2 + 40 + 12 >> 2] = 0;
              c[w2 + 40 + 16 >> 2] = 0;
              b2 = 0;
              do {
                f2 = 256 - b2 + -1 | 0;
                c[w2 + 4156 + (f2 * 56 | 0) + 44 >> 2] = 0;
                h2 = c[w2 + 18504 >> 2] | 0;
                c[w2 + 4156 + (f2 * 56 | 0) + 48 >> 2] = h2;
                if (h2 | 0)
                  c[h2 + 44 >> 2] = w2 + 4156 + (f2 * 56 | 0);
                c[w2 + 18504 >> 2] = w2 + 4156 + (f2 * 56 | 0);
                c[w2 + 18508 >> 2] = (c[w2 + 18508 >> 2] | 0) + 1;
                b2 = b2 + 1 | 0;
              } while ((b2 | 0) != 256);
              p2 = +g[j2 >> 2];
              s2 = +g[j2 + 4 >> 2];
              o2 = +g[j2 + 8 >> 2];
              t2 = c[w2 + 18512 + 372 >> 2] | 0;
              do
                if ((c[t2 + 32 >> 2] | 0) >>> 0 > 1 ? id(w2 + 18512 | 0) | 0 : 0) {
                  b2 = c[w2 + 18496 >> 2] | 0;
                  if (b2 | 0) {
                    q2 = c[w2 + 18500 >> 2] | 0;
                    r2 = c[w2 + 18508 >> 2] | 0;
                    do {
                      f2 = b2 + 44 | 0;
                      m2 = b2 + 48 | 0;
                      h2 = c[m2 >> 2] | 0;
                      if (h2 | 0)
                        c[h2 + 44 >> 2] = c[f2 >> 2];
                      f2 = c[f2 >> 2] | 0;
                      if (f2 | 0)
                        c[f2 + 48 >> 2] = c[m2 >> 2];
                      if ((c[w2 + 18496 >> 2] | 0) == (b2 | 0))
                        c[w2 + 18496 >> 2] = c[m2 >> 2];
                      q2 = q2 + -1 | 0;
                      c[b2 + 44 >> 2] = 0;
                      c[m2 >> 2] = c[w2 + 18504 >> 2];
                      f2 = c[w2 + 18504 >> 2] | 0;
                      if (f2 | 0)
                        c[f2 + 44 >> 2] = b2;
                      c[w2 + 18504 >> 2] = b2;
                      r2 = r2 + 1 | 0;
                      b2 = c[w2 + 18496 >> 2] | 0;
                    } while ((b2 | 0) != 0);
                    c[w2 + 18500 >> 2] = q2;
                    c[w2 + 18508 >> 2] = r2;
                  }
                  c[w2 >> 2] = 0;
                  c[w2 + 18492 >> 2] = 0;
                  b2 = c[t2 >> 2] | 0;
                  f2 = c[t2 + 12 >> 2] | 0;
                  O2 = +g[f2 + 16 >> 2];
                  F2 = +g[b2 + 16 >> 2] - O2;
                  I2 = +g[f2 + 20 >> 2];
                  J2 = +g[b2 + 20 >> 2] - I2;
                  L2 = +g[f2 + 24 >> 2];
                  M2 = +g[b2 + 24 >> 2] - L2;
                  f2 = c[t2 + 4 >> 2] | 0;
                  K2 = +g[f2 + 16 >> 2] - O2;
                  N2 = +g[f2 + 20 >> 2] - I2;
                  H2 = +g[f2 + 24 >> 2] - L2;
                  h2 = c[t2 + 8 >> 2] | 0;
                  O2 = +g[h2 + 16 >> 2] - O2;
                  I2 = +g[h2 + 20 >> 2] - I2;
                  L2 = +g[h2 + 24 >> 2] - L2;
                  if (F2 * N2 * L2 + (J2 * H2 * O2 + M2 * K2 * I2 - F2 * H2 * I2 - J2 * K2 * L2) - M2 * N2 * O2 < 0) {
                    c[t2 >> 2] = f2;
                    c[t2 + 4 >> 2] = b2;
                    m2 = c[t2 + 16 >> 2] | 0;
                    c[t2 + 16 >> 2] = c[t2 + 20 >> 2];
                    c[t2 + 20 >> 2] = m2;
                    m2 = f2;
                  } else {
                    m2 = b2;
                    b2 = f2;
                  }
                  m2 = _e(w2, m2, b2, h2, 1) | 0;
                  q2 = _e(w2, c[t2 + 4 >> 2] | 0, c[t2 >> 2] | 0, c[t2 + 12 >> 2] | 0, 1) | 0;
                  r2 = _e(w2, c[t2 + 8 >> 2] | 0, c[t2 + 4 >> 2] | 0, c[t2 + 12 >> 2] | 0, 1) | 0;
                  j2 = _e(w2, c[t2 >> 2] | 0, c[t2 + 8 >> 2] | 0, c[t2 + 12 >> 2] | 0, 1) | 0;
                  if ((c[w2 + 18500 >> 2] | 0) == 4) {
                    b2 = c[w2 + 18496 >> 2] | 0;
                    n2 = +g[b2 + 16 >> 2];
                    f2 = c[b2 + 48 >> 2] | 0;
                    if (f2) {
                      o2 = n2 * n2;
                      while (1) {
                        n2 = +g[f2 + 16 >> 2];
                        h2 = n2 * n2 < o2;
                        b2 = h2 ? f2 : b2;
                        f2 = c[f2 + 48 >> 2] | 0;
                        if (!f2)
                          break;
                        else
                          o2 = h2 ? n2 * n2 : o2;
                      }
                    }
                    o2 = +g[b2 >> 2];
                    s2 = +g[b2 + 4 >> 2];
                    p2 = +g[b2 + 8 >> 2];
                    n2 = +g[b2 + 12 >> 2];
                    f2 = c[b2 + 16 >> 2] | 0;
                    h2 = c[b2 + 20 >> 2] | 0;
                    Q2 = c[b2 + 24 >> 2] | 0;
                    P2 = c[b2 + 28 >> 2] | 0;
                    a[m2 + 52 >> 0] = 0;
                    c[m2 + 32 >> 2] = q2;
                    a[q2 + 52 >> 0] = 0;
                    c[q2 + 32 >> 2] = m2;
                    a[m2 + 53 >> 0] = 0;
                    c[m2 + 36 >> 2] = r2;
                    a[r2 + 52 >> 0] = 1;
                    c[r2 + 32 >> 2] = m2;
                    a[m2 + 54 >> 0] = 0;
                    c[m2 + 40 >> 2] = j2;
                    a[j2 + 52 >> 0] = 2;
                    c[j2 + 32 >> 2] = m2;
                    a[q2 + 53 >> 0] = 2;
                    c[q2 + 36 >> 2] = j2;
                    a[j2 + 54 >> 0] = 1;
                    c[j2 + 40 >> 2] = q2;
                    a[q2 + 54 >> 0] = 1;
                    c[q2 + 40 >> 2] = r2;
                    a[r2 + 53 >> 0] = 2;
                    c[r2 + 36 >> 2] = q2;
                    a[r2 + 54 >> 0] = 1;
                    c[r2 + 40 >> 2] = j2;
                    a[j2 + 53 >> 0] = 2;
                    c[j2 + 36 >> 2] = r2;
                    c[w2 >> 2] = 0;
                    t2 = b2;
                    u2 = 0;
                    r2 = Q2;
                    j2 = P2;
                    b2 = f2;
                    while (1) {
                      m2 = c[w2 + 18492 >> 2] | 0;
                      if (m2 >>> 0 >= 128) {
                        v2 = 43;
                        break;
                      }
                      c[w2 + 19024 >> 2] = 0;
                      c[w2 + 19024 + 4 >> 2] = 0;
                      c[w2 + 19024 + 8 >> 2] = 0;
                      c[w2 + 18492 >> 2] = m2 + 1;
                      u2 = u2 + 1 | 0;
                      a[t2 + 55 >> 0] = u2;
                      P2 = t2 + 4 | 0;
                      Q2 = t2 + 8 | 0;
                      Ch(w2 + 18512 | 0, +g[t2 >> 2], +g[P2 >> 2], +g[Q2 >> 2], w2 + 60 + (m2 << 5) | 0);
                      if (+g[t2 >> 2] * +g[w2 + 60 + (m2 << 5) + 16 >> 2] + +g[P2 >> 2] * +g[w2 + 60 + (m2 << 5) + 20 >> 2] + +g[Q2 >> 2] * +g[w2 + 60 + (m2 << 5) + 24 >> 2] - +g[t2 + 16 >> 2] > 9999999747378752e-20)
                        f2 = 0;
                      else {
                        f2 = 7;
                        v2 = 42;
                        break;
                      }
                      do {
                        q2 = lh(w2, u2, w2 + 60 + (m2 << 5) | 0, c[t2 + 32 + (f2 << 2) >> 2] | 0, d[t2 + 52 + f2 >> 0] | 0, w2 + 19024 | 0) | 0;
                        f2 = f2 + 1 | 0;
                      } while (q2 & f2 >>> 0 < 3);
                      if (!(q2 & (c[w2 + 19024 + 8 >> 2] | 0) >>> 0 > 2)) {
                        f2 = 4;
                        v2 = 42;
                        break;
                      }
                      h2 = c[w2 + 19024 >> 2] | 0;
                      b2 = c[w2 + 19024 + 4 >> 2] | 0;
                      a[h2 + 53 >> 0] = 2;
                      c[h2 + 36 >> 2] = b2;
                      a[b2 + 54 >> 0] = 1;
                      c[b2 + 40 >> 2] = h2;
                      b2 = t2 + 44 | 0;
                      h2 = t2 + 48 | 0;
                      f2 = c[h2 >> 2] | 0;
                      if (f2 | 0)
                        c[f2 + 44 >> 2] = c[b2 >> 2];
                      b2 = c[b2 >> 2] | 0;
                      if (b2 | 0)
                        c[b2 + 48 >> 2] = c[h2 >> 2];
                      if ((c[w2 + 18496 >> 2] | 0) == (t2 | 0))
                        c[w2 + 18496 >> 2] = c[h2 >> 2];
                      c[w2 + 18500 >> 2] = (c[w2 + 18500 >> 2] | 0) + -1;
                      c[t2 + 44 >> 2] = 0;
                      c[h2 >> 2] = c[w2 + 18504 >> 2];
                      b2 = c[w2 + 18504 >> 2] | 0;
                      if (b2 | 0)
                        c[b2 + 44 >> 2] = t2;
                      c[w2 + 18504 >> 2] = t2;
                      c[w2 + 18508 >> 2] = (c[w2 + 18508 >> 2] | 0) + 1;
                      f2 = c[w2 + 18496 >> 2] | 0;
                      n2 = +g[f2 + 16 >> 2];
                      b2 = c[f2 + 48 >> 2] | 0;
                      if (b2) {
                        o2 = n2 * n2;
                        while (1) {
                          n2 = +g[b2 + 16 >> 2];
                          h2 = n2 * n2 < o2;
                          f2 = h2 ? b2 : f2;
                          b2 = c[b2 + 48 >> 2] | 0;
                          if (!b2)
                            break;
                          else
                            o2 = h2 ? n2 * n2 : o2;
                        }
                      }
                      o2 = +g[f2 >> 2];
                      s2 = +g[f2 + 4 >> 2];
                      p2 = +g[f2 + 8 >> 2];
                      n2 = +g[f2 + 12 >> 2];
                      b2 = c[f2 + 16 >> 2] | 0;
                      h2 = c[f2 + 20 >> 2] | 0;
                      m2 = c[f2 + 24 >> 2] | 0;
                      q2 = c[f2 + 28 >> 2] | 0;
                      if (u2 >>> 0 >= 255) {
                        f2 = q2;
                        break;
                      } else {
                        t2 = f2;
                        r2 = m2;
                        j2 = q2;
                      }
                    }
                    if ((v2 | 0) == 42) {
                      c[w2 >> 2] = f2;
                      m2 = r2;
                      f2 = j2;
                    } else if ((v2 | 0) == 43) {
                      c[w2 >> 2] = 6;
                      m2 = r2;
                      f2 = j2;
                    }
                    M2 = (c[l >> 2] = b2, +g[l >> 2]);
                    K2 = o2 * M2;
                    I2 = s2 * M2;
                    M2 = p2 * M2;
                    g[w2 + 40 >> 2] = o2;
                    g[w2 + 44 >> 2] = s2;
                    g[w2 + 48 >> 2] = p2;
                    g[w2 + 52 >> 2] = n2;
                    c[w2 + 56 >> 2] = b2;
                    c[w2 + 36 >> 2] = 3;
                    c[w2 + 4 >> 2] = h2;
                    c[w2 + 8 >> 2] = m2;
                    c[w2 + 12 >> 2] = f2;
                    Q2 = m2;
                    N2 = +g[Q2 + 16 >> 2] - K2;
                    F2 = +g[Q2 + 20 >> 2] - I2;
                    E2 = +g[Q2 + 24 >> 2] - M2;
                    P2 = f2;
                    L2 = +g[P2 + 16 >> 2] - K2;
                    H2 = +g[P2 + 20 >> 2] - I2;
                    J2 = +g[P2 + 24 >> 2] - M2;
                    N2 = +G(+((N2 * H2 - F2 * L2) * (N2 * H2 - F2 * L2) + ((F2 * J2 - E2 * H2) * (F2 * J2 - E2 * H2) + (E2 * L2 - N2 * J2) * (E2 * L2 - N2 * J2))));
                    g[w2 + 20 >> 2] = N2;
                    L2 = +g[P2 + 16 >> 2] - K2;
                    E2 = +g[P2 + 20 >> 2] - I2;
                    P2 = h2;
                    H2 = +g[P2 + 16 >> 2] - K2;
                    F2 = +g[P2 + 20 >> 2] - I2;
                    O2 = +g[P2 + 24 >> 2] - M2;
                    O2 = +G(+((L2 * F2 - E2 * H2) * (L2 * F2 - E2 * H2) + ((E2 * O2 - J2 * F2) * (E2 * O2 - J2 * F2) + (J2 * H2 - L2 * O2) * (J2 * H2 - L2 * O2))));
                    g[w2 + 24 >> 2] = O2;
                    L2 = +g[P2 + 16 >> 2] - K2;
                    H2 = +g[P2 + 20 >> 2] - I2;
                    J2 = +g[P2 + 24 >> 2] - M2;
                    K2 = +g[Q2 + 16 >> 2] - K2;
                    I2 = +g[Q2 + 20 >> 2] - I2;
                    M2 = +g[Q2 + 24 >> 2] - M2;
                    M2 = +G(+((L2 * I2 - H2 * K2) * (L2 * I2 - H2 * K2) + ((H2 * M2 - J2 * I2) * (H2 * M2 - J2 * I2) + (J2 * K2 - L2 * M2) * (J2 * K2 - L2 * M2))));
                    g[w2 + 20 >> 2] = N2 / (M2 + (N2 + O2));
                    g[w2 + 24 >> 2] = O2 / (M2 + (N2 + O2));
                    g[w2 + 28 >> 2] = M2 / (M2 + (N2 + O2));
                    if ((c[w2 >> 2] | 0) != 9)
                      if (!(c[w2 + 36 >> 2] | 0)) {
                        p2 = 0;
                        o2 = 0;
                        n2 = 0;
                        break;
                      } else {
                        m2 = w2 + 36 | 0;
                        v2 = 51;
                        break;
                      }
                    c[k2 >> 2] = 3;
                    Q2 = 0;
                    i = w2;
                    return Q2 | 0;
                  } else
                    v2 = 45;
                } else
                  v2 = 45;
              while (0);
              if ((v2 | 0) == 45) {
                c[w2 >> 2] = 8;
                g[w2 + 40 >> 2] = p2;
                g[w2 + 44 >> 2] = s2;
                g[w2 + 48 >> 2] = o2;
                g[w2 + 52 >> 2] = 0;
                n2 = +G(+(p2 * p2 + s2 * s2 + o2 * o2));
                if (n2 > 0) {
                  g[w2 + 40 >> 2] = 1 / n2 * p2;
                  g[w2 + 44 >> 2] = 1 / n2 * s2;
                  g[w2 + 48 >> 2] = 1 / n2 * o2;
                } else {
                  c[w2 + 40 >> 2] = 1065353216;
                  c[w2 + 44 >> 2] = 0;
                  c[w2 + 48 >> 2] = 0;
                }
                g[w2 + 52 >> 2] = 0;
                g[w2 + 56 >> 2] = 0;
                c[w2 + 36 >> 2] = 1;
                c[w2 + 4 >> 2] = c[t2 >> 2];
                g[w2 + 20 >> 2] = 1;
                m2 = w2 + 36 | 0;
                v2 = 51;
              }
              if ((v2 | 0) == 51) {
                h2 = 0;
                p2 = 0;
                o2 = 0;
                n2 = 0;
                do {
                  b2 = c[w2 + 18896 + 120 >> 2] | 0;
                  Q2 = c[w2 + 18896 + 124 >> 2] | 0;
                  f2 = (c[w2 + 18896 >> 2] | 0) + (Q2 >> 1) | 0;
                  if (Q2 & 1)
                    b2 = c[(c[f2 >> 2] | 0) + b2 >> 2] | 0;
                  Ub[b2 & 127](w2 + 19024 | 0, f2, c[w2 + 4 + (h2 << 2) >> 2] | 0);
                  O2 = +g[w2 + 20 + (h2 << 2) >> 2];
                  p2 = p2 + +g[w2 + 19024 >> 2] * O2;
                  n2 = n2 + O2 * +g[w2 + 19024 + 4 >> 2];
                  o2 = o2 + O2 * +g[w2 + 19024 + 8 >> 2];
                  h2 = h2 + 1 | 0;
                } while (h2 >>> 0 < (c[m2 >> 2] | 0) >>> 0);
              }
              c[k2 >> 2] = 1;
              O2 = p2 * +g[e2 + 16 >> 2] + n2 * +g[e2 + 20 >> 2] + o2 * +g[e2 + 24 >> 2] + +g[e2 + 52 >> 2];
              L2 = p2 * +g[e2 + 32 >> 2] + n2 * +g[e2 + 36 >> 2] + o2 * +g[e2 + 40 >> 2] + +g[e2 + 56 >> 2];
              g[k2 + 4 >> 2] = p2 * +g[e2 >> 2] + n2 * +g[e2 + 4 >> 2] + o2 * +g[e2 + 8 >> 2] + +g[e2 + 48 >> 2];
              g[k2 + 8 >> 2] = O2;
              g[k2 + 12 >> 2] = L2;
              g[k2 + 16 >> 2] = 0;
              L2 = +g[w2 + 40 >> 2];
              O2 = +g[w2 + 56 >> 2];
              M2 = +g[w2 + 44 >> 2];
              N2 = +g[w2 + 48 >> 2];
              F2 = p2 - L2 * O2;
              H2 = n2 - O2 * M2;
              I2 = o2 - O2 * N2;
              J2 = F2 * +g[e2 + 16 >> 2] + H2 * +g[e2 + 20 >> 2] + I2 * +g[e2 + 24 >> 2] + +g[e2 + 52 >> 2];
              K2 = F2 * +g[e2 + 32 >> 2] + H2 * +g[e2 + 36 >> 2] + I2 * +g[e2 + 40 >> 2] + +g[e2 + 56 >> 2];
              g[k2 + 20 >> 2] = F2 * +g[e2 >> 2] + H2 * +g[e2 + 4 >> 2] + I2 * +g[e2 + 8 >> 2] + +g[e2 + 48 >> 2];
              g[k2 + 24 >> 2] = J2;
              g[k2 + 28 >> 2] = K2;
              g[k2 + 32 >> 2] = 0;
              g[k2 + 36 >> 2] = -L2;
              g[k2 + 40 >> 2] = -M2;
              g[k2 + 44 >> 2] = -N2;
              g[k2 + 48 >> 2] = 0;
              g[k2 + 52 >> 2] = -O2;
              Q2 = 1;
              i = w2;
              return Q2 | 0;
            }
            case 2: {
              c[k2 >> 2] = 2;
              Q2 = 0;
              i = w2;
              return Q2 | 0;
            }
            default: {
              Q2 = 0;
              i = w2;
              return Q2 | 0;
            }
          }
          return 0;
        }
        function Cc(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0;
          w2 = i;
          i = i + 208 | 0;
          u2 = (a[b2 + 68 >> 0] | 0) != 0;
          t2 = u2 ? e2 : d2;
          u2 = u2 ? d2 : e2;
          v2 = c[t2 + 4 >> 2] | 0;
          if ((c[v2 + 72 >> 2] | 0) != (c[b2 + 80 >> 2] | 0)) {
            k2 = c[b2 + 52 >> 2] | 0;
            if ((k2 | 0) > 0) {
              j2 = 0;
              do {
                l2 = c[(c[b2 + 60 >> 2] | 0) + (j2 << 2) >> 2] | 0;
                if (l2 | 0) {
                  kb[c[c[l2 >> 2] >> 2] & 255](l2);
                  m2 = c[b2 + 4 >> 2] | 0;
                  mb[c[(c[m2 >> 2] | 0) + 60 >> 2] & 127](m2, c[(c[b2 + 60 >> 2] | 0) + (j2 << 2) >> 2] | 0);
                }
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (k2 | 0));
            }
            _g(b2, d2, e2);
            c[b2 + 80 >> 2] = c[v2 + 72 >> 2];
          }
          d2 = c[b2 + 52 >> 2] | 0;
          if (!d2) {
            i = w2;
            return;
          }
          m2 = c[v2 + 68 >> 2] | 0;
          k2 = c[b2 + 4 >> 2] | 0;
          l2 = c[b2 + 60 >> 2] | 0;
          j2 = c[b2 + 72 >> 2] | 0;
          c[w2 + 176 >> 2] = 9072;
          c[w2 + 176 + 4 >> 2] = t2;
          c[w2 + 176 + 8 >> 2] = u2;
          c[w2 + 176 + 12 >> 2] = k2;
          c[w2 + 176 + 16 >> 2] = f2;
          c[w2 + 176 + 20 >> 2] = h2;
          c[w2 + 176 + 24 >> 2] = l2;
          c[w2 + 176 + 28 >> 2] = j2;
          j2 = c[b2 + 32 >> 2] | 0;
          if ((j2 | 0) < 0) {
            if ((c[b2 + 36 >> 2] | 0) < 0) {
              d2 = c[b2 + 40 >> 2] | 0;
              if (d2 | 0) {
                if (a[b2 + 44 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[d2 + -4 >> 2] | 0);
                }
                c[b2 + 40 >> 2] = 0;
              }
              a[b2 + 44 >> 0] = 1;
              c[b2 + 40 >> 2] = 0;
              c[b2 + 36 >> 2] = 0;
            }
            do {
              c[(c[b2 + 40 >> 2] | 0) + (j2 << 2) >> 2] = 0;
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != 0);
            d2 = c[b2 + 52 >> 2] | 0;
          }
          c[b2 + 32 >> 2] = 0;
          if ((d2 | 0) > 0) {
            f2 = 0;
            do {
              j2 = c[(c[b2 + 60 >> 2] | 0) + (f2 << 2) >> 2] | 0;
              if (j2) {
                mb[c[(c[j2 >> 2] | 0) + 16 >> 2] & 127](j2, b2 + 28 | 0);
                j2 = c[b2 + 32 >> 2] | 0;
                if ((j2 | 0) > 0) {
                  l2 = 0;
                  do {
                    k2 = c[(c[b2 + 40 >> 2] | 0) + (l2 << 2) >> 2] | 0;
                    if (c[k2 + 780 >> 2] | 0) {
                      c[h2 + 4 >> 2] = k2;
                      j2 = c[k2 + 772 >> 2] | 0;
                      d2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                      e2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                      if ((j2 | 0) == (d2 | 0))
                        Te(k2, j2 + 4 | 0, e2 + 4 | 0);
                      else
                        Te(k2, e2 + 4 | 0, d2 + 4 | 0);
                      c[h2 + 4 >> 2] = 0;
                      j2 = c[b2 + 32 >> 2] | 0;
                    }
                    l2 = l2 + 1 | 0;
                  } while ((l2 | 0) < (j2 | 0));
                }
                if ((j2 | 0) < 0) {
                  if ((c[b2 + 36 >> 2] | 0) < 0) {
                    d2 = c[b2 + 40 >> 2] | 0;
                    if (d2 | 0) {
                      if (a[b2 + 44 >> 0] | 0) {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[d2 + -4 >> 2] | 0);
                      }
                      c[b2 + 40 >> 2] = 0;
                    }
                    a[b2 + 44 >> 0] = 1;
                    c[b2 + 40 >> 2] = 0;
                    c[b2 + 36 >> 2] = 0;
                  }
                  do {
                    c[(c[b2 + 40 >> 2] | 0) + (j2 << 2) >> 2] = 0;
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) != 0);
                }
                c[b2 + 32 >> 2] = 0;
                d2 = c[b2 + 52 >> 2] | 0;
              }
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) < (d2 | 0));
          }
          if (!m2) {
            if ((d2 | 0) > 0) {
              j2 = 0;
              do {
                De(w2 + 176 | 0, c[(c[v2 + 28 >> 2] | 0) + (j2 * 80 | 0) + 64 >> 2] | 0, j2);
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) < (d2 | 0));
            }
          } else {
            l2 = c[t2 + 12 >> 2] | 0;
            F2 = +g[l2 >> 2];
            E2 = +g[l2 + 16 >> 2];
            D2 = +g[l2 + 32 >> 2];
            C2 = +g[l2 + 4 >> 2];
            B2 = +g[l2 + 20 >> 2];
            A2 = +g[l2 + 36 >> 2];
            o2 = +g[l2 + 8 >> 2];
            r2 = +g[l2 + 24 >> 2];
            p2 = +g[l2 + 40 >> 2];
            z2 = -+g[l2 + 48 >> 2];
            y2 = -+g[l2 + 52 >> 2];
            x2 = -+g[l2 + 56 >> 2];
            l2 = c[u2 + 12 >> 2] | 0;
            O2 = +g[l2 >> 2];
            N2 = +g[l2 + 16 >> 2];
            M2 = +g[l2 + 32 >> 2];
            L2 = +g[l2 + 4 >> 2];
            K2 = +g[l2 + 20 >> 2];
            J2 = +g[l2 + 36 >> 2];
            I2 = +g[l2 + 8 >> 2];
            H2 = +g[l2 + 24 >> 2];
            G2 = +g[l2 + 40 >> 2];
            s2 = +g[l2 + 48 >> 2];
            q2 = +g[l2 + 52 >> 2];
            n2 = +g[l2 + 56 >> 2];
            g[w2 + 32 >> 2] = F2 * O2 + E2 * N2 + D2 * M2;
            g[w2 + 32 + 4 >> 2] = F2 * L2 + E2 * K2 + D2 * J2;
            g[w2 + 32 + 8 >> 2] = F2 * I2 + E2 * H2 + D2 * G2;
            g[w2 + 32 + 12 >> 2] = 0;
            g[w2 + 32 + 16 >> 2] = C2 * O2 + B2 * N2 + A2 * M2;
            g[w2 + 32 + 20 >> 2] = C2 * L2 + B2 * K2 + A2 * J2;
            g[w2 + 32 + 24 >> 2] = C2 * I2 + B2 * H2 + A2 * G2;
            g[w2 + 32 + 28 >> 2] = 0;
            g[w2 + 32 + 32 >> 2] = o2 * O2 + r2 * N2 + p2 * M2;
            g[w2 + 32 + 36 >> 2] = o2 * L2 + r2 * K2 + p2 * J2;
            g[w2 + 32 + 40 >> 2] = o2 * I2 + r2 * H2 + p2 * G2;
            g[w2 + 32 + 44 >> 2] = 0;
            g[w2 + 32 + 48 >> 2] = F2 * z2 + E2 * y2 + D2 * x2 + (F2 * s2 + E2 * q2 + D2 * n2);
            g[w2 + 32 + 52 >> 2] = C2 * z2 + B2 * y2 + A2 * x2 + (C2 * s2 + B2 * q2 + A2 * n2);
            g[w2 + 32 + 56 >> 2] = o2 * z2 + r2 * y2 + p2 * x2 + (o2 * s2 + r2 * q2 + p2 * n2);
            g[w2 + 32 + 60 >> 2] = 0;
            l2 = c[u2 + 4 >> 2] | 0;
            Yb[c[(c[l2 >> 2] | 0) + 8 >> 2] & 127](l2, w2 + 32 | 0, w2 + 112 | 0, w2 + 96 | 0);
            n2 = +g[w2 + 112 >> 2];
            p2 = +g[w2 + 112 + 4 >> 2];
            q2 = +g[w2 + 112 + 8 >> 2];
            r2 = +g[w2 + 96 >> 2];
            s2 = +g[w2 + 96 + 4 >> 2];
            o2 = +g[w2 + 96 + 8 >> 2];
            l2 = c[m2 >> 2] | 0;
            if (l2 | 0) {
              j2 = c[b2 + 12 >> 2] | 0;
              d2 = c[b2 + 16 >> 2] | 0;
              if ((j2 | 0) < 0) {
                if ((d2 | 0) < 0) {
                  d2 = c[b2 + 20 >> 2] | 0;
                  if (d2 | 0) {
                    if (a[b2 + 24 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[d2 + -4 >> 2] | 0);
                    }
                    c[b2 + 20 >> 2] = 0;
                  }
                  a[b2 + 24 >> 0] = 1;
                  c[b2 + 20 >> 2] = 0;
                  c[b2 + 16 >> 2] = 0;
                  d2 = 0;
                }
                do {
                  c[(c[b2 + 20 >> 2] | 0) + (j2 << 2) >> 2] = 0;
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != 0);
              }
              c[b2 + 12 >> 2] = 0;
              if ((d2 | 0) < 64) {
                c[6324] = (c[6324] | 0) + 1;
                j2 = ic(275) | 0;
                if (!j2)
                  e2 = 0;
                else {
                  c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                  e2 = j2 + 4 + 15 & -16;
                }
                j2 = c[b2 + 12 >> 2] | 0;
                if ((j2 | 0) > 0) {
                  d2 = 0;
                  do {
                    c[e2 + (d2 << 2) >> 2] = c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2];
                    d2 = d2 + 1 | 0;
                  } while ((d2 | 0) != (j2 | 0));
                }
                d2 = c[b2 + 20 >> 2] | 0;
                if (d2) {
                  if (a[b2 + 24 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[d2 + -4 >> 2] | 0);
                    j2 = c[b2 + 12 >> 2] | 0;
                  }
                  c[b2 + 20 >> 2] = 0;
                }
                a[b2 + 24 >> 0] = 1;
                c[b2 + 20 >> 2] = e2;
                c[b2 + 16 >> 2] = 64;
                d2 = 64;
              } else
                j2 = 0;
              if ((j2 | 0) == (d2 | 0)) {
                k2 = d2 << 1;
                if ((d2 | 0) < (k2 | 0)) {
                  c[6324] = (c[6324] | 0) + 1;
                  j2 = ic((d2 << 3 | 3) + 16 | 0) | 0;
                  if (!j2)
                    e2 = 0;
                  else {
                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                    e2 = j2 + 4 + 15 & -16;
                  }
                  j2 = c[b2 + 12 >> 2] | 0;
                  if ((j2 | 0) > 0) {
                    d2 = 0;
                    do {
                      c[e2 + (d2 << 2) >> 2] = c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2];
                      d2 = d2 + 1 | 0;
                    } while ((d2 | 0) != (j2 | 0));
                  }
                  d2 = c[b2 + 20 >> 2] | 0;
                  if (d2) {
                    if (a[b2 + 24 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[d2 + -4 >> 2] | 0);
                      j2 = c[b2 + 12 >> 2] | 0;
                    }
                    c[b2 + 20 >> 2] = 0;
                  }
                  a[b2 + 24 >> 0] = 1;
                  c[b2 + 20 >> 2] = e2;
                  c[b2 + 16 >> 2] = k2;
                } else
                  j2 = d2;
              }
              c[(c[b2 + 20 >> 2] | 0) + (j2 << 2) >> 2] = l2;
              d2 = j2 + 1 | 0;
              c[b2 + 12 >> 2] = d2;
              while (1) {
                j2 = d2 + -1 | 0;
                e2 = c[b2 + 20 >> 2] | 0;
                f2 = c[e2 + (j2 << 2) >> 2] | 0;
                c[b2 + 12 >> 2] = j2;
                do
                  if (((((+g[f2 >> 2] <= r2 ? +g[f2 + 16 >> 2] >= n2 : 0) ? +g[f2 + 4 >> 2] <= s2 : 0) ? +g[f2 + 20 >> 2] >= p2 : 0) ? +g[f2 + 8 >> 2] <= o2 : 0) ? +g[f2 + 24 >> 2] >= q2 : 0) {
                    if (!(c[f2 + 40 >> 2] | 0)) {
                      mb[c[(c[w2 + 176 >> 2] | 0) + 12 >> 2] & 127](w2 + 176 | 0, f2);
                      j2 = c[b2 + 12 >> 2] | 0;
                      break;
                    }
                    l2 = c[f2 + 36 >> 2] | 0;
                    k2 = c[b2 + 16 >> 2] | 0;
                    do
                      if ((j2 | 0) == (k2 | 0)) {
                        k2 = j2 | 0 ? j2 << 1 : 1;
                        if ((d2 | 0) > (k2 | 0)) {
                          d2 = j2;
                          break;
                        }
                        if (!k2)
                          e2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          j2 = ic((k2 << 2 | 3) + 16 | 0) | 0;
                          if (!j2)
                            j2 = 0;
                          else {
                            c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                            j2 = j2 + 4 + 15 & -16;
                          }
                          e2 = j2;
                          j2 = c[b2 + 12 >> 2] | 0;
                        }
                        if ((j2 | 0) > 0) {
                          d2 = 0;
                          do {
                            c[e2 + (d2 << 2) >> 2] = c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2];
                            d2 = d2 + 1 | 0;
                          } while ((d2 | 0) != (j2 | 0));
                        }
                        d2 = c[b2 + 20 >> 2] | 0;
                        if (d2) {
                          if (a[b2 + 24 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[d2 + -4 >> 2] | 0);
                            j2 = c[b2 + 12 >> 2] | 0;
                          }
                          c[b2 + 20 >> 2] = 0;
                        }
                        a[b2 + 24 >> 0] = 1;
                        c[b2 + 20 >> 2] = e2;
                        c[b2 + 16 >> 2] = k2;
                        d2 = j2;
                        j2 = k2;
                      } else {
                        d2 = j2;
                        j2 = k2;
                      }
                    while (0);
                    c[e2 + (d2 << 2) >> 2] = l2;
                    d2 = d2 + 1 | 0;
                    c[b2 + 12 >> 2] = d2;
                    l2 = c[f2 + 40 >> 2] | 0;
                    do
                      if ((d2 | 0) == (j2 | 0)) {
                        k2 = j2 | 0 ? j2 << 1 : 1;
                        if ((j2 | 0) >= (k2 | 0))
                          break;
                        if (!k2)
                          e2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          j2 = ic((k2 << 2 | 3) + 16 | 0) | 0;
                          if (!j2)
                            j2 = 0;
                          else {
                            c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                            j2 = j2 + 4 + 15 & -16;
                          }
                          e2 = j2;
                          j2 = c[b2 + 12 >> 2] | 0;
                        }
                        if ((j2 | 0) > 0) {
                          d2 = 0;
                          do {
                            c[e2 + (d2 << 2) >> 2] = c[(c[b2 + 20 >> 2] | 0) + (d2 << 2) >> 2];
                            d2 = d2 + 1 | 0;
                          } while ((d2 | 0) != (j2 | 0));
                        }
                        d2 = c[b2 + 20 >> 2] | 0;
                        if (d2) {
                          if (a[b2 + 24 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[d2 + -4 >> 2] | 0);
                            j2 = c[b2 + 12 >> 2] | 0;
                          }
                          c[b2 + 20 >> 2] = 0;
                        }
                        a[b2 + 24 >> 0] = 1;
                        c[b2 + 20 >> 2] = e2;
                        c[b2 + 16 >> 2] = k2;
                      } else
                        j2 = d2;
                    while (0);
                    c[(c[b2 + 20 >> 2] | 0) + (j2 << 2) >> 2] = l2;
                    j2 = j2 + 1 | 0;
                    c[b2 + 12 >> 2] = j2;
                  }
                while (0);
                if ((j2 | 0) > 0)
                  d2 = j2;
                else
                  break;
              }
            }
          }
          e2 = c[b2 + 52 >> 2] | 0;
          j2 = c[b2 + 32 >> 2] | 0;
          if ((j2 | 0) < 0) {
            if ((c[b2 + 36 >> 2] | 0) < 0) {
              d2 = c[b2 + 40 >> 2] | 0;
              if (d2 | 0) {
                if (a[b2 + 44 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[d2 + -4 >> 2] | 0);
                }
                c[b2 + 40 >> 2] = 0;
              }
              a[b2 + 44 >> 0] = 1;
              c[b2 + 40 >> 2] = 0;
              c[b2 + 36 >> 2] = 0;
            }
            do {
              c[(c[b2 + 40 >> 2] | 0) + (j2 << 2) >> 2] = 0;
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != 0);
          }
          c[b2 + 32 >> 2] = 0;
          if ((e2 | 0) > 0) {
            d2 = 0;
            do {
              do
                if (c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] | 0) {
                  f2 = c[v2 + 28 >> 2] | 0;
                  m2 = c[f2 + (d2 * 80 | 0) + 64 >> 2] | 0;
                  h2 = c[t2 + 12 >> 2] | 0;
                  q2 = +g[h2 >> 2];
                  r2 = +g[h2 + 4 >> 2];
                  s2 = +g[h2 + 8 >> 2];
                  x2 = +g[h2 + 16 >> 2];
                  y2 = +g[h2 + 20 >> 2];
                  z2 = +g[h2 + 24 >> 2];
                  G2 = +g[h2 + 32 >> 2];
                  I2 = +g[h2 + 36 >> 2];
                  K2 = +g[h2 + 40 >> 2];
                  A2 = +g[f2 + (d2 * 80 | 0) >> 2];
                  B2 = +g[f2 + (d2 * 80 | 0) + 16 >> 2];
                  C2 = +g[f2 + (d2 * 80 | 0) + 32 >> 2];
                  D2 = +g[f2 + (d2 * 80 | 0) + 4 >> 2];
                  E2 = +g[f2 + (d2 * 80 | 0) + 20 >> 2];
                  F2 = +g[f2 + (d2 * 80 | 0) + 36 >> 2];
                  H2 = +g[f2 + (d2 * 80 | 0) + 8 >> 2];
                  J2 = +g[f2 + (d2 * 80 | 0) + 24 >> 2];
                  L2 = +g[f2 + (d2 * 80 | 0) + 40 >> 2];
                  o2 = +g[f2 + (d2 * 80 | 0) + 48 >> 2];
                  p2 = +g[f2 + (d2 * 80 | 0) + 52 >> 2];
                  O2 = +g[f2 + (d2 * 80 | 0) + 56 >> 2];
                  M2 = +g[h2 + 48 >> 2] + (q2 * o2 + r2 * p2 + s2 * O2);
                  N2 = +g[h2 + 52 >> 2] + (x2 * o2 + y2 * p2 + z2 * O2);
                  O2 = +g[h2 + 56 >> 2] + (G2 * o2 + I2 * p2 + K2 * O2);
                  g[w2 + 112 >> 2] = q2 * A2 + r2 * B2 + s2 * C2;
                  g[w2 + 112 + 4 >> 2] = q2 * D2 + r2 * E2 + s2 * F2;
                  g[w2 + 112 + 8 >> 2] = q2 * H2 + r2 * J2 + s2 * L2;
                  g[w2 + 112 + 12 >> 2] = 0;
                  g[w2 + 112 + 16 >> 2] = x2 * A2 + y2 * B2 + z2 * C2;
                  g[w2 + 112 + 20 >> 2] = x2 * D2 + y2 * E2 + z2 * F2;
                  g[w2 + 112 + 24 >> 2] = x2 * H2 + y2 * J2 + z2 * L2;
                  g[w2 + 112 + 28 >> 2] = 0;
                  g[w2 + 112 + 32 >> 2] = G2 * A2 + I2 * B2 + K2 * C2;
                  g[w2 + 112 + 36 >> 2] = G2 * D2 + I2 * E2 + K2 * F2;
                  g[w2 + 112 + 40 >> 2] = G2 * H2 + I2 * J2 + K2 * L2;
                  g[w2 + 112 + 44 >> 2] = 0;
                  g[w2 + 112 + 48 >> 2] = M2;
                  g[w2 + 112 + 52 >> 2] = N2;
                  g[w2 + 112 + 56 >> 2] = O2;
                  g[w2 + 112 + 60 >> 2] = 0;
                  Yb[c[(c[m2 >> 2] | 0) + 8 >> 2] & 127](m2, w2 + 112 | 0, w2 + 96 | 0, w2 + 32 | 0);
                  m2 = c[u2 + 4 >> 2] | 0;
                  Yb[c[(c[m2 >> 2] | 0) + 8 >> 2] & 127](m2, c[u2 + 12 >> 2] | 0, w2 + 16 | 0, w2);
                  if (!(+g[w2 + 96 >> 2] > +g[w2 >> 2]) ? !(+g[w2 + 32 >> 2] < +g[w2 + 16 >> 2]) : 0)
                    j2 = 1;
                  else
                    j2 = 0;
                  if (!(!(+g[w2 + 96 + 8 >> 2] > +g[w2 + 8 >> 2]) ? !(+g[w2 + 32 + 8 >> 2] < +g[w2 + 16 + 8 >> 2]) : 0))
                    j2 = 0;
                  if (!(+g[w2 + 96 + 4 >> 2] > +g[w2 + 4 >> 2]) ? !(+g[w2 + 32 + 4 >> 2] < +g[w2 + 16 + 4 >> 2] | j2 ^ 1) : 0)
                    break;
                  m2 = c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] | 0;
                  kb[c[c[m2 >> 2] >> 2] & 255](m2);
                  m2 = c[b2 + 4 >> 2] | 0;
                  mb[c[(c[m2 >> 2] | 0) + 60 >> 2] & 127](m2, c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] | 0);
                  c[(c[b2 + 60 >> 2] | 0) + (d2 << 2) >> 2] = 0;
                }
              while (0);
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) < (e2 | 0));
          }
          i = w2;
          return;
        }
        function Dc(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0;
          r2 = i;
          i = i + 144 | 0;
          m2 = c[b2 + 48 >> 2] | 0;
          k2 = c[b2 + 52 >> 2] | 0;
          if ((k2 | 0 ? (l2 = c[k2 + 20 >> 2] | 0, l2 | 0) : 0) ? (ob[c[(c[l2 >> 2] | 0) + 56 >> 2] & 127](l2) | 0) & 1 | 0 : 0) {
            c[r2 + 48 >> 2] = 1065353216;
            c[r2 + 48 + 4 >> 2] = 1065353216;
            c[r2 + 48 + 8 >> 2] = 0;
            g[r2 + 48 + 12 >> 2] = 0;
            l2 = c[b2 + 8 >> 2] | 0;
            q2 = c[(c[b2 + 52 >> 2] | 0) + 20 >> 2] | 0;
            p2 = c[(c[q2 >> 2] | 0) + 16 >> 2] | 0;
            x2 = +g[d2 >> 2];
            D2 = +g[d2 + 4 >> 2];
            A2 = +g[d2 + 8 >> 2];
            v2 = +g[l2 + 20 >> 2];
            s2 = +g[l2 + 24 >> 2];
            w2 = +g[l2 + 28 >> 2];
            t2 = +g[l2 + 36 >> 2];
            z2 = +g[l2 + 40 >> 2];
            B2 = +g[l2 + 44 >> 2];
            u2 = +g[l2 + 52 >> 2];
            C2 = +g[l2 + 56 >> 2];
            y2 = +g[l2 + 60 >> 2];
            g[r2 + 24 >> 2] = x2 * +g[l2 + 4 >> 2] + D2 * +g[l2 + 8 >> 2] + A2 * +g[l2 + 12 >> 2] + u2;
            g[r2 + 24 + 4 >> 2] = x2 * v2 + D2 * s2 + A2 * w2 + C2;
            g[r2 + 24 + 8 >> 2] = x2 * t2 + D2 * z2 + A2 * B2 + y2;
            g[r2 + 24 + 12 >> 2] = 0;
            A2 = +g[d2 + 16 >> 2];
            D2 = +g[d2 + 20 >> 2];
            x2 = +g[d2 + 24 >> 2];
            g[r2 >> 2] = A2 * +g[l2 + 4 >> 2] + D2 * +g[l2 + 8 >> 2] + x2 * +g[l2 + 12 >> 2] + u2;
            g[r2 + 4 >> 2] = A2 * v2 + D2 * s2 + x2 * w2 + C2;
            g[r2 + 8 >> 2] = A2 * t2 + D2 * z2 + x2 * B2 + y2;
            g[r2 + 12 >> 2] = 0;
            Yb[p2 & 127](q2, r2 + 24 | 0, r2, r2 + 48 | 0);
            q2 = c[(c[b2 + 52 >> 2] | 0) + 20 >> 2] | 0;
            p2 = c[(c[q2 >> 2] | 0) + 16 >> 2] | 0;
            y2 = +g[d2 + 16 >> 2];
            B2 = +g[d2 + 20 >> 2];
            x2 = +g[d2 + 24 >> 2];
            z2 = +g[l2 + 20 >> 2];
            D2 = +g[l2 + 24 >> 2];
            t2 = +g[l2 + 28 >> 2];
            A2 = +g[l2 + 36 >> 2];
            C2 = +g[l2 + 40 >> 2];
            w2 = +g[l2 + 44 >> 2];
            s2 = +g[l2 + 52 >> 2];
            v2 = +g[l2 + 56 >> 2];
            u2 = +g[l2 + 60 >> 2];
            g[r2 + 24 >> 2] = y2 * +g[l2 + 4 >> 2] + B2 * +g[l2 + 8 >> 2] + x2 * +g[l2 + 12 >> 2] + s2;
            g[r2 + 24 + 4 >> 2] = y2 * z2 + B2 * D2 + x2 * t2 + v2;
            g[r2 + 24 + 8 >> 2] = y2 * A2 + B2 * C2 + x2 * w2 + u2;
            g[r2 + 24 + 12 >> 2] = 0;
            x2 = +g[d2 + 32 >> 2];
            B2 = +g[d2 + 36 >> 2];
            y2 = +g[d2 + 40 >> 2];
            g[r2 >> 2] = x2 * +g[l2 + 4 >> 2] + B2 * +g[l2 + 8 >> 2] + y2 * +g[l2 + 12 >> 2] + s2;
            g[r2 + 4 >> 2] = x2 * z2 + B2 * D2 + y2 * t2 + v2;
            g[r2 + 8 >> 2] = x2 * A2 + B2 * C2 + y2 * w2 + u2;
            g[r2 + 12 >> 2] = 0;
            Yb[p2 & 127](q2, r2 + 24 | 0, r2, r2 + 48 | 0);
            q2 = c[(c[b2 + 52 >> 2] | 0) + 20 >> 2] | 0;
            p2 = c[(c[q2 >> 2] | 0) + 16 >> 2] | 0;
            u2 = +g[d2 + 32 >> 2];
            w2 = +g[d2 + 36 >> 2];
            y2 = +g[d2 + 40 >> 2];
            C2 = +g[l2 + 20 >> 2];
            B2 = +g[l2 + 24 >> 2];
            A2 = +g[l2 + 28 >> 2];
            x2 = +g[l2 + 36 >> 2];
            v2 = +g[l2 + 40 >> 2];
            t2 = +g[l2 + 44 >> 2];
            D2 = +g[l2 + 52 >> 2];
            z2 = +g[l2 + 56 >> 2];
            s2 = +g[l2 + 60 >> 2];
            g[r2 + 24 >> 2] = u2 * +g[l2 + 4 >> 2] + w2 * +g[l2 + 8 >> 2] + y2 * +g[l2 + 12 >> 2] + D2;
            g[r2 + 24 + 4 >> 2] = u2 * C2 + w2 * B2 + y2 * A2 + z2;
            g[r2 + 24 + 8 >> 2] = u2 * x2 + w2 * v2 + y2 * t2 + s2;
            g[r2 + 24 + 12 >> 2] = 0;
            y2 = +g[d2 >> 2];
            w2 = +g[d2 + 4 >> 2];
            u2 = +g[d2 + 8 >> 2];
            g[r2 >> 2] = y2 * +g[l2 + 4 >> 2] + w2 * +g[l2 + 8 >> 2] + u2 * +g[l2 + 12 >> 2] + D2;
            g[r2 + 4 >> 2] = y2 * C2 + w2 * B2 + u2 * A2 + z2;
            g[r2 + 8 >> 2] = y2 * x2 + w2 * v2 + u2 * t2 + s2;
            g[r2 + 12 >> 2] = 0;
            Yb[p2 & 127](q2, r2 + 24 | 0, r2, r2 + 48 | 0);
          }
          k2 = ((e2 << 21 | f2) + ~(f2 << 15) >> 10 ^ (e2 << 21 | f2) + ~(f2 << 15)) * 9 | 0;
          k2 = (c[b2 + 108 >> 2] | 0) + -1 & ((k2 >> 6 ^ k2) + ~((k2 >> 6 ^ k2) << 11) >> 16 ^ (k2 >> 6 ^ k2) + ~((k2 >> 6 ^ k2) << 11));
          a:
            do
              if (k2 >>> 0 < (c[b2 + 64 >> 2] | 0) >>> 0 ? (h2 = c[(c[b2 + 72 >> 2] | 0) + (k2 << 2) >> 2] | 0, (h2 | 0) != -1) : 0) {
                k2 = c[b2 + 132 >> 2] | 0;
                while (1) {
                  if ((e2 << 21 | f2 | 0) == (c[k2 + (h2 << 2) >> 2] | 0))
                    break;
                  h2 = c[(c[b2 + 92 >> 2] | 0) + (h2 << 2) >> 2] | 0;
                  if ((h2 | 0) == -1)
                    break a;
                }
                k2 = c[b2 + 112 >> 2] | 0;
                if (k2 + (h2 << 3) | 0) {
                  p2 = c[k2 + (h2 << 3) + 4 >> 2] | 0;
                  q2 = c[b2 + 8 >> 2] | 0;
                  c[p2 + 8 >> 2] = c[(c[q2 + 192 >> 2] | 0) + 8 >> 2];
                  o2 = c[b2 + 4 >> 2] | 0;
                  n2 = c[o2 + 192 >> 2] | 0;
                  c[r2 + 48 >> 2] = 0;
                  c[r2 + 48 + 4 >> 2] = n2;
                  c[r2 + 48 + 8 >> 2] = o2;
                  c[r2 + 48 + 12 >> 2] = o2 + 4;
                  c[r2 + 48 + 16 >> 2] = -1;
                  c[r2 + 48 + 20 >> 2] = -1;
                  c[r2 + 24 >> 2] = 0;
                  c[r2 + 24 + 4 >> 2] = p2;
                  c[r2 + 24 + 8 >> 2] = q2;
                  c[r2 + 24 + 12 >> 2] = q2 + 4;
                  c[r2 + 24 + 16 >> 2] = e2;
                  c[r2 + 24 + 20 >> 2] = f2;
                  q2 = sb[c[(c[m2 >> 2] | 0) + 8 >> 2] & 31](m2, r2 + 48 | 0, r2 + 24 | 0, 0) | 0;
                  ib[c[(c[q2 >> 2] | 0) + 8 >> 2] & 31](q2, r2 + 48 | 0, r2 + 24 | 0, c[b2 + 52 >> 2] | 0, c[b2 + 44 >> 2] | 0);
                  kb[c[c[q2 >> 2] >> 2] & 255](q2);
                  mb[c[(c[m2 >> 2] | 0) + 60 >> 2] & 127](m2, q2);
                  i = r2;
                  return;
                }
              }
            while (0);
          u2 = +g[d2 + 16 >> 2];
          E2 = +g[d2 >> 2];
          v2 = +g[d2 + 20 >> 2];
          s2 = +g[d2 + 4 >> 2];
          w2 = +g[d2 + 24 >> 2];
          t2 = +g[d2 + 8 >> 2];
          x2 = +g[d2 + 32 >> 2];
          z2 = +g[d2 + 36 >> 2];
          B2 = +g[d2 + 40 >> 2];
          y2 = (v2 - s2) * (B2 - t2) - (w2 - t2) * (z2 - s2);
          A2 = (w2 - t2) * (x2 - E2) - (u2 - E2) * (B2 - t2);
          D2 = (u2 - E2) * (z2 - s2) - (v2 - s2) * (x2 - E2);
          C2 = 1 / +G(+(D2 * D2 + (y2 * y2 + A2 * A2)));
          g[r2 + 48 >> 2] = E2 + C2 * y2 * 0.05999999865889549;
          g[r2 + 48 + 4 >> 2] = s2 + C2 * A2 * 0.05999999865889549;
          g[r2 + 48 + 8 >> 2] = C2 * D2 * 0.05999999865889549 + t2;
          g[r2 + 48 + 12 >> 2] = 0;
          g[r2 + 48 + 16 >> 2] = C2 * y2 * 0.05999999865889549 + u2;
          g[r2 + 48 + 20 >> 2] = C2 * A2 * 0.05999999865889549 + v2;
          g[r2 + 48 + 24 >> 2] = C2 * D2 * 0.05999999865889549 + w2;
          g[r2 + 48 + 28 >> 2] = 0;
          g[r2 + 48 + 32 >> 2] = C2 * y2 * 0.05999999865889549 + x2;
          g[r2 + 48 + 36 >> 2] = C2 * A2 * 0.05999999865889549 + z2;
          g[r2 + 48 + 40 >> 2] = C2 * D2 * 0.05999999865889549 + B2;
          g[r2 + 48 + 44 >> 2] = 0;
          g[r2 + 48 + 48 >> 2] = E2 - C2 * y2 * 0.05999999865889549;
          g[r2 + 48 + 52 >> 2] = s2 - C2 * A2 * 0.05999999865889549;
          g[r2 + 48 + 56 >> 2] = t2 - C2 * D2 * 0.05999999865889549;
          g[r2 + 48 + 60 >> 2] = 0;
          g[r2 + 48 + 64 >> 2] = u2 - C2 * y2 * 0.05999999865889549;
          g[r2 + 48 + 68 >> 2] = v2 - C2 * A2 * 0.05999999865889549;
          g[r2 + 48 + 72 >> 2] = w2 - C2 * D2 * 0.05999999865889549;
          g[r2 + 48 + 76 >> 2] = 0;
          g[r2 + 48 + 80 >> 2] = x2 - C2 * y2 * 0.05999999865889549;
          g[r2 + 48 + 84 >> 2] = z2 - C2 * A2 * 0.05999999865889549;
          g[r2 + 48 + 88 >> 2] = B2 - C2 * D2 * 0.05999999865889549;
          g[r2 + 48 + 92 >> 2] = 0;
          c[6324] = (c[6324] | 0) + 1;
          h2 = ic(135) | 0;
          if (!h2)
            h2 = 0;
          else {
            c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
            h2 = h2 + 4 + 15 & -16;
          }
          Zf(h2, r2 + 48 | 0, 6, 16);
          q2 = c[b2 + 8 >> 2] | 0;
          c[h2 + 8 >> 2] = c[(c[q2 + 192 >> 2] | 0) + 8 >> 2];
          p2 = c[b2 + 4 >> 2] | 0;
          d2 = c[p2 + 192 >> 2] | 0;
          c[r2 + 24 >> 2] = 0;
          c[r2 + 24 + 4 >> 2] = d2;
          c[r2 + 24 + 8 >> 2] = p2;
          c[r2 + 24 + 12 >> 2] = p2 + 4;
          c[r2 + 24 + 16 >> 2] = -1;
          c[r2 + 24 + 20 >> 2] = -1;
          c[r2 >> 2] = 0;
          c[r2 + 4 >> 2] = h2;
          c[r2 + 8 >> 2] = q2;
          c[r2 + 12 >> 2] = q2 + 4;
          c[r2 + 16 >> 2] = e2;
          c[r2 + 20 >> 2] = f2;
          q2 = sb[c[(c[m2 >> 2] | 0) + 8 >> 2] & 31](m2, r2 + 24 | 0, r2, 0) | 0;
          ib[c[(c[q2 >> 2] | 0) + 8 >> 2] & 31](q2, r2 + 24 | 0, r2, c[b2 + 52 >> 2] | 0, c[b2 + 44 >> 2] | 0);
          kb[c[c[q2 >> 2] >> 2] & 255](q2);
          mb[c[(c[m2 >> 2] | 0) + 60 >> 2] & 127](m2, q2);
          q2 = ((e2 << 21 | f2) + ~(f2 << 15) >> 10 ^ (e2 << 21 | f2) + ~(f2 << 15)) * 9 | 0;
          q2 = (q2 >> 6 ^ q2) + ~((q2 >> 6 ^ q2) << 11) >> 16 ^ (q2 >> 6 ^ q2) + ~((q2 >> 6 ^ q2) << 11);
          m2 = c[b2 + 108 >> 2] | 0;
          b:
            do
              if ((q2 & m2 + -1) >>> 0 < (c[b2 + 64 >> 2] | 0) >>> 0 ? (j2 = c[(c[b2 + 72 >> 2] | 0) + ((q2 & m2 + -1) << 2) >> 2] | 0, (j2 | 0) != -1) : 0) {
                k2 = c[b2 + 132 >> 2] | 0;
                while (1) {
                  if ((e2 << 21 | f2 | 0) == (c[k2 + (j2 << 2) >> 2] | 0))
                    break;
                  j2 = c[(c[b2 + 92 >> 2] | 0) + (j2 << 2) >> 2] | 0;
                  if ((j2 | 0) == -1) {
                    n2 = 20;
                    break b;
                  }
                }
                b2 = c[b2 + 112 >> 2] | 0;
                c[b2 + (j2 << 3) >> 2] = e2 << 21 | f2;
                c[b2 + (j2 << 3) + 4 >> 2] = h2;
              } else
                n2 = 20;
            while (0);
          if ((n2 | 0) == 20) {
            p2 = c[b2 + 104 >> 2] | 0;
            if ((p2 | 0) == (m2 | 0)) {
              d2 = m2 | 0 ? m2 << 1 : 1;
              if ((m2 | 0) < (d2 | 0)) {
                if (!d2) {
                  j2 = 0;
                  l2 = m2;
                } else {
                  c[6324] = (c[6324] | 0) + 1;
                  j2 = ic((d2 << 3 | 3) + 16 | 0) | 0;
                  if (!j2)
                    j2 = 0;
                  else {
                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                    j2 = j2 + 4 + 15 & -16;
                  }
                  l2 = c[b2 + 104 >> 2] | 0;
                }
                if ((l2 | 0) > 0) {
                  k2 = 0;
                  do {
                    I2 = (c[b2 + 112 >> 2] | 0) + (k2 << 3) | 0;
                    H2 = c[I2 + 4 >> 2] | 0;
                    F2 = j2 + (k2 << 3) | 0;
                    c[F2 >> 2] = c[I2 >> 2];
                    c[F2 + 4 >> 2] = H2;
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) != (l2 | 0));
                }
                k2 = c[b2 + 112 >> 2] | 0;
                if (k2 | 0) {
                  if (a[b2 + 116 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[k2 + -4 >> 2] | 0);
                  }
                  c[b2 + 112 >> 2] = 0;
                }
                a[b2 + 116 >> 0] = 1;
                c[b2 + 112 >> 2] = j2;
                c[b2 + 108 >> 2] = d2;
                j2 = c[b2 + 104 >> 2] | 0;
              } else
                j2 = m2;
            } else
              j2 = p2;
            I2 = c[b2 + 112 >> 2] | 0;
            c[I2 + (j2 << 3) >> 2] = e2 << 21 | f2;
            c[I2 + (j2 << 3) + 4 >> 2] = h2;
            c[b2 + 104 >> 2] = (c[b2 + 104 >> 2] | 0) + 1;
            h2 = c[b2 + 124 >> 2] | 0;
            if ((h2 | 0) == (c[b2 + 128 >> 2] | 0) ? (o2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (o2 | 0)) : 0) {
              if (!o2)
                l2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                h2 = ic((o2 << 2 | 3) + 16 | 0) | 0;
                if (!h2)
                  h2 = 0;
                else {
                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                  h2 = h2 + 4 + 15 & -16;
                }
                l2 = h2;
                h2 = c[b2 + 124 >> 2] | 0;
              }
              k2 = c[b2 + 132 >> 2] | 0;
              if ((h2 | 0) <= 0)
                if (!k2)
                  h2 = b2 + 136 | 0;
                else
                  n2 = 43;
              else {
                j2 = 0;
                do {
                  c[l2 + (j2 << 2) >> 2] = c[k2 + (j2 << 2) >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (h2 | 0));
                n2 = 43;
              }
              if ((n2 | 0) == 43) {
                if (a[b2 + 136 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[k2 + -4 >> 2] | 0);
                }
                c[b2 + 132 >> 2] = 0;
                h2 = b2 + 136 | 0;
              }
              a[h2 >> 0] = 1;
              c[b2 + 132 >> 2] = l2;
              c[b2 + 128 >> 2] = o2;
              h2 = c[b2 + 124 >> 2] | 0;
            }
            c[(c[b2 + 132 >> 2] | 0) + (h2 << 2) >> 2] = e2 << 21 | f2;
            c[b2 + 124 >> 2] = (c[b2 + 124 >> 2] | 0) + 1;
            n2 = c[b2 + 108 >> 2] | 0;
            if ((m2 | 0) < (n2 | 0)) {
              o2 = c[b2 + 64 >> 2] | 0;
              if ((o2 | 0) < (n2 | 0)) {
                do
                  if ((c[b2 + 68 >> 2] | 0) < (n2 | 0)) {
                    if (!n2) {
                      h2 = 0;
                      k2 = o2;
                    } else {
                      c[6324] = (c[6324] | 0) + 1;
                      h2 = ic((n2 << 2 | 3) + 16 | 0) | 0;
                      if (!h2)
                        h2 = 0;
                      else {
                        c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                        h2 = h2 + 4 + 15 & -16;
                      }
                      k2 = c[b2 + 64 >> 2] | 0;
                    }
                    l2 = c[b2 + 72 >> 2] | 0;
                    if ((k2 | 0) <= 0) {
                      if (!l2) {
                        a[b2 + 76 >> 0] = 1;
                        c[b2 + 72 >> 2] = h2;
                        c[b2 + 68 >> 2] = n2;
                        m2 = b2 + 72 | 0;
                        break;
                      }
                    } else {
                      j2 = 0;
                      do {
                        c[h2 + (j2 << 2) >> 2] = c[l2 + (j2 << 2) >> 2];
                        j2 = j2 + 1 | 0;
                      } while ((j2 | 0) != (k2 | 0));
                    }
                    if (a[b2 + 76 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[l2 + -4 >> 2] | 0);
                    }
                    a[b2 + 76 >> 0] = 1;
                    c[b2 + 72 >> 2] = h2;
                    c[b2 + 68 >> 2] = n2;
                    m2 = b2 + 72 | 0;
                  } else {
                    m2 = b2 + 72 | 0;
                    h2 = c[b2 + 72 >> 2] | 0;
                  }
                while (0);
                yn(h2 + (o2 << 2) | 0, 0, (n2 << 2) - (o2 << 2) | 0) | 0;
                c[b2 + 64 >> 2] = n2;
                d2 = c[b2 + 84 >> 2] | 0;
                if ((d2 | 0) < (n2 | 0)) {
                  do
                    if ((c[b2 + 88 >> 2] | 0) < (n2 | 0)) {
                      if (!n2) {
                        h2 = 0;
                        k2 = d2;
                      } else {
                        c[6324] = (c[6324] | 0) + 1;
                        h2 = ic((n2 << 2 | 3) + 16 | 0) | 0;
                        if (!h2)
                          h2 = 0;
                        else {
                          c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                          h2 = h2 + 4 + 15 & -16;
                        }
                        k2 = c[b2 + 84 >> 2] | 0;
                      }
                      l2 = c[b2 + 92 >> 2] | 0;
                      if ((k2 | 0) <= 0) {
                        if (!l2) {
                          a[b2 + 96 >> 0] = 1;
                          c[b2 + 92 >> 2] = h2;
                          c[b2 + 88 >> 2] = n2;
                          break;
                        }
                      } else {
                        j2 = 0;
                        do {
                          c[h2 + (j2 << 2) >> 2] = c[l2 + (j2 << 2) >> 2];
                          j2 = j2 + 1 | 0;
                        } while ((j2 | 0) != (k2 | 0));
                      }
                      if (a[b2 + 96 >> 0] | 0) {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[l2 + -4 >> 2] | 0);
                      }
                      a[b2 + 96 >> 0] = 1;
                      c[b2 + 92 >> 2] = h2;
                      c[b2 + 88 >> 2] = n2;
                    } else
                      h2 = c[b2 + 92 >> 2] | 0;
                  while (0);
                  yn(h2 + (d2 << 2) | 0, 0, (n2 << 2) - (d2 << 2) | 0) | 0;
                }
                c[b2 + 84 >> 2] = n2;
                if ((n2 | 0) > 0) {
                  yn(c[m2 >> 2] | 0, -1, n2 << 2 | 0) | 0;
                  yn(c[b2 + 92 >> 2] | 0, -1, n2 << 2 | 0) | 0;
                }
                if ((o2 | 0) > 0) {
                  l2 = c[b2 + 132 >> 2] | 0;
                  j2 = c[m2 >> 2] | 0;
                  k2 = c[b2 + 92 >> 2] | 0;
                  h2 = 0;
                  do {
                    I2 = c[l2 + (h2 << 2) >> 2] | 0;
                    I2 = (I2 + ~(I2 << 15) >> 10 ^ I2 + ~(I2 << 15)) * 9 | 0;
                    I2 = j2 + ((((I2 >> 6 ^ I2) + ~((I2 >> 6 ^ I2) << 11) >> 16 ^ (I2 >> 6 ^ I2) + ~((I2 >> 6 ^ I2) << 11)) & (c[b2 + 108 >> 2] | 0) + -1) << 2) | 0;
                    c[k2 + (h2 << 2) >> 2] = c[I2 >> 2];
                    c[I2 >> 2] = h2;
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (o2 | 0));
                }
              }
              h2 = q2 & (c[b2 + 108 >> 2] | 0) + -1;
            } else
              h2 = q2 & m2 + -1;
            I2 = (c[b2 + 72 >> 2] | 0) + (h2 << 2) | 0;
            c[(c[b2 + 92 >> 2] | 0) + (p2 << 2) >> 2] = c[I2 >> 2];
            c[I2 >> 2] = p2;
          }
          i = r2;
          return;
        }
        function Ec(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
          B2 = i;
          i = i + 176 | 0;
          c[a2 + 348 >> 2] = a2 + 220;
          c[a2 + 352 >> 2] = a2 + 252;
          c[a2 + 356 >> 2] = a2 + 284;
          c[a2 + 360 >> 2] = a2 + 316;
          c[a2 + 364 >> 2] = 4;
          c[a2 + 368 >> 2] = 0;
          c[a2 + 376 >> 2] = 0;
          x2 = c[b2 + 4 >> 2] | 0;
          c[a2 >> 2] = c[b2 >> 2];
          c[a2 + 4 >> 2] = x2;
          c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 8 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
          c[a2 + 8 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
          c[a2 + 8 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
          c[a2 + 24 >> 2] = c[b2 + 24 >> 2];
          c[a2 + 24 + 4 >> 2] = c[b2 + 24 + 4 >> 2];
          c[a2 + 24 + 8 >> 2] = c[b2 + 24 + 8 >> 2];
          c[a2 + 24 + 12 >> 2] = c[b2 + 24 + 12 >> 2];
          c[a2 + 40 >> 2] = c[b2 + 40 >> 2];
          c[a2 + 40 + 4 >> 2] = c[b2 + 40 + 4 >> 2];
          c[a2 + 40 + 8 >> 2] = c[b2 + 40 + 8 >> 2];
          c[a2 + 40 + 12 >> 2] = c[b2 + 40 + 12 >> 2];
          c[a2 + 56 >> 2] = c[b2 + 56 >> 2];
          c[a2 + 56 + 4 >> 2] = c[b2 + 56 + 4 >> 2];
          c[a2 + 56 + 8 >> 2] = c[b2 + 56 + 8 >> 2];
          c[a2 + 56 + 12 >> 2] = c[b2 + 56 + 12 >> 2];
          c[a2 + 72 >> 2] = c[b2 + 72 >> 2];
          c[a2 + 72 + 4 >> 2] = c[b2 + 72 + 4 >> 2];
          c[a2 + 72 + 8 >> 2] = c[b2 + 72 + 8 >> 2];
          c[a2 + 72 + 12 >> 2] = c[b2 + 72 + 12 >> 2];
          c[a2 + 88 >> 2] = c[b2 + 88 >> 2];
          c[a2 + 88 + 4 >> 2] = c[b2 + 88 + 4 >> 2];
          c[a2 + 88 + 8 >> 2] = c[b2 + 88 + 8 >> 2];
          c[a2 + 88 + 12 >> 2] = c[b2 + 88 + 12 >> 2];
          c[a2 + 104 >> 2] = c[b2 + 104 >> 2];
          c[a2 + 104 + 4 >> 2] = c[b2 + 104 + 4 >> 2];
          c[a2 + 104 + 8 >> 2] = c[b2 + 104 + 8 >> 2];
          c[a2 + 104 + 12 >> 2] = c[b2 + 104 + 12 >> 2];
          x2 = c[b2 + 124 >> 2] | 0;
          c[a2 + 120 >> 2] = c[b2 + 120 >> 2];
          c[a2 + 124 >> 2] = x2;
          g[a2 + 144 >> 2] = 0;
          c[a2 + 180 >> 2] = 0;
          c[a2 + 128 >> 2] = c[d2 >> 2];
          c[a2 + 128 + 4 >> 2] = c[d2 + 4 >> 2];
          c[a2 + 128 + 8 >> 2] = c[d2 + 8 >> 2];
          c[a2 + 128 + 12 >> 2] = c[d2 + 12 >> 2];
          e2 = +g[a2 + 128 >> 2];
          f2 = +g[a2 + 132 >> 2];
          h2 = +g[a2 + 136 >> 2];
          if (e2 * e2 + f2 * f2 + h2 * h2 > 0) {
            g[a2 + 164 >> 2] = 0;
            c[a2 + 364 >> 2] = 3;
            c[a2 + 148 >> 2] = a2 + 316;
            c[a2 + 180 >> 2] = 1;
            Ch(a2, -e2, -f2, -h2, a2 + 316 | 0);
            b2 = a2 + 148 | 0;
            d2 = a2 + 164 | 0;
          } else {
            g[a2 + 164 >> 2] = 0;
            c[a2 + 364 >> 2] = 3;
            c[a2 + 148 >> 2] = a2 + 316;
            c[a2 + 180 >> 2] = 1;
            Ch(a2, 1, 0, 0, a2 + 316 | 0);
            b2 = a2 + 148 | 0;
            d2 = a2 + 164 | 0;
          }
          g[d2 >> 2] = 1;
          x2 = (c[b2 >> 2] | 0) + 16 | 0;
          c[a2 + 128 >> 2] = c[x2 >> 2];
          c[a2 + 128 + 4 >> 2] = c[x2 + 4 >> 2];
          c[a2 + 128 + 8 >> 2] = c[x2 + 8 >> 2];
          c[a2 + 128 + 12 >> 2] = c[x2 + 12 >> 2];
          c[B2 + 24 + 48 >> 2] = c[x2 >> 2];
          c[B2 + 24 + 48 + 4 >> 2] = c[x2 + 4 >> 2];
          c[B2 + 24 + 48 + 8 >> 2] = c[x2 + 8 >> 2];
          c[B2 + 24 + 48 + 12 >> 2] = c[x2 + 12 >> 2];
          c[B2 + 24 + 32 >> 2] = c[x2 >> 2];
          c[B2 + 24 + 32 + 4 >> 2] = c[x2 + 4 >> 2];
          c[B2 + 24 + 32 + 8 >> 2] = c[x2 + 8 >> 2];
          c[B2 + 24 + 32 + 12 >> 2] = c[x2 + 12 >> 2];
          c[B2 + 24 + 16 >> 2] = c[x2 >> 2];
          c[B2 + 24 + 16 + 4 >> 2] = c[x2 + 4 >> 2];
          c[B2 + 24 + 16 + 8 >> 2] = c[x2 + 8 >> 2];
          c[B2 + 24 + 16 + 12 >> 2] = c[x2 + 12 >> 2];
          c[B2 + 24 >> 2] = c[x2 >> 2];
          c[B2 + 24 + 4 >> 2] = c[x2 + 4 >> 2];
          c[B2 + 24 + 8 >> 2] = c[x2 + 8 >> 2];
          c[B2 + 24 + 12 >> 2] = c[x2 + 12 >> 2];
          x2 = 0;
          y2 = 0;
          e2 = e2 * e2 + f2 * f2 + h2 * h2;
          v2 = 0;
          a:
            do {
              w2 = c[a2 + 368 >> 2] | 0;
              f2 = +g[a2 + 128 >> 2];
              h2 = +g[a2 + 132 >> 2];
              j2 = +g[a2 + 136 >> 2];
              o2 = +G(+(f2 * f2 + h2 * h2 + j2 * j2));
              if (o2 < 9999999747378752e-20) {
                A2 = 6;
                break;
              }
              g[a2 + 148 + (w2 * 36 | 0) + 16 + (c[a2 + 148 + (w2 * 36 | 0) + 32 >> 2] << 2) >> 2] = 0;
              b2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
              c[a2 + 364 >> 2] = b2;
              c[a2 + 148 + (w2 * 36 | 0) + (c[a2 + 148 + (w2 * 36 | 0) + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (b2 << 2) >> 2];
              b2 = c[a2 + 148 + (w2 * 36 | 0) + 32 >> 2] | 0;
              c[a2 + 148 + (w2 * 36 | 0) + 32 >> 2] = b2 + 1;
              Ch(a2, -f2, -h2, -j2, c[a2 + 148 + (w2 * 36 | 0) + (b2 << 2) >> 2] | 0);
              b2 = c[a2 + 148 + (w2 * 36 | 0) + 32 >> 2] | 0;
              d2 = c[a2 + 148 + (w2 * 36 | 0) + (b2 + -1 << 2) >> 2] | 0;
              f2 = +g[d2 + 16 >> 2];
              h2 = +g[d2 + 20 >> 2];
              j2 = +g[d2 + 24 >> 2];
              r2 = f2 - +g[B2 + 24 >> 2];
              s2 = h2 - +g[B2 + 24 + 4 >> 2];
              u2 = j2 - +g[B2 + 24 + 8 >> 2];
              if (r2 * r2 + s2 * s2 + u2 * u2 < 9999999747378752e-20) {
                A2 = 9;
                break;
              }
              r2 = f2 - +g[B2 + 24 + 16 >> 2];
              s2 = h2 - +g[B2 + 24 + 20 >> 2];
              u2 = j2 - +g[B2 + 24 + 24 >> 2];
              if (r2 * r2 + s2 * s2 + u2 * u2 < 9999999747378752e-20) {
                A2 = 9;
                break;
              }
              r2 = f2 - +g[B2 + 24 + 32 >> 2];
              s2 = h2 - +g[B2 + 24 + 36 >> 2];
              u2 = j2 - +g[B2 + 24 + 40 >> 2];
              if (r2 * r2 + s2 * s2 + u2 * u2 < 9999999747378752e-20) {
                A2 = 9;
                break;
              }
              r2 = f2 - +g[B2 + 24 + 48 >> 2];
              s2 = h2 - +g[B2 + 24 + 52 >> 2];
              u2 = j2 - +g[B2 + 24 + 56 >> 2];
              if (r2 * r2 + s2 * s2 + u2 * u2 < 9999999747378752e-20) {
                A2 = 9;
                break;
              }
              v2 = v2 + 1 & 3;
              t2 = B2 + 24 + (v2 << 4) | 0;
              c[t2 >> 2] = c[d2 + 16 >> 2];
              c[t2 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
              c[t2 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
              c[t2 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
              u2 = (+g[a2 + 128 >> 2] * f2 + +g[a2 + 132 >> 2] * h2 + +g[a2 + 136 >> 2] * j2) / o2;
              y2 = u2 > y2 ? u2 : y2;
              if (o2 - y2 - o2 * 9999999747378752e-20 <= 0) {
                A2 = 10;
                break;
              }
              c[B2 >> 2] = 0;
              b:
                do
                  switch (b2 | 0) {
                    case 2: {
                      t2 = c[a2 + 148 + (w2 * 36 | 0) >> 2] | 0;
                      n2 = c[a2 + 148 + (w2 * 36 | 0) + 4 >> 2] | 0;
                      e2 = +g[n2 + 16 >> 2];
                      f2 = +g[t2 + 16 >> 2];
                      h2 = +g[n2 + 20 >> 2];
                      j2 = +g[t2 + 20 >> 2];
                      o2 = +g[n2 + 24 >> 2];
                      p2 = +g[t2 + 24 >> 2];
                      if (!((e2 - f2) * (e2 - f2) + (h2 - j2) * (h2 - j2) + (o2 - p2) * (o2 - p2) > 0)) {
                        A2 = 40;
                        break a;
                      }
                      q2 = -(f2 * (e2 - f2) + j2 * (h2 - j2) + p2 * (o2 - p2)) / ((e2 - f2) * (e2 - f2) + (h2 - j2) * (h2 - j2) + (o2 - p2) * (o2 - p2));
                      if (q2 >= 1) {
                        g[B2 + 8 >> 2] = 0;
                        g[B2 + 8 + 4 >> 2] = 1;
                        c[B2 >> 2] = 2;
                        e2 = e2 * e2 + h2 * h2 + o2 * o2;
                        break b;
                      }
                      if (!(q2 <= 0)) {
                        g[B2 + 8 + 4 >> 2] = q2;
                        g[B2 + 8 >> 2] = 1 - q2;
                        c[B2 >> 2] = 3;
                        e2 = ((e2 - f2) * q2 + f2) * ((e2 - f2) * q2 + f2) + ((h2 - j2) * q2 + j2) * ((h2 - j2) * q2 + j2) + ((o2 - p2) * q2 + p2) * ((o2 - p2) * q2 + p2);
                        break b;
                      } else {
                        g[B2 + 8 >> 2] = 1;
                        g[B2 + 8 + 4 >> 2] = 0;
                        c[B2 >> 2] = 1;
                        e2 = f2 * f2 + j2 * j2 + p2 * p2;
                        break b;
                      }
                    }
                    case 3: {
                      e2 = +we((c[a2 + 148 + (w2 * 36 | 0) >> 2] | 0) + 16 | 0, (c[a2 + 148 + (w2 * 36 | 0) + 4 >> 2] | 0) + 16 | 0, (c[a2 + 148 + (w2 * 36 | 0) + 8 >> 2] | 0) + 16 | 0, B2 + 8 | 0, B2);
                      break;
                    }
                    case 4: {
                      k2 = c[a2 + 148 + (w2 * 36 | 0) >> 2] | 0;
                      m2 = c[a2 + 148 + (w2 * 36 | 0) + 4 >> 2] | 0;
                      n2 = c[a2 + 148 + (w2 * 36 | 0) + 8 >> 2] | 0;
                      t2 = c[a2 + 148 + (w2 * 36 | 0) + 12 >> 2] | 0;
                      c[B2 + 152 >> 2] = k2 + 16;
                      c[B2 + 152 + 4 >> 2] = m2 + 16;
                      c[B2 + 152 + 8 >> 2] = n2 + 16;
                      c[B2 + 152 + 12 >> 2] = t2 + 16;
                      j2 = +g[k2 + 16 >> 2];
                      o2 = +g[t2 + 16 >> 2];
                      f2 = +g[k2 + 20 >> 2];
                      p2 = +g[t2 + 20 >> 2];
                      h2 = +g[k2 + 24 >> 2];
                      q2 = +g[t2 + 24 >> 2];
                      g[B2 + 104 >> 2] = j2 - o2;
                      g[B2 + 104 + 4 >> 2] = f2 - p2;
                      g[B2 + 104 + 8 >> 2] = h2 - q2;
                      g[B2 + 104 + 12 >> 2] = 0;
                      e2 = +g[m2 + 16 >> 2];
                      D2 = +g[m2 + 20 >> 2];
                      s2 = +g[m2 + 24 >> 2];
                      g[B2 + 104 + 16 >> 2] = e2 - o2;
                      g[B2 + 104 + 20 >> 2] = D2 - p2;
                      g[B2 + 104 + 24 >> 2] = s2 - q2;
                      g[B2 + 104 + 28 >> 2] = 0;
                      r2 = +g[n2 + 16 >> 2];
                      E2 = +g[n2 + 20 >> 2];
                      C2 = +g[n2 + 24 >> 2];
                      g[B2 + 104 + 32 >> 2] = r2 - o2;
                      g[B2 + 104 + 36 >> 2] = E2 - p2;
                      g[B2 + 104 + 40 >> 2] = C2 - q2;
                      g[B2 + 104 + 44 >> 2] = 0;
                      u2 = (f2 - p2) * (s2 - q2) * (r2 - o2) + (h2 - q2) * (e2 - o2) * (E2 - p2) - (E2 - p2) * (s2 - q2) * (j2 - o2) - (f2 - p2) * (e2 - o2) * (C2 - q2) + (C2 - q2) * (j2 - o2) * (D2 - p2) - (r2 - o2) * (h2 - q2) * (D2 - p2);
                      if (u2 != u2 | false | u2 == 0 | !(u2 * (h2 * ((e2 - r2) * (f2 - D2) - (D2 - E2) * (j2 - e2)) + (j2 * ((D2 - E2) * (h2 - s2) - (s2 - C2) * (f2 - D2)) + f2 * ((s2 - C2) * (j2 - e2) - (e2 - r2) * (h2 - s2)))) <= 0))
                        e2 = -1;
                      else {
                        c[B2 + 92 >> 2] = 0;
                        c[B2 + 92 + 4 >> 2] = 0;
                        c[B2 + 92 + 8 >> 2] = 0;
                        c[B2 + 88 >> 2] = 0;
                        e2 = -1;
                        d2 = 0;
                        s2 = f2 - p2;
                        r2 = h2 - q2;
                        j2 = j2 - o2;
                        h2 = p2;
                        f2 = q2;
                        while (1) {
                          b2 = c[8796 + (d2 << 2) >> 2] | 0;
                          C2 = +g[B2 + 104 + (b2 << 4) + 8 >> 2];
                          D2 = +g[B2 + 104 + (b2 << 4) + 4 >> 2];
                          E2 = +g[B2 + 104 + (b2 << 4) >> 2];
                          if (u2 * ((s2 * C2 - r2 * D2) * o2 + h2 * (r2 * E2 - C2 * j2) + (D2 * j2 - s2 * E2) * f2) > 0 ? (z2 = +we(c[B2 + 152 + (d2 << 2) >> 2] | 0, c[B2 + 152 + (b2 << 2) >> 2] | 0, t2 + 16 | 0, B2 + 92 | 0, B2 + 88 | 0), e2 < 0 | z2 < e2) : 0) {
                            F2 = c[B2 + 88 >> 2] | 0;
                            c[B2 >> 2] = (F2 & 2 | 0 ? 1 << b2 : 0) + (F2 << 1 & 8) + (F2 & 1 | 0 ? 1 << d2 : 0);
                            c[B2 + 8 + (d2 << 2) >> 2] = c[B2 + 92 >> 2];
                            c[B2 + 8 + (b2 << 2) >> 2] = c[B2 + 92 + 4 >> 2];
                            g[B2 + 8 + (c[8796 + (b2 << 2) >> 2] << 2) >> 2] = 0;
                            c[B2 + 8 + 12 >> 2] = c[B2 + 92 + 8 >> 2];
                            e2 = z2;
                          }
                          b2 = d2 + 1 | 0;
                          if ((b2 | 0) == 3)
                            break;
                          d2 = b2;
                          s2 = +g[B2 + 104 + (b2 << 4) + 4 >> 2];
                          r2 = +g[B2 + 104 + (b2 << 4) + 8 >> 2];
                          j2 = +g[B2 + 104 + (b2 << 4) >> 2];
                          o2 = +g[t2 + 16 >> 2];
                          h2 = +g[t2 + 20 >> 2];
                          f2 = +g[t2 + 24 >> 2];
                        }
                        if (e2 < 0) {
                          c[B2 >> 2] = 15;
                          j2 = +g[n2 + 20 >> 2];
                          E2 = +g[m2 + 24 >> 2];
                          D2 = +g[t2 + 16 >> 2];
                          f2 = +g[n2 + 24 >> 2];
                          C2 = +g[m2 + 16 >> 2];
                          o2 = +g[t2 + 20 >> 2];
                          h2 = +g[n2 + 16 >> 2];
                          s2 = +g[t2 + 24 >> 2];
                          q2 = +g[m2 + 20 >> 2];
                          g[B2 + 8 >> 2] = (j2 * E2 * D2 + f2 * C2 * o2 - o2 * E2 * h2 - j2 * C2 * s2 + s2 * h2 * q2 - D2 * f2 * q2) / u2;
                          e2 = +g[k2 + 20 >> 2];
                          p2 = +g[k2 + 24 >> 2];
                          r2 = +g[k2 + 16 >> 2];
                          g[B2 + 8 + 4 >> 2] = (e2 * f2 * D2 + p2 * h2 * o2 - o2 * f2 * r2 - e2 * h2 * s2 + s2 * r2 * j2 - D2 * p2 * j2) / u2;
                          g[B2 + 8 + 8 >> 2] = (q2 * p2 * D2 + E2 * r2 * o2 - o2 * p2 * C2 - q2 * r2 * s2 + s2 * C2 * e2 - D2 * E2 * e2) / u2;
                          g[B2 + 8 + 12 >> 2] = 1 - ((j2 * E2 * D2 + f2 * C2 * o2 - o2 * E2 * h2 - j2 * C2 * s2 + s2 * h2 * q2 - D2 * f2 * q2) / u2 + (e2 * f2 * D2 + p2 * h2 * o2 - o2 * f2 * r2 - e2 * h2 * s2 + s2 * r2 * j2 - D2 * p2 * j2) / u2 + (q2 * p2 * D2 + E2 * r2 * o2 - o2 * p2 * C2 - q2 * r2 * s2 + s2 * C2 * e2 - D2 * E2 * e2) / u2);
                          e2 = 0;
                        }
                      }
                      break;
                    }
                    default: {
                    }
                  }
                while (0);
              if (!(e2 >= 0)) {
                A2 = 40;
                break;
              }
              c[a2 + 148 + ((1 - w2 | 0) * 36 | 0) + 32 >> 2] = 0;
              c[a2 + 128 >> 2] = 0;
              c[a2 + 128 + 4 >> 2] = 0;
              c[a2 + 128 + 8 >> 2] = 0;
              c[a2 + 128 + 12 >> 2] = 0;
              c[a2 + 368 >> 2] = 1 - w2;
              d2 = c[a2 + 148 + (w2 * 36 | 0) + 32 >> 2] | 0;
              k2 = c[B2 >> 2] | 0;
              if (d2 | 0) {
                b2 = 0;
                do {
                  m2 = a2 + 148 + (w2 * 36 | 0) + (b2 << 2) | 0;
                  n2 = c[m2 >> 2] | 0;
                  if (!(k2 & 1 << b2)) {
                    F2 = c[a2 + 364 >> 2] | 0;
                    c[a2 + 364 >> 2] = F2 + 1;
                    c[a2 + 348 + (F2 << 2) >> 2] = n2;
                  } else {
                    c[a2 + 148 + ((1 - w2 | 0) * 36 | 0) + (c[a2 + 148 + ((1 - w2 | 0) * 36 | 0) + 32 >> 2] << 2) >> 2] = n2;
                    t2 = c[B2 + 8 + (b2 << 2) >> 2] | 0;
                    F2 = c[a2 + 148 + ((1 - w2 | 0) * 36 | 0) + 32 >> 2] | 0;
                    c[a2 + 148 + ((1 - w2 | 0) * 36 | 0) + 32 >> 2] = F2 + 1;
                    c[a2 + 148 + ((1 - w2 | 0) * 36 | 0) + 16 + (F2 << 2) >> 2] = t2;
                    F2 = c[m2 >> 2] | 0;
                    C2 = (c[l >> 2] = t2, +g[l >> 2]);
                    D2 = C2 * +g[F2 + 20 >> 2];
                    E2 = C2 * +g[F2 + 24 >> 2];
                    g[a2 + 128 >> 2] = +g[F2 + 16 >> 2] * C2 + +g[a2 + 128 >> 2];
                    g[a2 + 132 >> 2] = D2 + +g[a2 + 132 >> 2];
                    g[a2 + 136 >> 2] = E2 + +g[a2 + 136 >> 2];
                  }
                  b2 = b2 + 1 | 0;
                } while ((b2 | 0) != (d2 | 0));
              }
              if ((k2 | 0) == 15)
                c[a2 + 376 >> 2] = 1;
              x2 = x2 + 1 | 0;
              if (x2 >>> 0 >= 128) {
                A2 = 39;
                break;
              }
            } while (!(c[a2 + 376 >> 2] | 0));
          if ((A2 | 0) == 6)
            c[a2 + 376 >> 2] = 1;
          else if ((A2 | 0) == 9) {
            F2 = c[a2 + 368 >> 2] | 0;
            A2 = (c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] | 0) + -1 | 0;
            c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] = A2;
            A2 = c[a2 + 148 + (F2 * 36 | 0) + (A2 << 2) >> 2] | 0;
            F2 = c[a2 + 364 >> 2] | 0;
            c[a2 + 364 >> 2] = F2 + 1;
            c[a2 + 348 + (F2 << 2) >> 2] = A2;
          } else if ((A2 | 0) == 10) {
            F2 = c[a2 + 368 >> 2] | 0;
            A2 = (c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] | 0) + -1 | 0;
            c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] = A2;
            A2 = c[a2 + 148 + (F2 * 36 | 0) + (A2 << 2) >> 2] | 0;
            F2 = c[a2 + 364 >> 2] | 0;
            c[a2 + 364 >> 2] = F2 + 1;
            c[a2 + 348 + (F2 << 2) >> 2] = A2;
          } else if ((A2 | 0) == 39)
            c[a2 + 376 >> 2] = 2;
          else if ((A2 | 0) == 40) {
            F2 = c[a2 + 368 >> 2] | 0;
            A2 = (c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] | 0) + -1 | 0;
            c[a2 + 148 + (F2 * 36 | 0) + 32 >> 2] = A2;
            A2 = c[a2 + 148 + (F2 * 36 | 0) + (A2 << 2) >> 2] | 0;
            F2 = c[a2 + 364 >> 2] | 0;
            c[a2 + 364 >> 2] = F2 + 1;
            c[a2 + 348 + (F2 << 2) >> 2] = A2;
          }
          c[a2 + 372 >> 2] = a2 + 148 + ((c[a2 + 368 >> 2] | 0) * 36 | 0);
          b2 = c[a2 + 376 >> 2] | 0;
          switch (b2 | 0) {
            case 0: {
              C2 = +g[a2 + 128 >> 2];
              D2 = +g[a2 + 132 >> 2];
              E2 = +g[a2 + 136 >> 2];
              g[a2 + 144 >> 2] = +G(+(C2 * C2 + D2 * D2 + E2 * E2));
              i = B2;
              return b2 | 0;
            }
            case 1: {
              g[a2 + 144 >> 2] = 0;
              i = B2;
              return b2 | 0;
            }
            default: {
              i = B2;
              return b2 | 0;
            }
          }
          return 0;
        }
        function Fc(b2, d2, e2, f2, h2, j2, k2, l2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = +j2;
          k2 = +k2;
          l2 = l2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0;
          X2 = i;
          i = i + 16 | 0;
          m2 = c[h2 + 4 >> 2] | 0;
          if ((m2 | 0) < 0) {
            if ((c[h2 + 8 >> 2] | 0) < 0) {
              o2 = c[h2 + 12 >> 2] | 0;
              if (o2 | 0) {
                if (a[h2 + 16 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[o2 + -4 >> 2] | 0);
                }
                c[h2 + 12 >> 2] = 0;
              }
              a[h2 + 16 >> 0] = 1;
              c[h2 + 12 >> 2] = 0;
              c[h2 + 8 >> 2] = 0;
            }
            do {
              W2 = (c[h2 + 12 >> 2] | 0) + (m2 << 4) | 0;
              c[W2 >> 2] = c[X2 >> 2];
              c[W2 + 4 >> 2] = c[X2 + 4 >> 2];
              c[W2 + 8 >> 2] = c[X2 + 8 >> 2];
              c[W2 + 12 >> 2] = c[X2 + 12 >> 2];
              m2 = m2 + 1 | 0;
            } while ((m2 | 0) != 0);
          }
          c[h2 + 4 >> 2] = 0;
          r2 = c[f2 + 4 >> 2] | 0;
          if ((c[h2 + 8 >> 2] | 0) < (r2 | 0)) {
            if (r2) {
              c[6324] = (c[6324] | 0) + 1;
              m2 = ic((r2 << 4 | 3) + 16 | 0) | 0;
              if (!m2)
                m2 = 0;
              else {
                c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
                m2 = m2 + 4 + 15 & -16;
              }
              p2 = c[h2 + 4 >> 2] | 0;
              if ((p2 | 0) > 0) {
                o2 = 0;
                do {
                  W2 = m2 + (o2 << 4) | 0;
                  V2 = (c[h2 + 12 >> 2] | 0) + (o2 << 4) | 0;
                  c[W2 >> 2] = c[V2 >> 2];
                  c[W2 + 4 >> 2] = c[V2 + 4 >> 2];
                  c[W2 + 8 >> 2] = c[V2 + 8 >> 2];
                  c[W2 + 12 >> 2] = c[V2 + 12 >> 2];
                  o2 = o2 + 1 | 0;
                } while ((o2 | 0) != (p2 | 0));
                p2 = h2 + 12 | 0;
              } else
                p2 = h2 + 12 | 0;
            } else {
              m2 = 0;
              p2 = h2 + 12 | 0;
            }
            o2 = c[p2 >> 2] | 0;
            if (o2 | 0) {
              if (a[h2 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[o2 + -4 >> 2] | 0);
              }
              c[p2 >> 2] = 0;
            }
            a[h2 + 16 >> 0] = 1;
            c[p2 >> 2] = m2;
            c[h2 + 8 >> 2] = r2;
          }
          p2 = c[d2 + 28 >> 2] | 0;
          if ((p2 | 0) <= 0) {
            i = X2;
            return;
          }
          W2 = c[d2 + 36 >> 2] | 0;
          F2 = +g[e2 >> 2];
          G2 = +g[e2 + 4 >> 2];
          H2 = +g[e2 + 8 >> 2];
          w2 = +g[e2 + 16 >> 2];
          v2 = +g[e2 + 20 >> 2];
          t2 = +g[e2 + 24 >> 2];
          s2 = +g[e2 + 32 >> 2];
          q2 = +g[e2 + 36 >> 2];
          n2 = +g[e2 + 40 >> 2];
          x2 = +g[b2 >> 2];
          y2 = +g[b2 + 4 >> 2];
          z2 = +g[b2 + 8 >> 2];
          V2 = -1;
          u2 = 34028234663852886e22;
          m2 = 0;
          while (1) {
            A2 = +g[W2 + (m2 * 36 | 0) + 20 >> 2];
            B2 = +g[W2 + (m2 * 36 | 0) + 24 >> 2];
            C2 = +g[W2 + (m2 * 36 | 0) + 28 >> 2];
            o2 = (A2 * F2 + B2 * G2 + C2 * H2) * x2 + (A2 * w2 + B2 * v2 + C2 * t2) * y2 + (A2 * s2 + B2 * q2 + C2 * n2) * z2 < u2;
            V2 = o2 ? m2 : V2;
            m2 = m2 + 1 | 0;
            if ((m2 | 0) == (p2 | 0))
              break;
            else
              u2 = o2 ? (A2 * F2 + B2 * G2 + C2 * H2) * x2 + (A2 * w2 + B2 * v2 + C2 * t2) * y2 + (A2 * s2 + B2 * q2 + C2 * n2) * z2 : u2;
          }
          if ((V2 | 0) < 0) {
            i = X2;
            return;
          }
          M2 = c[W2 + (V2 * 36 | 0) + 4 >> 2] | 0;
          if ((M2 | 0) > 0) {
            N2 = W2 + (V2 * 36 | 0) + 12 | 0;
            O2 = W2 + (V2 * 36 | 0) + 20 | 0;
            P2 = W2 + (V2 * 36 | 0) + 24 | 0;
            Q2 = W2 + (V2 * 36 | 0) + 28 | 0;
            L2 = 0;
            y2 = F2;
            x2 = G2;
            u2 = H2;
            while (1) {
              J2 = c[N2 >> 2] | 0;
              m2 = c[J2 + (L2 << 2) >> 2] | 0;
              I2 = c[d2 + 16 >> 2] | 0;
              L2 = L2 + 1 | 0;
              K2 = (L2 | 0) == (M2 | 0);
              J2 = c[J2 + ((K2 ? 0 : L2) << 2) >> 2] | 0;
              Z2 = +g[I2 + (m2 << 4) >> 2];
              _2 = Z2 - +g[I2 + (J2 << 4) >> 2];
              Y2 = +g[I2 + (m2 << 4) + 4 >> 2];
              $2 = Y2 - +g[I2 + (J2 << 4) + 4 >> 2];
              z2 = +g[I2 + (m2 << 4) + 8 >> 2];
              C2 = z2 - +g[I2 + (J2 << 4) + 8 >> 2];
              A2 = _2 * y2 + $2 * x2 + C2 * u2;
              B2 = _2 * w2 + $2 * v2 + C2 * t2;
              C2 = _2 * s2 + $2 * q2 + C2 * n2;
              $2 = +g[O2 >> 2];
              _2 = +g[P2 >> 2];
              H2 = +g[Q2 >> 2];
              F2 = y2 * $2 + x2 * _2 + u2 * H2;
              G2 = w2 * $2 + v2 * _2 + t2 * H2;
              H2 = s2 * $2 + q2 * _2 + n2 * H2;
              z2 = (Z2 * y2 + Y2 * x2 + z2 * u2 + +g[e2 + 48 >> 2]) * -(B2 * H2 - C2 * G2) + (Z2 * w2 + Y2 * v2 + z2 * t2 + +g[e2 + 52 >> 2]) * -(C2 * F2 - A2 * H2) + (Z2 * s2 + Y2 * q2 + z2 * n2 + +g[e2 + 56 >> 2]) * -(A2 * G2 - B2 * F2);
              J2 = f2;
              I2 = h2;
              m2 = c[J2 + 4 >> 2] | 0;
              if ((m2 | 0) >= 2) {
                p2 = c[J2 + 12 >> 2] | 0;
                q2 = +g[p2 + (m2 + -1 << 4) >> 2];
                s2 = +g[p2 + (m2 + -1 << 4) + 4 >> 2];
                t2 = +g[p2 + (m2 + -1 << 4) + 8 >> 2];
                o2 = 0;
                n2 = q2 * -(B2 * H2 - C2 * G2) + s2 * -(C2 * F2 - A2 * H2) + t2 * -(A2 * G2 - B2 * F2) - z2;
                while (1) {
                  w2 = +g[p2 + (o2 << 4) >> 2];
                  x2 = +g[p2 + (o2 << 4) + 4 >> 2];
                  y2 = +g[p2 + (o2 << 4) + 8 >> 2];
                  E2 = c[p2 + (o2 << 4) + 12 >> 2] | 0;
                  v2 = w2 * -(B2 * H2 - C2 * G2) + x2 * -(C2 * F2 - A2 * H2) + y2 * -(A2 * G2 - B2 * F2) - z2;
                  do
                    if (n2 < 0)
                      if (v2 < 0) {
                        r2 = c[I2 + 4 >> 2] | 0;
                        if ((r2 | 0) == (c[I2 + 8 >> 2] | 0) ? (R2 = r2 | 0 ? r2 << 1 : 1, (r2 | 0) < (R2 | 0)) : 0) {
                          if (!R2)
                            p2 = 0;
                          else {
                            c[6324] = (c[6324] | 0) + 1;
                            p2 = ic((R2 << 4 | 3) + 16 | 0) | 0;
                            if (!p2)
                              p2 = 0;
                            else {
                              c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                              p2 = p2 + 4 + 15 & -16;
                            }
                            r2 = c[I2 + 4 >> 2] | 0;
                          }
                          if ((r2 | 0) > 0) {
                            D2 = 0;
                            do {
                              aa2 = p2 + (D2 << 4) | 0;
                              ba2 = (c[I2 + 12 >> 2] | 0) + (D2 << 4) | 0;
                              c[aa2 >> 2] = c[ba2 >> 2];
                              c[aa2 + 4 >> 2] = c[ba2 + 4 >> 2];
                              c[aa2 + 8 >> 2] = c[ba2 + 8 >> 2];
                              c[aa2 + 12 >> 2] = c[ba2 + 12 >> 2];
                              D2 = D2 + 1 | 0;
                            } while ((D2 | 0) != (r2 | 0));
                          }
                          r2 = c[I2 + 12 >> 2] | 0;
                          if (r2 | 0) {
                            if (a[I2 + 16 >> 0] | 0) {
                              c[6325] = (c[6325] | 0) + 1;
                              Rc(c[r2 + -4 >> 2] | 0);
                            }
                            c[I2 + 12 >> 2] = 0;
                          }
                          a[I2 + 16 >> 0] = 1;
                          c[I2 + 12 >> 2] = p2;
                          c[I2 + 8 >> 2] = R2;
                          p2 = c[I2 + 4 >> 2] | 0;
                        } else
                          p2 = r2;
                        ba2 = c[I2 + 12 >> 2] | 0;
                        g[ba2 + (p2 << 4) >> 2] = w2;
                        g[ba2 + (p2 << 4) + 4 >> 2] = x2;
                        g[ba2 + (p2 << 4) + 8 >> 2] = y2;
                        c[ba2 + (p2 << 4) + 12 >> 2] = E2;
                        c[I2 + 4 >> 2] = (c[I2 + 4 >> 2] | 0) + 1;
                        break;
                      } else {
                        n2 = n2 / (n2 - v2);
                        u2 = q2 + (w2 - q2) * n2;
                        q2 = s2 + (x2 - s2) * n2;
                        n2 = t2 + (y2 - t2) * n2;
                        r2 = c[I2 + 4 >> 2] | 0;
                        if ((r2 | 0) == (c[I2 + 8 >> 2] | 0) ? (S2 = r2 | 0 ? r2 << 1 : 1, (r2 | 0) < (S2 | 0)) : 0) {
                          if (!S2)
                            p2 = 0;
                          else {
                            c[6324] = (c[6324] | 0) + 1;
                            p2 = ic((S2 << 4 | 3) + 16 | 0) | 0;
                            if (!p2)
                              p2 = 0;
                            else {
                              c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                              p2 = p2 + 4 + 15 & -16;
                            }
                            r2 = c[I2 + 4 >> 2] | 0;
                          }
                          if ((r2 | 0) > 0) {
                            D2 = 0;
                            do {
                              ba2 = p2 + (D2 << 4) | 0;
                              aa2 = (c[I2 + 12 >> 2] | 0) + (D2 << 4) | 0;
                              c[ba2 >> 2] = c[aa2 >> 2];
                              c[ba2 + 4 >> 2] = c[aa2 + 4 >> 2];
                              c[ba2 + 8 >> 2] = c[aa2 + 8 >> 2];
                              c[ba2 + 12 >> 2] = c[aa2 + 12 >> 2];
                              D2 = D2 + 1 | 0;
                            } while ((D2 | 0) != (r2 | 0));
                          }
                          r2 = c[I2 + 12 >> 2] | 0;
                          if (r2 | 0) {
                            if (a[I2 + 16 >> 0] | 0) {
                              c[6325] = (c[6325] | 0) + 1;
                              Rc(c[r2 + -4 >> 2] | 0);
                            }
                            c[I2 + 12 >> 2] = 0;
                          }
                          a[I2 + 16 >> 0] = 1;
                          c[I2 + 12 >> 2] = p2;
                          c[I2 + 8 >> 2] = S2;
                          p2 = c[I2 + 4 >> 2] | 0;
                        } else
                          p2 = r2;
                        ba2 = c[I2 + 12 >> 2] | 0;
                        g[ba2 + (p2 << 4) >> 2] = u2;
                        g[ba2 + (p2 << 4) + 4 >> 2] = q2;
                        g[ba2 + (p2 << 4) + 8 >> 2] = n2;
                        g[ba2 + (p2 << 4) + 12 >> 2] = 0;
                        c[I2 + 4 >> 2] = (c[I2 + 4 >> 2] | 0) + 1;
                        break;
                      }
                    else if (v2 < 0) {
                      n2 = n2 / (n2 - v2);
                      u2 = q2 + (w2 - q2) * n2;
                      q2 = s2 + (x2 - s2) * n2;
                      n2 = t2 + (y2 - t2) * n2;
                      r2 = c[I2 + 4 >> 2] | 0;
                      if ((r2 | 0) == (c[I2 + 8 >> 2] | 0) ? (T2 = r2 | 0 ? r2 << 1 : 1, (r2 | 0) < (T2 | 0)) : 0) {
                        if (!T2)
                          p2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          p2 = ic((T2 << 4 | 3) + 16 | 0) | 0;
                          if (!p2)
                            p2 = 0;
                          else {
                            c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                            p2 = p2 + 4 + 15 & -16;
                          }
                          r2 = c[I2 + 4 >> 2] | 0;
                        }
                        if ((r2 | 0) > 0) {
                          D2 = 0;
                          do {
                            ba2 = p2 + (D2 << 4) | 0;
                            aa2 = (c[I2 + 12 >> 2] | 0) + (D2 << 4) | 0;
                            c[ba2 >> 2] = c[aa2 >> 2];
                            c[ba2 + 4 >> 2] = c[aa2 + 4 >> 2];
                            c[ba2 + 8 >> 2] = c[aa2 + 8 >> 2];
                            c[ba2 + 12 >> 2] = c[aa2 + 12 >> 2];
                            D2 = D2 + 1 | 0;
                          } while ((D2 | 0) != (r2 | 0));
                        }
                        r2 = c[I2 + 12 >> 2] | 0;
                        if (r2 | 0) {
                          if (a[I2 + 16 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[r2 + -4 >> 2] | 0);
                          }
                          c[I2 + 12 >> 2] = 0;
                        }
                        a[I2 + 16 >> 0] = 1;
                        c[I2 + 12 >> 2] = p2;
                        c[I2 + 8 >> 2] = T2;
                        p2 = c[I2 + 4 >> 2] | 0;
                      } else
                        p2 = r2;
                      r2 = c[I2 + 12 >> 2] | 0;
                      g[r2 + (p2 << 4) >> 2] = u2;
                      g[r2 + (p2 << 4) + 4 >> 2] = q2;
                      g[r2 + (p2 << 4) + 8 >> 2] = n2;
                      g[r2 + (p2 << 4) + 12 >> 2] = 0;
                      r2 = (c[I2 + 4 >> 2] | 0) + 1 | 0;
                      c[I2 + 4 >> 2] = r2;
                      if ((r2 | 0) == (c[I2 + 8 >> 2] | 0) ? (U2 = r2 | 0 ? r2 << 1 : 1, (r2 | 0) < (U2 | 0)) : 0) {
                        if (!U2)
                          p2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          p2 = ic((U2 << 4 | 3) + 16 | 0) | 0;
                          if (!p2)
                            p2 = 0;
                          else {
                            c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                            p2 = p2 + 4 + 15 & -16;
                          }
                          r2 = c[I2 + 4 >> 2] | 0;
                        }
                        if ((r2 | 0) > 0) {
                          D2 = 0;
                          do {
                            ba2 = p2 + (D2 << 4) | 0;
                            aa2 = (c[I2 + 12 >> 2] | 0) + (D2 << 4) | 0;
                            c[ba2 >> 2] = c[aa2 >> 2];
                            c[ba2 + 4 >> 2] = c[aa2 + 4 >> 2];
                            c[ba2 + 8 >> 2] = c[aa2 + 8 >> 2];
                            c[ba2 + 12 >> 2] = c[aa2 + 12 >> 2];
                            D2 = D2 + 1 | 0;
                          } while ((D2 | 0) != (r2 | 0));
                        }
                        r2 = c[I2 + 12 >> 2] | 0;
                        if (r2 | 0) {
                          if (a[I2 + 16 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[r2 + -4 >> 2] | 0);
                          }
                          c[I2 + 12 >> 2] = 0;
                        }
                        a[I2 + 16 >> 0] = 1;
                        c[I2 + 12 >> 2] = p2;
                        c[I2 + 8 >> 2] = U2;
                        p2 = c[I2 + 4 >> 2] | 0;
                      } else
                        p2 = r2;
                      ba2 = c[I2 + 12 >> 2] | 0;
                      g[ba2 + (p2 << 4) >> 2] = w2;
                      g[ba2 + (p2 << 4) + 4 >> 2] = x2;
                      g[ba2 + (p2 << 4) + 8 >> 2] = y2;
                      c[ba2 + (p2 << 4) + 12 >> 2] = E2;
                      c[I2 + 4 >> 2] = (c[I2 + 4 >> 2] | 0) + 1;
                    }
                  while (0);
                  o2 = o2 + 1 | 0;
                  if ((o2 | 0) == (m2 | 0))
                    break;
                  n2 = v2;
                  q2 = w2;
                  t2 = y2;
                  s2 = x2;
                  p2 = c[J2 + 12 >> 2] | 0;
                }
                m2 = c[J2 + 4 >> 2] | 0;
              }
              if ((m2 | 0) < 0) {
                if ((c[J2 + 8 >> 2] | 0) < 0) {
                  o2 = c[J2 + 12 >> 2] | 0;
                  if (o2 | 0) {
                    if (a[J2 + 16 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[o2 + -4 >> 2] | 0);
                    }
                    c[J2 + 12 >> 2] = 0;
                  }
                  a[J2 + 16 >> 0] = 1;
                  c[J2 + 12 >> 2] = 0;
                  c[J2 + 8 >> 2] = 0;
                }
                do {
                  ba2 = (c[J2 + 12 >> 2] | 0) + (m2 << 4) | 0;
                  c[ba2 >> 2] = c[X2 >> 2];
                  c[ba2 + 4 >> 2] = c[X2 + 4 >> 2];
                  c[ba2 + 8 >> 2] = c[X2 + 8 >> 2];
                  c[ba2 + 12 >> 2] = c[X2 + 12 >> 2];
                  m2 = m2 + 1 | 0;
                } while ((m2 | 0) != 0);
              }
              c[J2 + 4 >> 2] = 0;
              y2 = +g[e2 >> 2];
              x2 = +g[e2 + 4 >> 2];
              u2 = +g[e2 + 8 >> 2];
              w2 = +g[e2 + 16 >> 2];
              v2 = +g[e2 + 20 >> 2];
              t2 = +g[e2 + 24 >> 2];
              s2 = +g[e2 + 32 >> 2];
              q2 = +g[e2 + 36 >> 2];
              n2 = +g[e2 + 40 >> 2];
              if (K2) {
                p2 = O2;
                o2 = P2;
                m2 = Q2;
                D2 = e2 + 48 | 0;
                E2 = e2 + 52 | 0;
                r2 = e2 + 56 | 0;
                break;
              } else {
                ba2 = f2;
                f2 = h2;
                h2 = ba2;
              }
            }
          } else {
            p2 = W2 + (V2 * 36 | 0) + 20 | 0;
            o2 = W2 + (V2 * 36 | 0) + 24 | 0;
            m2 = W2 + (V2 * 36 | 0) + 28 | 0;
            D2 = e2 + 48 | 0;
            E2 = e2 + 52 | 0;
            r2 = e2 + 56 | 0;
            h2 = f2;
            y2 = F2;
            x2 = G2;
            u2 = H2;
          }
          Z2 = +g[p2 >> 2];
          _2 = +g[o2 >> 2];
          $2 = +g[m2 >> 2];
          u2 = Z2 * y2 + _2 * x2 + $2 * u2;
          t2 = Z2 * w2 + _2 * v2 + $2 * t2;
          s2 = Z2 * s2 + _2 * q2 + $2 * n2;
          q2 = +g[W2 + (V2 * 36 | 0) + 32 >> 2] - (u2 * +g[D2 >> 2] + t2 * +g[E2 >> 2] + s2 * +g[r2 >> 2]);
          m2 = c[h2 + 4 >> 2] | 0;
          if ((m2 | 0) <= 0) {
            i = X2;
            return;
          }
          p2 = 0;
          do {
            o2 = c[h2 + 12 >> 2] | 0;
            n2 = q2 + (u2 * +g[o2 + (p2 << 4) >> 2] + t2 * +g[o2 + (p2 << 4) + 4 >> 2] + s2 * +g[o2 + (p2 << 4) + 8 >> 2]);
            n2 = n2 <= j2 ? j2 : n2;
            if (n2 <= k2) {
              m2 = o2 + (p2 << 4) | 0;
              c[X2 >> 2] = c[m2 >> 2];
              c[X2 + 4 >> 2] = c[m2 + 4 >> 2];
              c[X2 + 8 >> 2] = c[m2 + 8 >> 2];
              c[X2 + 12 >> 2] = c[m2 + 12 >> 2];
              Tb[c[(c[l2 >> 2] | 0) + 16 >> 2] & 15](l2, b2, X2, n2);
              m2 = c[h2 + 4 >> 2] | 0;
            }
            p2 = p2 + 1 | 0;
          } while ((p2 | 0) < (m2 | 0));
          i = X2;
          return;
        }
        function Gc(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0;
          v2 = i;
          i = i + 16 | 0;
          k2 = c[b2 + 212 >> 2] | 0;
          j2 = c[b2 + 180 >> 2] | 0;
          if ((j2 | 0) < (k2 | 0)) {
            if ((c[b2 + 184 >> 2] | 0) < (k2 | 0)) {
              if (!k2) {
                e2 = 0;
                h2 = j2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((k2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                h2 = c[b2 + 180 >> 2] | 0;
              }
              if ((h2 | 0) > 0) {
                f2 = 0;
                do {
                  c[e2 + (f2 << 2) >> 2] = c[(c[b2 + 188 >> 2] | 0) + (f2 << 2) >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (h2 | 0));
              }
              f2 = c[b2 + 188 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 192 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 188 >> 2] = 0;
              }
              a[b2 + 192 >> 0] = 1;
              c[b2 + 188 >> 2] = e2;
              c[b2 + 184 >> 2] = k2;
              f2 = b2 + 188 | 0;
            } else
              f2 = b2 + 188 | 0;
            e2 = j2;
            do {
              c[(c[f2 >> 2] | 0) + (e2 << 2) >> 2] = 0;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (k2 | 0));
          }
          c[b2 + 180 >> 2] = k2;
          if ((ob[c[(c[b2 >> 2] | 0) + 104 >> 2] & 127](b2) | 0) > 0) {
            e2 = 0;
            do {
              c[(c[b2 + 188 >> 2] | 0) + (e2 << 2) >> 2] = c[(c[b2 + 220 >> 2] | 0) + (e2 << 2) >> 2];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) < (ob[c[(c[b2 >> 2] | 0) + 104 >> 2] & 127](b2) | 0));
          }
          e2 = c[b2 + 180 >> 2] | 0;
          if ((e2 | 0) > 1)
            Rg(b2 + 176 | 0, 0, e2 + -1 | 0);
          if (!(ob[c[(c[b2 >> 2] | 0) + 104 >> 2] & 127](b2) | 0))
            e2 = 0;
          else
            e2 = c[b2 + 188 >> 2] | 0;
          h2 = c[b2 + 196 >> 2] | 0;
          t2 = c[b2 + 180 >> 2] | 0;
          u2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
          c[h2 + 4 >> 2] = d2;
          c[h2 + 12 >> 2] = e2;
          c[h2 + 16 >> 2] = t2;
          c[h2 + 20 >> 2] = u2;
          e2 = c[h2 + 32 >> 2] | 0;
          if ((e2 | 0) < 0) {
            if ((c[h2 + 36 >> 2] | 0) < 0) {
              f2 = c[h2 + 40 >> 2] | 0;
              if (f2 | 0) {
                if (a[h2 + 44 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                c[h2 + 40 >> 2] = 0;
              }
              a[h2 + 44 >> 0] = 1;
              c[h2 + 40 >> 2] = 0;
              c[h2 + 36 >> 2] = 0;
            }
            do {
              c[(c[h2 + 40 >> 2] | 0) + (e2 << 2) >> 2] = 0;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != 0);
          }
          c[h2 + 32 >> 2] = 0;
          e2 = c[h2 + 52 >> 2] | 0;
          if ((e2 | 0) < 0) {
            if ((c[h2 + 56 >> 2] | 0) < 0) {
              f2 = c[h2 + 60 >> 2] | 0;
              if (f2 | 0) {
                if (a[h2 + 64 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                c[h2 + 60 >> 2] = 0;
              }
              a[h2 + 64 >> 0] = 1;
              c[h2 + 60 >> 2] = 0;
              c[h2 + 56 >> 2] = 0;
            }
            do {
              c[(c[h2 + 60 >> 2] | 0) + (e2 << 2) >> 2] = 0;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != 0);
          }
          c[h2 + 52 >> 2] = 0;
          e2 = c[h2 + 72 >> 2] | 0;
          if ((e2 | 0) < 0) {
            if ((c[h2 + 76 >> 2] | 0) < 0) {
              f2 = c[h2 + 80 >> 2] | 0;
              if (f2 | 0) {
                if (a[h2 + 84 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                c[h2 + 80 >> 2] = 0;
              }
              a[h2 + 84 >> 0] = 1;
              c[h2 + 80 >> 2] = 0;
              c[h2 + 76 >> 2] = 0;
            }
            do {
              c[(c[h2 + 80 >> 2] | 0) + (e2 << 2) >> 2] = 0;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != 0);
          }
          c[h2 + 72 >> 2] = 0;
          u2 = c[b2 + 200 >> 2] | 0;
          e2 = c[(c[u2 >> 2] | 0) + 8 >> 2] | 0;
          s2 = c[b2 + 8 >> 2] | 0;
          t2 = c[b2 + 24 >> 2] | 0;
          t2 = ob[c[(c[t2 >> 2] | 0) + 36 >> 2] & 127](t2) | 0;
          Ub[e2 & 127](u2, s2, t2);
          t2 = c[b2 + 204 >> 2] | 0;
          s2 = c[b2 + 24 >> 2] | 0;
          u2 = c[b2 + 196 >> 2] | 0;
          e2 = c[t2 + 28 >> 2] | 0;
          if ((e2 | 0) < 0) {
            if ((c[t2 + 32 >> 2] | 0) < 0) {
              f2 = c[t2 + 36 >> 2] | 0;
              if (f2 | 0) {
                if (a[t2 + 40 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                c[t2 + 36 >> 2] = 0;
              }
              a[t2 + 40 >> 0] = 1;
              c[t2 + 36 >> 2] = 0;
              c[t2 + 32 >> 2] = 0;
            }
            do {
              c[(c[t2 + 36 >> 2] | 0) + (e2 << 2) >> 2] = 0;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != 0);
          }
          c[t2 + 28 >> 2] = 0;
          k2 = c[t2 + 8 >> 2] | 0;
          if ((k2 | 0) > 0) {
            l2 = c[t2 + 16 >> 2] | 0;
            j2 = 0;
            do {
              m2 = l2 + (j2 << 3) | 0;
              e2 = c[m2 >> 2] | 0;
              if ((e2 | 0) == (j2 | 0))
                e2 = j2;
              else {
                f2 = e2;
                h2 = m2;
                do {
                  e2 = l2 + (f2 << 3) | 0;
                  c[h2 >> 2] = c[e2 >> 2];
                  e2 = c[e2 >> 2] | 0;
                  h2 = l2 + (e2 << 3) | 0;
                  f2 = c[h2 >> 2] | 0;
                } while ((e2 | 0) != (f2 | 0));
              }
              c[m2 >> 2] = e2;
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != (k2 | 0));
            if ((k2 | 0) > 1) {
              qj(t2 + 4 | 0, 0, k2 + -1 | 0);
              k2 = c[t2 + 8 >> 2] | 0;
            }
            if ((k2 | 0) > 0) {
              o2 = c[t2 + 16 >> 2] | 0;
              e2 = 0;
              while (1) {
                p2 = c[o2 + (e2 << 3) >> 2] | 0;
                m2 = e2;
                while (1) {
                  l2 = m2 + 1 | 0;
                  if ((l2 | 0) >= (k2 | 0)) {
                    n2 = 0;
                    break;
                  }
                  if ((c[o2 + (l2 << 3) >> 2] | 0) == (p2 | 0))
                    m2 = l2;
                  else {
                    n2 = 1;
                    break;
                  }
                }
                a:
                  do
                    if ((e2 | 0) <= (m2 | 0)) {
                      q2 = c[b2 + 16 >> 2] | 0;
                      f2 = 1;
                      j2 = e2;
                      while (1) {
                        h2 = c[q2 + (c[o2 + (j2 << 3) + 4 >> 2] << 2) >> 2] | 0;
                        if ((c[h2 + 208 >> 2] | 0) == (p2 | 0)) {
                          r2 = c[h2 + 216 >> 2] | 0;
                          f2 = (r2 | 0) != 4 & (f2 & (r2 | 0) != 1);
                        }
                        if ((j2 | 0) < (m2 | 0))
                          j2 = j2 + 1 | 0;
                        else
                          break;
                      }
                      if (f2)
                        while (1) {
                          f2 = c[q2 + (c[o2 + (e2 << 3) + 4 >> 2] << 2) >> 2] | 0;
                          do
                            if ((c[f2 + 208 >> 2] | 0) == (p2 | 0)) {
                              if ((c[f2 + 216 >> 2] & -2 | 0) == 4)
                                break;
                              c[f2 + 216 >> 2] = 2;
                            }
                          while (0);
                          if ((e2 | 0) >= (m2 | 0))
                            break a;
                          e2 = e2 + 1 | 0;
                        }
                      else
                        while (1) {
                          f2 = c[q2 + (c[o2 + (e2 << 3) + 4 >> 2] << 2) >> 2] | 0;
                          do
                            if ((c[f2 + 208 >> 2] | 0) == (p2 | 0)) {
                              if ((c[f2 + 216 >> 2] | 0) != 2)
                                break;
                              c[f2 + 216 >> 2] = 3;
                              g[f2 + 220 >> 2] = 0;
                            }
                          while (0);
                          if ((e2 | 0) >= (m2 | 0))
                            break a;
                          e2 = e2 + 1 | 0;
                        }
                    }
                  while (0);
                if (n2)
                  e2 = l2;
                else
                  break;
              }
            }
          }
          l2 = ob[c[(c[s2 >> 2] | 0) + 36 >> 2] & 127](s2) | 0;
          if ((l2 | 0) > 0) {
            k2 = 0;
            do {
              m2 = Jb[c[(c[s2 >> 2] | 0) + 40 >> 2] & 31](s2, k2) | 0;
              f2 = c[m2 + 772 >> 2] | 0;
              h2 = c[m2 + 776 >> 2] | 0;
              if ((f2 | 0) != 0 ? (c[f2 + 216 >> 2] | 0) != 2 : 0)
                e2 = 93;
              else
                e2 = 91;
              if (((e2 | 0) == 91 ? (e2 = 0, h2 | 0) : 0) ? (c[h2 + 216 >> 2] | 0) != 2 : 0)
                e2 = 93;
              if ((e2 | 0) == 93) {
                e2 = c[f2 + 204 >> 2] | 0;
                if ((e2 & 2 | 0 ? (e2 & 4 | 0) == 0 ? (c[f2 + 216 >> 2] | 0) != 2 : 0 : 0) ? (c[h2 + 204 >> 2] & 3 | 0) == 0 : 0) {
                  if ((c[h2 + 216 >> 2] & -2 | 0) != 4)
                    c[h2 + 216 >> 2] = 1;
                  g[h2 + 220 >> 2] = 0;
                }
                r2 = c[h2 + 204 >> 2] | 0;
                if (r2 & 2 | 0 ? (r2 & 4 | e2 & 3 | 0) == 0 ? (c[h2 + 216 >> 2] | 0) != 2 : 0 : 0) {
                  if ((c[f2 + 216 >> 2] & -2 | 0) != 4)
                    c[f2 + 216 >> 2] = 1;
                  g[f2 + 220 >> 2] = 0;
                }
                if (a[t2 + 64 >> 0] | 0 ? yb[c[(c[s2 >> 2] | 0) + 28 >> 2] & 63](s2, f2, h2) | 0 : 0) {
                  e2 = c[t2 + 28 >> 2] | 0;
                  do
                    if ((e2 | 0) == (c[t2 + 32 >> 2] | 0)) {
                      j2 = e2 | 0 ? e2 << 1 : 1;
                      if ((e2 | 0) >= (j2 | 0))
                        break;
                      if (!j2)
                        h2 = 0;
                      else {
                        c[6324] = (c[6324] | 0) + 1;
                        e2 = ic((j2 << 2 | 3) + 16 | 0) | 0;
                        if (!e2)
                          e2 = 0;
                        else {
                          c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                          e2 = e2 + 4 + 15 & -16;
                        }
                        h2 = e2;
                        e2 = c[t2 + 28 >> 2] | 0;
                      }
                      if ((e2 | 0) > 0) {
                        f2 = 0;
                        do {
                          c[h2 + (f2 << 2) >> 2] = c[(c[t2 + 36 >> 2] | 0) + (f2 << 2) >> 2];
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) != (e2 | 0));
                      }
                      f2 = c[t2 + 36 >> 2] | 0;
                      if (f2) {
                        if (a[t2 + 40 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[f2 + -4 >> 2] | 0);
                          e2 = c[t2 + 28 >> 2] | 0;
                        }
                        c[t2 + 36 >> 2] = 0;
                      }
                      a[t2 + 40 >> 0] = 1;
                      c[t2 + 36 >> 2] = h2;
                      c[t2 + 32 >> 2] = j2;
                    }
                  while (0);
                  c[(c[t2 + 36 >> 2] | 0) + (e2 << 2) >> 2] = m2;
                  c[t2 + 28 >> 2] = e2 + 1;
                }
              }
              k2 = k2 + 1 | 0;
            } while ((k2 | 0) != (l2 | 0));
            e2 = t2 + 64 | 0;
          } else
            e2 = t2 + 64 | 0;
          r2 = c[t2 + 8 >> 2] | 0;
          if (!(a[e2 >> 0] | 0)) {
            r2 = ob[c[(c[s2 >> 2] | 0) + 44 >> 2] & 127](s2) | 0;
            t2 = ob[c[(c[s2 >> 2] | 0) + 36 >> 2] & 127](s2) | 0;
            Ab[c[(c[u2 >> 2] | 0) + 8 >> 2] & 7](u2, c[b2 + 16 >> 2] | 0, c[b2 + 8 >> 2] | 0, r2, t2, -1);
            u2 = c[b2 + 196 >> 2] | 0;
            ah(u2);
            u2 = c[b2 + 200 >> 2] | 0;
            t2 = c[u2 >> 2] | 0;
            t2 = t2 + 16 | 0;
            t2 = c[t2 >> 2] | 0;
            b2 = b2 + 72 | 0;
            b2 = c[b2 >> 2] | 0;
            Ub[t2 & 127](u2, d2, b2);
            i = v2;
            return;
          }
          q2 = c[t2 + 28 >> 2] | 0;
          if ((q2 | 0) > 1)
            Pg(t2 + 24 | 0, 0, q2 + -1 | 0);
          if ((r2 | 0) <= 0) {
            u2 = c[b2 + 196 >> 2] | 0;
            ah(u2);
            u2 = c[b2 + 200 >> 2] | 0;
            t2 = c[u2 >> 2] | 0;
            t2 = t2 + 16 | 0;
            t2 = c[t2 >> 2] | 0;
            b2 = b2 + 72 | 0;
            b2 = c[b2 >> 2] | 0;
            Ub[t2 & 127](u2, d2, b2);
            i = v2;
            return;
          }
          e2 = 0;
          p2 = 0;
          n2 = 1;
          while (1) {
            f2 = c[t2 + 16 >> 2] | 0;
            o2 = c[f2 + (e2 << 3) >> 2] | 0;
            b:
              do
                if ((e2 | 0) < (r2 | 0)) {
                  j2 = 1;
                  k2 = c[t2 + 48 >> 2] | 0;
                  h2 = c[t2 + 52 >> 2] | 0;
                  while (1) {
                    m2 = c[(c[b2 + 16 >> 2] | 0) + (c[f2 + (e2 << 3) + 4 >> 2] << 2) >> 2] | 0;
                    if ((k2 | 0) == (h2 | 0)) {
                      l2 = h2 | 0 ? h2 << 1 : 1;
                      if ((h2 | 0) < (l2 | 0)) {
                        if (!l2)
                          f2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          f2 = ic((l2 << 2 | 3) + 16 | 0) | 0;
                          if (!f2)
                            f2 = 0;
                          else {
                            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                            f2 = f2 + 4 + 15 & -16;
                          }
                          h2 = c[t2 + 48 >> 2] | 0;
                        }
                        if ((h2 | 0) > 0) {
                          k2 = 0;
                          do {
                            c[f2 + (k2 << 2) >> 2] = c[(c[t2 + 56 >> 2] | 0) + (k2 << 2) >> 2];
                            k2 = k2 + 1 | 0;
                          } while ((k2 | 0) != (h2 | 0));
                        }
                        k2 = c[t2 + 56 >> 2] | 0;
                        if (k2) {
                          if (a[t2 + 60 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[k2 + -4 >> 2] | 0);
                            h2 = c[t2 + 48 >> 2] | 0;
                          }
                          c[t2 + 56 >> 2] = 0;
                        }
                        a[t2 + 60 >> 0] = 1;
                        c[t2 + 56 >> 2] = f2;
                        c[t2 + 52 >> 2] = l2;
                        f2 = h2;
                        h2 = l2;
                      } else
                        f2 = h2;
                    } else
                      f2 = k2;
                    c[(c[t2 + 56 >> 2] | 0) + (f2 << 2) >> 2] = m2;
                    k2 = f2 + 1 | 0;
                    c[t2 + 48 >> 2] = k2;
                    s2 = c[m2 + 216 >> 2] | 0;
                    j2 = j2 & ((s2 | 0) == 2 | (s2 | 0) == 5);
                    e2 = e2 + 1 | 0;
                    if ((e2 | 0) >= (r2 | 0)) {
                      m2 = e2;
                      break b;
                    }
                    f2 = c[t2 + 16 >> 2] | 0;
                    if ((c[f2 + (e2 << 3) >> 2] | 0) != (o2 | 0)) {
                      m2 = e2;
                      break;
                    }
                  }
                } else {
                  m2 = e2;
                  j2 = 1;
                }
              while (0);
            if ((p2 | 0) < (q2 | 0)) {
              k2 = c[t2 + 36 >> 2] | 0;
              l2 = k2 + (p2 << 2) | 0;
              f2 = c[l2 >> 2] | 0;
              e2 = c[(c[f2 + 772 >> 2] | 0) + 208 >> 2] | 0;
              if ((e2 | 0) <= -1)
                e2 = c[(c[f2 + 776 >> 2] | 0) + 208 >> 2] | 0;
              if ((e2 | 0) == (o2 | 0)) {
                h2 = p2;
                do {
                  h2 = h2 + 1 | 0;
                  if ((h2 | 0) >= (q2 | 0))
                    break;
                  f2 = c[k2 + (h2 << 2) >> 2] | 0;
                  e2 = c[(c[f2 + 772 >> 2] | 0) + 208 >> 2] | 0;
                  if ((e2 | 0) <= -1)
                    e2 = c[(c[f2 + 776 >> 2] | 0) + 208 >> 2] | 0;
                } while ((o2 | 0) == (e2 | 0));
                e2 = l2;
                f2 = h2 - p2 | 0;
              } else {
                e2 = 0;
                f2 = 0;
                h2 = n2;
              }
            } else {
              e2 = 0;
              f2 = 0;
              h2 = n2;
            }
            if (!j2)
              Ab[c[(c[u2 >> 2] | 0) + 8 >> 2] & 7](u2, c[t2 + 56 >> 2] | 0, c[t2 + 48 >> 2] | 0, e2, f2, o2);
            p2 = (f2 | 0) == 0 ? p2 : h2;
            e2 = c[t2 + 48 >> 2] | 0;
            if ((e2 | 0) < 0) {
              if ((c[t2 + 52 >> 2] | 0) < 0) {
                f2 = c[t2 + 56 >> 2] | 0;
                if (f2 | 0) {
                  if (a[t2 + 60 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[f2 + -4 >> 2] | 0);
                  }
                  c[t2 + 56 >> 2] = 0;
                }
                a[t2 + 60 >> 0] = 1;
                c[t2 + 56 >> 2] = 0;
                c[t2 + 52 >> 2] = 0;
              }
              do {
                c[(c[t2 + 56 >> 2] | 0) + (e2 << 2) >> 2] = 0;
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != 0);
            }
            c[t2 + 48 >> 2] = 0;
            if ((m2 | 0) >= (r2 | 0))
              break;
            else {
              e2 = m2;
              n2 = h2;
            }
          }
          u2 = c[b2 + 196 >> 2] | 0;
          ah(u2);
          u2 = c[b2 + 200 >> 2] | 0;
          t2 = c[u2 >> 2] | 0;
          t2 = t2 + 16 | 0;
          t2 = c[t2 >> 2] | 0;
          b2 = b2 + 72 | 0;
          b2 = c[b2 >> 2] | 0;
          Ub[t2 & 127](u2, d2, b2);
          i = v2;
          return;
        }
        function Hc(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0;
          G2 = i;
          i = i + 64 | 0;
          if (!(a[b2 + 356 >> 0] | 0)) {
            b2 = a[b2 + 312 >> 0] | 0;
            b2 = b2 << 24 >> 24 != 0;
            i = G2;
            return b2 | 0;
          }
          c[b2 + 336 >> 2] = 0;
          c[b2 + 336 + 4 >> 2] = 0;
          c[b2 + 336 + 8 >> 2] = 0;
          c[b2 + 336 + 12 >> 2] = 0;
          a[b2 + 336 + 16 >> 0] = 0;
          e2 = a[b2 + 332 >> 0] | 0;
          a[b2 + 332 >> 0] = e2 & -16;
          a[b2 + 356 >> 0] = 0;
          switch (c[b2 >> 2] | 0) {
            case 0: {
              a[b2 + 312 >> 0] = 0;
              b2 = 0;
              b2 = b2 << 24 >> 24 != 0;
              i = G2;
              return b2 | 0;
            }
            case 1: {
              c[b2 + 244 >> 2] = c[b2 + 84 >> 2];
              c[b2 + 244 + 4 >> 2] = c[b2 + 84 + 4 >> 2];
              c[b2 + 244 + 8 >> 2] = c[b2 + 84 + 8 >> 2];
              c[b2 + 244 + 12 >> 2] = c[b2 + 84 + 12 >> 2];
              c[b2 + 260 >> 2] = c[b2 + 164 >> 2];
              c[b2 + 260 + 4 >> 2] = c[b2 + 164 + 4 >> 2];
              c[b2 + 260 + 8 >> 2] = c[b2 + 164 + 8 >> 2];
              c[b2 + 260 + 12 >> 2] = c[b2 + 164 + 12 >> 2];
              C2 = +g[b2 + 248 >> 2] - +g[b2 + 264 >> 2];
              D2 = +g[b2 + 252 >> 2] - +g[b2 + 268 >> 2];
              g[b2 + 276 >> 2] = +g[b2 + 244 >> 2] - +g[b2 + 260 >> 2];
              g[b2 + 280 >> 2] = C2;
              g[b2 + 284 >> 2] = D2;
              g[b2 + 288 >> 2] = 0;
              a[b2 + 352 >> 0] = 0;
              a[b2 + 332 >> 0] = e2 & -16;
              g[b2 + 336 >> 2] = 1;
              g[b2 + 340 >> 2] = 0;
              g[b2 + 344 >> 2] = 0;
              g[b2 + 348 >> 2] = 0;
              a[b2 + 312 >> 0] = 1;
              b2 = 1;
              b2 = b2 << 24 >> 24 != 0;
              i = G2;
              return b2 | 0;
            }
            case 2: {
              d2 = +g[b2 + 4 >> 2];
              f2 = +g[b2 + 8 >> 2];
              h2 = +g[b2 + 12 >> 2];
              j2 = +g[b2 + 20 >> 2] - d2;
              k2 = +g[b2 + 24 >> 2] - f2;
              l2 = +g[b2 + 28 >> 2] - h2;
              do
                if ((0 - d2) * j2 + (0 - f2) * k2 + (0 - h2) * l2 > 0)
                  if ((0 - d2) * j2 + (0 - f2) * k2 + (0 - h2) * l2 < j2 * j2 + k2 * k2 + l2 * l2) {
                    a[b2 + 332 >> 0] = e2 & -16 | 3;
                    d2 = ((0 - d2) * j2 + (0 - f2) * k2 + (0 - h2) * l2) / (j2 * j2 + k2 * k2 + l2 * l2);
                    break;
                  } else {
                    a[b2 + 332 >> 0] = e2 & -16 | 2;
                    d2 = 1;
                    break;
                  }
                else {
                  a[b2 + 332 >> 0] = e2 & -16 | 1;
                  d2 = 0;
                }
              while (0);
              g[b2 + 336 >> 2] = 1 - d2;
              g[b2 + 340 >> 2] = d2;
              g[b2 + 344 >> 2] = 0;
              g[b2 + 348 >> 2] = 0;
              y2 = +g[b2 + 84 >> 2];
              A2 = +g[b2 + 88 >> 2];
              C2 = +g[b2 + 92 >> 2];
              y2 = y2 + d2 * (+g[b2 + 100 >> 2] - y2);
              A2 = A2 + d2 * (+g[b2 + 104 >> 2] - A2);
              C2 = C2 + d2 * (+g[b2 + 108 >> 2] - C2);
              g[b2 + 244 >> 2] = y2;
              g[b2 + 248 >> 2] = A2;
              g[b2 + 252 >> 2] = C2;
              g[b2 + 256 >> 2] = 0;
              z2 = +g[b2 + 164 >> 2];
              B2 = +g[b2 + 168 >> 2];
              D2 = +g[b2 + 172 >> 2];
              z2 = z2 + d2 * (+g[b2 + 180 >> 2] - z2);
              B2 = B2 + d2 * (+g[b2 + 184 >> 2] - B2);
              D2 = D2 + d2 * (+g[b2 + 188 >> 2] - D2);
              g[b2 + 260 >> 2] = z2;
              g[b2 + 264 >> 2] = B2;
              g[b2 + 268 >> 2] = D2;
              g[b2 + 272 >> 2] = 0;
              g[b2 + 276 >> 2] = y2 - z2;
              g[b2 + 280 >> 2] = A2 - B2;
              g[b2 + 284 >> 2] = C2 - D2;
              g[b2 + 288 >> 2] = 0;
              We(b2, b2 + 332 | 0);
              if ((+g[b2 + 336 >> 2] >= 0 ? +g[b2 + 340 >> 2] >= 0 : 0) ? +g[b2 + 344 >> 2] >= 0 : 0)
                e2 = +g[b2 + 348 >> 2] >= 0 & 1;
              else
                e2 = 0;
              a[b2 + 312 >> 0] = e2;
              b2 = e2;
              b2 = b2 << 24 >> 24 != 0;
              i = G2;
              return b2 | 0;
            }
            case 3: {
              c[G2 + 16 >> 2] = 0;
              c[G2 + 16 + 4 >> 2] = 0;
              c[G2 + 16 + 8 >> 2] = 0;
              c[G2 + 16 + 12 >> 2] = 0;
              Fe(G2 + 16 | 0, b2 + 4 | 0, b2 + 20 | 0, b2 + 36 | 0, b2 + 316 | 0);
              w2 = +g[b2 + 336 >> 2];
              x2 = +g[b2 + 340 >> 2];
              D2 = +g[b2 + 344 >> 2];
              y2 = +g[b2 + 84 >> 2] * w2 + +g[b2 + 100 >> 2] * x2 + +g[b2 + 116 >> 2] * D2;
              A2 = w2 * +g[b2 + 88 >> 2] + x2 * +g[b2 + 104 >> 2] + D2 * +g[b2 + 120 >> 2];
              C2 = w2 * +g[b2 + 92 >> 2] + x2 * +g[b2 + 108 >> 2] + D2 * +g[b2 + 124 >> 2];
              g[b2 + 244 >> 2] = y2;
              g[b2 + 248 >> 2] = A2;
              g[b2 + 252 >> 2] = C2;
              g[b2 + 256 >> 2] = 0;
              z2 = +g[b2 + 164 >> 2] * w2 + +g[b2 + 180 >> 2] * x2 + +g[b2 + 196 >> 2] * D2;
              B2 = w2 * +g[b2 + 168 >> 2] + x2 * +g[b2 + 184 >> 2] + D2 * +g[b2 + 200 >> 2];
              D2 = w2 * +g[b2 + 172 >> 2] + x2 * +g[b2 + 188 >> 2] + D2 * +g[b2 + 204 >> 2];
              g[b2 + 260 >> 2] = z2;
              g[b2 + 264 >> 2] = B2;
              g[b2 + 268 >> 2] = D2;
              g[b2 + 272 >> 2] = 0;
              g[b2 + 276 >> 2] = y2 - z2;
              g[b2 + 280 >> 2] = A2 - B2;
              g[b2 + 284 >> 2] = C2 - D2;
              g[b2 + 288 >> 2] = 0;
              We(b2, b2 + 332 | 0);
              if ((+g[b2 + 336 >> 2] >= 0 ? +g[b2 + 340 >> 2] >= 0 : 0) ? +g[b2 + 344 >> 2] >= 0 : 0)
                e2 = +g[b2 + 348 >> 2] >= 0 & 1;
              else
                e2 = 0;
              a[b2 + 312 >> 0] = e2;
              b2 = e2;
              b2 = b2 << 24 >> 24 != 0;
              i = G2;
              return b2 | 0;
            }
            case 4: {
              c[G2 >> 2] = 0;
              c[G2 + 4 >> 2] = 0;
              c[G2 + 8 >> 2] = 0;
              c[G2 + 12 >> 2] = 0;
              E2 = G2 + 16 + 16 | 0;
              a[E2 >> 0] = 0;
              c[b2 + 316 >> 2] = 0;
              c[b2 + 316 + 4 >> 2] = 0;
              c[b2 + 316 + 8 >> 2] = 0;
              c[b2 + 316 + 12 >> 2] = 0;
              a[b2 + 332 >> 0] = e2 | 15;
              I2 = +g[b2 + 20 >> 2];
              R2 = +g[b2 + 4 >> 2];
              O2 = +g[b2 + 24 >> 2];
              H2 = +g[b2 + 8 >> 2];
              K2 = +g[b2 + 28 >> 2];
              S2 = +g[b2 + 12 >> 2];
              N2 = +g[b2 + 36 >> 2];
              P2 = +g[b2 + 40 >> 2];
              L2 = +g[b2 + 44 >> 2];
              J2 = +g[b2 + 52 >> 2];
              Q2 = +g[b2 + 56 >> 2];
              M2 = +g[b2 + 60 >> 2];
              T2 = ((O2 - H2) * (L2 - S2) - (K2 - S2) * (P2 - H2)) * (J2 - R2) + ((K2 - S2) * (N2 - R2) - (I2 - R2) * (L2 - S2)) * (Q2 - H2) + ((I2 - R2) * (P2 - H2) - (O2 - H2) * (N2 - R2)) * (M2 - S2);
              e2 = T2 * T2 < 999999905104687e-23 ? -1 : ((0 - R2) * ((O2 - H2) * (L2 - S2) - (K2 - S2) * (P2 - H2)) + (0 - H2) * ((K2 - S2) * (N2 - R2) - (I2 - R2) * (L2 - S2)) + ((I2 - R2) * (P2 - H2) - (O2 - H2) * (N2 - R2)) * (0 - S2)) * T2 < 0 & 1;
              T2 = (K2 - S2) * ((N2 - R2) * (Q2 - H2) - (P2 - H2) * (J2 - R2)) + ((I2 - R2) * ((P2 - H2) * (M2 - S2) - (L2 - S2) * (Q2 - H2)) + (O2 - H2) * ((L2 - S2) * (J2 - R2) - (N2 - R2) * (M2 - S2)));
              m2 = T2 * T2 < 999999905104687e-23 ? -1 : ((0 - S2) * ((N2 - R2) * (Q2 - H2) - (P2 - H2) * (J2 - R2)) + ((0 - R2) * ((P2 - H2) * (M2 - S2) - (L2 - S2) * (Q2 - H2)) + (0 - H2) * ((L2 - S2) * (J2 - R2) - (N2 - R2) * (M2 - S2)))) * T2 < 0 & 1;
              T2 = (L2 - S2) * ((O2 - H2) * (J2 - R2) - (I2 - R2) * (Q2 - H2)) + ((N2 - R2) * ((K2 - S2) * (Q2 - H2) - (O2 - H2) * (M2 - S2)) + (P2 - H2) * ((I2 - R2) * (M2 - S2) - (K2 - S2) * (J2 - R2)));
              n2 = T2 * T2 < 999999905104687e-23 ? -1 : ((0 - S2) * ((O2 - H2) * (J2 - R2) - (I2 - R2) * (Q2 - H2)) + ((0 - R2) * ((K2 - S2) * (Q2 - H2) - (O2 - H2) * (M2 - S2)) + (0 - H2) * ((I2 - R2) * (M2 - S2) - (K2 - S2) * (J2 - R2)))) * T2 < 0 & 1;
              H2 = (S2 - K2) * ((P2 - O2) * (J2 - I2) - (N2 - I2) * (Q2 - O2)) + ((R2 - I2) * ((L2 - K2) * (Q2 - O2) - (P2 - O2) * (M2 - K2)) + (H2 - O2) * ((N2 - I2) * (M2 - K2) - (L2 - K2) * (J2 - I2)));
              u2 = H2 * H2 < 999999905104687e-23 ? -1 : ((0 - K2) * ((P2 - O2) * (J2 - I2) - (N2 - I2) * (Q2 - O2)) + ((0 - I2) * ((L2 - K2) * (Q2 - O2) - (P2 - O2) * (M2 - K2)) + (0 - O2) * ((N2 - I2) * (M2 - K2) - (L2 - K2) * (J2 - I2)))) * H2 < 0 & 1;
              do
                if ((m2 | e2 | n2 | u2 | 0) < 0) {
                  a[b2 + 352 >> 0] = 1;
                  e2 = b2 + 312 | 0;
                  F2 = 42;
                } else {
                  if (!(m2 | e2 | n2 | u2)) {
                    if (a[b2 + 352 >> 0] | 0) {
                      e2 = b2 + 312 | 0;
                      F2 = 42;
                      break;
                    }
                    a[b2 + 312 >> 0] = 1;
                    c[b2 + 276 >> 2] = 0;
                    c[b2 + 276 + 4 >> 2] = 0;
                    c[b2 + 276 + 8 >> 2] = 0;
                    c[b2 + 276 + 12 >> 2] = 0;
                    e2 = 1;
                    break;
                  }
                  if ((e2 | 0) != 0 ? (Fe(G2, b2 + 4 | 0, b2 + 20 | 0, b2 + 36 | 0, G2 + 16 | 0), d2 = +g[G2 + 16 >> 2], f2 = +g[G2 + 16 + 4 >> 2], h2 = +g[G2 + 16 + 8 >> 2], j2 = d2 - +g[G2 >> 2], k2 = f2 - +g[G2 + 4 >> 2], l2 = h2 - +g[G2 + 8 >> 2], j2 * j2 + k2 * k2 + l2 * l2 < 34028234663852886e22) : 0) {
                    U2 = c[G2 + 16 + 12 >> 2] | 0;
                    g[b2 + 316 >> 2] = d2;
                    g[b2 + 320 >> 2] = f2;
                    g[b2 + 324 >> 2] = h2;
                    c[b2 + 328 >> 2] = U2;
                    U2 = a[E2 >> 0] | 0;
                    a[b2 + 332 >> 0] = U2 & 1 | a[b2 + 332 >> 0] & -16 | U2 & 2 | U2 & 4;
                    U2 = c[G2 + 16 + 24 >> 2] | 0;
                    e2 = c[G2 + 16 + 28 >> 2] | 0;
                    c[b2 + 336 >> 2] = c[G2 + 16 + 20 >> 2];
                    c[b2 + 340 >> 2] = U2;
                    c[b2 + 344 >> 2] = e2;
                    g[b2 + 348 >> 2] = 0;
                    d2 = j2 * j2 + k2 * k2 + l2 * l2;
                  } else
                    d2 = 34028234663852886e22;
                  if ((m2 | 0) != 0 ? (Fe(G2, b2 + 4 | 0, b2 + 36 | 0, b2 + 52 | 0, G2 + 16 | 0), o2 = +g[G2 + 16 >> 2], p2 = +g[G2 + 16 + 4 >> 2], q2 = +g[G2 + 16 + 8 >> 2], r2 = o2 - +g[G2 >> 2], s2 = p2 - +g[G2 + 4 >> 2], t2 = q2 - +g[G2 + 8 >> 2], r2 * r2 + s2 * s2 + t2 * t2 < d2) : 0) {
                    m2 = c[G2 + 16 + 12 >> 2] | 0;
                    g[b2 + 316 >> 2] = o2;
                    g[b2 + 320 >> 2] = p2;
                    g[b2 + 324 >> 2] = q2;
                    c[b2 + 328 >> 2] = m2;
                    m2 = a[E2 >> 0] | 0;
                    a[b2 + 332 >> 0] = m2 << 1 & 8 | (m2 & 1 | a[b2 + 332 >> 0] & -16 | m2 << 1 & 4);
                    m2 = c[G2 + 16 + 24 >> 2] | 0;
                    U2 = c[G2 + 16 + 28 >> 2] | 0;
                    c[b2 + 336 >> 2] = c[G2 + 16 + 20 >> 2];
                    g[b2 + 340 >> 2] = 0;
                    c[b2 + 344 >> 2] = m2;
                    c[b2 + 348 >> 2] = U2;
                    d2 = r2 * r2 + s2 * s2 + t2 * t2;
                  }
                  if ((n2 | 0) != 0 ? (Fe(G2, b2 + 4 | 0, b2 + 52 | 0, b2 + 20 | 0, G2 + 16 | 0), v2 = +g[G2 + 16 >> 2], w2 = +g[G2 + 16 + 4 >> 2], x2 = +g[G2 + 16 + 8 >> 2], y2 = v2 - +g[G2 >> 2], z2 = w2 - +g[G2 + 4 >> 2], A2 = x2 - +g[G2 + 8 >> 2], y2 * y2 + z2 * z2 + A2 * A2 < d2) : 0) {
                    n2 = c[G2 + 16 + 12 >> 2] | 0;
                    g[b2 + 316 >> 2] = v2;
                    g[b2 + 320 >> 2] = w2;
                    g[b2 + 324 >> 2] = x2;
                    c[b2 + 328 >> 2] = n2;
                    n2 = a[E2 >> 0] | 0;
                    a[b2 + 332 >> 0] = n2 << 2 & 8 | (n2 & 1 | a[b2 + 332 >> 0] & -16 | (n2 & 255) >>> 1 & 2);
                    n2 = c[G2 + 16 + 28 >> 2] | 0;
                    U2 = c[G2 + 16 + 24 >> 2] | 0;
                    c[b2 + 336 >> 2] = c[G2 + 16 + 20 >> 2];
                    c[b2 + 340 >> 2] = n2;
                    g[b2 + 344 >> 2] = 0;
                    c[b2 + 348 >> 2] = U2;
                    d2 = y2 * y2 + z2 * z2 + A2 * A2;
                  }
                  if (u2 | 0 ? (Fe(G2, b2 + 20 | 0, b2 + 52 | 0, b2 + 36 | 0, G2 + 16 | 0), B2 = +g[G2 + 16 >> 2], C2 = +g[G2 + 16 + 4 >> 2], D2 = +g[G2 + 16 + 8 >> 2], R2 = B2 - +g[G2 >> 2], S2 = C2 - +g[G2 + 4 >> 2], T2 = D2 - +g[G2 + 8 >> 2], R2 * R2 + S2 * S2 + T2 * T2 < d2) : 0) {
                    u2 = c[G2 + 16 + 12 >> 2] | 0;
                    g[b2 + 316 >> 2] = B2;
                    g[b2 + 320 >> 2] = C2;
                    g[b2 + 324 >> 2] = D2;
                    c[b2 + 328 >> 2] = u2;
                    u2 = a[E2 >> 0] | 0;
                    a[b2 + 332 >> 0] = u2 & 4 | a[b2 + 332 >> 0] & -16 | u2 << 1 & 2 | u2 << 2 & 8;
                    u2 = c[G2 + 16 + 20 >> 2] | 0;
                    E2 = c[G2 + 16 + 28 >> 2] | 0;
                    U2 = c[G2 + 16 + 24 >> 2] | 0;
                    g[b2 + 336 >> 2] = 0;
                    c[b2 + 340 >> 2] = u2;
                    c[b2 + 344 >> 2] = E2;
                    c[b2 + 348 >> 2] = U2;
                  }
                  L2 = +g[b2 + 336 >> 2];
                  M2 = +g[b2 + 340 >> 2];
                  N2 = +g[b2 + 344 >> 2];
                  T2 = +g[b2 + 348 >> 2];
                  O2 = +g[b2 + 84 >> 2] * L2 + +g[b2 + 100 >> 2] * M2 + +g[b2 + 116 >> 2] * N2 + +g[b2 + 132 >> 2] * T2;
                  Q2 = L2 * +g[b2 + 88 >> 2] + M2 * +g[b2 + 104 >> 2] + N2 * +g[b2 + 120 >> 2] + T2 * +g[b2 + 136 >> 2];
                  S2 = L2 * +g[b2 + 92 >> 2] + M2 * +g[b2 + 108 >> 2] + N2 * +g[b2 + 124 >> 2] + T2 * +g[b2 + 140 >> 2];
                  g[b2 + 244 >> 2] = O2;
                  g[b2 + 248 >> 2] = Q2;
                  g[b2 + 252 >> 2] = S2;
                  g[b2 + 256 >> 2] = 0;
                  P2 = +g[b2 + 164 >> 2] * L2 + +g[b2 + 180 >> 2] * M2 + +g[b2 + 196 >> 2] * N2 + +g[b2 + 212 >> 2] * T2;
                  R2 = L2 * +g[b2 + 168 >> 2] + M2 * +g[b2 + 184 >> 2] + N2 * +g[b2 + 200 >> 2] + T2 * +g[b2 + 216 >> 2];
                  T2 = L2 * +g[b2 + 172 >> 2] + M2 * +g[b2 + 188 >> 2] + N2 * +g[b2 + 204 >> 2] + T2 * +g[b2 + 220 >> 2];
                  g[b2 + 260 >> 2] = P2;
                  g[b2 + 264 >> 2] = R2;
                  g[b2 + 268 >> 2] = T2;
                  g[b2 + 272 >> 2] = 0;
                  g[b2 + 276 >> 2] = O2 - P2;
                  g[b2 + 280 >> 2] = Q2 - R2;
                  g[b2 + 284 >> 2] = S2 - T2;
                  g[b2 + 288 >> 2] = 0;
                  We(b2, b2 + 332 | 0);
                  if ((+g[b2 + 336 >> 2] >= 0 ? +g[b2 + 340 >> 2] >= 0 : 0) ? +g[b2 + 344 >> 2] >= 0 : 0)
                    e2 = +g[b2 + 348 >> 2] >= 0 & 1;
                  else
                    e2 = 0;
                  a[b2 + 312 >> 0] = e2;
                }
              while (0);
              if ((F2 | 0) == 42) {
                a[e2 >> 0] = 0;
                e2 = 0;
              }
              U2 = e2;
              U2 = U2 << 24 >> 24 != 0;
              i = G2;
              return U2 | 0;
            }
            default: {
              a[b2 + 312 >> 0] = 0;
              U2 = 0;
              U2 = U2 << 24 >> 24 != 0;
              i = G2;
              return U2 | 0;
            }
          }
          return 0;
        }
        function Ic(b2, d2, e2, f2, h2, j2, k2, m2, n2, o2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          var p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
          C2 = i;
          i = i + 4224 | 0;
          if (((c[e2 + 4 >> 2] | 0) + -17 | 0) >>> 0 < 2)
            B2 = ((c[f2 + 4 >> 2] | 0) + -17 | 0) >>> 0 < 2;
          else
            B2 = 0;
          b2 = 0;
          do {
            Ee();
            t2 = +g[24276 + (b2 << 4) >> 2];
            u2 = +g[24276 + (b2 << 4) + 4 >> 2];
            v2 = +g[24276 + (b2 << 4) + 8 >> 2];
            x2 = +g[h2 + 4 >> 2] * -t2 + +g[h2 + 20 >> 2] * -u2 + +g[h2 + 36 >> 2] * -v2;
            w2 = +g[h2 + 8 >> 2] * -t2 + +g[h2 + 24 >> 2] * -u2 + +g[h2 + 40 >> 2] * -v2;
            g[C2 + 1248 + (b2 << 4) >> 2] = +g[h2 >> 2] * -t2 + +g[h2 + 16 >> 2] * -u2 + +g[h2 + 32 >> 2] * -v2;
            g[C2 + 1248 + (b2 << 4) + 4 >> 2] = x2;
            g[C2 + 1248 + (b2 << 4) + 8 >> 2] = w2;
            g[C2 + 1248 + (b2 << 4) + 12 >> 2] = 0;
            w2 = t2 * +g[j2 + 4 >> 2] + u2 * +g[j2 + 20 >> 2] + v2 * +g[j2 + 36 >> 2];
            x2 = t2 * +g[j2 + 8 >> 2] + u2 * +g[j2 + 24 >> 2] + v2 * +g[j2 + 40 >> 2];
            g[C2 + 256 + (b2 << 4) >> 2] = t2 * +g[j2 >> 2] + u2 * +g[j2 + 16 >> 2] + v2 * +g[j2 + 32 >> 2];
            g[C2 + 256 + (b2 << 4) + 4 >> 2] = w2;
            g[C2 + 256 + (b2 << 4) + 8 >> 2] = x2;
            g[C2 + 256 + (b2 << 4) + 12 >> 2] = 0;
            b2 = b2 + 1 | 0;
          } while ((b2 | 0) != 42);
          r2 = ob[c[(c[e2 >> 2] | 0) + 84 >> 2] & 127](e2) | 0;
          if ((r2 | 0) > 0) {
            b2 = 0;
            q2 = 42;
            while (1) {
              Ub[c[(c[e2 >> 2] | 0) + 88 >> 2] & 127](e2, b2, C2 + 176 | 0);
              w2 = +g[C2 + 176 >> 2];
              x2 = +g[C2 + 176 + 4 >> 2];
              v2 = +g[C2 + 176 + 8 >> 2];
              u2 = w2 * +g[h2 + 16 >> 2] + x2 * +g[h2 + 20 >> 2] + v2 * +g[h2 + 24 >> 2];
              t2 = w2 * +g[h2 + 32 >> 2] + x2 * +g[h2 + 36 >> 2] + v2 * +g[h2 + 40 >> 2];
              g[C2 + 176 >> 2] = +g[h2 >> 2] * w2 + +g[h2 + 4 >> 2] * x2 + +g[h2 + 8 >> 2] * v2;
              g[C2 + 176 + 4 >> 2] = u2;
              g[C2 + 176 + 8 >> 2] = t2;
              g[C2 + 176 + 12 >> 2] = 0;
              Ee();
              A2 = 24276 + (q2 << 4) | 0;
              c[A2 >> 2] = c[C2 + 176 >> 2];
              c[A2 + 4 >> 2] = c[C2 + 176 + 4 >> 2];
              c[A2 + 8 >> 2] = c[C2 + 176 + 8 >> 2];
              c[A2 + 12 >> 2] = c[C2 + 176 + 12 >> 2];
              t2 = +g[C2 + 176 >> 2];
              u2 = +g[C2 + 176 + 4 >> 2];
              v2 = +g[C2 + 176 + 8 >> 2];
              x2 = +g[h2 + 4 >> 2] * -t2 + +g[h2 + 20 >> 2] * -u2 + +g[h2 + 36 >> 2] * -v2;
              w2 = +g[h2 + 8 >> 2] * -t2 + +g[h2 + 24 >> 2] * -u2 + +g[h2 + 40 >> 2] * -v2;
              g[C2 + 1248 + (q2 << 4) >> 2] = +g[h2 >> 2] * -t2 + +g[h2 + 16 >> 2] * -u2 + +g[h2 + 32 >> 2] * -v2;
              g[C2 + 1248 + (q2 << 4) + 4 >> 2] = x2;
              g[C2 + 1248 + (q2 << 4) + 8 >> 2] = w2;
              g[C2 + 1248 + (q2 << 4) + 12 >> 2] = 0;
              w2 = t2 * +g[j2 + 4 >> 2] + u2 * +g[j2 + 20 >> 2] + v2 * +g[j2 + 36 >> 2];
              x2 = t2 * +g[j2 + 8 >> 2] + u2 * +g[j2 + 24 >> 2] + v2 * +g[j2 + 40 >> 2];
              g[C2 + 256 + (q2 << 4) >> 2] = +g[j2 >> 2] * t2 + +g[j2 + 16 >> 2] * u2 + +g[j2 + 32 >> 2] * v2;
              g[C2 + 256 + (q2 << 4) + 4 >> 2] = w2;
              g[C2 + 256 + (q2 << 4) + 8 >> 2] = x2;
              g[C2 + 256 + (q2 << 4) + 12 >> 2] = 0;
              b2 = b2 + 1 | 0;
              if ((b2 | 0) == (r2 | 0))
                break;
              else
                q2 = q2 + 1 | 0;
            }
            q2 = r2 + 42 | 0;
          } else
            q2 = 42;
          s2 = ob[c[(c[f2 >> 2] | 0) + 84 >> 2] & 127](f2) | 0;
          if ((s2 | 0) > 0) {
            b2 = 0;
            r2 = q2;
            while (1) {
              Ub[c[(c[f2 >> 2] | 0) + 88 >> 2] & 127](f2, b2, C2 + 176 | 0);
              w2 = +g[C2 + 176 >> 2];
              x2 = +g[C2 + 176 + 4 >> 2];
              v2 = +g[C2 + 176 + 8 >> 2];
              u2 = w2 * +g[j2 + 16 >> 2] + x2 * +g[j2 + 20 >> 2] + v2 * +g[j2 + 24 >> 2];
              t2 = w2 * +g[j2 + 32 >> 2] + x2 * +g[j2 + 36 >> 2] + v2 * +g[j2 + 40 >> 2];
              g[C2 + 176 >> 2] = +g[j2 >> 2] * w2 + +g[j2 + 4 >> 2] * x2 + +g[j2 + 8 >> 2] * v2;
              g[C2 + 176 + 4 >> 2] = u2;
              g[C2 + 176 + 8 >> 2] = t2;
              g[C2 + 176 + 12 >> 2] = 0;
              Ee();
              A2 = 24276 + (r2 << 4) | 0;
              c[A2 >> 2] = c[C2 + 176 >> 2];
              c[A2 + 4 >> 2] = c[C2 + 176 + 4 >> 2];
              c[A2 + 8 >> 2] = c[C2 + 176 + 8 >> 2];
              c[A2 + 12 >> 2] = c[C2 + 176 + 12 >> 2];
              t2 = +g[C2 + 176 >> 2];
              u2 = +g[C2 + 176 + 4 >> 2];
              v2 = +g[C2 + 176 + 8 >> 2];
              x2 = +g[h2 + 4 >> 2] * -t2 + +g[h2 + 20 >> 2] * -u2 + +g[h2 + 36 >> 2] * -v2;
              w2 = +g[h2 + 8 >> 2] * -t2 + +g[h2 + 24 >> 2] * -u2 + +g[h2 + 40 >> 2] * -v2;
              g[C2 + 1248 + (r2 << 4) >> 2] = +g[h2 >> 2] * -t2 + +g[h2 + 16 >> 2] * -u2 + +g[h2 + 32 >> 2] * -v2;
              g[C2 + 1248 + (r2 << 4) + 4 >> 2] = x2;
              g[C2 + 1248 + (r2 << 4) + 8 >> 2] = w2;
              g[C2 + 1248 + (r2 << 4) + 12 >> 2] = 0;
              w2 = t2 * +g[j2 + 4 >> 2] + u2 * +g[j2 + 20 >> 2] + v2 * +g[j2 + 36 >> 2];
              x2 = t2 * +g[j2 + 8 >> 2] + u2 * +g[j2 + 24 >> 2] + v2 * +g[j2 + 40 >> 2];
              g[C2 + 256 + (r2 << 4) >> 2] = +g[j2 >> 2] * t2 + +g[j2 + 16 >> 2] * u2 + +g[j2 + 32 >> 2] * v2;
              g[C2 + 256 + (r2 << 4) + 4 >> 2] = w2;
              g[C2 + 256 + (r2 << 4) + 8 >> 2] = x2;
              g[C2 + 256 + (r2 << 4) + 12 >> 2] = 0;
              b2 = b2 + 1 | 0;
              if ((b2 | 0) == (s2 | 0))
                break;
              else
                r2 = r2 + 1 | 0;
            }
            q2 = s2 + q2 | 0;
          }
          Yb[c[(c[e2 >> 2] | 0) + 76 >> 2] & 127](e2, C2 + 1248 | 0, C2 + 3232 | 0, q2);
          Yb[c[(c[f2 >> 2] | 0) + 76 >> 2] & 127](f2, C2 + 256 | 0, C2 + 2240 | 0, q2);
          if ((q2 | 0) > 0) {
            w2 = 999999984306749400;
            A2 = 0;
            b2 = 0;
            r2 = 0;
            s2 = 0;
            x2 = 0;
            while (1) {
              Ee();
              p2 = +g[24276 + (A2 << 4) >> 2];
              t2 = +g[24276 + (A2 << 4) + 4 >> 2];
              u2 = +g[24276 + (A2 << 4) + 12 >> 2];
              v2 = B2 ? 0 : +g[24276 + (A2 << 4) + 8 >> 2];
              if (p2 * p2 + t2 * t2 + v2 * v2 > 0.01 ? (E2 = +g[C2 + 3232 + (A2 << 4) >> 2], D2 = +g[C2 + 3232 + (A2 << 4) + 4 >> 2], y2 = +g[C2 + 3232 + (A2 << 4) + 8 >> 2], H2 = +g[C2 + 2240 + (A2 << 4) >> 2], G2 = +g[C2 + 2240 + (A2 << 4) + 4 >> 2], F2 = +g[C2 + 2240 + (A2 << 4) + 8 >> 2], y2 = p2 * (H2 * +g[j2 >> 2] + G2 * +g[j2 + 4 >> 2] + F2 * +g[j2 + 8 >> 2] + +g[j2 + 48 >> 2] - (E2 * +g[h2 >> 2] + D2 * +g[h2 + 4 >> 2] + y2 * +g[h2 + 8 >> 2] + +g[h2 + 48 >> 2])) + t2 * (H2 * +g[j2 + 16 >> 2] + G2 * +g[j2 + 20 >> 2] + F2 * +g[j2 + 24 >> 2] + +g[j2 + 52 >> 2] - (E2 * +g[h2 + 16 >> 2] + D2 * +g[h2 + 20 >> 2] + y2 * +g[h2 + 24 >> 2] + +g[h2 + 52 >> 2])) + v2 * ((B2 ? 0 : H2 * +g[j2 + 32 >> 2] + G2 * +g[j2 + 36 >> 2] + F2 * +g[j2 + 40 >> 2] + +g[j2 + 56 >> 2]) - (B2 ? 0 : E2 * +g[h2 + 32 >> 2] + D2 * +g[h2 + 36 >> 2] + y2 * +g[h2 + 40 >> 2] + +g[h2 + 56 >> 2])), y2 < w2) : 0) {
                b2 = (g[l >> 2] = p2, c[l >> 2] | 0);
                r2 = (g[l >> 2] = t2, c[l >> 2] | 0);
                p2 = y2;
                z2 = (g[l >> 2] = v2, c[l >> 2] | 0);
              } else {
                p2 = w2;
                z2 = s2;
                u2 = x2;
              }
              A2 = A2 + 1 | 0;
              if ((A2 | 0) == (q2 | 0)) {
                y2 = p2;
                s2 = b2;
                q2 = z2;
                break;
              } else {
                w2 = p2;
                s2 = z2;
                x2 = u2;
              }
            }
          } else {
            y2 = 999999984306749400;
            s2 = 0;
            r2 = 0;
            q2 = 0;
            u2 = 0;
          }
          switch (c[e2 + 4 >> 2] | 0) {
            case 4:
            case 5:
            case 10:
            case 11:
            case 13:
            case 1:
            case 0:
            case 8:
              break;
            default:
              +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
          }
          v2 = (c[l >> 2] = s2, +g[l >> 2]);
          w2 = (c[l >> 2] = r2, +g[l >> 2]);
          x2 = (c[l >> 2] = q2, +g[l >> 2]);
          switch (c[f2 + 4 >> 2] | 0) {
            case 4:
            case 5:
            case 10:
            case 11:
            case 13:
            case 1:
            case 0:
            case 8:
              break;
            default:
              +Cb[c[(c[f2 >> 2] | 0) + 48 >> 2] & 15](f2);
          }
          if (y2 < 0) {
            n2 = 0;
            i = C2;
            return n2 | 0;
          }
          switch (c[e2 + 4 >> 2] | 0) {
            case 8: {
              p2 = +g[e2 + 32 >> 2] * +g[e2 + 16 >> 2];
              break;
            }
            case 0: {
              p2 = +g[e2 + 48 >> 2];
              break;
            }
            case 1: {
              p2 = +g[e2 + 48 >> 2];
              break;
            }
            case 13: {
              p2 = +g[e2 + 48 >> 2];
              break;
            }
            case 11: {
              p2 = +g[e2 + 48 >> 2];
              break;
            }
            case 10: {
              p2 = +g[e2 + 48 >> 2];
              break;
            }
            case 4:
            case 5: {
              p2 = +g[e2 + 48 >> 2];
              break;
            }
            default:
              p2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
          }
          b2 = c[f2 + 4 >> 2] | 0;
          switch (b2 | 0) {
            case 8: {
              t2 = +g[f2 + 32 >> 2] * +g[f2 + 16 >> 2];
              b2 = 8;
              break;
            }
            case 0: {
              t2 = +g[f2 + 48 >> 2];
              b2 = 0;
              break;
            }
            case 1: {
              t2 = +g[f2 + 48 >> 2];
              b2 = 1;
              break;
            }
            case 13: {
              t2 = +g[f2 + 48 >> 2];
              b2 = 13;
              break;
            }
            case 11: {
              t2 = +g[f2 + 48 >> 2];
              b2 = 11;
              break;
            }
            case 10: {
              t2 = +g[f2 + 48 >> 2];
              b2 = 10;
              break;
            }
            case 4:
            case 5: {
              t2 = +g[f2 + 48 >> 2];
              break;
            }
            default: {
              t2 = +Cb[c[(c[f2 >> 2] | 0) + 48 >> 2] & 15](f2);
              b2 = c[f2 + 4 >> 2] | 0;
            }
          }
          p2 = y2 + (p2 + t2 + 0.5);
          c[C2 + 176 >> 2] = 8848;
          c[C2 + 176 + 4 >> 2] = 0;
          c[C2 + 176 + 8 >> 2] = 1065353216;
          c[C2 + 176 + 12 >> 2] = 0;
          g[C2 + 176 + 16 >> 2] = 0;
          c[C2 + 176 + 20 >> 2] = 0;
          c[C2 + 176 + 24 >> 2] = d2;
          c[C2 + 176 + 28 >> 2] = e2;
          c[C2 + 176 + 32 >> 2] = f2;
          c[C2 + 176 + 36 >> 2] = c[e2 + 4 >> 2];
          c[C2 + 176 + 40 >> 2] = b2;
          g[C2 + 176 + 44 >> 2] = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
          g[C2 + 176 + 48 >> 2] = +Cb[c[(c[f2 >> 2] | 0) + 48 >> 2] & 15](f2);
          a[C2 + 176 + 52 >> 0] = 0;
          c[C2 + 176 + 60 >> 2] = -1;
          c[C2 + 176 + 72 >> 2] = 1;
          c[C2 + 176 + 76 >> 2] = 1;
          F2 = v2 * p2 + +g[h2 + 48 >> 2];
          G2 = w2 * p2 + +g[h2 + 52 >> 2];
          H2 = x2 * p2 + +g[h2 + 56 >> 2];
          c[C2 + 44 >> 2] = c[h2 >> 2];
          c[C2 + 44 + 4 >> 2] = c[h2 + 4 >> 2];
          c[C2 + 44 + 8 >> 2] = c[h2 + 8 >> 2];
          c[C2 + 44 + 12 >> 2] = c[h2 + 12 >> 2];
          c[C2 + 44 + 16 >> 2] = c[h2 + 16 >> 2];
          c[C2 + 44 + 16 + 4 >> 2] = c[h2 + 16 + 4 >> 2];
          c[C2 + 44 + 16 + 8 >> 2] = c[h2 + 16 + 8 >> 2];
          c[C2 + 44 + 16 + 12 >> 2] = c[h2 + 16 + 12 >> 2];
          c[C2 + 44 + 32 >> 2] = c[h2 + 32 >> 2];
          c[C2 + 44 + 32 + 4 >> 2] = c[h2 + 32 + 4 >> 2];
          c[C2 + 44 + 32 + 8 >> 2] = c[h2 + 32 + 8 >> 2];
          c[C2 + 44 + 32 + 12 >> 2] = c[h2 + 32 + 12 >> 2];
          g[C2 + 44 + 48 >> 2] = F2;
          g[C2 + 44 + 52 >> 2] = G2;
          g[C2 + 44 + 56 >> 2] = H2;
          g[C2 + 44 + 60 >> 2] = 0;
          c[C2 + 44 + 64 >> 2] = c[j2 >> 2];
          c[C2 + 44 + 64 + 4 >> 2] = c[j2 + 4 >> 2];
          c[C2 + 44 + 64 + 8 >> 2] = c[j2 + 8 >> 2];
          c[C2 + 44 + 64 + 12 >> 2] = c[j2 + 12 >> 2];
          c[C2 + 44 + 80 >> 2] = c[j2 + 16 >> 2];
          c[C2 + 44 + 80 + 4 >> 2] = c[j2 + 16 + 4 >> 2];
          c[C2 + 44 + 80 + 8 >> 2] = c[j2 + 16 + 8 >> 2];
          c[C2 + 44 + 80 + 12 >> 2] = c[j2 + 16 + 12 >> 2];
          c[C2 + 44 + 96 >> 2] = c[j2 + 32 >> 2];
          c[C2 + 44 + 96 + 4 >> 2] = c[j2 + 32 + 4 >> 2];
          c[C2 + 44 + 96 + 8 >> 2] = c[j2 + 32 + 8 >> 2];
          c[C2 + 44 + 96 + 12 >> 2] = c[j2 + 32 + 12 >> 2];
          c[C2 + 44 + 112 >> 2] = c[j2 + 48 >> 2];
          c[C2 + 44 + 112 + 4 >> 2] = c[j2 + 48 + 4 >> 2];
          c[C2 + 44 + 112 + 8 >> 2] = c[j2 + 48 + 8 >> 2];
          c[C2 + 44 + 112 + 12 >> 2] = c[j2 + 48 + 12 >> 2];
          g[C2 + 44 + 128 >> 2] = 999999984306749400;
          c[C2 >> 2] = 8888;
          a[C2 + 40 >> 0] = 0;
          g[C2 + 176 + 4 >> 2] = -v2;
          g[C2 + 176 + 8 >> 2] = -w2;
          g[C2 + 176 + 12 >> 2] = -x2;
          g[C2 + 176 + 16 >> 2] = 0;
          uc(C2 + 176 | 0, C2 + 44 | 0, C2, o2, 0);
          p2 = p2 - +g[C2 + 36 >> 2];
          b2 = a[C2 + 40 >> 0] | 0;
          if (b2 << 24 >> 24) {
            G2 = +g[C2 + 24 >> 2] - w2 * p2;
            H2 = +g[C2 + 28 >> 2] - x2 * p2;
            g[m2 >> 2] = +g[C2 + 20 >> 2] - v2 * p2;
            g[m2 + 4 >> 2] = G2;
            g[m2 + 8 >> 2] = H2;
            g[m2 + 12 >> 2] = 0;
            c[n2 >> 2] = c[C2 + 20 >> 2];
            c[n2 + 4 >> 2] = c[C2 + 20 + 4 >> 2];
            c[n2 + 8 >> 2] = c[C2 + 20 + 8 >> 2];
            c[n2 + 12 >> 2] = c[C2 + 20 + 12 >> 2];
            c[k2 >> 2] = s2;
            c[k2 + 4 >> 2] = r2;
            c[k2 + 8 >> 2] = q2;
            g[k2 + 12 >> 2] = u2;
          }
          n2 = b2 << 24 >> 24 != 0;
          i = C2;
          return n2 | 0;
        }
        function Jc(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0;
          u2 = i;
          i = i + 176 | 0;
          if (!(a[b2 + 738 >> 0] | 0)) {
            i = u2;
            return;
          }
          g[b2 + 36 >> 2] = 0;
          g[b2 + 744 >> 2] = 0;
          if (!(a[b2 + 736 >> 0] | 0)) {
            e2 = c[b2 + 28 >> 2] | 0;
            k2 = +g[b2 + 600 >> 2];
            l2 = +g[b2 + 604 >> 2];
            q2 = +g[b2 + 608 >> 2];
            s2 = k2 * +g[e2 + 20 >> 2] + l2 * +g[e2 + 24 >> 2] + q2 * +g[e2 + 28 >> 2] + +g[e2 + 56 >> 2];
            f2 = c[b2 + 32 >> 2] | 0;
            m2 = +g[b2 + 664 >> 2];
            n2 = +g[b2 + 668 >> 2];
            r2 = +g[b2 + 672 >> 2];
            t2 = m2 * +g[f2 + 20 >> 2] + n2 * +g[f2 + 24 >> 2] + r2 * +g[f2 + 28 >> 2] + +g[f2 + 56 >> 2];
            o2 = m2 * +g[f2 + 36 >> 2] + n2 * +g[f2 + 40 >> 2] + r2 * +g[f2 + 44 >> 2] + +g[f2 + 60 >> 2];
            p2 = k2 * +g[e2 + 4 >> 2] + l2 * +g[e2 + 8 >> 2] + q2 * +g[e2 + 12 >> 2] + +g[e2 + 52 >> 2];
            q2 = k2 * +g[e2 + 36 >> 2] + l2 * +g[e2 + 40 >> 2] + q2 * +g[e2 + 44 >> 2] + +g[e2 + 60 >> 2];
            r2 = m2 * +g[f2 + 4 >> 2] + n2 * +g[f2 + 8 >> 2] + r2 * +g[f2 + 12 >> 2] + +g[f2 + 52 >> 2];
            if ((r2 - p2) * (r2 - p2) + (t2 - s2) * (t2 - s2) + (o2 - q2) * (o2 - q2) > 11920928955078125e-23) {
              h2 = 1 / +G(+((r2 - p2) * (r2 - p2) + (t2 - s2) * (t2 - s2) + (o2 - q2) * (o2 - q2)));
              g[u2 + 128 >> 2] = (r2 - p2) * h2;
              g[u2 + 128 + 4 >> 2] = (t2 - s2) * h2;
              g[u2 + 128 + 8 >> 2] = (o2 - q2) * h2;
              c[u2 + 128 + 12 >> 2] = 0;
              m2 = (o2 - q2) * h2;
              d2 = (t2 - s2) * h2;
              h2 = (r2 - p2) * h2;
            } else {
              c[u2 + 128 >> 2] = 1065353216;
              c[u2 + 128 + 4 >> 2] = 0;
              c[u2 + 128 + 8 >> 2] = 0;
              g[u2 + 128 + 12 >> 2] = 0;
              m2 = 0;
              d2 = 0;
              h2 = 1;
            }
            if (+F(+m2) > 0.7071067690849304) {
              w2 = m2 * m2 + d2 * d2;
              v2 = 1 / +G(+w2);
              k2 = -(v2 * m2);
              m2 = v2 * d2;
              n2 = -(m2 * h2);
              j2 = h2 * k2;
              l2 = 0;
              d2 = w2 * v2;
              h2 = m2;
            } else {
              k2 = h2 * h2 + d2 * d2;
              j2 = 1 / +G(+k2);
              l2 = -(d2 * j2);
              d2 = j2 * h2;
              n2 = m2 * l2;
              j2 = k2 * j2;
              k2 = d2;
              d2 = -(d2 * m2);
              h2 = 0;
            }
            g[u2 + 128 + 16 >> 2] = l2;
            g[u2 + 128 + 20 >> 2] = k2;
            g[u2 + 128 + 24 >> 2] = h2;
            g[u2 + 128 + 32 >> 2] = d2;
            g[u2 + 128 + 36 >> 2] = n2;
            g[u2 + 128 + 40 >> 2] = j2;
            e2 = 0;
            while (1) {
              x2 = c[b2 + 28 >> 2] | 0;
              c[u2 + 80 >> 2] = c[x2 + 4 >> 2];
              c[u2 + 80 + 4 >> 2] = c[x2 + 20 >> 2];
              c[u2 + 80 + 8 >> 2] = c[x2 + 36 >> 2];
              g[u2 + 80 + 12 >> 2] = 0;
              c[u2 + 80 + 16 >> 2] = c[x2 + 8 >> 2];
              c[u2 + 80 + 20 >> 2] = c[x2 + 24 >> 2];
              c[u2 + 80 + 24 >> 2] = c[x2 + 40 >> 2];
              g[u2 + 80 + 28 >> 2] = 0;
              c[u2 + 80 + 32 >> 2] = c[x2 + 12 >> 2];
              c[u2 + 80 + 36 >> 2] = c[x2 + 28 >> 2];
              c[u2 + 80 + 40 >> 2] = c[x2 + 44 >> 2];
              g[u2 + 80 + 44 >> 2] = 0;
              c[u2 + 32 >> 2] = c[f2 + 4 >> 2];
              c[u2 + 32 + 4 >> 2] = c[f2 + 20 >> 2];
              c[u2 + 32 + 8 >> 2] = c[f2 + 36 >> 2];
              g[u2 + 32 + 12 >> 2] = 0;
              c[u2 + 32 + 16 >> 2] = c[f2 + 8 >> 2];
              c[u2 + 32 + 20 >> 2] = c[f2 + 24 >> 2];
              c[u2 + 32 + 24 >> 2] = c[f2 + 40 >> 2];
              g[u2 + 32 + 28 >> 2] = 0;
              c[u2 + 32 + 32 >> 2] = c[f2 + 12 >> 2];
              c[u2 + 32 + 36 >> 2] = c[f2 + 28 >> 2];
              c[u2 + 32 + 40 >> 2] = c[f2 + 44 >> 2];
              g[u2 + 32 + 44 >> 2] = 0;
              w2 = s2 - +g[x2 + 56 >> 2];
              v2 = q2 - +g[x2 + 60 >> 2];
              g[u2 + 16 >> 2] = p2 - +g[x2 + 52 >> 2];
              g[u2 + 16 + 4 >> 2] = w2;
              g[u2 + 16 + 8 >> 2] = v2;
              g[u2 + 16 + 12 >> 2] = 0;
              v2 = t2 - +g[f2 + 56 >> 2];
              w2 = o2 - +g[f2 + 60 >> 2];
              g[u2 >> 2] = r2 - +g[f2 + 52 >> 2];
              g[u2 + 4 >> 2] = v2;
              g[u2 + 8 >> 2] = w2;
              g[u2 + 12 >> 2] = 0;
              x2 = c[b2 + 28 >> 2] | 0;
              f2 = c[b2 + 32 >> 2] | 0;
              Eg(b2 + 48 + (e2 * 84 | 0) | 0, u2 + 80 | 0, u2 + 32 | 0, u2 + 16 | 0, u2, u2 + 128 + (e2 << 4) | 0, x2 + 436 | 0, +g[x2 + 384 >> 2], f2 + 436 | 0, +g[f2 + 384 >> 2]);
              e2 = e2 + 1 | 0;
              if ((e2 | 0) == 3)
                break;
              f2 = c[b2 + 32 >> 2] | 0;
            }
          }
          n2 = +g[b2 + 560 >> 2];
          o2 = +g[b2 + 576 >> 2];
          p2 = +g[b2 + 592 >> 2];
          if (+F(+p2) > 0.7071067690849304) {
            m2 = 1 / +G(+(p2 * p2 + o2 * o2));
            d2 = n2 * -(p2 * m2);
            h2 = (p2 * p2 + o2 * o2) * m2;
            j2 = 0;
            k2 = o2 * m2;
            l2 = -(n2 * o2 * m2);
            m2 = -(p2 * m2);
          } else {
            m2 = 1 / +G(+(n2 * n2 + o2 * o2));
            d2 = (n2 * n2 + o2 * o2) * m2;
            h2 = -(p2 * n2 * m2);
            j2 = -(o2 * m2);
            k2 = 0;
            l2 = p2 * -(o2 * m2);
            m2 = n2 * m2;
          }
          f2 = c[b2 + 28 >> 2] | 0;
          K2 = +g[f2 + 4 >> 2];
          J2 = +g[f2 + 8 >> 2];
          s2 = +g[f2 + 12 >> 2];
          R2 = j2 * K2 + m2 * J2 + k2 * s2;
          I2 = +g[f2 + 20 >> 2];
          H2 = +g[f2 + 24 >> 2];
          v2 = +g[f2 + 28 >> 2];
          T2 = j2 * I2 + m2 * H2 + k2 * v2;
          E2 = +g[f2 + 36 >> 2];
          q2 = +g[f2 + 40 >> 2];
          C2 = +g[f2 + 44 >> 2];
          W2 = j2 * E2 + m2 * q2 + k2 * C2;
          B2 = h2 * K2 + l2 * J2 + d2 * s2;
          M2 = h2 * I2 + l2 * H2 + d2 * v2;
          N2 = h2 * E2 + l2 * q2 + d2 * C2;
          e2 = c[b2 + 32 >> 2] | 0;
          A2 = +g[e2 + 4 >> 2];
          z2 = +g[e2 + 20 >> 2];
          y2 = +g[e2 + 36 >> 2];
          l2 = +g[e2 + 8 >> 2];
          m2 = +g[e2 + 24 >> 2];
          t2 = +g[e2 + 40 >> 2];
          P2 = +g[e2 + 12 >> 2];
          S2 = +g[e2 + 28 >> 2];
          V2 = +g[e2 + 44 >> 2];
          c[b2 + 300 >> 2] = 0;
          c[b2 + 300 + 4 >> 2] = 0;
          c[b2 + 300 + 8 >> 2] = 0;
          c[b2 + 300 + 12 >> 2] = 0;
          g[b2 + 316 >> 2] = R2 * K2 + T2 * I2 + W2 * E2;
          g[b2 + 320 >> 2] = R2 * J2 + T2 * H2 + W2 * q2;
          g[b2 + 324 >> 2] = R2 * s2 + T2 * v2 + W2 * C2;
          g[b2 + 328 >> 2] = 0;
          g[b2 + 332 >> 2] = A2 * -R2 + z2 * -T2 + y2 * -W2;
          g[b2 + 336 >> 2] = l2 * -R2 + m2 * -T2 + t2 * -W2;
          g[b2 + 340 >> 2] = P2 * -R2 + S2 * -T2 + V2 * -W2;
          g[b2 + 344 >> 2] = 0;
          D2 = (R2 * K2 + T2 * I2 + W2 * E2) * +g[f2 + 436 >> 2];
          L2 = (R2 * J2 + T2 * H2 + W2 * q2) * +g[f2 + 440 >> 2];
          d2 = (R2 * s2 + T2 * v2 + W2 * C2) * +g[f2 + 444 >> 2];
          g[b2 + 348 >> 2] = D2;
          g[b2 + 352 >> 2] = L2;
          g[b2 + 356 >> 2] = d2;
          g[b2 + 360 >> 2] = 0;
          k2 = (A2 * -R2 + z2 * -T2 + y2 * -W2) * +g[e2 + 436 >> 2];
          w2 = (l2 * -R2 + m2 * -T2 + t2 * -W2) * +g[e2 + 440 >> 2];
          X2 = (P2 * -R2 + S2 * -T2 + V2 * -W2) * +g[e2 + 444 >> 2];
          g[b2 + 364 >> 2] = k2;
          g[b2 + 368 >> 2] = w2;
          g[b2 + 372 >> 2] = X2;
          g[b2 + 376 >> 2] = 0;
          g[b2 + 380 >> 2] = (R2 * K2 + T2 * I2 + W2 * E2) * D2 + (R2 * J2 + T2 * H2 + W2 * q2) * L2 + (R2 * s2 + T2 * v2 + W2 * C2) * d2 + ((A2 * -R2 + z2 * -T2 + y2 * -W2) * k2 + (l2 * -R2 + m2 * -T2 + t2 * -W2) * w2 + (P2 * -R2 + S2 * -T2 + V2 * -W2) * X2);
          e2 = c[b2 + 28 >> 2] | 0;
          X2 = +g[e2 + 4 >> 2];
          W2 = +g[e2 + 20 >> 2];
          V2 = +g[e2 + 36 >> 2];
          T2 = +g[e2 + 8 >> 2];
          S2 = +g[e2 + 24 >> 2];
          R2 = +g[e2 + 40 >> 2];
          P2 = +g[e2 + 12 >> 2];
          w2 = +g[e2 + 28 >> 2];
          t2 = +g[e2 + 44 >> 2];
          f2 = c[b2 + 32 >> 2] | 0;
          m2 = +g[f2 + 4 >> 2];
          l2 = +g[f2 + 20 >> 2];
          k2 = +g[f2 + 36 >> 2];
          y2 = +g[f2 + 8 >> 2];
          z2 = +g[f2 + 24 >> 2];
          A2 = +g[f2 + 40 >> 2];
          d2 = +g[f2 + 12 >> 2];
          L2 = +g[f2 + 28 >> 2];
          D2 = +g[f2 + 44 >> 2];
          c[b2 + 384 >> 2] = 0;
          c[b2 + 384 + 4 >> 2] = 0;
          c[b2 + 384 + 8 >> 2] = 0;
          c[b2 + 384 + 12 >> 2] = 0;
          g[b2 + 400 >> 2] = B2 * X2 + M2 * W2 + N2 * V2;
          g[b2 + 404 >> 2] = B2 * T2 + M2 * S2 + N2 * R2;
          g[b2 + 408 >> 2] = B2 * P2 + M2 * w2 + N2 * t2;
          g[b2 + 412 >> 2] = 0;
          g[b2 + 416 >> 2] = m2 * -B2 + l2 * -M2 + k2 * -N2;
          g[b2 + 420 >> 2] = y2 * -B2 + z2 * -M2 + A2 * -N2;
          g[b2 + 424 >> 2] = d2 * -B2 + L2 * -M2 + D2 * -N2;
          g[b2 + 428 >> 2] = 0;
          U2 = (B2 * X2 + M2 * W2 + N2 * V2) * +g[e2 + 436 >> 2];
          Q2 = (B2 * T2 + M2 * S2 + N2 * R2) * +g[e2 + 440 >> 2];
          r2 = (B2 * P2 + M2 * w2 + N2 * t2) * +g[e2 + 444 >> 2];
          g[b2 + 432 >> 2] = U2;
          g[b2 + 436 >> 2] = Q2;
          g[b2 + 440 >> 2] = r2;
          g[b2 + 444 >> 2] = 0;
          j2 = (m2 * -B2 + l2 * -M2 + k2 * -N2) * +g[f2 + 436 >> 2];
          h2 = (y2 * -B2 + z2 * -M2 + A2 * -N2) * +g[f2 + 440 >> 2];
          O2 = (d2 * -B2 + L2 * -M2 + D2 * -N2) * +g[f2 + 444 >> 2];
          g[b2 + 448 >> 2] = j2;
          g[b2 + 452 >> 2] = h2;
          g[b2 + 456 >> 2] = O2;
          g[b2 + 460 >> 2] = 0;
          g[b2 + 464 >> 2] = (B2 * X2 + M2 * W2 + N2 * V2) * U2 + (B2 * T2 + M2 * S2 + N2 * R2) * Q2 + (B2 * P2 + M2 * w2 + N2 * t2) * r2 + ((m2 * -B2 + l2 * -M2 + k2 * -N2) * j2 + (y2 * -B2 + z2 * -M2 + A2 * -N2) * h2 + (d2 * -B2 + L2 * -M2 + D2 * -N2) * O2);
          f2 = c[b2 + 28 >> 2] | 0;
          O2 = +g[f2 + 4 >> 2];
          N2 = +g[f2 + 20 >> 2];
          D2 = +g[f2 + 36 >> 2];
          M2 = +g[f2 + 8 >> 2];
          L2 = +g[f2 + 24 >> 2];
          B2 = +g[f2 + 40 >> 2];
          d2 = +g[f2 + 12 >> 2];
          h2 = +g[f2 + 28 >> 2];
          A2 = +g[f2 + 44 >> 2];
          e2 = c[b2 + 32 >> 2] | 0;
          z2 = +g[e2 + 4 >> 2];
          y2 = +g[e2 + 20 >> 2];
          j2 = +g[e2 + 36 >> 2];
          k2 = +g[e2 + 8 >> 2];
          l2 = +g[e2 + 24 >> 2];
          m2 = +g[e2 + 40 >> 2];
          r2 = +g[e2 + 12 >> 2];
          t2 = +g[e2 + 28 >> 2];
          w2 = +g[e2 + 44 >> 2];
          c[b2 + 468 >> 2] = 0;
          c[b2 + 468 + 4 >> 2] = 0;
          c[b2 + 468 + 8 >> 2] = 0;
          c[b2 + 468 + 12 >> 2] = 0;
          D2 = (K2 * n2 + J2 * o2 + s2 * p2) * O2 + (I2 * n2 + H2 * o2 + v2 * p2) * N2 + (E2 * n2 + q2 * o2 + C2 * p2) * D2;
          B2 = (K2 * n2 + J2 * o2 + s2 * p2) * M2 + (I2 * n2 + H2 * o2 + v2 * p2) * L2 + (E2 * n2 + q2 * o2 + C2 * p2) * B2;
          A2 = (K2 * n2 + J2 * o2 + s2 * p2) * d2 + (I2 * n2 + H2 * o2 + v2 * p2) * h2 + (E2 * n2 + q2 * o2 + C2 * p2) * A2;
          g[b2 + 484 >> 2] = D2;
          g[b2 + 488 >> 2] = B2;
          g[b2 + 492 >> 2] = A2;
          g[b2 + 496 >> 2] = 0;
          s2 = -(K2 * n2 + J2 * o2 + s2 * p2);
          v2 = -(I2 * n2 + H2 * o2 + v2 * p2);
          h2 = -(E2 * n2 + q2 * o2 + C2 * p2);
          g[b2 + 500 >> 2] = z2 * s2 + y2 * v2 + j2 * h2;
          g[b2 + 504 >> 2] = k2 * s2 + l2 * v2 + m2 * h2;
          g[b2 + 508 >> 2] = r2 * s2 + t2 * v2 + w2 * h2;
          g[b2 + 512 >> 2] = 0;
          C2 = D2 * +g[f2 + 436 >> 2];
          n2 = B2 * +g[f2 + 440 >> 2];
          o2 = A2 * +g[f2 + 444 >> 2];
          g[b2 + 516 >> 2] = C2;
          g[b2 + 520 >> 2] = n2;
          g[b2 + 524 >> 2] = o2;
          g[b2 + 528 >> 2] = 0;
          p2 = (z2 * s2 + y2 * v2 + j2 * h2) * +g[e2 + 436 >> 2];
          q2 = (k2 * s2 + l2 * v2 + m2 * h2) * +g[e2 + 440 >> 2];
          d2 = (r2 * s2 + t2 * v2 + w2 * h2) * +g[e2 + 444 >> 2];
          g[b2 + 532 >> 2] = p2;
          g[b2 + 536 >> 2] = q2;
          g[b2 + 540 >> 2] = d2;
          g[b2 + 544 >> 2] = 0;
          g[b2 + 548 >> 2] = D2 * C2 + B2 * n2 + A2 * o2 + ((z2 * s2 + y2 * v2 + j2 * h2) * p2 + (k2 * s2 + l2 * v2 + m2 * h2) * q2 + (r2 * s2 + t2 * v2 + w2 * h2) * d2);
          g[b2 + 724 >> 2] = 0;
          e2 = c[b2 + 28 >> 2] | 0;
          f2 = c[b2 + 32 >> 2] | 0;
          d2 = +_i(b2, e2 + 4 | 0, f2 + 4 | 0);
          g[b2 + 728 >> 2] = d2;
          g[b2 + 708 >> 2] = 0;
          g[b2 + 712 >> 2] = 0;
          a[b2 + 716 >> 0] = 0;
          h2 = +g[b2 + 692 >> 2];
          do
            if (h2 >= 0) {
              d2 = +jh(d2 - +g[b2 + 688 >> 2], 6.2831854820251465);
              if (!(d2 < -3.1415927410125732)) {
                if (d2 > 3.1415927410125732)
                  d2 = d2 + -6.2831854820251465;
              } else
                d2 = d2 + 6.2831854820251465;
              if (d2 < -h2) {
                a[b2 + 716 >> 0] = 1;
                g[b2 + 708 >> 2] = -(d2 + h2);
                g[b2 + 712 >> 2] = 1;
                break;
              }
              if (d2 > h2) {
                a[b2 + 716 >> 0] = 1;
                g[b2 + 708 >> 2] = h2 - d2;
                g[b2 + 712 >> 2] = -1;
              }
            }
          while (0);
          T2 = +g[b2 + 560 >> 2];
          U2 = +g[b2 + 576 >> 2];
          X2 = +g[b2 + 592 >> 2];
          V2 = T2 * +g[e2 + 4 >> 2] + U2 * +g[e2 + 8 >> 2] + X2 * +g[e2 + 12 >> 2];
          W2 = T2 * +g[e2 + 20 >> 2] + U2 * +g[e2 + 24 >> 2] + X2 * +g[e2 + 28 >> 2];
          X2 = T2 * +g[e2 + 36 >> 2] + U2 * +g[e2 + 40 >> 2] + X2 * +g[e2 + 44 >> 2];
          g[b2 + 720 >> 2] = 1 / (V2 * (V2 * +g[e2 + 304 >> 2] + W2 * +g[e2 + 320 >> 2] + X2 * +g[e2 + 336 >> 2]) + W2 * (V2 * +g[e2 + 308 >> 2] + W2 * +g[e2 + 324 >> 2] + X2 * +g[e2 + 340 >> 2]) + X2 * (V2 * +g[e2 + 312 >> 2] + W2 * +g[e2 + 328 >> 2] + X2 * +g[e2 + 344 >> 2]) + (V2 * (V2 * +g[f2 + 304 >> 2] + W2 * +g[f2 + 320 >> 2] + X2 * +g[f2 + 336 >> 2]) + W2 * (V2 * +g[f2 + 308 >> 2] + W2 * +g[f2 + 324 >> 2] + X2 * +g[f2 + 340 >> 2]) + X2 * (V2 * +g[f2 + 312 >> 2] + W2 * +g[f2 + 328 >> 2] + X2 * +g[f2 + 344 >> 2])));
          i = u2;
          return;
        }
        function Kc(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0;
          M2 = i;
          i = i + 64 | 0;
          if (!(c[b2 + 12 >> 2] | 0)) {
            i = M2;
            return;
          }
          f2 = (a[b2 + 16 >> 0] | 0) != 0;
          P2 = f2 ? e2 : d2;
          f2 = f2 ? d2 : e2;
          j2 = c[P2 + 4 >> 2] | 0;
          k2 = c[f2 + 4 >> 2] | 0;
          P2 = c[P2 + 12 >> 2] | 0;
          aa2 = +g[P2 >> 2];
          $2 = +g[P2 + 16 >> 2];
          _2 = +g[P2 + 32 >> 2];
          Z2 = +g[P2 + 4 >> 2];
          Y2 = +g[P2 + 20 >> 2];
          o2 = +g[P2 + 36 >> 2];
          l2 = +g[P2 + 8 >> 2];
          r2 = +g[P2 + 24 >> 2];
          y2 = +g[P2 + 40 >> 2];
          T2 = +g[P2 + 48 >> 2];
          S2 = +g[P2 + 52 >> 2];
          R2 = +g[P2 + 56 >> 2];
          O2 = c[f2 + 12 >> 2] | 0;
          X2 = +g[O2 >> 2];
          W2 = +g[O2 + 16 >> 2];
          p2 = +g[O2 + 32 >> 2];
          V2 = +g[O2 + 4 >> 2];
          U2 = +g[O2 + 20 >> 2];
          q2 = +g[O2 + 36 >> 2];
          x2 = +g[O2 + 8 >> 2];
          v2 = +g[O2 + 24 >> 2];
          t2 = +g[O2 + 40 >> 2];
          Q2 = -+g[O2 + 48 >> 2];
          E2 = -+g[O2 + 52 >> 2];
          H2 = -+g[O2 + 56 >> 2];
          K2 = +g[P2 >> 2];
          L2 = +g[P2 + 16 >> 2];
          D2 = +g[P2 + 32 >> 2];
          B2 = +g[P2 + 4 >> 2];
          A2 = +g[P2 + 20 >> 2];
          z2 = +g[P2 + 36 >> 2];
          w2 = +g[P2 + 8 >> 2];
          u2 = +g[P2 + 24 >> 2];
          s2 = +g[P2 + 40 >> 2];
          P2 = c[(c[j2 >> 2] | 0) + 64 >> 2] | 0;
          n2 = -+g[k2 + 52 >> 2];
          m2 = -+g[k2 + 56 >> 2];
          C2 = -+g[k2 + 60 >> 2];
          g[M2 + 48 >> 2] = (aa2 * X2 + $2 * W2 + _2 * p2) * n2 + (aa2 * V2 + $2 * U2 + _2 * q2) * m2 + (aa2 * x2 + $2 * v2 + _2 * t2) * C2;
          g[M2 + 48 + 4 >> 2] = (Z2 * X2 + Y2 * W2 + o2 * p2) * n2 + (Z2 * V2 + Y2 * U2 + o2 * q2) * m2 + (Z2 * x2 + Y2 * v2 + o2 * t2) * C2;
          g[M2 + 48 + 8 >> 2] = (l2 * X2 + r2 * W2 + y2 * p2) * n2 + (l2 * V2 + r2 * U2 + y2 * q2) * m2 + (l2 * x2 + r2 * v2 + y2 * t2) * C2;
          g[M2 + 48 + 12 >> 2] = 0;
          Ub[P2 & 127](M2, j2, M2 + 48 | 0);
          C2 = +g[M2 >> 2];
          y2 = +g[M2 + 4 >> 2];
          r2 = +g[M2 + 8 >> 2];
          l2 = +g[k2 + 52 >> 2];
          m2 = +g[k2 + 56 >> 2];
          n2 = +g[k2 + 60 >> 2];
          o2 = n2 * (T2 * x2 + S2 * v2 + R2 * t2 + (x2 * Q2 + v2 * E2 + t2 * H2) + ((x2 * K2 + v2 * L2 + t2 * D2) * C2 + (x2 * B2 + v2 * A2 + t2 * z2) * y2 + (x2 * w2 + v2 * u2 + t2 * s2) * r2)) + (l2 * (T2 * X2 + S2 * W2 + R2 * p2 + (X2 * Q2 + W2 * E2 + p2 * H2) + ((X2 * K2 + W2 * L2 + p2 * D2) * C2 + (X2 * B2 + W2 * A2 + p2 * z2) * y2 + (X2 * w2 + W2 * u2 + p2 * s2) * r2)) + m2 * (T2 * V2 + S2 * U2 + R2 * q2 + (V2 * Q2 + U2 * E2 + q2 * H2) + ((V2 * K2 + U2 * L2 + q2 * D2) * C2 + (V2 * B2 + U2 * A2 + q2 * z2) * y2 + (V2 * w2 + U2 * u2 + q2 * s2) * r2))) - +g[k2 + 68 >> 2];
          p2 = T2 * X2 + S2 * W2 + R2 * p2 + (X2 * Q2 + W2 * E2 + p2 * H2) + ((X2 * K2 + W2 * L2 + p2 * D2) * C2 + (X2 * B2 + W2 * A2 + p2 * z2) * y2 + (X2 * w2 + W2 * u2 + p2 * s2) * r2) - l2 * o2;
          q2 = T2 * V2 + S2 * U2 + R2 * q2 + (V2 * Q2 + U2 * E2 + q2 * H2) + ((V2 * K2 + U2 * L2 + q2 * D2) * C2 + (V2 * B2 + U2 * A2 + q2 * z2) * y2 + (V2 * w2 + U2 * u2 + q2 * s2) * r2) - m2 * o2;
          r2 = T2 * x2 + S2 * v2 + R2 * t2 + (x2 * Q2 + v2 * E2 + t2 * H2) + ((x2 * K2 + v2 * L2 + t2 * D2) * C2 + (x2 * B2 + v2 * A2 + t2 * z2) * y2 + (x2 * w2 + v2 * u2 + t2 * s2) * r2) - n2 * o2;
          P2 = c[f2 + 12 >> 2] | 0;
          s2 = +g[P2 >> 2];
          t2 = +g[P2 + 4 >> 2];
          u2 = +g[P2 + 8 >> 2];
          v2 = +g[P2 + 16 >> 2];
          w2 = +g[P2 + 20 >> 2];
          x2 = +g[P2 + 24 >> 2];
          y2 = +g[P2 + 32 >> 2];
          z2 = +g[P2 + 36 >> 2];
          A2 = +g[P2 + 40 >> 2];
          B2 = +g[P2 + 48 >> 2];
          C2 = +g[P2 + 52 >> 2];
          D2 = +g[P2 + 56 >> 2];
          P2 = c[b2 + 12 >> 2] | 0;
          O2 = o2 < +g[P2 + 784 >> 2];
          c[h2 + 4 >> 2] = P2;
          if (O2) {
            P2 = c[f2 + 12 >> 2] | 0;
            $2 = l2 * +g[P2 + 16 >> 2] + m2 * +g[P2 + 20 >> 2] + n2 * +g[P2 + 24 >> 2];
            aa2 = l2 * +g[P2 + 32 >> 2] + m2 * +g[P2 + 36 >> 2] + n2 * +g[P2 + 40 >> 2];
            g[M2 + 48 >> 2] = +g[P2 >> 2] * l2 + +g[P2 + 4 >> 2] * m2 + +g[P2 + 8 >> 2] * n2;
            g[M2 + 48 + 4 >> 2] = $2;
            g[M2 + 48 + 8 >> 2] = aa2;
            g[M2 + 48 + 12 >> 2] = 0;
            g[M2 + 32 >> 2] = u2 * r2 + (s2 * p2 + t2 * q2) + B2;
            g[M2 + 32 + 4 >> 2] = p2 * v2 + q2 * w2 + r2 * x2 + C2;
            g[M2 + 32 + 8 >> 2] = p2 * y2 + q2 * z2 + r2 * A2 + D2;
            g[M2 + 32 + 12 >> 2] = 0;
            Tb[c[(c[h2 >> 2] | 0) + 16 >> 2] & 15](h2, M2 + 48 | 0, M2 + 32 | 0, o2);
          }
          if ((c[j2 + 4 >> 2] | 0) < 7 ? (c[(c[h2 + 4 >> 2] | 0) + 780 >> 2] | 0) < (c[b2 + 24 >> 2] | 0) : 0) {
            l2 = +g[k2 + 60 >> 2];
            if (+F(+l2) > 0.7071067690849304) {
              n2 = +g[k2 + 56 >> 2];
              aa2 = 1 / +G(+(l2 * l2 + n2 * n2));
              m2 = 0;
              n2 = n2 * aa2;
              l2 = -(l2 * aa2);
            } else {
              aa2 = +g[k2 + 52 >> 2];
              m2 = +g[k2 + 56 >> 2];
              l2 = 1 / +G(+(aa2 * aa2 + m2 * m2));
              m2 = -(m2 * l2);
              n2 = 0;
              l2 = aa2 * l2;
            }
            H2 = 0.019999999552965164 / +Cb[c[(c[j2 >> 2] | 0) + 16 >> 2] & 15](j2);
            H2 = (H2 > 0.39269909262657166 ? 0.39269909262657166 : H2) * 0.5;
            E2 = +J(+H2) / +G(+(m2 * m2 + l2 * l2 + n2 * n2));
            L2 = m2 * E2;
            K2 = l2 * E2;
            E2 = n2 * E2;
            H2 = +I(+H2);
            f2 = c[b2 + 20 >> 2] | 0;
            if ((f2 | 0) > 0) {
              j2 = 0;
              do {
                v2 = +g[k2 + 52 >> 2];
                aa2 = +g[k2 + 56 >> 2];
                B2 = +g[k2 + 60 >> 2];
                z2 = +(j2 | 0) * (6.2831854820251465 / +(f2 | 0)) * 0.5;
                $2 = +J(+z2) / +G(+(v2 * v2 + aa2 * aa2 + B2 * B2));
                z2 = +I(+z2);
                A2 = E2 * -(aa2 * $2) + (L2 * z2 + H2 * -(v2 * $2)) - K2 * -(B2 * $2);
                x2 = L2 * -(B2 * $2) + (K2 * z2 + H2 * -(aa2 * $2)) - E2 * -(v2 * $2);
                da2 = K2 * -(v2 * $2) + (E2 * z2 + H2 * -(B2 * $2)) - L2 * -(aa2 * $2);
                D2 = H2 * z2 - L2 * -(v2 * $2) - K2 * -(aa2 * $2) - E2 * -(B2 * $2);
                ia2 = B2 * $2 * x2 + (v2 * $2 * D2 + z2 * A2) - aa2 * $2 * da2;
                ha2 = v2 * $2 * da2 + (z2 * x2 + aa2 * $2 * D2) - B2 * $2 * A2;
                la2 = aa2 * $2 * A2 + (B2 * $2 * D2 + z2 * da2) - v2 * $2 * x2;
                da2 = z2 * D2 - v2 * $2 * A2 - aa2 * $2 * x2 - B2 * $2 * da2;
                f2 = (a[b2 + 16 >> 0] | 0) != 0;
                ba2 = f2 ? e2 : d2;
                f2 = f2 ? d2 : e2;
                P2 = c[ba2 + 4 >> 2] | 0;
                O2 = c[f2 + 4 >> 2] | 0;
                ba2 = c[ba2 + 12 >> 2] | 0;
                $2 = +g[ba2 >> 2];
                B2 = +g[ba2 + 4 >> 2];
                x2 = +g[ba2 + 8 >> 2];
                aa2 = +g[ba2 + 16 >> 2];
                A2 = +g[ba2 + 20 >> 2];
                v2 = +g[ba2 + 24 >> 2];
                D2 = +g[ba2 + 32 >> 2];
                z2 = +g[ba2 + 36 >> 2];
                t2 = +g[ba2 + 40 >> 2];
                V2 = +g[ba2 + 48 >> 2];
                W2 = +g[ba2 + 52 >> 2];
                X2 = +g[ba2 + 56 >> 2];
                ba2 = c[f2 + 12 >> 2] | 0;
                R2 = +g[ba2 >> 2];
                S2 = +g[ba2 + 16 >> 2];
                p2 = +g[ba2 + 32 >> 2];
                T2 = +g[ba2 + 4 >> 2];
                U2 = +g[ba2 + 20 >> 2];
                q2 = +g[ba2 + 36 >> 2];
                w2 = +g[ba2 + 8 >> 2];
                u2 = +g[ba2 + 24 >> 2];
                s2 = +g[ba2 + 40 >> 2];
                Y2 = -+g[ba2 + 48 >> 2];
                Z2 = -+g[ba2 + 52 >> 2];
                _2 = -+g[ba2 + 56 >> 2];
                ga2 = ia2 * (2 / (ia2 * ia2 + ha2 * ha2 + la2 * la2 + da2 * da2));
                n2 = ha2 * (2 / (ia2 * ia2 + ha2 * ha2 + la2 * la2 + da2 * da2));
                ca2 = la2 * (2 / (ia2 * ia2 + ha2 * ha2 + la2 * la2 + da2 * da2));
                na2 = x2 * (ia2 * ca2 - da2 * n2) + (B2 * (ia2 * n2 + da2 * ca2) + $2 * (1 - (ha2 * n2 + la2 * ca2)));
                ka2 = x2 * (ha2 * ca2 + da2 * ga2) + ($2 * (ia2 * n2 - da2 * ca2) + B2 * (1 - (ia2 * ga2 + la2 * ca2)));
                l2 = $2 * (ia2 * ca2 + da2 * n2) + B2 * (ha2 * ca2 - da2 * ga2) + x2 * (1 - (ia2 * ga2 + ha2 * n2));
                ma2 = v2 * (ia2 * ca2 - da2 * n2) + (A2 * (ia2 * n2 + da2 * ca2) + aa2 * (1 - (ha2 * n2 + la2 * ca2)));
                ja2 = v2 * (ha2 * ca2 + da2 * ga2) + (aa2 * (ia2 * n2 - da2 * ca2) + A2 * (1 - (ia2 * ga2 + la2 * ca2)));
                y2 = aa2 * (ia2 * ca2 + da2 * n2) + A2 * (ha2 * ca2 - da2 * ga2) + v2 * (1 - (ia2 * ga2 + ha2 * n2));
                oa2 = t2 * (ia2 * ca2 - da2 * n2) + (z2 * (ia2 * n2 + da2 * ca2) + D2 * (1 - (ha2 * n2 + la2 * ca2)));
                la2 = t2 * (ha2 * ca2 + da2 * ga2) + (D2 * (ia2 * n2 - da2 * ca2) + z2 * (1 - (ia2 * ga2 + la2 * ca2)));
                n2 = D2 * (ia2 * ca2 + da2 * n2) + z2 * (ha2 * ca2 - da2 * ga2) + t2 * (1 - (ia2 * ga2 + ha2 * n2));
                ha2 = +g[ba2 >> 2];
                ga2 = +g[ba2 + 16 >> 2];
                ia2 = +g[ba2 + 32 >> 2];
                da2 = +g[ba2 + 4 >> 2];
                ca2 = +g[ba2 + 20 >> 2];
                ea2 = +g[ba2 + 36 >> 2];
                m2 = +g[ba2 + 8 >> 2];
                r2 = +g[ba2 + 24 >> 2];
                o2 = +g[ba2 + 40 >> 2];
                ba2 = c[(c[P2 >> 2] | 0) + 64 >> 2] | 0;
                fa2 = -+g[O2 + 52 >> 2];
                Q2 = -+g[O2 + 56 >> 2];
                C2 = -+g[O2 + 60 >> 2];
                g[M2 + 32 >> 2] = (ia2 * oa2 + (ha2 * na2 + ga2 * ma2)) * fa2 + (ea2 * oa2 + (da2 * na2 + ca2 * ma2)) * Q2 + (o2 * oa2 + (m2 * na2 + r2 * ma2)) * C2;
                g[M2 + 32 + 4 >> 2] = (ia2 * la2 + (ha2 * ka2 + ga2 * ja2)) * fa2 + (ea2 * la2 + (da2 * ka2 + ca2 * ja2)) * Q2 + (o2 * la2 + (m2 * ka2 + r2 * ja2)) * C2;
                g[M2 + 32 + 8 >> 2] = (ia2 * n2 + (ha2 * l2 + ga2 * y2)) * fa2 + (ea2 * n2 + (da2 * l2 + ca2 * y2)) * Q2 + (o2 * n2 + (m2 * l2 + r2 * y2)) * C2;
                g[M2 + 32 + 12 >> 2] = 0;
                Ub[ba2 & 127](M2 + 48 | 0, P2, M2 + 32 | 0);
                C2 = +g[M2 + 48 >> 2];
                y2 = +g[M2 + 48 + 4 >> 2];
                r2 = +g[M2 + 48 + 8 >> 2];
                l2 = +g[O2 + 52 >> 2];
                m2 = +g[O2 + 56 >> 2];
                n2 = +g[O2 + 60 >> 2];
                o2 = n2 * (V2 * w2 + W2 * u2 + X2 * s2 + (w2 * Y2 + u2 * Z2 + s2 * _2) + (($2 * w2 + aa2 * u2 + D2 * s2) * C2 + (B2 * w2 + A2 * u2 + z2 * s2) * y2 + (x2 * w2 + v2 * u2 + t2 * s2) * r2)) + (l2 * (V2 * R2 + W2 * S2 + X2 * p2 + (R2 * Y2 + S2 * Z2 + p2 * _2) + (($2 * R2 + aa2 * S2 + D2 * p2) * C2 + (B2 * R2 + A2 * S2 + z2 * p2) * y2 + (x2 * R2 + v2 * S2 + t2 * p2) * r2)) + m2 * (V2 * T2 + W2 * U2 + X2 * q2 + (T2 * Y2 + U2 * Z2 + q2 * _2) + (($2 * T2 + aa2 * U2 + D2 * q2) * C2 + (B2 * T2 + A2 * U2 + z2 * q2) * y2 + (x2 * T2 + v2 * U2 + t2 * q2) * r2))) - +g[O2 + 68 >> 2];
                p2 = V2 * R2 + W2 * S2 + X2 * p2 + (R2 * Y2 + S2 * Z2 + p2 * _2) + (($2 * R2 + aa2 * S2 + D2 * p2) * C2 + (B2 * R2 + A2 * S2 + z2 * p2) * y2 + (x2 * R2 + v2 * S2 + t2 * p2) * r2) - l2 * o2;
                q2 = V2 * T2 + W2 * U2 + X2 * q2 + (T2 * Y2 + U2 * Z2 + q2 * _2) + (($2 * T2 + aa2 * U2 + D2 * q2) * C2 + (B2 * T2 + A2 * U2 + z2 * q2) * y2 + (x2 * T2 + v2 * U2 + t2 * q2) * r2) - m2 * o2;
                r2 = V2 * w2 + W2 * u2 + X2 * s2 + (w2 * Y2 + u2 * Z2 + s2 * _2) + (($2 * w2 + aa2 * u2 + D2 * s2) * C2 + (B2 * w2 + A2 * u2 + z2 * s2) * y2 + (x2 * w2 + v2 * u2 + t2 * s2) * r2) - n2 * o2;
                O2 = c[f2 + 12 >> 2] | 0;
                s2 = +g[O2 >> 2];
                t2 = +g[O2 + 4 >> 2];
                u2 = +g[O2 + 8 >> 2];
                v2 = +g[O2 + 16 >> 2];
                w2 = +g[O2 + 20 >> 2];
                x2 = +g[O2 + 24 >> 2];
                y2 = +g[O2 + 32 >> 2];
                z2 = +g[O2 + 36 >> 2];
                A2 = +g[O2 + 40 >> 2];
                B2 = +g[O2 + 48 >> 2];
                C2 = +g[O2 + 52 >> 2];
                D2 = +g[O2 + 56 >> 2];
                O2 = c[b2 + 12 >> 2] | 0;
                P2 = o2 < +g[O2 + 784 >> 2];
                c[h2 + 4 >> 2] = O2;
                if (P2) {
                  ba2 = c[f2 + 12 >> 2] | 0;
                  na2 = l2 * +g[ba2 + 16 >> 2] + m2 * +g[ba2 + 20 >> 2] + n2 * +g[ba2 + 24 >> 2];
                  oa2 = l2 * +g[ba2 + 32 >> 2] + m2 * +g[ba2 + 36 >> 2] + n2 * +g[ba2 + 40 >> 2];
                  g[M2 + 32 >> 2] = +g[ba2 >> 2] * l2 + +g[ba2 + 4 >> 2] * m2 + +g[ba2 + 8 >> 2] * n2;
                  g[M2 + 32 + 4 >> 2] = na2;
                  g[M2 + 32 + 8 >> 2] = oa2;
                  g[M2 + 32 + 12 >> 2] = 0;
                  g[M2 + 16 >> 2] = u2 * r2 + (s2 * p2 + t2 * q2) + B2;
                  g[M2 + 16 + 4 >> 2] = p2 * v2 + q2 * w2 + r2 * x2 + C2;
                  g[M2 + 16 + 8 >> 2] = p2 * y2 + q2 * z2 + r2 * A2 + D2;
                  g[M2 + 16 + 12 >> 2] = 0;
                  Tb[c[(c[h2 >> 2] | 0) + 16 >> 2] & 15](h2, M2 + 32 | 0, M2 + 16 | 0, o2);
                }
                j2 = j2 + 1 | 0;
                f2 = c[b2 + 20 >> 2] | 0;
              } while ((j2 | 0) < (f2 | 0));
            }
          }
          do
            if ((a[b2 + 8 >> 0] | 0 ? c[(c[b2 + 12 >> 2] | 0) + 780 >> 2] | 0 : 0) ? (N2 = c[h2 + 4 >> 2] | 0, c[N2 + 780 >> 2] | 0) : 0) {
              j2 = c[N2 + 772 >> 2] | 0;
              k2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
              f2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
              if ((j2 | 0) == (k2 | 0)) {
                Te(N2, j2 + 4 | 0, f2 + 4 | 0);
                break;
              } else {
                Te(N2, f2 + 4 | 0, k2 + 4 | 0);
                break;
              }
            }
          while (0);
          i = M2;
          return;
        }
        function Lc(d2, e2, f2, h2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          c[d2 + 168 >> 2] = c[d2 + 152 >> 2];
          c[e2 >> 2] = 8960;
          c[e2 + 52 >> 2] = 285;
          a[e2 + 60 >> 0] = 0;
          a[e2 + 80 >> 0] = 1;
          c[e2 + 76 >> 2] = 0;
          c[e2 + 68 >> 2] = 0;
          c[e2 + 72 >> 2] = 0;
          a[e2 + 100 >> 0] = 1;
          c[e2 + 96 >> 2] = 0;
          c[e2 + 88 >> 2] = 0;
          c[e2 + 92 >> 2] = 0;
          a[e2 + 120 >> 0] = 1;
          c[e2 + 116 >> 2] = 0;
          c[e2 + 108 >> 2] = 0;
          c[e2 + 112 >> 2] = 0;
          a[e2 + 140 >> 0] = 1;
          c[e2 + 136 >> 2] = 0;
          c[e2 + 128 >> 2] = 0;
          c[e2 + 132 >> 2] = 0;
          c[e2 + 144 >> 2] = 0;
          a[e2 + 164 >> 0] = 1;
          c[e2 + 160 >> 2] = 0;
          c[e2 + 152 >> 2] = 0;
          c[e2 + 156 >> 2] = 0;
          c[e2 + 168 >> 2] = 0;
          c[e2 + 4 >> 2] = -8388609;
          c[e2 + 8 >> 2] = -8388609;
          c[e2 + 12 >> 2] = -8388609;
          g[e2 + 16 >> 2] = 0;
          c[e2 + 20 >> 2] = 2139095039;
          c[e2 + 24 >> 2] = 2139095039;
          c[e2 + 28 >> 2] = 2139095039;
          g[e2 + 32 >> 2] = 0;
          f2 = c[d2 + 56 >> 2] | 0;
          if (h2) {
            c[e2 + 56 >> 2] = lw(f2 | 0) | 0;
            a[e2 + 4 >> 0] = a[d2 + 4 + 3 >> 0] | 0;
            a[e2 + 5 >> 0] = a[d2 + 4 + 2 >> 0] | 0;
            a[e2 + 6 >> 0] = a[d2 + 4 + 1 >> 0] | 0;
            a[e2 + 7 >> 0] = a[d2 + 4 >> 0] | 0;
            a[e2 + 8 >> 0] = a[d2 + 8 + 3 >> 0] | 0;
            a[e2 + 9 >> 0] = a[d2 + 8 + 2 >> 0] | 0;
            a[e2 + 10 >> 0] = a[d2 + 8 + 1 >> 0] | 0;
            a[e2 + 11 >> 0] = a[d2 + 8 >> 0] | 0;
            a[e2 + 12 >> 0] = a[d2 + 12 + 3 >> 0] | 0;
            a[e2 + 13 >> 0] = a[d2 + 12 + 2 >> 0] | 0;
            a[e2 + 14 >> 0] = a[d2 + 12 + 1 >> 0] | 0;
            a[e2 + 15 >> 0] = a[d2 + 12 >> 0] | 0;
            a[e2 + 16 >> 0] = a[d2 + 16 + 3 >> 0] | 0;
            a[e2 + 17 >> 0] = a[d2 + 16 + 2 >> 0] | 0;
            a[e2 + 18 >> 0] = a[d2 + 16 + 1 >> 0] | 0;
            a[e2 + 19 >> 0] = a[d2 + 16 >> 0] | 0;
            a[e2 + 20 >> 0] = a[d2 + 20 + 3 >> 0] | 0;
            a[e2 + 21 >> 0] = a[d2 + 20 + 2 >> 0] | 0;
            a[e2 + 22 >> 0] = a[d2 + 20 + 1 >> 0] | 0;
            a[e2 + 23 >> 0] = a[d2 + 20 >> 0] | 0;
            a[e2 + 24 >> 0] = a[d2 + 24 + 3 >> 0] | 0;
            a[e2 + 25 >> 0] = a[d2 + 24 + 2 >> 0] | 0;
            a[e2 + 26 >> 0] = a[d2 + 24 + 1 >> 0] | 0;
            a[e2 + 27 >> 0] = a[d2 + 24 >> 0] | 0;
            a[e2 + 28 >> 0] = a[d2 + 28 + 3 >> 0] | 0;
            a[e2 + 29 >> 0] = a[d2 + 28 + 2 >> 0] | 0;
            a[e2 + 30 >> 0] = a[d2 + 28 + 1 >> 0] | 0;
            a[e2 + 31 >> 0] = a[d2 + 28 >> 0] | 0;
            a[e2 + 32 >> 0] = a[d2 + 32 + 3 >> 0] | 0;
            a[e2 + 33 >> 0] = a[d2 + 32 + 2 >> 0] | 0;
            a[e2 + 34 >> 0] = a[d2 + 32 + 1 >> 0] | 0;
            a[e2 + 35 >> 0] = a[d2 + 32 >> 0] | 0;
            a[e2 + 36 >> 0] = a[d2 + 36 + 3 >> 0] | 0;
            a[e2 + 37 >> 0] = a[d2 + 36 + 2 >> 0] | 0;
            a[e2 + 38 >> 0] = a[d2 + 36 + 1 >> 0] | 0;
            a[e2 + 39 >> 0] = a[d2 + 36 >> 0] | 0;
            a[e2 + 40 >> 0] = a[d2 + 40 + 3 >> 0] | 0;
            a[e2 + 41 >> 0] = a[d2 + 40 + 2 >> 0] | 0;
            a[e2 + 42 >> 0] = a[d2 + 40 + 1 >> 0] | 0;
            a[e2 + 43 >> 0] = a[d2 + 40 >> 0] | 0;
            a[e2 + 44 >> 0] = a[d2 + 44 + 3 >> 0] | 0;
            a[e2 + 45 >> 0] = a[d2 + 44 + 2 >> 0] | 0;
            a[e2 + 46 >> 0] = a[d2 + 44 + 1 >> 0] | 0;
            a[e2 + 47 >> 0] = a[d2 + 44 >> 0] | 0;
            a[e2 + 48 >> 0] = a[d2 + 48 + 3 >> 0] | 0;
            a[e2 + 49 >> 0] = a[d2 + 48 + 2 >> 0] | 0;
            a[e2 + 50 >> 0] = a[d2 + 48 + 1 >> 0] | 0;
            a[e2 + 51 >> 0] = a[d2 + 48 >> 0] | 0;
            c[e2 + 144 >> 2] = lw(c[d2 + 144 >> 2] | 0) | 0;
            f2 = lw(c[d2 + 168 >> 2] | 0) | 0;
          } else {
            c[e2 + 56 >> 2] = f2;
            c[e2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[e2 + 4 + 4 >> 2] = c[d2 + 4 + 4 >> 2];
            c[e2 + 4 + 8 >> 2] = c[d2 + 4 + 8 >> 2];
            c[e2 + 4 + 12 >> 2] = c[d2 + 4 + 12 >> 2];
            c[e2 + 20 >> 2] = c[d2 + 20 >> 2];
            c[e2 + 20 + 4 >> 2] = c[d2 + 20 + 4 >> 2];
            c[e2 + 20 + 8 >> 2] = c[d2 + 20 + 8 >> 2];
            c[e2 + 20 + 12 >> 2] = c[d2 + 20 + 12 >> 2];
            c[e2 + 36 >> 2] = c[d2 + 36 >> 2];
            c[e2 + 36 + 4 >> 2] = c[d2 + 36 + 4 >> 2];
            c[e2 + 36 + 8 >> 2] = c[d2 + 36 + 8 >> 2];
            c[e2 + 36 + 12 >> 2] = c[d2 + 36 + 12 >> 2];
            c[e2 + 144 >> 2] = c[d2 + 144 >> 2];
            f2 = c[d2 + 168 >> 2] | 0;
          }
          c[e2 + 168 >> 2] = f2;
          a[e2 + 60 >> 0] = a[d2 + 60 >> 0] | 0;
          k2 = c[d2 + 56 >> 2] | 0;
          if (!(a[d2 + 60 >> 0] | 0)) {
            f2 = c[e2 + 96 >> 2] | 0;
            if (f2 | 0) {
              if (a[e2 + 100 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[e2 + 96 >> 2] = 0;
            }
            a[e2 + 100 >> 0] = 0;
            c[e2 + 96 >> 2] = e2 + 172;
            c[e2 + 88 >> 2] = k2;
            c[e2 + 92 >> 2] = k2;
            if (h2)
              if ((k2 | 0) > 0) {
                i2 = 0;
                j2 = c[d2 + 96 >> 2] | 0;
                f2 = e2 + 172 | 0;
                do {
                  l2 = j2 + (i2 << 6) | 0;
                  n2 = f2 + (i2 << 6) | 0;
                  a[n2 >> 0] = a[l2 + 3 >> 0] | 0;
                  a[n2 + 1 >> 0] = a[l2 + 2 >> 0] | 0;
                  a[n2 + 2 >> 0] = a[l2 + 1 >> 0] | 0;
                  a[n2 + 3 >> 0] = a[l2 >> 0] | 0;
                  n2 = j2 + (i2 << 6) + 4 | 0;
                  l2 = f2 + (i2 << 6) + 4 | 0;
                  a[l2 >> 0] = a[n2 + 3 >> 0] | 0;
                  a[l2 + 1 >> 0] = a[n2 + 2 >> 0] | 0;
                  a[l2 + 2 >> 0] = a[n2 + 1 >> 0] | 0;
                  a[l2 + 3 >> 0] = a[n2 >> 0] | 0;
                  l2 = j2 + (i2 << 6) + 8 | 0;
                  n2 = f2 + (i2 << 6) + 8 | 0;
                  a[n2 >> 0] = a[l2 + 3 >> 0] | 0;
                  a[n2 + 1 >> 0] = a[l2 + 2 >> 0] | 0;
                  a[n2 + 2 >> 0] = a[l2 + 1 >> 0] | 0;
                  a[n2 + 3 >> 0] = a[l2 >> 0] | 0;
                  n2 = j2 + (i2 << 6) + 12 | 0;
                  f2 = f2 + (i2 << 6) + 12 | 0;
                  a[f2 >> 0] = a[n2 + 3 >> 0] | 0;
                  a[f2 + 1 >> 0] = a[n2 + 2 >> 0] | 0;
                  a[f2 + 2 >> 0] = a[n2 + 1 >> 0] | 0;
                  a[f2 + 3 >> 0] = a[n2 >> 0] | 0;
                  f2 = c[d2 + 96 >> 2] | 0;
                  n2 = f2 + (i2 << 6) + 16 | 0;
                  l2 = c[e2 + 96 >> 2] | 0;
                  m2 = l2 + (i2 << 6) + 16 | 0;
                  a[m2 >> 0] = a[n2 + 3 >> 0] | 0;
                  a[m2 + 1 >> 0] = a[n2 + 2 >> 0] | 0;
                  a[m2 + 2 >> 0] = a[n2 + 1 >> 0] | 0;
                  a[m2 + 3 >> 0] = a[n2 >> 0] | 0;
                  m2 = f2 + (i2 << 6) + 20 | 0;
                  n2 = l2 + (i2 << 6) + 20 | 0;
                  a[n2 >> 0] = a[m2 + 3 >> 0] | 0;
                  a[n2 + 1 >> 0] = a[m2 + 2 >> 0] | 0;
                  a[n2 + 2 >> 0] = a[m2 + 1 >> 0] | 0;
                  a[n2 + 3 >> 0] = a[m2 >> 0] | 0;
                  n2 = f2 + (i2 << 6) + 24 | 0;
                  m2 = l2 + (i2 << 6) + 24 | 0;
                  a[m2 >> 0] = a[n2 + 3 >> 0] | 0;
                  a[m2 + 1 >> 0] = a[n2 + 2 >> 0] | 0;
                  a[m2 + 2 >> 0] = a[n2 + 1 >> 0] | 0;
                  a[m2 + 3 >> 0] = a[n2 >> 0] | 0;
                  f2 = f2 + (i2 << 6) + 28 | 0;
                  l2 = l2 + (i2 << 6) + 28 | 0;
                  a[l2 >> 0] = a[f2 + 3 >> 0] | 0;
                  a[l2 + 1 >> 0] = a[f2 + 2 >> 0] | 0;
                  a[l2 + 2 >> 0] = a[f2 + 1 >> 0] | 0;
                  a[l2 + 3 >> 0] = a[f2 >> 0] | 0;
                  j2 = c[d2 + 96 >> 2] | 0;
                  l2 = lw(c[j2 + (i2 << 6) + 32 >> 2] | 0) | 0;
                  f2 = c[e2 + 96 >> 2] | 0;
                  c[f2 + (i2 << 6) + 32 >> 2] = l2;
                  c[f2 + (i2 << 6) + 36 >> 2] = lw(c[j2 + (i2 << 6) + 36 >> 2] | 0) | 0;
                  c[f2 + (i2 << 6) + 40 >> 2] = lw(c[j2 + (i2 << 6) + 40 >> 2] | 0) | 0;
                  i2 = i2 + 1 | 0;
                } while ((i2 | 0) != (k2 | 0));
              } else
                f2 = e2 + 172 | 0;
            else if ((k2 | 0) > 0) {
              i2 = 0;
              f2 = e2 + 172 | 0;
              j2 = c[d2 + 96 >> 2] | 0;
              do {
                f2 = f2 + (i2 << 6) | 0;
                n2 = j2 + (i2 << 6) | 0;
                c[f2 >> 2] = c[n2 >> 2];
                c[f2 + 4 >> 2] = c[n2 + 4 >> 2];
                c[f2 + 8 >> 2] = c[n2 + 8 >> 2];
                c[f2 + 12 >> 2] = c[n2 + 12 >> 2];
                f2 = (c[e2 + 96 >> 2] | 0) + (i2 << 6) + 16 | 0;
                n2 = (c[d2 + 96 >> 2] | 0) + (i2 << 6) + 16 | 0;
                c[f2 >> 2] = c[n2 >> 2];
                c[f2 + 4 >> 2] = c[n2 + 4 >> 2];
                c[f2 + 8 >> 2] = c[n2 + 8 >> 2];
                c[f2 + 12 >> 2] = c[n2 + 12 >> 2];
                j2 = c[d2 + 96 >> 2] | 0;
                f2 = c[e2 + 96 >> 2] | 0;
                c[f2 + (i2 << 6) + 32 >> 2] = c[j2 + (i2 << 6) + 32 >> 2];
                c[f2 + (i2 << 6) + 36 >> 2] = c[j2 + (i2 << 6) + 36 >> 2];
                c[f2 + (i2 << 6) + 40 >> 2] = c[j2 + (i2 << 6) + 40 >> 2];
                i2 = i2 + 1 | 0;
              } while ((i2 | 0) != (k2 | 0));
            } else
              f2 = e2 + 172 | 0;
            if (f2 | 0) {
              if (a[e2 + 100 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[e2 + 96 >> 2] = 0;
            }
            c[e2 + 88 >> 2] = 0;
            c[e2 + 88 + 4 >> 2] = 0;
            c[e2 + 88 + 8 >> 2] = 0;
            a[e2 + 88 + 12 >> 0] = 0;
            f2 = k2 << 6;
          } else {
            f2 = c[e2 + 136 >> 2] | 0;
            if (f2 | 0) {
              if (a[e2 + 140 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[e2 + 136 >> 2] = 0;
            }
            a[e2 + 140 >> 0] = 0;
            c[e2 + 136 >> 2] = e2 + 172;
            c[e2 + 128 >> 2] = k2;
            c[e2 + 132 >> 2] = k2;
            if (h2) {
              if ((k2 | 0) > 0) {
                i2 = c[d2 + 136 >> 2] | 0;
                f2 = 0;
                do {
                  b[e2 + 172 + (f2 << 4) >> 1] = sA(b[i2 + (f2 << 4) >> 1] | 0) | 0;
                  b[e2 + 172 + (f2 << 4) + 2 >> 1] = sA(b[i2 + (f2 << 4) + 2 >> 1] | 0) | 0;
                  b[e2 + 172 + (f2 << 4) + 4 >> 1] = sA(b[i2 + (f2 << 4) + 4 >> 1] | 0) | 0;
                  b[e2 + 172 + (f2 << 4) + 6 >> 1] = sA(b[i2 + (f2 << 4) + 6 >> 1] | 0) | 0;
                  b[e2 + 172 + (f2 << 4) + 8 >> 1] = sA(b[i2 + (f2 << 4) + 8 >> 1] | 0) | 0;
                  b[e2 + 172 + (f2 << 4) + 10 >> 1] = sA(b[i2 + (f2 << 4) + 10 >> 1] | 0) | 0;
                  c[e2 + 172 + (f2 << 4) + 12 >> 2] = lw(c[i2 + (f2 << 4) + 12 >> 2] | 0) | 0;
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (k2 | 0));
              }
            } else if ((k2 | 0) > 0) {
              i2 = c[d2 + 136 >> 2] | 0;
              f2 = 0;
              do {
                b[e2 + 172 + (f2 << 4) >> 1] = b[i2 + (f2 << 4) >> 1] | 0;
                b[e2 + 172 + (f2 << 4) + 2 >> 1] = b[i2 + (f2 << 4) + 2 >> 1] | 0;
                b[e2 + 172 + (f2 << 4) + 4 >> 1] = b[i2 + (f2 << 4) + 4 >> 1] | 0;
                b[e2 + 172 + (f2 << 4) + 6 >> 1] = b[i2 + (f2 << 4) + 6 >> 1] | 0;
                b[e2 + 172 + (f2 << 4) + 8 >> 1] = b[i2 + (f2 << 4) + 8 >> 1] | 0;
                b[e2 + 172 + (f2 << 4) + 10 >> 1] = b[i2 + (f2 << 4) + 10 >> 1] | 0;
                c[e2 + 172 + (f2 << 4) + 12 >> 2] = c[i2 + (f2 << 4) + 12 >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (k2 | 0));
            }
            c[e2 + 128 >> 2] = 0;
            c[e2 + 128 + 4 >> 2] = 0;
            c[e2 + 128 + 8 >> 2] = 0;
            a[e2 + 128 + 12 >> 0] = 0;
            f2 = k2 << 4;
          }
          k2 = e2 + 172 + f2 | 0;
          f2 = c[d2 + 168 >> 2] | 0;
          i2 = c[e2 + 160 >> 2] | 0;
          if (i2 | 0) {
            if (a[e2 + 164 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[i2 + -4 >> 2] | 0);
            }
            c[e2 + 160 >> 2] = 0;
          }
          a[e2 + 164 >> 0] = 0;
          c[e2 + 160 >> 2] = k2;
          c[e2 + 152 >> 2] = f2;
          c[e2 + 156 >> 2] = f2;
          j2 = c[d2 + 168 >> 2] | 0;
          if (h2) {
            if ((j2 | 0) <= 0) {
              c[e2 >> 2] = 0;
              c[e2 + 152 >> 2] = 0;
              c[e2 + 152 + 4 >> 2] = 0;
              c[e2 + 152 + 8 >> 2] = 0;
              a[e2 + 152 + 12 >> 0] = 0;
              return 1;
            }
            i2 = c[d2 + 160 >> 2] | 0;
            f2 = 0;
            do {
              b[k2 + (f2 << 5) >> 1] = sA(b[i2 + (f2 << 5) >> 1] | 0) | 0;
              b[k2 + (f2 << 5) + 2 >> 1] = sA(b[i2 + (f2 << 5) + 2 >> 1] | 0) | 0;
              b[k2 + (f2 << 5) + 4 >> 1] = sA(b[i2 + (f2 << 5) + 4 >> 1] | 0) | 0;
              b[k2 + (f2 << 5) + 6 >> 1] = sA(b[i2 + (f2 << 5) + 6 >> 1] | 0) | 0;
              b[k2 + (f2 << 5) + 8 >> 1] = sA(b[i2 + (f2 << 5) + 8 >> 1] | 0) | 0;
              b[k2 + (f2 << 5) + 10 >> 1] = sA(b[i2 + (f2 << 5) + 10 >> 1] | 0) | 0;
              c[k2 + (f2 << 5) + 12 >> 2] = lw(c[i2 + (f2 << 5) + 12 >> 2] | 0) | 0;
              c[k2 + (f2 << 5) + 16 >> 2] = lw(c[i2 + (f2 << 5) + 16 >> 2] | 0) | 0;
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (j2 | 0));
            c[e2 >> 2] = 0;
            c[e2 + 152 >> 2] = 0;
            c[e2 + 152 + 4 >> 2] = 0;
            c[e2 + 152 + 8 >> 2] = 0;
            a[e2 + 152 + 12 >> 0] = 0;
            return 1;
          } else {
            if ((j2 | 0) <= 0) {
              c[e2 >> 2] = 0;
              c[e2 + 152 >> 2] = 0;
              c[e2 + 152 + 4 >> 2] = 0;
              c[e2 + 152 + 8 >> 2] = 0;
              a[e2 + 152 + 12 >> 0] = 0;
              return 1;
            }
            i2 = c[d2 + 160 >> 2] | 0;
            f2 = 0;
            do {
              b[k2 + (f2 << 5) >> 1] = b[i2 + (f2 << 5) >> 1] | 0;
              b[k2 + (f2 << 5) + 2 >> 1] = b[i2 + (f2 << 5) + 2 >> 1] | 0;
              b[k2 + (f2 << 5) + 4 >> 1] = b[i2 + (f2 << 5) + 4 >> 1] | 0;
              b[k2 + (f2 << 5) + 6 >> 1] = b[i2 + (f2 << 5) + 6 >> 1] | 0;
              b[k2 + (f2 << 5) + 8 >> 1] = b[i2 + (f2 << 5) + 8 >> 1] | 0;
              b[k2 + (f2 << 5) + 10 >> 1] = b[i2 + (f2 << 5) + 10 >> 1] | 0;
              c[k2 + (f2 << 5) + 12 >> 2] = c[i2 + (f2 << 5) + 12 >> 2];
              c[k2 + (f2 << 5) + 16 >> 2] = c[i2 + (f2 << 5) + 16 >> 2];
              c[k2 + (f2 << 5) + 20 >> 2] = 0;
              c[k2 + (f2 << 5) + 24 >> 2] = 0;
              c[k2 + (f2 << 5) + 28 >> 2] = 0;
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) < (c[d2 + 168 >> 2] | 0));
            c[e2 >> 2] = 0;
            c[e2 + 152 >> 2] = 0;
            c[e2 + 152 + 4 >> 2] = 0;
            c[e2 + 152 + 8 >> 2] = 0;
            a[e2 + 152 + 12 >> 0] = 0;
            return 1;
          }
          return 0;
        }
        function Mc(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0;
          H2 = i;
          i = i + 192 | 0;
          d2 = c[b2 + 1152 >> 2] | 0;
          if ((d2 | 0) <= 0) {
            i = H2;
            return;
          }
          G2 = 0;
          do {
            F2 = c[(c[b2 + 1160 >> 2] | 0) + (G2 << 2) >> 2] | 0;
            E2 = c[F2 + 24 >> 2] | 0;
            if (E2) {
              j2 = H2 + 144 + 4 | 0;
              k2 = j2 + 44 | 0;
              do {
                c[j2 >> 2] = 0;
                j2 = j2 + 4 | 0;
              } while ((j2 | 0) < (k2 | 0));
              g[H2 + 144 >> 2] = 9999999747378752e-20;
              g[H2 + 144 + 20 >> 2] = 19999999494757503e-20;
              g[H2 + 144 + 40 >> 2] = 29999998514540493e-20;
              if ((E2 | 0) > 0) {
                j2 = c[F2 + 32 >> 2] | 0;
                k2 = c[F2 + 12 >> 2] | 0;
                d2 = 0;
                f2 = 0;
                h2 = 0;
                e2 = 0;
                do {
                  D2 = c[j2 + (d2 << 2) >> 2] | 0;
                  C2 = +g[k2 + (d2 << 2) >> 2];
                  f2 = f2 + +g[D2 + 8 >> 2] * C2;
                  e2 = e2 + C2 * +g[D2 + 12 >> 2];
                  h2 = h2 + C2 * +g[D2 + 16 >> 2];
                  d2 = d2 + 1 | 0;
                } while ((d2 | 0) != (E2 | 0));
              } else {
                f2 = 0;
                h2 = 0;
                e2 = 0;
              }
              r2 = +g[F2 + 128 >> 2];
              t2 = f2 * r2;
              s2 = e2 * r2;
              r2 = h2 * r2;
              g[F2 + 228 >> 2] = t2;
              g[F2 + 232 >> 2] = s2;
              g[F2 + 236 >> 2] = r2;
              g[F2 + 240 >> 2] = 0;
              if ((E2 | 0) > 0) {
                j2 = c[F2 + 32 >> 2] | 0;
                k2 = c[F2 + 52 >> 2] | 0;
                d2 = 0;
                e2 = 9999999747378752e-20;
                f2 = +g[H2 + 144 + 4 >> 2];
                h2 = +g[H2 + 144 + 8 >> 2];
                l2 = +g[H2 + 144 + 16 >> 2];
                m2 = 19999999494757503e-20;
                n2 = +g[H2 + 144 + 24 >> 2];
                o2 = 0;
                p2 = 0;
                q2 = 29999998514540493e-20;
                do {
                  D2 = c[j2 + (d2 << 2) >> 2] | 0;
                  x2 = +g[D2 + 8 >> 2] - t2;
                  y2 = +g[D2 + 12 >> 2] - s2;
                  B2 = +g[D2 + 16 >> 2] - r2;
                  z2 = +g[k2 + (d2 << 4) >> 2];
                  A2 = +g[k2 + (d2 << 4) + 4 >> 2];
                  C2 = +g[k2 + (d2 << 4) + 8 >> 2];
                  e2 = x2 * z2 + e2;
                  f2 = x2 * A2 + f2;
                  h2 = x2 * C2 + h2;
                  l2 = y2 * z2 + l2;
                  m2 = y2 * A2 + m2;
                  n2 = y2 * C2 + n2;
                  o2 = B2 * z2 + o2;
                  p2 = B2 * A2 + p2;
                  q2 = B2 * C2 + q2;
                  d2 = d2 + 1 | 0;
                } while ((d2 | 0) != (E2 | 0));
                g[H2 + 144 >> 2] = e2;
                g[H2 + 144 + 4 >> 2] = f2;
                g[H2 + 144 + 8 >> 2] = h2;
                g[H2 + 144 + 16 >> 2] = l2;
                g[H2 + 144 + 20 >> 2] = m2;
                g[H2 + 144 + 24 >> 2] = n2;
                g[H2 + 144 + 32 >> 2] = o2;
                g[H2 + 144 + 36 >> 2] = p2;
                g[H2 + 144 + 40 >> 2] = q2;
              }
              if (!(a[22064] | 0)) {
                a[22064] = 1;
                g[5675] = 9999999747378752e-20;
                c[5676] = 16;
              }
              Xc(H2 + 144 | 0, H2 + 96 | 0, H2 + 48 | 0);
              c[F2 + 108 >> 2] = c[F2 + 228 >> 2];
              c[F2 + 108 + 4 >> 2] = c[F2 + 228 + 4 >> 2];
              c[F2 + 108 + 8 >> 2] = c[F2 + 228 + 8 >> 2];
              c[F2 + 108 + 12 >> 2] = c[F2 + 228 + 12 >> 2];
              c[F2 + 60 >> 2] = c[H2 + 96 >> 2];
              c[F2 + 60 + 4 >> 2] = c[H2 + 96 + 4 >> 2];
              c[F2 + 60 + 8 >> 2] = c[H2 + 96 + 8 >> 2];
              c[F2 + 60 + 12 >> 2] = c[H2 + 96 + 12 >> 2];
              c[F2 + 76 >> 2] = c[H2 + 96 + 16 >> 2];
              c[F2 + 76 + 4 >> 2] = c[H2 + 96 + 16 + 4 >> 2];
              c[F2 + 76 + 8 >> 2] = c[H2 + 96 + 16 + 8 >> 2];
              c[F2 + 76 + 12 >> 2] = c[H2 + 96 + 16 + 12 >> 2];
              c[F2 + 92 >> 2] = c[H2 + 96 + 32 >> 2];
              c[F2 + 92 + 4 >> 2] = c[H2 + 96 + 32 + 4 >> 2];
              c[F2 + 92 + 8 >> 2] = c[H2 + 96 + 32 + 8 >> 2];
              c[F2 + 92 + 12 >> 2] = c[H2 + 96 + 32 + 12 >> 2];
              m2 = +g[F2 + 132 >> 2];
              K2 = +g[F2 + 60 >> 2];
              n2 = +g[F2 + 148 >> 2];
              J2 = +g[F2 + 64 >> 2];
              o2 = +g[F2 + 164 >> 2];
              A2 = +g[F2 + 68 >> 2];
              p2 = +g[F2 + 136 >> 2];
              q2 = +g[F2 + 152 >> 2];
              r2 = +g[F2 + 168 >> 2];
              s2 = +g[F2 + 140 >> 2];
              t2 = +g[F2 + 156 >> 2];
              C2 = +g[F2 + 172 >> 2];
              I2 = +g[F2 + 76 >> 2];
              e2 = +g[F2 + 80 >> 2];
              B2 = +g[F2 + 84 >> 2];
              l2 = +g[F2 + 92 >> 2];
              h2 = +g[F2 + 96 >> 2];
              f2 = +g[F2 + 100 >> 2];
              u2 = (m2 * K2 + n2 * J2 + o2 * A2) * K2 + (K2 * p2 + J2 * q2 + A2 * r2) * J2 + (K2 * s2 + J2 * t2 + A2 * C2) * A2;
              v2 = (m2 * K2 + n2 * J2 + o2 * A2) * I2 + (K2 * p2 + J2 * q2 + A2 * r2) * e2 + (K2 * s2 + J2 * t2 + A2 * C2) * B2;
              w2 = (m2 * K2 + n2 * J2 + o2 * A2) * l2 + (K2 * p2 + J2 * q2 + A2 * r2) * h2 + (K2 * s2 + J2 * t2 + A2 * C2) * f2;
              x2 = (m2 * I2 + n2 * e2 + o2 * B2) * K2 + (p2 * I2 + q2 * e2 + r2 * B2) * J2 + (s2 * I2 + t2 * e2 + C2 * B2) * A2;
              y2 = (m2 * I2 + n2 * e2 + o2 * B2) * I2 + (p2 * I2 + q2 * e2 + r2 * B2) * e2 + (s2 * I2 + t2 * e2 + C2 * B2) * B2;
              z2 = (m2 * I2 + n2 * e2 + o2 * B2) * l2 + (p2 * I2 + q2 * e2 + r2 * B2) * h2 + (s2 * I2 + t2 * e2 + C2 * B2) * f2;
              A2 = K2 * (m2 * l2 + n2 * h2 + o2 * f2) + (p2 * l2 + q2 * h2 + r2 * f2) * J2 + (s2 * l2 + t2 * h2 + C2 * f2) * A2;
              B2 = I2 * (m2 * l2 + n2 * h2 + o2 * f2) + (p2 * l2 + q2 * h2 + r2 * f2) * e2 + (s2 * l2 + t2 * h2 + C2 * f2) * B2;
              C2 = (m2 * l2 + n2 * h2 + o2 * f2) * l2 + (p2 * l2 + q2 * h2 + r2 * f2) * h2 + (s2 * l2 + t2 * h2 + C2 * f2) * f2;
              g[F2 + 180 >> 2] = u2;
              g[F2 + 184 >> 2] = v2;
              g[F2 + 188 >> 2] = w2;
              g[F2 + 192 >> 2] = 0;
              g[F2 + 196 >> 2] = x2;
              g[F2 + 200 >> 2] = y2;
              g[F2 + 204 >> 2] = z2;
              g[F2 + 208 >> 2] = 0;
              g[F2 + 212 >> 2] = A2;
              g[F2 + 216 >> 2] = B2;
              g[F2 + 220 >> 2] = C2;
              g[F2 + 224 >> 2] = 0;
              c[F2 + 316 >> 2] = 0;
              c[F2 + 316 + 4 >> 2] = 0;
              c[F2 + 316 + 8 >> 2] = 0;
              c[F2 + 316 + 12 >> 2] = 0;
              c[F2 + 316 + 16 >> 2] = 0;
              c[F2 + 316 + 20 >> 2] = 0;
              c[F2 + 316 + 24 >> 2] = 0;
              c[F2 + 316 + 28 >> 2] = 0;
              if ((E2 | 0) > 0) {
                j2 = c[F2 + 32 >> 2] | 0;
                k2 = c[F2 + 12 >> 2] | 0;
                r2 = +g[F2 + 228 >> 2];
                s2 = +g[F2 + 232 >> 2];
                t2 = +g[F2 + 236 >> 2];
                d2 = 0;
                q2 = 0;
                p2 = 0;
                o2 = 0;
                n2 = 0;
                m2 = 0;
                e2 = 0;
                do {
                  D2 = c[j2 + (d2 << 2) >> 2] | 0;
                  M2 = +g[k2 + (d2 << 2) >> 2];
                  J2 = +g[D2 + 40 >> 2] * M2;
                  L2 = M2 * +g[D2 + 44 >> 2];
                  M2 = M2 * +g[D2 + 48 >> 2];
                  q2 = J2 + q2;
                  g[F2 + 316 >> 2] = q2;
                  p2 = L2 + p2;
                  g[F2 + 320 >> 2] = p2;
                  o2 = M2 + o2;
                  g[F2 + 324 >> 2] = o2;
                  I2 = +g[D2 + 8 >> 2] - r2;
                  K2 = +g[D2 + 12 >> 2] - s2;
                  N2 = +g[D2 + 16 >> 2] - t2;
                  n2 = n2 + (M2 * K2 - L2 * N2);
                  g[F2 + 332 >> 2] = n2;
                  m2 = J2 * N2 - M2 * I2 + m2;
                  g[F2 + 336 >> 2] = m2;
                  e2 = L2 * I2 - J2 * K2 + e2;
                  g[F2 + 340 >> 2] = e2;
                  d2 = d2 + 1 | 0;
                } while ((d2 | 0) != (E2 | 0));
                D2 = F2 + 316 | 0;
                d2 = F2 + 332 | 0;
              } else {
                D2 = F2 + 316 | 0;
                d2 = F2 + 332 | 0;
                q2 = 0;
                p2 = 0;
                o2 = 0;
                n2 = 0;
                m2 = 0;
                e2 = 0;
              }
              M2 = +g[F2 + 128 >> 2];
              N2 = 1 - +g[F2 + 356 >> 2];
              g[F2 + 316 >> 2] = q2 * M2 * N2;
              g[F2 + 320 >> 2] = M2 * p2 * N2;
              g[F2 + 324 >> 2] = M2 * o2 * N2;
              g[F2 + 328 >> 2] = 0;
              N2 = 1 - +g[F2 + 360 >> 2];
              g[d2 >> 2] = (u2 * n2 + v2 * m2 + w2 * e2) * N2;
              g[F2 + 336 >> 2] = (n2 * x2 + m2 * y2 + e2 * z2) * N2;
              g[F2 + 340 >> 2] = N2 * (n2 * A2 + m2 * B2 + e2 * C2);
              g[F2 + 344 >> 2] = 0;
              j2 = F2 + 244 | 0;
              k2 = j2 + 72 | 0;
              do {
                c[j2 >> 2] = 0;
                j2 = j2 + 4 | 0;
              } while ((j2 | 0) < (k2 | 0));
              e2 = +g[F2 + 364 >> 2];
              a:
                do
                  if (e2 > 0 ? (c[F2 + 24 >> 2] | 0) > 0 : 0) {
                    d2 = 0;
                    while (1) {
                      k2 = c[(c[F2 + 32 >> 2] | 0) + (d2 << 2) >> 2] | 0;
                      j2 = c[F2 + 52 >> 2] | 0;
                      I2 = +g[j2 + (d2 << 4) >> 2];
                      J2 = +g[j2 + (d2 << 4) + 4 >> 2];
                      K2 = +g[j2 + (d2 << 4) + 8 >> 2];
                      L2 = +g[k2 + 8 >> 2];
                      M2 = +g[k2 + 12 >> 2];
                      N2 = +g[k2 + 16 >> 2];
                      M2 = M2 + e2 * (I2 * +g[F2 + 76 >> 2] + J2 * +g[F2 + 80 >> 2] + K2 * +g[F2 + 84 >> 2] + +g[F2 + 112 >> 2] - M2);
                      N2 = N2 + e2 * (I2 * l2 + J2 * h2 + K2 * f2 + +g[F2 + 116 >> 2] - N2);
                      g[k2 + 8 >> 2] = L2 + e2 * (I2 * +g[F2 + 60 >> 2] + J2 * +g[F2 + 64 >> 2] + K2 * +g[F2 + 68 >> 2] + +g[F2 + 108 >> 2] - L2);
                      g[k2 + 12 >> 2] = M2;
                      g[k2 + 16 >> 2] = N2;
                      g[k2 + 20 >> 2] = 0;
                      d2 = d2 + 1 | 0;
                      if ((d2 | 0) >= (c[F2 + 24 >> 2] | 0))
                        break a;
                      l2 = +g[F2 + 92 >> 2];
                      h2 = +g[F2 + 96 >> 2];
                      f2 = +g[F2 + 100 >> 2];
                      e2 = +g[F2 + 364 >> 2];
                    }
                  }
                while (0);
              if (a[F2 + 377 >> 0] | 0) {
                j2 = c[F2 + 32 >> 2] | 0;
                k2 = c[j2 >> 2] | 0;
                e2 = +g[k2 + 8 >> 2];
                q2 = +g[k2 + 12 >> 2];
                r2 = +g[k2 + 16 >> 2];
                f2 = +g[k2 + 20 >> 2];
                if ((E2 | 0) > 1) {
                  d2 = 1;
                  m2 = e2;
                  p2 = e2;
                  n2 = f2;
                  o2 = r2;
                  l2 = f2;
                  h2 = q2;
                  f2 = q2;
                  e2 = r2;
                  do {
                    k2 = c[j2 + (d2 << 2) >> 2] | 0;
                    K2 = +g[k2 + 8 >> 2];
                    p2 = K2 < p2 ? K2 : p2;
                    L2 = +g[k2 + 12 >> 2];
                    f2 = L2 < f2 ? L2 : f2;
                    M2 = +g[k2 + 16 >> 2];
                    o2 = M2 < o2 ? M2 : o2;
                    N2 = +g[k2 + 20 >> 2];
                    l2 = N2 < l2 ? N2 : l2;
                    m2 = m2 < K2 ? K2 : m2;
                    h2 = h2 < L2 ? L2 : h2;
                    e2 = e2 < M2 ? M2 : e2;
                    n2 = n2 < N2 ? N2 : n2;
                    d2 = d2 + 1 | 0;
                  } while ((d2 | 0) != (E2 | 0));
                } else {
                  m2 = e2;
                  p2 = e2;
                  n2 = f2;
                  o2 = r2;
                  l2 = f2;
                  h2 = q2;
                  f2 = q2;
                  e2 = r2;
                }
                g[H2 + 16 >> 2] = p2;
                g[H2 + 16 + 4 >> 2] = f2;
                g[H2 + 16 + 8 >> 2] = o2;
                g[H2 + 16 + 12 >> 2] = l2;
                g[H2 + 16 + 16 >> 2] = m2;
                g[H2 + 16 + 20 >> 2] = h2;
                g[H2 + 16 + 24 >> 2] = e2;
                g[H2 + 16 + 28 >> 2] = n2;
                d2 = c[F2 + 348 >> 2] | 0;
                if (!d2) {
                  d2 = c[b2 + 1092 >> 2] | 0;
                  if (!d2) {
                    c[6324] = (c[6324] | 0) + 1;
                    d2 = ic(63) | 0;
                    if (!d2)
                      d2 = 0;
                    else {
                      c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                      d2 = d2 + 4 + 15 & -16;
                    }
                    j2 = d2;
                    k2 = j2 + 44 | 0;
                    do {
                      c[j2 >> 2] = 0;
                      j2 = j2 + 4 | 0;
                    } while ((j2 | 0) < (k2 | 0));
                  } else
                    c[b2 + 1092 >> 2] = 0;
                  c[d2 + 32 >> 2] = 0;
                  c[d2 + 36 >> 2] = F2;
                  c[d2 + 40 >> 2] = 0;
                  c[d2 >> 2] = c[H2 + 16 >> 2];
                  c[d2 + 4 >> 2] = c[H2 + 16 + 4 >> 2];
                  c[d2 + 8 >> 2] = c[H2 + 16 + 8 >> 2];
                  c[d2 + 12 >> 2] = c[H2 + 16 + 12 >> 2];
                  c[d2 + 16 >> 2] = c[H2 + 16 + 16 >> 2];
                  c[d2 + 20 >> 2] = c[H2 + 16 + 20 >> 2];
                  c[d2 + 24 >> 2] = c[H2 + 16 + 24 >> 2];
                  c[d2 + 28 >> 2] = c[H2 + 16 + 28 >> 2];
                  Ze(b2 + 1088 | 0, c[b2 + 1088 >> 2] | 0, d2);
                  c[b2 + 1100 >> 2] = (c[b2 + 1100 >> 2] | 0) + 1;
                  c[F2 + 348 >> 2] = d2;
                } else {
                  L2 = +g[b2 + 492 >> 2];
                  M2 = L2 * +g[F2 + 320 >> 2] * 3;
                  N2 = L2 * +g[F2 + 324 >> 2] * 3;
                  g[H2 >> 2] = +g[D2 >> 2] * L2 * 3;
                  g[H2 + 4 >> 2] = M2;
                  g[H2 + 8 >> 2] = N2;
                  g[H2 + 12 >> 2] = 0;
                  Yg(b2 + 1088 | 0, d2, H2 + 16 | 0, H2, +g[b2 + 504 >> 2]) | 0;
                }
              }
              d2 = c[b2 + 1152 >> 2] | 0;
            }
            G2 = G2 + 1 | 0;
          } while ((G2 | 0) < (d2 | 0));
          i = H2;
          return;
        }
        function Nc(b2, d2, e2, f2, h2, i2, j2, k2, l2, m2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          h2 = c[b2 + 48 >> 2] | 0;
          q2 = c[b2 + 28 >> 2] | 0;
          r2 = c[b2 + 68 >> 2] | 0;
          if (c[l2 + 64 >> 2] & 1 | 0) {
            if ((h2 | 0) > 0) {
              i2 = c[b2 + 136 >> 2] | 0;
              f2 = 0;
              p2 = c[b2 + 200 >> 2] | 0;
              do {
                m2 = i2 + (f2 << 2) | 0;
                o2 = c[m2 >> 2] | 0;
                f2 = f2 + 1 | 0;
                p2 = (S(p2, 1664525) | 0) + 1013904223 | 0;
                if (f2 >>> 0 < 65537) {
                  e2 = p2 >>> 16 ^ p2;
                  if (f2 >>> 0 < 257)
                    if (f2 >>> 0 < 17) {
                      e2 = (e2 >>> 8 ^ e2) >>> 4 ^ (e2 >>> 8 ^ e2);
                      if (f2 >>> 0 < 5)
                        e2 = (f2 >>> 0 < 3 ? (e2 >>> 2 ^ e2) >>> 1 : 0) ^ (e2 >>> 2 ^ e2);
                    } else
                      e2 = e2 >>> 8 ^ e2;
                } else
                  e2 = p2;
                e2 = i2 + (((e2 >>> 0) % (f2 >>> 0) | 0) << 2) | 0;
                c[m2 >> 2] = c[e2 >> 2];
                c[e2 >> 2] = o2;
              } while ((f2 | 0) != (h2 | 0));
              c[b2 + 200 >> 2] = p2;
            }
            if ((c[l2 + 20 >> 2] | 0) > (d2 | 0)) {
              if ((q2 | 0) > 0) {
                h2 = c[b2 + 116 >> 2] | 0;
                f2 = 0;
                o2 = c[b2 + 200 >> 2] | 0;
                do {
                  i2 = h2 + (f2 << 2) | 0;
                  m2 = c[i2 >> 2] | 0;
                  f2 = f2 + 1 | 0;
                  o2 = (S(o2, 1664525) | 0) + 1013904223 | 0;
                  if (f2 >>> 0 < 65537) {
                    e2 = o2 >>> 16 ^ o2;
                    if (f2 >>> 0 < 257)
                      if (f2 >>> 0 < 17) {
                        e2 = (e2 >>> 8 ^ e2) >>> 4 ^ (e2 >>> 8 ^ e2);
                        if (f2 >>> 0 < 5)
                          e2 = (f2 >>> 0 < 3 ? (e2 >>> 2 ^ e2) >>> 1 : 0) ^ (e2 >>> 2 ^ e2);
                      } else
                        e2 = e2 >>> 8 ^ e2;
                  } else
                    e2 = o2;
                  p2 = h2 + (((e2 >>> 0) % (f2 >>> 0) | 0) << 2) | 0;
                  c[i2 >> 2] = c[p2 >> 2];
                  c[p2 >> 2] = m2;
                } while ((f2 | 0) != (q2 | 0));
                c[b2 + 200 >> 2] = o2;
              }
              if ((r2 | 0) > 0) {
                h2 = c[b2 + 156 >> 2] | 0;
                f2 = 0;
                o2 = c[b2 + 200 >> 2] | 0;
                do {
                  i2 = h2 + (f2 << 2) | 0;
                  m2 = c[i2 >> 2] | 0;
                  f2 = f2 + 1 | 0;
                  o2 = (S(o2, 1664525) | 0) + 1013904223 | 0;
                  if (f2 >>> 0 < 65537) {
                    e2 = o2 >>> 16 ^ o2;
                    if (f2 >>> 0 < 257)
                      if (f2 >>> 0 < 17) {
                        e2 = (e2 >>> 8 ^ e2) >>> 4 ^ (e2 >>> 8 ^ e2);
                        if (f2 >>> 0 < 5)
                          e2 = (f2 >>> 0 < 3 ? (e2 >>> 2 ^ e2) >>> 1 : 0) ^ (e2 >>> 2 ^ e2);
                      } else
                        e2 = e2 >>> 8 ^ e2;
                  } else
                    e2 = o2;
                  q2 = h2 + (((e2 >>> 0) % (f2 >>> 0) | 0) << 2) | 0;
                  c[i2 >> 2] = c[q2 >> 2];
                  c[q2 >> 2] = m2;
                } while ((f2 | 0) != (r2 | 0));
                c[b2 + 200 >> 2] = o2;
              }
            }
          }
          e2 = c[b2 + 48 >> 2] | 0;
          if (!(c[l2 + 64 >> 2] & 256)) {
            if ((e2 | 0) > 0) {
              i2 = 0;
              do {
                f2 = c[(c[b2 + 136 >> 2] | 0) + (i2 << 2) >> 2] | 0;
                h2 = c[b2 + 56 >> 2] | 0;
                if ((c[h2 + (f2 * 152 | 0) + 136 >> 2] | 0) > (d2 | 0)) {
                  e2 = c[b2 + 16 >> 2] | 0;
                  +qg(e2 + ((c[h2 + (f2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, e2 + ((c[h2 + (f2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (f2 * 152 | 0) | 0);
                  e2 = c[b2 + 48 >> 2] | 0;
                }
                i2 = i2 + 1 | 0;
              } while ((i2 | 0) < (e2 | 0));
            }
            if ((c[l2 + 20 >> 2] | 0) <= (d2 | 0))
              return 0;
            if ((k2 | 0) > 0) {
              e2 = 0;
              do {
                f2 = j2 + (e2 << 2) | 0;
                h2 = c[f2 >> 2] | 0;
                if (a[h2 + 20 >> 0] | 0) {
                  d2 = Oj(b2, c[h2 + 28 >> 2] | 0, +g[l2 + 12 >> 2]) | 0;
                  t2 = Oj(b2, c[(c[f2 >> 2] | 0) + 32 >> 2] | 0, +g[l2 + 12 >> 2]) | 0;
                  s2 = c[b2 + 16 >> 2] | 0;
                  r2 = c[f2 >> 2] | 0;
                  Tb[c[(c[r2 >> 2] | 0) + 24 >> 2] & 15](r2, s2 + (d2 * 244 | 0) | 0, s2 + (t2 * 244 | 0) | 0, +g[l2 + 12 >> 2]);
                }
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (k2 | 0));
            }
            f2 = c[b2 + 28 >> 2] | 0;
            if ((f2 | 0) > 0) {
              e2 = 0;
              do {
                l2 = c[(c[b2 + 116 >> 2] | 0) + (e2 << 2) >> 2] | 0;
                k2 = c[b2 + 36 >> 2] | 0;
                j2 = c[b2 + 16 >> 2] | 0;
                +Ag(j2 + ((c[k2 + (l2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, j2 + ((c[k2 + (l2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, k2 + (l2 * 152 | 0) | 0);
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (f2 | 0));
            }
            f2 = c[b2 + 68 >> 2] | 0;
            if ((f2 | 0) > 0) {
              e2 = 0;
              do {
                h2 = c[(c[b2 + 156 >> 2] | 0) + (e2 << 2) >> 2] | 0;
                i2 = c[b2 + 76 >> 2] | 0;
                n2 = +g[(c[b2 + 36 >> 2] | 0) + ((c[i2 + (h2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
                if (n2 > 0) {
                  n2 = n2 * +g[i2 + (h2 * 152 | 0) + 104 >> 2];
                  g[i2 + (h2 * 152 | 0) + 120 >> 2] = -n2;
                  g[i2 + (h2 * 152 | 0) + 124 >> 2] = n2;
                  l2 = c[b2 + 16 >> 2] | 0;
                  +qg(l2 + ((c[i2 + (h2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, l2 + ((c[i2 + (h2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, i2 + (h2 * 152 | 0) | 0);
                }
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (f2 | 0));
            }
            f2 = c[b2 + 88 >> 2] | 0;
            if ((f2 | 0) <= 0)
              return 0;
            e2 = 0;
            do {
              h2 = c[b2 + 96 >> 2] | 0;
              n2 = +g[(c[b2 + 36 >> 2] | 0) + ((c[h2 + (e2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
              if (n2 > 0) {
                u2 = +g[h2 + (e2 * 152 | 0) + 104 >> 2];
                n2 = n2 * u2 > u2 ? u2 : n2 * u2;
                g[h2 + (e2 * 152 | 0) + 120 >> 2] = -n2;
                g[h2 + (e2 * 152 | 0) + 124 >> 2] = n2;
                l2 = c[b2 + 16 >> 2] | 0;
                +qg(l2 + ((c[h2 + (e2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, l2 + ((c[h2 + (e2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (e2 * 152 | 0) | 0);
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (f2 | 0));
            return 0;
          }
          if ((e2 | 0) > 0) {
            i2 = 0;
            do {
              f2 = c[(c[b2 + 136 >> 2] | 0) + (i2 << 2) >> 2] | 0;
              h2 = c[b2 + 56 >> 2] | 0;
              if ((c[h2 + (f2 * 152 | 0) + 136 >> 2] | 0) > (d2 | 0)) {
                e2 = c[b2 + 16 >> 2] | 0;
                +qg(e2 + ((c[h2 + (f2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, e2 + ((c[h2 + (f2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (f2 * 152 | 0) | 0);
                e2 = c[b2 + 48 >> 2] | 0;
              }
              i2 = i2 + 1 | 0;
            } while ((i2 | 0) < (e2 | 0));
          }
          if ((c[l2 + 20 >> 2] | 0) <= (d2 | 0))
            return 0;
          if ((k2 | 0) > 0) {
            e2 = 0;
            do {
              f2 = j2 + (e2 << 2) | 0;
              h2 = c[f2 >> 2] | 0;
              if (a[h2 + 20 >> 0] | 0) {
                q2 = Oj(b2, c[h2 + 28 >> 2] | 0, +g[l2 + 12 >> 2]) | 0;
                d2 = Oj(b2, c[(c[f2 >> 2] | 0) + 32 >> 2] | 0, +g[l2 + 12 >> 2]) | 0;
                r2 = c[b2 + 16 >> 2] | 0;
                p2 = c[f2 >> 2] | 0;
                Tb[c[(c[p2 >> 2] | 0) + 24 >> 2] & 15](p2, r2 + (q2 * 244 | 0) | 0, r2 + (d2 * 244 | 0) | 0, +g[l2 + 12 >> 2]);
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (k2 | 0));
          }
          f2 = c[l2 + 64 >> 2] | 0;
          o2 = c[b2 + 28 >> 2] | 0;
          if (f2 & 512 | 0) {
            if ((o2 | 0) <= 0)
              return 0;
            e2 = 0;
            do {
              h2 = c[(c[b2 + 116 >> 2] | 0) + (e2 << 2) >> 2] | 0;
              i2 = c[b2 + 36 >> 2] | 0;
              m2 = c[b2 + 16 >> 2] | 0;
              +Ag(m2 + ((c[i2 + (h2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, m2 + ((c[i2 + (h2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, i2 + (h2 * 152 | 0) | 0);
              n2 = +g[i2 + (h2 * 152 | 0) + 100 >> 2];
              h2 = S(e2, (f2 >>> 4 & 1) + 1 | 0) | 0;
              i2 = c[(c[b2 + 156 >> 2] | 0) + (h2 << 2) >> 2] | 0;
              m2 = c[b2 + 76 >> 2] | 0;
              if (n2 > 0) {
                u2 = n2 * +g[m2 + (i2 * 152 | 0) + 104 >> 2];
                g[m2 + (i2 * 152 | 0) + 120 >> 2] = -u2;
                g[m2 + (i2 * 152 | 0) + 124 >> 2] = u2;
                k2 = c[b2 + 16 >> 2] | 0;
                +qg(k2 + ((c[m2 + (i2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, k2 + ((c[m2 + (i2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, m2 + (i2 * 152 | 0) | 0);
              }
              if (c[l2 + 64 >> 2] & 16 | 0 ? (s2 = c[(c[b2 + 156 >> 2] | 0) + (h2 + 1 << 2) >> 2] | 0, t2 = c[b2 + 76 >> 2] | 0, n2 > 0) : 0) {
                u2 = n2 * +g[t2 + (s2 * 152 | 0) + 104 >> 2];
                g[t2 + (s2 * 152 | 0) + 120 >> 2] = -u2;
                g[t2 + (s2 * 152 | 0) + 124 >> 2] = u2;
                k2 = c[b2 + 16 >> 2] | 0;
                +qg(k2 + ((c[t2 + (s2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, k2 + ((c[t2 + (s2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, t2 + (s2 * 152 | 0) | 0);
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (o2 | 0));
            return 0;
          }
          if ((o2 | 0) > 0) {
            e2 = 0;
            do {
              l2 = c[(c[b2 + 116 >> 2] | 0) + (e2 << 2) >> 2] | 0;
              k2 = c[b2 + 36 >> 2] | 0;
              j2 = c[b2 + 16 >> 2] | 0;
              +Ag(j2 + ((c[k2 + (l2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, j2 + ((c[k2 + (l2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, k2 + (l2 * 152 | 0) | 0);
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (o2 | 0));
          }
          f2 = c[b2 + 68 >> 2] | 0;
          if ((f2 | 0) > 0) {
            e2 = 0;
            do {
              h2 = c[(c[b2 + 156 >> 2] | 0) + (e2 << 2) >> 2] | 0;
              i2 = c[b2 + 76 >> 2] | 0;
              n2 = +g[(c[b2 + 36 >> 2] | 0) + ((c[i2 + (h2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
              if (n2 > 0) {
                u2 = n2 * +g[i2 + (h2 * 152 | 0) + 104 >> 2];
                g[i2 + (h2 * 152 | 0) + 120 >> 2] = -u2;
                g[i2 + (h2 * 152 | 0) + 124 >> 2] = u2;
                l2 = c[b2 + 16 >> 2] | 0;
                +qg(l2 + ((c[i2 + (h2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, l2 + ((c[i2 + (h2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, i2 + (h2 * 152 | 0) | 0);
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (f2 | 0));
          }
          f2 = c[b2 + 88 >> 2] | 0;
          if ((f2 | 0) <= 0)
            return 0;
          e2 = 0;
          do {
            h2 = c[b2 + 96 >> 2] | 0;
            n2 = +g[(c[b2 + 36 >> 2] | 0) + ((c[h2 + (e2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
            if (n2 > 0) {
              u2 = +g[h2 + (e2 * 152 | 0) + 104 >> 2];
              u2 = n2 * u2 > u2 ? u2 : n2 * u2;
              g[h2 + (e2 * 152 | 0) + 120 >> 2] = -u2;
              g[h2 + (e2 * 152 | 0) + 124 >> 2] = u2;
              l2 = c[b2 + 16 >> 2] | 0;
              +qg(l2 + ((c[h2 + (e2 * 152 | 0) + 144 >> 2] | 0) * 244 | 0) | 0, l2 + ((c[h2 + (e2 * 152 | 0) + 148 >> 2] | 0) * 244 | 0) | 0, h2 + (e2 * 152 | 0) | 0);
            }
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) != (f2 | 0));
          return 0;
        }
        function Oc(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          q2 = i;
          i = i + 80 | 0;
          j2 = c[b2 + 28 >> 2] | 0;
          d2 = c[f2 + 64 >> 2] | 0;
          if ((d2 & 4 | 0) != 0 & (j2 | 0) > 0) {
            e2 = c[b2 + 36 >> 2] | 0;
            h2 = c[b2 + 76 >> 2] | 0;
            if (!(d2 & 16)) {
              d2 = 0;
              do {
                m2 = c[e2 + (d2 * 152 | 0) + 132 >> 2] | 0;
                c[m2 + 124 >> 2] = c[e2 + (d2 * 152 | 0) + 100 >> 2];
                c[m2 + 128 >> 2] = c[h2 + ((c[e2 + (d2 * 152 | 0) + 140 >> 2] | 0) * 152 | 0) + 100 >> 2];
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) != (j2 | 0));
            } else {
              d2 = 0;
              do {
                m2 = c[e2 + (d2 * 152 | 0) + 132 >> 2] | 0;
                c[m2 + 124 >> 2] = c[e2 + (d2 * 152 | 0) + 100 >> 2];
                k2 = c[e2 + (d2 * 152 | 0) + 140 >> 2] | 0;
                c[m2 + 128 >> 2] = c[h2 + (k2 * 152 | 0) + 100 >> 2];
                c[m2 + 132 >> 2] = c[h2 + ((k2 + 1 | 0) * 152 | 0) + 100 >> 2];
                d2 = d2 + 1 | 0;
              } while ((d2 | 0) != (j2 | 0));
            }
          }
          h2 = c[b2 + 48 >> 2] | 0;
          if ((h2 | 0) > 0) {
            d2 = 0;
            do {
              j2 = c[b2 + 56 >> 2] | 0;
              k2 = c[j2 + (d2 * 152 | 0) + 132 >> 2] | 0;
              m2 = c[k2 + 44 >> 2] | 0;
              e2 = j2 + (d2 * 152 | 0) + 100 | 0;
              if (m2 | 0) {
                p2 = +g[e2 >> 2];
                s2 = c[k2 + 28 >> 2] | 0;
                o2 = 1 / +g[f2 + 12 >> 2];
                n2 = p2 * +g[j2 + (d2 * 152 | 0) + 20 >> 2] * +g[s2 + 392 >> 2] * o2;
                r2 = p2 * +g[j2 + (d2 * 152 | 0) + 24 >> 2] * +g[s2 + 396 >> 2] * o2;
                g[m2 >> 2] = +g[m2 >> 2] + +g[j2 + (d2 * 152 | 0) + 16 >> 2] * p2 * +g[s2 + 388 >> 2] * o2;
                g[m2 + 4 >> 2] = n2 + +g[m2 + 4 >> 2];
                g[m2 + 8 >> 2] = r2 + +g[m2 + 8 >> 2];
                r2 = +g[e2 >> 2];
                s2 = c[k2 + 32 >> 2] | 0;
                n2 = 1 / +g[f2 + 12 >> 2];
                o2 = r2 * +g[j2 + (d2 * 152 | 0) + 52 >> 2] * +g[s2 + 392 >> 2] * n2;
                p2 = r2 * +g[j2 + (d2 * 152 | 0) + 56 >> 2] * +g[s2 + 396 >> 2] * n2;
                g[m2 + 32 >> 2] = +g[m2 + 32 >> 2] + +g[j2 + (d2 * 152 | 0) + 48 >> 2] * r2 * +g[s2 + 388 >> 2] * n2;
                g[m2 + 36 >> 2] = o2 + +g[m2 + 36 >> 2];
                g[m2 + 40 >> 2] = p2 + +g[m2 + 40 >> 2];
                s2 = c[k2 + 28 >> 2] | 0;
                p2 = +g[e2 >> 2];
                o2 = 1 / +g[f2 + 12 >> 2];
                n2 = +g[j2 + (d2 * 152 | 0) + 4 >> 2] * +g[s2 + 588 >> 2] * p2 * o2;
                r2 = p2 * +g[j2 + (d2 * 152 | 0) + 8 >> 2] * +g[s2 + 592 >> 2] * o2;
                g[m2 + 16 >> 2] = +g[m2 + 16 >> 2] + +g[j2 + (d2 * 152 | 0) >> 2] * +g[s2 + 584 >> 2] * p2 * o2;
                g[m2 + 20 >> 2] = n2 + +g[m2 + 20 >> 2];
                g[m2 + 24 >> 2] = r2 + +g[m2 + 24 >> 2];
                s2 = c[k2 + 32 >> 2] | 0;
                r2 = +g[e2 >> 2];
                n2 = 1 / +g[f2 + 12 >> 2];
                o2 = +g[j2 + (d2 * 152 | 0) + 36 >> 2] * +g[s2 + 588 >> 2] * r2 * n2;
                p2 = r2 * +g[j2 + (d2 * 152 | 0) + 40 >> 2] * +g[s2 + 592 >> 2] * n2;
                g[m2 + 48 >> 2] = +g[m2 + 48 >> 2] + +g[j2 + (d2 * 152 | 0) + 32 >> 2] * +g[s2 + 584 >> 2] * r2 * n2;
                g[m2 + 52 >> 2] = o2 + +g[m2 + 52 >> 2];
                g[m2 + 56 >> 2] = p2 + +g[m2 + 56 >> 2];
              }
              s2 = c[e2 >> 2] | 0;
              c[k2 + 36 >> 2] = s2;
              r2 = +F(+(c[l >> 2] = s2, +g[l >> 2]));
              if (r2 >= +g[k2 + 16 >> 2])
                a[k2 + 20 >> 0] = 0;
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (h2 | 0));
          }
          e2 = c[b2 + 8 >> 2] | 0;
          if ((e2 | 0) > 0) {
            k2 = 0;
            d2 = c[b2 + 16 >> 2] | 0;
            do {
              h2 = d2 + (k2 * 244 | 0) | 0;
              j2 = c[d2 + (k2 * 244 | 0) + 240 >> 2] | 0;
              if (j2) {
                if (!(c[f2 + 44 >> 2] | 0)) {
                  h2 = d2 + (k2 * 244 | 0) + 176 | 0;
                  o2 = +g[d2 + (k2 * 244 | 0) + 64 >> 2] + +g[h2 >> 2];
                  g[h2 >> 2] = o2;
                  h2 = d2 + (k2 * 244 | 0) + 180 | 0;
                  p2 = +g[d2 + (k2 * 244 | 0) + 68 >> 2] + +g[h2 >> 2];
                  g[h2 >> 2] = p2;
                  h2 = d2 + (k2 * 244 | 0) + 184 | 0;
                  n2 = +g[d2 + (k2 * 244 | 0) + 72 >> 2] + +g[h2 >> 2];
                  g[h2 >> 2] = n2;
                  h2 = d2 + (k2 * 244 | 0) + 192 | 0;
                  g[h2 >> 2] = +g[d2 + (k2 * 244 | 0) + 80 >> 2] + +g[h2 >> 2];
                  h2 = d2 + (k2 * 244 | 0) + 196 | 0;
                  g[h2 >> 2] = +g[d2 + (k2 * 244 | 0) + 84 >> 2] + +g[h2 >> 2];
                  h2 = d2 + (k2 * 244 | 0) + 200 | 0;
                  g[h2 >> 2] = +g[d2 + (k2 * 244 | 0) + 88 >> 2] + +g[h2 >> 2];
                  h2 = d2;
                  d2 = j2;
                } else {
                  n2 = +g[f2 + 12 >> 2];
                  o2 = +g[f2 + 52 >> 2];
                  e2 = d2 + (k2 * 244 | 0) + 176 | 0;
                  g[e2 >> 2] = +g[d2 + (k2 * 244 | 0) + 64 >> 2] + +g[e2 >> 2];
                  e2 = d2 + (k2 * 244 | 0) + 180 | 0;
                  g[e2 >> 2] = +g[d2 + (k2 * 244 | 0) + 68 >> 2] + +g[e2 >> 2];
                  e2 = d2 + (k2 * 244 | 0) + 184 | 0;
                  g[e2 >> 2] = +g[d2 + (k2 * 244 | 0) + 72 >> 2] + +g[e2 >> 2];
                  e2 = d2 + (k2 * 244 | 0) + 192 | 0;
                  g[e2 >> 2] = +g[d2 + (k2 * 244 | 0) + 80 >> 2] + +g[e2 >> 2];
                  e2 = d2 + (k2 * 244 | 0) + 196 | 0;
                  g[e2 >> 2] = +g[d2 + (k2 * 244 | 0) + 84 >> 2] + +g[e2 >> 2];
                  e2 = d2 + (k2 * 244 | 0) + 200 | 0;
                  g[e2 >> 2] = +g[d2 + (k2 * 244 | 0) + 88 >> 2] + +g[e2 >> 2];
                  p2 = +g[d2 + (k2 * 244 | 0) + 144 >> 2];
                  e2 = d2 + (k2 * 244 | 0) + 148 | 0;
                  if (((((!(p2 != 0) ? !(+g[e2 >> 2] != 0) : 0) ? !(+g[d2 + (k2 * 244 | 0) + 152 >> 2] != 0) : 0) ? !(+g[d2 + (k2 * 244 | 0) + 160 >> 2] != 0) : 0) ? !(+g[d2 + (k2 * 244 | 0) + 164 >> 2] != 0) : 0) ? !(+g[d2 + (k2 * 244 | 0) + 168 >> 2] != 0) : 0)
                    e2 = j2;
                  else {
                    t2 = +g[d2 + (k2 * 244 | 0) + 164 >> 2] * o2;
                    r2 = +g[d2 + (k2 * 244 | 0) + 168 >> 2] * o2;
                    g[q2 >> 2] = +g[d2 + (k2 * 244 | 0) + 160 >> 2] * o2;
                    g[q2 + 4 >> 2] = t2;
                    g[q2 + 8 >> 2] = r2;
                    g[q2 + 12 >> 2] = 0;
                    Mg(h2, p2, +g[e2 >> 2], +g[d2 + (k2 * 244 | 0) + 152 >> 2], q2, n2, q2 + 16 | 0);
                    c[h2 >> 2] = c[q2 + 16 >> 2];
                    c[h2 + 4 >> 2] = c[q2 + 16 + 4 >> 2];
                    c[h2 + 8 >> 2] = c[q2 + 16 + 8 >> 2];
                    c[h2 + 12 >> 2] = c[q2 + 16 + 12 >> 2];
                    e2 = d2 + (k2 * 244 | 0) + 16 | 0;
                    c[e2 >> 2] = c[q2 + 16 + 16 >> 2];
                    c[e2 + 4 >> 2] = c[q2 + 16 + 16 + 4 >> 2];
                    c[e2 + 8 >> 2] = c[q2 + 16 + 16 + 8 >> 2];
                    c[e2 + 12 >> 2] = c[q2 + 16 + 16 + 12 >> 2];
                    e2 = d2 + (k2 * 244 | 0) + 32 | 0;
                    c[e2 >> 2] = c[q2 + 16 + 32 >> 2];
                    c[e2 + 4 >> 2] = c[q2 + 16 + 32 + 4 >> 2];
                    c[e2 + 8 >> 2] = c[q2 + 16 + 32 + 8 >> 2];
                    c[e2 + 12 >> 2] = c[q2 + 16 + 32 + 12 >> 2];
                    e2 = d2 + (k2 * 244 | 0) + 48 | 0;
                    c[e2 >> 2] = c[q2 + 16 + 48 >> 2];
                    c[e2 + 4 >> 2] = c[q2 + 16 + 48 + 4 >> 2];
                    c[e2 + 8 >> 2] = c[q2 + 16 + 48 + 8 >> 2];
                    c[e2 + 12 >> 2] = c[q2 + 16 + 48 + 12 >> 2];
                    e2 = c[b2 + 16 >> 2] | 0;
                    d2 = e2;
                    e2 = c[e2 + (k2 * 244 | 0) + 240 >> 2] | 0;
                  }
                  h2 = d2;
                  o2 = +g[d2 + (k2 * 244 | 0) + 176 >> 2];
                  p2 = +g[d2 + (k2 * 244 | 0) + 180 >> 2];
                  n2 = +g[d2 + (k2 * 244 | 0) + 184 >> 2];
                  d2 = e2;
                }
                t2 = o2 + +g[h2 + (k2 * 244 | 0) + 208 >> 2];
                r2 = p2 + +g[h2 + (k2 * 244 | 0) + 212 >> 2];
                p2 = n2 + +g[h2 + (k2 * 244 | 0) + 216 >> 2];
                m2 = d2 + 300 | 0;
                c[m2 >> 2] = (c[m2 >> 2] | 0) + 1;
                g[d2 + 352 >> 2] = t2;
                g[d2 + 356 >> 2] = r2;
                g[d2 + 360 >> 2] = p2;
                g[d2 + 364 >> 2] = 0;
                m2 = c[b2 + 16 >> 2] | 0;
                s2 = c[m2 + (k2 * 244 | 0) + 240 >> 2] | 0;
                p2 = +g[m2 + (k2 * 244 | 0) + 192 >> 2] + +g[m2 + (k2 * 244 | 0) + 224 >> 2];
                r2 = +g[m2 + (k2 * 244 | 0) + 196 >> 2] + +g[m2 + (k2 * 244 | 0) + 228 >> 2];
                t2 = +g[m2 + (k2 * 244 | 0) + 200 >> 2] + +g[m2 + (k2 * 244 | 0) + 232 >> 2];
                c[s2 + 300 >> 2] = (c[s2 + 300 >> 2] | 0) + 1;
                g[s2 + 368 >> 2] = p2;
                g[s2 + 372 >> 2] = r2;
                g[s2 + 376 >> 2] = t2;
                g[s2 + 380 >> 2] = 0;
                if (c[f2 + 44 >> 2] | 0) {
                  m2 = c[b2 + 16 >> 2] | 0;
                  s2 = c[m2 + (k2 * 244 | 0) + 240 >> 2] | 0;
                  j2 = m2 + (k2 * 244 | 0) | 0;
                  c[s2 + 300 >> 2] = (c[s2 + 300 >> 2] | 0) + 1;
                  c[s2 + 4 >> 2] = c[j2 >> 2];
                  c[s2 + 4 + 4 >> 2] = c[j2 + 4 >> 2];
                  c[s2 + 4 + 8 >> 2] = c[j2 + 8 >> 2];
                  c[s2 + 4 + 12 >> 2] = c[j2 + 12 >> 2];
                  j2 = m2 + (k2 * 244 | 0) + 16 | 0;
                  c[s2 + 20 >> 2] = c[j2 >> 2];
                  c[s2 + 20 + 4 >> 2] = c[j2 + 4 >> 2];
                  c[s2 + 20 + 8 >> 2] = c[j2 + 8 >> 2];
                  c[s2 + 20 + 12 >> 2] = c[j2 + 12 >> 2];
                  j2 = m2 + (k2 * 244 | 0) + 32 | 0;
                  c[s2 + 36 >> 2] = c[j2 >> 2];
                  c[s2 + 36 + 4 >> 2] = c[j2 + 4 >> 2];
                  c[s2 + 36 + 8 >> 2] = c[j2 + 8 >> 2];
                  c[s2 + 36 + 12 >> 2] = c[j2 + 12 >> 2];
                  m2 = m2 + (k2 * 244 | 0) + 48 | 0;
                  c[s2 + 52 >> 2] = c[m2 >> 2];
                  c[s2 + 52 + 4 >> 2] = c[m2 + 4 >> 2];
                  c[s2 + 52 + 8 >> 2] = c[m2 + 8 >> 2];
                  c[s2 + 52 + 12 >> 2] = c[m2 + 12 >> 2];
                }
                d2 = c[b2 + 16 >> 2] | 0;
                c[(c[d2 + (k2 * 244 | 0) + 240 >> 2] | 0) + 212 >> 2] = -1;
                e2 = c[b2 + 8 >> 2] | 0;
              }
              k2 = k2 + 1 | 0;
            } while ((k2 | 0) < (e2 | 0));
          }
          if ((c[b2 + 28 >> 2] | 0) < 0 ? (c[b2 + 32 >> 2] | 0) < 0 : 0) {
            d2 = c[b2 + 36 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 40 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 36 >> 2] = 0;
            }
            a[b2 + 40 >> 0] = 1;
            c[b2 + 36 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
          }
          c[b2 + 28 >> 2] = 0;
          if ((c[b2 + 48 >> 2] | 0) < 0 ? (c[b2 + 52 >> 2] | 0) < 0 : 0) {
            d2 = c[b2 + 56 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 60 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 56 >> 2] = 0;
            }
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = 0;
            c[b2 + 52 >> 2] = 0;
          }
          c[b2 + 48 >> 2] = 0;
          if ((c[b2 + 68 >> 2] | 0) < 0 ? (c[b2 + 72 >> 2] | 0) < 0 : 0) {
            d2 = c[b2 + 76 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 80 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 76 >> 2] = 0;
            }
            a[b2 + 80 >> 0] = 1;
            c[b2 + 76 >> 2] = 0;
            c[b2 + 72 >> 2] = 0;
          }
          c[b2 + 68 >> 2] = 0;
          if ((c[b2 + 88 >> 2] | 0) < 0 ? (c[b2 + 92 >> 2] | 0) < 0 : 0) {
            d2 = c[b2 + 96 >> 2] | 0;
            if (d2 | 0) {
              if (a[b2 + 100 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[d2 + -4 >> 2] | 0);
              }
              c[b2 + 96 >> 2] = 0;
            }
            a[b2 + 100 >> 0] = 1;
            c[b2 + 96 >> 2] = 0;
            c[b2 + 92 >> 2] = 0;
          }
          c[b2 + 88 >> 2] = 0;
          if ((c[b2 + 8 >> 2] | 0) >= 0) {
            c[b2 + 8 >> 2] = 0;
            i = q2;
            return 0;
          }
          if ((c[b2 + 12 >> 2] | 0) >= 0) {
            c[b2 + 8 >> 2] = 0;
            i = q2;
            return 0;
          }
          d2 = c[b2 + 16 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 20 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
          }
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          i = q2;
          return 0;
        }
        function Pc(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0;
          u2 = i;
          i = i + 672 | 0;
          c[u2 + 448 + 8 >> 2] = 0;
          c[u2 + 448 + 12 >> 2] = -1;
          c[u2 + 448 + 16 >> 2] = 1065353216;
          c[u2 + 448 + 20 >> 2] = 1065353216;
          c[u2 + 448 + 24 >> 2] = 1065353216;
          g[u2 + 448 + 28 >> 2] = 0;
          c[u2 + 448 >> 2] = 8368;
          c[u2 + 448 + 4 >> 2] = 8;
          g[u2 + 448 + 32 >> 2] = 0;
          g[u2 + 448 + 48 >> 2] = 0;
          g[u2 + 384 >> 2] = 1;
          m2 = u2 + 384 + 4 | 0;
          c[m2 >> 2] = 0;
          c[m2 + 4 >> 2] = 0;
          c[m2 + 8 >> 2] = 0;
          c[m2 + 12 >> 2] = 0;
          g[u2 + 384 + 20 >> 2] = 1;
          n2 = u2 + 384 + 24 | 0;
          c[n2 >> 2] = 0;
          c[n2 + 4 >> 2] = 0;
          c[n2 + 8 >> 2] = 0;
          c[n2 + 12 >> 2] = 0;
          g[u2 + 384 + 40 >> 2] = 1;
          g[u2 + 384 + 44 >> 2] = 0;
          c[u2 + 384 + 48 >> 2] = c[a2 >> 2];
          c[u2 + 384 + 48 + 4 >> 2] = c[a2 + 4 >> 2];
          c[u2 + 384 + 48 + 8 >> 2] = c[a2 + 8 >> 2];
          c[u2 + 384 + 48 + 12 >> 2] = c[a2 + 12 >> 2];
          a2 = e2;
          l2 = a2 + 36 | 0;
          do {
            c[a2 >> 2] = 0;
            a2 = a2 + 4 | 0;
          } while ((a2 | 0) < (l2 | 0));
          c[u2 + 504 >> 2] = b2;
          c[u2 + 504 + 4 >> 2] = u2 + 448;
          I2 = +g[d2 >> 2];
          H2 = +g[d2 + 16 >> 2];
          F2 = +g[d2 + 32 >> 2];
          E2 = +g[d2 + 4 >> 2];
          D2 = +g[d2 + 20 >> 2];
          C2 = +g[d2 + 36 >> 2];
          s2 = +g[d2 + 8 >> 2];
          q2 = +g[d2 + 24 >> 2];
          o2 = +g[d2 + 40 >> 2];
          g[u2 + 504 + 8 >> 2] = I2 + H2 * 0 + F2 * 0;
          g[u2 + 504 + 12 >> 2] = E2 + D2 * 0 + C2 * 0;
          g[u2 + 504 + 16 >> 2] = s2 + q2 * 0 + o2 * 0;
          g[u2 + 504 + 20 >> 2] = 0;
          g[u2 + 504 + 24 >> 2] = I2 * 0 + H2 + F2 * 0;
          g[u2 + 504 + 28 >> 2] = E2 * 0 + D2 + C2 * 0;
          g[u2 + 504 + 32 >> 2] = s2 * 0 + q2 + o2 * 0;
          g[u2 + 504 + 36 >> 2] = 0;
          g[u2 + 504 + 40 >> 2] = I2 * 0 + H2 * 0 + F2;
          g[u2 + 504 + 44 >> 2] = E2 * 0 + D2 * 0 + C2;
          g[u2 + 504 + 48 >> 2] = s2 * 0 + q2 * 0 + o2;
          g[u2 + 504 + 52 >> 2] = 0;
          o2 = +g[u2 + 384 + 48 >> 2] - +g[d2 + 48 >> 2];
          q2 = +g[u2 + 384 + 52 >> 2] - +g[d2 + 52 >> 2];
          s2 = +g[u2 + 384 + 56 >> 2] - +g[d2 + 56 >> 2];
          B2 = +g[u2 + 384 >> 2];
          A2 = +g[u2 + 384 + 16 >> 2];
          z2 = +g[u2 + 384 + 32 >> 2];
          y2 = +g[m2 >> 2];
          x2 = +g[u2 + 384 + 20 >> 2];
          w2 = +g[u2 + 384 + 36 >> 2];
          v2 = +g[u2 + 384 + 8 >> 2];
          f2 = +g[n2 >> 2];
          h2 = +g[u2 + 384 + 40 >> 2];
          p2 = +g[d2 + 8 >> 2];
          r2 = +g[d2 + 24 >> 2];
          t2 = +g[d2 + 40 >> 2];
          j2 = o2 * +g[d2 >> 2] + q2 * +g[d2 + 16 >> 2] + s2 * +g[d2 + 32 >> 2];
          k2 = o2 * +g[d2 + 4 >> 2] + q2 * +g[d2 + 20 >> 2] + s2 * +g[d2 + 36 >> 2];
          g[u2 + 504 + 56 >> 2] = I2 * B2 + H2 * A2 + F2 * z2;
          g[u2 + 504 + 60 >> 2] = I2 * y2 + H2 * x2 + F2 * w2;
          g[u2 + 504 + 64 >> 2] = I2 * v2 + H2 * f2 + F2 * h2;
          g[u2 + 504 + 68 >> 2] = 0;
          g[u2 + 504 + 72 >> 2] = B2 * E2 + A2 * D2 + z2 * C2;
          g[u2 + 504 + 76 >> 2] = y2 * E2 + x2 * D2 + w2 * C2;
          g[u2 + 504 + 80 >> 2] = v2 * E2 + f2 * D2 + h2 * C2;
          g[u2 + 504 + 84 >> 2] = 0;
          g[u2 + 504 + 88 >> 2] = B2 * p2 + A2 * r2 + z2 * t2;
          g[u2 + 504 + 92 >> 2] = y2 * p2 + x2 * r2 + w2 * t2;
          g[u2 + 504 + 96 >> 2] = v2 * p2 + f2 * r2 + h2 * t2;
          g[u2 + 504 + 100 >> 2] = 0;
          g[u2 + 504 + 104 >> 2] = j2;
          g[u2 + 504 + 108 >> 2] = k2;
          g[u2 + 504 + 112 >> 2] = o2 * p2 + q2 * r2 + s2 * t2;
          g[u2 + 504 + 116 >> 2] = 0;
          c[u2 + 504 + 120 >> 2] = 80;
          c[u2 + 504 + 124 >> 2] = 0;
          c[u2 + 364 >> 2] = 0;
          c[u2 + 128 >> 2] = 0;
          c[u2 + 128 + 4 >> 2] = 0;
          c[u2 + 128 + 8 >> 2] = 0;
          c[u2 + 128 + 12 >> 2] = 0;
          c[u2 + 376 >> 2] = 2;
          c[u2 + 368 >> 2] = 0;
          g[u2 + 144 >> 2] = 0;
          c[u2 + 648 >> 2] = 1065353216;
          c[u2 + 648 + 4 >> 2] = 1065353216;
          c[u2 + 648 + 8 >> 2] = 1065353216;
          g[u2 + 648 + 12 >> 2] = 0;
          switch (Ec(u2, u2 + 504 | 0, u2 + 648 | 0) | 0) {
            case 0: {
              a2 = c[u2 + 372 >> 2] | 0;
              if (!(c[a2 + 32 >> 2] | 0)) {
                j2 = 0;
                k2 = 0;
                r2 = 0;
                h2 = 0;
                q2 = 0;
                f2 = 0;
              } else {
                n2 = 0;
                j2 = 0;
                k2 = 0;
                o2 = 0;
                h2 = 0;
                q2 = 0;
                f2 = 0;
                do {
                  t2 = +g[a2 + 16 + (n2 << 2) >> 2];
                  l2 = c[u2 + 504 + 120 >> 2] | 0;
                  J2 = c[u2 + 504 + 124 >> 2] | 0;
                  m2 = (c[u2 + 504 >> 2] | 0) + (J2 >> 1) | 0;
                  if (J2 & 1)
                    l2 = c[(c[m2 >> 2] | 0) + l2 >> 2] | 0;
                  Ub[l2 & 127](u2 + 648 | 0, m2, c[a2 + (n2 << 2) >> 2] | 0);
                  k2 = k2 + t2 * +g[u2 + 648 >> 2];
                  f2 = f2 + t2 * +g[u2 + 648 + 4 >> 2];
                  h2 = h2 + t2 * +g[u2 + 648 + 8 >> 2];
                  a2 = c[(c[u2 + 372 >> 2] | 0) + (n2 << 2) >> 2] | 0;
                  p2 = -+g[a2 >> 2];
                  r2 = -+g[a2 + 4 >> 2];
                  s2 = -+g[a2 + 8 >> 2];
                  a2 = c[u2 + 504 + 120 >> 2] | 0;
                  J2 = c[u2 + 504 + 124 >> 2] | 0;
                  l2 = (c[u2 + 504 + 4 >> 2] | 0) + (J2 >> 1) | 0;
                  if (J2 & 1)
                    a2 = c[(c[l2 >> 2] | 0) + a2 >> 2] | 0;
                  H2 = +g[u2 + 504 + 24 >> 2] * p2 + +g[u2 + 504 + 28 >> 2] * r2 + +g[u2 + 504 + 32 >> 2] * s2;
                  F2 = +g[u2 + 504 + 40 >> 2] * p2 + +g[u2 + 504 + 44 >> 2] * r2 + +g[u2 + 504 + 48 >> 2] * s2;
                  g[u2 + 632 >> 2] = +g[u2 + 504 + 8 >> 2] * p2 + +g[u2 + 504 + 12 >> 2] * r2 + +g[u2 + 504 + 16 >> 2] * s2;
                  g[u2 + 632 + 4 >> 2] = H2;
                  g[u2 + 632 + 8 >> 2] = F2;
                  g[u2 + 632 + 12 >> 2] = 0;
                  Ub[a2 & 127](u2 + 648 | 0, l2, u2 + 632 | 0);
                  F2 = +g[u2 + 648 >> 2];
                  H2 = +g[u2 + 648 + 4 >> 2];
                  I2 = +g[u2 + 648 + 8 >> 2];
                  j2 = j2 + t2 * (F2 * +g[u2 + 504 + 56 >> 2] + H2 * +g[u2 + 504 + 60 >> 2] + I2 * +g[u2 + 504 + 64 >> 2] + +g[u2 + 504 + 104 >> 2]);
                  q2 = q2 + t2 * (F2 * +g[u2 + 504 + 72 >> 2] + H2 * +g[u2 + 504 + 76 >> 2] + I2 * +g[u2 + 504 + 80 >> 2] + +g[u2 + 504 + 108 >> 2]);
                  o2 = o2 + t2 * (F2 * +g[u2 + 504 + 88 >> 2] + H2 * +g[u2 + 504 + 92 >> 2] + I2 * +g[u2 + 504 + 96 >> 2] + +g[u2 + 504 + 112 >> 2]);
                  n2 = n2 + 1 | 0;
                  a2 = c[u2 + 372 >> 2] | 0;
                } while (n2 >>> 0 < (c[a2 + 32 >> 2] | 0) >>> 0);
                r2 = o2;
              }
              s2 = k2 * +g[d2 >> 2] + f2 * +g[d2 + 4 >> 2] + h2 * +g[d2 + 8 >> 2] + +g[d2 + 48 >> 2];
              t2 = k2 * +g[d2 + 16 >> 2] + f2 * +g[d2 + 20 >> 2] + h2 * +g[d2 + 24 >> 2] + +g[d2 + 52 >> 2];
              k2 = k2 * +g[d2 + 32 >> 2] + f2 * +g[d2 + 36 >> 2] + h2 * +g[d2 + 40 >> 2] + +g[d2 + 56 >> 2];
              g[e2 + 4 >> 2] = s2;
              g[e2 + 8 >> 2] = t2;
              g[e2 + 12 >> 2] = k2;
              g[e2 + 16 >> 2] = 0;
              o2 = j2 * +g[d2 >> 2] + q2 * +g[d2 + 4 >> 2] + r2 * +g[d2 + 8 >> 2] + +g[d2 + 48 >> 2];
              p2 = j2 * +g[d2 + 16 >> 2] + q2 * +g[d2 + 20 >> 2] + r2 * +g[d2 + 24 >> 2] + +g[d2 + 52 >> 2];
              j2 = j2 * +g[d2 + 32 >> 2] + q2 * +g[d2 + 36 >> 2] + r2 * +g[d2 + 40 >> 2] + +g[d2 + 56 >> 2];
              g[e2 + 20 >> 2] = o2;
              g[e2 + 24 >> 2] = p2;
              g[e2 + 28 >> 2] = j2;
              g[e2 + 32 >> 2] = 0;
              switch (c[b2 + 4 >> 2] | 0) {
                case 8: {
                  f2 = +g[b2 + 32 >> 2] * +g[b2 + 16 >> 2];
                  break;
                }
                case 0: {
                  f2 = +g[b2 + 48 >> 2];
                  break;
                }
                case 1: {
                  f2 = +g[b2 + 48 >> 2];
                  break;
                }
                case 13: {
                  f2 = +g[b2 + 48 >> 2];
                  break;
                }
                case 11: {
                  f2 = +g[b2 + 48 >> 2];
                  break;
                }
                case 10: {
                  f2 = +g[b2 + 48 >> 2];
                  break;
                }
                case 4:
                case 5: {
                  f2 = +g[b2 + 48 >> 2];
                  break;
                }
                default:
                  f2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
              }
              switch (c[u2 + 448 + 4 >> 2] | 0) {
                case 8: {
                  h2 = +g[u2 + 448 + 32 >> 2] * +g[u2 + 448 + 16 >> 2];
                  break;
                }
                case 0: {
                  h2 = +g[u2 + 448 + 48 >> 2];
                  break;
                }
                case 1: {
                  h2 = +g[u2 + 448 + 48 >> 2];
                  break;
                }
                case 13: {
                  h2 = +g[u2 + 448 + 48 >> 2];
                  break;
                }
                case 11: {
                  h2 = +g[u2 + 448 + 48 >> 2];
                  break;
                }
                case 10: {
                  h2 = +g[u2 + 448 + 48 >> 2];
                  break;
                }
                case 4:
                case 5: {
                  h2 = +g[u2 + 448 + 48 >> 2];
                  break;
                }
                default:
                  h2 = +Cb[c[(c[u2 + 448 >> 2] | 0) + 48 >> 2] & 15](u2 + 448 | 0);
              }
              I2 = f2 + h2;
              H2 = +G(+((o2 - s2) * (o2 - s2) + (p2 - t2) * (p2 - t2) + (j2 - k2) * (j2 - k2)));
              g[e2 + 36 >> 2] = (o2 - s2) * (1 / H2);
              g[e2 + 40 >> 2] = (p2 - t2) * (1 / H2);
              g[e2 + 44 >> 2] = (j2 - k2) * (1 / H2);
              g[e2 + 48 >> 2] = 0;
              g[e2 + 4 >> 2] = I2 * (o2 - s2) * (1 / H2) + +g[e2 + 4 >> 2];
              g[e2 + 8 >> 2] = I2 * (p2 - t2) * (1 / H2) + +g[e2 + 8 >> 2];
              g[e2 + 12 >> 2] = I2 * (j2 - k2) * (1 / H2) + +g[e2 + 12 >> 2];
              I2 = H2 - I2;
              i = u2;
              return +I2;
            }
            case 1: {
              if (!(Bc(b2, d2, u2 + 448 | 0, u2 + 384 | 0, u2 + 128 | 0, e2, 1) | 0)) {
                I2 = 34028234663852886e22;
                i = u2;
                return +I2;
              }
              f2 = +g[e2 + 4 >> 2] - +g[e2 + 20 >> 2];
              h2 = +g[e2 + 8 >> 2] - +g[e2 + 24 >> 2];
              j2 = +g[e2 + 12 >> 2] - +g[e2 + 28 >> 2];
              k2 = +G(+(f2 * f2 + h2 * h2 + j2 * j2));
              if (k2 >= 11920928955078125e-23) {
                g[e2 + 36 >> 2] = f2 * (1 / k2);
                g[e2 + 40 >> 2] = h2 * (1 / k2);
                g[e2 + 44 >> 2] = j2 * (1 / k2);
                g[e2 + 48 >> 2] = 0;
              }
              I2 = -k2;
              i = u2;
              return +I2;
            }
            default: {
              I2 = 34028234663852886e22;
              i = u2;
              return +I2;
            }
          }
          return 0;
        }
        function Qc(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
          o2 = i;
          i = i + 48 | 0;
          d2 = c[a2 + 24 >> 2] | 0;
          if ((d2 | 0) <= 0) {
            i = o2;
            return;
          }
          n2 = 0;
          a:
            while (1) {
              m2 = c[(c[a2 + 32 >> 2] | 0) + (n2 << 2) >> 2] | 0;
              switch (c[m2 + 216 >> 2] | 0) {
                case 2:
                case 5:
                  break;
                default: {
                  $d(m2, 0);
                  e2 = c[m2 + 772 >> 2] | 0;
                  if ((e2 | 0) > 0) {
                    d2 = 0;
                    do {
                      l2 = c[m2 + 780 >> 2] | 0;
                      j2 = c[l2 + (d2 * 52 | 0) + 12 >> 2] | 0;
                      k2 = c[l2 + (d2 * 52 | 0) + 8 >> 2] | 0;
                      y2 = +g[j2 + 24 >> 2] - +g[k2 + 24 >> 2];
                      x2 = +g[j2 + 28 >> 2] - +g[k2 + 28 >> 2];
                      b2 = +g[j2 + 32 >> 2] - +g[k2 + 32 >> 2];
                      g[l2 + (d2 * 52 | 0) + 36 >> 2] = y2;
                      g[l2 + (d2 * 52 | 0) + 40 >> 2] = x2;
                      g[l2 + (d2 * 52 | 0) + 44 >> 2] = b2;
                      g[l2 + (d2 * 52 | 0) + 48 >> 2] = 0;
                      g[l2 + (d2 * 52 | 0) + 32 >> 2] = 1 / (+g[l2 + (d2 * 52 | 0) + 24 >> 2] * (y2 * y2 + x2 * x2 + b2 * b2));
                      d2 = d2 + 1 | 0;
                    } while ((d2 | 0) != (e2 | 0));
                  }
                  f2 = c[m2 + 832 >> 2] | 0;
                  if ((f2 | 0) > 0) {
                    d2 = 0;
                    b2 = +g[m2 + 492 >> 2];
                    do {
                      l2 = c[m2 + 840 >> 2] | 0;
                      e2 = l2 + (d2 * 96 | 0) + 20 | 0;
                      h2 = c[e2 >> 2] | 0;
                      B2 = +g[l2 + (d2 * 96 | 0) + 4 >> 2];
                      A2 = +g[l2 + (d2 * 96 | 0) + 8 >> 2];
                      y2 = +g[l2 + (d2 * 96 | 0) + 12 >> 2];
                      z2 = +g[h2 + 4 >> 2] * B2 + +g[h2 + 8 >> 2] * A2 + +g[h2 + 12 >> 2] * y2;
                      x2 = B2 * +g[h2 + 20 >> 2] + A2 * +g[h2 + 24 >> 2] + y2 * +g[h2 + 28 >> 2];
                      y2 = B2 * +g[h2 + 36 >> 2] + A2 * +g[h2 + 40 >> 2] + y2 * +g[h2 + 44 >> 2];
                      j2 = l2 + (d2 * 96 | 0) + 28 | 0;
                      k2 = l2 + (d2 * 96 | 0) | 0;
                      Df(o2, b2, +g[(c[k2 >> 2] | 0) + 88 >> 2], +g[h2 + 384 >> 2], h2 + 304 | 0, z2, x2, y2);
                      c[j2 >> 2] = c[o2 >> 2];
                      c[j2 + 4 >> 2] = c[o2 + 4 >> 2];
                      c[j2 + 8 >> 2] = c[o2 + 8 >> 2];
                      c[j2 + 12 >> 2] = c[o2 + 12 >> 2];
                      j2 = l2 + (d2 * 96 | 0) + 44 | 0;
                      c[j2 >> 2] = c[o2 + 16 >> 2];
                      c[j2 + 4 >> 2] = c[o2 + 16 + 4 >> 2];
                      c[j2 + 8 >> 2] = c[o2 + 16 + 8 >> 2];
                      c[j2 + 12 >> 2] = c[o2 + 16 + 12 >> 2];
                      j2 = l2 + (d2 * 96 | 0) + 60 | 0;
                      c[j2 >> 2] = c[o2 + 32 >> 2];
                      c[j2 + 4 >> 2] = c[o2 + 32 + 4 >> 2];
                      c[j2 + 8 >> 2] = c[o2 + 32 + 8 >> 2];
                      c[j2 + 12 >> 2] = c[o2 + 32 + 12 >> 2];
                      g[l2 + (d2 * 96 | 0) + 76 >> 2] = z2;
                      g[l2 + (d2 * 96 | 0) + 80 >> 2] = x2;
                      g[l2 + (d2 * 96 | 0) + 84 >> 2] = y2;
                      g[l2 + (d2 * 96 | 0) + 88 >> 2] = 0;
                      b2 = +g[m2 + 492 >> 2];
                      g[l2 + (d2 * 96 | 0) + 92 >> 2] = b2 * +g[(c[k2 >> 2] | 0) + 88 >> 2];
                      e2 = c[e2 >> 2] | 0;
                      if (!(c[e2 + 204 >> 2] & 3)) {
                        if ((c[e2 + 216 >> 2] & -2 | 0) != 4)
                          c[e2 + 216 >> 2] = 1;
                        g[e2 + 220 >> 2] = 0;
                      }
                      d2 = d2 + 1 | 0;
                    } while ((d2 | 0) != (f2 | 0));
                  }
                  d2 = c[m2 + 412 >> 2] | 0;
                  if ((d2 | 0) > 0) {
                    f2 = 0;
                    e2 = c[m2 + 436 >> 2] | 0;
                    do {
                      if ((e2 | 0) > 0) {
                        d2 = 0;
                        do {
                          jb[((c[(c[m2 + 444 >> 2] | 0) + (d2 << 2) >> 2] | 0) == 0 ? 23 : 0) & 31](m2, 1);
                          d2 = d2 + 1 | 0;
                          e2 = c[m2 + 436 >> 2] | 0;
                        } while ((d2 | 0) < (e2 | 0));
                        d2 = c[m2 + 412 >> 2] | 0;
                      }
                      f2 = f2 + 1 | 0;
                    } while ((f2 | 0) < (d2 | 0));
                    e2 = c[m2 + 752 >> 2] | 0;
                    if ((e2 | 0) > 0) {
                      d2 = 0;
                      do {
                        l2 = c[m2 + 760 >> 2] | 0;
                        z2 = +g[m2 + 492 >> 2];
                        A2 = z2 * +g[l2 + (d2 * 104 | 0) + 44 >> 2] + +g[l2 + (d2 * 104 | 0) + 28 >> 2];
                        B2 = z2 * +g[l2 + (d2 * 104 | 0) + 48 >> 2] + +g[l2 + (d2 * 104 | 0) + 32 >> 2];
                        g[l2 + (d2 * 104 | 0) + 8 >> 2] = +g[l2 + (d2 * 104 | 0) + 40 >> 2] * z2 + +g[l2 + (d2 * 104 | 0) + 24 >> 2];
                        g[l2 + (d2 * 104 | 0) + 12 >> 2] = A2;
                        g[l2 + (d2 * 104 | 0) + 16 >> 2] = B2;
                        g[l2 + (d2 * 104 | 0) + 20 >> 2] = 0;
                        d2 = d2 + 1 | 0;
                      } while ((d2 | 0) != (e2 | 0));
                    }
                  }
                  d2 = c[m2 + 416 >> 2] | 0;
                  if ((d2 | 0) > 0) {
                    h2 = 0;
                    e2 = c[m2 + 456 >> 2] | 0;
                    do {
                      b2 = +(h2 | 0) / +(d2 | 0);
                      if ((e2 | 0) > 0) {
                        f2 = 0;
                        do {
                          switch (c[(c[m2 + 464 >> 2] | 0) + (f2 << 2) >> 2] | 0) {
                            case 1: {
                              d2 = 2;
                              break;
                            }
                            case 0: {
                              d2 = 3;
                              break;
                            }
                            case 2: {
                              d2 = 4;
                              break;
                            }
                            case 3: {
                              d2 = 5;
                              break;
                            }
                            default: {
                              w2 = 35;
                              break a;
                            }
                          }
                          xb[d2 & 7](m2, 1, b2);
                          f2 = f2 + 1 | 0;
                          e2 = c[m2 + 456 >> 2] | 0;
                        } while ((f2 | 0) < (e2 | 0));
                        d2 = c[m2 + 416 >> 2] | 0;
                      }
                      h2 = h2 + 1 | 0;
                    } while ((h2 | 0) < (d2 | 0));
                    b2 = +g[m2 + 496 >> 2] * (1 - +g[m2 + 336 >> 2]);
                    e2 = c[m2 + 752 >> 2] | 0;
                    if ((e2 | 0) > 0) {
                      d2 = 0;
                      do {
                        l2 = c[m2 + 760 >> 2] | 0;
                        A2 = b2 * (+g[l2 + (d2 * 104 | 0) + 12 >> 2] - +g[l2 + (d2 * 104 | 0) + 28 >> 2]);
                        B2 = b2 * (+g[l2 + (d2 * 104 | 0) + 16 >> 2] - +g[l2 + (d2 * 104 | 0) + 32 >> 2]);
                        g[l2 + (d2 * 104 | 0) + 40 >> 2] = b2 * (+g[l2 + (d2 * 104 | 0) + 8 >> 2] - +g[l2 + (d2 * 104 | 0) + 24 >> 2]);
                        g[l2 + (d2 * 104 | 0) + 44 >> 2] = A2;
                        g[l2 + (d2 * 104 | 0) + 48 >> 2] = B2;
                        l2 = l2 + (d2 * 104 | 0) + 52 | 0;
                        d2 = d2 + 1 | 0;
                        c[l2 >> 2] = 0;
                        c[l2 + 4 >> 2] = 0;
                        c[l2 + 8 >> 2] = 0;
                        c[l2 + 12 >> 2] = 0;
                        c[l2 + 16 >> 2] = 0;
                      } while ((d2 | 0) != (e2 | 0));
                    }
                  }
                  d2 = c[m2 + 420 >> 2] | 0;
                  if ((d2 | 0) > 0) {
                    b2 = +g[m2 + 332 >> 2] * +g[m2 + 496 >> 2];
                    e2 = c[m2 + 752 >> 2] | 0;
                    if ((e2 | 0) > 0) {
                      d2 = 0;
                      do {
                        k2 = c[m2 + 760 >> 2] | 0;
                        l2 = k2 + (d2 * 104 | 0) + 24 | 0;
                        k2 = k2 + (d2 * 104 | 0) + 8 | 0;
                        c[l2 >> 2] = c[k2 >> 2];
                        c[l2 + 4 >> 2] = c[k2 + 4 >> 2];
                        c[l2 + 8 >> 2] = c[k2 + 8 >> 2];
                        c[l2 + 12 >> 2] = c[k2 + 12 >> 2];
                        d2 = d2 + 1 | 0;
                      } while ((d2 | 0) != (e2 | 0));
                      d2 = c[m2 + 420 >> 2] | 0;
                      if ((d2 | 0) > 0)
                        w2 = 42;
                    } else
                      w2 = 42;
                    if ((w2 | 0) == 42) {
                      w2 = 0;
                      h2 = 0;
                      e2 = c[m2 + 476 >> 2] | 0;
                      do {
                        if ((e2 | 0) > 0) {
                          f2 = 0;
                          do {
                            switch (c[(c[m2 + 484 >> 2] | 0) + (f2 << 2) >> 2] | 0) {
                              case 1: {
                                d2 = 2;
                                break;
                              }
                              case 0: {
                                d2 = 3;
                                break;
                              }
                              case 2: {
                                d2 = 4;
                                break;
                              }
                              case 3: {
                                d2 = 5;
                                break;
                              }
                              default: {
                                w2 = 53;
                                break a;
                              }
                            }
                            xb[d2 & 7](m2, 1, 0);
                            f2 = f2 + 1 | 0;
                            e2 = c[m2 + 476 >> 2] | 0;
                          } while ((f2 | 0) < (e2 | 0));
                          d2 = c[m2 + 420 >> 2] | 0;
                        }
                        h2 = h2 + 1 | 0;
                      } while ((h2 | 0) < (d2 | 0));
                    }
                    e2 = c[m2 + 752 >> 2] | 0;
                    if ((e2 | 0) > 0) {
                      f2 = c[m2 + 760 >> 2] | 0;
                      d2 = 0;
                      do {
                        A2 = b2 * (+g[f2 + (d2 * 104 | 0) + 12 >> 2] - +g[f2 + (d2 * 104 | 0) + 28 >> 2]);
                        B2 = b2 * (+g[f2 + (d2 * 104 | 0) + 16 >> 2] - +g[f2 + (d2 * 104 | 0) + 32 >> 2]);
                        l2 = f2 + (d2 * 104 | 0) + 40 | 0;
                        g[l2 >> 2] = b2 * (+g[f2 + (d2 * 104 | 0) + 8 >> 2] - +g[f2 + (d2 * 104 | 0) + 24 >> 2]) + +g[l2 >> 2];
                        l2 = f2 + (d2 * 104 | 0) + 44 | 0;
                        g[l2 >> 2] = A2 + +g[l2 >> 2];
                        l2 = f2 + (d2 * 104 | 0) + 48 | 0;
                        g[l2 >> 2] = B2 + +g[l2 >> 2];
                        d2 = d2 + 1 | 0;
                      } while ((d2 | 0) != (e2 | 0));
                    }
                  }
                  f2 = c[m2 + 1152 >> 2] | 0;
                  if ((f2 | 0) > 0) {
                    h2 = c[m2 + 1160 >> 2] | 0;
                    e2 = 0;
                    do {
                      j2 = c[h2 + (e2 << 2) >> 2] | 0;
                      if (+g[j2 + 352 >> 2] > 0 ? (p2 = c[j2 + 24 >> 2] | 0, (p2 | 0) > 0) : 0) {
                        k2 = c[j2 + 32 >> 2] | 0;
                        d2 = 0;
                        do {
                          l2 = c[k2 + (d2 << 2) >> 2] | 0;
                          if (+g[l2 + 88 >> 2] > 0 ? (t2 = +g[l2 + 24 >> 2] - +g[j2 + 228 >> 2], v2 = +g[l2 + 28 >> 2] - +g[j2 + 232 >> 2], r2 = +g[l2 + 32 >> 2] - +g[j2 + 236 >> 2], s2 = +g[j2 + 336 >> 2], B2 = +g[j2 + 340 >> 2], u2 = +g[j2 + 332 >> 2], q2 = +g[j2 + 316 >> 2] + (s2 * r2 - v2 * B2), r2 = +g[j2 + 320 >> 2] + (t2 * B2 - r2 * u2), s2 = v2 * u2 - t2 * s2 + +g[j2 + 324 >> 2], t2 = +g[l2 + 40 >> 2], u2 = +g[l2 + 44 >> 2], v2 = +g[l2 + 48 >> 2], q2 * q2 + r2 * r2 + s2 * s2 <= t2 * t2 + u2 * u2 + v2 * v2) : 0) {
                            B2 = +g[j2 + 352 >> 2];
                            g[l2 + 40 >> 2] = t2 + (q2 - t2) * B2;
                            g[l2 + 44 >> 2] = (r2 - u2) * B2 + u2;
                            g[l2 + 48 >> 2] = (s2 - v2) * B2 + v2;
                          }
                          d2 = d2 + 1 | 0;
                        } while ((d2 | 0) != (p2 | 0));
                      }
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (f2 | 0));
                  }
                  $d(m2, 1);
                  d2 = c[a2 + 24 >> 2] | 0;
                }
              }
              n2 = n2 + 1 | 0;
              if ((n2 | 0) >= (d2 | 0)) {
                w2 = 3;
                break;
              }
            }
          if ((w2 | 0) == 3) {
            i = o2;
            return;
          }
        }
        function Rc(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          if (!a2)
            return;
          h2 = c[6331] | 0;
          if ((a2 + -8 | 0) >>> 0 < h2 >>> 0)
            Ua();
          b2 = c[a2 + -4 >> 2] | 0;
          if ((b2 & 3 | 0) == 1)
            Ua();
          n2 = a2 + -8 + (b2 & -8) | 0;
          do
            if (!(b2 & 1)) {
              e2 = c[a2 + -8 >> 2] | 0;
              if (!(b2 & 3))
                return;
              k2 = a2 + -8 + (0 - e2) | 0;
              j2 = e2 + (b2 & -8) | 0;
              if (k2 >>> 0 < h2 >>> 0)
                Ua();
              if ((k2 | 0) == (c[6332] | 0)) {
                a2 = c[n2 + 4 >> 2] | 0;
                if ((a2 & 3 | 0) != 3) {
                  q2 = k2;
                  f2 = j2;
                  break;
                }
                c[6329] = j2;
                c[n2 + 4 >> 2] = a2 & -2;
                c[k2 + 4 >> 2] = j2 | 1;
                c[k2 + j2 >> 2] = j2;
                return;
              }
              if (e2 >>> 0 < 256) {
                a2 = c[k2 + 8 >> 2] | 0;
                b2 = c[k2 + 12 >> 2] | 0;
                if ((a2 | 0) != (25348 + (e2 >>> 3 << 1 << 2) | 0)) {
                  if (a2 >>> 0 < h2 >>> 0)
                    Ua();
                  if ((c[a2 + 12 >> 2] | 0) != (k2 | 0))
                    Ua();
                }
                if ((b2 | 0) == (a2 | 0)) {
                  c[6327] = c[6327] & ~(1 << (e2 >>> 3));
                  q2 = k2;
                  f2 = j2;
                  break;
                }
                if ((b2 | 0) != (25348 + (e2 >>> 3 << 1 << 2) | 0)) {
                  if (b2 >>> 0 < h2 >>> 0)
                    Ua();
                  if ((c[b2 + 8 >> 2] | 0) != (k2 | 0))
                    Ua();
                  else
                    d2 = b2 + 8 | 0;
                } else
                  d2 = b2 + 8 | 0;
                c[a2 + 12 >> 2] = b2;
                c[d2 >> 2] = a2;
                q2 = k2;
                f2 = j2;
                break;
              }
              g2 = c[k2 + 24 >> 2] | 0;
              a2 = c[k2 + 12 >> 2] | 0;
              do
                if ((a2 | 0) == (k2 | 0)) {
                  a2 = c[k2 + 16 + 4 >> 2] | 0;
                  if (!a2) {
                    a2 = c[k2 + 16 >> 2] | 0;
                    if (!a2) {
                      i2 = 0;
                      break;
                    } else
                      e2 = k2 + 16 | 0;
                  } else
                    e2 = k2 + 16 + 4 | 0;
                  while (1) {
                    b2 = a2 + 20 | 0;
                    d2 = c[b2 >> 2] | 0;
                    if (d2 | 0) {
                      a2 = d2;
                      e2 = b2;
                      continue;
                    }
                    b2 = a2 + 16 | 0;
                    d2 = c[b2 >> 2] | 0;
                    if (!d2)
                      break;
                    else {
                      a2 = d2;
                      e2 = b2;
                    }
                  }
                  if (e2 >>> 0 < h2 >>> 0)
                    Ua();
                  else {
                    c[e2 >> 2] = 0;
                    i2 = a2;
                    break;
                  }
                } else {
                  b2 = c[k2 + 8 >> 2] | 0;
                  if (b2 >>> 0 < h2 >>> 0)
                    Ua();
                  if ((c[b2 + 12 >> 2] | 0) != (k2 | 0))
                    Ua();
                  if ((c[a2 + 8 >> 2] | 0) == (k2 | 0)) {
                    c[b2 + 12 >> 2] = a2;
                    c[a2 + 8 >> 2] = b2;
                    i2 = a2;
                    break;
                  } else
                    Ua();
                }
              while (0);
              if (g2) {
                a2 = c[k2 + 28 >> 2] | 0;
                if ((k2 | 0) == (c[25612 + (a2 << 2) >> 2] | 0)) {
                  c[25612 + (a2 << 2) >> 2] = i2;
                  if (!i2) {
                    c[6328] = c[6328] & ~(1 << a2);
                    q2 = k2;
                    f2 = j2;
                    break;
                  }
                } else {
                  if (g2 >>> 0 < (c[6331] | 0) >>> 0)
                    Ua();
                  if ((c[g2 + 16 >> 2] | 0) == (k2 | 0))
                    c[g2 + 16 >> 2] = i2;
                  else
                    c[g2 + 20 >> 2] = i2;
                  if (!i2) {
                    q2 = k2;
                    f2 = j2;
                    break;
                  }
                }
                b2 = c[6331] | 0;
                if (i2 >>> 0 < b2 >>> 0)
                  Ua();
                c[i2 + 24 >> 2] = g2;
                a2 = c[k2 + 16 >> 2] | 0;
                do
                  if (a2 | 0)
                    if (a2 >>> 0 < b2 >>> 0)
                      Ua();
                    else {
                      c[i2 + 16 >> 2] = a2;
                      c[a2 + 24 >> 2] = i2;
                      break;
                    }
                while (0);
                a2 = c[k2 + 16 + 4 >> 2] | 0;
                if (a2)
                  if (a2 >>> 0 < (c[6331] | 0) >>> 0)
                    Ua();
                  else {
                    c[i2 + 20 >> 2] = a2;
                    c[a2 + 24 >> 2] = i2;
                    q2 = k2;
                    f2 = j2;
                    break;
                  }
                else {
                  q2 = k2;
                  f2 = j2;
                }
              } else {
                q2 = k2;
                f2 = j2;
              }
            } else {
              q2 = a2 + -8 | 0;
              f2 = b2 & -8;
            }
          while (0);
          if (q2 >>> 0 >= n2 >>> 0)
            Ua();
          d2 = c[n2 + 4 >> 2] | 0;
          if (!(d2 & 1))
            Ua();
          if (!(d2 & 2)) {
            if ((n2 | 0) == (c[6333] | 0)) {
              p2 = (c[6330] | 0) + f2 | 0;
              c[6330] = p2;
              c[6333] = q2;
              c[q2 + 4 >> 2] = p2 | 1;
              if ((q2 | 0) != (c[6332] | 0))
                return;
              c[6332] = 0;
              c[6329] = 0;
              return;
            }
            if ((n2 | 0) == (c[6332] | 0)) {
              p2 = (c[6329] | 0) + f2 | 0;
              c[6329] = p2;
              c[6332] = q2;
              c[q2 + 4 >> 2] = p2 | 1;
              c[q2 + p2 >> 2] = p2;
              return;
            }
            f2 = (d2 & -8) + f2 | 0;
            do
              if (d2 >>> 0 >= 256) {
                g2 = c[n2 + 24 >> 2] | 0;
                a2 = c[n2 + 12 >> 2] | 0;
                do
                  if ((a2 | 0) == (n2 | 0)) {
                    a2 = c[n2 + 16 + 4 >> 2] | 0;
                    if (!a2) {
                      a2 = c[n2 + 16 >> 2] | 0;
                      if (!a2) {
                        m2 = 0;
                        break;
                      } else
                        e2 = n2 + 16 | 0;
                    } else
                      e2 = n2 + 16 + 4 | 0;
                    while (1) {
                      b2 = a2 + 20 | 0;
                      d2 = c[b2 >> 2] | 0;
                      if (d2 | 0) {
                        a2 = d2;
                        e2 = b2;
                        continue;
                      }
                      b2 = a2 + 16 | 0;
                      d2 = c[b2 >> 2] | 0;
                      if (!d2)
                        break;
                      else {
                        a2 = d2;
                        e2 = b2;
                      }
                    }
                    if (e2 >>> 0 < (c[6331] | 0) >>> 0)
                      Ua();
                    else {
                      c[e2 >> 2] = 0;
                      m2 = a2;
                      break;
                    }
                  } else {
                    b2 = c[n2 + 8 >> 2] | 0;
                    if (b2 >>> 0 < (c[6331] | 0) >>> 0)
                      Ua();
                    if ((c[b2 + 12 >> 2] | 0) != (n2 | 0))
                      Ua();
                    if ((c[a2 + 8 >> 2] | 0) == (n2 | 0)) {
                      c[b2 + 12 >> 2] = a2;
                      c[a2 + 8 >> 2] = b2;
                      m2 = a2;
                      break;
                    } else
                      Ua();
                  }
                while (0);
                if (g2 | 0) {
                  a2 = c[n2 + 28 >> 2] | 0;
                  if ((n2 | 0) == (c[25612 + (a2 << 2) >> 2] | 0)) {
                    c[25612 + (a2 << 2) >> 2] = m2;
                    if (!m2) {
                      c[6328] = c[6328] & ~(1 << a2);
                      break;
                    }
                  } else {
                    if (g2 >>> 0 < (c[6331] | 0) >>> 0)
                      Ua();
                    if ((c[g2 + 16 >> 2] | 0) == (n2 | 0))
                      c[g2 + 16 >> 2] = m2;
                    else
                      c[g2 + 20 >> 2] = m2;
                    if (!m2)
                      break;
                  }
                  b2 = c[6331] | 0;
                  if (m2 >>> 0 < b2 >>> 0)
                    Ua();
                  c[m2 + 24 >> 2] = g2;
                  a2 = c[n2 + 16 >> 2] | 0;
                  do
                    if (a2 | 0)
                      if (a2 >>> 0 < b2 >>> 0)
                        Ua();
                      else {
                        c[m2 + 16 >> 2] = a2;
                        c[a2 + 24 >> 2] = m2;
                        break;
                      }
                  while (0);
                  a2 = c[n2 + 16 + 4 >> 2] | 0;
                  if (a2 | 0)
                    if (a2 >>> 0 < (c[6331] | 0) >>> 0)
                      Ua();
                    else {
                      c[m2 + 20 >> 2] = a2;
                      c[a2 + 24 >> 2] = m2;
                      break;
                    }
                }
              } else {
                a2 = c[n2 + 8 >> 2] | 0;
                b2 = c[n2 + 12 >> 2] | 0;
                if ((a2 | 0) != (25348 + (d2 >>> 3 << 1 << 2) | 0)) {
                  if (a2 >>> 0 < (c[6331] | 0) >>> 0)
                    Ua();
                  if ((c[a2 + 12 >> 2] | 0) != (n2 | 0))
                    Ua();
                }
                if ((b2 | 0) == (a2 | 0)) {
                  c[6327] = c[6327] & ~(1 << (d2 >>> 3));
                  break;
                }
                if ((b2 | 0) != (25348 + (d2 >>> 3 << 1 << 2) | 0)) {
                  if (b2 >>> 0 < (c[6331] | 0) >>> 0)
                    Ua();
                  if ((c[b2 + 8 >> 2] | 0) != (n2 | 0))
                    Ua();
                  else
                    l2 = b2 + 8 | 0;
                } else
                  l2 = b2 + 8 | 0;
                c[a2 + 12 >> 2] = b2;
                c[l2 >> 2] = a2;
              }
            while (0);
            c[q2 + 4 >> 2] = f2 | 1;
            c[q2 + f2 >> 2] = f2;
            if ((q2 | 0) == (c[6332] | 0)) {
              c[6329] = f2;
              return;
            }
          } else {
            c[n2 + 4 >> 2] = d2 & -2;
            c[q2 + 4 >> 2] = f2 | 1;
            c[q2 + f2 >> 2] = f2;
          }
          b2 = f2 >>> 3;
          if (f2 >>> 0 < 256) {
            a2 = c[6327] | 0;
            if (a2 & 1 << b2) {
              a2 = c[25348 + (b2 << 1 << 2) + 8 >> 2] | 0;
              if (a2 >>> 0 < (c[6331] | 0) >>> 0)
                Ua();
              else {
                o2 = a2;
                p2 = 25348 + (b2 << 1 << 2) + 8 | 0;
              }
            } else {
              c[6327] = a2 | 1 << b2;
              o2 = 25348 + (b2 << 1 << 2) | 0;
              p2 = 25348 + (b2 << 1 << 2) + 8 | 0;
            }
            c[p2 >> 2] = q2;
            c[o2 + 12 >> 2] = q2;
            c[q2 + 8 >> 2] = o2;
            c[q2 + 12 >> 2] = 25348 + (b2 << 1 << 2);
            return;
          }
          a2 = f2 >>> 8;
          if (a2)
            if (f2 >>> 0 > 16777215)
              a2 = 31;
            else {
              p2 = a2 << ((a2 + 1048320 | 0) >>> 16 & 8) << (((a2 << ((a2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4);
              a2 = 14 - (((a2 << ((a2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4 | (a2 + 1048320 | 0) >>> 16 & 8 | (p2 + 245760 | 0) >>> 16 & 2) + (p2 << ((p2 + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
              a2 = f2 >>> (a2 + 7 | 0) & 1 | a2 << 1;
            }
          else
            a2 = 0;
          e2 = 25612 + (a2 << 2) | 0;
          c[q2 + 28 >> 2] = a2;
          c[q2 + 20 >> 2] = 0;
          c[q2 + 16 >> 2] = 0;
          b2 = c[6328] | 0;
          d2 = 1 << a2;
          do
            if (b2 & d2) {
              b2 = f2 << ((a2 | 0) == 31 ? 0 : 25 - (a2 >>> 1) | 0);
              e2 = c[e2 >> 2] | 0;
              while (1) {
                if ((c[e2 + 4 >> 2] & -8 | 0) == (f2 | 0)) {
                  a2 = 130;
                  break;
                }
                d2 = e2 + 16 + (b2 >>> 31 << 2) | 0;
                a2 = c[d2 >> 2] | 0;
                if (!a2) {
                  a2 = 127;
                  break;
                } else {
                  b2 = b2 << 1;
                  e2 = a2;
                }
              }
              if ((a2 | 0) == 127)
                if (d2 >>> 0 < (c[6331] | 0) >>> 0)
                  Ua();
                else {
                  c[d2 >> 2] = q2;
                  c[q2 + 24 >> 2] = e2;
                  c[q2 + 12 >> 2] = q2;
                  c[q2 + 8 >> 2] = q2;
                  break;
                }
              else if ((a2 | 0) == 130) {
                a2 = e2 + 8 | 0;
                b2 = c[a2 >> 2] | 0;
                p2 = c[6331] | 0;
                if (b2 >>> 0 >= p2 >>> 0 & e2 >>> 0 >= p2 >>> 0) {
                  c[b2 + 12 >> 2] = q2;
                  c[a2 >> 2] = q2;
                  c[q2 + 8 >> 2] = b2;
                  c[q2 + 12 >> 2] = e2;
                  c[q2 + 24 >> 2] = 0;
                  break;
                } else
                  Ua();
              }
            } else {
              c[6328] = b2 | d2;
              c[e2 >> 2] = q2;
              c[q2 + 24 >> 2] = e2;
              c[q2 + 12 >> 2] = q2;
              c[q2 + 8 >> 2] = q2;
            }
          while (0);
          q2 = (c[6335] | 0) + -1 | 0;
          c[6335] = q2;
          if (!q2)
            a2 = 25764;
          else
            return;
          while (1) {
            a2 = c[a2 >> 2] | 0;
            if (!a2)
              break;
            else
              a2 = a2 + 8 | 0;
          }
          c[6335] = -1;
          return;
        }
        function Sc(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          s2 = i;
          i = i + 112 | 0;
          k2 = c[b2 + 756 >> 2] | 0;
          if ((k2 | 0) == (c[b2 + 752 >> 2] | 0)) {
            a:
              do
                if (k2) {
                  j2 = c[b2 + 760 >> 2] | 0;
                  if ((k2 | 0) > 0) {
                    f2 = 0;
                    h2 = j2;
                    while (1) {
                      h2 = c[h2 + (f2 * 104 | 0) + 96 >> 2] | 0;
                      if (h2 | 0)
                        c[h2 + 36 >> 2] = f2;
                      f2 = f2 + 1 | 0;
                      if ((f2 | 0) == (k2 | 0)) {
                        o2 = j2;
                        break a;
                      }
                      h2 = c[b2 + 760 >> 2] | 0;
                    }
                  } else
                    o2 = j2;
                } else
                  o2 = 0;
              while (0);
            h2 = c[b2 + 772 >> 2] | 0;
            if ((h2 | 0) > 0) {
              f2 = 0;
              do {
                p2 = (c[b2 + 780 >> 2] | 0) + (f2 * 52 | 0) + 8 | 0;
                c[p2 >> 2] = ((c[p2 >> 2] | 0) - o2 | 0) / 104 | 0;
                p2 = (c[b2 + 780 >> 2] | 0) + (f2 * 52 | 0) + 12 | 0;
                c[p2 >> 2] = ((c[p2 >> 2] | 0) - o2 | 0) / 104 | 0;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (h2 | 0));
            }
            h2 = c[b2 + 792 >> 2] | 0;
            if ((h2 | 0) > 0) {
              f2 = 0;
              do {
                j2 = (c[b2 + 800 >> 2] | 0) + (f2 * 44 | 0) + 8 | 0;
                c[j2 >> 2] = ((c[j2 >> 2] | 0) - o2 | 0) / 104 | 0;
                j2 = (c[b2 + 800 >> 2] | 0) + (f2 * 44 | 0) + 12 | 0;
                c[j2 >> 2] = ((c[j2 >> 2] | 0) - o2 | 0) / 104 | 0;
                j2 = (c[b2 + 800 >> 2] | 0) + (f2 * 44 | 0) + 16 | 0;
                c[j2 >> 2] = ((c[j2 >> 2] | 0) - o2 | 0) / 104 | 0;
                j2 = c[(c[b2 + 800 >> 2] | 0) + (f2 * 44 | 0) + 40 >> 2] | 0;
                if (j2 | 0)
                  c[j2 + 36 >> 2] = f2;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (h2 | 0));
            }
            h2 = c[b2 + 832 >> 2] | 0;
            if ((h2 | 0) > 0) {
              j2 = c[b2 + 840 >> 2] | 0;
              f2 = 0;
              do {
                p2 = j2 + (f2 * 96 | 0) | 0;
                c[p2 >> 2] = ((c[p2 >> 2] | 0) - o2 | 0) / 104 | 0;
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (h2 | 0));
            }
            l2 = c[b2 + 732 >> 2] | 0;
            if ((l2 | 0) > 0) {
              j2 = 0;
              f2 = c[b2 + 740 >> 2] | 0;
              do {
                if ((c[f2 + (j2 * 60 | 0) + 24 >> 2] | 0) > 0) {
                  h2 = 0;
                  do {
                    f2 = f2 + (j2 * 60 | 0) + 28 + (h2 << 2) | 0;
                    c[f2 >> 2] = ((c[f2 >> 2] | 0) - o2 | 0) / 104 | 0;
                    h2 = h2 + 1 | 0;
                    f2 = c[b2 + 740 >> 2] | 0;
                  } while ((h2 | 0) < (c[f2 + (j2 * 60 | 0) + 24 >> 2] | 0));
                }
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (l2 | 0));
            }
            if ((k2 | 0) < (k2 << 1 | 1 | 0)) {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic(((k2 << 1 | 1) * 104 | 3) + 16 | 0) | 0;
              if (!f2)
                j2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                j2 = f2 + 4 + 15 & -16;
              }
              h2 = c[b2 + 752 >> 2] | 0;
              if ((h2 | 0) > 0) {
                f2 = 0;
                do {
                  o2 = j2 + (f2 * 104 | 0) | 0;
                  l2 = (c[b2 + 760 >> 2] | 0) + (f2 * 104 | 0) | 0;
                  p2 = o2 + 104 | 0;
                  do {
                    c[o2 >> 2] = c[l2 >> 2];
                    o2 = o2 + 4 | 0;
                    l2 = l2 + 4 | 0;
                  } while ((o2 | 0) < (p2 | 0));
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (h2 | 0));
              }
              f2 = c[b2 + 760 >> 2] | 0;
              if (f2 | 0) {
                if (a[b2 + 764 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                c[b2 + 760 >> 2] = 0;
              }
              a[b2 + 764 >> 0] = 1;
              c[b2 + 760 >> 2] = j2;
              c[b2 + 756 >> 2] = k2 << 1 | 1;
              k2 = c[b2 + 752 >> 2] | 0;
            }
            b:
              do
                if (k2) {
                  l2 = c[b2 + 760 >> 2] | 0;
                  if ((k2 | 0) > 0) {
                    f2 = 0;
                    h2 = l2;
                    while (1) {
                      j2 = c[h2 + (f2 * 104 | 0) + 96 >> 2] | 0;
                      if (j2 | 0)
                        c[j2 + 36 >> 2] = h2 + (f2 * 104 | 0);
                      f2 = f2 + 1 | 0;
                      if ((f2 | 0) == (k2 | 0))
                        break b;
                      h2 = c[b2 + 760 >> 2] | 0;
                    }
                  }
                } else
                  l2 = 0;
              while (0);
            h2 = c[b2 + 772 >> 2] | 0;
            if ((h2 | 0) > 0) {
              f2 = 0;
              do {
                p2 = (c[b2 + 780 >> 2] | 0) + (f2 * 52 | 0) + 8 | 0;
                c[p2 >> 2] = l2 + ((c[p2 >> 2] | 0) * 104 | 0);
                p2 = (c[b2 + 780 >> 2] | 0) + (f2 * 52 | 0) + 12 | 0;
                c[p2 >> 2] = l2 + ((c[p2 >> 2] | 0) * 104 | 0);
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (h2 | 0));
            }
            h2 = c[b2 + 792 >> 2] | 0;
            if ((h2 | 0) > 0) {
              f2 = 0;
              do {
                j2 = (c[b2 + 800 >> 2] | 0) + (f2 * 44 | 0) + 8 | 0;
                c[j2 >> 2] = l2 + ((c[j2 >> 2] | 0) * 104 | 0);
                j2 = (c[b2 + 800 >> 2] | 0) + (f2 * 44 | 0) + 12 | 0;
                c[j2 >> 2] = l2 + ((c[j2 >> 2] | 0) * 104 | 0);
                j2 = (c[b2 + 800 >> 2] | 0) + (f2 * 44 | 0) + 16 | 0;
                c[j2 >> 2] = l2 + ((c[j2 >> 2] | 0) * 104 | 0);
                j2 = c[b2 + 800 >> 2] | 0;
                k2 = c[j2 + (f2 * 44 | 0) + 40 >> 2] | 0;
                if (k2 | 0)
                  c[k2 + 36 >> 2] = j2 + (f2 * 44 | 0);
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (h2 | 0));
            }
            h2 = c[b2 + 832 >> 2] | 0;
            if ((h2 | 0) > 0) {
              j2 = c[b2 + 840 >> 2] | 0;
              f2 = 0;
              do {
                c[j2 + (f2 * 96 | 0) >> 2] = l2 + ((c[j2 + (f2 * 96 | 0) >> 2] | 0) * 104 | 0);
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (h2 | 0));
            }
            k2 = c[b2 + 732 >> 2] | 0;
            if ((k2 | 0) > 0) {
              j2 = 0;
              f2 = c[b2 + 740 >> 2] | 0;
              do {
                if ((c[f2 + (j2 * 60 | 0) + 24 >> 2] | 0) > 0) {
                  h2 = 0;
                  do {
                    f2 = f2 + (j2 * 60 | 0) + 28 + (h2 << 2) | 0;
                    c[f2 >> 2] = l2 + ((c[f2 >> 2] | 0) * 104 | 0);
                    h2 = h2 + 1 | 0;
                    f2 = c[b2 + 740 >> 2] | 0;
                  } while ((h2 | 0) < (c[f2 + (j2 * 60 | 0) + 24 >> 2] | 0));
                }
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (k2 | 0));
            }
          }
          o2 = c[b2 + 192 >> 2] | 0;
          q2 = +Cb[c[(c[o2 >> 2] | 0) + 48 >> 2] & 15](o2);
          o2 = s2;
          p2 = o2 + 100 | 0;
          do {
            c[o2 >> 2] = 0;
            o2 = o2 + 4 | 0;
          } while ((o2 | 0) < (p2 | 0));
          f2 = c[b2 + 752 >> 2] | 0;
          if ((f2 | 0) == (c[b2 + 756 >> 2] | 0) ? (r2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (r2 | 0)) : 0) {
            if (!r2)
              j2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic((r2 * 104 | 3) + 16 | 0) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              j2 = f2;
              f2 = c[b2 + 752 >> 2] | 0;
            }
            if ((f2 | 0) > 0) {
              h2 = 0;
              do {
                o2 = j2 + (h2 * 104 | 0) | 0;
                l2 = (c[b2 + 760 >> 2] | 0) + (h2 * 104 | 0) | 0;
                p2 = o2 + 104 | 0;
                do {
                  c[o2 >> 2] = c[l2 >> 2];
                  o2 = o2 + 4 | 0;
                  l2 = l2 + 4 | 0;
                } while ((o2 | 0) < (p2 | 0));
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (f2 | 0));
            }
            f2 = c[b2 + 760 >> 2] | 0;
            if (f2 | 0) {
              if (a[b2 + 764 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[b2 + 760 >> 2] = 0;
            }
            a[b2 + 764 >> 0] = 1;
            c[b2 + 760 >> 2] = j2;
            c[b2 + 756 >> 2] = r2;
            f2 = c[b2 + 752 >> 2] | 0;
          }
          o2 = c[b2 + 760 >> 2] | 0;
          c[o2 + (f2 * 104 | 0) >> 2] = 0;
          o2 = o2 + (f2 * 104 | 0) + 4 | 0;
          l2 = s2;
          p2 = o2 + 100 | 0;
          do {
            c[o2 >> 2] = c[l2 >> 2];
            o2 = o2 + 4 | 0;
            l2 = l2 + 4 | 0;
          } while ((o2 | 0) < (p2 | 0));
          h2 = c[b2 + 752 >> 2] | 0;
          c[b2 + 752 >> 2] = h2 + 1;
          j2 = c[b2 + 760 >> 2] | 0;
          o2 = j2 + (h2 * 104 | 0) | 0;
          p2 = o2 + 104 | 0;
          do {
            c[o2 >> 2] = 0;
            o2 = o2 + 4 | 0;
          } while ((o2 | 0) < (p2 | 0));
          c[j2 + (h2 * 104 | 0) + 8 >> 2] = c[d2 >> 2];
          c[j2 + (h2 * 104 | 0) + 8 + 4 >> 2] = c[d2 + 4 >> 2];
          c[j2 + (h2 * 104 | 0) + 8 + 8 >> 2] = c[d2 + 8 >> 2];
          c[j2 + (h2 * 104 | 0) + 8 + 12 >> 2] = c[d2 + 12 >> 2];
          rp(j2 + (h2 * 104 | 0) + 24 | 0, d2 | 0, 16) | 0;
          g[j2 + (h2 * 104 | 0) + 88 >> 2] = e2 > 0 ? 1 / e2 : 0;
          c[j2 + (h2 * 104 | 0) + 4 >> 2] = c[c[b2 + 920 >> 2] >> 2];
          e2 = +g[j2 + (h2 * 104 | 0) + 8 >> 2];
          m2 = +g[j2 + (h2 * 104 | 0) + 12 >> 2];
          n2 = +g[j2 + (h2 * 104 | 0) + 16 >> 2];
          f2 = c[b2 + 972 >> 2] | 0;
          if (f2 | 0) {
            c[b2 + 972 >> 2] = 0;
            d2 = f2;
            r2 = d2 + 32 | 0;
            c[r2 >> 2] = 0;
            r2 = d2 + 36 | 0;
            c[r2 >> 2] = j2 + (h2 * 104 | 0);
            r2 = d2 + 40 | 0;
            c[r2 >> 2] = 0;
            g[d2 >> 2] = e2 - q2;
            r2 = d2 + 4 | 0;
            g[r2 >> 2] = m2 - q2;
            r2 = d2 + 8 | 0;
            g[r2 >> 2] = n2 - q2;
            r2 = d2 + 12 | 0;
            g[r2 >> 2] = 0;
            r2 = d2 + 16 | 0;
            g[r2 >> 2] = q2 + e2;
            r2 = d2 + 20 | 0;
            g[r2 >> 2] = q2 + m2;
            r2 = d2 + 24 | 0;
            g[r2 >> 2] = q2 + n2;
            r2 = d2 + 28 | 0;
            g[r2 >> 2] = 0;
            r2 = c[b2 + 968 >> 2] | 0;
            Ze(b2 + 968 | 0, r2, d2);
            b2 = b2 + 980 | 0;
            r2 = c[b2 >> 2] | 0;
            r2 = r2 + 1 | 0;
            c[b2 >> 2] = r2;
            b2 = j2 + (h2 * 104 | 0) + 96 | 0;
            c[b2 >> 2] = d2;
            i = s2;
            return;
          }
          c[6324] = (c[6324] | 0) + 1;
          f2 = ic(63) | 0;
          if (!f2)
            f2 = 0;
          else {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            f2 = f2 + 4 + 15 & -16;
          }
          o2 = f2;
          p2 = o2 + 44 | 0;
          do {
            c[o2 >> 2] = 0;
            o2 = o2 + 4 | 0;
          } while ((o2 | 0) < (p2 | 0));
          d2 = f2;
          r2 = d2 + 32 | 0;
          c[r2 >> 2] = 0;
          r2 = d2 + 36 | 0;
          c[r2 >> 2] = j2 + (h2 * 104 | 0);
          r2 = d2 + 40 | 0;
          c[r2 >> 2] = 0;
          g[d2 >> 2] = e2 - q2;
          r2 = d2 + 4 | 0;
          g[r2 >> 2] = m2 - q2;
          r2 = d2 + 8 | 0;
          g[r2 >> 2] = n2 - q2;
          r2 = d2 + 12 | 0;
          g[r2 >> 2] = 0;
          r2 = d2 + 16 | 0;
          g[r2 >> 2] = q2 + e2;
          r2 = d2 + 20 | 0;
          g[r2 >> 2] = q2 + m2;
          r2 = d2 + 24 | 0;
          g[r2 >> 2] = q2 + n2;
          r2 = d2 + 28 | 0;
          g[r2 >> 2] = 0;
          r2 = c[b2 + 968 >> 2] | 0;
          Ze(b2 + 968 | 0, r2, d2);
          b2 = b2 + 980 | 0;
          r2 = c[b2 >> 2] | 0;
          r2 = r2 + 1 | 0;
          c[b2 >> 2] = r2;
          b2 = j2 + (h2 * 104 | 0) + 96 | 0;
          c[b2 >> 2] = d2;
          i = s2;
          return;
        }
        function Tc(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
          if ((a[b2 + 180 >> 0] | 0) == 0 ? (a[b2 + 48 >> 0] | 0) != 0 : 0) {
            w2 = +g[b2 + 116 >> 2];
            i2 = +g[e2 >> 2];
            x2 = +g[b2 + 132 >> 2];
            C2 = +g[e2 + 4 >> 2];
            y2 = +g[b2 + 148 >> 2];
            D2 = +g[e2 + 8 >> 2];
            k2 = +g[b2 + 120 >> 2];
            n2 = +g[b2 + 136 >> 2];
            p2 = +g[b2 + 152 >> 2];
            q2 = +g[b2 + 124 >> 2];
            s2 = +g[b2 + 140 >> 2];
            t2 = +g[b2 + 156 >> 2];
            j2 = +g[e2 + 16 >> 2];
            m2 = +g[e2 + 20 >> 2];
            o2 = +g[e2 + 24 >> 2];
            r2 = +g[e2 + 32 >> 2];
            z2 = +g[e2 + 36 >> 2];
            A2 = +g[e2 + 40 >> 2];
            h2 = +g[b2 + 164 >> 2];
            f2 = +g[b2 + 168 >> 2];
            v2 = +g[b2 + 172 >> 2];
            u2 = +g[e2 + 48 >> 2] + (i2 * h2 + C2 * f2 + D2 * v2);
            B2 = j2 * h2 + m2 * f2 + o2 * v2 + +g[e2 + 52 >> 2];
            v2 = r2 * h2 + z2 * f2 + A2 * v2 + +g[e2 + 56 >> 2];
            g[b2 + 824 >> 2] = w2 * i2 + x2 * C2 + y2 * D2;
            g[b2 + 828 >> 2] = i2 * k2 + C2 * n2 + D2 * p2;
            g[b2 + 832 >> 2] = i2 * q2 + C2 * s2 + D2 * t2;
            g[b2 + 836 >> 2] = 0;
            g[b2 + 840 >> 2] = w2 * j2 + x2 * m2 + y2 * o2;
            g[b2 + 844 >> 2] = k2 * j2 + n2 * m2 + p2 * o2;
            g[b2 + 848 >> 2] = q2 * j2 + s2 * m2 + t2 * o2;
            g[b2 + 852 >> 2] = 0;
            g[b2 + 856 >> 2] = w2 * r2 + x2 * z2 + y2 * A2;
            g[b2 + 860 >> 2] = k2 * r2 + n2 * z2 + p2 * A2;
            g[b2 + 864 >> 2] = q2 * r2 + s2 * z2 + t2 * A2;
            g[b2 + 868 >> 2] = 0;
            g[b2 + 872 >> 2] = u2;
            g[b2 + 876 >> 2] = B2;
            g[b2 + 880 >> 2] = v2;
            g[b2 + 884 >> 2] = 0;
            v2 = +g[b2 + 52 >> 2];
            B2 = +g[d2 >> 2];
            u2 = +g[b2 + 68 >> 2];
            A2 = +g[d2 + 4 >> 2];
            t2 = +g[b2 + 84 >> 2];
            z2 = +g[d2 + 8 >> 2];
            s2 = +g[b2 + 56 >> 2];
            r2 = +g[b2 + 72 >> 2];
            q2 = +g[b2 + 88 >> 2];
            p2 = +g[b2 + 60 >> 2];
            n2 = +g[b2 + 76 >> 2];
            k2 = +g[b2 + 92 >> 2];
            y2 = +g[d2 + 16 >> 2];
            x2 = +g[d2 + 20 >> 2];
            w2 = +g[d2 + 24 >> 2];
            o2 = +g[d2 + 32 >> 2];
            m2 = +g[d2 + 36 >> 2];
            j2 = +g[d2 + 40 >> 2];
            D2 = +g[b2 + 100 >> 2];
            C2 = +g[b2 + 104 >> 2];
            i2 = +g[b2 + 108 >> 2];
            f2 = +g[d2 + 48 >> 2] + (B2 * D2 + A2 * C2 + z2 * i2);
            h2 = y2 * D2 + x2 * C2 + w2 * i2 + +g[d2 + 52 >> 2];
            i2 = o2 * D2 + m2 * C2 + j2 * i2 + +g[d2 + 56 >> 2];
            g[b2 + 888 >> 2] = v2 * B2 + u2 * A2 + t2 * z2;
            g[b2 + 892 >> 2] = B2 * s2 + A2 * r2 + z2 * q2;
            g[b2 + 896 >> 2] = B2 * p2 + A2 * n2 + z2 * k2;
            g[b2 + 900 >> 2] = 0;
            g[b2 + 904 >> 2] = v2 * y2 + u2 * x2 + t2 * w2;
            g[b2 + 908 >> 2] = s2 * y2 + r2 * x2 + q2 * w2;
            g[b2 + 912 >> 2] = p2 * y2 + n2 * x2 + k2 * w2;
            g[b2 + 916 >> 2] = 0;
            g[b2 + 920 >> 2] = v2 * o2 + u2 * m2 + t2 * j2;
            g[b2 + 924 >> 2] = s2 * o2 + r2 * m2 + q2 * j2;
            g[b2 + 928 >> 2] = p2 * o2 + n2 * m2 + k2 * j2;
            g[b2 + 932 >> 2] = 0;
            g[b2 + 936 >> 2] = f2;
            g[b2 + 940 >> 2] = h2;
            g[b2 + 944 >> 2] = i2;
            g[b2 + 948 >> 2] = 0;
            d2 = b2 + 856 | 0;
            e2 = b2 + 840 | 0;
          } else {
            o2 = +g[b2 + 52 >> 2];
            D2 = +g[d2 >> 2];
            n2 = +g[b2 + 68 >> 2];
            h2 = +g[d2 + 4 >> 2];
            m2 = +g[b2 + 84 >> 2];
            f2 = +g[d2 + 8 >> 2];
            z2 = +g[b2 + 56 >> 2];
            x2 = +g[b2 + 72 >> 2];
            v2 = +g[b2 + 88 >> 2];
            u2 = +g[b2 + 60 >> 2];
            s2 = +g[b2 + 76 >> 2];
            r2 = +g[b2 + 92 >> 2];
            A2 = +g[d2 + 16 >> 2];
            y2 = +g[d2 + 20 >> 2];
            w2 = +g[d2 + 24 >> 2];
            t2 = +g[d2 + 32 >> 2];
            k2 = +g[d2 + 36 >> 2];
            j2 = +g[d2 + 40 >> 2];
            C2 = +g[b2 + 100 >> 2];
            B2 = +g[b2 + 104 >> 2];
            p2 = +g[b2 + 108 >> 2];
            q2 = +g[d2 + 48 >> 2] + (D2 * C2 + h2 * B2 + f2 * p2);
            i2 = A2 * C2 + y2 * B2 + w2 * p2 + +g[d2 + 52 >> 2];
            p2 = t2 * C2 + k2 * B2 + j2 * p2 + +g[d2 + 56 >> 2];
            g[b2 + 824 >> 2] = o2 * D2 + n2 * h2 + m2 * f2;
            g[b2 + 828 >> 2] = D2 * z2 + h2 * x2 + f2 * v2;
            g[b2 + 832 >> 2] = D2 * u2 + h2 * s2 + f2 * r2;
            g[b2 + 836 >> 2] = 0;
            g[b2 + 840 >> 2] = o2 * A2 + n2 * y2 + m2 * w2;
            g[b2 + 844 >> 2] = z2 * A2 + x2 * y2 + v2 * w2;
            g[b2 + 848 >> 2] = u2 * A2 + s2 * y2 + r2 * w2;
            g[b2 + 852 >> 2] = 0;
            g[b2 + 856 >> 2] = o2 * t2 + n2 * k2 + m2 * j2;
            g[b2 + 860 >> 2] = z2 * t2 + x2 * k2 + v2 * j2;
            g[b2 + 864 >> 2] = u2 * t2 + s2 * k2 + r2 * j2;
            g[b2 + 868 >> 2] = 0;
            g[b2 + 872 >> 2] = q2;
            g[b2 + 876 >> 2] = i2;
            g[b2 + 880 >> 2] = p2;
            g[b2 + 884 >> 2] = 0;
            p2 = +g[b2 + 116 >> 2];
            i2 = +g[e2 >> 2];
            q2 = +g[b2 + 132 >> 2];
            j2 = +g[e2 + 4 >> 2];
            r2 = +g[b2 + 148 >> 2];
            k2 = +g[e2 + 8 >> 2];
            s2 = +g[b2 + 120 >> 2];
            t2 = +g[b2 + 136 >> 2];
            u2 = +g[b2 + 152 >> 2];
            v2 = +g[b2 + 124 >> 2];
            x2 = +g[b2 + 140 >> 2];
            z2 = +g[b2 + 156 >> 2];
            m2 = +g[e2 + 16 >> 2];
            n2 = +g[e2 + 20 >> 2];
            o2 = +g[e2 + 24 >> 2];
            w2 = +g[e2 + 32 >> 2];
            y2 = +g[e2 + 36 >> 2];
            A2 = +g[e2 + 40 >> 2];
            f2 = +g[b2 + 164 >> 2];
            h2 = +g[b2 + 168 >> 2];
            D2 = +g[b2 + 172 >> 2];
            B2 = +g[e2 + 48 >> 2] + (i2 * f2 + j2 * h2 + k2 * D2);
            C2 = m2 * f2 + n2 * h2 + o2 * D2 + +g[e2 + 52 >> 2];
            D2 = w2 * f2 + y2 * h2 + A2 * D2 + +g[e2 + 56 >> 2];
            g[b2 + 888 >> 2] = p2 * i2 + q2 * j2 + r2 * k2;
            g[b2 + 892 >> 2] = i2 * s2 + j2 * t2 + k2 * u2;
            g[b2 + 896 >> 2] = i2 * v2 + j2 * x2 + k2 * z2;
            g[b2 + 900 >> 2] = 0;
            g[b2 + 904 >> 2] = p2 * m2 + q2 * n2 + r2 * o2;
            g[b2 + 908 >> 2] = s2 * m2 + t2 * n2 + u2 * o2;
            g[b2 + 912 >> 2] = v2 * m2 + x2 * n2 + z2 * o2;
            g[b2 + 916 >> 2] = 0;
            g[b2 + 920 >> 2] = p2 * w2 + q2 * y2 + r2 * A2;
            g[b2 + 924 >> 2] = s2 * w2 + t2 * y2 + u2 * A2;
            g[b2 + 928 >> 2] = v2 * w2 + x2 * y2 + z2 * A2;
            g[b2 + 932 >> 2] = 0;
            g[b2 + 936 >> 2] = B2;
            g[b2 + 940 >> 2] = C2;
            g[b2 + 944 >> 2] = D2;
            g[b2 + 948 >> 2] = 0;
            d2 = b2 + 856 | 0;
            e2 = b2 + 840 | 0;
          }
          c[b2 + 968 >> 2] = c[b2 + 872 >> 2];
          c[b2 + 968 + 4 >> 2] = c[b2 + 872 + 4 >> 2];
          c[b2 + 968 + 8 >> 2] = c[b2 + 872 + 8 >> 2];
          c[b2 + 968 + 12 >> 2] = c[b2 + 872 + 12 >> 2];
          c[b2 + 984 >> 2] = c[b2 + 936 >> 2];
          c[b2 + 984 + 4 >> 2] = c[b2 + 936 + 4 >> 2];
          c[b2 + 984 + 8 >> 2] = c[b2 + 936 + 8 >> 2];
          c[b2 + 984 + 12 >> 2] = c[b2 + 936 + 12 >> 2];
          F2 = c[b2 + 824 >> 2] | 0;
          E2 = c[e2 >> 2] | 0;
          e2 = c[d2 >> 2] | 0;
          c[b2 + 952 >> 2] = F2;
          c[b2 + 956 >> 2] = E2;
          c[b2 + 960 >> 2] = e2;
          g[b2 + 964 >> 2] = 0;
          f2 = (c[l >> 2] = F2, +g[l >> 2]);
          h2 = (c[l >> 2] = E2, +g[l >> 2]);
          i2 = (c[l >> 2] = e2, +g[l >> 2]);
          if ((a[b2 + 180 >> 0] | 0) == 0 ? (a[b2 + 48 >> 0] | 0) == 0 : 0) {
            u2 = +g[b2 + 968 >> 2];
            A2 = u2 - +g[b2 + 984 >> 2];
            v2 = +g[b2 + 972 >> 2];
            C2 = v2 - +g[b2 + 988 >> 2];
            w2 = +g[b2 + 976 >> 2];
            D2 = w2 - +g[b2 + 992 >> 2];
            g[b2 + 1016 >> 2] = A2;
            g[b2 + 1020 >> 2] = C2;
            g[b2 + 1024 >> 2] = D2;
            g[b2 + 1028 >> 2] = 0;
            B2 = f2 * A2;
            x2 = h2 * C2;
            x2 = B2 + x2;
            B2 = i2 * D2;
            B2 = x2 + B2;
            x2 = f2 * B2;
            y2 = h2 * B2;
            z2 = i2 * B2;
            x2 = u2 + x2;
            y2 = v2 + y2;
            z2 = w2 + z2;
            F2 = b2 + 1e3 | 0;
            g[F2 >> 2] = x2;
            F2 = b2 + 1004 | 0;
            g[F2 >> 2] = y2;
            F2 = b2 + 1008 | 0;
            g[F2 >> 2] = z2;
            F2 = b2 + 1012 | 0;
            g[F2 >> 2] = 0;
            F2 = b2 + 1032 | 0;
            g[F2 >> 2] = B2;
            F2 = b2 + 828 | 0;
            E2 = b2 + 844 | 0;
            e2 = b2 + 860 | 0;
            B2 = +g[F2 >> 2];
            z2 = +g[E2 >> 2];
            y2 = +g[e2 >> 2];
            B2 = B2 * A2;
            z2 = z2 * C2;
            z2 = B2 + z2;
            y2 = y2 * D2;
            y2 = z2 + y2;
            e2 = b2 + 1036 | 0;
            g[e2 >> 2] = y2;
            e2 = b2 + 832 | 0;
            E2 = b2 + 848 | 0;
            F2 = b2 + 864 | 0;
            y2 = +g[e2 >> 2];
            z2 = +g[E2 >> 2];
            B2 = +g[F2 >> 2];
            A2 = y2 * A2;
            C2 = z2 * C2;
            C2 = A2 + C2;
            D2 = B2 * D2;
            D2 = C2 + D2;
            F2 = b2 + 1040 | 0;
            g[F2 >> 2] = D2;
            return;
          }
          u2 = +g[b2 + 968 >> 2];
          A2 = +g[b2 + 984 >> 2] - u2;
          v2 = +g[b2 + 972 >> 2];
          C2 = +g[b2 + 988 >> 2] - v2;
          w2 = +g[b2 + 976 >> 2];
          D2 = +g[b2 + 992 >> 2] - w2;
          g[b2 + 1016 >> 2] = A2;
          g[b2 + 1020 >> 2] = C2;
          g[b2 + 1024 >> 2] = D2;
          g[b2 + 1028 >> 2] = 0;
          B2 = f2 * A2;
          x2 = h2 * C2;
          x2 = B2 + x2;
          B2 = i2 * D2;
          B2 = x2 + B2;
          x2 = f2 * B2;
          y2 = h2 * B2;
          z2 = i2 * B2;
          x2 = u2 + x2;
          y2 = v2 + y2;
          z2 = w2 + z2;
          F2 = b2 + 1e3 | 0;
          g[F2 >> 2] = x2;
          F2 = b2 + 1004 | 0;
          g[F2 >> 2] = y2;
          F2 = b2 + 1008 | 0;
          g[F2 >> 2] = z2;
          F2 = b2 + 1012 | 0;
          g[F2 >> 2] = 0;
          F2 = b2 + 1032 | 0;
          g[F2 >> 2] = B2;
          F2 = b2 + 828 | 0;
          E2 = b2 + 844 | 0;
          e2 = b2 + 860 | 0;
          B2 = +g[F2 >> 2];
          z2 = +g[E2 >> 2];
          y2 = +g[e2 >> 2];
          B2 = B2 * A2;
          z2 = z2 * C2;
          z2 = B2 + z2;
          y2 = y2 * D2;
          y2 = z2 + y2;
          e2 = b2 + 1036 | 0;
          g[e2 >> 2] = y2;
          e2 = b2 + 832 | 0;
          E2 = b2 + 848 | 0;
          F2 = b2 + 864 | 0;
          y2 = +g[e2 >> 2];
          z2 = +g[E2 >> 2];
          B2 = +g[F2 >> 2];
          A2 = y2 * A2;
          C2 = z2 * C2;
          C2 = A2 + C2;
          D2 = B2 * D2;
          D2 = C2 + D2;
          F2 = b2 + 1040 | 0;
          g[F2 >> 2] = D2;
          return;
        }
        function Uc(b2, d2, e2, f2, h2, j2, k2, l2, m2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          var n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0;
          H2 = i;
          i = i + 32 | 0;
          c[H2 + 16 >> 2] = j2;
          c[H2 + 16 + 4 >> 2] = k2;
          c[H2 + 16 + 8 >> 2] = l2;
          c[H2 >> 2] = e2;
          c[H2 + 4 >> 2] = f2;
          c[H2 + 8 >> 2] = h2;
          if (!(+g[d2 + 52 >> 2] < +g[b2 + 12 >> 2])) {
            m2 = 0;
            i = H2;
            return m2 | 0;
          }
          w2 = +g[d2 + 36 >> 2];
          y2 = +g[d2 + 40 >> 2];
          x2 = +g[d2 + 44 >> 2];
          l2 = c[d2 + 48 >> 2] | 0;
          z2 = 1 / +G(+(w2 * w2 + y2 * y2 + x2 * x2));
          h2 = zi(H2) | 0;
          A2 = +g[d2 + 4 >> 2] - +g[h2 + 48 >> 2];
          B2 = +g[d2 + 8 >> 2] - +g[h2 + 52 >> 2];
          C2 = +g[d2 + 12 >> 2] - +g[h2 + 56 >> 2];
          h2 = zi(H2 + 16 | 0) | 0;
          D2 = +g[d2 + 20 >> 2] - +g[h2 + 48 >> 2];
          E2 = +g[d2 + 24 >> 2] - +g[h2 + 52 >> 2];
          F2 = +g[d2 + 28 >> 2] - +g[h2 + 56 >> 2];
          if (!f2)
            if (!e2) {
              n2 = 0;
              o2 = 0;
              r2 = 0;
              s2 = 0;
              p2 = 0;
              q2 = 0;
            } else {
              q2 = +g[e2 + 336 >> 2];
              r2 = +g[e2 + 340 >> 2];
              v2 = +g[e2 + 332 >> 2];
              n2 = C2 * q2 - B2 * r2;
              o2 = +g[e2 + 316 >> 2];
              r2 = A2 * r2 - C2 * v2;
              s2 = +g[e2 + 320 >> 2];
              p2 = +g[e2 + 324 >> 2];
              q2 = B2 * v2 - A2 * q2;
            }
          else {
            q2 = +g[f2 + 372 >> 2];
            r2 = +g[f2 + 376 >> 2];
            v2 = +g[f2 + 368 >> 2];
            n2 = C2 * q2 - B2 * r2;
            o2 = +g[f2 + 352 >> 2];
            r2 = A2 * r2 - C2 * v2;
            s2 = +g[f2 + 356 >> 2];
            p2 = +g[f2 + 360 >> 2];
            q2 = B2 * v2 - A2 * q2;
          }
          v2 = o2 + n2;
          u2 = s2 + r2;
          t2 = p2 + q2;
          if (!k2)
            if (!j2) {
              p2 = 0;
              q2 = 0;
              r2 = 0;
              s2 = 0;
              n2 = 0;
              o2 = 0;
            } else {
              o2 = +g[j2 + 336 >> 2];
              r2 = +g[j2 + 340 >> 2];
              I2 = +g[j2 + 332 >> 2];
              p2 = F2 * o2 - E2 * r2;
              q2 = +g[j2 + 316 >> 2];
              r2 = D2 * r2 - F2 * I2;
              s2 = +g[j2 + 320 >> 2];
              n2 = +g[j2 + 324 >> 2];
              o2 = E2 * I2 - D2 * o2;
            }
          else {
            o2 = +g[k2 + 372 >> 2];
            r2 = +g[k2 + 376 >> 2];
            I2 = +g[k2 + 368 >> 2];
            p2 = F2 * o2 - E2 * r2;
            q2 = +g[k2 + 352 >> 2];
            r2 = D2 * r2 - F2 * I2;
            s2 = +g[k2 + 356 >> 2];
            n2 = +g[k2 + 360 >> 2];
            o2 = E2 * I2 - D2 * o2;
          }
          q2 = v2 - (q2 + p2);
          u2 = u2 - (s2 + r2);
          t2 = t2 - (n2 + o2);
          v2 = x2 * z2 * t2 + (y2 * z2 * u2 + w2 * z2 * q2);
          I2 = +g[d2 + 52 >> 2] - +g[b2 + 12 >> 2];
          c[m2 + 4 >> 2] = c[H2 >> 2];
          c[m2 + 4 + 4 >> 2] = c[H2 + 4 >> 2];
          c[m2 + 4 + 8 >> 2] = c[H2 + 8 >> 2];
          c[m2 + 16 >> 2] = c[H2 + 16 >> 2];
          c[m2 + 16 + 4 >> 2] = c[H2 + 16 + 4 >> 2];
          c[m2 + 16 + 8 >> 2] = c[H2 + 16 + 8 >> 2];
          d2 = zi(H2) | 0;
          s2 = A2 * +g[d2 + 4 >> 2] + B2 * +g[d2 + 20 >> 2] + C2 * +g[d2 + 36 >> 2];
          r2 = A2 * +g[d2 + 8 >> 2] + B2 * +g[d2 + 24 >> 2] + C2 * +g[d2 + 40 >> 2];
          g[m2 + 28 >> 2] = A2 * +g[d2 >> 2] + B2 * +g[d2 + 16 >> 2] + C2 * +g[d2 + 32 >> 2];
          g[m2 + 32 >> 2] = s2;
          g[m2 + 36 >> 2] = r2;
          g[m2 + 40 >> 2] = 0;
          d2 = zi(H2 + 16 | 0) | 0;
          r2 = D2 * +g[d2 + 4 >> 2] + E2 * +g[d2 + 20 >> 2] + F2 * +g[d2 + 36 >> 2];
          s2 = D2 * +g[d2 + 8 >> 2] + E2 * +g[d2 + 24 >> 2] + F2 * +g[d2 + 40 >> 2];
          g[m2 + 44 >> 2] = D2 * +g[d2 >> 2] + E2 * +g[d2 + 16 >> 2] + F2 * +g[d2 + 32 >> 2];
          g[m2 + 48 >> 2] = r2;
          g[m2 + 52 >> 2] = s2;
          g[m2 + 56 >> 2] = 0;
          g[m2 + 164 >> 2] = A2;
          g[m2 + 168 >> 2] = B2;
          g[m2 + 172 >> 2] = C2;
          g[m2 + 176 >> 2] = 0;
          g[m2 + 180 >> 2] = D2;
          g[m2 + 184 >> 2] = E2;
          g[m2 + 188 >> 2] = F2;
          g[m2 + 192 >> 2] = 0;
          g[m2 + 60 >> 2] = 1;
          g[m2 + 64 >> 2] = 1;
          c[m2 + 156 >> 2] = 0;
          c[m2 + 160 >> 2] = 0;
          g[m2 + 68 >> 2] = 1;
          g[m2 + 72 >> 2] = w2 * z2 * I2;
          g[m2 + 76 >> 2] = y2 * z2 * I2;
          g[m2 + 80 >> 2] = x2 * z2 * I2;
          g[m2 + 84 >> 2] = 0;
          g[m2 + 196 >> 2] = w2 * z2;
          g[m2 + 200 >> 2] = y2 * z2;
          g[m2 + 204 >> 2] = x2 * z2;
          c[m2 + 208 >> 2] = l2;
          a[m2 + 152 >> 0] = 0;
          I2 = +g[b2 + 16 >> 2];
          g[m2 + 212 >> 2] = (t2 - x2 * z2 * v2) * (t2 - x2 * z2 * v2) + ((q2 - w2 * z2 * v2) * (q2 - w2 * z2 * v2) + (u2 - y2 * z2 * v2) * (u2 - y2 * z2 * v2)) < I2 * v2 * v2 * I2 ? 1 : I2;
          l2 = c[H2 + 4 >> 2] | 0;
          if (!l2) {
            l2 = c[H2 >> 2] | 0;
            if (!l2)
              o2 = 0;
            else
              o2 = +g[l2 + 128 >> 2];
          } else
            o2 = +g[l2 + 384 >> 2];
          if (!(a[22040] | 0)) {
            a[22040] = 1;
            l2 = 22572;
            h2 = l2 + 48 | 0;
            do {
              c[l2 >> 2] = 0;
              l2 = l2 + 4 | 0;
            } while ((l2 | 0) < (h2 | 0));
          }
          l2 = c[H2 + 4 >> 2] | 0;
          if (!l2) {
            e2 = c[H2 >> 2] | 0;
            e2 = (e2 | 0) == 0 ? 22572 : e2 + 180 | 0;
          } else
            e2 = l2 + 304 | 0;
          l2 = c[H2 + 16 + 4 >> 2] | 0;
          if (!l2) {
            l2 = c[H2 + 16 >> 2] | 0;
            if (!l2)
              n2 = 0;
            else
              n2 = +g[l2 + 128 >> 2];
          } else
            n2 = +g[l2 + 384 >> 2];
          if (!(a[22040] | 0)) {
            a[22040] = 1;
            l2 = 22572;
            h2 = l2 + 48 | 0;
            do {
              c[l2 >> 2] = 0;
              l2 = l2 + 4 | 0;
            } while ((l2 | 0) < (h2 | 0));
          }
          l2 = c[H2 + 16 + 4 >> 2] | 0;
          if (!l2) {
            l2 = c[H2 + 16 >> 2] | 0;
            l2 = (l2 | 0) == 0 ? 22572 : l2 + 180 | 0;
          } else
            l2 = l2 + 304 | 0;
          V2 = +g[m2 + 172 >> 2];
          N2 = +g[m2 + 168 >> 2];
          M2 = +g[m2 + 164 >> 2];
          U2 = +g[e2 >> 2];
          T2 = +g[e2 + 16 >> 2];
          S2 = +g[e2 + 32 >> 2];
          R2 = +g[e2 + 4 >> 2];
          Q2 = +g[e2 + 20 >> 2];
          P2 = +g[e2 + 36 >> 2];
          O2 = +g[e2 + 8 >> 2];
          L2 = +g[e2 + 24 >> 2];
          K2 = +g[e2 + 40 >> 2];
          B2 = +g[m2 + 188 >> 2];
          v2 = +g[m2 + 184 >> 2];
          w2 = +g[m2 + 180 >> 2];
          J2 = +g[l2 >> 2];
          p2 = +g[l2 + 16 >> 2];
          q2 = +g[l2 + 32 >> 2];
          r2 = +g[l2 + 4 >> 2];
          s2 = +g[l2 + 20 >> 2];
          t2 = +g[l2 + 36 >> 2];
          u2 = +g[l2 + 8 >> 2];
          I2 = +g[l2 + 24 >> 2];
          x2 = +g[l2 + 40 >> 2];
          D2 = o2 - ((U2 * 0 + T2 * -V2 + N2 * S2) * 0 + V2 * (R2 * 0 + Q2 * -V2 + N2 * P2) + (O2 * 0 + L2 * -V2 + N2 * K2) * -N2) + (n2 - ((J2 * 0 + p2 * -B2 + v2 * q2) * 0 + B2 * (r2 * 0 + s2 * -B2 + v2 * t2) + (u2 * 0 + I2 * -B2 + v2 * x2) * -v2));
          F2 = 0 - ((U2 * 0 + T2 * -V2 + N2 * S2) * -V2 + (R2 * 0 + Q2 * -V2 + N2 * P2) * 0 + M2 * (O2 * 0 + L2 * -V2 + N2 * K2)) + (0 - ((J2 * 0 + p2 * -B2 + v2 * q2) * -B2 + (r2 * 0 + s2 * -B2 + v2 * t2) * 0 + w2 * (u2 * 0 + I2 * -B2 + v2 * x2)));
          y2 = 0 - (N2 * (U2 * 0 + T2 * -V2 + N2 * S2) + (R2 * 0 + Q2 * -V2 + N2 * P2) * -M2 + (O2 * 0 + L2 * -V2 + N2 * K2) * 0) + (0 - (v2 * (J2 * 0 + p2 * -B2 + v2 * q2) + (r2 * 0 + s2 * -B2 + v2 * t2) * -w2 + (u2 * 0 + I2 * -B2 + v2 * x2) * 0));
          E2 = 0 - ((V2 * U2 + T2 * 0 + S2 * -M2) * 0 + V2 * (V2 * R2 + Q2 * 0 + P2 * -M2) + (V2 * O2 + L2 * 0 + K2 * -M2) * -N2) + (0 - ((B2 * J2 + p2 * 0 + q2 * -w2) * 0 + B2 * (B2 * r2 + s2 * 0 + t2 * -w2) + (B2 * u2 + I2 * 0 + x2 * -w2) * -v2));
          C2 = o2 - ((V2 * U2 + T2 * 0 + S2 * -M2) * -V2 + (V2 * R2 + Q2 * 0 + P2 * -M2) * 0 + M2 * (V2 * O2 + L2 * 0 + K2 * -M2)) + (n2 - ((B2 * J2 + p2 * 0 + q2 * -w2) * -B2 + (B2 * r2 + s2 * 0 + t2 * -w2) * 0 + w2 * (B2 * u2 + I2 * 0 + x2 * -w2)));
          z2 = 0 - (N2 * (V2 * U2 + T2 * 0 + S2 * -M2) + (V2 * R2 + Q2 * 0 + P2 * -M2) * -M2 + (V2 * O2 + L2 * 0 + K2 * -M2) * 0) + (0 - (v2 * (B2 * J2 + p2 * 0 + q2 * -w2) + (B2 * r2 + s2 * 0 + t2 * -w2) * -w2 + (B2 * u2 + I2 * 0 + x2 * -w2) * 0));
          A2 = 0 - ((U2 * -N2 + M2 * T2 + S2 * 0) * 0 + V2 * (R2 * -N2 + M2 * Q2 + P2 * 0) + (O2 * -N2 + M2 * L2 + K2 * 0) * -N2) + (0 - ((J2 * -v2 + w2 * p2 + q2 * 0) * 0 + B2 * (r2 * -v2 + w2 * s2 + t2 * 0) + (u2 * -v2 + w2 * I2 + x2 * 0) * -v2));
          B2 = 0 - ((U2 * -N2 + M2 * T2 + S2 * 0) * -V2 + (R2 * -N2 + M2 * Q2 + P2 * 0) * 0 + M2 * (O2 * -N2 + M2 * L2 + K2 * 0)) + (0 - ((J2 * -v2 + w2 * p2 + q2 * 0) * -B2 + (r2 * -v2 + w2 * s2 + t2 * 0) * 0 + w2 * (u2 * -v2 + w2 * I2 + x2 * 0)));
          x2 = o2 - (N2 * (U2 * -N2 + M2 * T2 + S2 * 0) + (R2 * -N2 + M2 * Q2 + P2 * 0) * -M2 + (O2 * -N2 + M2 * L2 + K2 * 0) * 0) + (n2 - (v2 * (J2 * -v2 + w2 * p2 + q2 * 0) + (r2 * -v2 + w2 * s2 + t2 * 0) * -w2 + (u2 * -v2 + w2 * I2 + x2 * 0) * 0));
          I2 = 1 / (y2 * (B2 * E2 - C2 * A2) + (D2 * (C2 * x2 - z2 * B2) + F2 * (z2 * A2 - x2 * E2)));
          g[m2 + 104 >> 2] = (C2 * x2 - z2 * B2) * I2;
          g[m2 + 108 >> 2] = (B2 * y2 - x2 * F2) * I2;
          g[m2 + 112 >> 2] = (z2 * F2 - C2 * y2) * I2;
          g[m2 + 116 >> 2] = 0;
          g[m2 + 120 >> 2] = (z2 * A2 - x2 * E2) * I2;
          g[m2 + 124 >> 2] = (x2 * D2 - A2 * y2) * I2;
          g[m2 + 128 >> 2] = (E2 * y2 - z2 * D2) * I2;
          g[m2 + 132 >> 2] = 0;
          g[m2 + 136 >> 2] = (B2 * E2 - C2 * A2) * I2;
          g[m2 + 140 >> 2] = (A2 * F2 - B2 * D2) * I2;
          g[m2 + 144 >> 2] = (C2 * D2 - E2 * F2) * I2;
          g[m2 + 148 >> 2] = 0;
          m2 = 1;
          i = H2;
          return m2 | 0;
        }
        function Vc(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0;
          s2 = i;
          i = i + 752 | 0;
          c[s2 + 136 + 8 >> 2] = 0;
          c[s2 + 136 + 12 >> 2] = -1;
          c[s2 + 136 + 16 >> 2] = 1065353216;
          c[s2 + 136 + 20 >> 2] = 1065353216;
          c[s2 + 136 + 24 >> 2] = 1065353216;
          g[s2 + 136 + 28 >> 2] = 0;
          c[s2 + 136 >> 2] = 8368;
          c[s2 + 136 + 4 >> 2] = 8;
          g[s2 + 136 + 32 >> 2] = 0;
          g[s2 + 136 + 48 >> 2] = 0;
          q2 = c[e2 + 4 >> 2] | 0;
          r2 = c[e2 + 12 >> 2] | 0;
          h2 = c[q2 + 4 >> 2] | 0;
          if ((h2 | 0) < 20) {
            c[s2 + 568 >> 2] = 3928;
            c[s2 + 568 + 168 >> 2] = 0;
            g[s2 + 568 + 172 >> 2] = 0;
            c[s2 + 568 + 164 >> 2] = c[f2 + 4 >> 2];
            g[s2 + 208 + 308 >> 2] = 9999999747378752e-20;
            a[s2 + 208 + 332 >> 0] = 0;
            c[s2 + 192 >> 2] = 8940;
            c[s2 + 192 + 4 >> 2] = s2 + 208;
            c[s2 + 192 + 8 >> 2] = s2 + 136;
            c[s2 + 192 + 12 >> 2] = q2;
            c[s2 + 120 >> 2] = 8784;
            c[s2 + 120 + 4 >> 2] = s2 + 208;
            c[s2 + 120 + 8 >> 2] = s2 + 136;
            c[s2 + 120 + 12 >> 2] = q2;
            q2 = (c[f2 + 16 >> 2] & 8 | 0) == 0 ? s2 + 192 | 0 : s2 + 120 | 0;
            if ((Db[c[(c[q2 >> 2] | 0) + 8 >> 2] & 3](q2, b2, d2, r2, r2, s2 + 568 | 0) | 0 ? (j2 = s2 + 568 + 132 | 0, k2 = +g[j2 >> 2], l2 = +g[s2 + 568 + 136 >> 2], m2 = +g[s2 + 568 + 140 >> 2], k2 * k2 + l2 * l2 + m2 * m2 > 9999999747378752e-20) : 0) ? (n2 = +g[s2 + 568 + 164 >> 2], n2 < +g[f2 + 4 >> 2]) : 0) {
              p2 = 1 / +G(+(k2 * k2 + l2 * l2 + m2 * m2));
              g[j2 >> 2] = k2 * p2;
              g[s2 + 568 + 136 >> 2] = l2 * p2;
              g[s2 + 568 + 140 >> 2] = m2 * p2;
              c[s2 >> 2] = c[e2 + 8 >> 2];
              c[s2 + 4 >> 2] = 0;
              c[s2 + 8 >> 2] = c[j2 >> 2];
              c[s2 + 8 + 4 >> 2] = c[j2 + 4 >> 2];
              c[s2 + 8 + 8 >> 2] = c[j2 + 8 >> 2];
              c[s2 + 8 + 12 >> 2] = c[j2 + 12 >> 2];
              g[s2 + 24 >> 2] = n2;
              +Kb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, s2, 1);
            }
            i = s2;
            return;
          }
          if ((h2 + -21 | 0) >>> 0 >= 9) {
            if ((h2 | 0) != 31) {
              i = s2;
              return;
            }
            h2 = c[q2 + 68 >> 2] | 0;
            e2 = c[e2 + 8 >> 2] | 0;
            c[s2 + 568 >> 2] = 5756;
            c[s2 + 568 + 4 >> 2] = e2;
            c[s2 + 568 + 8 >> 2] = q2;
            c[s2 + 568 + 12 >> 2] = r2;
            c[s2 + 568 + 16 >> 2] = b2;
            c[s2 + 568 + 20 >> 2] = d2;
            c[s2 + 568 + 24 >> 2] = f2;
            if (!h2) {
              j2 = c[q2 + 20 >> 2] | 0;
              if ((j2 | 0) > 0) {
                h2 = 0;
                do {
                  Hf(s2 + 568 | 0, h2);
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) < (j2 | 0));
              }
            } else {
              k2 = +g[r2 + 48 >> 2];
              B2 = +g[b2 + 48 >> 2] - k2;
              m2 = +g[r2 + 52 >> 2];
              A2 = +g[b2 + 52 >> 2] - m2;
              o2 = +g[r2 + 56 >> 2];
              z2 = +g[b2 + 56 >> 2] - o2;
              y2 = +g[r2 >> 2];
              x2 = +g[r2 + 16 >> 2];
              w2 = +g[r2 + 32 >> 2];
              v2 = +g[r2 + 4 >> 2];
              u2 = +g[r2 + 20 >> 2];
              t2 = +g[r2 + 36 >> 2];
              l2 = +g[r2 + 8 >> 2];
              n2 = +g[r2 + 24 >> 2];
              p2 = +g[r2 + 40 >> 2];
              g[s2 + 208 >> 2] = B2 * y2 + A2 * x2 + z2 * w2;
              g[s2 + 208 + 4 >> 2] = B2 * v2 + A2 * u2 + z2 * t2;
              g[s2 + 208 + 8 >> 2] = B2 * l2 + A2 * n2 + z2 * p2;
              g[s2 + 208 + 12 >> 2] = 0;
              k2 = +g[d2 + 48 >> 2] - k2;
              m2 = +g[d2 + 52 >> 2] - m2;
              o2 = +g[d2 + 56 >> 2] - o2;
              g[s2 + 192 >> 2] = k2 * y2 + m2 * x2 + o2 * w2;
              g[s2 + 192 + 4 >> 2] = k2 * v2 + m2 * u2 + o2 * t2;
              g[s2 + 192 + 8 >> 2] = k2 * l2 + m2 * n2 + o2 * p2;
              g[s2 + 192 + 12 >> 2] = 0;
              Me(c[h2 >> 2] | 0, s2 + 208 | 0, s2 + 192 | 0, s2 + 568 | 0);
            }
            i = s2;
            return;
          }
          E2 = +g[r2 >> 2];
          D2 = +g[r2 + 16 >> 2];
          n2 = +g[r2 + 32 >> 2];
          C2 = +g[r2 + 4 >> 2];
          t2 = +g[r2 + 20 >> 2];
          o2 = +g[r2 + 36 >> 2];
          x2 = +g[r2 + 8 >> 2];
          z2 = +g[r2 + 24 >> 2];
          B2 = +g[r2 + 40 >> 2];
          u2 = -+g[r2 + 48 >> 2];
          v2 = -+g[r2 + 52 >> 2];
          w2 = -+g[r2 + 56 >> 2];
          A2 = +g[b2 + 48 >> 2];
          y2 = +g[b2 + 52 >> 2];
          m2 = +g[b2 + 56 >> 2];
          k2 = E2 * u2 + D2 * v2 + n2 * w2 + (E2 * A2 + D2 * y2 + n2 * m2);
          l2 = C2 * u2 + t2 * v2 + o2 * w2 + (C2 * A2 + t2 * y2 + o2 * m2);
          m2 = x2 * u2 + z2 * v2 + B2 * w2 + (x2 * A2 + z2 * y2 + B2 * m2);
          g[s2 + 120 >> 2] = k2;
          g[s2 + 120 + 4 >> 2] = l2;
          g[s2 + 120 + 8 >> 2] = m2;
          g[s2 + 120 + 12 >> 2] = 0;
          y2 = +g[d2 + 48 >> 2];
          A2 = +g[d2 + 52 >> 2];
          p2 = +g[d2 + 56 >> 2];
          n2 = E2 * u2 + D2 * v2 + n2 * w2 + (E2 * y2 + D2 * A2 + n2 * p2);
          o2 = C2 * u2 + t2 * v2 + o2 * w2 + (C2 * y2 + t2 * A2 + o2 * p2);
          p2 = x2 * u2 + z2 * v2 + B2 * w2 + (x2 * y2 + z2 * A2 + B2 * p2);
          if ((c[q2 + 4 >> 2] | 0) == 21) {
            h2 = c[e2 + 8 >> 2] | 0;
            e2 = c[f2 + 16 >> 2] | 0;
            c[s2 + 4 >> 2] = c[s2 + 120 >> 2];
            c[s2 + 4 + 4 >> 2] = c[s2 + 120 + 4 >> 2];
            c[s2 + 4 + 8 >> 2] = c[s2 + 120 + 8 >> 2];
            c[s2 + 4 + 12 >> 2] = c[s2 + 120 + 12 >> 2];
            g[s2 + 20 >> 2] = n2;
            g[s2 + 24 >> 2] = o2;
            g[s2 + 28 >> 2] = p2;
            g[s2 + 32 >> 2] = 0;
            c[s2 + 36 >> 2] = e2;
            g[s2 + 40 >> 2] = 1;
            c[s2 >> 2] = 5708;
            c[s2 + 44 >> 2] = f2;
            c[s2 + 48 >> 2] = h2;
            c[s2 + 52 >> 2] = q2;
            c[s2 + 56 >> 2] = c[r2 >> 2];
            c[s2 + 56 + 4 >> 2] = c[r2 + 4 >> 2];
            c[s2 + 56 + 8 >> 2] = c[r2 + 8 >> 2];
            c[s2 + 56 + 12 >> 2] = c[r2 + 12 >> 2];
            c[s2 + 72 >> 2] = c[r2 + 16 >> 2];
            c[s2 + 72 + 4 >> 2] = c[r2 + 16 + 4 >> 2];
            c[s2 + 72 + 8 >> 2] = c[r2 + 16 + 8 >> 2];
            c[s2 + 72 + 12 >> 2] = c[r2 + 16 + 12 >> 2];
            c[s2 + 88 >> 2] = c[r2 + 32 >> 2];
            c[s2 + 88 + 4 >> 2] = c[r2 + 32 + 4 >> 2];
            c[s2 + 88 + 8 >> 2] = c[r2 + 32 + 8 >> 2];
            c[s2 + 88 + 12 >> 2] = c[r2 + 32 + 12 >> 2];
            c[s2 + 104 >> 2] = c[r2 + 48 >> 2];
            c[s2 + 104 + 4 >> 2] = c[r2 + 48 + 4 >> 2];
            c[s2 + 104 + 8 >> 2] = c[r2 + 48 + 8 >> 2];
            c[s2 + 104 + 12 >> 2] = c[r2 + 48 + 12 >> 2];
            c[s2 + 40 >> 2] = c[f2 + 4 >> 2];
            h2 = c[q2 + 52 >> 2] | 0;
            c[s2 + 192 >> 2] = 6760;
            c[s2 + 192 + 4 >> 2] = h2;
            c[s2 + 192 + 8 >> 2] = s2;
            h2 = c[q2 + 56 >> 2] | 0;
            c[s2 + 568 >> 2] = 0;
            c[s2 + 568 + 4 >> 2] = 0;
            c[s2 + 568 + 8 >> 2] = 0;
            c[s2 + 568 + 12 >> 2] = 0;
            c[s2 + 208 >> 2] = 0;
            c[s2 + 208 + 4 >> 2] = 0;
            c[s2 + 208 + 8 >> 2] = 0;
            c[s2 + 208 + 12 >> 2] = 0;
            if (!(a[h2 + 60 >> 0] | 0))
              Ae(h2, s2 + 192 | 0, s2 + 120 | 0, n2, o2, p2, s2 + 568 | 0, s2 + 208 | 0);
            else
              ke(h2, s2 + 192 | 0, s2 + 120 | 0, n2, o2, p2, s2 + 568 | 0, s2 + 208 | 0, c[h2 + 56 >> 2] | 0);
          } else {
            e2 = c[e2 + 8 >> 2] | 0;
            d2 = c[f2 + 16 >> 2] | 0;
            g[s2 + 568 + 4 >> 2] = k2;
            g[s2 + 568 + 8 >> 2] = l2;
            g[s2 + 568 + 12 >> 2] = m2;
            g[s2 + 568 + 16 >> 2] = 0;
            g[s2 + 568 + 20 >> 2] = n2;
            g[s2 + 568 + 24 >> 2] = o2;
            g[s2 + 568 + 28 >> 2] = p2;
            g[s2 + 568 + 32 >> 2] = 0;
            c[s2 + 568 + 36 >> 2] = d2;
            g[s2 + 568 + 40 >> 2] = 1;
            c[s2 + 568 >> 2] = 5732;
            c[s2 + 568 + 44 >> 2] = f2;
            c[s2 + 568 + 48 >> 2] = e2;
            c[s2 + 568 + 52 >> 2] = q2;
            c[s2 + 568 + 56 >> 2] = c[r2 >> 2];
            c[s2 + 568 + 56 + 4 >> 2] = c[r2 + 4 >> 2];
            c[s2 + 568 + 56 + 8 >> 2] = c[r2 + 8 >> 2];
            c[s2 + 568 + 56 + 12 >> 2] = c[r2 + 12 >> 2];
            c[s2 + 568 + 72 >> 2] = c[r2 + 16 >> 2];
            c[s2 + 568 + 72 + 4 >> 2] = c[r2 + 16 + 4 >> 2];
            c[s2 + 568 + 72 + 8 >> 2] = c[r2 + 16 + 8 >> 2];
            c[s2 + 568 + 72 + 12 >> 2] = c[r2 + 16 + 12 >> 2];
            c[s2 + 568 + 88 >> 2] = c[r2 + 32 >> 2];
            c[s2 + 568 + 88 + 4 >> 2] = c[r2 + 32 + 4 >> 2];
            c[s2 + 568 + 88 + 8 >> 2] = c[r2 + 32 + 8 >> 2];
            c[s2 + 568 + 88 + 12 >> 2] = c[r2 + 32 + 12 >> 2];
            c[s2 + 568 + 104 >> 2] = c[r2 + 48 >> 2];
            c[s2 + 568 + 104 + 4 >> 2] = c[r2 + 48 + 4 >> 2];
            c[s2 + 568 + 104 + 8 >> 2] = c[r2 + 48 + 8 >> 2];
            c[s2 + 568 + 104 + 12 >> 2] = c[r2 + 48 + 12 >> 2];
            c[s2 + 568 + 40 >> 2] = c[f2 + 4 >> 2];
            g[s2 + 208 >> 2] = k2;
            g[s2 + 208 + 4 >> 2] = l2;
            g[s2 + 208 + 8 >> 2] = m2;
            g[s2 + 208 + 12 >> 2] = 0;
            if (n2 < k2)
              g[s2 + 208 >> 2] = n2;
            if (o2 < l2)
              g[s2 + 208 + 4 >> 2] = o2;
            if (p2 < m2)
              g[s2 + 208 + 8 >> 2] = p2;
            g[s2 + 192 >> 2] = k2;
            g[s2 + 192 + 4 >> 2] = l2;
            g[s2 + 192 + 8 >> 2] = m2;
            g[s2 + 192 + 12 >> 2] = 0;
            if (k2 < n2)
              g[s2 + 192 >> 2] = n2;
            if (l2 < o2)
              g[s2 + 192 + 4 >> 2] = o2;
            if (m2 < p2)
              g[s2 + 192 + 8 >> 2] = p2;
            Yb[c[(c[q2 >> 2] | 0) + 64 >> 2] & 127](q2, s2 + 568 | 0, s2 + 208 | 0, s2 + 192 | 0);
          }
          i = s2;
          return;
        }
        function Wc(d2, e2) {
          d2 = d2 | 0;
          e2 = +e2;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0;
          C2 = i;
          i = i + 480 | 0;
          f2 = c[d2 + 84 >> 2] | 0;
          if (f2 | 0)
            jb[f2 & 31](d2, e2);
          jb[c[(c[d2 >> 2] | 0) + 140 >> 2] & 31](d2, e2);
          g[d2 + 28 >> 2] = e2;
          c[d2 + 32 >> 2] = 0;
          c[d2 + 48 >> 2] = ob[c[(c[d2 >> 2] | 0) + 20 >> 2] & 127](d2) | 0;
          f2 = c[d2 + 316 >> 2] | 0;
          if ((c[d2 + 308 >> 2] | 0) > 0) {
            h2 = 0;
            do {
              t2 = c[d2 + 24 >> 2] | 0;
              mb[c[(c[t2 >> 2] | 0) + 16 >> 2] & 127](t2, c[f2 + (h2 << 2) >> 2] | 0);
              h2 = h2 + 1 | 0;
              f2 = c[d2 + 316 >> 2] | 0;
            } while ((h2 | 0) < (c[d2 + 308 >> 2] | 0));
          }
          if (f2 | 0) {
            if (a[d2 + 320 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[f2 + -4 >> 2] | 0);
            }
            c[d2 + 316 >> 2] = 0;
          }
          a[d2 + 320 >> 0] = 1;
          c[d2 + 316 >> 2] = 0;
          c[d2 + 308 >> 2] = 0;
          c[d2 + 312 >> 2] = 0;
          a:
            do
              if ((c[d2 + 232 >> 2] | 0) > 0) {
                r2 = C2 + 408 + 48 | 0;
                s2 = C2 + 312 + 44 | 0;
                p2 = 0;
                while (1) {
                  t2 = c[(c[d2 + 240 >> 2] | 0) + (p2 << 2) >> 2] | 0;
                  g[t2 + 264 >> 2] = 1;
                  switch (c[t2 + 216 >> 2] | 0) {
                    case 2:
                    case 5:
                      break;
                    default:
                      if (((((c[t2 + 204 >> 2] & 3 | 0) == 0 ? (Mg(t2 + 4 | 0, +g[t2 + 352 >> 2], +g[t2 + 356 >> 2], +g[t2 + 360 >> 2], t2 + 368 | 0, e2, C2 + 408 | 0), B2 = +g[r2 >> 2], u2 = B2 - +g[t2 + 52 >> 2], v2 = +g[C2 + 408 + 52 >> 2], w2 = v2 - +g[t2 + 56 >> 2], x2 = +g[C2 + 408 + 56 >> 2], y2 = x2 - +g[t2 + 60 >> 2], a[d2 + 44 >> 0] | 0) : 0) ? (o2 = +g[t2 + 272 >> 2], o2 * o2 != 0 ? o2 * o2 < u2 * u2 + w2 * w2 + y2 * y2 : 0) : 0) ? (c[(c[t2 + 192 >> 2] | 0) + 4 >> 2] | 0) < 20 : 0) ? (c[5872] = (c[5872] | 0) + 1, k2 = c[d2 + 68 >> 2] | 0, k2 = ob[c[(c[k2 >> 2] | 0) + 36 >> 2] & 127](k2) | 0, q2 = c[d2 + 24 >> 2] | 0, g[C2 + 312 + 4 >> 2] = 1, b[C2 + 312 + 8 >> 1] = 1, b[C2 + 312 + 10 >> 1] = -1, c[C2 + 312 + 12 >> 2] = c[t2 + 52 >> 2], c[C2 + 312 + 12 + 4 >> 2] = c[t2 + 52 + 4 >> 2], c[C2 + 312 + 12 + 8 >> 2] = c[t2 + 52 + 8 >> 2], c[C2 + 312 + 12 + 12 >> 2] = c[t2 + 52 + 12 >> 2], c[C2 + 312 + 28 >> 2] = c[r2 >> 2], c[C2 + 312 + 28 + 4 >> 2] = c[r2 + 4 >> 2], c[C2 + 312 + 28 + 8 >> 2] = c[r2 + 8 >> 2], c[C2 + 312 + 28 + 12 >> 2] = c[r2 + 12 >> 2], c[C2 + 312 + 76 >> 2] = 0, c[C2 + 312 >> 2] = 4872, c[C2 + 312 + 80 >> 2] = t2, c[C2 + 312 + 88 >> 2] = k2, c[C2 + 312 + 92 >> 2] = q2, q2 = c[t2 + 268 >> 2] | 0, c[C2 + 256 + 8 >> 2] = 0, c[C2 + 256 + 12 >> 2] = -1, c[C2 + 256 + 16 >> 2] = 1065353216, c[C2 + 256 + 20 >> 2] = 1065353216, c[C2 + 256 + 24 >> 2] = 1065353216, g[C2 + 256 + 28 >> 2] = 0, c[C2 + 256 >> 2] = 8368, c[C2 + 256 + 4 >> 2] = 8, c[C2 + 256 + 32 >> 2] = q2, c[C2 + 256 + 48 >> 2] = q2, c[C2 + 312 + 84 >> 2] = c[d2 + 56 >> 2], q2 = c[(c[t2 + 188 >> 2] | 0) + 4 >> 2] | 0, b[C2 + 312 + 8 >> 1] = q2, b[C2 + 312 + 10 >> 1] = q2 >>> 16, c[C2 + 192 + 48 >> 2] = c[r2 >> 2], c[C2 + 192 + 48 + 4 >> 2] = c[r2 + 4 >> 2], c[C2 + 192 + 48 + 8 >> 2] = c[r2 + 8 >> 2], c[C2 + 192 + 48 + 12 >> 2] = c[r2 + 12 >> 2], c[C2 + 192 >> 2] = c[t2 + 4 >> 2], c[C2 + 192 + 4 >> 2] = c[t2 + 4 + 4 >> 2], c[C2 + 192 + 8 >> 2] = c[t2 + 4 + 8 >> 2], c[C2 + 192 + 12 >> 2] = c[t2 + 4 + 12 >> 2], c[C2 + 192 + 16 >> 2] = c[t2 + 20 >> 2], c[C2 + 192 + 16 + 4 >> 2] = c[t2 + 20 + 4 >> 2], c[C2 + 192 + 16 + 8 >> 2] = c[t2 + 20 + 8 >> 2], c[C2 + 192 + 16 + 12 >> 2] = c[t2 + 20 + 12 >> 2], c[C2 + 192 + 32 >> 2] = c[t2 + 36 >> 2], c[C2 + 192 + 32 + 4 >> 2] = c[t2 + 36 + 4 >> 2], c[C2 + 192 + 32 + 8 >> 2] = c[t2 + 36 + 8 >> 2], c[C2 + 192 + 32 + 12 >> 2] = c[t2 + 36 + 12 >> 2], Hd(d2, C2 + 256 | 0, t2 + 4 | 0, C2 + 192 | 0, C2 + 312 | 0, 0), z2 = +g[C2 + 312 + 4 >> 2], z2 < 1) : 0) {
                        j2 = z2 * (B2 - +g[t2 + 52 >> 2]);
                        l2 = z2 * (v2 - +g[t2 + 56 >> 2]);
                        n2 = z2 * (x2 - +g[t2 + 60 >> 2]);
                        o2 = -(l2 * +g[C2 + 312 + 48 >> 2]) - j2 * +g[s2 >> 2] - n2 * +g[C2 + 312 + 52 >> 2];
                        q2 = c[d2 + 24 >> 2] | 0;
                        q2 = yb[c[(c[q2 >> 2] | 0) + 12 >> 2] & 63](q2, t2, c[C2 + 312 + 76 >> 2] | 0) | 0;
                        h2 = c[d2 + 308 >> 2] | 0;
                        if ((h2 | 0) == (c[d2 + 312 >> 2] | 0) ? (A2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (A2 | 0)) : 0) {
                          if (!A2)
                            f2 = 0;
                          else {
                            c[6324] = (c[6324] | 0) + 1;
                            f2 = ic((A2 << 2 | 3) + 16 | 0) | 0;
                            if (!f2)
                              f2 = 0;
                            else {
                              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                              f2 = f2 + 4 + 15 & -16;
                            }
                            h2 = c[d2 + 308 >> 2] | 0;
                          }
                          if ((h2 | 0) > 0) {
                            k2 = 0;
                            do {
                              c[f2 + (k2 << 2) >> 2] = c[(c[d2 + 316 >> 2] | 0) + (k2 << 2) >> 2];
                              k2 = k2 + 1 | 0;
                            } while ((k2 | 0) != (h2 | 0));
                          }
                          k2 = c[d2 + 316 >> 2] | 0;
                          if (k2) {
                            if (a[d2 + 320 >> 0] | 0) {
                              c[6325] = (c[6325] | 0) + 1;
                              Rc(c[k2 + -4 >> 2] | 0);
                              h2 = c[d2 + 308 >> 2] | 0;
                            }
                            c[d2 + 316 >> 2] = 0;
                          }
                          a[d2 + 320 >> 0] = 1;
                          c[d2 + 316 >> 2] = f2;
                          c[d2 + 312 >> 2] = A2;
                          f2 = h2;
                        } else
                          f2 = h2;
                        c[(c[d2 + 316 >> 2] | 0) + (f2 << 2) >> 2] = q2;
                        c[d2 + 308 >> 2] = f2 + 1;
                        m2 = j2 + +g[t2 + 52 >> 2];
                        l2 = l2 + +g[t2 + 56 >> 2];
                        j2 = n2 + +g[t2 + 60 >> 2];
                        f2 = c[C2 + 312 + 76 >> 2] | 0;
                        N2 = +g[f2 + 4 >> 2];
                        M2 = +g[f2 + 20 >> 2];
                        L2 = +g[f2 + 36 >> 2];
                        K2 = +g[f2 + 8 >> 2];
                        J2 = +g[f2 + 24 >> 2];
                        I2 = +g[f2 + 40 >> 2];
                        H2 = +g[f2 + 12 >> 2];
                        F2 = +g[f2 + 28 >> 2];
                        D2 = +g[f2 + 44 >> 2];
                        G2 = -+g[f2 + 52 >> 2];
                        E2 = -+g[f2 + 56 >> 2];
                        n2 = -+g[f2 + 60 >> 2];
                        c[C2 >> 2] = 0;
                        c[C2 + 4 >> 2] = 0;
                        c[C2 + 8 >> 2] = 0;
                        c[C2 + 12 >> 2] = 0;
                        g[C2 + 16 >> 2] = m2 * N2 + l2 * M2 + j2 * L2 + (N2 * G2 + M2 * E2 + L2 * n2);
                        g[C2 + 20 >> 2] = m2 * K2 + l2 * J2 + j2 * I2 + (K2 * G2 + J2 * E2 + I2 * n2);
                        g[C2 + 24 >> 2] = m2 * H2 + l2 * F2 + j2 * D2 + (H2 * G2 + F2 * E2 + D2 * n2);
                        g[C2 + 28 >> 2] = 0;
                        c[C2 + 64 >> 2] = c[s2 >> 2];
                        c[C2 + 64 + 4 >> 2] = c[s2 + 4 >> 2];
                        c[C2 + 64 + 8 >> 2] = c[s2 + 8 >> 2];
                        c[C2 + 64 + 12 >> 2] = c[s2 + 12 >> 2];
                        g[C2 + 80 >> 2] = o2;
                        c[C2 + 84 >> 2] = 0;
                        c[C2 + 84 + 4 >> 2] = 0;
                        c[C2 + 84 + 8 >> 2] = 0;
                        c[C2 + 84 + 12 >> 2] = 0;
                        f2 = C2 + 116 | 0;
                        h2 = f2 + 44 | 0;
                        do {
                          c[f2 >> 2] = 0;
                          f2 = f2 + 4 | 0;
                        } while ((f2 | 0) < (h2 | 0));
                        k2 = Le(q2, C2) | 0;
                        g[q2 + 4 + (k2 * 192 | 0) + 96 >> 2] = 0;
                        N2 = +g[t2 + 224 >> 2] * +g[(c[C2 + 312 + 76 >> 2] | 0) + 224 >> 2];
                        N2 = N2 < -10 ? -10 : N2;
                        g[q2 + 4 + (k2 * 192 | 0) + 84 >> 2] = N2 > 10 ? 10 : N2;
                        c[q2 + 4 + (k2 * 192 | 0) + 48 >> 2] = c[t2 + 52 >> 2];
                        c[q2 + 4 + (k2 * 192 | 0) + 48 + 4 >> 2] = c[t2 + 52 + 4 >> 2];
                        c[q2 + 4 + (k2 * 192 | 0) + 48 + 8 >> 2] = c[t2 + 52 + 8 >> 2];
                        c[q2 + 4 + (k2 * 192 | 0) + 48 + 12 >> 2] = c[t2 + 52 + 12 >> 2];
                        g[q2 + 4 + (k2 * 192 | 0) + 32 >> 2] = m2;
                        g[q2 + 4 + (k2 * 192 | 0) + 36 >> 2] = l2;
                        g[q2 + 4 + (k2 * 192 | 0) + 40 >> 2] = j2;
                        g[q2 + 4 + (k2 * 192 | 0) + 44 >> 2] = 0;
                      }
                  }
                  p2 = p2 + 1 | 0;
                  if ((p2 | 0) >= (c[d2 + 232 >> 2] | 0))
                    break a;
                }
              }
            while (0);
          kb[c[(c[d2 >> 2] | 0) + 44 >> 2] & 255](d2);
          kb[c[(c[d2 >> 2] | 0) + 148 >> 2] & 255](d2);
          g[d2 + 104 >> 2] = e2;
          mb[c[(c[d2 >> 2] | 0) + 152 >> 2] & 127](d2, d2 + 92 | 0);
          jb[c[(c[d2 >> 2] | 0) + 144 >> 2] & 31](d2, e2);
          if ((c[d2 + 280 >> 2] | 0) > 0) {
            f2 = 0;
            do {
              A2 = c[(c[d2 + 288 >> 2] | 0) + (f2 << 2) >> 2] | 0;
              Wb[c[(c[A2 >> 2] | 0) + 8 >> 2] & 7](A2, d2, e2);
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) < (c[d2 + 280 >> 2] | 0));
          }
          jb[c[(c[d2 >> 2] | 0) + 156 >> 2] & 31](d2, e2);
          f2 = c[d2 + 80 >> 2] | 0;
          if (!f2) {
            i = C2;
            return;
          }
          jb[f2 & 31](d2, e2);
          i = C2;
          return;
        }
        function Xc(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, G2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0;
          c[b2 >> 2] = c[a2 >> 2];
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 8 >> 2] = c[a2 + 8 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 12 >> 2];
          c[b2 + 16 >> 2] = c[a2 + 16 >> 2];
          c[b2 + 16 + 4 >> 2] = c[a2 + 16 + 4 >> 2];
          c[b2 + 16 + 8 >> 2] = c[a2 + 16 + 8 >> 2];
          c[b2 + 16 + 12 >> 2] = c[a2 + 16 + 12 >> 2];
          c[b2 + 32 >> 2] = c[a2 + 32 >> 2];
          c[b2 + 32 + 4 >> 2] = c[a2 + 32 + 4 >> 2];
          c[b2 + 32 + 8 >> 2] = c[a2 + 32 + 8 >> 2];
          c[b2 + 32 + 12 >> 2] = c[a2 + 32 + 12 >> 2];
          q2 = +g[a2 + 20 >> 2];
          m2 = +g[a2 + 40 >> 2];
          r2 = +g[a2 + 24 >> 2];
          n2 = +g[a2 + 36 >> 2];
          o2 = +g[a2 + 32 >> 2];
          s2 = +g[a2 + 16 >> 2];
          t2 = +g[a2 >> 2];
          p2 = +g[a2 + 4 >> 2];
          u2 = +g[a2 + 8 >> 2];
          v2 = 1 / ((q2 * m2 - r2 * n2) * t2 + p2 * (r2 * o2 - m2 * s2) + (n2 * s2 - q2 * o2) * u2);
          g[d2 >> 2] = (q2 * m2 - r2 * n2) * v2;
          g[d2 + 4 >> 2] = (n2 * u2 - m2 * p2) * v2;
          g[d2 + 8 >> 2] = (r2 * p2 - q2 * u2) * v2;
          g[d2 + 12 >> 2] = 0;
          g[d2 + 16 >> 2] = (r2 * o2 - m2 * s2) * v2;
          g[d2 + 20 >> 2] = (m2 * t2 - o2 * u2) * v2;
          g[d2 + 24 >> 2] = (s2 * u2 - r2 * t2) * v2;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 32 >> 2] = (n2 * s2 - q2 * o2) * v2;
          g[d2 + 36 >> 2] = (o2 * p2 - n2 * t2) * v2;
          g[d2 + 40 >> 2] = (q2 * t2 - s2 * p2) * v2;
          g[d2 + 44 >> 2] = 0;
          a:
            do
              if (!(c[5676] | 0)) {
                e2 = b2 + 20 | 0;
                f2 = b2 + 36 | 0;
                h2 = b2 + 8 | 0;
                i2 = b2 + 24 | 0;
                j2 = b2 + 40 | 0;
                k2 = b2;
                l2 = b2 + 4 | 0;
              } else {
                e2 = 0;
                C2 = (q2 * t2 - s2 * p2) * v2;
                D2 = (q2 * m2 - r2 * n2) * v2;
                E2 = (r2 * o2 - m2 * s2) * v2;
                G2 = (n2 * s2 - q2 * o2) * v2;
                I2 = (n2 * u2 - m2 * p2) * v2;
                B2 = (m2 * t2 - o2 * u2) * v2;
                A2 = (o2 * p2 - n2 * t2) * v2;
                z2 = (r2 * p2 - q2 * u2) * v2;
                y2 = (s2 * u2 - r2 * t2) * v2;
                while (1) {
                  o2 = +F(+D2);
                  n2 = +F(+E2);
                  N2 = +F(+G2);
                  W2 = +F(+I2);
                  O2 = +F(+B2);
                  M2 = +F(+A2);
                  Q2 = +F(+z2);
                  P2 = +F(+y2);
                  w2 = +F(+C2);
                  R2 = o2 + n2 + N2 > W2 + O2 + M2 ? o2 + n2 + N2 : W2 + O2 + M2;
                  O2 = o2 + W2 + Q2 > n2 + O2 + P2 ? o2 + W2 + Q2 : n2 + O2 + P2;
                  n2 = +g[b2 >> 2];
                  W2 = +F(+n2);
                  o2 = +g[b2 + 16 >> 2];
                  T2 = +F(+o2);
                  p2 = +g[b2 + 32 >> 2];
                  K2 = +F(+p2);
                  q2 = +g[b2 + 4 >> 2];
                  V2 = +F(+q2);
                  r2 = +g[b2 + 20 >> 2];
                  S2 = +F(+r2);
                  s2 = +g[b2 + 36 >> 2];
                  J2 = +F(+s2);
                  t2 = +g[b2 + 8 >> 2];
                  U2 = +F(+t2);
                  u2 = +g[b2 + 24 >> 2];
                  L2 = +F(+u2);
                  v2 = +g[b2 + 40 >> 2];
                  x2 = +F(+v2);
                  m2 = W2 + T2 + K2 > V2 + S2 + J2 ? W2 + T2 + K2 : V2 + S2 + J2;
                  m2 = m2 > U2 + L2 + x2 ? m2 : U2 + L2 + x2;
                  L2 = W2 + V2 + U2 > T2 + S2 + L2 ? W2 + V2 + U2 : T2 + S2 + L2;
                  w2 = (R2 > Q2 + P2 + w2 ? R2 : Q2 + P2 + w2) * (O2 > N2 + M2 + w2 ? O2 : N2 + M2 + w2);
                  x2 = m2 * (L2 > K2 + J2 + x2 ? L2 : K2 + J2 + x2);
                  if (+F(+w2) < 11920928955078125e-23) {
                    e2 = b2 + 20 | 0;
                    f2 = b2 + 36 | 0;
                    h2 = b2 + 8 | 0;
                    i2 = b2 + 24 | 0;
                    j2 = b2 + 40 | 0;
                    k2 = b2;
                    l2 = b2 + 4 | 0;
                    break a;
                  }
                  if (+F(+x2) < 11920928955078125e-23) {
                    e2 = b2 + 20 | 0;
                    f2 = b2 + 36 | 0;
                    h2 = b2 + 8 | 0;
                    i2 = b2 + 24 | 0;
                    j2 = b2 + 40 | 0;
                    k2 = b2;
                    l2 = b2 + 4 | 0;
                    break a;
                  }
                  W2 = +H(+(w2 / x2), 0.25);
                  O2 = (n2 * (W2 + -2) + D2 * (1 / W2)) * 0.5;
                  Q2 = (q2 * (W2 + -2) + 1 / W2 * E2) * 0.5;
                  S2 = (t2 * (W2 + -2) + 1 / W2 * G2) * 0.5;
                  P2 = (o2 * (W2 + -2) + 1 / W2 * I2) * 0.5;
                  R2 = (r2 * (W2 + -2) + 1 / W2 * B2) * 0.5;
                  T2 = (u2 * (W2 + -2) + 1 / W2 * A2) * 0.5;
                  U2 = (p2 * (W2 + -2) + 1 / W2 * z2) * 0.5;
                  V2 = (s2 * (W2 + -2) + 1 / W2 * y2) * 0.5;
                  W2 = (v2 * (W2 + -2) + 1 / W2 * C2) * 0.5;
                  g[b2 >> 2] = n2 + O2;
                  g[b2 + 4 >> 2] = q2 + Q2;
                  g[b2 + 8 >> 2] = t2 + S2;
                  g[b2 + 12 >> 2] = 0;
                  g[b2 + 16 >> 2] = o2 + P2;
                  g[b2 + 20 >> 2] = r2 + R2;
                  g[b2 + 24 >> 2] = u2 + T2;
                  g[b2 + 28 >> 2] = 0;
                  g[b2 + 32 >> 2] = p2 + U2;
                  g[b2 + 36 >> 2] = s2 + V2;
                  g[b2 + 40 >> 2] = v2 + W2;
                  g[b2 + 44 >> 2] = 0;
                  N2 = 1 / (((v2 + W2) * (r2 + R2) - (u2 + T2) * (s2 + V2)) * (n2 + O2) + (q2 + Q2) * ((u2 + T2) * (p2 + U2) - (v2 + W2) * (o2 + P2)) + ((s2 + V2) * (o2 + P2) - (r2 + R2) * (p2 + U2)) * (t2 + S2));
                  D2 = ((v2 + W2) * (r2 + R2) - (u2 + T2) * (s2 + V2)) * N2;
                  I2 = ((s2 + V2) * (t2 + S2) - (v2 + W2) * (q2 + Q2)) * N2;
                  z2 = ((u2 + T2) * (q2 + Q2) - (r2 + R2) * (t2 + S2)) * N2;
                  E2 = ((u2 + T2) * (p2 + U2) - (v2 + W2) * (o2 + P2)) * N2;
                  B2 = ((v2 + W2) * (n2 + O2) - (p2 + U2) * (t2 + S2)) * N2;
                  y2 = ((o2 + P2) * (t2 + S2) - (u2 + T2) * (n2 + O2)) * N2;
                  G2 = ((s2 + V2) * (o2 + P2) - (r2 + R2) * (p2 + U2)) * N2;
                  A2 = ((p2 + U2) * (q2 + Q2) - (s2 + V2) * (n2 + O2)) * N2;
                  C2 = ((r2 + R2) * (n2 + O2) - (o2 + P2) * (q2 + Q2)) * N2;
                  g[d2 >> 2] = D2;
                  g[d2 + 4 >> 2] = I2;
                  g[d2 + 8 >> 2] = z2;
                  g[d2 + 12 >> 2] = 0;
                  g[d2 + 16 >> 2] = E2;
                  g[d2 + 20 >> 2] = B2;
                  g[d2 + 24 >> 2] = y2;
                  g[d2 + 28 >> 2] = 0;
                  g[d2 + 32 >> 2] = G2;
                  g[d2 + 36 >> 2] = A2;
                  g[d2 + 40 >> 2] = C2;
                  g[d2 + 44 >> 2] = 0;
                  U2 = +F(+O2) + +F(+P2) + +F(+U2);
                  V2 = +F(+Q2) + +F(+R2) + +F(+V2);
                  W2 = +F(+S2) + +F(+T2) + +F(+W2);
                  V2 = U2 > V2 ? U2 : V2;
                  if ((V2 > W2 ? V2 : W2) <= m2 * +g[5675])
                    break;
                  e2 = e2 + 1 | 0;
                  if (e2 >>> 0 >= (c[5676] | 0) >>> 0) {
                    e2 = b2 + 20 | 0;
                    f2 = b2 + 36 | 0;
                    h2 = b2 + 8 | 0;
                    i2 = b2 + 24 | 0;
                    j2 = b2 + 40 | 0;
                    k2 = b2;
                    l2 = b2 + 4 | 0;
                    break a;
                  }
                }
                M2 = +g[b2 >> 2];
                O2 = +g[b2 + 16 >> 2];
                Q2 = +g[b2 + 32 >> 2];
                G2 = +g[b2 + 4 >> 2];
                J2 = +g[b2 + 20 >> 2];
                L2 = +g[b2 + 36 >> 2];
                A2 = +g[b2 + 8 >> 2];
                C2 = +g[b2 + 24 >> 2];
                E2 = +g[b2 + 40 >> 2];
                N2 = +g[a2 >> 2];
                P2 = +g[a2 + 16 >> 2];
                R2 = +g[a2 + 32 >> 2];
                I2 = +g[a2 + 4 >> 2];
                K2 = +g[a2 + 20 >> 2];
                T2 = +g[a2 + 36 >> 2];
                B2 = +g[a2 + 8 >> 2];
                D2 = +g[a2 + 24 >> 2];
                W2 = +g[a2 + 40 >> 2];
                V2 = A2 * I2 + C2 * K2 + E2 * T2 + (G2 * B2 + J2 * D2 + L2 * W2);
                S2 = G2 * N2 + J2 * P2 + L2 * R2 + (M2 * I2 + O2 * K2 + Q2 * T2);
                U2 = A2 * N2 + C2 * P2 + E2 * R2 + (M2 * B2 + O2 * D2 + Q2 * W2);
                W2 = A2 * B2 + C2 * D2 + E2 * W2 + (A2 * B2 + C2 * D2 + E2 * W2);
                T2 = G2 * I2 + J2 * K2 + L2 * T2 + (G2 * I2 + J2 * K2 + L2 * T2);
                R2 = M2 * N2 + O2 * P2 + Q2 * R2 + (M2 * N2 + O2 * P2 + Q2 * R2);
                S2 = S2 * 0.5;
                U2 = U2 * 0.5;
                V2 = V2 * 0.5;
                R2 = R2 * 0.5;
                g[d2 >> 2] = R2;
                g[d2 + 4 >> 2] = S2;
                g[d2 + 8 >> 2] = U2;
                g[d2 + 12 >> 2] = 0;
                g[d2 + 16 >> 2] = S2;
                T2 = T2 * 0.5;
                g[d2 + 20 >> 2] = T2;
                g[d2 + 24 >> 2] = V2;
                g[d2 + 28 >> 2] = 0;
                g[d2 + 32 >> 2] = U2;
                g[d2 + 36 >> 2] = V2;
                W2 = W2 * 0.5;
                g[d2 + 40 >> 2] = W2;
                g[d2 + 44 >> 2] = 0;
                return;
              }
            while (0);
          M2 = +g[k2 >> 2];
          O2 = +g[b2 + 16 >> 2];
          Q2 = +g[b2 + 32 >> 2];
          G2 = +g[l2 >> 2];
          J2 = +g[e2 >> 2];
          L2 = +g[f2 >> 2];
          A2 = +g[h2 >> 2];
          C2 = +g[i2 >> 2];
          E2 = +g[j2 >> 2];
          N2 = +g[a2 >> 2];
          P2 = +g[a2 + 16 >> 2];
          R2 = +g[a2 + 32 >> 2];
          I2 = +g[a2 + 4 >> 2];
          K2 = +g[a2 + 20 >> 2];
          T2 = +g[a2 + 36 >> 2];
          B2 = +g[a2 + 8 >> 2];
          D2 = +g[a2 + 24 >> 2];
          W2 = +g[a2 + 40 >> 2];
          V2 = A2 * I2 + C2 * K2 + E2 * T2 + (G2 * B2 + J2 * D2 + L2 * W2);
          S2 = G2 * N2 + J2 * P2 + L2 * R2 + (M2 * I2 + O2 * K2 + Q2 * T2);
          U2 = A2 * N2 + C2 * P2 + E2 * R2 + (M2 * B2 + O2 * D2 + Q2 * W2);
          W2 = A2 * B2 + C2 * D2 + E2 * W2 + (A2 * B2 + C2 * D2 + E2 * W2);
          T2 = G2 * I2 + J2 * K2 + L2 * T2 + (G2 * I2 + J2 * K2 + L2 * T2);
          R2 = M2 * N2 + O2 * P2 + Q2 * R2 + (M2 * N2 + O2 * P2 + Q2 * R2);
          S2 = S2 * 0.5;
          U2 = U2 * 0.5;
          V2 = V2 * 0.5;
          R2 = R2 * 0.5;
          g[d2 >> 2] = R2;
          g[d2 + 4 >> 2] = S2;
          g[d2 + 8 >> 2] = U2;
          g[d2 + 12 >> 2] = 0;
          g[d2 + 16 >> 2] = S2;
          T2 = T2 * 0.5;
          g[d2 + 20 >> 2] = T2;
          g[d2 + 24 >> 2] = V2;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 32 >> 2] = U2;
          g[d2 + 36 >> 2] = V2;
          W2 = W2 * 0.5;
          g[d2 + 40 >> 2] = W2;
          g[d2 + 44 >> 2] = 0;
          return;
        }
        function Yc(a2, b2, f2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          f2 = f2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          o2 = i;
          i = i + 80 | 0;
          n2 = ob[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2) | 0;
          k2 = +g[a2 + 4 >> 2];
          l2 = +g[a2 + 8 >> 2];
          m2 = +g[a2 + 12 >> 2];
          if ((n2 | 0) <= 0) {
            i = o2;
            return;
          }
          j2 = 0;
          do {
            Ib[c[(c[a2 >> 2] | 0) + 16 >> 2] & 3](a2, o2 + 76 | 0, o2 + 52 | 0, o2 + 64 | 0, o2 + 56 | 0, o2 + 72 | 0, o2 + 68 | 0, o2 + 48 | 0, o2 + 60 | 0, j2);
            a:
              do
                switch (c[o2 + 64 >> 2] | 0) {
                  case 0: {
                    switch (c[o2 + 60 >> 2] | 0) {
                      case 2: {
                        if ((c[o2 + 48 >> 2] | 0) > 0)
                          f2 = 0;
                        else
                          break a;
                        do {
                          r2 = (c[o2 + 72 >> 2] | 0) + (S(c[o2 + 68 >> 2] | 0, f2) | 0) | 0;
                          t2 = c[o2 + 76 >> 2] | 0;
                          s2 = c[o2 + 56 >> 2] | 0;
                          u2 = t2 + (S(s2, c[r2 >> 2] | 0) | 0) | 0;
                          q2 = l2 * +g[u2 + 4 >> 2];
                          p2 = m2 * +g[u2 + 8 >> 2];
                          g[o2 >> 2] = k2 * +g[u2 >> 2];
                          g[o2 + 4 >> 2] = q2;
                          g[o2 + 8 >> 2] = p2;
                          g[o2 + 12 >> 2] = 0;
                          u2 = t2 + (S(s2, c[r2 + 4 >> 2] | 0) | 0) | 0;
                          p2 = l2 * +g[u2 + 4 >> 2];
                          q2 = m2 * +g[u2 + 8 >> 2];
                          g[o2 + 16 >> 2] = k2 * +g[u2 >> 2];
                          g[o2 + 20 >> 2] = p2;
                          g[o2 + 24 >> 2] = q2;
                          g[o2 + 28 >> 2] = 0;
                          r2 = t2 + (S(s2, c[r2 + 8 >> 2] | 0) | 0) | 0;
                          q2 = l2 * +g[r2 + 4 >> 2];
                          p2 = m2 * +g[r2 + 8 >> 2];
                          g[o2 + 32 >> 2] = k2 * +g[r2 >> 2];
                          g[o2 + 36 >> 2] = q2;
                          g[o2 + 40 >> 2] = p2;
                          g[o2 + 44 >> 2] = 0;
                          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, j2, f2);
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) < (c[o2 + 48 >> 2] | 0));
                        break;
                      }
                      case 3: {
                        if ((c[o2 + 48 >> 2] | 0) > 0)
                          f2 = 0;
                        else
                          break a;
                        do {
                          t2 = (c[o2 + 72 >> 2] | 0) + (S(c[o2 + 68 >> 2] | 0, f2) | 0) | 0;
                          s2 = c[o2 + 76 >> 2] | 0;
                          u2 = c[o2 + 56 >> 2] | 0;
                          r2 = s2 + (S(e[t2 >> 1] | 0, u2) | 0) | 0;
                          p2 = l2 * +g[r2 + 4 >> 2];
                          q2 = m2 * +g[r2 + 8 >> 2];
                          g[o2 >> 2] = k2 * +g[r2 >> 2];
                          g[o2 + 4 >> 2] = p2;
                          g[o2 + 8 >> 2] = q2;
                          g[o2 + 12 >> 2] = 0;
                          r2 = s2 + (S(e[t2 + 2 >> 1] | 0, u2) | 0) | 0;
                          q2 = l2 * +g[r2 + 4 >> 2];
                          p2 = m2 * +g[r2 + 8 >> 2];
                          g[o2 + 16 >> 2] = k2 * +g[r2 >> 2];
                          g[o2 + 20 >> 2] = q2;
                          g[o2 + 24 >> 2] = p2;
                          g[o2 + 28 >> 2] = 0;
                          u2 = s2 + (S(e[t2 + 4 >> 1] | 0, u2) | 0) | 0;
                          p2 = l2 * +g[u2 + 4 >> 2];
                          q2 = m2 * +g[u2 + 8 >> 2];
                          g[o2 + 32 >> 2] = k2 * +g[u2 >> 2];
                          g[o2 + 36 >> 2] = p2;
                          g[o2 + 40 >> 2] = q2;
                          g[o2 + 44 >> 2] = 0;
                          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, j2, f2);
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) < (c[o2 + 48 >> 2] | 0));
                        break;
                      }
                      case 5: {
                        if ((c[o2 + 48 >> 2] | 0) > 0)
                          f2 = 0;
                        else
                          break a;
                        do {
                          t2 = (c[o2 + 72 >> 2] | 0) + (S(c[o2 + 68 >> 2] | 0, f2) | 0) | 0;
                          s2 = c[o2 + 76 >> 2] | 0;
                          u2 = c[o2 + 56 >> 2] | 0;
                          r2 = s2 + (S(d[t2 >> 0] | 0, u2) | 0) | 0;
                          p2 = l2 * +g[r2 + 4 >> 2];
                          q2 = m2 * +g[r2 + 8 >> 2];
                          g[o2 >> 2] = k2 * +g[r2 >> 2];
                          g[o2 + 4 >> 2] = p2;
                          g[o2 + 8 >> 2] = q2;
                          g[o2 + 12 >> 2] = 0;
                          r2 = s2 + (S(d[t2 + 1 >> 0] | 0, u2) | 0) | 0;
                          q2 = l2 * +g[r2 + 4 >> 2];
                          p2 = m2 * +g[r2 + 8 >> 2];
                          g[o2 + 16 >> 2] = k2 * +g[r2 >> 2];
                          g[o2 + 20 >> 2] = q2;
                          g[o2 + 24 >> 2] = p2;
                          g[o2 + 28 >> 2] = 0;
                          u2 = s2 + (S(d[t2 + 2 >> 0] | 0, u2) | 0) | 0;
                          p2 = l2 * +g[u2 + 4 >> 2];
                          q2 = m2 * +g[u2 + 8 >> 2];
                          g[o2 + 32 >> 2] = k2 * +g[u2 >> 2];
                          g[o2 + 36 >> 2] = p2;
                          g[o2 + 40 >> 2] = q2;
                          g[o2 + 44 >> 2] = 0;
                          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, j2, f2);
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) < (c[o2 + 48 >> 2] | 0));
                        break;
                      }
                      default:
                        break a;
                    }
                    break;
                  }
                  case 1: {
                    switch (c[o2 + 60 >> 2] | 0) {
                      case 2: {
                        if ((c[o2 + 48 >> 2] | 0) > 0)
                          f2 = 0;
                        else
                          break a;
                        do {
                          u2 = (c[o2 + 72 >> 2] | 0) + (S(c[o2 + 68 >> 2] | 0, f2) | 0) | 0;
                          s2 = c[o2 + 76 >> 2] | 0;
                          t2 = c[o2 + 56 >> 2] | 0;
                          r2 = s2 + (S(t2, c[u2 >> 2] | 0) | 0) | 0;
                          p2 = l2 * +h[r2 + 8 >> 3];
                          q2 = m2 * +h[r2 + 16 >> 3];
                          g[o2 >> 2] = k2 * +h[r2 >> 3];
                          g[o2 + 4 >> 2] = p2;
                          g[o2 + 8 >> 2] = q2;
                          g[o2 + 12 >> 2] = 0;
                          r2 = s2 + (S(t2, c[u2 + 4 >> 2] | 0) | 0) | 0;
                          q2 = l2 * +h[r2 + 8 >> 3];
                          p2 = m2 * +h[r2 + 16 >> 3];
                          g[o2 + 16 >> 2] = k2 * +h[r2 >> 3];
                          g[o2 + 20 >> 2] = q2;
                          g[o2 + 24 >> 2] = p2;
                          g[o2 + 28 >> 2] = 0;
                          u2 = s2 + (S(t2, c[u2 + 8 >> 2] | 0) | 0) | 0;
                          p2 = l2 * +h[u2 + 8 >> 3];
                          q2 = m2 * +h[u2 + 16 >> 3];
                          g[o2 + 32 >> 2] = k2 * +h[u2 >> 3];
                          g[o2 + 36 >> 2] = p2;
                          g[o2 + 40 >> 2] = q2;
                          g[o2 + 44 >> 2] = 0;
                          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, j2, f2);
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) < (c[o2 + 48 >> 2] | 0));
                        break;
                      }
                      case 3: {
                        if ((c[o2 + 48 >> 2] | 0) > 0)
                          f2 = 0;
                        else
                          break a;
                        do {
                          t2 = (c[o2 + 72 >> 2] | 0) + (S(c[o2 + 68 >> 2] | 0, f2) | 0) | 0;
                          s2 = c[o2 + 76 >> 2] | 0;
                          u2 = c[o2 + 56 >> 2] | 0;
                          r2 = s2 + (S(e[t2 >> 1] | 0, u2) | 0) | 0;
                          p2 = l2 * +h[r2 + 8 >> 3];
                          q2 = m2 * +h[r2 + 16 >> 3];
                          g[o2 >> 2] = k2 * +h[r2 >> 3];
                          g[o2 + 4 >> 2] = p2;
                          g[o2 + 8 >> 2] = q2;
                          g[o2 + 12 >> 2] = 0;
                          r2 = s2 + (S(e[t2 + 2 >> 1] | 0, u2) | 0) | 0;
                          q2 = l2 * +h[r2 + 8 >> 3];
                          p2 = m2 * +h[r2 + 16 >> 3];
                          g[o2 + 16 >> 2] = k2 * +h[r2 >> 3];
                          g[o2 + 20 >> 2] = q2;
                          g[o2 + 24 >> 2] = p2;
                          g[o2 + 28 >> 2] = 0;
                          u2 = s2 + (S(e[t2 + 4 >> 1] | 0, u2) | 0) | 0;
                          p2 = l2 * +h[u2 + 8 >> 3];
                          q2 = m2 * +h[u2 + 16 >> 3];
                          g[o2 + 32 >> 2] = k2 * +h[u2 >> 3];
                          g[o2 + 36 >> 2] = p2;
                          g[o2 + 40 >> 2] = q2;
                          g[o2 + 44 >> 2] = 0;
                          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, j2, f2);
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) < (c[o2 + 48 >> 2] | 0));
                        break;
                      }
                      case 5: {
                        if ((c[o2 + 48 >> 2] | 0) > 0)
                          f2 = 0;
                        else
                          break a;
                        do {
                          t2 = (c[o2 + 72 >> 2] | 0) + (S(c[o2 + 68 >> 2] | 0, f2) | 0) | 0;
                          s2 = c[o2 + 76 >> 2] | 0;
                          u2 = c[o2 + 56 >> 2] | 0;
                          r2 = s2 + (S(d[t2 >> 0] | 0, u2) | 0) | 0;
                          p2 = l2 * +h[r2 + 8 >> 3];
                          q2 = m2 * +h[r2 + 16 >> 3];
                          g[o2 >> 2] = k2 * +h[r2 >> 3];
                          g[o2 + 4 >> 2] = p2;
                          g[o2 + 8 >> 2] = q2;
                          g[o2 + 12 >> 2] = 0;
                          r2 = s2 + (S(d[t2 + 1 >> 0] | 0, u2) | 0) | 0;
                          q2 = l2 * +h[r2 + 8 >> 3];
                          p2 = m2 * +h[r2 + 16 >> 3];
                          g[o2 + 16 >> 2] = k2 * +h[r2 >> 3];
                          g[o2 + 20 >> 2] = q2;
                          g[o2 + 24 >> 2] = p2;
                          g[o2 + 28 >> 2] = 0;
                          u2 = s2 + (S(d[t2 + 2 >> 0] | 0, u2) | 0) | 0;
                          p2 = l2 * +h[u2 + 8 >> 3];
                          q2 = m2 * +h[u2 + 16 >> 3];
                          g[o2 + 32 >> 2] = k2 * +h[u2 >> 3];
                          g[o2 + 36 >> 2] = p2;
                          g[o2 + 40 >> 2] = q2;
                          g[o2 + 44 >> 2] = 0;
                          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, o2, j2, f2);
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) < (c[o2 + 48 >> 2] | 0));
                        break;
                      }
                      default:
                        break a;
                    }
                    break;
                  }
                  default: {
                  }
                }
              while (0);
            mb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, j2);
            j2 = j2 + 1 | 0;
          } while ((j2 | 0) != (n2 | 0));
          i = o2;
          return;
        }
        function Zc(b2, d2, e2, f2, h2, j2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0;
          ga2 = i;
          i = i + 32 | 0;
          L2 = c[b2 + 4 >> 2] | 0;
          a[L2 + 312 >> 0] = 0;
          c[L2 >> 2] = 0;
          a[L2 + 356 >> 0] = 1;
          c[L2 + 292 >> 2] = 1566444395;
          c[L2 + 296 >> 2] = 1566444395;
          c[L2 + 300 >> 2] = 1566444395;
          g[L2 + 304 >> 2] = 0;
          c[L2 + 336 >> 2] = 0;
          c[L2 + 336 + 4 >> 2] = 0;
          c[L2 + 336 + 8 >> 2] = 0;
          c[L2 + 336 + 12 >> 2] = 0;
          a[L2 + 336 + 16 >> 0] = 0;
          a[L2 + 332 >> 0] = a[L2 + 332 >> 0] & -16;
          t2 = +g[d2 + 48 >> 2];
          v2 = +g[d2 + 52 >> 2];
          z2 = +g[d2 + 56 >> 2];
          p2 = +g[f2 + 48 >> 2];
          u2 = +g[f2 + 52 >> 2];
          x2 = +g[f2 + 56 >> 2];
          N2 = +g[d2 >> 2];
          Z2 = +g[d2 + 4 >> 2];
          $2 = +g[d2 + 8 >> 2];
          ba2 = +g[d2 + 16 >> 2];
          P2 = +g[d2 + 20 >> 2];
          R2 = +g[d2 + 24 >> 2];
          T2 = +g[d2 + 32 >> 2];
          V2 = +g[d2 + 36 >> 2];
          X2 = +g[d2 + 40 >> 2];
          M2 = +g[f2 >> 2];
          Y2 = +g[f2 + 4 >> 2];
          _2 = +g[f2 + 8 >> 2];
          aa2 = +g[f2 + 16 >> 2];
          O2 = +g[f2 + 20 >> 2];
          Q2 = +g[f2 + 24 >> 2];
          S2 = +g[f2 + 32 >> 2];
          U2 = +g[f2 + 36 >> 2];
          W2 = +g[f2 + 40 >> 2];
          da2 = +g[e2 + 48 >> 2] - t2 - (+g[h2 + 48 >> 2] - p2);
          ea2 = +g[e2 + 52 >> 2] - v2 - (+g[h2 + 52 >> 2] - u2);
          fa2 = +g[e2 + 56 >> 2] - z2 - (+g[h2 + 56 >> 2] - x2);
          L2 = c[b2 + 8 >> 2] | 0;
          K2 = c[(c[L2 >> 2] | 0) + 64 >> 2] | 0;
          g[ga2 >> 2] = N2 * -da2 + ba2 * -ea2 + T2 * -fa2;
          g[ga2 + 4 >> 2] = Z2 * -da2 + P2 * -ea2 + V2 * -fa2;
          g[ga2 + 8 >> 2] = $2 * -da2 + R2 * -ea2 + X2 * -fa2;
          g[ga2 + 12 >> 2] = 0;
          Ub[K2 & 127](ga2 + 16 | 0, L2, ga2);
          I2 = +g[ga2 + 16 >> 2];
          J2 = +g[ga2 + 16 + 4 >> 2];
          H2 = +g[ga2 + 16 + 8 >> 2];
          n2 = I2 * +g[d2 >> 2] + J2 * +g[d2 + 4 >> 2] + H2 * +g[d2 + 8 >> 2] + +g[d2 + 48 >> 2];
          A2 = I2 * +g[d2 + 16 >> 2] + J2 * +g[d2 + 20 >> 2] + H2 * +g[d2 + 24 >> 2] + +g[d2 + 52 >> 2];
          H2 = I2 * +g[d2 + 32 >> 2] + J2 * +g[d2 + 36 >> 2] + H2 * +g[d2 + 40 >> 2] + +g[d2 + 56 >> 2];
          L2 = c[b2 + 12 >> 2] | 0;
          K2 = c[(c[L2 >> 2] | 0) + 64 >> 2] | 0;
          J2 = da2 * +g[f2 + 4 >> 2] + ea2 * +g[f2 + 20 >> 2] + fa2 * +g[f2 + 36 >> 2];
          I2 = da2 * +g[f2 + 8 >> 2] + ea2 * +g[f2 + 24 >> 2] + fa2 * +g[f2 + 40 >> 2];
          g[ga2 >> 2] = da2 * +g[f2 >> 2] + ea2 * +g[f2 + 16 >> 2] + fa2 * +g[f2 + 32 >> 2];
          g[ga2 + 4 >> 2] = J2;
          g[ga2 + 8 >> 2] = I2;
          g[ga2 + 12 >> 2] = 0;
          Ub[K2 & 127](ga2 + 16 | 0, L2, ga2);
          I2 = +g[ga2 + 16 >> 2];
          J2 = +g[ga2 + 16 + 4 >> 2];
          o2 = +g[ga2 + 16 + 8 >> 2];
          n2 = n2 - (I2 * +g[f2 >> 2] + J2 * +g[f2 + 4 >> 2] + o2 * +g[f2 + 8 >> 2] + +g[f2 + 48 >> 2]);
          A2 = A2 - (I2 * +g[f2 + 16 >> 2] + J2 * +g[f2 + 20 >> 2] + o2 * +g[f2 + 24 >> 2] + +g[f2 + 52 >> 2]);
          o2 = H2 - (I2 * +g[f2 + 32 >> 2] + J2 * +g[f2 + 36 >> 2] + o2 * +g[f2 + 40 >> 2] + +g[f2 + 56 >> 2]);
          a:
            do
              if (n2 * n2 + A2 * A2 + o2 * o2 > 9999999747378752e-20) {
                m2 = 0;
                L2 = 32;
                r2 = 0;
                s2 = 0;
                K2 = 0;
                q2 = 0;
                k2 = 0;
                while (1) {
                  if (!L2)
                    break a;
                  L2 = L2 + -1 | 0;
                  w2 = c[b2 + 8 >> 2] | 0;
                  y2 = c[(c[w2 >> 2] | 0) + 64 >> 2] | 0;
                  F2 = -n2;
                  ha2 = -A2;
                  C2 = -o2;
                  g[ga2 >> 2] = N2 * F2 + ba2 * ha2 + T2 * C2;
                  g[ga2 + 4 >> 2] = Z2 * F2 + P2 * ha2 + V2 * C2;
                  g[ga2 + 8 >> 2] = $2 * F2 + R2 * ha2 + X2 * C2;
                  g[ga2 + 12 >> 2] = 0;
                  Ub[y2 & 127](ga2 + 16 | 0, w2, ga2);
                  C2 = +g[ga2 + 16 >> 2];
                  ha2 = +g[ga2 + 16 + 4 >> 2];
                  F2 = +g[ga2 + 16 + 8 >> 2];
                  D2 = t2 + (N2 * C2 + Z2 * ha2 + $2 * F2);
                  E2 = v2 + (ba2 * C2 + P2 * ha2 + R2 * F2);
                  F2 = z2 + (T2 * C2 + V2 * ha2 + X2 * F2);
                  w2 = c[b2 + 12 >> 2] | 0;
                  y2 = c[(c[w2 >> 2] | 0) + 64 >> 2] | 0;
                  g[ga2 >> 2] = M2 * n2 + aa2 * A2 + S2 * o2;
                  g[ga2 + 4 >> 2] = Y2 * n2 + O2 * A2 + U2 * o2;
                  g[ga2 + 8 >> 2] = _2 * n2 + Q2 * A2 + W2 * o2;
                  g[ga2 + 12 >> 2] = 0;
                  Ub[y2 & 127](ga2 + 16 | 0, w2, ga2);
                  ha2 = +g[ga2 + 16 >> 2];
                  C2 = +g[ga2 + 16 + 4 >> 2];
                  J2 = +g[ga2 + 16 + 8 >> 2];
                  H2 = p2 + (M2 * ha2 + Y2 * C2 + _2 * J2);
                  I2 = u2 + (aa2 * ha2 + O2 * C2 + Q2 * J2);
                  J2 = x2 + (S2 * ha2 + U2 * C2 + W2 * J2);
                  C2 = n2 * (D2 - H2) + A2 * (E2 - I2) + o2 * (F2 - J2);
                  w2 = (g[l >> 2] = n2, c[l >> 2] | 0);
                  y2 = (g[l >> 2] = A2, c[l >> 2] | 0);
                  B2 = (g[l >> 2] = o2, c[l >> 2] | 0);
                  if (m2 > 1) {
                    k2 = 0;
                    ca2 = 25;
                    break;
                  }
                  if (C2 > 0) {
                    n2 = da2 * n2 + ea2 * A2 + fa2 * o2;
                    if (n2 >= -14210854715202004e-30) {
                      k2 = 0;
                      ca2 = 25;
                      break;
                    }
                    z2 = m2 - C2 / n2;
                    m2 = z2;
                    r2 = w2;
                    s2 = K2;
                    p2 = (1 - z2) * +g[f2 + 48 >> 2] + z2 * +g[h2 + 48 >> 2];
                    t2 = (1 - z2) * +g[d2 + 48 >> 2] + z2 * +g[e2 + 48 >> 2];
                    u2 = (1 - z2) * +g[f2 + 52 >> 2] + z2 * +g[h2 + 52 >> 2];
                    v2 = (1 - z2) * +g[d2 + 52 >> 2] + z2 * +g[e2 + 52 >> 2];
                    x2 = (1 - z2) * +g[f2 + 56 >> 2] + z2 * +g[h2 + 56 >> 2];
                    z2 = (1 - z2) * +g[d2 + 56 >> 2] + z2 * +g[e2 + 56 >> 2];
                    q2 = y2;
                    k2 = B2;
                  }
                  w2 = c[b2 + 4 >> 2] | 0;
                  B2 = c[w2 >> 2] | 0;
                  b:
                    do
                      if ((B2 | 0) > 0) {
                        n2 = +g[w2 + 308 >> 2];
                        y2 = 0;
                        while (1) {
                          A2 = D2 - H2 - +g[w2 + 4 + (y2 << 4) >> 2];
                          C2 = E2 - I2 - +g[w2 + 4 + (y2 << 4) + 4 >> 2];
                          ha2 = F2 - J2 - +g[w2 + 4 + (y2 << 4) + 8 >> 2];
                          y2 = y2 + 1 | 0;
                          if (A2 * A2 + C2 * C2 + ha2 * ha2 <= n2) {
                            y2 = 1;
                            break b;
                          }
                          if ((y2 | 0) >= (B2 | 0)) {
                            y2 = 0;
                            break;
                          }
                        }
                      } else
                        y2 = 0;
                    while (0);
                  if ((+g[w2 + 304 >> 2] == 0 ? F2 - J2 == +g[w2 + 300 >> 2] : 0) ? E2 - I2 == +g[w2 + 296 >> 2] : 0) {
                    if (!(D2 - H2 == +g[w2 + 292 >> 2] | y2))
                      ca2 = 17;
                  } else if (!y2)
                    ca2 = 17;
                  if ((ca2 | 0) == 17) {
                    ca2 = 0;
                    g[w2 + 292 >> 2] = D2 - H2;
                    g[w2 + 296 >> 2] = E2 - I2;
                    g[w2 + 300 >> 2] = F2 - J2;
                    g[w2 + 304 >> 2] = 0;
                    a[w2 + 356 >> 0] = 1;
                    g[w2 + 4 + (B2 << 4) >> 2] = D2 - H2;
                    g[w2 + 4 + (B2 << 4) + 4 >> 2] = E2 - I2;
                    g[w2 + 4 + (B2 << 4) + 8 >> 2] = F2 - J2;
                    g[w2 + 4 + (B2 << 4) + 12 >> 2] = 0;
                    K2 = c[w2 >> 2] | 0;
                    g[w2 + 84 + (K2 << 4) >> 2] = D2;
                    g[w2 + 84 + (K2 << 4) + 4 >> 2] = E2;
                    g[w2 + 84 + (K2 << 4) + 8 >> 2] = F2;
                    g[w2 + 84 + (K2 << 4) + 12 >> 2] = 0;
                    K2 = c[w2 >> 2] | 0;
                    g[w2 + 164 + (K2 << 4) >> 2] = H2;
                    g[w2 + 164 + (K2 << 4) + 4 >> 2] = I2;
                    g[w2 + 164 + (K2 << 4) + 8 >> 2] = J2;
                    g[w2 + 164 + (K2 << 4) + 12 >> 2] = 0;
                    c[w2 >> 2] = (c[w2 >> 2] | 0) + 1;
                    w2 = c[b2 + 4 >> 2] | 0;
                  }
                  K2 = Hc(w2) | 0;
                  n2 = +g[w2 + 276 >> 2];
                  A2 = +g[w2 + 280 >> 2];
                  o2 = +g[w2 + 284 >> 2];
                  if (!K2)
                    break a;
                  if (!(n2 * n2 + A2 * A2 + o2 * o2 > 9999999747378752e-20))
                    break a;
                  else
                    K2 = c[w2 + 288 >> 2] | 0;
                }
                if ((ca2 | 0) == 25) {
                  i = ga2;
                  return k2 | 0;
                }
              } else {
                m2 = 0;
                r2 = 0;
                s2 = 0;
                q2 = 0;
                k2 = 0;
              }
            while (0);
          g[j2 + 164 >> 2] = m2;
          m2 = (c[l >> 2] = r2, +g[l >> 2]);
          n2 = (c[l >> 2] = q2, +g[l >> 2]);
          p2 = (c[l >> 2] = k2, +g[l >> 2]);
          if (!(m2 * m2 + n2 * n2 + p2 * p2 >= 14210854715202004e-30)) {
            c[j2 + 132 >> 2] = 0;
            c[j2 + 132 + 4 >> 2] = 0;
            c[j2 + 132 + 8 >> 2] = 0;
            c[j2 + 132 + 12 >> 2] = 0;
            o2 = 0;
            n2 = 0;
            m2 = 0;
          } else {
            ha2 = 1 / +G(+(m2 * m2 + n2 * n2 + p2 * p2));
            g[j2 + 132 >> 2] = m2 * ha2;
            g[j2 + 136 >> 2] = n2 * ha2;
            g[j2 + 140 >> 2] = p2 * ha2;
            c[j2 + 144 >> 2] = s2;
            o2 = m2 * ha2;
            n2 = n2 * ha2;
            m2 = p2 * ha2;
          }
          if (da2 * o2 + ea2 * n2 + fa2 * m2 >= -+g[j2 + 172 >> 2]) {
            j2 = 0;
            i = ga2;
            return j2 | 0;
          }
          b2 = c[b2 + 4 >> 2] | 0;
          Hc(b2) | 0;
          rp(j2 + 148 | 0, b2 + 260 | 0, 16) | 0;
          j2 = 1;
          i = ga2;
          return j2 | 0;
        }
        function _c(d2, e2, f2, h2, j2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0;
          y2 = i;
          i = i + 128 | 0;
          a[d2 + 60 >> 0] = f2 & 1;
          if (f2) {
            q2 = +g[h2 >> 2] + -1;
            t2 = +g[h2 + 4 >> 2] + -1;
            u2 = +g[h2 + 8 >> 2] + -1;
            g[d2 + 4 >> 2] = q2;
            g[d2 + 8 >> 2] = t2;
            g[d2 + 12 >> 2] = u2;
            g[d2 + 16 >> 2] = 0;
            v2 = +g[j2 >> 2] + 1;
            l2 = +g[j2 + 4 >> 2] + 1;
            x2 = +g[j2 + 8 >> 2] + 1;
            g[d2 + 20 >> 2] = v2;
            g[d2 + 24 >> 2] = l2;
            g[d2 + 28 >> 2] = x2;
            g[d2 + 32 >> 2] = 0;
            g[d2 + 36 >> 2] = 65533 / (v2 - q2);
            g[d2 + 40 >> 2] = 65533 / (l2 - t2);
            g[d2 + 44 >> 2] = 65533 / (x2 - u2);
            g[d2 + 48 >> 2] = 0;
            a[d2 + 60 >> 0] = 1;
            k2 = q2 + +(~~((q2 - q2) * (65533 / (v2 - q2))) & 65534) / (65533 / (v2 - q2)) + -1;
            n2 = t2 + +(~~((t2 - t2) * (65533 / (l2 - t2))) & 65534) / (65533 / (l2 - t2)) + -1;
            s2 = u2 + +(~~((u2 - u2) * (65533 / (x2 - u2))) & 65534) / (65533 / (x2 - u2)) + -1;
            if (k2 < q2) {
              g[d2 + 4 >> 2] = k2;
              w2 = k2;
            } else
              w2 = q2;
            if (n2 < t2) {
              g[d2 + 8 >> 2] = n2;
              t2 = n2;
            }
            if (s2 < u2)
              g[d2 + 12 >> 2] = s2;
            else
              s2 = u2;
            n2 = v2 - w2;
            q2 = l2 - t2;
            k2 = x2 - s2;
            g[d2 + 36 >> 2] = 65533 / n2;
            g[d2 + 40 >> 2] = 65533 / q2;
            g[d2 + 44 >> 2] = 65533 / k2;
            g[d2 + 48 >> 2] = 0;
            n2 = w2 + +((~~(n2 * (65533 / n2) + 1) & 65535 | 1) & 65535) / (65533 / n2) + 1;
            q2 = t2 + +((~~(q2 * (65533 / q2) + 1) & 65535 | 1) & 65535) / (65533 / q2) + 1;
            k2 = s2 + +((~~(k2 * (65533 / k2) + 1) & 65535 | 1) & 65535) / (65533 / k2) + 1;
            if (v2 < n2)
              g[d2 + 20 >> 2] = n2;
            else
              n2 = v2;
            if (l2 < q2) {
              g[d2 + 24 >> 2] = q2;
              l2 = q2;
            }
            if (x2 < k2)
              g[d2 + 28 >> 2] = k2;
            else
              k2 = x2;
            g[d2 + 36 >> 2] = 65533 / (n2 - w2);
            g[d2 + 40 >> 2] = 65533 / (l2 - t2);
            g[d2 + 44 >> 2] = 65533 / (k2 - s2);
            g[d2 + 48 >> 2] = 0;
            c[y2 + 96 >> 2] = 8196;
            c[y2 + 96 + 4 >> 2] = d2 + 104;
            c[y2 + 96 + 8 >> 2] = d2;
            Yb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, y2 + 96 | 0, d2 + 4 | 0, d2 + 20 | 0);
            f2 = c[d2 + 108 >> 2] | 0;
            c[y2 + 80 >> 2] = 0;
            c[y2 + 80 + 4 >> 2] = 0;
            c[y2 + 80 + 8 >> 2] = 0;
            c[y2 + 80 + 12 >> 2] = 0;
            m2 = c[d2 + 128 >> 2] | 0;
            if ((m2 | 0) < (f2 << 1 | 0)) {
              if ((c[d2 + 132 >> 2] | 0) < (f2 << 1 | 0)) {
                if (!f2) {
                  h2 = 0;
                  e2 = m2;
                } else {
                  c[6324] = (c[6324] | 0) + 1;
                  h2 = ic(f2 << 5 | 19) | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    h2 = h2 + 4 + 15 & -16;
                  }
                  e2 = c[d2 + 128 >> 2] | 0;
                }
                if ((e2 | 0) > 0) {
                  j2 = 0;
                  do {
                    r2 = h2 + (j2 << 4) | 0;
                    p2 = (c[d2 + 136 >> 2] | 0) + (j2 << 4) | 0;
                    c[r2 >> 2] = c[p2 >> 2];
                    c[r2 + 4 >> 2] = c[p2 + 4 >> 2];
                    c[r2 + 8 >> 2] = c[p2 + 8 >> 2];
                    c[r2 + 12 >> 2] = c[p2 + 12 >> 2];
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) != (e2 | 0));
                }
                j2 = c[d2 + 136 >> 2] | 0;
                if (j2 | 0) {
                  if (a[d2 + 140 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[j2 + -4 >> 2] | 0);
                  }
                  c[d2 + 136 >> 2] = 0;
                }
                a[d2 + 140 >> 0] = 1;
                c[d2 + 136 >> 2] = h2;
                c[d2 + 132 >> 2] = f2 << 1;
                j2 = d2 + 136 | 0;
              } else
                j2 = d2 + 136 | 0;
              h2 = m2;
              do {
                r2 = (c[j2 >> 2] | 0) + (h2 << 4) | 0;
                c[r2 >> 2] = c[y2 + 80 >> 2];
                c[r2 + 4 >> 2] = c[y2 + 80 + 4 >> 2];
                c[r2 + 8 >> 2] = c[y2 + 80 + 8 >> 2];
                c[r2 + 12 >> 2] = c[y2 + 80 + 12 >> 2];
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (f2 << 1 | 0));
            }
            c[d2 + 128 >> 2] = f2 << 1;
          } else {
            c[y2 + 96 >> 2] = 8216;
            c[y2 + 96 + 4 >> 2] = d2 + 64;
            c[y2 + 80 >> 2] = -581039253;
            c[y2 + 80 + 4 >> 2] = -581039253;
            c[y2 + 80 + 8 >> 2] = -581039253;
            g[y2 + 80 + 12 >> 2] = 0;
            c[y2 + 64 >> 2] = 1566444395;
            c[y2 + 64 + 4 >> 2] = 1566444395;
            c[y2 + 64 + 8 >> 2] = 1566444395;
            g[y2 + 64 + 12 >> 2] = 0;
            Yb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, y2 + 96 | 0, y2 + 80 | 0, y2 + 64 | 0);
            f2 = c[d2 + 68 >> 2] | 0;
            m2 = y2;
            p2 = m2 + 64 | 0;
            do {
              c[m2 >> 2] = 0;
              m2 = m2 + 4 | 0;
            } while ((m2 | 0) < (p2 | 0));
            r2 = c[d2 + 88 >> 2] | 0;
            if ((r2 | 0) < (f2 << 1 | 0)) {
              if ((c[d2 + 92 >> 2] | 0) < (f2 << 1 | 0)) {
                if (!f2) {
                  h2 = 0;
                  e2 = r2;
                } else {
                  c[6324] = (c[6324] | 0) + 1;
                  h2 = ic(f2 << 7 | 19) | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    h2 = h2 + 4 + 15 & -16;
                  }
                  e2 = c[d2 + 88 >> 2] | 0;
                }
                if ((e2 | 0) > 0) {
                  j2 = 0;
                  do {
                    m2 = h2 + (j2 << 6) | 0;
                    o2 = (c[d2 + 96 >> 2] | 0) + (j2 << 6) | 0;
                    p2 = m2 + 64 | 0;
                    do {
                      c[m2 >> 2] = c[o2 >> 2];
                      m2 = m2 + 4 | 0;
                      o2 = o2 + 4 | 0;
                    } while ((m2 | 0) < (p2 | 0));
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) != (e2 | 0));
                }
                j2 = c[d2 + 96 >> 2] | 0;
                if (j2 | 0) {
                  if (a[d2 + 100 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[j2 + -4 >> 2] | 0);
                  }
                  c[d2 + 96 >> 2] = 0;
                }
                a[d2 + 100 >> 0] = 1;
                c[d2 + 96 >> 2] = h2;
                c[d2 + 92 >> 2] = f2 << 1;
                j2 = d2 + 96 | 0;
              } else
                j2 = d2 + 96 | 0;
              h2 = r2;
              do {
                m2 = (c[j2 >> 2] | 0) + (h2 << 6) | 0;
                o2 = y2;
                p2 = m2 + 64 | 0;
                do {
                  c[m2 >> 2] = c[o2 >> 2];
                  m2 = m2 + 4 | 0;
                  o2 = o2 + 4 | 0;
                } while ((m2 | 0) < (p2 | 0));
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) != (f2 << 1 | 0));
            }
            c[d2 + 88 >> 2] = f2 << 1;
          }
          c[d2 + 56 >> 2] = 0;
          wc(d2, 0, f2);
          if (a[d2 + 60 >> 0] | 0 ? (c[d2 + 152 >> 2] | 0) == 0 : 0) {
            if (!(c[d2 + 156 >> 2] | 0)) {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic(51) | 0;
              if (!f2)
                e2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                e2 = f2 + 4 + 15 & -16;
              }
              h2 = c[d2 + 152 >> 2] | 0;
              if ((h2 | 0) > 0) {
                f2 = 0;
                do {
                  r2 = e2 + (f2 << 5) | 0;
                  p2 = (c[d2 + 160 >> 2] | 0) + (f2 << 5) | 0;
                  c[r2 >> 2] = c[p2 >> 2];
                  c[r2 + 4 >> 2] = c[p2 + 4 >> 2];
                  c[r2 + 8 >> 2] = c[p2 + 8 >> 2];
                  c[r2 + 12 >> 2] = c[p2 + 12 >> 2];
                  c[r2 + 16 >> 2] = c[p2 + 16 >> 2];
                  c[r2 + 20 >> 2] = c[p2 + 20 >> 2];
                  c[r2 + 24 >> 2] = c[p2 + 24 >> 2];
                  c[r2 + 28 >> 2] = c[p2 + 28 >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (h2 | 0));
              }
              f2 = c[d2 + 160 >> 2] | 0;
              if (f2 | 0) {
                if (a[d2 + 164 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                c[d2 + 160 >> 2] = 0;
              }
              a[d2 + 164 >> 0] = 1;
              c[d2 + 160 >> 2] = e2;
              c[d2 + 156 >> 2] = 1;
              h2 = d2 + 160 | 0;
              j2 = (c[d2 + 152 >> 2] | 0) + 1 | 0;
              f2 = e2;
            } else {
              h2 = d2 + 160 | 0;
              j2 = 1;
              f2 = c[d2 + 160 >> 2] | 0;
            }
            c[d2 + 152 >> 2] = j2;
            c[f2 >> 2] = c[y2 + 96 >> 2];
            c[f2 + 4 >> 2] = c[y2 + 96 + 4 >> 2];
            c[f2 + 8 >> 2] = c[y2 + 96 + 8 >> 2];
            c[f2 + 12 >> 2] = c[y2 + 96 + 12 >> 2];
            c[f2 + 16 >> 2] = c[y2 + 96 + 16 >> 2];
            c[f2 + 20 >> 2] = c[y2 + 96 + 20 >> 2];
            c[f2 + 24 >> 2] = c[y2 + 96 + 24 >> 2];
            c[f2 + 28 >> 2] = c[y2 + 96 + 28 >> 2];
            r2 = c[h2 >> 2] | 0;
            p2 = c[d2 + 136 >> 2] | 0;
            b[r2 >> 1] = b[p2 >> 1] | 0;
            b[r2 + 2 >> 1] = b[p2 + 2 >> 1] | 0;
            b[r2 + 4 >> 1] = b[p2 + 4 >> 1] | 0;
            b[r2 + 6 >> 1] = b[p2 + 6 >> 1] | 0;
            b[r2 + 8 >> 1] = b[p2 + 8 >> 1] | 0;
            b[r2 + 10 >> 1] = b[p2 + 10 >> 1] | 0;
            c[r2 + 12 >> 2] = 0;
            p2 = c[p2 + 12 >> 2] | 0;
            c[r2 + 16 >> 2] = (p2 | 0) > -1 ? 1 : 0 - p2 | 0;
          }
          c[d2 + 168 >> 2] = c[d2 + 152 >> 2];
          f2 = c[d2 + 116 >> 2] | 0;
          if (f2 | 0) {
            if (a[d2 + 120 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[f2 + -4 >> 2] | 0);
            }
            c[d2 + 116 >> 2] = 0;
          }
          a[d2 + 120 >> 0] = 1;
          c[d2 + 116 >> 2] = 0;
          c[d2 + 108 >> 2] = 0;
          c[d2 + 112 >> 2] = 0;
          f2 = c[d2 + 76 >> 2] | 0;
          if (!f2) {
            a[d2 + 80 >> 0] = 1;
            c[d2 + 76 >> 2] = 0;
            c[d2 + 68 >> 2] = 0;
            d2 = d2 + 72 | 0;
            c[d2 >> 2] = 0;
            i = y2;
            return;
          }
          if (a[d2 + 80 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[f2 + -4 >> 2] | 0);
          }
          c[d2 + 76 >> 2] = 0;
          a[d2 + 80 >> 0] = 1;
          c[d2 + 76 >> 2] = 0;
          c[d2 + 68 >> 2] = 0;
          d2 = d2 + 72 | 0;
          c[d2 >> 2] = 0;
          i = y2;
          return;
        }
        function $c(b2, d2, e2, f2, h2, i2, j2, k2, m2, n2, o2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          m2 = +m2;
          n2 = +n2;
          o2 = +o2;
          var p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0;
          N2 = c[b2 + 68 >> 2] | 0;
          if ((N2 | 0) == (c[b2 + 72 >> 2] | 0) ? (t2 = N2 | 0 ? N2 << 1 : 1, (N2 | 0) < (t2 | 0)) : 0) {
            if (!t2) {
              p2 = 0;
              r2 = N2;
            } else {
              c[6324] = (c[6324] | 0) + 1;
              p2 = ic((t2 * 152 | 3) + 16 | 0) | 0;
              if (!p2)
                p2 = 0;
              else {
                c[(p2 + 4 + 15 & -16) + -4 >> 2] = p2;
                p2 = p2 + 4 + 15 & -16;
              }
              r2 = c[b2 + 68 >> 2] | 0;
            }
            if ((r2 | 0) > 0) {
              q2 = 0;
              do {
                Lm(p2 + (q2 * 152 | 0) | 0, (c[b2 + 76 >> 2] | 0) + (q2 * 152 | 0) | 0, 152) | 0;
                q2 = q2 + 1 | 0;
              } while ((q2 | 0) != (r2 | 0));
            }
            q2 = c[b2 + 76 >> 2] | 0;
            if (q2 | 0) {
              if (a[b2 + 80 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[q2 + -4 >> 2] | 0);
              }
              c[b2 + 76 >> 2] = 0;
            }
            a[b2 + 80 >> 0] = 1;
            c[b2 + 76 >> 2] = p2;
            c[b2 + 72 >> 2] = t2;
            p2 = c[b2 + 68 >> 2] | 0;
          } else
            p2 = N2;
          c[b2 + 68 >> 2] = p2 + 1;
          M2 = c[b2 + 76 >> 2] | 0;
          c[M2 + (N2 * 152 | 0) + 140 >> 2] = h2;
          r2 = c[b2 + 16 >> 2] | 0;
          p2 = c[r2 + (e2 * 244 | 0) + 240 >> 2] | 0;
          t2 = c[r2 + (f2 * 244 | 0) + 240 >> 2] | 0;
          c[M2 + (N2 * 152 | 0) + 144 >> 2] = e2;
          c[M2 + (N2 * 152 | 0) + 148 >> 2] = f2;
          q2 = c[i2 + 84 >> 2] | 0;
          c[M2 + (N2 * 152 | 0) + 104 >> 2] = q2;
          c[M2 + (N2 * 152 | 0) + 132 >> 2] = 0;
          g[M2 + (N2 * 152 | 0) + 100 >> 2] = 0;
          g[M2 + (N2 * 152 | 0) + 96 >> 2] = 0;
          L2 = (c[l >> 2] = q2, +g[l >> 2]);
          if (p2 | 0) {
            c[M2 + (N2 * 152 | 0) + 16 >> 2] = c[d2 >> 2];
            c[M2 + (N2 * 152 | 0) + 16 + 4 >> 2] = c[d2 + 4 >> 2];
            c[M2 + (N2 * 152 | 0) + 16 + 8 >> 2] = c[d2 + 8 >> 2];
            c[M2 + (N2 * 152 | 0) + 16 + 12 >> 2] = c[d2 + 12 >> 2];
            K2 = +g[j2 + 4 >> 2];
            D2 = +g[M2 + (N2 * 152 | 0) + 24 >> 2];
            H2 = +g[j2 + 8 >> 2];
            I2 = +g[M2 + (N2 * 152 | 0) + 20 >> 2];
            E2 = +g[M2 + (N2 * 152 | 0) + 16 >> 2];
            J2 = +g[j2 >> 2];
            g[M2 + (N2 * 152 | 0) >> 2] = K2 * D2 - H2 * I2;
            g[M2 + (N2 * 152 | 0) + 4 >> 2] = H2 * E2 - D2 * J2;
            g[M2 + (N2 * 152 | 0) + 8 >> 2] = I2 * J2 - K2 * E2;
            g[M2 + (N2 * 152 | 0) + 12 >> 2] = 0;
            v2 = ((K2 * D2 - H2 * I2) * +g[p2 + 304 >> 2] + (H2 * E2 - D2 * J2) * +g[p2 + 308 >> 2] + (I2 * J2 - K2 * E2) * +g[p2 + 312 >> 2]) * +g[p2 + 584 >> 2];
            s2 = ((K2 * D2 - H2 * I2) * +g[p2 + 320 >> 2] + (H2 * E2 - D2 * J2) * +g[p2 + 324 >> 2] + (I2 * J2 - K2 * E2) * +g[p2 + 328 >> 2]) * +g[p2 + 588 >> 2];
            u2 = ((K2 * D2 - H2 * I2) * +g[p2 + 336 >> 2] + (H2 * E2 - D2 * J2) * +g[p2 + 340 >> 2] + (I2 * J2 - K2 * E2) * +g[p2 + 344 >> 2]) * +g[p2 + 592 >> 2];
            g[M2 + (N2 * 152 | 0) + 64 >> 2] = v2;
            g[M2 + (N2 * 152 | 0) + 68 >> 2] = s2;
            g[M2 + (N2 * 152 | 0) + 72 >> 2] = u2;
            g[M2 + (N2 * 152 | 0) + 76 >> 2] = 0;
            z2 = E2;
            A2 = I2;
            B2 = D2;
            C2 = K2 * D2 - H2 * I2;
            D2 = H2 * E2 - D2 * J2;
            E2 = I2 * J2 - K2 * E2;
          } else {
            c[M2 + (N2 * 152 | 0) + 64 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 64 + 4 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 64 + 8 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 64 + 12 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 4 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 8 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 12 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 16 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 20 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 24 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 28 >> 2] = 0;
            s2 = 0;
            u2 = 0;
            v2 = 0;
            z2 = 0;
            A2 = 0;
            B2 = 0;
            C2 = 0;
            D2 = 0;
            E2 = 0;
          }
          if (t2 | 0) {
            K2 = -+g[d2 >> 2];
            P2 = -+g[d2 + 4 >> 2];
            J2 = -+g[d2 + 8 >> 2];
            g[M2 + (N2 * 152 | 0) + 48 >> 2] = K2;
            g[M2 + (N2 * 152 | 0) + 52 >> 2] = P2;
            g[M2 + (N2 * 152 | 0) + 56 >> 2] = J2;
            g[M2 + (N2 * 152 | 0) + 60 >> 2] = 0;
            O2 = +g[k2 + 4 >> 2];
            R2 = +g[k2 + 8 >> 2];
            Q2 = +g[k2 >> 2];
            g[M2 + (N2 * 152 | 0) + 32 >> 2] = O2 * J2 - R2 * P2;
            g[M2 + (N2 * 152 | 0) + 36 >> 2] = R2 * K2 - Q2 * J2;
            g[M2 + (N2 * 152 | 0) + 40 >> 2] = Q2 * P2 - O2 * K2;
            g[M2 + (N2 * 152 | 0) + 44 >> 2] = 0;
            w2 = ((O2 * J2 - R2 * P2) * +g[t2 + 304 >> 2] + (R2 * K2 - Q2 * J2) * +g[t2 + 308 >> 2] + (Q2 * P2 - O2 * K2) * +g[t2 + 312 >> 2]) * +g[t2 + 584 >> 2];
            x2 = ((O2 * J2 - R2 * P2) * +g[t2 + 320 >> 2] + (R2 * K2 - Q2 * J2) * +g[t2 + 324 >> 2] + (Q2 * P2 - O2 * K2) * +g[t2 + 328 >> 2]) * +g[t2 + 588 >> 2];
            y2 = ((O2 * J2 - R2 * P2) * +g[t2 + 336 >> 2] + (R2 * K2 - Q2 * J2) * +g[t2 + 340 >> 2] + (Q2 * P2 - O2 * K2) * +g[t2 + 344 >> 2]) * +g[t2 + 592 >> 2];
            g[M2 + (N2 * 152 | 0) + 80 >> 2] = w2;
            g[M2 + (N2 * 152 | 0) + 84 >> 2] = x2;
            g[M2 + (N2 * 152 | 0) + 88 >> 2] = y2;
            g[M2 + (N2 * 152 | 0) + 92 >> 2] = 0;
            F2 = K2;
            G2 = P2;
            H2 = J2;
            I2 = O2 * J2 - R2 * P2;
            J2 = R2 * K2 - Q2 * J2;
            K2 = Q2 * P2 - O2 * K2;
          } else {
            c[M2 + (N2 * 152 | 0) + 80 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 80 + 4 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 80 + 8 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 80 + 12 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 32 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 32 + 4 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 32 + 8 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 32 + 12 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 32 + 16 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 32 + 20 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 32 + 24 >> 2] = 0;
            c[M2 + (N2 * 152 | 0) + 32 + 28 >> 2] = 0;
            w2 = 0;
            x2 = 0;
            y2 = 0;
            F2 = 0;
            G2 = 0;
            H2 = 0;
            I2 = 0;
            J2 = 0;
            K2 = 0;
          }
          if (p2 | 0) {
            P2 = +g[j2 + 8 >> 2];
            Q2 = +g[j2 + 4 >> 2];
            R2 = +g[j2 >> 2];
            u2 = +g[p2 + 384 >> 2] + ((s2 * P2 - u2 * Q2) * +g[d2 >> 2] + (u2 * R2 - P2 * v2) * +g[d2 + 4 >> 2] + (Q2 * v2 - s2 * R2) * +g[d2 + 8 >> 2]);
          } else
            u2 = 0;
          if (t2 | 0) {
            Q2 = -w2;
            s2 = -x2;
            y2 = -y2;
            O2 = +g[k2 + 8 >> 2];
            P2 = +g[k2 + 4 >> 2];
            R2 = +g[k2 >> 2];
            s2 = +g[t2 + 384 >> 2] + ((O2 * s2 - P2 * y2) * +g[d2 >> 2] + (R2 * y2 - O2 * Q2) * +g[d2 + 4 >> 2] + (P2 * Q2 - R2 * s2) * +g[d2 + 8 >> 2]);
          } else
            s2 = 0;
          x2 = m2 / (u2 + s2);
          g[M2 + (N2 * 152 | 0) + 108 >> 2] = x2;
          if (p2 | 0) {
            u2 = +g[r2 + (e2 * 244 | 0) + 192 >> 2];
            v2 = +g[r2 + (e2 * 244 | 0) + 196 >> 2];
            w2 = +g[r2 + (e2 * 244 | 0) + 200 >> 2];
            s2 = (+g[r2 + (e2 * 244 | 0) + 176 >> 2] + +g[r2 + (e2 * 244 | 0) + 208 >> 2]) * z2 + (+g[r2 + (e2 * 244 | 0) + 180 >> 2] + +g[r2 + (e2 * 244 | 0) + 212 >> 2]) * A2 + (+g[r2 + (e2 * 244 | 0) + 184 >> 2] + +g[r2 + (e2 * 244 | 0) + 216 >> 2]) * B2;
          } else {
            u2 = 0;
            v2 = 0;
            w2 = 0;
            s2 = z2 * 0 + A2 * 0 + B2 * 0;
          }
          s2 = s2 + (u2 * C2 + v2 * D2 + w2 * E2);
          if (t2 | 0) {
            O2 = +g[r2 + (f2 * 244 | 0) + 192 >> 2];
            P2 = +g[r2 + (f2 * 244 | 0) + 196 >> 2];
            R2 = +g[r2 + (f2 * 244 | 0) + 200 >> 2];
            Q2 = (+g[r2 + (f2 * 244 | 0) + 176 >> 2] + +g[r2 + (f2 * 244 | 0) + 208 >> 2]) * F2 + (+g[r2 + (f2 * 244 | 0) + 180 >> 2] + +g[r2 + (f2 * 244 | 0) + 212 >> 2]) * G2 + (+g[r2 + (f2 * 244 | 0) + 184 >> 2] + +g[r2 + (f2 * 244 | 0) + 216 >> 2]) * H2;
            O2 = O2 * I2;
            P2 = P2 * J2;
            P2 = O2 + P2;
            R2 = R2 * K2;
            R2 = P2 + R2;
            R2 = Q2 + R2;
            R2 = s2 + R2;
            R2 = n2 - R2;
            R2 = x2 * R2;
            f2 = M2 + (N2 * 152 | 0) + 112 | 0;
            g[f2 >> 2] = R2;
            f2 = M2 + (N2 * 152 | 0) + 128 | 0;
            g[f2 >> 2] = 0;
            f2 = M2 + (N2 * 152 | 0) + 116 | 0;
            g[f2 >> 2] = o2;
            R2 = -L2;
            f2 = M2 + (N2 * 152 | 0) + 120 | 0;
            g[f2 >> 2] = R2;
            f2 = M2 + (N2 * 152 | 0) + 124 | 0;
            c[f2 >> 2] = q2;
            return;
          } else {
            O2 = 0;
            P2 = 0;
            R2 = 0;
            Q2 = F2 * 0 + G2 * 0 + H2 * 0;
            O2 = O2 * I2;
            P2 = P2 * J2;
            P2 = O2 + P2;
            R2 = R2 * K2;
            R2 = P2 + R2;
            R2 = Q2 + R2;
            R2 = s2 + R2;
            R2 = n2 - R2;
            R2 = x2 * R2;
            f2 = M2 + (N2 * 152 | 0) + 112 | 0;
            g[f2 >> 2] = R2;
            f2 = M2 + (N2 * 152 | 0) + 128 | 0;
            g[f2 >> 2] = 0;
            f2 = M2 + (N2 * 152 | 0) + 116 | 0;
            g[f2 >> 2] = o2;
            R2 = -L2;
            f2 = M2 + (N2 * 152 | 0) + 120 | 0;
            g[f2 >> 2] = R2;
            f2 = M2 + (N2 * 152 | 0) + 124 | 0;
            c[f2 >> 2] = q2;
            return;
          }
        }
        function ad(a2, b2, d2, e2, f2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = +h2;
          var j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0;
          C2 = i;
          i = i + 272 | 0;
          c[C2 + 128 >> 2] = c[d2 >> 2];
          c[C2 + 128 + 4 >> 2] = c[d2 + 4 >> 2];
          c[C2 + 128 + 8 >> 2] = c[d2 + 8 >> 2];
          c[C2 + 128 + 12 >> 2] = c[d2 + 12 >> 2];
          c[C2 + 128 + 16 >> 2] = c[d2 + 16 >> 2];
          c[C2 + 128 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[C2 + 128 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[C2 + 128 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[C2 + 128 + 32 >> 2] = c[d2 + 32 >> 2];
          c[C2 + 128 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[C2 + 128 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[C2 + 128 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          c[C2 + 128 + 48 >> 2] = c[d2 + 48 >> 2];
          c[C2 + 128 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[C2 + 128 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[C2 + 128 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          c[C2 + 64 >> 2] = c[e2 >> 2];
          c[C2 + 64 + 4 >> 2] = c[e2 + 4 >> 2];
          c[C2 + 64 + 8 >> 2] = c[e2 + 8 >> 2];
          c[C2 + 64 + 12 >> 2] = c[e2 + 12 >> 2];
          c[C2 + 64 + 16 >> 2] = c[e2 + 16 >> 2];
          c[C2 + 64 + 16 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
          c[C2 + 64 + 16 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
          c[C2 + 64 + 16 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
          c[C2 + 64 + 32 >> 2] = c[e2 + 32 >> 2];
          c[C2 + 64 + 32 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
          c[C2 + 64 + 32 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
          c[C2 + 64 + 32 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
          c[C2 + 64 + 48 >> 2] = c[e2 + 48 >> 2];
          c[C2 + 64 + 48 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
          c[C2 + 64 + 48 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
          c[C2 + 64 + 48 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
          D2 = +g[C2 + 64 + 52 >> 2] - +g[C2 + 128 + 52 >> 2];
          I2 = +g[C2 + 64 + 56 >> 2] - +g[C2 + 128 + 56 >> 2];
          g[C2 + 16 >> 2] = +g[C2 + 64 + 48 >> 2] - +g[C2 + 128 + 48 >> 2];
          g[C2 + 16 + 4 >> 2] = D2;
          g[C2 + 16 + 8 >> 2] = I2;
          g[C2 + 16 + 12 >> 2] = 0;
          rf(C2 + 128 | 0, C2 + 64 | 0, C2 + 208 | 0, C2 + 192 | 0);
          I2 = +g[C2 + 192 >> 2];
          D2 = I2 * +g[C2 + 208 + 4 >> 2];
          F2 = I2 * +g[C2 + 208 + 8 >> 2];
          g[C2 >> 2] = +g[C2 + 208 >> 2] * I2;
          g[C2 + 4 >> 2] = D2;
          g[C2 + 8 >> 2] = F2;
          g[C2 + 12 >> 2] = 0;
          c[C2 + 208 + 48 >> 2] = 0;
          c[C2 + 208 + 48 + 4 >> 2] = 0;
          c[C2 + 208 + 48 + 8 >> 2] = 0;
          c[C2 + 208 + 48 + 12 >> 2] = 0;
          Jg(C2 + 128 | 0, C2 + 192 | 0);
          F2 = +g[C2 + 192 >> 2];
          D2 = +g[C2 + 192 + 4 >> 2];
          I2 = +g[C2 + 192 + 8 >> 2];
          G2 = +g[C2 + 192 + 12 >> 2];
          E2 = F2 * (2 / (F2 * F2 + D2 * D2 + I2 * I2 + G2 * G2));
          j2 = D2 * (2 / (F2 * F2 + D2 * D2 + I2 * I2 + G2 * G2));
          H2 = I2 * (2 / (F2 * F2 + D2 * D2 + I2 * I2 + G2 * G2));
          g[C2 + 208 >> 2] = 1 - (D2 * j2 + I2 * H2);
          g[C2 + 208 + 4 >> 2] = F2 * j2 - G2 * H2;
          g[C2 + 208 + 8 >> 2] = F2 * H2 + G2 * j2;
          g[C2 + 208 + 12 >> 2] = 0;
          g[C2 + 208 + 16 >> 2] = F2 * j2 + G2 * H2;
          g[C2 + 208 + 20 >> 2] = 1 - (F2 * E2 + I2 * H2);
          g[C2 + 208 + 24 >> 2] = D2 * H2 - G2 * E2;
          g[C2 + 208 + 28 >> 2] = 0;
          g[C2 + 208 + 32 >> 2] = F2 * H2 - G2 * j2;
          g[C2 + 208 + 36 >> 2] = D2 * H2 + G2 * E2;
          g[C2 + 208 + 40 >> 2] = 1 - (F2 * E2 + D2 * j2);
          g[C2 + 208 + 44 >> 2] = 0;
          eh(b2, C2 + 208 | 0, C2 + 16 | 0, C2, C2 + 48 | 0, C2 + 32 | 0);
          if ((c[a2 + 308 >> 2] | 0) <= 0) {
            i = C2;
            return;
          }
          m2 = 0;
          do {
            n2 = c[(c[a2 + 316 >> 2] | 0) + (m2 << 2) >> 2] | 0;
            if (Jb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 31](f2, c[n2 + 188 >> 2] | 0) | 0 ? (A2 = c[n2 + 192 >> 2] | 0, Yb[c[(c[A2 >> 2] | 0) + 8 >> 2] & 127](A2, n2 + 4 | 0, C2 + 192 | 0, C2 + 16 | 0), o2 = +g[C2 + 192 >> 2] + +g[C2 + 48 >> 2], p2 = +g[C2 + 192 + 4 >> 2] + +g[C2 + 48 + 4 >> 2], q2 = +g[C2 + 192 + 8 >> 2] + +g[C2 + 48 + 8 >> 2], g[C2 + 192 >> 2] = o2, g[C2 + 192 + 4 >> 2] = p2, g[C2 + 192 + 8 >> 2] = q2, g[C2 + 192 + 12 >> 2] = 0, r2 = +g[C2 + 16 >> 2] + +g[C2 + 32 >> 2], s2 = +g[C2 + 16 + 4 >> 2] + +g[C2 + 32 + 4 >> 2], t2 = +g[C2 + 16 + 8 >> 2] + +g[C2 + 32 + 8 >> 2], g[C2 + 16 >> 2] = r2, g[C2 + 16 + 4 >> 2] = s2, g[C2 + 16 + 8 >> 2] = t2, g[C2 + 16 + 12 >> 2] = 0, u2 = +g[d2 + 48 >> 2] - (r2 + o2) * 0.5, v2 = +g[d2 + 52 >> 2] - (s2 + p2) * 0.5, w2 = +g[d2 + 56 >> 2] - (t2 + q2) * 0.5, x2 = +g[e2 + 48 >> 2] - (r2 + o2) * 0.5, y2 = +g[e2 + 52 >> 2] - (s2 + p2) * 0.5, z2 = +g[e2 + 56 >> 2] - (t2 + q2) * 0.5, A2 = u2 < -((r2 - o2) * 0.5) | (u2 > (r2 - o2) * 0.5 ? 8 : 0) | (v2 < -((s2 - p2) * 0.5) ? 2 : 0) | (v2 > (s2 - p2) * 0.5 ? 16 : 0) | (w2 < -((t2 - q2) * 0.5) ? 4 : 0) | (w2 > (t2 - q2) * 0.5 ? 32 : 0), B2 = x2 < -((r2 - o2) * 0.5) | (x2 > (r2 - o2) * 0.5 ? 8 : 0) | (y2 < -((s2 - p2) * 0.5) ? 2 : 0) | (y2 > (s2 - p2) * 0.5 ? 16 : 0) | (z2 < -((t2 - q2) * 0.5) ? 4 : 0) | (z2 > (t2 - q2) * 0.5 ? 32 : 0), (A2 & B2 | 0) == 0) : 0) {
              if (u2 < -((r2 - o2) * 0.5))
                if (!((-u2 - (r2 - o2) * 0.5) / (x2 - u2) >= 0)) {
                  j2 = 0;
                  k2 = 1065353216;
                } else {
                  j2 = (-u2 - (r2 - o2) * 0.5) / (x2 - u2);
                  k2 = 1065353216;
                }
              else if (x2 < -((r2 - o2) * 0.5) ? (-u2 - (r2 - o2) * 0.5) / (x2 - u2) < 1 : 0) {
                j2 = 0;
                k2 = (g[l >> 2] = (-u2 - (r2 - o2) * 0.5) / (x2 - u2), c[l >> 2] | 0);
              } else {
                j2 = 0;
                k2 = 1065353216;
              }
              if (v2 < -((s2 - p2) * 0.5)) {
                if (j2 <= (-v2 - (s2 - p2) * 0.5) / (y2 - v2))
                  j2 = (-v2 - (s2 - p2) * 0.5) / (y2 - v2);
              } else if (y2 < -((s2 - p2) * 0.5) ? (-v2 - (s2 - p2) * 0.5) / (y2 - v2) < (c[l >> 2] = k2, +g[l >> 2]) : 0)
                k2 = (g[l >> 2] = (-v2 - (s2 - p2) * 0.5) / (y2 - v2), c[l >> 2] | 0);
              if (w2 < -((t2 - q2) * 0.5)) {
                if (j2 <= (-w2 - (t2 - q2) * 0.5) / (z2 - w2))
                  j2 = (-w2 - (t2 - q2) * 0.5) / (z2 - w2);
              } else if (z2 < -((t2 - q2) * 0.5) ? (-w2 - (t2 - q2) * 0.5) / (z2 - w2) < (c[l >> 2] = k2, +g[l >> 2]) : 0)
                k2 = (g[l >> 2] = (-w2 - (t2 - q2) * 0.5) / (z2 - w2), c[l >> 2] | 0);
              if (u2 > (r2 - o2) * 0.5) {
                if (j2 <= ((r2 - o2) * 0.5 - u2) / (x2 - u2))
                  j2 = ((r2 - o2) * 0.5 - u2) / (x2 - u2);
              } else if (x2 > (r2 - o2) * 0.5 ? ((r2 - o2) * 0.5 - u2) / (x2 - u2) < (c[l >> 2] = k2, +g[l >> 2]) : 0)
                k2 = (g[l >> 2] = ((r2 - o2) * 0.5 - u2) / (x2 - u2), c[l >> 2] | 0);
              if (v2 > (s2 - p2) * 0.5) {
                if (j2 <= ((s2 - p2) * 0.5 - v2) / (y2 - v2))
                  j2 = ((s2 - p2) * 0.5 - v2) / (y2 - v2);
              } else if (y2 > (s2 - p2) * 0.5 ? ((s2 - p2) * 0.5 - v2) / (y2 - v2) < (c[l >> 2] = k2, +g[l >> 2]) : 0)
                k2 = (g[l >> 2] = ((s2 - p2) * 0.5 - v2) / (y2 - v2), c[l >> 2] | 0);
              if (!(A2 & 32)) {
                if ((B2 & 32 | 0) != 0 ? ((t2 - q2) * 0.5 - w2) / (z2 - w2) < (c[l >> 2] = k2, +g[l >> 2]) : 0)
                  k2 = (g[l >> 2] = ((t2 - q2) * 0.5 - w2) / (z2 - w2), c[l >> 2] | 0);
              } else if (j2 <= ((t2 - q2) * 0.5 - w2) / (z2 - w2))
                j2 = ((t2 - q2) * 0.5 - w2) / (z2 - w2);
              if (j2 <= (c[l >> 2] = k2, +g[l >> 2])) {
                k2 = c[n2 + 192 >> 2] | 0;
                c[C2 + 208 >> 2] = 0;
                c[C2 + 208 + 4 >> 2] = k2;
                c[C2 + 208 + 8 >> 2] = n2;
                c[C2 + 208 + 12 >> 2] = n2 + 4;
                c[C2 + 208 + 16 >> 2] = -1;
                c[C2 + 208 + 20 >> 2] = -1;
                pc(b2, C2 + 128 | 0, C2 + 64 | 0, C2 + 208 | 0, f2, h2);
              }
            }
            m2 = m2 + 1 | 0;
          } while ((m2 | 0) < (c[a2 + 308 >> 2] | 0));
          i = C2;
          return;
        }
        function bd(d2, e2, f2, h2, j2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          h2 = +h2;
          j2 = +j2;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
          y2 = i;
          i = i + 240 | 0;
          n2 = +g[d2 + 136 >> 2] + h2;
          o2 = +g[d2 + 140 >> 2] + j2;
          g[d2 + 152 >> 2] = +g[d2 + 132 >> 2] + f2;
          g[d2 + 156 >> 2] = n2;
          g[d2 + 160 >> 2] = o2;
          g[d2 + 164 >> 2] = 0;
          c[y2 + 168 >> 2] = 1065353216;
          q2 = y2 + 168 + 4 | 0;
          c[q2 >> 2] = 0;
          c[q2 + 4 >> 2] = 0;
          c[q2 + 8 >> 2] = 0;
          c[q2 + 12 >> 2] = 0;
          c[y2 + 168 + 20 >> 2] = 1065353216;
          r2 = y2 + 168 + 24 | 0;
          c[r2 >> 2] = 0;
          c[r2 + 4 >> 2] = 0;
          c[r2 + 8 >> 2] = 0;
          c[r2 + 12 >> 2] = 0;
          c[y2 + 168 + 40 >> 2] = 1065353216;
          s2 = y2 + 168 + 44 | 0;
          c[s2 >> 2] = 0;
          c[s2 + 4 >> 2] = 0;
          c[s2 + 8 >> 2] = 0;
          c[s2 + 12 >> 2] = 0;
          c[s2 + 16 >> 2] = 0;
          c[y2 + 104 >> 2] = 1065353216;
          t2 = y2 + 104 + 4 | 0;
          c[t2 >> 2] = 0;
          c[t2 + 4 >> 2] = 0;
          c[t2 + 8 >> 2] = 0;
          c[t2 + 12 >> 2] = 0;
          c[y2 + 104 + 20 >> 2] = 1065353216;
          u2 = y2 + 104 + 24 | 0;
          c[u2 >> 2] = 0;
          c[u2 + 4 >> 2] = 0;
          c[u2 + 8 >> 2] = 0;
          c[u2 + 12 >> 2] = 0;
          c[y2 + 104 + 40 >> 2] = 1065353216;
          v2 = y2 + 104 + 44 | 0;
          c[v2 >> 2] = 0;
          c[v2 + 4 >> 2] = 0;
          c[v2 + 8 >> 2] = 0;
          c[v2 + 12 >> 2] = 0;
          c[v2 + 16 >> 2] = 0;
          o2 = 1;
          p2 = 10;
          while (1) {
            if ((p2 | 0) <= 0) {
              x2 = 29;
              break;
            }
            p2 = p2 + -1 | 0;
            c[y2 + 168 + 48 >> 2] = c[d2 + 132 >> 2];
            c[y2 + 168 + 48 + 4 >> 2] = c[d2 + 132 + 4 >> 2];
            c[y2 + 168 + 48 + 8 >> 2] = c[d2 + 132 + 8 >> 2];
            c[y2 + 168 + 48 + 12 >> 2] = c[d2 + 132 + 12 >> 2];
            c[y2 + 104 + 48 >> 2] = c[d2 + 152 >> 2];
            c[y2 + 104 + 48 + 4 >> 2] = c[d2 + 152 + 4 >> 2];
            c[y2 + 104 + 48 + 8 >> 2] = c[d2 + 152 + 8 >> 2];
            c[y2 + 104 + 48 + 12 >> 2] = c[d2 + 152 + 12 >> 2];
            m2 = +g[d2 + 132 >> 2] - +g[d2 + 152 >> 2];
            n2 = +g[d2 + 136 >> 2] - +g[d2 + 156 >> 2];
            f2 = +g[d2 + 140 >> 2] - +g[d2 + 160 >> 2];
            A2 = +g[d2 + 168 >> 2];
            k2 = +g[d2 + 172 >> 2];
            B2 = +g[d2 + 176 >> 2];
            j2 = +g[d2 + 180 >> 2];
            C2 = A2 * (2 / (A2 * A2 + k2 * k2 + B2 * B2 + j2 * j2));
            h2 = k2 * (2 / (A2 * A2 + k2 * k2 + B2 * B2 + j2 * j2));
            l2 = B2 * (2 / (A2 * A2 + k2 * k2 + B2 * B2 + j2 * j2));
            g[y2 + 168 >> 2] = 1 - (k2 * h2 + B2 * l2);
            g[q2 >> 2] = A2 * h2 - j2 * l2;
            g[y2 + 168 + 8 >> 2] = A2 * l2 + j2 * h2;
            g[y2 + 168 + 12 >> 2] = 0;
            g[y2 + 168 + 16 >> 2] = A2 * h2 + j2 * l2;
            g[y2 + 168 + 20 >> 2] = 1 - (A2 * C2 + B2 * l2);
            g[r2 >> 2] = k2 * l2 - j2 * C2;
            g[y2 + 168 + 28 >> 2] = 0;
            g[y2 + 168 + 32 >> 2] = A2 * l2 - j2 * h2;
            g[y2 + 168 + 36 >> 2] = k2 * l2 + j2 * C2;
            g[y2 + 168 + 40 >> 2] = 1 - (A2 * C2 + k2 * h2);
            g[s2 >> 2] = 0;
            h2 = +g[d2 + 184 >> 2];
            k2 = +g[d2 + 188 >> 2];
            C2 = +g[d2 + 192 >> 2];
            A2 = +g[d2 + 196 >> 2];
            j2 = h2 * (2 / (h2 * h2 + k2 * k2 + C2 * C2 + A2 * A2));
            l2 = k2 * (2 / (h2 * h2 + k2 * k2 + C2 * C2 + A2 * A2));
            B2 = C2 * (2 / (h2 * h2 + k2 * k2 + C2 * C2 + A2 * A2));
            g[y2 + 104 >> 2] = 1 - (k2 * l2 + C2 * B2);
            g[t2 >> 2] = h2 * l2 - A2 * B2;
            g[y2 + 104 + 8 >> 2] = h2 * B2 + A2 * l2;
            g[y2 + 104 + 12 >> 2] = 0;
            g[y2 + 104 + 16 >> 2] = h2 * l2 + A2 * B2;
            g[y2 + 104 + 20 >> 2] = 1 - (h2 * j2 + C2 * B2);
            g[u2 >> 2] = k2 * B2 - A2 * j2;
            g[y2 + 104 + 28 >> 2] = 0;
            g[y2 + 104 + 32 >> 2] = h2 * B2 - A2 * l2;
            g[y2 + 104 + 36 >> 2] = k2 * B2 + A2 * j2;
            g[y2 + 104 + 40 >> 2] = 1 - (h2 * j2 + k2 * l2);
            g[v2 >> 2] = 0;
            z2 = c[d2 + 8 >> 2] | 0;
            g[y2 + 4 >> 2] = 1;
            b[y2 + 8 >> 1] = 1;
            b[y2 + 10 >> 1] = -1;
            c[y2 + 76 >> 2] = 0;
            c[y2 + 12 >> 2] = 0;
            c[y2 + 12 + 4 >> 2] = 0;
            c[y2 + 12 + 8 >> 2] = 0;
            c[y2 + 12 + 12 >> 2] = 0;
            c[y2 + 12 + 16 >> 2] = 0;
            c[y2 + 12 + 20 >> 2] = 0;
            c[y2 + 12 + 24 >> 2] = 0;
            c[y2 + 12 + 28 >> 2] = 0;
            c[y2 >> 2] = 4196;
            c[y2 + 80 >> 2] = z2;
            g[y2 + 84 >> 2] = m2;
            g[y2 + 88 >> 2] = n2;
            g[y2 + 92 >> 2] = f2;
            g[y2 + 96 >> 2] = 0;
            g[y2 + 100 >> 2] = 0;
            z2 = c[(c[z2 + 188 >> 2] | 0) + 4 >> 2] | 0;
            b[y2 + 8 >> 1] = z2;
            b[y2 + 10 >> 1] = z2 >>> 16;
            z2 = c[d2 + 12 >> 2] | 0;
            f2 = +Cb[c[(c[z2 >> 2] | 0) + 48 >> 2] & 15](z2);
            z2 = c[d2 + 12 >> 2] | 0;
            jb[c[(c[z2 >> 2] | 0) + 44 >> 2] & 31](z2, f2 + +g[d2 + 64 >> 2]);
            if (!((((((((((((+g[y2 + 168 >> 2] == +g[y2 + 104 >> 2] ? +g[y2 + 168 + 16 >> 2] == +g[y2 + 104 + 16 >> 2] : 0) ? +g[y2 + 168 + 32 >> 2] == +g[y2 + 104 + 32 >> 2] : 0) ? +g[q2 >> 2] == +g[t2 >> 2] : 0) ? +g[y2 + 168 + 20 >> 2] == +g[y2 + 104 + 20 >> 2] : 0) ? +g[y2 + 168 + 36 >> 2] == +g[y2 + 104 + 36 >> 2] : 0) ? +g[y2 + 168 + 8 >> 2] == +g[y2 + 104 + 8 >> 2] : 0) ? +g[r2 >> 2] == +g[u2 >> 2] : 0) ? +g[y2 + 168 + 40 >> 2] == +g[y2 + 104 + 40 >> 2] : 0) ? +g[y2 + 168 + 60 >> 2] == +g[y2 + 104 + 60 >> 2] : 0) ? +g[y2 + 168 + 56 >> 2] == +g[y2 + 104 + 56 >> 2] : 0) ? +g[y2 + 168 + 52 >> 2] == +g[y2 + 104 + 52 >> 2] : 0) ? +g[y2 + 168 + 48 >> 2] == +g[y2 + 104 + 48 >> 2] : 0))
              x2 = 16;
            do
              if ((x2 | 0) == 16) {
                x2 = 0;
                if (!(a[d2 + 250 >> 0] | 0)) {
                  Hd(e2, c[d2 + 12 >> 2] | 0, y2 + 168 | 0, y2 + 104 | 0, y2, +g[e2 + 56 >> 2]);
                  break;
                } else {
                  ad(c[d2 + 8 >> 2] | 0, c[d2 + 12 >> 2] | 0, y2 + 168 | 0, y2 + 104 | 0, y2, +g[e2 + 56 >> 2]);
                  break;
                }
              }
            while (0);
            z2 = c[d2 + 12 >> 2] | 0;
            jb[c[(c[z2 >> 2] | 0) + 44 >> 2] & 31](z2, f2);
            C2 = +g[y2 + 4 >> 2];
            o2 = o2 - C2;
            if ((C2 < 1 ? (w2 = c[d2 + 8 >> 2] | 0, (c[w2 + 204 >> 2] & 4 | 0) == 0) : 0) ? yb[c[(c[d2 >> 2] | 0) + 56 >> 2] & 63](d2, w2, c[y2 + 76 >> 2] | 0) | 0 : 0) {
              f2 = +g[d2 + 152 >> 2];
              l2 = +g[d2 + 132 >> 2];
              j2 = +g[d2 + 156 >> 2];
              m2 = +g[d2 + 136 >> 2];
              k2 = +g[d2 + 160 >> 2];
              n2 = +g[d2 + 140 >> 2];
              h2 = +G(+((f2 - l2) * (f2 - l2) + (j2 - m2) * (j2 - m2) + (k2 - n2) * (k2 - n2)));
              if (h2 > 11920928955078125e-23) {
                E2 = +g[y2 + 44 >> 2];
                A2 = +g[y2 + 48 >> 2];
                F2 = +g[y2 + 52 >> 2];
                C2 = ((f2 - l2) * (1 / h2) * E2 + (j2 - m2) * (1 / h2) * A2 + (k2 - n2) * (1 / h2) * F2) * 2;
                D2 = (f2 - l2) * (1 / h2) - E2 * C2;
                B2 = (j2 - m2) * (1 / h2) - A2 * C2;
                j2 = (k2 - n2) * (1 / h2) - F2 * C2;
                k2 = 1 / +G(+(j2 * j2 + (D2 * D2 + B2 * B2)));
                c[d2 + 152 >> 2] = c[d2 + 132 >> 2];
                c[d2 + 152 + 4 >> 2] = c[d2 + 132 + 4 >> 2];
                c[d2 + 152 + 8 >> 2] = c[d2 + 132 + 8 >> 2];
                c[d2 + 152 + 12 >> 2] = c[d2 + 132 + 12 >> 2];
                f2 = h2 * (k2 * D2 - E2 * (F2 * k2 * j2 + (E2 * k2 * D2 + A2 * k2 * B2))) + +g[d2 + 152 >> 2];
                g[d2 + 152 >> 2] = f2;
                C2 = h2 * (k2 * B2 - A2 * (F2 * k2 * j2 + (E2 * k2 * D2 + A2 * k2 * B2))) + +g[d2 + 156 >> 2];
                g[d2 + 156 >> 2] = C2;
                k2 = h2 * (k2 * j2 - F2 * (F2 * k2 * j2 + (E2 * k2 * D2 + A2 * k2 * B2))) + +g[d2 + 160 >> 2];
                g[d2 + 160 >> 2] = k2;
                h2 = C2;
              } else
                h2 = j2;
              j2 = f2 - l2;
              h2 = h2 - m2;
              f2 = k2 - n2;
              if (!(j2 * j2 + h2 * h2 + f2 * f2 > 11920928955078125e-23)) {
                x2 = 26;
                break;
              }
              F2 = 1 / +G(+(j2 * j2 + h2 * h2 + f2 * f2));
              if (+g[d2 + 84 >> 2] * j2 * F2 + h2 * F2 * +g[d2 + 88 >> 2] + f2 * F2 * +g[d2 + 92 >> 2] <= 0) {
                x2 = 26;
                break;
              }
            } else {
              c[d2 + 132 >> 2] = c[d2 + 152 >> 2];
              c[d2 + 132 + 4 >> 2] = c[d2 + 152 + 4 >> 2];
              c[d2 + 132 + 8 >> 2] = c[d2 + 152 + 8 >> 2];
              c[d2 + 132 + 12 >> 2] = c[d2 + 152 + 12 >> 2];
            }
            if (!(o2 > 0.009999999776482582)) {
              x2 = 29;
              break;
            }
          }
          if ((x2 | 0) == 26) {
            i = y2;
            return;
          } else if ((x2 | 0) == 29) {
            i = y2;
            return;
          }
        }
        function cd(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0;
          x2 = i;
          i = i + 80 | 0;
          a[x2 + 16 >> 0] = 1;
          c[x2 + 12 >> 2] = 0;
          c[x2 + 4 >> 2] = 0;
          c[x2 + 8 >> 2] = 0;
          a[x2 + 36 >> 0] = 1;
          c[x2 + 32 >> 2] = 0;
          c[x2 + 24 >> 2] = 0;
          c[x2 + 28 >> 2] = 0;
          a[x2 + 56 >> 0] = 1;
          c[x2 + 52 >> 2] = 0;
          c[x2 + 44 >> 2] = 0;
          c[x2 + 48 >> 2] = 0;
          a[x2 + 76 >> 0] = 1;
          c[x2 + 72 >> 2] = 0;
          c[x2 + 64 >> 2] = 0;
          c[x2 + 68 >> 2] = 0;
          e2 = c[b2 + 8 >> 2] | 0;
          if ((e2 | 0) <= 0) {
            dj(x2);
            i = x2;
            return;
          }
          f2 = 0;
          p2 = 0;
          j2 = 0;
          h2 = 0;
          n2 = 0;
          while (1) {
            r2 = c[(c[(c[b2 + 16 >> 2] | 0) + (f2 << 2) >> 2] | 0) + 192 >> 2] | 0;
            q2 = (r2 + ~(r2 << 15) >> 10 ^ r2 + ~(r2 << 15)) * 9 | 0;
            q2 = (q2 >> 6 ^ q2) + ~((q2 >> 6 ^ q2) << 11) >> 16 ^ (q2 >> 6 ^ q2) + ~((q2 >> 6 ^ q2) << 11);
            g2 = q2 & p2 + -1;
            l2 = g2 >>> 0 < j2 >>> 0;
            a:
              do
                if (l2) {
                  j2 = c[h2 + (g2 << 2) >> 2] | 0;
                  if ((j2 | 0) != -1) {
                    m2 = c[x2 + 72 >> 2] | 0;
                    while (1) {
                      if ((r2 | 0) == (c[m2 + (j2 << 3) >> 2] | 0)) {
                        o2 = 9;
                        break;
                      }
                      k2 = c[n2 + (j2 << 2) >> 2] | 0;
                      if ((k2 | 0) == -1)
                        break;
                      else
                        j2 = k2;
                    }
                    if ((o2 | 0) == 9 ? (o2 = 0, (c[x2 + 52 >> 2] | 0) + (j2 << 2) | 0) : 0) {
                      j2 = p2;
                      g2 = n2;
                      break;
                    }
                    if (!l2) {
                      o2 = 16;
                      break;
                    }
                  }
                  e2 = c[h2 + (g2 << 2) >> 2] | 0;
                  if ((e2 | 0) != -1) {
                    j2 = c[x2 + 72 >> 2] | 0;
                    while (1) {
                      if ((r2 | 0) == (c[j2 + (e2 << 3) >> 2] | 0))
                        break;
                      e2 = c[n2 + (e2 << 2) >> 2] | 0;
                      if ((e2 | 0) == -1) {
                        o2 = 16;
                        break a;
                      }
                    }
                    c[(c[x2 + 52 >> 2] | 0) + (e2 << 2) >> 2] = r2;
                    e2 = p2;
                    g2 = n2;
                    o2 = 76;
                  } else
                    o2 = 16;
                } else
                  o2 = 16;
              while (0);
            if ((o2 | 0) == 16) {
              n2 = c[x2 + 44 >> 2] | 0;
              if ((n2 | 0) == (p2 | 0)) {
                e2 = p2 | 0 ? p2 << 1 : 1;
                if ((p2 | 0) < (e2 | 0)) {
                  if ((e2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, w2 = ic((e2 << 2 | 3) + 16 | 0) | 0, (w2 | 0) != 0) : 0) {
                    c[(w2 + 4 + 15 & -16) + -4 >> 2] = w2;
                    j2 = w2 + 4 + 15 & -16;
                  } else
                    j2 = 0;
                  if ((p2 | 0) > 0) {
                    h2 = 0;
                    do {
                      c[j2 + (h2 << 2) >> 2] = c[(c[x2 + 52 >> 2] | 0) + (h2 << 2) >> 2];
                      h2 = h2 + 1 | 0;
                    } while ((h2 | 0) != (p2 | 0));
                  }
                  h2 = c[x2 + 52 >> 2] | 0;
                  if (h2 | 0) {
                    if (a[x2 + 56 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[h2 + -4 >> 2] | 0);
                    }
                    c[x2 + 52 >> 2] = 0;
                  }
                  a[x2 + 56 >> 0] = 1;
                  c[x2 + 52 >> 2] = j2;
                  c[x2 + 48 >> 2] = e2;
                  h2 = p2;
                } else {
                  h2 = p2;
                  e2 = p2;
                }
              } else {
                h2 = n2;
                e2 = p2;
              }
              c[(c[x2 + 52 >> 2] | 0) + (h2 << 2) >> 2] = r2;
              c[x2 + 44 >> 2] = h2 + 1;
              h2 = c[x2 + 64 >> 2] | 0;
              if ((h2 | 0) == (c[x2 + 68 >> 2] | 0) ? (s2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (s2 | 0)) : 0) {
                if ((s2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, t2 = ic((s2 << 3 | 3) + 16 | 0) | 0, (t2 | 0) != 0) : 0) {
                  c[(t2 + 4 + 15 & -16) + -4 >> 2] = t2;
                  j2 = t2 + 4 + 15 & -16;
                } else
                  j2 = 0;
                if ((h2 | 0) > 0) {
                  e2 = 0;
                  do {
                    l2 = (c[x2 + 72 >> 2] | 0) + (e2 << 3) | 0;
                    m2 = c[l2 + 4 >> 2] | 0;
                    o2 = j2 + (e2 << 3) | 0;
                    c[o2 >> 2] = c[l2 >> 2];
                    c[o2 + 4 >> 2] = m2;
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != (h2 | 0));
                }
                e2 = c[x2 + 72 >> 2] | 0;
                if (e2 | 0) {
                  if (a[x2 + 76 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[e2 + -4 >> 2] | 0);
                  }
                  c[x2 + 72 >> 2] = 0;
                }
                a[x2 + 76 >> 0] = 1;
                c[x2 + 72 >> 2] = j2;
                c[x2 + 68 >> 2] = s2;
                h2 = c[x2 + 64 >> 2] | 0;
                e2 = c[x2 + 48 >> 2] | 0;
              }
              o2 = (c[x2 + 72 >> 2] | 0) + (h2 << 3) | 0;
              c[o2 >> 2] = r2;
              c[o2 + 4 >> 2] = 0;
              c[x2 + 64 >> 2] = h2 + 1;
              if ((p2 | 0) < (e2 | 0)) {
                m2 = c[x2 + 4 >> 2] | 0;
                do
                  if ((m2 | 0) < (e2 | 0)) {
                    do
                      if ((c[x2 + 8 >> 2] | 0) < (e2 | 0)) {
                        if ((e2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, u2 = ic((e2 << 2 | 3) + 16 | 0) | 0, (u2 | 0) != 0) : 0) {
                          c[(u2 + 4 + 15 & -16) + -4 >> 2] = u2;
                          g2 = u2 + 4 + 15 & -16;
                        } else
                          g2 = 0;
                        j2 = c[x2 + 12 >> 2] | 0;
                        if ((m2 | 0) <= 0) {
                          if (!j2) {
                            a[x2 + 16 >> 0] = 1;
                            c[x2 + 12 >> 2] = g2;
                            c[x2 + 8 >> 2] = e2;
                            break;
                          }
                        } else {
                          h2 = 0;
                          do {
                            c[g2 + (h2 << 2) >> 2] = c[j2 + (h2 << 2) >> 2];
                            h2 = h2 + 1 | 0;
                          } while ((h2 | 0) != (m2 | 0));
                        }
                        if (a[x2 + 16 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[j2 + -4 >> 2] | 0);
                        }
                        a[x2 + 16 >> 0] = 1;
                        c[x2 + 12 >> 2] = g2;
                        c[x2 + 8 >> 2] = e2;
                      } else
                        g2 = c[x2 + 12 >> 2] | 0;
                    while (0);
                    l2 = e2 << 2;
                    yn(g2 + (m2 << 2) | 0, 0, l2 - (m2 << 2) | 0) | 0;
                    c[x2 + 4 >> 2] = e2;
                    k2 = c[x2 + 24 >> 2] | 0;
                    if ((k2 | 0) < (e2 | 0)) {
                      do
                        if ((c[x2 + 28 >> 2] | 0) < (e2 | 0)) {
                          if ((e2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, v2 = ic((l2 | 3) + 16 | 0) | 0, (v2 | 0) != 0) : 0) {
                            c[(v2 + 4 + 15 & -16) + -4 >> 2] = v2;
                            g2 = v2 + 4 + 15 & -16;
                          } else
                            g2 = 0;
                          j2 = c[x2 + 32 >> 2] | 0;
                          if ((k2 | 0) <= 0) {
                            if (!j2) {
                              a[x2 + 36 >> 0] = 1;
                              c[x2 + 32 >> 2] = g2;
                              c[x2 + 28 >> 2] = e2;
                              break;
                            }
                          } else {
                            h2 = 0;
                            do {
                              c[g2 + (h2 << 2) >> 2] = c[j2 + (h2 << 2) >> 2];
                              h2 = h2 + 1 | 0;
                            } while ((h2 | 0) != (k2 | 0));
                          }
                          if (a[x2 + 36 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                          }
                          a[x2 + 36 >> 0] = 1;
                          c[x2 + 32 >> 2] = g2;
                          c[x2 + 28 >> 2] = e2;
                        } else
                          g2 = c[x2 + 32 >> 2] | 0;
                      while (0);
                      yn(g2 + (k2 << 2) | 0, 0, l2 - (k2 << 2) | 0) | 0;
                    }
                    c[x2 + 24 >> 2] = e2;
                    if ((e2 | 0) > 0) {
                      yn(c[x2 + 12 >> 2] | 0, -1, l2 | 0) | 0;
                      yn(c[x2 + 32 >> 2] | 0, -1, l2 | 0) | 0;
                    }
                    if ((m2 | 0) <= 0) {
                      e2 = c[x2 + 48 >> 2] | 0;
                      break;
                    }
                    h2 = c[x2 + 72 >> 2] | 0;
                    j2 = c[x2 + 12 >> 2] | 0;
                    k2 = c[x2 + 32 >> 2] | 0;
                    e2 = c[x2 + 48 >> 2] | 0;
                    g2 = 0;
                    do {
                      p2 = c[h2 + (g2 << 3) >> 2] | 0;
                      p2 = (p2 + ~(p2 << 15) >> 10 ^ p2 + ~(p2 << 15)) * 9 | 0;
                      p2 = j2 + ((((p2 >> 6 ^ p2) + ~((p2 >> 6 ^ p2) << 11) >> 16 ^ (p2 >> 6 ^ p2) + ~((p2 >> 6 ^ p2) << 11)) & e2 + -1) << 2) | 0;
                      c[k2 + (g2 << 2) >> 2] = c[p2 >> 2];
                      c[p2 >> 2] = g2;
                      g2 = g2 + 1 | 0;
                    } while ((g2 | 0) != (m2 | 0));
                  }
                while (0);
                g2 = q2 & e2 + -1;
              }
              h2 = c[x2 + 12 >> 2] | 0;
              o2 = h2 + (g2 << 2) | 0;
              g2 = c[x2 + 32 >> 2] | 0;
              c[g2 + (n2 << 2) >> 2] = c[o2 >> 2];
              c[o2 >> 2] = n2;
              o2 = 76;
            }
            if ((o2 | 0) == 76) {
              o2 = 0;
              mb[c[(c[r2 >> 2] | 0) + 60 >> 2] & 127](r2, d2);
              j2 = e2;
              e2 = c[b2 + 8 >> 2] | 0;
            }
            f2 = f2 + 1 | 0;
            if ((f2 | 0) >= (e2 | 0))
              break;
            p2 = j2;
            j2 = c[x2 + 4 >> 2] | 0;
            n2 = g2;
          }
          if ((e2 | 0) > 0)
            g2 = 0;
          else {
            dj(x2);
            i = x2;
            return;
          }
          do {
            f2 = c[(c[b2 + 16 >> 2] | 0) + (g2 << 2) >> 2] | 0;
            switch (c[f2 + 248 >> 2] | 0) {
              case 64:
              case 1: {
                mb[c[(c[f2 >> 2] | 0) + 24 >> 2] & 127](f2, d2);
                e2 = c[b2 + 8 >> 2] | 0;
                break;
              }
              default: {
              }
            }
            g2 = g2 + 1 | 0;
          } while ((g2 | 0) < (e2 | 0));
          dj(x2);
          i = x2;
          return;
        }
        function dd(b2, d2) {
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0;
          C2 = i;
          i = i + 64 | 0;
          e2 = c[b2 + 128 >> 2] | 0;
          if ((e2 | 0) > 0) {
            f2 = 0;
            do {
              me(c[b2 + 108 >> 2] | 0, c[b2 + 136 >> 2] | 0, f2, 0);
              f2 = f2 + 1 | 0;
              e2 = c[b2 + 128 >> 2] | 0;
            } while ((f2 | 0) < (e2 | 0));
          }
          f2 = c[b2 + 108 >> 2] | 0;
          t2 = +g[f2 + 352 >> 2];
          u2 = +g[f2 + 356 >> 2];
          h2 = +g[f2 + 360 >> 2];
          h2 = +G(+(t2 * t2 + u2 * u2 + h2 * h2)) * 3.5999999046325684;
          g[b2 + 104 >> 2] = h2;
          B2 = c[b2 + 120 >> 2] | 0;
          if (+g[f2 + 4 + (B2 << 2) >> 2] * +g[f2 + 352 >> 2] + +g[f2 + 20 + (B2 << 2) >> 2] * +g[f2 + 356 >> 2] + +g[f2 + 36 + (B2 << 2) >> 2] * +g[f2 + 360 >> 2] < 0)
            g[b2 + 104 >> 2] = -h2;
          if ((e2 | 0) > 0) {
            B2 = 0;
            do {
              A2 = c[b2 + 136 >> 2] | 0;
              p2 = A2 + (B2 * 284 | 0) | 0;
              Gg(f2, p2, 0);
              o2 = A2 + (B2 * 284 | 0) + 204 | 0;
              e2 = A2 + (B2 * 284 | 0) + 212 | 0;
              h2 = +g[o2 >> 2] + +g[e2 >> 2];
              q2 = A2 + (B2 * 284 | 0) + 52 | 0;
              v2 = A2 + (B2 * 284 | 0) + 56 | 0;
              w2 = A2 + (B2 * 284 | 0) + 60 | 0;
              D2 = A2 + (B2 * 284 | 0) + 36 | 0;
              x2 = A2 + (B2 * 284 | 0) + 16 | 0;
              t2 = h2 * +g[v2 >> 2] + +g[A2 + (B2 * 284 | 0) + 40 >> 2];
              u2 = h2 * +g[w2 >> 2] + +g[A2 + (B2 * 284 | 0) + 44 >> 2];
              g[A2 + (B2 * 284 | 0) + 16 >> 2] = +g[q2 >> 2] * h2 + +g[D2 >> 2];
              y2 = A2 + (B2 * 284 | 0) + 20 | 0;
              g[y2 >> 2] = t2;
              z2 = A2 + (B2 * 284 | 0) + 24 | 0;
              g[z2 >> 2] = u2;
              g[A2 + (B2 * 284 | 0) + 28 >> 2] = 0;
              g[C2 + 32 >> 2] = -1;
              f2 = c[b2 + 92 >> 2] | 0;
              D2 = sb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 31](f2, D2, x2, C2) | 0;
              f2 = A2 + (B2 * 284 | 0) + 88 | 0;
              c[f2 >> 2] = 0;
              do
                if (D2) {
                  h2 = h2 * +g[C2 + 32 >> 2];
                  c[p2 >> 2] = c[C2 + 16 >> 2];
                  c[p2 + 4 >> 2] = c[C2 + 16 + 4 >> 2];
                  c[p2 + 8 >> 2] = c[C2 + 16 + 8 >> 2];
                  c[p2 + 12 >> 2] = c[C2 + 16 + 12 >> 2];
                  a[A2 + (B2 * 284 | 0) + 84 >> 0] = 1;
                  if (!(a[22096] | 0)) {
                    a[22096] = 1;
                    c[C2 + 40 >> 2] = 0;
                    c[C2 + 40 + 4 >> 2] = 0;
                    c[C2 + 40 + 8 >> 2] = 0;
                    c[C2 + 40 + 12 >> 2] = 0;
                    If(23496, 0, 0, 0, C2 + 40 | 0);
                  }
                  c[5925] = c[5925] | 1;
                  g[5970] = 0;
                  j2 = +g[5980] * 0;
                  k2 = +g[5981] * 0;
                  g[5975] = +g[5979] * 0;
                  g[5976] = j2;
                  g[5977] = k2;
                  g[5978] = 0;
                  c[5983] = 0;
                  c[5984] = 0;
                  c[5985] = 0;
                  c[5986] = 0;
                  k2 = +g[5972] * 0;
                  j2 = +g[5973] * 0;
                  g[6024] = +g[5971] * 0;
                  g[6025] = k2;
                  g[6026] = j2;
                  g[6027] = 0;
                  c[f2 >> 2] = 23496;
                  h2 = h2 - +g[e2 >> 2];
                  e2 = A2 + (B2 * 284 | 0) + 32 | 0;
                  g[e2 >> 2] = h2;
                  j2 = +g[o2 >> 2];
                  k2 = +g[A2 + (B2 * 284 | 0) + 208 >> 2] * 0.009999999776482582;
                  if (h2 < j2 - k2) {
                    g[e2 >> 2] = j2 - k2;
                    h2 = j2 - k2;
                  }
                  if (h2 > j2 + k2)
                    g[e2 >> 2] = j2 + k2;
                  c[x2 >> 2] = c[C2 >> 2];
                  c[x2 + 4 >> 2] = c[C2 + 4 >> 2];
                  c[x2 + 8 >> 2] = c[C2 + 8 >> 2];
                  c[x2 + 12 >> 2] = c[C2 + 12 >> 2];
                  s2 = +g[p2 >> 2];
                  t2 = +g[A2 + (B2 * 284 | 0) + 4 >> 2];
                  u2 = +g[A2 + (B2 * 284 | 0) + 8 >> 2];
                  r2 = s2 * +g[q2 >> 2] + t2 * +g[v2 >> 2] + u2 * +g[w2 >> 2];
                  e2 = c[b2 + 108 >> 2] | 0;
                  n2 = +g[x2 >> 2] - +g[e2 + 52 >> 2];
                  m2 = +g[y2 >> 2] - +g[e2 + 56 >> 2];
                  h2 = +g[z2 >> 2] - +g[e2 + 60 >> 2];
                  j2 = +g[e2 + 372 >> 2];
                  k2 = +g[e2 + 376 >> 2];
                  l2 = +g[e2 + 368 >> 2];
                  if (!(r2 >= -0.10000000149011612)) {
                    g[A2 + (B2 * 284 | 0) + 272 >> 2] = -1 / r2 * (s2 * (j2 * h2 - m2 * k2 + +g[e2 + 352 >> 2]) + t2 * (n2 * k2 - h2 * l2 + +g[e2 + 356 >> 2]) + u2 * (m2 * l2 - n2 * j2 + +g[e2 + 360 >> 2]));
                    g[A2 + (B2 * 284 | 0) + 268 >> 2] = -1 / r2;
                    break;
                  } else {
                    g[A2 + (B2 * 284 | 0) + 272 >> 2] = 0;
                    g[A2 + (B2 * 284 | 0) + 268 >> 2] = 10;
                    break;
                  }
                } else {
                  c[A2 + (B2 * 284 | 0) + 32 >> 2] = c[o2 >> 2];
                  g[A2 + (B2 * 284 | 0) + 272 >> 2] = 0;
                  t2 = -+g[v2 >> 2];
                  u2 = -+g[w2 >> 2];
                  g[p2 >> 2] = -+g[q2 >> 2];
                  g[A2 + (B2 * 284 | 0) + 4 >> 2] = t2;
                  g[A2 + (B2 * 284 | 0) + 8 >> 2] = u2;
                  g[A2 + (B2 * 284 | 0) + 12 >> 2] = 0;
                  g[A2 + (B2 * 284 | 0) + 268 >> 2] = 1;
                }
              while (0);
              B2 = B2 + 1 | 0;
              e2 = c[b2 + 128 >> 2] | 0;
              f2 = c[b2 + 108 >> 2] | 0;
            } while ((B2 | 0) < (e2 | 0));
            j2 = 1 / +g[f2 + 384 >> 2];
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                e2 = c[b2 + 136 >> 2] | 0;
                if (!(a[e2 + (f2 * 284 | 0) + 84 >> 0] | 0))
                  h2 = 0;
                else {
                  h2 = +g[e2 + (f2 * 284 | 0) + 272 >> 2];
                  h2 = j2 * (+g[e2 + (f2 * 284 | 0) + 216 >> 2] * (+g[e2 + (f2 * 284 | 0) + 204 >> 2] - +g[e2 + (f2 * 284 | 0) + 32 >> 2]) * +g[e2 + (f2 * 284 | 0) + 268 >> 2] - h2 * +g[(h2 < 0 ? e2 + (f2 * 284 | 0) + 220 | 0 : e2 + (f2 * 284 | 0) + 224 | 0) >> 2]);
                  h2 = h2 < 0 ? 0 : h2;
                }
                g[e2 + (f2 * 284 | 0) + 276 >> 2] = h2;
                f2 = f2 + 1 | 0;
                e2 = c[b2 + 128 >> 2] | 0;
              } while ((f2 | 0) < (e2 | 0));
              if ((e2 | 0) > 0) {
                e2 = 0;
                do {
                  B2 = c[b2 + 136 >> 2] | 0;
                  s2 = +g[B2 + (e2 * 284 | 0) + 276 >> 2];
                  u2 = +g[B2 + (e2 * 284 | 0) + 248 >> 2];
                  s2 = s2 > u2 ? u2 : s2;
                  u2 = s2 * +g[B2 + (e2 * 284 | 0) + 4 >> 2] * d2;
                  t2 = s2 * +g[B2 + (e2 * 284 | 0) + 8 >> 2] * d2;
                  g[C2 + 40 >> 2] = +g[B2 + (e2 * 284 | 0) >> 2] * s2 * d2;
                  g[C2 + 40 + 4 >> 2] = u2;
                  g[C2 + 40 + 8 >> 2] = t2;
                  g[C2 + 40 + 12 >> 2] = 0;
                  D2 = c[b2 + 108 >> 2] | 0;
                  t2 = +g[B2 + (e2 * 284 | 0) + 20 >> 2] - +g[D2 + 56 >> 2];
                  u2 = +g[B2 + (e2 * 284 | 0) + 24 >> 2] - +g[D2 + 60 >> 2];
                  g[C2 >> 2] = +g[B2 + (e2 * 284 | 0) + 16 >> 2] - +g[D2 + 52 >> 2];
                  g[C2 + 4 >> 2] = t2;
                  g[C2 + 8 >> 2] = u2;
                  g[C2 + 12 >> 2] = 0;
                  Xi(D2, C2 + 40 | 0, C2);
                  e2 = e2 + 1 | 0;
                } while ((e2 | 0) < (c[b2 + 128 >> 2] | 0));
              }
            }
          }
          jb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, d2);
          o2 = c[b2 + 128 >> 2] | 0;
          if ((o2 | 0) <= 0) {
            i = C2;
            return;
          }
          p2 = c[b2 + 136 >> 2] | 0;
          q2 = c[b2 + 108 >> 2] | 0;
          f2 = 0;
          do {
            h2 = +g[p2 + (f2 * 284 | 0) + 36 >> 2] - +g[q2 + 52 >> 2];
            j2 = +g[p2 + (f2 * 284 | 0) + 40 >> 2] - +g[q2 + 56 >> 2];
            k2 = +g[p2 + (f2 * 284 | 0) + 44 >> 2] - +g[q2 + 60 >> 2];
            l2 = +g[q2 + 372 >> 2];
            m2 = +g[q2 + 376 >> 2];
            n2 = +g[q2 + 368 >> 2];
            if (!(a[p2 + (f2 * 284 | 0) + 84 >> 0] | 0)) {
              e2 = p2 + (f2 * 284 | 0) + 240 | 0;
              h2 = +g[e2 >> 2];
              D2 = p2 + (f2 * 284 | 0) + 236 | 0;
              g[D2 >> 2] = h2 + +g[D2 >> 2];
            } else {
              e2 = c[b2 + 120 >> 2] | 0;
              F2 = +g[q2 + 4 + (e2 << 2) >> 2];
              r2 = +g[q2 + 20 + (e2 << 2) >> 2];
              t2 = +g[q2 + 36 + (e2 << 2) >> 2];
              E2 = +g[p2 + (f2 * 284 | 0) >> 2];
              s2 = +g[p2 + (f2 * 284 | 0) + 4 >> 2];
              u2 = +g[p2 + (f2 * 284 | 0) + 8 >> 2];
              h2 = ((j2 * n2 - h2 * l2 + +g[q2 + 360 >> 2]) * (t2 - u2 * (F2 * E2 + r2 * s2 + t2 * u2)) + ((l2 * k2 - j2 * m2 + +g[q2 + 352 >> 2]) * (F2 - E2 * (F2 * E2 + r2 * s2 + t2 * u2)) + (h2 * m2 - k2 * n2 + +g[q2 + 356 >> 2]) * (r2 - s2 * (F2 * E2 + r2 * s2 + t2 * u2)))) * d2 / +g[p2 + (f2 * 284 | 0) + 212 >> 2];
              e2 = p2 + (f2 * 284 | 0) + 240 | 0;
              g[e2 >> 2] = h2;
              D2 = p2 + (f2 * 284 | 0) + 236 | 0;
              g[D2 >> 2] = +g[D2 >> 2] + h2;
            }
            g[e2 >> 2] = h2 * 0.9900000095367432;
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) != (o2 | 0));
          i = C2;
          return;
        }
        function ed(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0;
          C2 = +g[b2 + 48 >> 2];
          i2 = +g[d2 >> 2];
          D2 = +g[b2 + 64 >> 2];
          j2 = +g[d2 + 4 >> 2];
          E2 = +g[b2 + 80 >> 2];
          p2 = +g[d2 + 8 >> 2];
          s2 = +g[b2 + 52 >> 2];
          r2 = +g[b2 + 68 >> 2];
          q2 = +g[b2 + 84 >> 2];
          w2 = +g[b2 + 56 >> 2];
          y2 = +g[b2 + 72 >> 2];
          z2 = +g[b2 + 88 >> 2];
          v2 = +g[d2 + 16 >> 2];
          u2 = +g[d2 + 20 >> 2];
          t2 = +g[d2 + 24 >> 2];
          x2 = +g[d2 + 32 >> 2];
          F2 = +g[d2 + 36 >> 2];
          H2 = +g[d2 + 40 >> 2];
          k2 = +g[b2 + 96 >> 2];
          h2 = +g[b2 + 100 >> 2];
          B2 = +g[b2 + 104 >> 2];
          A2 = +g[d2 + 48 >> 2] + (i2 * k2 + j2 * h2 + p2 * B2);
          f2 = v2 * k2 + u2 * h2 + t2 * B2 + +g[d2 + 52 >> 2];
          B2 = x2 * k2 + F2 * h2 + H2 * B2 + +g[d2 + 56 >> 2];
          g[b2 + 1064 >> 2] = C2 * i2 + D2 * j2 + E2 * p2;
          g[b2 + 1068 >> 2] = i2 * s2 + j2 * r2 + p2 * q2;
          g[b2 + 1072 >> 2] = i2 * w2 + j2 * y2 + p2 * z2;
          g[b2 + 1076 >> 2] = 0;
          g[b2 + 1080 >> 2] = C2 * v2 + D2 * u2 + E2 * t2;
          g[b2 + 1084 >> 2] = s2 * v2 + r2 * u2 + q2 * t2;
          g[b2 + 1088 >> 2] = w2 * v2 + y2 * u2 + z2 * t2;
          g[b2 + 1092 >> 2] = 0;
          g[b2 + 1096 >> 2] = C2 * x2 + D2 * F2 + E2 * H2;
          g[b2 + 1100 >> 2] = s2 * x2 + r2 * F2 + q2 * H2;
          g[b2 + 1104 >> 2] = w2 * x2 + y2 * F2 + z2 * H2;
          g[b2 + 1108 >> 2] = 0;
          g[b2 + 1112 >> 2] = A2;
          g[b2 + 1116 >> 2] = f2;
          g[b2 + 1120 >> 2] = B2;
          g[b2 + 1124 >> 2] = 0;
          B2 = +g[b2 + 112 >> 2];
          f2 = +g[e2 >> 2];
          A2 = +g[b2 + 128 >> 2];
          H2 = +g[e2 + 4 >> 2];
          z2 = +g[b2 + 144 >> 2];
          F2 = +g[e2 + 8 >> 2];
          y2 = +g[b2 + 116 >> 2];
          x2 = +g[b2 + 132 >> 2];
          w2 = +g[b2 + 148 >> 2];
          q2 = +g[b2 + 120 >> 2];
          r2 = +g[b2 + 136 >> 2];
          s2 = +g[b2 + 152 >> 2];
          E2 = +g[e2 + 16 >> 2];
          D2 = +g[e2 + 20 >> 2];
          C2 = +g[e2 + 24 >> 2];
          t2 = +g[e2 + 32 >> 2];
          u2 = +g[e2 + 36 >> 2];
          v2 = +g[e2 + 40 >> 2];
          p2 = +g[b2 + 160 >> 2];
          j2 = +g[b2 + 164 >> 2];
          i2 = +g[b2 + 168 >> 2];
          h2 = +g[e2 + 48 >> 2] + (f2 * p2 + H2 * j2 + F2 * i2);
          k2 = E2 * p2 + D2 * j2 + C2 * i2 + +g[e2 + 52 >> 2];
          i2 = t2 * p2 + u2 * j2 + v2 * i2 + +g[e2 + 56 >> 2];
          g[b2 + 1128 >> 2] = B2 * f2 + A2 * H2 + z2 * F2;
          g[b2 + 1132 >> 2] = f2 * y2 + H2 * x2 + F2 * w2;
          g[b2 + 1136 >> 2] = f2 * q2 + H2 * r2 + F2 * s2;
          g[b2 + 1140 >> 2] = 0;
          g[b2 + 1144 >> 2] = B2 * E2 + A2 * D2 + z2 * C2;
          g[b2 + 1148 >> 2] = y2 * E2 + x2 * D2 + w2 * C2;
          g[b2 + 1152 >> 2] = q2 * E2 + r2 * D2 + s2 * C2;
          g[b2 + 1156 >> 2] = 0;
          g[b2 + 1160 >> 2] = B2 * t2 + A2 * u2 + z2 * v2;
          g[b2 + 1164 >> 2] = y2 * t2 + x2 * u2 + w2 * v2;
          g[b2 + 1168 >> 2] = q2 * t2 + r2 * u2 + s2 * v2;
          g[b2 + 1172 >> 2] = 0;
          g[b2 + 1176 >> 2] = h2;
          g[b2 + 1180 >> 2] = k2;
          g[b2 + 1184 >> 2] = i2;
          g[b2 + 1188 >> 2] = 0;
          h2 = h2 - +g[b2 + 1112 >> 2];
          k2 = k2 - +g[b2 + 1116 >> 2];
          i2 = i2 - +g[b2 + 1120 >> 2];
          w2 = +g[b2 + 1084 >> 2];
          x2 = +g[b2 + 1104 >> 2];
          y2 = +g[b2 + 1088 >> 2];
          z2 = +g[b2 + 1100 >> 2];
          A2 = +g[b2 + 1096 >> 2];
          B2 = +g[b2 + 1080 >> 2];
          C2 = +g[b2 + 1064 >> 2];
          D2 = +g[b2 + 1068 >> 2];
          E2 = +g[b2 + 1072 >> 2];
          F2 = 1 / ((w2 * x2 - y2 * z2) * C2 + D2 * (y2 * A2 - x2 * B2) + (z2 * B2 - w2 * A2) * E2);
          H2 = (z2 * B2 - w2 * A2) * F2;
          f2 = i2 * (y2 * D2 - w2 * E2) * F2 + (h2 * (w2 * x2 - y2 * z2) * F2 + k2 * (z2 * E2 - x2 * D2) * F2);
          j2 = i2 * (B2 * E2 - y2 * C2) * F2 + (h2 * (y2 * A2 - x2 * B2) * F2 + k2 * (x2 * C2 - A2 * E2) * F2);
          k2 = i2 * (w2 * C2 - B2 * D2) * F2 + (h2 * H2 + k2 * (A2 * D2 - z2 * C2) * F2);
          g[b2 + 1256 >> 2] = f2;
          g[b2 + 1260 >> 2] = j2;
          g[b2 + 1264 >> 2] = k2;
          g[b2 + 1268 >> 2] = 0;
          g[b2 + 840 >> 2] = f2;
          h2 = +g[b2 + 680 >> 2];
          i2 = +g[b2 + 696 >> 2];
          do
            if (!(h2 > i2)) {
              if (h2 > f2) {
                c[b2 + 856 >> 2] = 2;
                g[b2 + 824 >> 2] = f2 - h2;
                break;
              }
              if (i2 < f2) {
                c[b2 + 856 >> 2] = 1;
                g[b2 + 824 >> 2] = f2 - i2;
                break;
              } else {
                c[b2 + 856 >> 2] = 0;
                g[b2 + 824 >> 2] = 0;
                break;
              }
            } else {
              c[b2 + 856 >> 2] = 0;
              g[b2 + 824 >> 2] = 0;
            }
          while (0);
          g[b2 + 844 >> 2] = j2;
          f2 = +g[b2 + 684 >> 2];
          h2 = +g[b2 + 700 >> 2];
          do
            if (!(f2 > h2)) {
              if (f2 > j2) {
                c[b2 + 860 >> 2] = 2;
                g[b2 + 828 >> 2] = j2 - f2;
                break;
              }
              if (h2 < j2) {
                c[b2 + 860 >> 2] = 1;
                g[b2 + 828 >> 2] = j2 - h2;
                break;
              } else {
                c[b2 + 860 >> 2] = 0;
                g[b2 + 828 >> 2] = 0;
                break;
              }
            } else {
              c[b2 + 860 >> 2] = 0;
              g[b2 + 828 >> 2] = 0;
            }
          while (0);
          g[b2 + 848 >> 2] = k2;
          f2 = +g[b2 + 688 >> 2];
          h2 = +g[b2 + 704 >> 2];
          do
            if (!(f2 > h2)) {
              if (f2 > k2) {
                c[b2 + 864 >> 2] = 2;
                g[b2 + 832 >> 2] = k2 - f2;
                break;
              }
              if (h2 < k2) {
                c[b2 + 864 >> 2] = 1;
                g[b2 + 832 >> 2] = k2 - h2;
                break;
              } else {
                c[b2 + 864 >> 2] = 0;
                g[b2 + 832 >> 2] = 0;
                break;
              }
            } else {
              c[b2 + 864 >> 2] = 0;
              g[b2 + 832 >> 2] = 0;
            }
          while (0);
          h2 = +g[b2 + 1128 >> 2];
          i2 = +g[b2 + 1144 >> 2];
          j2 = +g[b2 + 1160 >> 2];
          k2 = +g[b2 + 1132 >> 2];
          l2 = +g[b2 + 1148 >> 2];
          m2 = +g[b2 + 1164 >> 2];
          n2 = (w2 * x2 - y2 * z2) * F2 * k2 + (z2 * E2 - x2 * D2) * F2 * l2 + (y2 * D2 - w2 * E2) * F2 * m2;
          o2 = k2 * (y2 * A2 - x2 * B2) * F2 + (x2 * C2 - A2 * E2) * F2 * l2 + (B2 * E2 - y2 * C2) * F2 * m2;
          p2 = j2 * (w2 * C2 - B2 * D2) * F2 + (h2 * H2 + i2 * (A2 * D2 - z2 * C2) * F2);
          f2 = H2 * +g[b2 + 1136 >> 2] + (A2 * D2 - z2 * C2) * F2 * +g[b2 + 1152 >> 2] + (w2 * C2 - B2 * D2) * F2 * (q2 * t2 + r2 * u2 + s2 * v2);
          do
            if (p2 < 1)
              if (p2 > -1) {
                g[b2 + 1192 >> 2] = +O(+-(k2 * H2 + (A2 * D2 - z2 * C2) * F2 * l2 + (w2 * C2 - B2 * D2) * F2 * m2), +f2);
                H2 = p2 < -1 ? -1 : p2;
                g[b2 + 1196 >> 2] = +M(+(H2 > 1 ? 1 : H2));
                g[b2 + 1200 >> 2] = +O(+-(j2 * (B2 * E2 - y2 * C2) * F2 + (h2 * (y2 * A2 - x2 * B2) * F2 + i2 * (x2 * C2 - A2 * E2) * F2)), +(j2 * (y2 * D2 - w2 * E2) * F2 + (h2 * (w2 * x2 - y2 * z2) * F2 + i2 * (z2 * E2 - x2 * D2) * F2)));
                break;
              } else {
                g[b2 + 1192 >> 2] = -+O(+n2, +o2);
                g[b2 + 1196 >> 2] = -1.5707963705062866;
                g[b2 + 1200 >> 2] = 0;
                break;
              }
            else {
              g[b2 + 1192 >> 2] = +O(+n2, +o2);
              g[b2 + 1196 >> 2] = 1.5707963705062866;
              g[b2 + 1200 >> 2] = 0;
            }
          while (0);
          g[b2 + 1236 >> 2] = 0;
          z2 = x2 * (h2 * x2 - j2 * E2) - y2 * (i2 * E2 - h2 * y2);
          A2 = E2 * (i2 * E2 - h2 * y2) - x2 * (j2 * y2 - i2 * x2);
          B2 = y2 * (j2 * y2 - i2 * x2) - E2 * (h2 * x2 - j2 * E2);
          g[b2 + 1220 >> 2] = 0;
          C2 = i2 * (i2 * E2 - h2 * y2) - j2 * (h2 * x2 - j2 * E2);
          D2 = j2 * (j2 * y2 - i2 * x2) - h2 * (i2 * E2 - h2 * y2);
          F2 = h2 * (h2 * x2 - j2 * E2) - i2 * (j2 * y2 - i2 * x2);
          g[b2 + 1252 >> 2] = 0;
          H2 = 1 / +G(+(z2 * z2 + A2 * A2 + B2 * B2));
          g[b2 + 1208 >> 2] = z2 * H2;
          g[b2 + 1212 >> 2] = A2 * H2;
          g[b2 + 1216 >> 2] = B2 * H2;
          H2 = 1 / +G(+((j2 * y2 - i2 * x2) * (j2 * y2 - i2 * x2) + (h2 * x2 - j2 * E2) * (h2 * x2 - j2 * E2) + (i2 * E2 - h2 * y2) * (i2 * E2 - h2 * y2)));
          g[b2 + 1224 >> 2] = (j2 * y2 - i2 * x2) * H2;
          g[b2 + 1228 >> 2] = (h2 * x2 - j2 * E2) * H2;
          g[b2 + 1232 >> 2] = (i2 * E2 - h2 * y2) * H2;
          H2 = 1 / +G(+(C2 * C2 + D2 * D2 + F2 * F2));
          g[b2 + 1240 >> 2] = C2 * H2;
          g[b2 + 1244 >> 2] = D2 * H2;
          g[b2 + 1248 >> 2] = F2 * H2;
          if (!(a[b2 + 1301 >> 0] | 0))
            return;
          F2 = +g[(c[b2 + 28 >> 2] | 0) + 384 >> 2];
          H2 = +g[(c[b2 + 32 >> 2] | 0) + 384 >> 2];
          a[b2 + 1280 >> 0] = (F2 < 11920928955078125e-23 | H2 < 11920928955078125e-23) & 1;
          H2 = F2 + H2 > 0 ? H2 / (F2 + H2) : 0.5;
          g[b2 + 1272 >> 2] = H2;
          g[b2 + 1276 >> 2] = 1 - H2;
          return;
        }
        function fd(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0;
          r2 = c[b2 + 28 >> 2] | 0;
          j2 = c[b2 + 32 >> 2] | 0;
          qc(b2, r2 + 4 | 0, j2 + 4 | 0, r2 + 304 | 0, j2 + 304 | 0);
          s2 = c[d2 + 8 >> 2] | 0;
          g[s2 >> 2] = 1;
          p2 = c[d2 + 24 >> 2] | 0;
          g[s2 + (p2 + 1 << 2) >> 2] = 1;
          g[s2 + ((p2 << 1) + 2 << 2) >> 2] = 1;
          m2 = +g[b2 + 348 >> 2];
          v2 = +g[b2 + 352 >> 2];
          o2 = +g[b2 + 356 >> 2];
          t2 = +g[r2 + 4 >> 2] * m2 + +g[r2 + 8 >> 2] * v2 + +g[r2 + 12 >> 2] * o2;
          n2 = m2 * +g[r2 + 20 >> 2] + v2 * +g[r2 + 24 >> 2] + o2 * +g[r2 + 28 >> 2];
          o2 = m2 * +g[r2 + 36 >> 2] + v2 * +g[r2 + 40 >> 2] + o2 * +g[r2 + 44 >> 2];
          s2 = c[d2 + 12 >> 2] | 0;
          c[s2 >> 2] = 0;
          g[s2 + 4 >> 2] = o2;
          g[s2 + 8 >> 2] = -n2;
          g[s2 + 12 >> 2] = 0;
          g[s2 + (p2 << 2) >> 2] = -o2;
          c[s2 + (p2 << 2) + 4 >> 2] = 0;
          g[s2 + (p2 << 2) + 8 >> 2] = t2;
          g[s2 + (p2 << 2) + 12 >> 2] = 0;
          g[s2 + (p2 << 1 << 2) >> 2] = n2;
          g[s2 + (p2 << 1 << 2) + 4 >> 2] = -t2;
          c[s2 + (p2 << 1 << 2) + 8 >> 2] = 0;
          g[s2 + (p2 << 1 << 2) + 12 >> 2] = 0;
          s2 = c[d2 + 16 >> 2] | 0;
          g[s2 >> 2] = -1;
          g[s2 + (p2 + 1 << 2) >> 2] = -1;
          g[s2 + ((p2 << 1) + 2 << 2) >> 2] = -1;
          v2 = +g[b2 + 412 >> 2];
          m2 = +g[b2 + 416 >> 2];
          l2 = +g[b2 + 420 >> 2];
          u2 = +g[j2 + 4 >> 2] * v2 + +g[j2 + 8 >> 2] * m2 + +g[j2 + 12 >> 2] * l2;
          k2 = v2 * +g[j2 + 20 >> 2] + m2 * +g[j2 + 24 >> 2] + l2 * +g[j2 + 28 >> 2];
          l2 = v2 * +g[j2 + 36 >> 2] + m2 * +g[j2 + 40 >> 2] + l2 * +g[j2 + 44 >> 2];
          p2 = c[d2 + 20 >> 2] | 0;
          s2 = c[d2 + 24 >> 2] | 0;
          c[p2 >> 2] = 0;
          g[p2 + 4 >> 2] = -l2;
          g[p2 + 8 >> 2] = k2;
          g[p2 + 12 >> 2] = 0;
          g[p2 + (s2 << 2) >> 2] = l2;
          c[p2 + (s2 << 2) + 4 >> 2] = 0;
          g[p2 + (s2 << 2) + 8 >> 2] = -u2;
          g[p2 + (s2 << 2) + 12 >> 2] = 0;
          g[p2 + (s2 << 1 << 2) >> 2] = -k2;
          g[p2 + (s2 << 1 << 2) + 4 >> 2] = u2;
          c[p2 + (s2 << 1 << 2) + 8 >> 2] = 0;
          g[p2 + (s2 << 1 << 2) + 12 >> 2] = 0;
          q2 = c[b2 + 592 >> 2] | 0;
          m2 = +g[((q2 & 2 | 0) == 0 ? d2 + 4 | 0 : b2 + 600 | 0) >> 2] * +g[d2 >> 2];
          i2 = c[d2 + 28 >> 2] | 0;
          f2 = c[d2 + 36 >> 2] | 0;
          e2 = c[d2 + 40 >> 2] | 0;
          g[i2 >> 2] = m2 * (u2 + +g[j2 + 52 >> 2] - t2 - +g[r2 + 52 >> 2]);
          g[f2 >> 2] = -34028234663852886e22;
          g[e2 >> 2] = 34028234663852886e22;
          if (!(q2 & 1)) {
            g[i2 + (s2 << 2) >> 2] = m2 * (k2 + +g[j2 + 56 >> 2] - n2 - +g[r2 + 56 >> 2]);
            g[f2 + (s2 << 2) >> 2] = -34028234663852886e22;
            g[e2 + (s2 << 2) >> 2] = 34028234663852886e22;
            g[i2 + (s2 << 1 << 2) >> 2] = m2 * (l2 + +g[j2 + 60 >> 2] - o2 - +g[r2 + 60 >> 2]);
            g[f2 + (s2 << 1 << 2) >> 2] = -34028234663852886e22;
            g[e2 + (s2 << 1 << 2) >> 2] = 34028234663852886e22;
          } else {
            w2 = c[d2 + 32 >> 2] | 0;
            c[w2 >> 2] = c[b2 + 596 >> 2];
            g[i2 + (s2 << 2) >> 2] = m2 * (k2 + +g[j2 + 56 >> 2] - n2 - +g[r2 + 56 >> 2]);
            g[f2 + (s2 << 2) >> 2] = -34028234663852886e22;
            g[e2 + (s2 << 2) >> 2] = 34028234663852886e22;
            c[w2 + (s2 << 2) >> 2] = c[b2 + 596 >> 2];
            g[i2 + (s2 << 1 << 2) >> 2] = m2 * (l2 + +g[j2 + 60 >> 2] - o2 - +g[r2 + 60 >> 2]);
            g[f2 + (s2 << 1 << 2) >> 2] = -34028234663852886e22;
            g[e2 + (s2 << 1 << 2) >> 2] = 34028234663852886e22;
            c[w2 + (s2 << 1 << 2) >> 2] = c[b2 + 596 >> 2];
          }
          do
            if (!(a[b2 + 526 >> 0] | 0))
              j2 = s2 * 3 | 0;
            else {
              j2 = c[d2 + 12 >> 2] | 0;
              v2 = +g[b2 + 456 >> 2];
              if (+g[b2 + 444 >> 2] < v2 ? +g[b2 + 448 >> 2] < v2 : 0) {
                z2 = +g[r2 + 4 >> 2];
                y2 = +g[r2 + 8 >> 2];
                x2 = +g[r2 + 12 >> 2];
                D2 = +g[b2 + 304 >> 2];
                C2 = +g[b2 + 320 >> 2];
                B2 = +g[b2 + 336 >> 2];
                m2 = +g[b2 + 308 >> 2];
                o2 = +g[b2 + 324 >> 2];
                u2 = +g[b2 + 340 >> 2];
                h2 = +g[r2 + 20 >> 2];
                k2 = +g[r2 + 24 >> 2];
                l2 = +g[r2 + 28 >> 2];
                n2 = +g[r2 + 36 >> 2];
                t2 = +g[r2 + 40 >> 2];
                v2 = +g[r2 + 44 >> 2];
                g[j2 + (s2 * 3 << 2) >> 2] = z2 * D2 + y2 * C2 + x2 * B2;
                g[j2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = D2 * h2 + C2 * k2 + B2 * l2;
                g[j2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = D2 * n2 + C2 * t2 + B2 * v2;
                g[j2 + (s2 << 2 << 2) >> 2] = z2 * m2 + y2 * o2 + x2 * u2;
                g[j2 + ((s2 << 2 | 1) << 2) >> 2] = m2 * h2 + o2 * k2 + u2 * l2;
                g[j2 + ((s2 << 2 | 2) << 2) >> 2] = m2 * n2 + o2 * t2 + u2 * v2;
                g[p2 + (s2 * 3 << 2) >> 2] = -(z2 * D2 + y2 * C2 + x2 * B2);
                g[p2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = -(D2 * h2 + C2 * k2 + B2 * l2);
                g[p2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = -(D2 * n2 + C2 * t2 + B2 * v2);
                g[p2 + (s2 << 2 << 2) >> 2] = -(z2 * m2 + y2 * o2 + x2 * u2);
                g[p2 + ((s2 << 2 | 1) << 2) >> 2] = -(m2 * h2 + o2 * k2 + u2 * l2);
                g[p2 + ((s2 << 2 | 2) << 2) >> 2] = -(m2 * n2 + o2 * t2 + u2 * v2);
                A2 = +g[d2 >> 2] * +g[b2 + 436 >> 2];
                i2 = c[d2 + 28 >> 2] | 0;
                g[i2 + (s2 * 3 << 2) >> 2] = A2 * ((z2 * D2 + y2 * C2 + x2 * B2) * +g[b2 + 460 >> 2] + (D2 * h2 + C2 * k2 + B2 * l2) * +g[b2 + 464 >> 2] + (D2 * n2 + C2 * t2 + B2 * v2) * +g[b2 + 468 >> 2]);
                g[i2 + (s2 << 2 << 2) >> 2] = A2 * ((z2 * m2 + y2 * o2 + x2 * u2) * +g[b2 + 460 >> 2] + (m2 * h2 + o2 * k2 + u2 * l2) * +g[b2 + 464 >> 2] + (m2 * n2 + o2 * t2 + u2 * v2) * +g[b2 + 468 >> 2]);
                f2 = c[d2 + 36 >> 2] | 0;
                g[f2 + (s2 * 3 << 2) >> 2] = -34028234663852886e22;
                e2 = c[d2 + 40 >> 2] | 0;
                g[e2 + (s2 * 3 << 2) >> 2] = 34028234663852886e22;
                g[f2 + (s2 << 2 << 2) >> 2] = -34028234663852886e22;
                g[e2 + (s2 << 2 << 2) >> 2] = 34028234663852886e22;
                j2 = (c[d2 + 24 >> 2] | 0) + (s2 << 2) | 0;
                break;
              }
              D2 = +g[b2 + 436 >> 2];
              B2 = D2 * +g[b2 + 460 >> 2] * D2;
              C2 = D2 * D2 * +g[b2 + 464 >> 2];
              D2 = D2 * D2 * +g[b2 + 468 >> 2];
              g[j2 + (s2 * 3 << 2) >> 2] = B2;
              g[j2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = C2;
              g[j2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = D2;
              g[p2 + (s2 * 3 << 2) >> 2] = -B2;
              g[p2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = -C2;
              g[p2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = -D2;
              g[i2 + (s2 * 3 << 2) >> 2] = +g[d2 >> 2] * +g[b2 + 432 >> 2] * +g[b2 + 504 >> 2];
              if (q2 & 4 | 0)
                c[(c[d2 + 32 >> 2] | 0) + (s2 * 3 << 2) >> 2] = c[b2 + 604 >> 2];
              g[f2 + (s2 * 3 << 2) >> 2] = 0;
              if (!((a[b2 + 552 >> 0] | 0) != 0 ? (h2 = +g[b2 + 572 >> 2], h2 >= 0) : 0))
                h2 = 34028234663852886e22;
              g[e2 + (s2 * 3 << 2) >> 2] = h2;
              j2 = s2 << 2;
            }
          while (0);
          if (!(a[b2 + 525 >> 0] | 0))
            return;
          D2 = +g[b2 + 436 >> 2];
          B2 = D2 * +g[b2 + 476 >> 2] * D2;
          C2 = D2 * D2 * +g[b2 + 480 >> 2];
          D2 = D2 * D2 * +g[b2 + 484 >> 2];
          q2 = c[d2 + 12 >> 2] | 0;
          s2 = c[d2 + 20 >> 2] | 0;
          g[q2 + (j2 << 2) >> 2] = B2;
          r2 = j2 + 1 | 0;
          g[q2 + (r2 << 2) >> 2] = C2;
          w2 = j2 + 2 | 0;
          g[q2 + (w2 << 2) >> 2] = D2;
          g[s2 + (j2 << 2) >> 2] = -B2;
          g[s2 + (r2 << 2) >> 2] = -C2;
          g[s2 + (w2 << 2) >> 2] = -D2;
          g[i2 + (j2 << 2) >> 2] = +g[d2 >> 2] * +g[b2 + 432 >> 2] * +g[b2 + 508 >> 2];
          if (c[b2 + 592 >> 2] & 4 | 0)
            c[(c[d2 + 32 >> 2] | 0) + (j2 << 2) >> 2] = c[b2 + 604 >> 2];
          if (!(+g[b2 + 452 >> 2] > 0)) {
            g[f2 + (j2 << 2) >> 2] = -34028234663852886e22;
            g[e2 + (j2 << 2) >> 2] = 34028234663852886e22;
            return;
          }
          f2 = f2 + (j2 << 2) | 0;
          e2 = c[d2 + 40 >> 2] | 0;
          if (+g[b2 + 508 >> 2] > 0) {
            g[f2 >> 2] = 0;
            g[e2 + (j2 << 2) >> 2] = 34028234663852886e22;
            return;
          } else {
            g[f2 >> 2] = -34028234663852886e22;
            g[e2 + (j2 << 2) >> 2] = 0;
            return;
          }
        }
        function gd(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0;
          r2 = i;
          i = i + 32 | 0;
          Yf(b2 + 4 | 0, ((S(c[b2 + 152 >> 2] | 0, c[b2 + 16 >> 2] | 0) | 0) / 100 | 0) + 1 | 0);
          if (c[b2 + 164 >> 2] | 0) {
            p2 = ((S(c[b2 + 148 >> 2] | 0, c[b2 + 76 >> 2] | 0) | 0) / 100 | 0) + 1 | 0;
            Yf(b2 + 64 | 0, p2);
            p2 = (c[b2 + 164 >> 2] | 0) - p2 | 0;
            c[b2 + 164 >> 2] = (p2 | 0) < 0 ? 0 : p2;
          }
          f2 = ((c[b2 + 144 >> 2] | 0) + 1 | 0) % 2 | 0;
          c[b2 + 144 >> 2] = f2;
          f2 = c[b2 + 124 + (f2 << 2) >> 2] | 0;
          if (f2 | 0) {
            do {
              l2 = f2 + 56 | 0;
              m2 = f2;
              f2 = c[l2 >> 2] | 0;
              k2 = c[m2 + 52 >> 2] | 0;
              h2 = f2;
              if (!k2)
                c[b2 + 124 + (c[m2 + 60 >> 2] << 2) >> 2] = h2;
              else
                c[k2 + 56 >> 2] = h2;
              h2 = c[l2 >> 2] | 0;
              if (h2 | 0)
                c[h2 + 52 >> 2] = c[m2 + 52 >> 2];
              c[m2 + 52 >> 2] = 0;
              c[l2 >> 2] = c[b2 + 132 >> 2];
              h2 = c[b2 + 132 >> 2] | 0;
              if (h2 | 0)
                c[h2 + 52 >> 2] = m2;
              c[b2 + 132 >> 2] = m2;
              h2 = c[m2 + 48 >> 2] | 0;
              Wg(b2 + 4 | 0, h2) | 0;
              k2 = c[b2 + 8 >> 2] | 0;
              if (k2 | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[k2 + -4 >> 2] | 0);
              }
              c[b2 + 8 >> 2] = h2;
              c[b2 + 16 >> 2] = (c[b2 + 16 >> 2] | 0) + -1;
              c[r2 >> 2] = c[m2 + 16 >> 2];
              c[r2 + 4 >> 2] = c[m2 + 16 + 4 >> 2];
              c[r2 + 8 >> 2] = c[m2 + 16 + 8 >> 2];
              c[r2 + 12 >> 2] = c[m2 + 16 + 12 >> 2];
              c[r2 + 16 >> 2] = c[m2 + 32 >> 2];
              c[r2 + 16 + 4 >> 2] = c[m2 + 32 + 4 >> 2];
              c[r2 + 16 + 8 >> 2] = c[m2 + 32 + 8 >> 2];
              c[r2 + 16 + 12 >> 2] = c[m2 + 32 + 12 >> 2];
              h2 = c[b2 + 68 >> 2] | 0;
              if (!h2) {
                c[6324] = (c[6324] | 0) + 1;
                h2 = ic(63) | 0;
                if (!h2)
                  h2 = 0;
                else {
                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                  h2 = h2 + 4 + 15 & -16;
                }
                k2 = h2;
                l2 = k2 + 44 | 0;
                do {
                  c[k2 >> 2] = 0;
                  k2 = k2 + 4 | 0;
                } while ((k2 | 0) < (l2 | 0));
              } else
                c[b2 + 68 >> 2] = 0;
              c[h2 + 32 >> 2] = 0;
              c[h2 + 36 >> 2] = m2;
              c[h2 + 40 >> 2] = 0;
              c[h2 >> 2] = c[r2 >> 2];
              c[h2 + 4 >> 2] = c[r2 + 4 >> 2];
              c[h2 + 8 >> 2] = c[r2 + 8 >> 2];
              c[h2 + 12 >> 2] = c[r2 + 12 >> 2];
              c[h2 + 16 >> 2] = c[r2 + 16 >> 2];
              c[h2 + 20 >> 2] = c[r2 + 20 >> 2];
              c[h2 + 24 >> 2] = c[r2 + 24 >> 2];
              c[h2 + 28 >> 2] = c[r2 + 28 >> 2];
              Ze(b2 + 64 | 0, c[b2 + 64 >> 2] | 0, h2);
              k2 = (c[b2 + 76 >> 2] | 0) + 1 | 0;
              c[b2 + 76 >> 2] = k2;
              c[m2 + 48 >> 2] = h2;
              c[m2 + 60 >> 2] = 2;
            } while ((f2 | 0) != 0);
            c[b2 + 164 >> 2] = k2;
            a[b2 + 194 >> 0] = 1;
          }
          c[r2 >> 2] = 5276;
          c[r2 + 4 >> 2] = b2;
          if (a[b2 + 193 >> 0] | 0 ? (ge(b2 + 4 | 0, c[b2 + 4 >> 2] | 0, c[b2 + 64 >> 2] | 0, r2), a[b2 + 193 >> 0] | 0) : 0) {
            p2 = c[b2 + 4 >> 2] | 0;
            ge(b2 + 4 | 0, p2, p2, r2);
          }
          if (a[b2 + 194 >> 0] | 0 ? (n2 = c[b2 + 136 >> 2] | 0, n2 = ob[c[(c[n2 >> 2] | 0) + 28 >> 2] & 127](n2) | 0, e2 = c[n2 + 4 >> 2] | 0, (e2 | 0) > 0) : 0) {
            f2 = (S(c[b2 + 156 >> 2] | 0, e2) | 0) / 100 | 0;
            p2 = c[b2 + 160 >> 2] | 0;
            f2 = (p2 | 0) > (f2 | 0) ? p2 : f2;
            f2 = (e2 | 0) < (f2 | 0) ? e2 : f2;
            if ((f2 | 0) > 0) {
              h2 = 0;
              do {
                l2 = ((c[b2 + 184 >> 2] | 0) + h2 | 0) % (e2 | 0) | 0;
                o2 = c[n2 + 12 >> 2] | 0;
                k2 = c[o2 + (l2 << 4) >> 2] | 0;
                l2 = c[o2 + (l2 << 4) + 4 >> 2] | 0;
                o2 = c[k2 + 48 >> 2] | 0;
                p2 = c[l2 + 48 >> 2] | 0;
                if (!(((((+g[o2 >> 2] <= +g[p2 + 16 >> 2] ? +g[o2 + 16 >> 2] >= +g[p2 >> 2] : 0) ? +g[o2 + 4 >> 2] <= +g[p2 + 20 >> 2] : 0) ? +g[o2 + 20 >> 2] >= +g[p2 + 4 >> 2] : 0) ? +g[o2 + 8 >> 2] <= +g[p2 + 24 >> 2] : 0) ? +g[o2 + 24 >> 2] >= +g[p2 + 8 >> 2] : 0)) {
                  e2 = c[b2 + 136 >> 2] | 0;
                  sb[c[(c[e2 >> 2] | 0) + 12 >> 2] & 31](e2, k2, l2, d2) | 0;
                  h2 = h2 + -1 | 0;
                  f2 = f2 + -1 | 0;
                  e2 = c[n2 + 4 >> 2] | 0;
                }
                h2 = h2 + 1 | 0;
              } while ((h2 | 0) < (f2 | 0));
              if ((e2 | 0) > 0)
                q2 = 37;
              else
                e2 = 0;
            } else
              q2 = 37;
            if ((q2 | 0) == 37)
              e2 = ((c[b2 + 184 >> 2] | 0) + f2 | 0) % (e2 | 0) | 0;
            c[b2 + 184 >> 2] = e2;
          }
          c[b2 + 180 >> 2] = (c[b2 + 180 >> 2] | 0) + 1;
          c[b2 + 160 >> 2] = 1;
          a[b2 + 194 >> 0] = 0;
          f2 = c[b2 + 168 >> 2] | 0;
          e2 = c[b2 + 172 >> 2] | 0;
          if (!f2)
            j2 = 0;
          else
            j2 = +(e2 >>> 0) / +(f2 >>> 0);
          g[b2 + 176 >> 2] = j2;
          c[b2 + 172 >> 2] = e2 >>> 1;
          c[b2 + 168 >> 2] = f2 >>> 1;
          p2 = c[b2 + 136 >> 2] | 0;
          if (!(ob[c[(c[p2 >> 2] | 0) + 56 >> 2] & 127](p2) | 0)) {
            i = r2;
            return;
          }
          p2 = c[b2 + 136 >> 2] | 0;
          p2 = ob[c[(c[p2 >> 2] | 0) + 28 >> 2] & 127](p2) | 0;
          e2 = c[p2 + 4 >> 2] | 0;
          if ((e2 | 0) > 1) {
            Gd(p2, 0, e2 + -1 | 0);
            e2 = c[p2 + 4 >> 2] | 0;
          }
          if ((e2 | 0) > 0) {
            n2 = 0;
            m2 = 0;
            o2 = 0;
            f2 = 0;
            while (1) {
              k2 = c[p2 + 12 >> 2] | 0;
              h2 = k2 + (n2 << 4) | 0;
              s2 = o2;
              o2 = c[h2 >> 2] | 0;
              k2 = k2 + (n2 << 4) + 4 | 0;
              l2 = c[k2 >> 2] | 0;
              if (!((o2 | 0) == (s2 | 0) & (l2 | 0) == (f2 | 0))) {
                f2 = c[o2 + 48 >> 2] | 0;
                s2 = c[l2 + 48 >> 2] | 0;
                if (((((+g[f2 >> 2] <= +g[s2 + 16 >> 2] ? +g[f2 + 16 >> 2] >= +g[s2 >> 2] : 0) ? +g[f2 + 4 >> 2] <= +g[s2 + 20 >> 2] : 0) ? +g[f2 + 20 >> 2] >= +g[s2 + 4 >> 2] : 0) ? +g[f2 + 8 >> 2] <= +g[s2 + 24 >> 2] : 0) ? +g[f2 + 24 >> 2] >= +g[s2 + 8 >> 2] : 0) {
                  h2 = m2;
                  f2 = l2;
                } else {
                  f2 = l2;
                  q2 = 53;
                }
              } else
                q2 = 53;
              if ((q2 | 0) == 53) {
                q2 = 0;
                e2 = c[b2 + 136 >> 2] | 0;
                Ub[c[(c[e2 >> 2] | 0) + 32 >> 2] & 127](e2, h2, d2);
                c[h2 >> 2] = 0;
                c[k2 >> 2] = 0;
                h2 = m2 + 1 | 0;
                e2 = c[p2 + 4 >> 2] | 0;
              }
              n2 = n2 + 1 | 0;
              if ((n2 | 0) >= (e2 | 0))
                break;
              else
                m2 = h2;
            }
            if ((e2 | 0) > 1) {
              Gd(p2, 0, e2 + -1 | 0);
              e2 = c[p2 + 4 >> 2] | 0;
            }
            l2 = e2 - h2 | 0;
            if ((h2 | 0) < 0) {
              if ((c[p2 + 8 >> 2] | 0) < (l2 | 0)) {
                if (!l2) {
                  f2 = 0;
                  k2 = e2;
                } else {
                  c[6324] = (c[6324] | 0) + 1;
                  f2 = ic((l2 << 4 | 3) + 16 | 0) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  k2 = c[p2 + 4 >> 2] | 0;
                }
                if ((k2 | 0) > 0) {
                  h2 = 0;
                  do {
                    s2 = c[p2 + 12 >> 2] | 0;
                    c[f2 + (h2 << 4) >> 2] = c[s2 + (h2 << 4) >> 2];
                    c[f2 + (h2 << 4) + 4 >> 2] = c[s2 + (h2 << 4) + 4 >> 2];
                    c[f2 + (h2 << 4) + 8 >> 2] = c[s2 + (h2 << 4) + 8 >> 2];
                    c[f2 + (h2 << 4) + 12 >> 2] = c[s2 + (h2 << 4) + 12 >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (k2 | 0));
                }
                h2 = c[p2 + 12 >> 2] | 0;
                if (h2 | 0) {
                  if (a[p2 + 16 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[h2 + -4 >> 2] | 0);
                  }
                  c[p2 + 12 >> 2] = 0;
                }
                a[p2 + 16 >> 0] = 1;
                c[p2 + 12 >> 2] = f2;
                c[p2 + 8 >> 2] = l2;
              }
              do {
                s2 = (c[p2 + 12 >> 2] | 0) + (e2 << 4) | 0;
                e2 = e2 + 1 | 0;
                c[s2 >> 2] = 0;
                c[s2 + 4 >> 2] = 0;
                c[s2 + 8 >> 2] = 0;
                c[s2 + 12 >> 2] = 0;
              } while ((e2 | 0) != (l2 | 0));
              e2 = l2;
            } else
              e2 = l2;
          }
          c[p2 + 4 >> 2] = e2;
          i = r2;
          return;
        }
        function hd(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          c[b2 >> 2] = 2996;
          d2 = c[b2 + 192 >> 2] | 0;
          if (d2 | 0)
            kb[c[(c[d2 >> 2] | 0) + 4 >> 2] & 255](d2);
          a:
            do
              if ((c[b2 + 1152 >> 2] | 0) > 0)
                do {
                  h2 = c[c[b2 + 1160 >> 2] >> 2] | 0;
                  d2 = c[h2 + 348 >> 2] | 0;
                  if (d2 | 0) {
                    Wg(b2 + 1088 | 0, d2) | 0;
                    e2 = c[b2 + 1092 >> 2] | 0;
                    if (e2 | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[e2 + -4 >> 2] | 0);
                    }
                    c[b2 + 1092 >> 2] = d2;
                    c[b2 + 1100 >> 2] = (c[b2 + 1100 >> 2] | 0) + -1;
                  }
                  qk(h2);
                  if (h2 | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[h2 + -4 >> 2] | 0);
                  }
                  d2 = c[b2 + 1152 >> 2] | 0;
                  if ((d2 | 0) <= 0)
                    break a;
                  g2 = c[b2 + 1160 >> 2] | 0;
                  e2 = 0;
                  do {
                    f2 = g2 + (e2 << 2) | 0;
                    if ((c[f2 >> 2] | 0) == (h2 | 0)) {
                      i2 = 18;
                      break;
                    }
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) < (d2 | 0));
                  if ((i2 | 0) == 18) {
                    i2 = 0;
                    if ((e2 | 0) < (d2 | 0)) {
                      c[f2 >> 2] = c[g2 + (d2 + -1 << 2) >> 2];
                      c[(c[b2 + 1160 >> 2] | 0) + (d2 + -1 << 2) >> 2] = h2;
                      c[b2 + 1152 >> 2] = d2 + -1;
                      d2 = d2 + -1 | 0;
                    }
                  }
                } while ((d2 | 0) > 0);
            while (0);
          d2 = c[b2 + 912 >> 2] | 0;
          if ((d2 | 0) > 0) {
            f2 = 0;
            do {
              e2 = c[(c[b2 + 920 >> 2] | 0) + (f2 << 2) >> 2] | 0;
              if (e2) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[e2 + -4 >> 2] | 0);
                d2 = c[b2 + 912 >> 2] | 0;
              }
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) < (d2 | 0));
          }
          d2 = c[b2 + 892 >> 2] | 0;
          if ((d2 | 0) > 0) {
            f2 = 0;
            do {
              e2 = c[(c[b2 + 900 >> 2] | 0) + (f2 << 2) >> 2] | 0;
              if (e2) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[e2 + -4 >> 2] | 0);
                d2 = c[b2 + 892 >> 2] | 0;
              }
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) < (d2 | 0));
          }
          d2 = c[b2 + 1284 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 1288 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 1284 >> 2] = 0;
          }
          a[b2 + 1288 >> 0] = 1;
          c[b2 + 1284 >> 2] = 0;
          c[b2 + 1276 >> 2] = 0;
          c[b2 + 1280 >> 2] = 0;
          d2 = c[b2 + 1180 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 1184 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 1180 >> 2] = 0;
          }
          a[b2 + 1184 >> 0] = 1;
          c[b2 + 1180 >> 2] = 0;
          c[b2 + 1172 >> 2] = 0;
          c[b2 + 1176 >> 2] = 0;
          d2 = c[b2 + 1160 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 1164 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 1160 >> 2] = 0;
          }
          a[b2 + 1164 >> 0] = 1;
          c[b2 + 1160 >> 2] = 0;
          c[b2 + 1152 >> 2] = 0;
          c[b2 + 1156 >> 2] = 0;
          gi(b2 + 1088 | 0);
          gi(b2 + 1028 | 0);
          gi(b2 + 968 | 0);
          d2 = c[b2 + 920 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 924 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 920 >> 2] = 0;
          }
          a[b2 + 924 >> 0] = 1;
          c[b2 + 920 >> 2] = 0;
          c[b2 + 912 >> 2] = 0;
          c[b2 + 916 >> 2] = 0;
          d2 = c[b2 + 900 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 904 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 900 >> 2] = 0;
          }
          a[b2 + 904 >> 0] = 1;
          c[b2 + 900 >> 2] = 0;
          c[b2 + 892 >> 2] = 0;
          c[b2 + 896 >> 2] = 0;
          d2 = c[b2 + 880 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 884 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 880 >> 2] = 0;
          }
          a[b2 + 884 >> 0] = 1;
          c[b2 + 880 >> 2] = 0;
          c[b2 + 872 >> 2] = 0;
          c[b2 + 876 >> 2] = 0;
          d2 = c[b2 + 860 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 864 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 860 >> 2] = 0;
          }
          a[b2 + 864 >> 0] = 1;
          c[b2 + 860 >> 2] = 0;
          c[b2 + 852 >> 2] = 0;
          c[b2 + 856 >> 2] = 0;
          d2 = c[b2 + 840 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 844 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 840 >> 2] = 0;
          }
          a[b2 + 844 >> 0] = 1;
          c[b2 + 840 >> 2] = 0;
          c[b2 + 832 >> 2] = 0;
          c[b2 + 836 >> 2] = 0;
          d2 = c[b2 + 820 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 824 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 820 >> 2] = 0;
          }
          a[b2 + 824 >> 0] = 1;
          c[b2 + 820 >> 2] = 0;
          c[b2 + 812 >> 2] = 0;
          c[b2 + 816 >> 2] = 0;
          d2 = c[b2 + 800 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 804 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 800 >> 2] = 0;
          }
          a[b2 + 804 >> 0] = 1;
          c[b2 + 800 >> 2] = 0;
          c[b2 + 792 >> 2] = 0;
          c[b2 + 796 >> 2] = 0;
          d2 = c[b2 + 780 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 784 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 780 >> 2] = 0;
          }
          a[b2 + 784 >> 0] = 1;
          c[b2 + 780 >> 2] = 0;
          c[b2 + 772 >> 2] = 0;
          c[b2 + 776 >> 2] = 0;
          d2 = c[b2 + 760 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 764 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 760 >> 2] = 0;
          }
          a[b2 + 764 >> 0] = 1;
          c[b2 + 760 >> 2] = 0;
          c[b2 + 752 >> 2] = 0;
          c[b2 + 756 >> 2] = 0;
          d2 = c[b2 + 740 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 744 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 740 >> 2] = 0;
          }
          a[b2 + 744 >> 0] = 1;
          c[b2 + 740 >> 2] = 0;
          c[b2 + 732 >> 2] = 0;
          c[b2 + 736 >> 2] = 0;
          d2 = c[b2 + 552 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 556 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 552 >> 2] = 0;
          }
          a[b2 + 556 >> 0] = 1;
          c[b2 + 552 >> 2] = 0;
          c[b2 + 544 >> 2] = 0;
          c[b2 + 548 >> 2] = 0;
          d2 = c[b2 + 532 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 536 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 532 >> 2] = 0;
          }
          a[b2 + 536 >> 0] = 1;
          c[b2 + 532 >> 2] = 0;
          c[b2 + 524 >> 2] = 0;
          c[b2 + 528 >> 2] = 0;
          d2 = c[b2 + 484 >> 2] | 0;
          if (d2 | 0) {
            if (!((a[b2 + 488 >> 0] & 1) == 0 | (d2 | 0) == 0)) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 484 >> 2] = 0;
          }
          a[b2 + 488 >> 0] = 1;
          c[b2 + 484 >> 2] = 0;
          c[b2 + 476 >> 2] = 0;
          c[b2 + 480 >> 2] = 0;
          d2 = c[b2 + 464 >> 2] | 0;
          if (d2 | 0) {
            if (!((a[b2 + 468 >> 0] & 1) == 0 | (d2 | 0) == 0)) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 464 >> 2] = 0;
          }
          a[b2 + 468 >> 0] = 1;
          c[b2 + 464 >> 2] = 0;
          c[b2 + 456 >> 2] = 0;
          c[b2 + 460 >> 2] = 0;
          d2 = c[b2 + 444 >> 2] | 0;
          if (d2 | 0) {
            if (!((a[b2 + 448 >> 0] & 1) == 0 | (d2 | 0) == 0)) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 444 >> 2] = 0;
          }
          a[b2 + 448 >> 0] = 1;
          c[b2 + 444 >> 2] = 0;
          c[b2 + 436 >> 2] = 0;
          c[b2 + 440 >> 2] = 0;
          d2 = c[b2 + 316 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 320 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 316 >> 2] = 0;
          }
          a[b2 + 320 >> 0] = 1;
          c[b2 + 316 >> 2] = 0;
          c[b2 + 308 >> 2] = 0;
          c[b2 + 312 >> 2] = 0;
          c[b2 >> 2] = 5592;
          d2 = c[b2 + 292 >> 2] | 0;
          if (!d2) {
            a[b2 + 296 >> 0] = 1;
            c[b2 + 292 >> 2] = 0;
            c[b2 + 284 >> 2] = 0;
            b2 = b2 + 288 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 296 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 292 >> 2] = 0;
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          b2 = b2 + 288 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function id(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          n2 = i;
          i = i + 16 | 0;
          j2 = c[a2 + 372 >> 2] | 0;
          a:
            do
              switch (c[j2 + 32 >> 2] | 0) {
                case 1: {
                  b2 = 0;
                  d2 = 1;
                  while (1) {
                    c[n2 >> 2] = 0;
                    c[n2 + 4 >> 2] = 0;
                    c[n2 + 8 >> 2] = 0;
                    c[n2 + 12 >> 2] = 0;
                    g[n2 + (b2 << 2) >> 2] = 1;
                    o2 = j2 + 32 | 0;
                    g[j2 + 16 + (d2 << 2) >> 2] = 0;
                    d2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                    c[a2 + 364 >> 2] = d2;
                    c[j2 + (c[o2 >> 2] << 2) >> 2] = c[a2 + 348 + (d2 << 2) >> 2];
                    d2 = c[o2 >> 2] | 0;
                    c[o2 >> 2] = d2 + 1;
                    e2 = +g[n2 >> 2];
                    f2 = +g[n2 + 4 >> 2];
                    h2 = +g[n2 + 8 >> 2];
                    Ch(a2, e2, f2, h2, c[j2 + (d2 << 2) >> 2] | 0);
                    if (id(a2) | 0)
                      break;
                    j2 = c[a2 + 372 >> 2] | 0;
                    o2 = (c[j2 + 32 >> 2] | 0) + -1 | 0;
                    c[j2 + 32 >> 2] = o2;
                    o2 = c[j2 + (o2 << 2) >> 2] | 0;
                    j2 = c[a2 + 364 >> 2] | 0;
                    c[a2 + 364 >> 2] = j2 + 1;
                    c[a2 + 348 + (j2 << 2) >> 2] = o2;
                    j2 = c[a2 + 372 >> 2] | 0;
                    g[j2 + 16 + (c[j2 + 32 >> 2] << 2) >> 2] = 0;
                    o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                    c[a2 + 364 >> 2] = o2;
                    c[j2 + (c[j2 + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                    o2 = c[j2 + 32 >> 2] | 0;
                    c[j2 + 32 >> 2] = o2 + 1;
                    Ch(a2, -e2, -f2, -h2, c[j2 + (o2 << 2) >> 2] | 0);
                    if (id(a2) | 0)
                      break;
                    o2 = c[a2 + 372 >> 2] | 0;
                    j2 = (c[o2 + 32 >> 2] | 0) + -1 | 0;
                    c[o2 + 32 >> 2] = j2;
                    j2 = c[o2 + (j2 << 2) >> 2] | 0;
                    o2 = c[a2 + 364 >> 2] | 0;
                    c[a2 + 364 >> 2] = o2 + 1;
                    c[a2 + 348 + (o2 << 2) >> 2] = j2;
                    b2 = b2 + 1 | 0;
                    if (b2 >>> 0 >= 3)
                      break a;
                    d2 = c[a2 + 372 >> 2] | 0;
                    j2 = d2;
                    d2 = c[d2 + 32 >> 2] | 0;
                  }
                  o2 = 1;
                  i = n2;
                  return o2 | 0;
                }
                case 2: {
                  o2 = c[j2 + 4 >> 2] | 0;
                  b2 = c[j2 >> 2] | 0;
                  e2 = +g[o2 + 16 >> 2] - +g[b2 + 16 >> 2];
                  f2 = +g[o2 + 20 >> 2] - +g[b2 + 20 >> 2];
                  h2 = +g[o2 + 24 >> 2] - +g[b2 + 24 >> 2];
                  b2 = 0;
                  while (1) {
                    c[n2 >> 2] = 0;
                    c[n2 + 4 >> 2] = 0;
                    c[n2 + 8 >> 2] = 0;
                    c[n2 + 12 >> 2] = 0;
                    g[n2 + (b2 << 2) >> 2] = 1;
                    k2 = +g[n2 + 8 >> 2];
                    l2 = +g[n2 + 4 >> 2];
                    m2 = +g[n2 >> 2];
                    if ((f2 * k2 - h2 * l2) * (f2 * k2 - h2 * l2) + (h2 * m2 - e2 * k2) * (h2 * m2 - e2 * k2) + (e2 * l2 - f2 * m2) * (e2 * l2 - f2 * m2) > 0) {
                      j2 = c[a2 + 372 >> 2] | 0;
                      g[j2 + 16 + (c[j2 + 32 >> 2] << 2) >> 2] = 0;
                      o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                      c[a2 + 364 >> 2] = o2;
                      c[j2 + (c[j2 + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                      o2 = c[j2 + 32 >> 2] | 0;
                      c[j2 + 32 >> 2] = o2 + 1;
                      Ch(a2, f2 * k2 - h2 * l2, h2 * m2 - e2 * k2, e2 * l2 - f2 * m2, c[j2 + (o2 << 2) >> 2] | 0);
                      if (id(a2) | 0)
                        break;
                      j2 = c[a2 + 372 >> 2] | 0;
                      o2 = (c[j2 + 32 >> 2] | 0) + -1 | 0;
                      c[j2 + 32 >> 2] = o2;
                      o2 = c[j2 + (o2 << 2) >> 2] | 0;
                      j2 = c[a2 + 364 >> 2] | 0;
                      c[a2 + 364 >> 2] = j2 + 1;
                      c[a2 + 348 + (j2 << 2) >> 2] = o2;
                      j2 = c[a2 + 372 >> 2] | 0;
                      g[j2 + 16 + (c[j2 + 32 >> 2] << 2) >> 2] = 0;
                      o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                      c[a2 + 364 >> 2] = o2;
                      c[j2 + (c[j2 + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                      o2 = c[j2 + 32 >> 2] | 0;
                      c[j2 + 32 >> 2] = o2 + 1;
                      Ch(a2, -(f2 * k2 - h2 * l2), -(h2 * m2 - e2 * k2), -(e2 * l2 - f2 * m2), c[j2 + (o2 << 2) >> 2] | 0);
                      if (id(a2) | 0)
                        break;
                      o2 = c[a2 + 372 >> 2] | 0;
                      j2 = (c[o2 + 32 >> 2] | 0) + -1 | 0;
                      c[o2 + 32 >> 2] = j2;
                      j2 = c[o2 + (j2 << 2) >> 2] | 0;
                      o2 = c[a2 + 364 >> 2] | 0;
                      c[a2 + 364 >> 2] = o2 + 1;
                      c[a2 + 348 + (o2 << 2) >> 2] = j2;
                    }
                    b2 = b2 + 1 | 0;
                    if (b2 >>> 0 >= 3)
                      break a;
                  }
                  o2 = 1;
                  i = n2;
                  return o2 | 0;
                }
                case 3: {
                  o2 = c[j2 + 4 >> 2] | 0;
                  d2 = c[j2 >> 2] | 0;
                  k2 = +g[d2 + 16 >> 2];
                  e2 = +g[o2 + 16 >> 2] - k2;
                  l2 = +g[d2 + 20 >> 2];
                  f2 = +g[o2 + 20 >> 2] - l2;
                  m2 = +g[d2 + 24 >> 2];
                  h2 = +g[o2 + 24 >> 2] - m2;
                  o2 = c[j2 + 8 >> 2] | 0;
                  k2 = +g[o2 + 16 >> 2] - k2;
                  l2 = +g[o2 + 20 >> 2] - l2;
                  m2 = +g[o2 + 24 >> 2] - m2;
                  if ((f2 * m2 - h2 * l2) * (f2 * m2 - h2 * l2) + (h2 * k2 - e2 * m2) * (h2 * k2 - e2 * m2) + (e2 * l2 - f2 * k2) * (e2 * l2 - f2 * k2) > 0) {
                    g[j2 + 28 >> 2] = 0;
                    o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                    c[a2 + 364 >> 2] = o2;
                    c[j2 + 12 >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                    o2 = c[j2 + 32 >> 2] | 0;
                    c[j2 + 32 >> 2] = o2 + 1;
                    Ch(a2, f2 * m2 - h2 * l2, h2 * k2 - e2 * m2, e2 * l2 - f2 * k2, c[j2 + (o2 << 2) >> 2] | 0);
                    if (id(a2) | 0) {
                      o2 = 1;
                      i = n2;
                      return o2 | 0;
                    }
                    j2 = c[a2 + 372 >> 2] | 0;
                    o2 = (c[j2 + 32 >> 2] | 0) + -1 | 0;
                    c[j2 + 32 >> 2] = o2;
                    o2 = c[j2 + (o2 << 2) >> 2] | 0;
                    j2 = c[a2 + 364 >> 2] | 0;
                    c[a2 + 364 >> 2] = j2 + 1;
                    c[a2 + 348 + (j2 << 2) >> 2] = o2;
                    j2 = c[a2 + 372 >> 2] | 0;
                    g[j2 + 16 + (c[j2 + 32 >> 2] << 2) >> 2] = 0;
                    o2 = (c[a2 + 364 >> 2] | 0) + -1 | 0;
                    c[a2 + 364 >> 2] = o2;
                    c[j2 + (c[j2 + 32 >> 2] << 2) >> 2] = c[a2 + 348 + (o2 << 2) >> 2];
                    o2 = c[j2 + 32 >> 2] | 0;
                    c[j2 + 32 >> 2] = o2 + 1;
                    Ch(a2, -(f2 * m2 - h2 * l2), -(h2 * k2 - e2 * m2), -(e2 * l2 - f2 * k2), c[j2 + (o2 << 2) >> 2] | 0);
                    if (id(a2) | 0) {
                      o2 = 1;
                      i = n2;
                      return o2 | 0;
                    } else {
                      o2 = c[a2 + 372 >> 2] | 0;
                      j2 = (c[o2 + 32 >> 2] | 0) + -1 | 0;
                      c[o2 + 32 >> 2] = j2;
                      j2 = c[o2 + (j2 << 2) >> 2] | 0;
                      o2 = c[a2 + 364 >> 2] | 0;
                      c[a2 + 364 >> 2] = o2 + 1;
                      c[a2 + 348 + (o2 << 2) >> 2] = j2;
                      break a;
                    }
                  }
                  break;
                }
                case 4: {
                  o2 = c[j2 >> 2] | 0;
                  a2 = c[j2 + 12 >> 2] | 0;
                  m2 = +g[a2 + 16 >> 2];
                  r2 = +g[o2 + 16 >> 2] - m2;
                  p2 = +g[a2 + 20 >> 2];
                  e2 = +g[o2 + 20 >> 2] - p2;
                  h2 = +g[a2 + 24 >> 2];
                  k2 = +g[o2 + 24 >> 2] - h2;
                  o2 = c[j2 + 4 >> 2] | 0;
                  f2 = +g[o2 + 16 >> 2] - m2;
                  l2 = +g[o2 + 20 >> 2] - p2;
                  q2 = +g[o2 + 24 >> 2] - h2;
                  o2 = c[j2 + 8 >> 2] | 0;
                  m2 = +g[o2 + 16 >> 2] - m2;
                  p2 = +g[o2 + 20 >> 2] - p2;
                  h2 = +g[o2 + 24 >> 2] - h2;
                  if (!((false ? 1 : r2 * l2 * h2 + (e2 * q2 * m2 + k2 * f2 * p2 - r2 * q2 * p2 - e2 * f2 * h2) - k2 * l2 * m2 != r2 * l2 * h2 + (e2 * q2 * m2 + k2 * f2 * p2 - r2 * q2 * p2 - e2 * f2 * h2) - k2 * l2 * m2) | r2 * l2 * h2 + (e2 * q2 * m2 + k2 * f2 * p2 - r2 * q2 * p2 - e2 * f2 * h2) - k2 * l2 * m2 == 0)) {
                    o2 = 1;
                    i = n2;
                    return o2 | 0;
                  }
                  break;
                }
                default: {
                }
              }
            while (0);
          o2 = 0;
          i = n2;
          return o2 | 0;
        }
        function jd(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0;
          Z2 = c[d2 + 36 >> 2] | 0;
          X2 = c[e2 + 36 >> 2] | 0;
          L2 = +g[Z2 + 8 >> 2];
          N2 = +g[Z2 + 12 >> 2];
          M2 = +g[Z2 + 16 >> 2];
          h2 = c[X2 + 8 >> 2] | 0;
          R2 = +g[h2 + 8 >> 2];
          S2 = +g[h2 + 12 >> 2];
          T2 = +g[h2 + 16 >> 2];
          d2 = c[X2 + 12 >> 2] | 0;
          O2 = +g[d2 + 8 >> 2];
          P2 = +g[d2 + 12 >> 2];
          Q2 = +g[d2 + 16 >> 2];
          e2 = c[X2 + 16 >> 2] | 0;
          U2 = +g[e2 + 8 >> 2];
          V2 = +g[e2 + 12 >> 2];
          W2 = +g[e2 + 16 >> 2];
          t2 = O2 - L2 - (R2 - L2);
          A2 = P2 - N2 - (S2 - N2);
          v2 = Q2 - M2 - (T2 - M2);
          u2 = A2 * (W2 - M2 - (T2 - M2)) - v2 * (V2 - N2 - (S2 - N2));
          B2 = v2 * (U2 - L2 - (R2 - L2)) - t2 * (W2 - M2 - (T2 - M2));
          w2 = t2 * (V2 - N2 - (S2 - N2)) - A2 * (U2 - L2 - (R2 - L2));
          do
            if (w2 * w2 + (u2 * u2 + B2 * B2) > 11920928955078125e-23 ? (D2 = 1 / +G(+(w2 * w2 + (u2 * u2 + B2 * B2))), E2 = (T2 - M2) * w2 * D2 + ((R2 - L2) * u2 * D2 + (S2 - N2) * B2 * D2), E2 * E2 < 34028234663852886e22) : 0) {
              f2 = R2 - L2 - u2 * D2 * E2;
              k2 = S2 - N2 - B2 * D2 * E2;
              n2 = T2 - M2 - w2 * D2 * E2;
              p2 = O2 - L2 - u2 * D2 * E2;
              r2 = P2 - N2 - B2 * D2 * E2;
              s2 = Q2 - M2 - w2 * D2 * E2;
              if ((w2 * (r2 * f2 - k2 * p2) + (u2 * (k2 * s2 - n2 * r2) + B2 * (n2 * p2 - s2 * f2)) > 0 ? (x2 = U2 - L2 - u2 * D2 * E2, y2 = V2 - N2 - B2 * D2 * E2, z2 = W2 - M2 - w2 * D2 * E2, w2 * (y2 * p2 - r2 * x2) + (u2 * (r2 * z2 - s2 * y2) + B2 * (s2 * x2 - z2 * p2)) > 0) : 0) ? w2 * (k2 * x2 - y2 * f2) + (u2 * (y2 * n2 - z2 * k2) + B2 * (z2 * f2 - n2 * x2)) > 0 : 0) {
                q2 = E2 * E2;
                p2 = u2 * D2 * E2;
                n2 = w2 * D2 * E2;
                m2 = B2 * D2 * E2;
                break;
              }
              if (t2 * t2 + A2 * A2 + v2 * v2 > 11920928955078125e-23 ? (C2 = -((R2 - L2) * t2 + (S2 - N2) * A2 + (T2 - M2) * v2) / (t2 * t2 + A2 * A2 + v2 * v2), C2 = C2 < 0 ? 0 : C2 > 1 ? 1 : C2, q2 = (T2 - M2 + v2 * C2) * (T2 - M2 + v2 * C2) + ((R2 - L2 + t2 * C2) * (R2 - L2 + t2 * C2) + (S2 - N2 + A2 * C2) * (S2 - N2 + A2 * C2)), q2 < 34028234663852886e22) : 0) {
                p2 = R2 - L2 + t2 * C2;
                n2 = T2 - M2 + v2 * C2;
                k2 = S2 - N2 + A2 * C2;
              } else {
                q2 = 34028234663852886e22;
                p2 = 0;
                n2 = 0;
                k2 = 0;
              }
              f2 = (U2 - L2 - (O2 - L2)) * (U2 - L2 - (O2 - L2)) + (V2 - N2 - (P2 - N2)) * (V2 - N2 - (P2 - N2)) + (W2 - M2 - (Q2 - M2)) * (W2 - M2 - (Q2 - M2));
              if (f2 > 11920928955078125e-23 ? (H2 = -((O2 - L2) * (U2 - L2 - (O2 - L2)) + (P2 - N2) * (V2 - N2 - (P2 - N2)) + (Q2 - M2) * (W2 - M2 - (Q2 - M2))) / f2, H2 = H2 < 0 ? 0 : H2 > 1 ? 1 : H2, F2 = O2 - L2 + (U2 - L2 - (O2 - L2)) * H2, I2 = P2 - N2 + (V2 - N2 - (P2 - N2)) * H2, H2 = Q2 - M2 + (W2 - M2 - (Q2 - M2)) * H2, H2 * H2 + (F2 * F2 + I2 * I2) < q2) : 0) {
                q2 = H2 * H2 + (F2 * F2 + I2 * I2);
                p2 = F2;
                n2 = H2;
                k2 = I2;
              }
              f2 = (R2 - L2 - (U2 - L2)) * (R2 - L2 - (U2 - L2)) + (S2 - N2 - (V2 - N2)) * (S2 - N2 - (V2 - N2)) + (T2 - M2 - (W2 - M2)) * (T2 - M2 - (W2 - M2));
              if (f2 > 11920928955078125e-23 ? (K2 = -((U2 - L2) * (R2 - L2 - (U2 - L2)) + (V2 - N2) * (S2 - N2 - (V2 - N2)) + (W2 - M2) * (T2 - M2 - (W2 - M2))) / f2, K2 = K2 < 0 ? 0 : K2 > 1 ? 1 : K2, J2 = U2 - L2 + (R2 - L2 - (U2 - L2)) * K2, m2 = V2 - N2 + (S2 - N2 - (V2 - N2)) * K2, K2 = W2 - M2 + (T2 - M2 - (W2 - M2)) * K2, K2 * K2 + (J2 * J2 + m2 * m2) < q2) : 0) {
                q2 = K2 * K2 + (J2 * J2 + m2 * m2);
                p2 = J2;
                n2 = K2;
              } else
                m2 = k2;
            } else {
              q2 = 34028234663852886e22;
              p2 = 0;
              n2 = 0;
              m2 = 0;
            }
          while (0);
          J2 = L2 - +g[Z2 + 24 >> 2];
          K2 = N2 - +g[Z2 + 28 >> 2];
          u2 = M2 - +g[Z2 + 32 >> 2];
          u2 = +g[b2 + 12 >> 2] + +G(+(J2 * J2 + K2 * K2 + u2 * u2)) * 2;
          if (!(q2 < u2 * u2))
            return;
          r2 = L2 + p2;
          f2 = N2 + m2;
          k2 = M2 + n2;
          t2 = +G(+(((R2 - r2) * (P2 - f2) - (S2 - f2) * (O2 - r2)) * ((R2 - r2) * (P2 - f2) - (S2 - f2) * (O2 - r2)) + (((S2 - f2) * (Q2 - k2) - (T2 - k2) * (P2 - f2)) * ((S2 - f2) * (Q2 - k2) - (T2 - k2) * (P2 - f2)) + ((T2 - k2) * (O2 - r2) - (R2 - r2) * (Q2 - k2)) * ((T2 - k2) * (O2 - r2) - (R2 - r2) * (Q2 - k2)))));
          s2 = +G(+(((O2 - r2) * (V2 - f2) - (P2 - f2) * (U2 - r2)) * ((O2 - r2) * (V2 - f2) - (P2 - f2) * (U2 - r2)) + (((P2 - f2) * (W2 - k2) - (Q2 - k2) * (V2 - f2)) * ((P2 - f2) * (W2 - k2) - (Q2 - k2) * (V2 - f2)) + ((Q2 - k2) * (U2 - r2) - (O2 - r2) * (W2 - k2)) * ((Q2 - k2) * (U2 - r2) - (O2 - r2) * (W2 - k2)))));
          r2 = +G(+(((S2 - f2) * (U2 - r2) - (R2 - r2) * (V2 - f2)) * ((S2 - f2) * (U2 - r2) - (R2 - r2) * (V2 - f2)) + (((T2 - k2) * (V2 - f2) - (S2 - f2) * (W2 - k2)) * ((T2 - k2) * (V2 - f2) - (S2 - f2) * (W2 - k2)) + ((R2 - r2) * (W2 - k2) - (T2 - k2) * (U2 - r2)) * ((R2 - r2) * (W2 - k2) - (T2 - k2) * (U2 - r2)))));
          k2 = +g[Z2 + 88 >> 2];
          V2 = +g[h2 + 88 >> 2];
          W2 = +g[d2 + 88 >> 2];
          f2 = +g[e2 + 88 >> 2];
          f2 = !(V2 <= 0) & !(W2 <= 0) & !(f2 <= 0) ? V2 * s2 * (1 / (t2 + s2 + r2)) + W2 * r2 * (1 / (t2 + s2 + r2)) + t2 * (1 / (t2 + s2 + r2)) * f2 : 0;
          if (!(k2 + f2 > 0))
            return;
          W2 = 1 / -+G(+q2);
          q2 = p2 * W2;
          p2 = m2 * W2;
          n2 = n2 * W2;
          o2 = c[b2 + 4 >> 2] | 0;
          d2 = c[b2 + 8 >> 2] | 0;
          l2 = c[(+g[o2 + 356 >> 2] > +g[d2 + 356 >> 2] ? o2 + 356 | 0 : d2 + 356 | 0) >> 2] | 0;
          m2 = k2 / (k2 + f2) * +g[o2 + 372 >> 2];
          f2 = f2 / (k2 + f2) * +g[d2 + 372 >> 2];
          d2 = c[o2 + 872 >> 2] | 0;
          if ((d2 | 0) == (c[o2 + 876 >> 2] | 0) ? (Y2 = d2 | 0 ? d2 << 1 : 1, (d2 | 0) < (Y2 | 0)) : 0) {
            if (!Y2)
              j2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              d2 = ic((Y2 * 56 | 3) + 16 | 0) | 0;
              if (!d2)
                d2 = 0;
              else {
                c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                d2 = d2 + 4 + 15 & -16;
              }
              j2 = d2;
              d2 = c[o2 + 872 >> 2] | 0;
            }
            if ((d2 | 0) > 0) {
              e2 = 0;
              do {
                h2 = j2 + (e2 * 56 | 0) | 0;
                b2 = (c[o2 + 880 >> 2] | 0) + (e2 * 56 | 0) | 0;
                i2 = h2 + 56 | 0;
                do {
                  c[h2 >> 2] = c[b2 >> 2];
                  h2 = h2 + 4 | 0;
                  b2 = b2 + 4 | 0;
                } while ((h2 | 0) < (i2 | 0));
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (d2 | 0));
            }
            d2 = c[o2 + 880 >> 2] | 0;
            if (d2 | 0) {
              if (a[o2 + 884 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[d2 + -4 >> 2] | 0);
              }
              c[o2 + 880 >> 2] = 0;
            }
            a[o2 + 884 >> 0] = 1;
            c[o2 + 880 >> 2] = j2;
            c[o2 + 876 >> 2] = Y2;
            d2 = c[o2 + 872 >> 2] | 0;
          }
          Y2 = c[o2 + 880 >> 2] | 0;
          c[Y2 + (d2 * 56 | 0) >> 2] = Z2;
          c[Y2 + (d2 * 56 | 0) + 4 >> 2] = X2;
          g[Y2 + (d2 * 56 | 0) + 8 >> 2] = s2 * (1 / (t2 + s2 + r2));
          g[Y2 + (d2 * 56 | 0) + 12 >> 2] = r2 * (1 / (t2 + s2 + r2));
          g[Y2 + (d2 * 56 | 0) + 16 >> 2] = t2 * (1 / (t2 + s2 + r2));
          g[Y2 + (d2 * 56 | 0) + 20 >> 2] = 0;
          g[Y2 + (d2 * 56 | 0) + 24 >> 2] = q2;
          g[Y2 + (d2 * 56 | 0) + 28 >> 2] = p2;
          g[Y2 + (d2 * 56 | 0) + 32 >> 2] = n2;
          g[Y2 + (d2 * 56 | 0) + 36 >> 2] = 0;
          g[Y2 + (d2 * 56 | 0) + 40 >> 2] = u2;
          c[Y2 + (d2 * 56 | 0) + 44 >> 2] = l2;
          g[Y2 + (d2 * 56 | 0) + 48 >> 2] = m2;
          g[Y2 + (d2 * 56 | 0) + 52 >> 2] = f2;
          c[o2 + 872 >> 2] = (c[o2 + 872 >> 2] | 0) + 1;
          return;
        }
        function kd(d2, e2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          q2 = i;
          i = i + 64 | 0;
          g[d2 + 20 >> 2] = +h[e2 + 32 >> 3];
          g[d2 + 24 >> 2] = +h[e2 + 40 >> 3];
          g[d2 + 28 >> 2] = +h[e2 + 48 >> 3];
          g[d2 + 32 >> 2] = +h[e2 + 56 >> 3];
          g[d2 + 4 >> 2] = +h[e2 >> 3];
          g[d2 + 8 >> 2] = +h[e2 + 8 >> 3];
          g[d2 + 12 >> 2] = +h[e2 + 16 >> 3];
          g[d2 + 16 >> 2] = +h[e2 + 24 >> 3];
          g[d2 + 36 >> 2] = +h[e2 + 64 >> 3];
          g[d2 + 40 >> 2] = +h[e2 + 72 >> 3];
          g[d2 + 44 >> 2] = +h[e2 + 80 >> 3];
          g[d2 + 48 >> 2] = +h[e2 + 88 >> 3];
          c[d2 + 56 >> 2] = c[e2 + 96 >> 2];
          a[d2 + 60 >> 0] = (c[e2 + 100 >> 2] | 0) != 0 & 1;
          p2 = c[e2 + 104 >> 2] | 0;
          l2 = q2;
          n2 = l2 + 64 | 0;
          do {
            c[l2 >> 2] = 0;
            l2 = l2 + 4 | 0;
          } while ((l2 | 0) < (n2 | 0));
          o2 = c[d2 + 88 >> 2] | 0;
          if ((o2 | 0) < (p2 | 0)) {
            if ((c[d2 + 92 >> 2] | 0) < (p2 | 0)) {
              if (!p2) {
                f2 = 0;
                k2 = o2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic(p2 << 6 | 19) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                k2 = c[d2 + 88 >> 2] | 0;
              }
              if ((k2 | 0) > 0) {
                j2 = 0;
                do {
                  l2 = f2 + (j2 << 6) | 0;
                  m2 = (c[d2 + 96 >> 2] | 0) + (j2 << 6) | 0;
                  n2 = l2 + 64 | 0;
                  do {
                    c[l2 >> 2] = c[m2 >> 2];
                    l2 = l2 + 4 | 0;
                    m2 = m2 + 4 | 0;
                  } while ((l2 | 0) < (n2 | 0));
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (k2 | 0));
              }
              j2 = c[d2 + 96 >> 2] | 0;
              if (j2 | 0) {
                if (a[d2 + 100 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[j2 + -4 >> 2] | 0);
                }
                c[d2 + 96 >> 2] = 0;
              }
              a[d2 + 100 >> 0] = 1;
              c[d2 + 96 >> 2] = f2;
              c[d2 + 92 >> 2] = p2;
              j2 = d2 + 96 | 0;
            } else
              j2 = d2 + 96 | 0;
            f2 = o2;
            do {
              l2 = (c[j2 >> 2] | 0) + (f2 << 6) | 0;
              m2 = q2;
              n2 = l2 + 64 | 0;
              do {
                c[l2 >> 2] = c[m2 >> 2];
                l2 = l2 + 4 | 0;
                m2 = m2 + 4 | 0;
              } while ((l2 | 0) < (n2 | 0));
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (p2 | 0));
          }
          c[d2 + 88 >> 2] = p2;
          if ((p2 | 0) > 0) {
            k2 = c[d2 + 96 >> 2] | 0;
            f2 = c[e2 + 112 >> 2] | 0;
            j2 = 0;
            while (1) {
              g[k2 + (j2 << 6) + 16 >> 2] = +h[f2 + 32 >> 3];
              g[k2 + (j2 << 6) + 20 >> 2] = +h[f2 + 40 >> 3];
              g[k2 + (j2 << 6) + 24 >> 2] = +h[f2 + 48 >> 3];
              g[k2 + (j2 << 6) + 28 >> 2] = +h[f2 + 56 >> 3];
              g[k2 + (j2 << 6) >> 2] = +h[f2 >> 3];
              g[k2 + (j2 << 6) + 4 >> 2] = +h[f2 + 8 >> 3];
              g[k2 + (j2 << 6) + 8 >> 2] = +h[f2 + 16 >> 3];
              g[k2 + (j2 << 6) + 12 >> 2] = +h[f2 + 24 >> 3];
              c[k2 + (j2 << 6) + 32 >> 2] = c[f2 + 64 >> 2];
              c[k2 + (j2 << 6) + 36 >> 2] = c[f2 + 68 >> 2];
              c[k2 + (j2 << 6) + 40 >> 2] = c[f2 + 72 >> 2];
              j2 = j2 + 1 | 0;
              if ((j2 | 0) == (p2 | 0))
                break;
              else
                f2 = f2 + 80 | 0;
            }
          }
          m2 = c[e2 + 108 >> 2] | 0;
          c[q2 >> 2] = 0;
          c[q2 + 4 >> 2] = 0;
          c[q2 + 8 >> 2] = 0;
          c[q2 + 12 >> 2] = 0;
          l2 = c[d2 + 128 >> 2] | 0;
          if ((l2 | 0) < (m2 | 0)) {
            if ((c[d2 + 132 >> 2] | 0) < (m2 | 0)) {
              if (!m2) {
                f2 = 0;
                k2 = l2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic((m2 << 4 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                k2 = c[d2 + 128 >> 2] | 0;
              }
              if ((k2 | 0) > 0) {
                j2 = 0;
                do {
                  p2 = f2 + (j2 << 4) | 0;
                  o2 = (c[d2 + 136 >> 2] | 0) + (j2 << 4) | 0;
                  c[p2 >> 2] = c[o2 >> 2];
                  c[p2 + 4 >> 2] = c[o2 + 4 >> 2];
                  c[p2 + 8 >> 2] = c[o2 + 8 >> 2];
                  c[p2 + 12 >> 2] = c[o2 + 12 >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (k2 | 0));
              }
              j2 = c[d2 + 136 >> 2] | 0;
              if (j2 | 0) {
                if (a[d2 + 140 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[j2 + -4 >> 2] | 0);
                }
                c[d2 + 136 >> 2] = 0;
              }
              a[d2 + 140 >> 0] = 1;
              c[d2 + 136 >> 2] = f2;
              c[d2 + 132 >> 2] = m2;
              j2 = d2 + 136 | 0;
            } else
              j2 = d2 + 136 | 0;
            f2 = l2;
            do {
              p2 = (c[j2 >> 2] | 0) + (f2 << 4) | 0;
              c[p2 >> 2] = c[q2 >> 2];
              c[p2 + 4 >> 2] = c[q2 + 4 >> 2];
              c[p2 + 8 >> 2] = c[q2 + 8 >> 2];
              c[p2 + 12 >> 2] = c[q2 + 12 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (m2 | 0));
          }
          c[d2 + 128 >> 2] = m2;
          if ((m2 | 0) > 0) {
            k2 = c[d2 + 136 >> 2] | 0;
            f2 = 0;
            j2 = c[e2 + 116 >> 2] | 0;
            while (1) {
              c[k2 + (f2 << 4) + 12 >> 2] = c[j2 + 12 >> 2];
              b[k2 + (f2 << 4) + 6 >> 1] = b[j2 + 6 >> 1] | 0;
              b[k2 + (f2 << 4) + 8 >> 1] = b[j2 + 8 >> 1] | 0;
              b[k2 + (f2 << 4) + 10 >> 1] = b[j2 + 10 >> 1] | 0;
              b[k2 + (f2 << 4) >> 1] = b[j2 >> 1] | 0;
              b[k2 + (f2 << 4) + 2 >> 1] = b[j2 + 2 >> 1] | 0;
              b[k2 + (f2 << 4) + 4 >> 1] = b[j2 + 4 >> 1] | 0;
              f2 = f2 + 1 | 0;
              if ((f2 | 0) == (m2 | 0))
                break;
              else
                j2 = j2 + 16 | 0;
            }
          }
          c[d2 + 144 >> 2] = c[e2 + 120 >> 2];
          m2 = c[e2 + 124 >> 2] | 0;
          l2 = c[d2 + 152 >> 2] | 0;
          if ((l2 | 0) < (m2 | 0)) {
            if ((c[d2 + 156 >> 2] | 0) < (m2 | 0)) {
              if (!m2) {
                f2 = 0;
                k2 = l2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic(m2 << 5 | 19) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                k2 = c[d2 + 152 >> 2] | 0;
              }
              if ((k2 | 0) > 0) {
                j2 = 0;
                do {
                  p2 = f2 + (j2 << 5) | 0;
                  o2 = (c[d2 + 160 >> 2] | 0) + (j2 << 5) | 0;
                  c[p2 >> 2] = c[o2 >> 2];
                  c[p2 + 4 >> 2] = c[o2 + 4 >> 2];
                  c[p2 + 8 >> 2] = c[o2 + 8 >> 2];
                  c[p2 + 12 >> 2] = c[o2 + 12 >> 2];
                  c[p2 + 16 >> 2] = c[o2 + 16 >> 2];
                  c[p2 + 20 >> 2] = c[o2 + 20 >> 2];
                  c[p2 + 24 >> 2] = c[o2 + 24 >> 2];
                  c[p2 + 28 >> 2] = c[o2 + 28 >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (k2 | 0));
              }
              j2 = c[d2 + 160 >> 2] | 0;
              if (j2 | 0) {
                if (a[d2 + 164 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[j2 + -4 >> 2] | 0);
                }
                c[d2 + 160 >> 2] = 0;
              }
              a[d2 + 164 >> 0] = 1;
              c[d2 + 160 >> 2] = f2;
              c[d2 + 156 >> 2] = m2;
              j2 = d2 + 160 | 0;
            } else
              j2 = d2 + 160 | 0;
            f2 = l2;
            do {
              p2 = (c[j2 >> 2] | 0) + (f2 << 5) | 0;
              c[p2 >> 2] = c[q2 >> 2];
              c[p2 + 4 >> 2] = c[q2 + 4 >> 2];
              c[p2 + 8 >> 2] = c[q2 + 8 >> 2];
              c[p2 + 12 >> 2] = c[q2 + 12 >> 2];
              c[p2 + 16 >> 2] = c[q2 + 16 >> 2];
              c[p2 + 20 >> 2] = c[q2 + 20 >> 2];
              c[p2 + 24 >> 2] = c[q2 + 24 >> 2];
              c[p2 + 28 >> 2] = c[q2 + 28 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (m2 | 0));
          }
          c[d2 + 152 >> 2] = m2;
          if ((m2 | 0) <= 0) {
            i = q2;
            return;
          }
          k2 = c[d2 + 160 >> 2] | 0;
          j2 = 0;
          f2 = c[e2 + 128 >> 2] | 0;
          while (1) {
            b[k2 + (j2 << 5) + 6 >> 1] = b[f2 + 14 >> 1] | 0;
            b[k2 + (j2 << 5) + 8 >> 1] = b[f2 + 16 >> 1] | 0;
            b[k2 + (j2 << 5) + 10 >> 1] = b[f2 + 18 >> 1] | 0;
            b[k2 + (j2 << 5) >> 1] = b[f2 + 8 >> 1] | 0;
            b[k2 + (j2 << 5) + 2 >> 1] = b[f2 + 10 >> 1] | 0;
            b[k2 + (j2 << 5) + 4 >> 1] = b[f2 + 12 >> 1] | 0;
            c[k2 + (j2 << 5) + 12 >> 2] = c[f2 >> 2];
            c[k2 + (j2 << 5) + 16 >> 2] = c[f2 + 4 >> 2];
            j2 = j2 + 1 | 0;
            if ((j2 | 0) == (m2 | 0))
              break;
            else
              f2 = f2 + 20 | 0;
          }
          i = q2;
          return;
        }
        function ld(d2, e2) {
          d2 = d2 | 0;
          e2 = +e2;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0;
          s2 = i;
          i = i + 304 | 0;
          a:
            do
              if ((c[d2 + 232 >> 2] | 0) > 0) {
                l2 = s2 + 232 + 48 | 0;
                h2 = 0;
                while (1) {
                  m2 = c[(c[d2 + 240 >> 2] | 0) + (h2 << 2) >> 2] | 0;
                  g[m2 + 264 >> 2] = 1;
                  b:
                    do
                      switch (c[m2 + 216 >> 2] | 0) {
                        case 2:
                        case 5:
                          break;
                        default:
                          if (!(c[m2 + 204 >> 2] & 3)) {
                            Mg(m2 + 4 | 0, +g[m2 + 352 >> 2], +g[m2 + 356 >> 2], +g[m2 + 360 >> 2], m2 + 368 | 0, e2, s2 + 232 | 0);
                            f2 = +g[l2 >> 2] - +g[m2 + 52 >> 2];
                            j2 = +g[s2 + 232 + 52 >> 2] - +g[m2 + 56 >> 2];
                            k2 = +g[s2 + 232 + 56 >> 2] - +g[m2 + 60 >> 2];
                            do
                              if ((a[d2 + 44 >> 0] | 0 ? (t2 = +g[m2 + 272 >> 2], t2 * t2 != 0 ? t2 * t2 < f2 * f2 + j2 * j2 + k2 * k2 : 0) : 0) ? (c[(c[m2 + 192 >> 2] | 0) + 4 >> 2] | 0) < 20 : 0) {
                                c[5872] = (c[5872] | 0) + 1;
                                o2 = c[d2 + 68 >> 2] | 0;
                                o2 = ob[c[(c[o2 >> 2] | 0) + 36 >> 2] & 127](o2) | 0;
                                p2 = c[d2 + 24 >> 2] | 0;
                                g[s2 + 136 + 4 >> 2] = 1;
                                b[s2 + 136 + 8 >> 1] = 1;
                                b[s2 + 136 + 10 >> 1] = -1;
                                c[s2 + 136 + 12 >> 2] = c[m2 + 52 >> 2];
                                c[s2 + 136 + 12 + 4 >> 2] = c[m2 + 52 + 4 >> 2];
                                c[s2 + 136 + 12 + 8 >> 2] = c[m2 + 52 + 8 >> 2];
                                c[s2 + 136 + 12 + 12 >> 2] = c[m2 + 52 + 12 >> 2];
                                c[s2 + 136 + 28 >> 2] = c[l2 >> 2];
                                c[s2 + 136 + 28 + 4 >> 2] = c[l2 + 4 >> 2];
                                c[s2 + 136 + 28 + 8 >> 2] = c[l2 + 8 >> 2];
                                c[s2 + 136 + 28 + 12 >> 2] = c[l2 + 12 >> 2];
                                c[s2 + 136 + 76 >> 2] = 0;
                                c[s2 + 136 >> 2] = 4872;
                                c[s2 + 136 + 80 >> 2] = m2;
                                c[s2 + 136 + 88 >> 2] = o2;
                                c[s2 + 136 + 92 >> 2] = p2;
                                p2 = c[m2 + 268 >> 2] | 0;
                                c[s2 + 80 + 8 >> 2] = 0;
                                c[s2 + 80 + 12 >> 2] = -1;
                                c[s2 + 80 + 16 >> 2] = 1065353216;
                                c[s2 + 80 + 20 >> 2] = 1065353216;
                                c[s2 + 80 + 24 >> 2] = 1065353216;
                                g[s2 + 80 + 28 >> 2] = 0;
                                c[s2 + 80 >> 2] = 8368;
                                c[s2 + 80 + 4 >> 2] = 8;
                                c[s2 + 80 + 32 >> 2] = p2;
                                c[s2 + 80 + 48 >> 2] = p2;
                                c[s2 + 136 + 84 >> 2] = c[d2 + 56 >> 2];
                                p2 = c[(c[m2 + 188 >> 2] | 0) + 4 >> 2] | 0;
                                b[s2 + 136 + 8 >> 1] = p2;
                                b[s2 + 136 + 10 >> 1] = p2 >>> 16;
                                c[s2 + 16 + 48 >> 2] = c[l2 >> 2];
                                c[s2 + 16 + 48 + 4 >> 2] = c[l2 + 4 >> 2];
                                c[s2 + 16 + 48 + 8 >> 2] = c[l2 + 8 >> 2];
                                c[s2 + 16 + 48 + 12 >> 2] = c[l2 + 12 >> 2];
                                c[s2 + 16 >> 2] = c[m2 + 4 >> 2];
                                c[s2 + 16 + 4 >> 2] = c[m2 + 4 + 4 >> 2];
                                c[s2 + 16 + 8 >> 2] = c[m2 + 4 + 8 >> 2];
                                c[s2 + 16 + 12 >> 2] = c[m2 + 4 + 12 >> 2];
                                c[s2 + 16 + 16 >> 2] = c[m2 + 20 >> 2];
                                c[s2 + 16 + 16 + 4 >> 2] = c[m2 + 20 + 4 >> 2];
                                c[s2 + 16 + 16 + 8 >> 2] = c[m2 + 20 + 8 >> 2];
                                c[s2 + 16 + 16 + 12 >> 2] = c[m2 + 20 + 12 >> 2];
                                c[s2 + 16 + 32 >> 2] = c[m2 + 36 >> 2];
                                c[s2 + 16 + 32 + 4 >> 2] = c[m2 + 36 + 4 >> 2];
                                c[s2 + 16 + 32 + 8 >> 2] = c[m2 + 36 + 8 >> 2];
                                c[s2 + 16 + 32 + 12 >> 2] = c[m2 + 36 + 12 >> 2];
                                Hd(d2, s2 + 80 | 0, m2 + 4 | 0, s2 + 16 | 0, s2 + 136 | 0, 0);
                                f2 = +g[s2 + 136 + 4 >> 2];
                                if (f2 < 1) {
                                  g[m2 + 264 >> 2] = f2;
                                  Mg(m2 + 4 | 0, +g[m2 + 352 >> 2], +g[m2 + 356 >> 2], +g[m2 + 360 >> 2], m2 + 368 | 0, f2 * e2, s2 + 232 | 0);
                                  g[m2 + 264 >> 2] = 0;
                                  Be(m2, s2 + 232 | 0);
                                  break b;
                                } else
                                  break;
                              }
                            while (0);
                            Be(m2, s2 + 232 | 0);
                          }
                      }
                    while (0);
                  h2 = h2 + 1 | 0;
                  if ((h2 | 0) >= (c[d2 + 232 >> 2] | 0))
                    break a;
                }
              }
            while (0);
          if (!(a[d2 + 275 >> 0] | 0)) {
            i = s2;
            return;
          }
          if ((c[d2 + 308 >> 2] | 0) <= 0) {
            i = s2;
            return;
          }
          o2 = 0;
          do {
            p2 = c[(c[d2 + 316 >> 2] | 0) + (o2 << 2) >> 2] | 0;
            l2 = c[p2 + 772 >> 2] | 0;
            l2 = (c[l2 + 248 >> 2] & 2 | 0) == 0 ? 0 : l2;
            n2 = c[p2 + 776 >> 2] | 0;
            n2 = (c[n2 + 248 >> 2] & 2 | 0) == 0 ? 0 : n2;
            h2 = c[p2 + 780 >> 2] | 0;
            if ((h2 | 0) > 0)
              if (!l2) {
                l2 = 0;
                do {
                  f2 = +g[57] * +g[n2 + 228 >> 2];
                  if (f2 > 0 ? (q2 = +g[p2 + 4 + (l2 * 192 | 0) + 124 >> 2], q2 != 0) : 0) {
                    k2 = f2 * +g[p2 + 4 + (l2 * 192 | 0) + 64 >> 2] * q2;
                    e2 = f2 * +g[p2 + 4 + (l2 * 192 | 0) + 68 >> 2] * q2;
                    t2 = f2 * +g[p2 + 4 + (l2 * 192 | 0) + 72 >> 2] * q2;
                    f2 = +g[p2 + 4 + (l2 * 192 | 0) + 36 >> 2] - +g[n2 + 56 >> 2];
                    j2 = +g[p2 + 4 + (l2 * 192 | 0) + 40 >> 2] - +g[n2 + 60 >> 2];
                    g[s2 + 16 >> 2] = +g[p2 + 4 + (l2 * 192 | 0) + 32 >> 2] - +g[n2 + 52 >> 2];
                    g[s2 + 16 + 4 >> 2] = f2;
                    g[s2 + 16 + 8 >> 2] = j2;
                    g[s2 + 16 + 12 >> 2] = 0;
                    g[s2 >> 2] = k2;
                    g[s2 + 4 >> 2] = e2;
                    g[s2 + 8 >> 2] = t2;
                    g[s2 + 12 >> 2] = 0;
                    Xi(n2, s2, s2 + 16 | 0);
                    h2 = c[p2 + 780 >> 2] | 0;
                  }
                  l2 = l2 + 1 | 0;
                } while ((l2 | 0) < (h2 | 0));
              } else {
                m2 = 0;
                do {
                  f2 = +g[l2 + 228 >> 2] * +g[n2 + 228 >> 2];
                  if (f2 > 0 ? (r2 = +g[p2 + 4 + (m2 * 192 | 0) + 124 >> 2], r2 != 0) : 0) {
                    k2 = f2 * +g[p2 + 4 + (m2 * 192 | 0) + 64 >> 2] * r2;
                    e2 = f2 * +g[p2 + 4 + (m2 * 192 | 0) + 68 >> 2] * r2;
                    t2 = f2 * +g[p2 + 4 + (m2 * 192 | 0) + 72 >> 2] * r2;
                    g[s2 + 136 >> 2] = -k2;
                    g[s2 + 136 + 4 >> 2] = -e2;
                    g[s2 + 136 + 8 >> 2] = -t2;
                    g[s2 + 136 + 12 >> 2] = 0;
                    j2 = +g[p2 + 4 + (m2 * 192 | 0) + 52 >> 2] - +g[l2 + 56 >> 2];
                    f2 = +g[p2 + 4 + (m2 * 192 | 0) + 56 >> 2] - +g[l2 + 60 >> 2];
                    g[s2 + 80 >> 2] = +g[p2 + 4 + (m2 * 192 | 0) + 48 >> 2] - +g[l2 + 52 >> 2];
                    g[s2 + 80 + 4 >> 2] = j2;
                    g[s2 + 80 + 8 >> 2] = f2;
                    g[s2 + 80 + 12 >> 2] = 0;
                    f2 = +g[p2 + 4 + (m2 * 192 | 0) + 36 >> 2] - +g[n2 + 56 >> 2];
                    j2 = +g[p2 + 4 + (m2 * 192 | 0) + 40 >> 2] - +g[n2 + 60 >> 2];
                    g[s2 + 16 >> 2] = +g[p2 + 4 + (m2 * 192 | 0) + 32 >> 2] - +g[n2 + 52 >> 2];
                    g[s2 + 16 + 4 >> 2] = f2;
                    g[s2 + 16 + 8 >> 2] = j2;
                    g[s2 + 16 + 12 >> 2] = 0;
                    Xi(l2, s2 + 136 | 0, s2 + 80 | 0);
                    g[s2 >> 2] = k2;
                    g[s2 + 4 >> 2] = e2;
                    g[s2 + 8 >> 2] = t2;
                    g[s2 + 12 >> 2] = 0;
                    Xi(n2, s2, s2 + 16 | 0);
                    h2 = c[p2 + 780 >> 2] | 0;
                  }
                  m2 = m2 + 1 | 0;
                } while ((m2 | 0) < (h2 | 0));
              }
            o2 = o2 + 1 | 0;
          } while ((o2 | 0) < (c[d2 + 308 >> 2] | 0));
          i = s2;
          return;
        }
        function md(d2, e2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0;
          o2 = i;
          i = i + 64 | 0;
          c[d2 + 20 >> 2] = c[e2 + 16 >> 2];
          c[d2 + 24 >> 2] = c[e2 + 20 >> 2];
          c[d2 + 28 >> 2] = c[e2 + 24 >> 2];
          c[d2 + 32 >> 2] = c[e2 + 28 >> 2];
          c[d2 + 4 >> 2] = c[e2 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 4 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 8 >> 2];
          c[d2 + 16 >> 2] = c[e2 + 12 >> 2];
          c[d2 + 36 >> 2] = c[e2 + 32 >> 2];
          c[d2 + 40 >> 2] = c[e2 + 36 >> 2];
          c[d2 + 44 >> 2] = c[e2 + 40 >> 2];
          c[d2 + 48 >> 2] = c[e2 + 44 >> 2];
          c[d2 + 56 >> 2] = c[e2 + 48 >> 2];
          a[d2 + 60 >> 0] = (c[e2 + 52 >> 2] | 0) != 0 & 1;
          n2 = c[e2 + 56 >> 2] | 0;
          j2 = o2;
          l2 = j2 + 64 | 0;
          do {
            c[j2 >> 2] = 0;
            j2 = j2 + 4 | 0;
          } while ((j2 | 0) < (l2 | 0));
          m2 = c[d2 + 88 >> 2] | 0;
          if ((m2 | 0) < (n2 | 0)) {
            if ((c[d2 + 92 >> 2] | 0) < (n2 | 0)) {
              if (!n2) {
                f2 = 0;
                h2 = m2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic(n2 << 6 | 19) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                h2 = c[d2 + 88 >> 2] | 0;
              }
              if ((h2 | 0) > 0) {
                g2 = 0;
                do {
                  j2 = f2 + (g2 << 6) | 0;
                  k2 = (c[d2 + 96 >> 2] | 0) + (g2 << 6) | 0;
                  l2 = j2 + 64 | 0;
                  do {
                    c[j2 >> 2] = c[k2 >> 2];
                    j2 = j2 + 4 | 0;
                    k2 = k2 + 4 | 0;
                  } while ((j2 | 0) < (l2 | 0));
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (h2 | 0));
              }
              g2 = c[d2 + 96 >> 2] | 0;
              if (g2 | 0) {
                if (a[d2 + 100 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[g2 + -4 >> 2] | 0);
                }
                c[d2 + 96 >> 2] = 0;
              }
              a[d2 + 100 >> 0] = 1;
              c[d2 + 96 >> 2] = f2;
              c[d2 + 92 >> 2] = n2;
              g2 = d2 + 96 | 0;
            } else
              g2 = d2 + 96 | 0;
            f2 = m2;
            do {
              j2 = (c[g2 >> 2] | 0) + (f2 << 6) | 0;
              k2 = o2;
              l2 = j2 + 64 | 0;
              do {
                c[j2 >> 2] = c[k2 >> 2];
                j2 = j2 + 4 | 0;
                k2 = k2 + 4 | 0;
              } while ((j2 | 0) < (l2 | 0));
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (n2 | 0));
          }
          c[d2 + 88 >> 2] = n2;
          if ((n2 | 0) > 0) {
            h2 = c[d2 + 96 >> 2] | 0;
            f2 = c[e2 + 64 >> 2] | 0;
            g2 = 0;
            while (1) {
              c[h2 + (g2 << 6) + 16 >> 2] = c[f2 + 16 >> 2];
              c[h2 + (g2 << 6) + 20 >> 2] = c[f2 + 20 >> 2];
              c[h2 + (g2 << 6) + 24 >> 2] = c[f2 + 24 >> 2];
              c[h2 + (g2 << 6) + 28 >> 2] = c[f2 + 28 >> 2];
              c[h2 + (g2 << 6) >> 2] = c[f2 >> 2];
              c[h2 + (g2 << 6) + 4 >> 2] = c[f2 + 4 >> 2];
              c[h2 + (g2 << 6) + 8 >> 2] = c[f2 + 8 >> 2];
              c[h2 + (g2 << 6) + 12 >> 2] = c[f2 + 12 >> 2];
              c[h2 + (g2 << 6) + 32 >> 2] = c[f2 + 32 >> 2];
              c[h2 + (g2 << 6) + 36 >> 2] = c[f2 + 36 >> 2];
              c[h2 + (g2 << 6) + 40 >> 2] = c[f2 + 40 >> 2];
              g2 = g2 + 1 | 0;
              if ((g2 | 0) == (n2 | 0))
                break;
              else
                f2 = f2 + 48 | 0;
            }
          }
          k2 = c[e2 + 60 >> 2] | 0;
          c[o2 >> 2] = 0;
          c[o2 + 4 >> 2] = 0;
          c[o2 + 8 >> 2] = 0;
          c[o2 + 12 >> 2] = 0;
          j2 = c[d2 + 128 >> 2] | 0;
          if ((j2 | 0) < (k2 | 0)) {
            if ((c[d2 + 132 >> 2] | 0) < (k2 | 0)) {
              if (!k2) {
                f2 = 0;
                h2 = j2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic((k2 << 4 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                h2 = c[d2 + 128 >> 2] | 0;
              }
              if ((h2 | 0) > 0) {
                g2 = 0;
                do {
                  n2 = f2 + (g2 << 4) | 0;
                  m2 = (c[d2 + 136 >> 2] | 0) + (g2 << 4) | 0;
                  c[n2 >> 2] = c[m2 >> 2];
                  c[n2 + 4 >> 2] = c[m2 + 4 >> 2];
                  c[n2 + 8 >> 2] = c[m2 + 8 >> 2];
                  c[n2 + 12 >> 2] = c[m2 + 12 >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (h2 | 0));
              }
              g2 = c[d2 + 136 >> 2] | 0;
              if (g2 | 0) {
                if (a[d2 + 140 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[g2 + -4 >> 2] | 0);
                }
                c[d2 + 136 >> 2] = 0;
              }
              a[d2 + 140 >> 0] = 1;
              c[d2 + 136 >> 2] = f2;
              c[d2 + 132 >> 2] = k2;
              g2 = d2 + 136 | 0;
            } else
              g2 = d2 + 136 | 0;
            f2 = j2;
            do {
              n2 = (c[g2 >> 2] | 0) + (f2 << 4) | 0;
              c[n2 >> 2] = c[o2 >> 2];
              c[n2 + 4 >> 2] = c[o2 + 4 >> 2];
              c[n2 + 8 >> 2] = c[o2 + 8 >> 2];
              c[n2 + 12 >> 2] = c[o2 + 12 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (k2 | 0));
          }
          c[d2 + 128 >> 2] = k2;
          if ((k2 | 0) > 0) {
            h2 = c[d2 + 136 >> 2] | 0;
            f2 = 0;
            g2 = c[e2 + 68 >> 2] | 0;
            while (1) {
              c[h2 + (f2 << 4) + 12 >> 2] = c[g2 + 12 >> 2];
              b[h2 + (f2 << 4) + 6 >> 1] = b[g2 + 6 >> 1] | 0;
              b[h2 + (f2 << 4) + 8 >> 1] = b[g2 + 8 >> 1] | 0;
              b[h2 + (f2 << 4) + 10 >> 1] = b[g2 + 10 >> 1] | 0;
              b[h2 + (f2 << 4) >> 1] = b[g2 >> 1] | 0;
              b[h2 + (f2 << 4) + 2 >> 1] = b[g2 + 2 >> 1] | 0;
              b[h2 + (f2 << 4) + 4 >> 1] = b[g2 + 4 >> 1] | 0;
              f2 = f2 + 1 | 0;
              if ((f2 | 0) == (k2 | 0))
                break;
              else
                g2 = g2 + 16 | 0;
            }
          }
          c[d2 + 144 >> 2] = c[e2 + 76 >> 2];
          k2 = c[e2 + 80 >> 2] | 0;
          j2 = c[d2 + 152 >> 2] | 0;
          if ((j2 | 0) < (k2 | 0)) {
            if ((c[d2 + 156 >> 2] | 0) < (k2 | 0)) {
              if (!k2) {
                f2 = 0;
                h2 = j2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic(k2 << 5 | 19) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                h2 = c[d2 + 152 >> 2] | 0;
              }
              if ((h2 | 0) > 0) {
                g2 = 0;
                do {
                  n2 = f2 + (g2 << 5) | 0;
                  m2 = (c[d2 + 160 >> 2] | 0) + (g2 << 5) | 0;
                  c[n2 >> 2] = c[m2 >> 2];
                  c[n2 + 4 >> 2] = c[m2 + 4 >> 2];
                  c[n2 + 8 >> 2] = c[m2 + 8 >> 2];
                  c[n2 + 12 >> 2] = c[m2 + 12 >> 2];
                  c[n2 + 16 >> 2] = c[m2 + 16 >> 2];
                  c[n2 + 20 >> 2] = c[m2 + 20 >> 2];
                  c[n2 + 24 >> 2] = c[m2 + 24 >> 2];
                  c[n2 + 28 >> 2] = c[m2 + 28 >> 2];
                  g2 = g2 + 1 | 0;
                } while ((g2 | 0) != (h2 | 0));
              }
              g2 = c[d2 + 160 >> 2] | 0;
              if (g2 | 0) {
                if (a[d2 + 164 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[g2 + -4 >> 2] | 0);
                }
                c[d2 + 160 >> 2] = 0;
              }
              a[d2 + 164 >> 0] = 1;
              c[d2 + 160 >> 2] = f2;
              c[d2 + 156 >> 2] = k2;
              g2 = d2 + 160 | 0;
            } else
              g2 = d2 + 160 | 0;
            f2 = j2;
            do {
              n2 = (c[g2 >> 2] | 0) + (f2 << 5) | 0;
              c[n2 >> 2] = c[o2 >> 2];
              c[n2 + 4 >> 2] = c[o2 + 4 >> 2];
              c[n2 + 8 >> 2] = c[o2 + 8 >> 2];
              c[n2 + 12 >> 2] = c[o2 + 12 >> 2];
              c[n2 + 16 >> 2] = c[o2 + 16 >> 2];
              c[n2 + 20 >> 2] = c[o2 + 20 >> 2];
              c[n2 + 24 >> 2] = c[o2 + 24 >> 2];
              c[n2 + 28 >> 2] = c[o2 + 28 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (k2 | 0));
          }
          c[d2 + 152 >> 2] = k2;
          if ((k2 | 0) <= 0) {
            i = o2;
            return;
          }
          h2 = c[d2 + 160 >> 2] | 0;
          g2 = 0;
          f2 = c[e2 + 72 >> 2] | 0;
          while (1) {
            b[h2 + (g2 << 5) + 6 >> 1] = b[f2 + 14 >> 1] | 0;
            b[h2 + (g2 << 5) + 8 >> 1] = b[f2 + 16 >> 1] | 0;
            b[h2 + (g2 << 5) + 10 >> 1] = b[f2 + 18 >> 1] | 0;
            b[h2 + (g2 << 5) >> 1] = b[f2 + 8 >> 1] | 0;
            b[h2 + (g2 << 5) + 2 >> 1] = b[f2 + 10 >> 1] | 0;
            b[h2 + (g2 << 5) + 4 >> 1] = b[f2 + 12 >> 1] | 0;
            c[h2 + (g2 << 5) + 12 >> 2] = c[f2 >> 2];
            c[h2 + (g2 << 5) + 16 >> 2] = c[f2 + 4 >> 2];
            g2 = g2 + 1 | 0;
            if ((g2 | 0) == (k2 | 0))
              break;
            else
              f2 = f2 + 20 | 0;
          }
          i = o2;
          return;
        }
        function nd(b2, d2, e2, f2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          o2 = o2 | 0;
          p2 = p2 | 0;
          var q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
          A2 = S(c[l2 + 24 >> 2] | 0, m2) | 0;
          m2 = a[d2 + 44 >> 0] | 0;
          z2 = c[d2 + 56 >> 2] | 0;
          if (!(m2 << 24 >> 24 != 0 | (z2 | 0) != 0)) {
            A2 = 0;
            return A2 | 0;
          }
          C2 = c[(o2 | 0 ? l2 + 12 | 0 : l2 + 8 | 0) >> 2] | 0;
          B2 = c[(o2 | 0 ? l2 + 20 | 0 : l2 + 16 | 0) >> 2] | 0;
          c[C2 + (A2 << 2) >> 2] = c[n2 >> 2];
          c[C2 + (A2 + 1 << 2) >> 2] = c[n2 + 4 >> 2];
          c[C2 + (A2 + 2 << 2) >> 2] = c[n2 + 8 >> 2];
          g[B2 + (A2 << 2) >> 2] = -+g[n2 >> 2];
          g[B2 + (A2 + 1 << 2) >> 2] = -+g[n2 + 4 >> 2];
          g[B2 + (A2 + 2 << 2) >> 2] = -+g[n2 + 8 >> 2];
          do
            if (!o2) {
              q2 = +g[b2 + 1176 >> 2];
              if (!(a[b2 + 1301 >> 0] | 0)) {
                t2 = q2 - +g[e2 + 48 >> 2];
                w2 = +g[b2 + 1180 >> 2] - +g[e2 + 52 >> 2];
                x2 = +g[b2 + 1184 >> 2] - +g[e2 + 56 >> 2];
                v2 = +g[n2 + 8 >> 2];
                s2 = +g[n2 + 4 >> 2];
                u2 = +g[n2 >> 2];
                C2 = c[l2 + 12 >> 2] | 0;
                g[C2 + (A2 << 2) >> 2] = w2 * v2 - x2 * s2;
                g[C2 + (A2 + 1 << 2) >> 2] = x2 * u2 - t2 * v2;
                g[C2 + (A2 + 2 << 2) >> 2] = t2 * s2 - w2 * u2;
                u2 = +g[b2 + 1176 >> 2] - +g[f2 + 48 >> 2];
                w2 = +g[b2 + 1180 >> 2] - +g[f2 + 52 >> 2];
                s2 = +g[b2 + 1184 >> 2] - +g[f2 + 56 >> 2];
                t2 = +g[n2 + 8 >> 2];
                v2 = +g[n2 + 4 >> 2];
                x2 = +g[n2 >> 2];
                C2 = c[l2 + 20 >> 2] | 0;
                g[C2 + (A2 << 2) >> 2] = -(w2 * t2 - s2 * v2);
                g[C2 + (A2 + 1 << 2) >> 2] = -(s2 * x2 - u2 * t2);
                g[C2 + (A2 + 2 << 2) >> 2] = -(u2 * v2 - w2 * x2);
                break;
              }
              I2 = q2 - +g[f2 + 48 >> 2];
              H2 = +g[b2 + 1180 >> 2] - +g[f2 + 52 >> 2];
              F2 = +g[b2 + 1184 >> 2] - +g[f2 + 56 >> 2];
              q2 = +g[n2 >> 2];
              G2 = +g[n2 + 4 >> 2];
              E2 = +g[n2 + 8 >> 2];
              K2 = +g[b2 + 1112 >> 2] - +g[e2 + 48 >> 2];
              s2 = +g[b2 + 1116 >> 2] - +g[e2 + 52 >> 2];
              t2 = +g[b2 + 1120 >> 2] - +g[e2 + 56 >> 2];
              r2 = +g[d2 + 52 >> 2] - +g[d2 + 48 >> 2];
              J2 = q2 * (q2 * K2 + G2 * s2 + E2 * t2) + q2 * r2 - q2 * (I2 * q2 + H2 * G2 + F2 * E2);
              D2 = G2 * (q2 * K2 + G2 * s2 + E2 * t2) + G2 * r2 - G2 * (I2 * q2 + H2 * G2 + F2 * E2);
              r2 = E2 * (q2 * K2 + G2 * s2 + E2 * t2) + E2 * r2 - E2 * (I2 * q2 + H2 * G2 + F2 * E2);
              w2 = +g[b2 + 1272 >> 2];
              x2 = +g[b2 + 1276 >> 2];
              u2 = E2 * (s2 - G2 * (q2 * K2 + G2 * s2 + E2 * t2) + w2 * D2) - G2 * (t2 - E2 * (q2 * K2 + G2 * s2 + E2 * t2) + w2 * r2);
              v2 = q2 * (t2 - E2 * (q2 * K2 + G2 * s2 + E2 * t2) + w2 * r2) - E2 * (K2 - q2 * (q2 * K2 + G2 * s2 + E2 * t2) + w2 * J2);
              t2 = G2 * (K2 - q2 * (q2 * K2 + G2 * s2 + E2 * t2) + w2 * J2) - q2 * (s2 - G2 * (q2 * K2 + G2 * s2 + E2 * t2) + w2 * D2);
              s2 = (H2 - G2 * (I2 * q2 + H2 * G2 + F2 * E2) - x2 * D2) * E2 - (F2 - E2 * (I2 * q2 + H2 * G2 + F2 * E2) - x2 * r2) * G2;
              r2 = (F2 - E2 * (I2 * q2 + H2 * G2 + F2 * E2) - x2 * r2) * q2 - (I2 - q2 * (I2 * q2 + H2 * G2 + F2 * E2) - x2 * J2) * E2;
              q2 = (I2 - q2 * (I2 * q2 + H2 * G2 + F2 * E2) - x2 * J2) * G2 - (H2 - G2 * (I2 * q2 + H2 * G2 + F2 * E2) - x2 * D2) * q2;
              if (!((p2 | 0) != 0 | (a[b2 + 1280 >> 0] | 0) == 0)) {
                u2 = w2 * u2;
                v2 = w2 * v2;
                t2 = w2 * t2;
                s2 = x2 * s2;
                r2 = x2 * r2;
                q2 = x2 * q2;
              }
              C2 = (c[l2 + 12 >> 2] | 0) + (A2 << 2) | 0;
              g[C2 >> 2] = u2;
              g[C2 + 4 >> 2] = v2;
              g[C2 + 8 >> 2] = t2;
              C2 = c[l2 + 20 >> 2] | 0;
              g[C2 + (A2 << 2) >> 2] = -s2;
              g[C2 + (A2 + 1 << 2) >> 2] = -r2;
              g[C2 + (A2 + 2 << 2) >> 2] = -q2;
            }
          while (0);
          if (z2 | 0 ? +g[d2 >> 2] == +g[d2 + 4 >> 2] : 0) {
            m2 = c[l2 + 28 >> 2] | 0;
            g[m2 + (A2 << 2) >> 2] = 0;
            q2 = 0;
            e2 = l2 + 28 | 0;
          } else
            y2 = 11;
          do
            if ((y2 | 0) == 11) {
              e2 = c[l2 + 28 >> 2] | 0;
              g[e2 + (A2 << 2) >> 2] = 0;
              if (!(m2 << 24 >> 24)) {
                if (z2 | 0) {
                  m2 = e2;
                  q2 = 0;
                  e2 = l2 + 28 | 0;
                  break;
                } else
                  m2 = 1;
                return m2 | 0;
              }
              c[(c[l2 + 32 >> 2] | 0) + (A2 << 2) >> 2] = c[d2 + 28 >> 2];
              if (z2 | 0) {
                m2 = e2;
                q2 = +g[e2 + (A2 << 2) >> 2];
                e2 = l2 + 28 | 0;
                break;
              }
              v2 = +g[d2 + 8 >> 2];
              q2 = o2 | 0 ? v2 : -v2;
              r2 = +g[d2 + 52 >> 2];
              s2 = +g[d2 >> 2];
              t2 = +g[d2 + 4 >> 2];
              u2 = +g[l2 >> 2] * +g[d2 + 32 >> 2];
              do
                if (!(s2 > t2))
                  if (!(s2 == t2)) {
                    if (q2 / u2 < 0)
                      if (r2 >= s2 ? s2 - q2 / u2 > r2 : 0) {
                        q2 = (s2 - r2) / (q2 / u2);
                        break;
                      } else {
                        q2 = r2 < s2 ? 0 : 1;
                        break;
                      }
                    if (q2 / u2 > 0)
                      if (r2 <= t2 ? t2 - q2 / u2 < r2 : 0) {
                        q2 = (t2 - r2) / (q2 / u2);
                        break;
                      } else {
                        q2 = r2 > t2 ? 0 : 1;
                        break;
                      }
                    else
                      q2 = 0;
                  } else
                    q2 = 0;
                else
                  q2 = 1;
              while (0);
              g[e2 + (A2 << 2) >> 2] = q2 * v2 + +g[e2 + (A2 << 2) >> 2];
              g[(c[l2 + 36 >> 2] | 0) + (A2 << 2) >> 2] = -+g[d2 + 12 >> 2];
              c[(c[l2 + 40 >> 2] | 0) + (A2 << 2) >> 2] = c[d2 + 12 >> 2];
              C2 = 1;
              return C2 | 0;
            }
          while (0);
          K2 = +g[l2 >> 2] * +g[d2 + 32 >> 2] * +g[d2 + 48 >> 2];
          g[m2 + (A2 << 2) >> 2] = q2 + (o2 | 0 ? -K2 : K2);
          c[(c[l2 + 32 >> 2] | 0) + (A2 << 2) >> 2] = c[d2 + 36 >> 2];
          if (+g[d2 >> 2] == +g[d2 + 4 >> 2]) {
            g[(c[l2 + 36 >> 2] | 0) + (A2 << 2) >> 2] = -34028234663852886e22;
            g[(c[l2 + 40 >> 2] | 0) + (A2 << 2) >> 2] = 34028234663852886e22;
            C2 = 1;
            return C2 | 0;
          }
          C2 = c[l2 + 40 >> 2] | 0;
          g[(c[l2 + 36 >> 2] | 0) + (A2 << 2) >> 2] = (z2 | 0) == 1 ? 0 : -34028234663852886e22;
          g[C2 + (A2 << 2) >> 2] = (z2 | 0) == 1 ? 34028234663852886e22 : 0;
          r2 = +g[d2 + 40 >> 2];
          if (!(r2 > 0)) {
            C2 = 1;
            return C2 | 0;
          }
          if (o2 | 0) {
            J2 = +g[n2 >> 2];
            K2 = +g[n2 + 4 >> 2];
            q2 = +g[n2 + 8 >> 2];
            q2 = +g[j2 >> 2] * J2 + +g[j2 + 4 >> 2] * K2 + +g[j2 + 8 >> 2] * q2 - (J2 * +g[k2 >> 2] + K2 * +g[k2 + 4 >> 2] + q2 * +g[k2 + 8 >> 2]);
          } else {
            J2 = +g[n2 >> 2];
            K2 = +g[n2 + 4 >> 2];
            q2 = +g[n2 + 8 >> 2];
            q2 = +g[h2 >> 2] * J2 + +g[h2 + 4 >> 2] * K2 + +g[h2 + 8 >> 2] * q2 - (J2 * +g[i2 >> 2] + K2 * +g[i2 + 4 >> 2] + q2 * +g[i2 + 8 >> 2]);
          }
          if ((z2 | 0) == 1) {
            if (!(q2 < 0)) {
              C2 = 1;
              return C2 | 0;
            }
            q2 = -(q2 * r2);
            m2 = (c[e2 >> 2] | 0) + (A2 << 2) | 0;
            if (!(+g[m2 >> 2] < q2)) {
              C2 = 1;
              return C2 | 0;
            }
            g[m2 >> 2] = q2;
            C2 = 1;
            return C2 | 0;
          } else {
            if (!(q2 > 0)) {
              C2 = 1;
              return C2 | 0;
            }
            q2 = -(q2 * r2);
            m2 = (c[e2 >> 2] | 0) + (A2 << 2) | 0;
            if (!(+g[m2 >> 2] > q2)) {
              C2 = 1;
              return C2 | 0;
            }
            g[m2 >> 2] = q2;
            C2 = 1;
            return C2 | 0;
          }
          return 0;
        }
        function od(a2, d2, f2, h2, j2, k2, l2, m2, n2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = l2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0;
          v2 = i;
          i = i + 16 | 0;
          lj(a2, v2 + 6 | 0, +g[d2 >> 2], +g[d2 + 4 >> 2], +g[d2 + 8 >> 2], 0);
          lj(a2, v2, +g[f2 >> 2], +g[f2 + 4 >> 2], +g[f2 + 8 >> 2], 1);
          u2 = b[a2 + 64 >> 1] | 0;
          t2 = c[a2 + 60 >> 2] | 0;
          b[a2 + 64 >> 1] = b[t2 + ((u2 & 65535) << 6) + 48 >> 1] | 0;
          o2 = (b[a2 + 56 >> 1] | 0) + 1 << 16 >> 16;
          b[a2 + 56 >> 1] = o2;
          c[t2 + ((u2 & 65535) << 6) + 12 >> 2] = u2 & 65535;
          c[t2 + ((u2 & 65535) << 6) >> 2] = j2;
          b[t2 + ((u2 & 65535) << 6) + 4 >> 1] = k2;
          b[t2 + ((u2 & 65535) << 6) + 6 >> 1] = l2;
          c[t2 + ((u2 & 65535) << 6) + 8 >> 2] = n2;
          p2 = (o2 & 65535) << 1 & 65534;
          b[t2 + 54 >> 1] = (e[t2 + 54 >> 1] | 0) + 2;
          q2 = c[a2 + 68 >> 2] | 0;
          r2 = e[q2 + (p2 + -1 << 2) >> 1] | e[q2 + (p2 + -1 << 2) + 2 >> 1] << 16;
          b[q2 + ((p2 | 1) << 2) >> 1] = r2;
          b[q2 + ((p2 | 1) << 2) + 2 >> 1] = r2 >>> 16;
          q2 = c[a2 + 68 >> 2] | 0;
          b[q2 + (p2 + -1 << 2) >> 1] = b[v2 + 6 >> 1] | 0;
          b[q2 + (p2 + -1 << 2) + 2 >> 1] = u2;
          b[q2 + (p2 << 2) >> 1] = b[v2 >> 1] | 0;
          b[q2 + (p2 << 2) + 2 >> 1] = u2;
          b[t2 + ((u2 & 65535) << 6) + 48 >> 1] = p2 + -1;
          b[t2 + ((u2 & 65535) << 6) + 54 >> 1] = (o2 & 65535) << 1;
          q2 = (c[a2 + 60 >> 2] | 0) + 56 | 0;
          b[q2 >> 1] = (e[q2 >> 1] | 0) + 2;
          q2 = c[a2 + 72 >> 2] | 0;
          r2 = e[q2 + (p2 + -1 << 2) >> 1] | e[q2 + (p2 + -1 << 2) + 2 >> 1] << 16;
          b[q2 + ((p2 | 1) << 2) >> 1] = r2;
          b[q2 + ((p2 | 1) << 2) + 2 >> 1] = r2 >>> 16;
          q2 = c[a2 + 72 >> 2] | 0;
          b[q2 + (p2 + -1 << 2) >> 1] = b[v2 + 6 + 2 >> 1] | 0;
          b[q2 + (p2 + -1 << 2) + 2 >> 1] = u2;
          b[q2 + (p2 << 2) >> 1] = b[v2 + 2 >> 1] | 0;
          b[q2 + (p2 << 2) + 2 >> 1] = u2;
          b[t2 + ((u2 & 65535) << 6) + 50 >> 1] = p2 + -1;
          b[t2 + ((u2 & 65535) << 6) + 56 >> 1] = (o2 & 65535) << 1;
          q2 = (c[a2 + 60 >> 2] | 0) + 58 | 0;
          b[q2 >> 1] = (e[q2 >> 1] | 0) + 2;
          q2 = c[a2 + 76 >> 2] | 0;
          r2 = e[q2 + (p2 + -1 << 2) >> 1] | e[q2 + (p2 + -1 << 2) + 2 >> 1] << 16;
          b[q2 + ((p2 | 1) << 2) >> 1] = r2;
          b[q2 + ((p2 | 1) << 2) + 2 >> 1] = r2 >>> 16;
          q2 = c[a2 + 76 >> 2] | 0;
          b[q2 + (p2 + -1 << 2) >> 1] = b[v2 + 6 + 4 >> 1] | 0;
          b[q2 + (p2 + -1 << 2) + 2 >> 1] = u2;
          b[q2 + (p2 << 2) >> 1] = b[v2 + 4 >> 1] | 0;
          b[q2 + (p2 << 2) + 2 >> 1] = u2;
          b[t2 + ((u2 & 65535) << 6) + 52 >> 1] = p2 + -1;
          b[t2 + ((u2 & 65535) << 6) + 58 >> 1] = (o2 & 65535) << 1;
          o2 = c[a2 + 68 >> 2] | 0;
          p2 = e[t2 + ((u2 & 65535) << 6) + 48 >> 1] | 0;
          q2 = c[a2 + 60 >> 2] | 0;
          r2 = b[o2 + (p2 << 2) + -4 >> 1] | 0;
          if ((e[o2 + (p2 << 2) >> 1] | 0) < (r2 & 65535)) {
            s2 = q2 + ((e[o2 + (p2 << 2) + 2 >> 1] | 0) << 6) + 48 | 0;
            n2 = o2 + (p2 << 2) + -4 | 0;
            o2 = o2 + (p2 << 2) | 0;
            while (1) {
              p2 = e[o2 + -2 >> 1] | 0;
              if (!(r2 & 1)) {
                r2 = q2 + (p2 << 6) + 48 | 0;
                b[r2 >> 1] = (b[r2 >> 1] | 0) + 1 << 16 >> 16;
              } else {
                r2 = q2 + (p2 << 6) + 54 | 0;
                b[r2 >> 1] = (b[r2 >> 1] | 0) + 1 << 16 >> 16;
              }
              b[s2 >> 1] = (b[s2 >> 1] | 0) + -1 << 16 >> 16;
              p2 = e[o2 >> 1] | e[o2 + 2 >> 1] << 16;
              r2 = e[n2 >> 1] | e[n2 + 2 >> 1] << 16;
              b[o2 >> 1] = r2;
              b[o2 + 2 >> 1] = r2 >>> 16;
              b[n2 >> 1] = p2;
              b[n2 + 2 >> 1] = p2 >>> 16;
              o2 = o2 + -4 | 0;
              n2 = n2 + -4 | 0;
              p2 = b[n2 >> 1] | 0;
              if ((e[o2 >> 1] | 0) >= (p2 & 65535))
                break;
              r2 = p2;
              q2 = c[a2 + 60 >> 2] | 0;
            }
            o2 = c[a2 + 68 >> 2] | 0;
          }
          n2 = e[t2 + ((u2 & 65535) << 6) + 54 >> 1] | 0;
          p2 = o2 + (n2 << 2) | 0;
          q2 = b[p2 + -4 >> 1] | 0;
          a:
            do
              if ((e[p2 >> 1] | 0) < (q2 & 65535)) {
                r2 = c[a2 + 60 >> 2] | 0;
                s2 = r2 + ((e[o2 + (n2 << 2) + 2 >> 1] | 0) << 6) + 54 | 0;
                n2 = p2 + -4 | 0;
                o2 = p2;
                while (1) {
                  p2 = e[o2 + -2 >> 1] | 0;
                  if (!(q2 & 1)) {
                    r2 = r2 + (p2 << 6) + 48 | 0;
                    b[r2 >> 1] = (b[r2 >> 1] | 0) + 1 << 16 >> 16;
                  } else {
                    r2 = r2 + (p2 << 6) + 54 | 0;
                    b[r2 >> 1] = (b[r2 >> 1] | 0) + 1 << 16 >> 16;
                  }
                  b[s2 >> 1] = (b[s2 >> 1] | 0) + -1 << 16 >> 16;
                  q2 = e[o2 >> 1] | e[o2 + 2 >> 1] << 16;
                  r2 = e[n2 >> 1] | e[n2 + 2 >> 1] << 16;
                  b[o2 >> 1] = r2;
                  b[o2 + 2 >> 1] = r2 >>> 16;
                  b[n2 >> 1] = q2;
                  b[n2 + 2 >> 1] = q2 >>> 16;
                  o2 = o2 + -4 | 0;
                  n2 = n2 + -4 | 0;
                  q2 = b[n2 >> 1] | 0;
                  if ((e[o2 >> 1] | 0) >= (q2 & 65535))
                    break a;
                  r2 = c[a2 + 60 >> 2] | 0;
                }
              }
            while (0);
          o2 = c[a2 + 72 >> 2] | 0;
          p2 = e[t2 + ((u2 & 65535) << 6) + 50 >> 1] | 0;
          q2 = c[a2 + 60 >> 2] | 0;
          r2 = b[o2 + (p2 << 2) + -4 >> 1] | 0;
          if ((e[o2 + (p2 << 2) >> 1] | 0) < (r2 & 65535)) {
            s2 = q2 + ((e[o2 + (p2 << 2) + 2 >> 1] | 0) << 6) + 50 | 0;
            n2 = o2 + (p2 << 2) + -4 | 0;
            o2 = o2 + (p2 << 2) | 0;
            while (1) {
              p2 = e[o2 + -2 >> 1] | 0;
              if (!(r2 & 1)) {
                r2 = q2 + (p2 << 6) + 50 | 0;
                b[r2 >> 1] = (b[r2 >> 1] | 0) + 1 << 16 >> 16;
              } else {
                r2 = q2 + (p2 << 6) + 56 | 0;
                b[r2 >> 1] = (b[r2 >> 1] | 0) + 1 << 16 >> 16;
              }
              b[s2 >> 1] = (b[s2 >> 1] | 0) + -1 << 16 >> 16;
              p2 = e[o2 >> 1] | e[o2 + 2 >> 1] << 16;
              r2 = e[n2 >> 1] | e[n2 + 2 >> 1] << 16;
              b[o2 >> 1] = r2;
              b[o2 + 2 >> 1] = r2 >>> 16;
              b[n2 >> 1] = p2;
              b[n2 + 2 >> 1] = p2 >>> 16;
              o2 = o2 + -4 | 0;
              n2 = n2 + -4 | 0;
              p2 = b[n2 >> 1] | 0;
              if ((e[o2 >> 1] | 0) >= (p2 & 65535))
                break;
              r2 = p2;
              q2 = c[a2 + 60 >> 2] | 0;
            }
            o2 = c[a2 + 72 >> 2] | 0;
          }
          n2 = e[t2 + ((u2 & 65535) << 6) + 56 >> 1] | 0;
          p2 = o2 + (n2 << 2) | 0;
          q2 = b[p2 + -4 >> 1] | 0;
          b:
            do
              if ((e[p2 >> 1] | 0) < (q2 & 65535)) {
                r2 = c[a2 + 60 >> 2] | 0;
                s2 = r2 + ((e[o2 + (n2 << 2) + 2 >> 1] | 0) << 6) + 56 | 0;
                n2 = p2 + -4 | 0;
                o2 = p2;
                while (1) {
                  p2 = e[o2 + -2 >> 1] | 0;
                  if (!(q2 & 1)) {
                    r2 = r2 + (p2 << 6) + 50 | 0;
                    b[r2 >> 1] = (b[r2 >> 1] | 0) + 1 << 16 >> 16;
                  } else {
                    r2 = r2 + (p2 << 6) + 56 | 0;
                    b[r2 >> 1] = (b[r2 >> 1] | 0) + 1 << 16 >> 16;
                  }
                  b[s2 >> 1] = (b[s2 >> 1] | 0) + -1 << 16 >> 16;
                  q2 = e[o2 >> 1] | e[o2 + 2 >> 1] << 16;
                  r2 = e[n2 >> 1] | e[n2 + 2 >> 1] << 16;
                  b[o2 >> 1] = r2;
                  b[o2 + 2 >> 1] = r2 >>> 16;
                  b[n2 >> 1] = q2;
                  b[n2 + 2 >> 1] = q2 >>> 16;
                  o2 = o2 + -4 | 0;
                  n2 = n2 + -4 | 0;
                  q2 = b[n2 >> 1] | 0;
                  if ((e[o2 >> 1] | 0) >= (q2 & 65535))
                    break b;
                  r2 = c[a2 + 60 >> 2] | 0;
                }
              }
            while (0);
          ph(a2, 2, b[t2 + ((u2 & 65535) << 6) + 52 >> 1] | 0);
          ih(a2, 2, b[t2 + ((u2 & 65535) << 6) + 58 >> 1] | 0, m2);
          o2 = c[a2 + 60 >> 2] | 0;
          n2 = c[a2 + 108 >> 2] | 0;
          if (!n2) {
            m2 = o2 + ((u2 & 65535) << 6) | 0;
            i = v2;
            return m2 | 0;
          }
          c[o2 + ((u2 & 65535) << 6) + 60 >> 2] = Sb[c[(c[n2 >> 2] | 0) + 8 >> 2] & 3](n2, d2, f2, h2, j2, k2, l2, m2, 0) | 0;
          m2 = o2 + ((u2 & 65535) << 6) | 0;
          i = v2;
          return m2 | 0;
        }
        function pd(b2, d2, e2, f2, h2, j2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          var k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0;
          u2 = i;
          i = i + 288 | 0;
          q2 = c[b2 + 4 >> 2] | 0;
          a[q2 + 312 >> 0] = 0;
          c[q2 >> 2] = 0;
          a[q2 + 356 >> 0] = 1;
          c[q2 + 292 >> 2] = 1566444395;
          c[q2 + 296 >> 2] = 1566444395;
          c[q2 + 300 >> 2] = 1566444395;
          g[q2 + 304 >> 2] = 0;
          c[q2 + 336 >> 2] = 0;
          c[q2 + 336 + 4 >> 2] = 0;
          c[q2 + 336 + 8 >> 2] = 0;
          c[q2 + 336 + 12 >> 2] = 0;
          a[q2 + 336 + 16 >> 0] = 0;
          a[q2 + 332 >> 0] = a[q2 + 332 >> 0] & -16;
          r2 = +g[e2 + 48 >> 2] - +g[d2 + 48 >> 2] - (+g[h2 + 48 >> 2] - +g[f2 + 48 >> 2]);
          s2 = +g[e2 + 52 >> 2] - +g[d2 + 52 >> 2] - (+g[h2 + 52 >> 2] - +g[f2 + 52 >> 2]);
          t2 = +g[e2 + 56 >> 2] - +g[d2 + 56 >> 2] - (+g[h2 + 56 >> 2] - +g[f2 + 56 >> 2]);
          c[u2 + 216 >> 2] = 8756;
          g[u2 + 216 + 36 >> 2] = 999999984306749400;
          a[u2 + 216 + 40 >> 0] = 0;
          q2 = c[b2 + 8 >> 2] | 0;
          p2 = c[b2 + 12 >> 2] | 0;
          o2 = c[b2 + 4 >> 2] | 0;
          c[u2 + 136 >> 2] = 8848;
          c[u2 + 136 + 4 >> 2] = 0;
          c[u2 + 136 + 8 >> 2] = 1065353216;
          c[u2 + 136 + 12 >> 2] = 0;
          g[u2 + 136 + 16 >> 2] = 0;
          c[u2 + 136 + 20 >> 2] = 0;
          c[u2 + 136 + 24 >> 2] = o2;
          c[u2 + 136 + 28 >> 2] = q2;
          c[u2 + 136 + 32 >> 2] = p2;
          c[u2 + 136 + 36 >> 2] = c[q2 + 4 >> 2];
          c[u2 + 136 + 40 >> 2] = c[p2 + 4 >> 2];
          g[u2 + 136 + 44 >> 2] = +Cb[c[(c[q2 >> 2] | 0) + 48 >> 2] & 15](q2);
          g[u2 + 136 + 48 >> 2] = +Cb[c[(c[p2 >> 2] | 0) + 48 >> 2] & 15](p2);
          a[u2 + 136 + 52 >> 0] = 0;
          c[u2 + 136 + 60 >> 2] = -1;
          c[u2 + 136 + 72 >> 2] = 1;
          c[u2 + 136 + 76 >> 2] = 1;
          g[u2 + 128 >> 2] = 999999984306749400;
          c[u2 >> 2] = c[d2 >> 2];
          c[u2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[u2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[u2 + 12 >> 2] = c[d2 + 12 >> 2];
          c[u2 + 16 >> 2] = c[d2 + 16 >> 2];
          c[u2 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[u2 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[u2 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[u2 + 32 >> 2] = c[d2 + 32 >> 2];
          c[u2 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[u2 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[u2 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          c[u2 + 48 >> 2] = c[d2 + 48 >> 2];
          c[u2 + 48 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[u2 + 48 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[u2 + 48 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          c[u2 + 64 >> 2] = c[f2 >> 2];
          c[u2 + 64 + 4 >> 2] = c[f2 + 4 >> 2];
          c[u2 + 64 + 8 >> 2] = c[f2 + 8 >> 2];
          c[u2 + 64 + 12 >> 2] = c[f2 + 12 >> 2];
          c[u2 + 80 >> 2] = c[f2 + 16 >> 2];
          c[u2 + 80 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
          c[u2 + 80 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
          c[u2 + 80 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
          c[u2 + 96 >> 2] = c[f2 + 32 >> 2];
          c[u2 + 96 + 4 >> 2] = c[f2 + 32 + 4 >> 2];
          c[u2 + 96 + 8 >> 2] = c[f2 + 32 + 8 >> 2];
          c[u2 + 96 + 12 >> 2] = c[f2 + 32 + 12 >> 2];
          c[u2 + 112 >> 2] = c[f2 + 48 >> 2];
          c[u2 + 112 + 4 >> 2] = c[f2 + 48 + 4 >> 2];
          c[u2 + 112 + 8 >> 2] = c[f2 + 48 + 8 >> 2];
          c[u2 + 112 + 12 >> 2] = c[f2 + 48 + 12 >> 2];
          uc(u2 + 136 | 0, u2, u2 + 216 | 0, 0, 0);
          p2 = (a[u2 + 216 + 40 >> 0] | 0) == 0;
          q2 = u2 + 216 + 20 | 0;
          c[u2 + 264 >> 2] = c[q2 >> 2];
          c[u2 + 264 + 4 >> 2] = c[q2 + 4 >> 2];
          c[u2 + 264 + 8 >> 2] = c[q2 + 8 >> 2];
          c[u2 + 264 + 12 >> 2] = c[q2 + 12 >> 2];
          if (p2) {
            j2 = 0;
            i = u2;
            return j2 | 0;
          }
          n2 = +g[u2 + 216 + 36 >> 2];
          k2 = +g[u2 + 216 + 16 >> 2];
          b2 = c[u2 + 216 + 12 >> 2] | 0;
          m2 = c[u2 + 216 + 8 >> 2] | 0;
          o2 = c[u2 + 216 + 4 >> 2] | 0;
          do
            if (n2 > 0.0010000000474974513) {
              p2 = 0;
              k2 = 0;
              while (1) {
                if ((p2 | 0) > 31) {
                  b2 = 0;
                  p2 = 13;
                  break;
                }
                w2 = r2 * (c[l >> 2] = o2, +g[l >> 2]);
                w2 = s2 * (c[l >> 2] = m2, +g[l >> 2]) + w2;
                v2 = k2;
                k2 = k2 - n2 / (t2 * (c[l >> 2] = b2, +g[l >> 2]) + w2);
                if (!(!(k2 <= v2) & (!(k2 < 0) & !(k2 > 1)))) {
                  b2 = 0;
                  p2 = 13;
                  break;
                }
                jb[c[c[j2 >> 2] >> 2] & 31](j2, k2);
                w2 = 1 - k2;
                g[u2 + 48 >> 2] = w2 * +g[d2 + 48 >> 2] + k2 * +g[e2 + 48 >> 2];
                g[u2 + 52 >> 2] = w2 * +g[d2 + 52 >> 2] + k2 * +g[e2 + 52 >> 2];
                g[u2 + 56 >> 2] = w2 * +g[d2 + 56 >> 2] + k2 * +g[e2 + 56 >> 2];
                g[u2 + 112 >> 2] = w2 * +g[f2 + 48 >> 2] + k2 * +g[h2 + 48 >> 2];
                g[u2 + 116 >> 2] = w2 * +g[f2 + 52 >> 2] + k2 * +g[h2 + 52 >> 2];
                g[u2 + 120 >> 2] = w2 * +g[f2 + 56 >> 2] + k2 * +g[h2 + 56 >> 2];
                uc(u2 + 136 | 0, u2, u2 + 216 | 0, 0, 0);
                if (!(a[u2 + 216 + 40 >> 0] | 0)) {
                  b2 = 0;
                  p2 = 13;
                  break;
                }
                n2 = +g[u2 + 216 + 36 >> 2];
                if (n2 < 0) {
                  p2 = 8;
                  break;
                }
                c[u2 + 264 >> 2] = c[q2 >> 2];
                c[u2 + 264 + 4 >> 2] = c[q2 + 4 >> 2];
                c[u2 + 264 + 8 >> 2] = c[q2 + 8 >> 2];
                c[u2 + 264 + 12 >> 2] = c[q2 + 12 >> 2];
                b2 = c[u2 + 216 + 12 >> 2] | 0;
                m2 = c[u2 + 216 + 8 >> 2] | 0;
                o2 = c[u2 + 216 + 4 >> 2] | 0;
                if (!(n2 > 0.0010000000474974513)) {
                  p2 = 10;
                  break;
                } else
                  p2 = p2 + 1 | 0;
              }
              if ((p2 | 0) == 8) {
                g[j2 + 164 >> 2] = k2;
                e2 = c[u2 + 216 + 8 >> 2] | 0;
                f2 = c[u2 + 216 + 12 >> 2] | 0;
                h2 = c[u2 + 216 + 16 >> 2] | 0;
                c[j2 + 132 >> 2] = c[u2 + 216 + 4 >> 2];
                c[j2 + 136 >> 2] = e2;
                c[j2 + 140 >> 2] = f2;
                c[j2 + 144 >> 2] = h2;
                c[j2 + 148 >> 2] = c[q2 >> 2];
                c[j2 + 148 + 4 >> 2] = c[q2 + 4 >> 2];
                c[j2 + 148 + 8 >> 2] = c[q2 + 8 >> 2];
                c[j2 + 148 + 12 >> 2] = c[q2 + 12 >> 2];
                j2 = 1;
                i = u2;
                return j2 | 0;
              } else if ((p2 | 0) == 10) {
                n2 = k2;
                k2 = +g[u2 + 216 + 16 >> 2];
                break;
              } else if ((p2 | 0) == 13) {
                i = u2;
                return b2 | 0;
              }
            } else
              n2 = 0;
          while (0);
          w2 = r2 * (c[l >> 2] = o2, +g[l >> 2]);
          w2 = s2 * (c[l >> 2] = m2, +g[l >> 2]) + w2;
          if (t2 * (c[l >> 2] = b2, +g[l >> 2]) + w2 >= -+g[j2 + 172 >> 2]) {
            j2 = 0;
            i = u2;
            return j2 | 0;
          }
          g[j2 + 164 >> 2] = n2;
          c[j2 + 132 >> 2] = o2;
          c[j2 + 136 >> 2] = m2;
          c[j2 + 140 >> 2] = b2;
          g[j2 + 144 >> 2] = k2;
          c[j2 + 148 >> 2] = c[u2 + 264 >> 2];
          c[j2 + 148 + 4 >> 2] = c[u2 + 264 + 4 >> 2];
          c[j2 + 148 + 8 >> 2] = c[u2 + 264 + 8 >> 2];
          c[j2 + 148 + 12 >> 2] = c[u2 + 264 + 12 >> 2];
          j2 = 1;
          i = u2;
          return j2 | 0;
        }
        function qd(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
          m2 = i;
          i = i + 240 | 0;
          c[a2 + 4 >> 2] = (c[a2 + 4 >> 2] | 0) + 1;
          k2 = c[b2 + 36 >> 2] | 0;
          j2 = c[d2 + 36 >> 2] | 0;
          f2 = c[a2 + 8 >> 2] | 0;
          K2 = c[(c[f2 + 4 >> 2] | 0) + 28 >> 2] | 0;
          d2 = c[K2 + (k2 * 80 | 0) + 64 >> 2] | 0;
          b2 = (c[(c[a2 + 12 >> 2] | 0) + 4 >> 2] | 0) + 28 | 0;
          e2 = c[(c[b2 >> 2] | 0) + (j2 * 80 | 0) + 64 >> 2] | 0;
          f2 = c[f2 + 12 >> 2] | 0;
          n2 = +g[f2 >> 2];
          I2 = +g[f2 + 4 >> 2];
          J2 = +g[f2 + 8 >> 2];
          q2 = +g[f2 + 16 >> 2];
          s2 = +g[f2 + 20 >> 2];
          u2 = +g[f2 + 24 >> 2];
          r2 = +g[f2 + 32 >> 2];
          v2 = +g[f2 + 36 >> 2];
          D2 = +g[f2 + 40 >> 2];
          w2 = +g[K2 + (k2 * 80 | 0) >> 2];
          x2 = +g[K2 + (k2 * 80 | 0) + 16 >> 2];
          y2 = +g[K2 + (k2 * 80 | 0) + 32 >> 2];
          z2 = +g[K2 + (k2 * 80 | 0) + 4 >> 2];
          A2 = +g[K2 + (k2 * 80 | 0) + 20 >> 2];
          B2 = +g[K2 + (k2 * 80 | 0) + 36 >> 2];
          t2 = +g[K2 + (k2 * 80 | 0) + 8 >> 2];
          C2 = +g[K2 + (k2 * 80 | 0) + 24 >> 2];
          E2 = +g[K2 + (k2 * 80 | 0) + 40 >> 2];
          o2 = +g[K2 + (k2 * 80 | 0) + 48 >> 2];
          p2 = +g[K2 + (k2 * 80 | 0) + 52 >> 2];
          H2 = +g[K2 + (k2 * 80 | 0) + 56 >> 2];
          F2 = +g[f2 + 48 >> 2] + (n2 * o2 + I2 * p2 + J2 * H2);
          G2 = +g[f2 + 52 >> 2] + (q2 * o2 + s2 * p2 + u2 * H2);
          H2 = +g[f2 + 56 >> 2] + (r2 * o2 + v2 * p2 + D2 * H2);
          g[m2 + 176 >> 2] = n2 * w2 + I2 * x2 + J2 * y2;
          g[m2 + 176 + 4 >> 2] = n2 * z2 + I2 * A2 + J2 * B2;
          g[m2 + 176 + 8 >> 2] = n2 * t2 + I2 * C2 + J2 * E2;
          g[m2 + 176 + 12 >> 2] = 0;
          g[m2 + 176 + 16 >> 2] = q2 * w2 + s2 * x2 + u2 * y2;
          g[m2 + 176 + 20 >> 2] = q2 * z2 + s2 * A2 + u2 * B2;
          g[m2 + 176 + 24 >> 2] = q2 * t2 + s2 * C2 + u2 * E2;
          g[m2 + 176 + 28 >> 2] = 0;
          g[m2 + 176 + 32 >> 2] = r2 * w2 + v2 * x2 + D2 * y2;
          g[m2 + 176 + 36 >> 2] = r2 * z2 + v2 * A2 + D2 * B2;
          g[m2 + 176 + 40 >> 2] = r2 * t2 + v2 * C2 + D2 * E2;
          g[m2 + 176 + 44 >> 2] = 0;
          g[m2 + 176 + 48 >> 2] = F2;
          g[m2 + 176 + 52 >> 2] = G2;
          g[m2 + 176 + 56 >> 2] = H2;
          g[m2 + 176 + 60 >> 2] = 0;
          f2 = c[(c[a2 + 12 >> 2] | 0) + 12 >> 2] | 0;
          H2 = +g[f2 >> 2];
          G2 = +g[f2 + 4 >> 2];
          F2 = +g[f2 + 8 >> 2];
          E2 = +g[f2 + 16 >> 2];
          D2 = +g[f2 + 20 >> 2];
          C2 = +g[f2 + 24 >> 2];
          v2 = +g[f2 + 32 >> 2];
          t2 = +g[f2 + 36 >> 2];
          r2 = +g[f2 + 40 >> 2];
          b2 = c[b2 >> 2] | 0;
          B2 = +g[b2 + (j2 * 80 | 0) >> 2];
          A2 = +g[b2 + (j2 * 80 | 0) + 16 >> 2];
          z2 = +g[b2 + (j2 * 80 | 0) + 32 >> 2];
          y2 = +g[b2 + (j2 * 80 | 0) + 4 >> 2];
          x2 = +g[b2 + (j2 * 80 | 0) + 20 >> 2];
          w2 = +g[b2 + (j2 * 80 | 0) + 36 >> 2];
          u2 = +g[b2 + (j2 * 80 | 0) + 8 >> 2];
          s2 = +g[b2 + (j2 * 80 | 0) + 24 >> 2];
          q2 = +g[b2 + (j2 * 80 | 0) + 40 >> 2];
          J2 = +g[b2 + (j2 * 80 | 0) + 48 >> 2];
          I2 = +g[b2 + (j2 * 80 | 0) + 52 >> 2];
          n2 = +g[b2 + (j2 * 80 | 0) + 56 >> 2];
          p2 = +g[f2 + 48 >> 2] + (H2 * J2 + G2 * I2 + F2 * n2);
          o2 = +g[f2 + 52 >> 2] + (E2 * J2 + D2 * I2 + C2 * n2);
          n2 = +g[f2 + 56 >> 2] + (v2 * J2 + t2 * I2 + r2 * n2);
          g[m2 + 112 >> 2] = H2 * B2 + G2 * A2 + F2 * z2;
          g[m2 + 112 + 4 >> 2] = H2 * y2 + G2 * x2 + F2 * w2;
          g[m2 + 112 + 8 >> 2] = H2 * u2 + G2 * s2 + F2 * q2;
          g[m2 + 112 + 12 >> 2] = 0;
          g[m2 + 112 + 16 >> 2] = E2 * B2 + D2 * A2 + C2 * z2;
          g[m2 + 112 + 20 >> 2] = E2 * y2 + D2 * x2 + C2 * w2;
          g[m2 + 112 + 24 >> 2] = E2 * u2 + D2 * s2 + C2 * q2;
          g[m2 + 112 + 28 >> 2] = 0;
          g[m2 + 112 + 32 >> 2] = v2 * B2 + t2 * A2 + r2 * z2;
          g[m2 + 112 + 36 >> 2] = v2 * y2 + t2 * x2 + r2 * w2;
          g[m2 + 112 + 40 >> 2] = v2 * u2 + t2 * s2 + r2 * q2;
          g[m2 + 112 + 44 >> 2] = 0;
          g[m2 + 112 + 48 >> 2] = p2;
          g[m2 + 112 + 52 >> 2] = o2;
          g[m2 + 112 + 56 >> 2] = n2;
          g[m2 + 112 + 60 >> 2] = 0;
          Yb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2, m2 + 176 | 0, m2 + 96 | 0, m2 + 80 | 0);
          Yb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 127](e2, m2 + 112 | 0, m2 + 64 | 0, m2 + 48 | 0);
          if (!(+g[m2 + 96 >> 2] > +g[m2 + 48 >> 2]) ? !(+g[m2 + 80 >> 2] < +g[m2 + 64 >> 2]) : 0)
            b2 = 1;
          else
            b2 = 0;
          if (!(!(+g[m2 + 96 + 8 >> 2] > +g[m2 + 48 + 8 >> 2]) ? !(+g[m2 + 80 + 8 >> 2] < +g[m2 + 64 + 8 >> 2]) : 0))
            b2 = 0;
          if (+g[m2 + 96 + 4 >> 2] > +g[m2 + 48 + 4 >> 2]) {
            i = m2;
            return;
          }
          if (+g[m2 + 80 + 4 >> 2] < +g[m2 + 64 + 4 >> 2] | b2 ^ 1) {
            i = m2;
            return;
          }
          f2 = c[a2 + 8 >> 2] | 0;
          b2 = c[f2 + 8 >> 2] | 0;
          c[m2 + 24 >> 2] = f2;
          c[m2 + 24 + 4 >> 2] = d2;
          c[m2 + 24 + 8 >> 2] = b2;
          c[m2 + 24 + 12 >> 2] = m2 + 176;
          c[m2 + 24 + 16 >> 2] = -1;
          c[m2 + 24 + 20 >> 2] = k2;
          b2 = c[a2 + 12 >> 2] | 0;
          f2 = c[b2 + 8 >> 2] | 0;
          c[m2 >> 2] = b2;
          c[m2 + 4 >> 2] = e2;
          c[m2 + 8 >> 2] = f2;
          c[m2 + 12 >> 2] = m2 + 112;
          c[m2 + 16 >> 2] = -1;
          c[m2 + 20 >> 2] = j2;
          f2 = c[a2 + 28 >> 2] | 0;
          c[6320] = (c[6320] | 0) + 1;
          b2 = ((j2 << 16 | k2) + ~((j2 << 16 | k2) << 15) >> 10 ^ (j2 << 16 | k2) + ~((j2 << 16 | k2) << 15)) * 9 | 0;
          b2 = (c[f2 + 12 >> 2] | 0) + -1 & ((b2 >> 6 ^ b2) + ~((b2 >> 6 ^ b2) << 11) >> 16 ^ (b2 >> 6 ^ b2) + ~((b2 >> 6 ^ b2) << 11));
          a:
            do
              if ((b2 | 0) < (c[f2 + 28 >> 2] | 0) ? (h2 = c[(c[f2 + 36 >> 2] | 0) + (b2 << 2) >> 2] | 0, (h2 | 0) != -1) : 0) {
                e2 = c[f2 + 16 >> 2] | 0;
                b2 = h2;
                while (1) {
                  d2 = e2 + (b2 * 12 | 0) | 0;
                  if ((c[d2 >> 2] | 0) == (k2 | 0) ? (c[e2 + (b2 * 12 | 0) + 4 >> 2] | 0) == (j2 | 0) : 0)
                    break;
                  b2 = c[(c[f2 + 56 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                  if ((b2 | 0) == -1) {
                    l2 = 16;
                    break a;
                  }
                }
                if (d2)
                  b2 = c[e2 + (b2 * 12 | 0) + 8 >> 2] | 0;
                else
                  l2 = 16;
              } else
                l2 = 16;
            while (0);
          if ((l2 | 0) == 16) {
            b2 = c[a2 + 16 >> 2] | 0;
            b2 = sb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, m2 + 24 | 0, m2, c[a2 + 32 >> 2] | 0) | 0;
            K2 = c[a2 + 28 >> 2] | 0;
            c[(yb[c[(c[K2 >> 2] | 0) + 12 >> 2] & 63](K2, k2, j2) | 0) + 8 >> 2] = b2;
          }
          K2 = c[a2 + 24 >> 2] | 0;
          h2 = c[K2 + 8 >> 2] | 0;
          l2 = c[K2 + 12 >> 2] | 0;
          c[K2 + 8 >> 2] = m2 + 24;
          c[K2 + 12 >> 2] = m2;
          Ub[c[(c[K2 >> 2] | 0) + 8 >> 2] & 127](K2, -1, k2);
          K2 = c[a2 + 24 >> 2] | 0;
          Ub[c[(c[K2 >> 2] | 0) + 12 >> 2] & 127](K2, -1, j2);
          ib[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, m2 + 24 | 0, m2, c[a2 + 20 >> 2] | 0, c[a2 + 24 >> 2] | 0);
          K2 = c[a2 + 24 >> 2] | 0;
          c[K2 + 8 >> 2] = h2;
          c[K2 + 12 >> 2] = l2;
          i = m2;
          return;
        }
        function rd(a2, b2, d2, e2, f2, g2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
          j2 = c[d2 + 8 >> 2] | 0;
          if (!j2) {
            h2 = 0;
            return h2 | 0;
          }
          i2 = 0;
          C2 = j2;
          do {
            if ((c[C2 + 20 >> 2] | 0) > (c[a2 + 100 >> 2] | 0)) {
              A2 = c[C2 + 12 >> 2] | 0;
              w2 = c[A2 + 88 >> 2] | 0;
              x2 = w2 - (c[d2 + 88 >> 2] | 0) | 0;
              y2 = c[A2 + 92 >> 2] | 0;
              z2 = y2 - (c[d2 + 92 >> 2] | 0) | 0;
              A2 = c[A2 + 96 >> 2] | 0;
              B2 = A2 - (c[d2 + 96 >> 2] | 0) | 0;
              k2 = rr(x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0, c[g2 >> 2] | 0, c[g2 + 4 >> 2] | 0) | 0;
              o2 = D;
              j2 = rr(z2 | 0, ((z2 | 0) < 0) << 31 >> 31 | 0, c[g2 + 8 >> 2] | 0, c[g2 + 8 + 4 >> 2] | 0) | 0;
              o2 = Ct(j2 | 0, D | 0, k2 | 0, o2 | 0) | 0;
              k2 = D;
              j2 = rr(B2 | 0, ((B2 | 0) < 0) << 31 >> 31 | 0, c[g2 + 16 >> 2] | 0, c[g2 + 16 + 4 >> 2] | 0) | 0;
              j2 = Ct(o2 | 0, k2 | 0, j2 | 0, D | 0) | 0;
              k2 = D;
              o2 = rr(c[f2 >> 2] | 0, c[f2 + 4 >> 2] | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
              v2 = D;
              n2 = rr(c[f2 + 8 >> 2] | 0, c[f2 + 8 + 4 >> 2] | 0, z2 | 0, ((z2 | 0) < 0) << 31 >> 31 | 0) | 0;
              v2 = Ct(n2 | 0, D | 0, o2 | 0, v2 | 0) | 0;
              o2 = D;
              n2 = rr(c[f2 + 16 >> 2] | 0, c[f2 + 16 + 4 >> 2] | 0, B2 | 0, ((B2 | 0) < 0) << 31 >> 31 | 0) | 0;
              n2 = Ct(v2 | 0, o2 | 0, n2 | 0, D | 0) | 0;
              o2 = D;
              if ((k2 | 0) > 0 | (k2 | 0) == 0 & j2 >>> 0 > 0) {
                l2 = 1;
                v2 = j2;
              } else {
                v2 = Ds(0, 0, j2 | 0, k2 | 0) | 0;
                l2 = ((j2 | 0) != 0 | (k2 | 0) != 0) << 31 >> 31;
                v2 = (j2 | 0) != 0 | (k2 | 0) != 0 ? v2 : 0;
                k2 = (j2 | 0) != 0 | (k2 | 0) != 0 ? D : 0;
              }
              if (!((o2 | 0) > 0 | (o2 | 0) == 0 & n2 >>> 0 > 0)) {
                m2 = Ds(0, 0, n2 | 0, o2 | 0) | 0;
                l2 = (n2 | 0) != 0 | (o2 | 0) != 0 ? 0 - l2 | 0 : l2;
                m2 = (n2 | 0) != 0 | (o2 | 0) != 0 ? m2 : 0;
                j2 = (n2 | 0) != 0 | (o2 | 0) != 0 ? D : 0;
                if (!((l2 | 0) == 0 & ((m2 | 0) == 0 & (j2 | 0) == 0))) {
                  o2 = j2;
                  p2 = 8;
                }
              } else {
                m2 = n2;
                p2 = 8;
              }
              a:
                do
                  if ((p2 | 0) == 8) {
                    p2 = 0;
                    if (!i2) {
                      c[h2 >> 2] = v2;
                      c[h2 + 4 >> 2] = k2;
                      c[h2 + 8 >> 2] = m2;
                      c[h2 + 8 + 4 >> 2] = o2;
                      c[h2 + 16 >> 2] = l2;
                      i2 = C2;
                      break;
                    }
                    j2 = c[h2 + 16 >> 2] | 0;
                    if ((l2 | 0) == (j2 | 0)) {
                      if (l2 | 0) {
                        p2 = c[h2 + 8 >> 2] | 0;
                        s2 = c[h2 + 8 + 4 >> 2] | 0;
                        n2 = rr(p2 | 0, 0, v2 | 0, 0) | 0;
                        j2 = D;
                        t2 = rr(s2 | 0, 0, v2 | 0, 0) | 0;
                        r2 = D;
                        p2 = rr(p2 | 0, 0, k2 | 0, 0) | 0;
                        q2 = D;
                        s2 = rr(s2 | 0, 0, k2 | 0, 0) | 0;
                        G2 = D;
                        p2 = Ct(t2 | 0, 0, p2 | 0, 0) | 0;
                        t2 = D;
                        G2 = Ct(r2 | 0, 0, s2 | 0, G2 | 0) | 0;
                        q2 = Ct(G2 | 0, D | 0, q2 | 0, 0) | 0;
                        t2 = Ct(q2 | 0, D | 0, t2 | 0, 0) | 0;
                        q2 = D;
                        j2 = Ct(0, p2 | 0, n2 | 0, j2 | 0) | 0;
                        n2 = D;
                        p2 = Ct(t2 | 0, q2 | 0, (n2 >>> 0 < p2 >>> 0 | (n2 | 0) == (p2 | 0) & j2 >>> 0 < 0) & 1 | 0, 0) | 0;
                        q2 = D;
                        t2 = c[h2 >> 2] | 0;
                        G2 = c[h2 + 4 >> 2] | 0;
                        s2 = rr(t2 | 0, 0, m2 | 0, 0) | 0;
                        r2 = D;
                        E2 = rr(G2 | 0, 0, m2 | 0, 0) | 0;
                        H2 = D;
                        t2 = rr(t2 | 0, 0, o2 | 0, 0) | 0;
                        u2 = D;
                        G2 = rr(G2 | 0, 0, o2 | 0, 0) | 0;
                        F2 = D;
                        t2 = Ct(E2 | 0, 0, t2 | 0, 0) | 0;
                        E2 = D;
                        F2 = Ct(H2 | 0, 0, G2 | 0, F2 | 0) | 0;
                        u2 = Ct(F2 | 0, D | 0, u2 | 0, 0) | 0;
                        E2 = Ct(u2 | 0, D | 0, E2 | 0, 0) | 0;
                        u2 = D;
                        r2 = Ct(0, t2 | 0, s2 | 0, r2 | 0) | 0;
                        s2 = D;
                        t2 = Ct(E2 | 0, u2 | 0, (s2 >>> 0 < t2 >>> 0 | (s2 | 0) == (t2 | 0) & r2 >>> 0 < 0) & 1 | 0, 0) | 0;
                        u2 = D;
                        if (!(q2 >>> 0 < u2 >>> 0 | (q2 | 0) == (u2 | 0) & p2 >>> 0 < t2 >>> 0))
                          if (!(q2 >>> 0 > u2 >>> 0 | (q2 | 0) == (u2 | 0) & p2 >>> 0 > t2 >>> 0))
                            if (n2 >>> 0 < s2 >>> 0 | (n2 | 0) == (s2 | 0) & j2 >>> 0 < r2 >>> 0)
                              j2 = -1;
                            else
                              j2 = (n2 >>> 0 > s2 >>> 0 | (n2 | 0) == (s2 | 0) & j2 >>> 0 > r2 >>> 0) & 1;
                          else
                            j2 = 1;
                        else
                          j2 = -1;
                        j2 = S(j2, l2) | 0;
                        p2 = 18;
                      }
                    } else {
                      j2 = l2 - j2 | 0;
                      p2 = 18;
                    }
                    do
                      if ((p2 | 0) == 18) {
                        p2 = 0;
                        if ((j2 | 0) >= 0)
                          if (!j2)
                            break;
                          else
                            break a;
                        else {
                          c[h2 >> 2] = v2;
                          c[h2 + 4 >> 2] = k2;
                          c[h2 + 8 >> 2] = m2;
                          c[h2 + 8 + 4 >> 2] = o2;
                          c[h2 + 16 >> 2] = l2;
                          i2 = C2;
                          break a;
                        }
                      }
                    while (0);
                    j2 = (c[i2 + 4 >> 2] | 0) == (C2 | 0);
                    if ((c[i2 >> 2] | 0) == (C2 | 0))
                      if (j2) {
                        H2 = c[e2 + 8 >> 2] | 0;
                        E2 = S(H2, z2) | 0;
                        u2 = c[e2 + 4 >> 2] | 0;
                        E2 = E2 - (S(u2, B2) | 0) | 0;
                        G2 = c[e2 >> 2] | 0;
                        H2 = (S(G2, B2) | 0) - (S(x2, H2) | 0) | 0;
                        G2 = (S(x2, u2) | 0) - (S(G2, z2) | 0) | 0;
                        u2 = c[i2 + 12 >> 2] | 0;
                        j2 = c[(c[C2 + 8 >> 2] | 0) + 12 >> 2] | 0;
                        z2 = c[j2 + 88 >> 2] | 0;
                        x2 = (c[u2 + 88 >> 2] | 0) - z2 | 0;
                        v2 = c[j2 + 92 >> 2] | 0;
                        B2 = (c[u2 + 92 >> 2] | 0) - v2 | 0;
                        j2 = c[j2 + 96 >> 2] | 0;
                        u2 = (c[u2 + 96 >> 2] | 0) - j2 | 0;
                        F2 = (S(A2 - j2 | 0, B2) | 0) - (S(y2 - v2 | 0, u2) | 0) | 0;
                        j2 = (S(w2 - z2 | 0, u2) | 0) - (S(A2 - j2 | 0, x2) | 0) | 0;
                        B2 = (S(y2 - v2 | 0, x2) | 0) - (S(w2 - z2 | 0, B2) | 0) | 0;
                        E2 = rr(F2 | 0, ((F2 | 0) < 0) << 31 >> 31 | 0, E2 | 0, ((E2 | 0) < 0) << 31 >> 31 | 0) | 0;
                        F2 = D;
                        H2 = rr(j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0, H2 | 0, ((H2 | 0) < 0) << 31 >> 31 | 0) | 0;
                        j2 = D;
                        G2 = rr(B2 | 0, ((B2 | 0) < 0) << 31 >> 31 | 0, G2 | 0, ((G2 | 0) < 0) << 31 >> 31 | 0) | 0;
                        G2 = Ct(E2 | 0, F2 | 0, G2 | 0, D | 0) | 0;
                        j2 = Ct(G2 | 0, D | 0, H2 | 0, j2 | 0) | 0;
                        H2 = D;
                        j2 = (H2 | 0) > 0 | (H2 | 0) == 0 & j2 >>> 0 > 0 ? 2 : 1;
                      } else
                        j2 = 2;
                    else
                      j2 = j2 & 1;
                    i2 = (j2 | 0) == 2 ^ b2 ? i2 : C2;
                  }
                while (0);
              j2 = c[d2 + 8 >> 2] | 0;
            }
            C2 = c[C2 >> 2] | 0;
          } while ((C2 | 0) != (j2 | 0));
          return i2 | 0;
        }
        function sd(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
          z2 = i;
          i = i + 48 | 0;
          switch (c[b2 + 4 >> 2] | 0) {
            case 8: {
              c[a2 >> 2] = 0;
              c[a2 + 4 >> 2] = 0;
              c[a2 + 8 >> 2] = 0;
              c[a2 + 12 >> 2] = 0;
              i = z2;
              return;
            }
            case 0: {
              w2 = +g[b2 + 32 >> 2];
              x2 = +g[b2 + 36 >> 2];
              x2 = +g[d2 + 4 >> 2] >= 0 ? x2 : -x2;
              y2 = +g[b2 + 40 >> 2];
              y2 = +g[d2 + 8 >> 2] >= 0 ? y2 : -y2;
              g[a2 >> 2] = +g[d2 >> 2] >= 0 ? w2 : -w2;
              g[a2 + 4 >> 2] = x2;
              g[a2 + 8 >> 2] = y2;
              g[a2 + 12 >> 2] = 0;
              i = z2;
              return;
            }
            case 1: {
              u2 = +g[d2 >> 2];
              v2 = +g[d2 + 4 >> 2];
              y2 = +g[d2 + 8 >> 2];
              x2 = u2 * +g[b2 + 60 >> 2] + v2 * +g[b2 + 60 + 4 >> 2] + y2 * +g[b2 + 60 + 8 >> 2];
              w2 = u2 * +g[b2 + 60 + 16 >> 2] + v2 * +g[b2 + 60 + 20 >> 2] + y2 * +g[b2 + 60 + 24 >> 2];
              y2 = u2 * +g[b2 + 60 + 32 >> 2] + v2 * +g[b2 + 60 + 36 >> 2] + y2 * +g[b2 + 60 + 40 >> 2];
              d2 = x2 < w2 ? w2 < y2 ? 2 : 1 : x2 < y2 ? 2 : 0;
              o2 = c[b2 + 60 + (d2 << 4) + 4 >> 2] | 0;
              p2 = c[b2 + 60 + (d2 << 4) + 8 >> 2] | 0;
              c[a2 >> 2] = c[b2 + 60 + (d2 << 4) >> 2];
              c[a2 + 4 >> 2] = o2;
              c[a2 + 8 >> 2] = p2;
              g[a2 + 12 >> 2] = 0;
              i = z2;
              return;
            }
            case 13: {
              c[z2 + 32 >> 2] = c[b2 + 32 >> 2];
              c[z2 + 32 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
              c[z2 + 32 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
              c[z2 + 32 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
              c[z2 + 16 >> 2] = c[d2 >> 2];
              e2 = c[d2 + 4 >> 2] | 0;
              c[z2 + 16 + 4 >> 2] = e2;
              p2 = c[d2 + 8 >> 2] | 0;
              c[z2 + 16 + 8 >> 2] = p2;
              g[z2 + 16 + 12 >> 2] = 0;
              d2 = c[b2 + 56 >> 2] | 0;
              f2 = (c[l >> 2] = p2, +g[l >> 2]);
              switch (d2 | 0) {
                case 2: {
                  b2 = 0;
                  o2 = 2;
                  p2 = 1;
                  f2 = (c[l >> 2] = e2, +g[l >> 2]);
                  break;
                }
                case 1: {
                  b2 = 0;
                  o2 = 1;
                  p2 = 2;
                  break;
                }
                default: {
                  b2 = 1;
                  o2 = 0;
                  p2 = 2;
                }
              }
              n2 = +g[z2 + 32 + (b2 << 2) >> 2];
              k2 = +g[z2 + 32 + (d2 << 2) >> 2];
              m2 = +g[z2 + 16 + (b2 << 2) >> 2];
              h2 = +G(+(m2 * m2 + f2 * f2));
              j2 = +g[z2 + 16 + (o2 << 2) >> 2];
              if (h2 != 0) {
                g[z2 + (b2 << 2) >> 2] = m2 * (n2 / h2);
                g[z2 + (o2 << 2) >> 2] = j2 < 0 ? -k2 : k2;
                g[z2 + (p2 << 2) >> 2] = n2 / h2 * f2;
                c[a2 >> 2] = c[z2 >> 2];
                c[a2 + 4 >> 2] = c[z2 + 4 >> 2];
                c[a2 + 8 >> 2] = c[z2 + 8 >> 2];
              } else {
                g[z2 + (b2 << 2) >> 2] = n2;
                g[z2 + (o2 << 2) >> 2] = j2 < 0 ? -k2 : k2;
                g[z2 + (p2 << 2) >> 2] = 0;
                c[a2 >> 2] = c[z2 >> 2];
                c[a2 + 4 >> 2] = c[z2 + 4 >> 2];
                c[a2 + 8 >> 2] = c[z2 + 8 >> 2];
              }
              g[a2 + 12 >> 2] = 0;
              i = z2;
              return;
            }
            case 10: {
              f2 = +g[d2 >> 2];
              h2 = +g[d2 + 4 >> 2];
              j2 = +g[d2 + 8 >> 2];
              o2 = c[b2 + 56 >> 2] | 0;
              w2 = +g[b2 + 32 + (o2 << 2) >> 2];
              k2 = +g[b2 + 32 + (((o2 + 2 | 0) % 3 | 0) << 2) >> 2];
              if (f2 * f2 + h2 * h2 + j2 * j2 < 9999999747378752e-20) {
                y2 = 1;
                x2 = 0;
                v2 = 0;
              } else {
                v2 = 1 / +G(+(f2 * f2 + h2 * h2 + j2 * j2));
                y2 = f2 * v2;
                x2 = h2 * v2;
                v2 = j2 * v2;
              }
              c[z2 + 32 >> 2] = 0;
              c[z2 + 32 + 4 >> 2] = 0;
              c[z2 + 32 + 8 >> 2] = 0;
              c[z2 + 32 + 12 >> 2] = 0;
              g[z2 + 32 + (o2 << 2) >> 2] = w2;
              r2 = k2 * y2;
              t2 = k2 * x2;
              u2 = k2 * v2;
              s2 = +g[b2 + 48 >> 2];
              n2 = y2 * s2;
              q2 = x2 * s2;
              s2 = v2 * s2;
              f2 = r2 + +g[z2 + 32 >> 2] - n2;
              h2 = t2 + +g[z2 + 32 + 4 >> 2] - q2;
              k2 = u2 + +g[z2 + 32 + 8 >> 2] - s2;
              j2 = v2 * k2 + (y2 * f2 + x2 * h2);
              if (j2 > -999999984306749400) {
                b2 = (g[l >> 2] = f2, c[l >> 2] | 0);
                e2 = (g[l >> 2] = h2, c[l >> 2] | 0);
                m2 = j2;
                d2 = (g[l >> 2] = k2, c[l >> 2] | 0);
              } else {
                m2 = -999999984306749400;
                b2 = 0;
                d2 = 0;
                e2 = 0;
              }
              c[z2 + 32 >> 2] = 0;
              c[z2 + 32 + 4 >> 2] = 0;
              c[z2 + 32 + 8 >> 2] = 0;
              c[z2 + 32 + 12 >> 2] = 0;
              g[z2 + 32 + (o2 << 2) >> 2] = -w2;
              j2 = r2 + +g[z2 + 32 >> 2] - n2;
              h2 = t2 + +g[z2 + 32 + 4 >> 2] - q2;
              f2 = u2 + +g[z2 + 32 + 8 >> 2] - s2;
              if (v2 * f2 + (y2 * j2 + x2 * h2) > m2) {
                b2 = (g[l >> 2] = j2, c[l >> 2] | 0);
                e2 = (g[l >> 2] = h2, c[l >> 2] | 0);
                d2 = (g[l >> 2] = f2, c[l >> 2] | 0);
              }
              c[a2 >> 2] = b2;
              c[a2 + 4 >> 2] = e2;
              c[a2 + 8 >> 2] = d2;
              g[a2 + 12 >> 2] = 0;
              i = z2;
              return;
            }
            case 5: {
              p2 = c[b2 + 96 >> 2] | 0;
              o2 = c[b2 + 100 >> 2] | 0;
              q2 = +g[b2 + 16 >> 2];
              r2 = +g[b2 + 20 >> 2];
              n2 = +g[b2 + 24 >> 2];
              k2 = +g[d2 >> 2] * q2;
              m2 = +g[d2 + 4 >> 2] * r2;
              h2 = +g[d2 + 8 >> 2] * n2;
              if ((o2 | 0) > 0) {
                e2 = -1;
                d2 = 0;
                f2 = -34028234663852886e22;
                while (1) {
                  j2 = k2 * +g[p2 + (d2 << 4) >> 2] + m2 * +g[p2 + (d2 << 4) + 4 >> 2] + h2 * +g[p2 + (d2 << 4) + 8 >> 2];
                  b2 = j2 > f2;
                  e2 = b2 ? d2 : e2;
                  d2 = d2 + 1 | 0;
                  if ((d2 | 0) == (o2 | 0))
                    break;
                  else
                    f2 = b2 ? j2 : f2;
                }
              } else
                e2 = -1;
              x2 = r2 * +g[p2 + (e2 << 4) + 4 >> 2];
              y2 = n2 * +g[p2 + (e2 << 4) + 8 >> 2];
              g[a2 >> 2] = q2 * +g[p2 + (e2 << 4) >> 2];
              g[a2 + 4 >> 2] = x2;
              g[a2 + 8 >> 2] = y2;
              g[a2 + 12 >> 2] = 0;
              i = z2;
              return;
            }
            case 4: {
              p2 = c[b2 + 108 >> 2] | 0;
              o2 = c[b2 + 100 >> 2] | 0;
              q2 = +g[b2 + 16 >> 2];
              r2 = +g[b2 + 20 >> 2];
              n2 = +g[b2 + 24 >> 2];
              k2 = +g[d2 >> 2] * q2;
              m2 = +g[d2 + 4 >> 2] * r2;
              h2 = +g[d2 + 8 >> 2] * n2;
              if ((o2 | 0) > 0) {
                e2 = -1;
                d2 = 0;
                f2 = -34028234663852886e22;
                while (1) {
                  j2 = k2 * +g[p2 + (d2 << 4) >> 2] + m2 * +g[p2 + (d2 << 4) + 4 >> 2] + h2 * +g[p2 + (d2 << 4) + 8 >> 2];
                  b2 = j2 > f2;
                  e2 = b2 ? d2 : e2;
                  d2 = d2 + 1 | 0;
                  if ((d2 | 0) == (o2 | 0))
                    break;
                  else
                    f2 = b2 ? j2 : f2;
                }
              } else
                e2 = -1;
              x2 = r2 * +g[p2 + (e2 << 4) + 4 >> 2];
              y2 = n2 * +g[p2 + (e2 << 4) + 8 >> 2];
              g[a2 >> 2] = q2 * +g[p2 + (e2 << 4) >> 2];
              g[a2 + 4 >> 2] = x2;
              g[a2 + 8 >> 2] = y2;
              g[a2 + 12 >> 2] = 0;
              i = z2;
              return;
            }
            default: {
              Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](a2, b2, d2);
              i = z2;
              return;
            }
          }
        }
        function hc(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0, xa2 = 0, ya2 = 0, za2 = 0, Aa2 = 0, Ba2 = 0, Ca2 = 0, Da2 = 0, Ea2 = 0, Fa2 = 0;
          Fa2 = i;
          i = i + 512 | 0;
          c[Fa2 + 48 >> 2] = c[b2 >> 2];
          c[Fa2 >> 2] = c[b2 + 64 >> 2];
          D2 = Fa2 + 48 + 4 | 0;
          c[D2 >> 2] = c[b2 + 4 >> 2];
          c[Fa2 + 4 >> 2] = c[b2 + 68 >> 2];
          c[Fa2 + 48 + 8 >> 2] = c[b2 + 8 >> 2];
          c[Fa2 + 8 >> 2] = c[b2 + 72 >> 2];
          c[Fa2 + 48 + 16 >> 2] = c[b2 + 16 >> 2];
          c[Fa2 + 16 >> 2] = c[b2 + 80 >> 2];
          c[Fa2 + 48 + 20 >> 2] = c[b2 + 20 >> 2];
          c[Fa2 + 20 >> 2] = c[b2 + 84 >> 2];
          c[Fa2 + 48 + 24 >> 2] = c[b2 + 24 >> 2];
          c[Fa2 + 24 >> 2] = c[b2 + 88 >> 2];
          c[Fa2 + 48 + 32 >> 2] = c[b2 + 32 >> 2];
          c[Fa2 + 32 >> 2] = c[b2 + 96 >> 2];
          c[Fa2 + 48 + 36 >> 2] = c[b2 + 36 >> 2];
          c[Fa2 + 36 >> 2] = c[b2 + 100 >> 2];
          c[Fa2 + 48 + 40 >> 2] = c[b2 + 40 >> 2];
          c[Fa2 + 40 >> 2] = c[b2 + 104 >> 2];
          Ca2 = c[a2 + 4 >> 2] | 0;
          ia2 = +g[Ca2 + 32 >> 2];
          ja2 = +g[Ca2 + 36 >> 2];
          ma2 = +g[Ca2 + 40 >> 2];
          ka2 = +Cb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2);
          la2 = +Cb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2);
          ma2 = (ma2 + +Cb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2)) * 2;
          Ca2 = c[a2 + 8 >> 2] | 0;
          qa2 = +g[Ca2 + 32 >> 2];
          ra2 = +g[Ca2 + 36 >> 2];
          wa2 = +g[Ca2 + 40 >> 2];
          ta2 = +Cb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2);
          sa2 = +Cb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2);
          wa2 = (wa2 + +Cb[c[(c[Ca2 >> 2] | 0) + 48 >> 2] & 15](Ca2)) * 2;
          E2 = +g[b2 + 112 >> 2] - +g[b2 + 48 >> 2];
          Q2 = +g[b2 + 116 >> 2] - +g[b2 + 52 >> 2];
          R2 = +g[b2 + 120 >> 2] - +g[b2 + 56 >> 2];
          ca2 = +g[Fa2 + 48 >> 2];
          $2 = +g[Fa2 + 48 + 16 >> 2];
          aa2 = +g[Fa2 + 48 + 32 >> 2];
          ba2 = +g[D2 >> 2];
          X2 = +g[Fa2 + 48 + 20 >> 2];
          _2 = +g[Fa2 + 48 + 36 >> 2];
          ga2 = +g[Fa2 + 48 + 8 >> 2];
          ha2 = +g[Fa2 + 48 + 24 >> 2];
          na2 = +g[Fa2 + 48 + 40 >> 2];
          g[Fa2 + 404 >> 2] = (ia2 + ka2) * 2 * 0.5;
          g[Fa2 + 404 + 4 >> 2] = (ja2 + la2) * 2 * 0.5;
          g[Fa2 + 404 + 8 >> 2] = ma2 * 0.5;
          g[Fa2 + 392 >> 2] = (qa2 + ta2) * 2 * 0.5;
          g[Fa2 + 392 + 4 >> 2] = (ra2 + sa2) * 2 * 0.5;
          g[Fa2 + 392 + 8 >> 2] = wa2 * 0.5;
          za2 = +g[Fa2 >> 2];
          pa2 = +g[Fa2 + 16 >> 2];
          va2 = +g[Fa2 + 32 >> 2];
          ya2 = +g[Fa2 + 4 >> 2];
          oa2 = +g[Fa2 + 20 >> 2];
          ua2 = +g[Fa2 + 36 >> 2];
          xa2 = +g[Fa2 + 8 >> 2];
          Da2 = +g[Fa2 + 24 >> 2];
          Ea2 = +g[Fa2 + 40 >> 2];
          y2 = +F(+(ca2 * za2 + $2 * pa2 + aa2 * va2));
          A2 = +F(+(ca2 * ya2 + $2 * oa2 + aa2 * ua2));
          S2 = +F(+(ca2 * xa2 + $2 * Da2 + aa2 * Ea2));
          z2 = +F(+(za2 * ba2 + pa2 * X2 + va2 * _2));
          B2 = +F(+(ya2 * ba2 + oa2 * X2 + ua2 * _2));
          T2 = +F(+(xa2 * ba2 + Da2 * X2 + Ea2 * _2));
          U2 = +F(+(za2 * ga2 + pa2 * ha2 + va2 * na2));
          V2 = +F(+(ya2 * ga2 + oa2 * ha2 + ua2 * na2));
          C2 = +F(+(xa2 * ga2 + Da2 * ha2 + Ea2 * na2));
          h2 = +F(+(E2 * ca2 + Q2 * $2 + R2 * aa2)) - (wa2 * 0.5 * S2 + ((ia2 + ka2) * 2 * 0.5 + y2 * (qa2 + ta2) * 2 * 0.5 + A2 * (ra2 + sa2) * 2 * 0.5));
          if (h2 > 0) {
            i = Fa2;
            return;
          }
          if (h2 > -34028234663852886e22) {
            e2 = Fa2 + 48 | 0;
            m2 = 1;
            k2 = E2 * ca2 + Q2 * $2 + R2 * aa2 < 0 & 1;
          } else {
            e2 = 0;
            m2 = 0;
            k2 = 0;
            h2 = -34028234663852886e22;
          }
          j2 = +F(+(E2 * ba2 + Q2 * X2 + R2 * _2)) - ((ja2 + la2) * 2 * 0.5 + z2 * (qa2 + ta2) * 2 * 0.5 + B2 * (ra2 + sa2) * 2 * 0.5 + T2 * wa2 * 0.5);
          if (j2 > 0) {
            i = Fa2;
            return;
          }
          if (j2 > h2) {
            e2 = D2;
            m2 = 2;
            k2 = E2 * ba2 + Q2 * X2 + R2 * _2 < 0 & 1;
            h2 = j2;
          }
          j2 = +F(+(E2 * ga2 + Q2 * ha2 + R2 * na2)) - (ma2 * 0.5 + U2 * (qa2 + ta2) * 2 * 0.5 + V2 * (ra2 + sa2) * 2 * 0.5 + C2 * wa2 * 0.5);
          if (j2 > 0) {
            i = Fa2;
            return;
          }
          if (j2 > h2) {
            e2 = Fa2 + 48 + 8 | 0;
            m2 = 3;
            k2 = E2 * ga2 + Q2 * ha2 + R2 * na2 < 0 & 1;
            h2 = j2;
          }
          j2 = +F(+(E2 * za2 + Q2 * pa2 + R2 * va2)) - ((qa2 + ta2) * 2 * 0.5 + (y2 * (ia2 + ka2) * 2 * 0.5 + z2 * (ja2 + la2) * 2 * 0.5 + U2 * ma2 * 0.5));
          if (j2 > 0) {
            i = Fa2;
            return;
          }
          if (j2 > h2) {
            e2 = Fa2;
            m2 = 4;
            k2 = E2 * za2 + Q2 * pa2 + R2 * va2 < 0 & 1;
            h2 = j2;
          }
          j2 = +F(+(E2 * ya2 + Q2 * oa2 + R2 * ua2)) - ((ra2 + sa2) * 2 * 0.5 + (A2 * (ia2 + ka2) * 2 * 0.5 + B2 * (ja2 + la2) * 2 * 0.5 + V2 * ma2 * 0.5));
          if (j2 > 0) {
            i = Fa2;
            return;
          }
          if (j2 > h2) {
            e2 = Fa2 + 4 | 0;
            m2 = 5;
            k2 = E2 * ya2 + Q2 * oa2 + R2 * ua2 < 0 & 1;
            h2 = j2;
          }
          j2 = +F(+(E2 * xa2 + Q2 * Da2 + R2 * Ea2)) - (wa2 * 0.5 + (S2 * (ia2 + ka2) * 2 * 0.5 + T2 * (ja2 + la2) * 2 * 0.5 + C2 * ma2 * 0.5));
          if (j2 > 0) {
            i = Fa2;
            return;
          }
          if (j2 > h2) {
            e2 = Fa2 + 8 | 0;
            m2 = 6;
            k2 = E2 * xa2 + Q2 * Da2 + R2 * Ea2 < 0 & 1;
            h2 = j2;
          }
          j2 = (E2 * ga2 + Q2 * ha2 + R2 * na2) * (za2 * ba2 + pa2 * X2 + va2 * _2) - (E2 * ba2 + Q2 * X2 + R2 * _2) * (za2 * ga2 + pa2 * ha2 + va2 * na2);
          n2 = +F(+j2) - ((U2 + 9999999747378752e-21) * (ja2 + la2) * 2 * 0.5 + (z2 + 9999999747378752e-21) * ma2 * 0.5 + (S2 + 9999999747378752e-21) * (ra2 + sa2) * 2 * 0.5 + (A2 + 9999999747378752e-21) * wa2 * 0.5);
          if (n2 > 11920928955078125e-23) {
            i = Fa2;
            return;
          }
          q2 = (za2 * ga2 + pa2 * ha2 + va2 * na2) * (za2 * ga2 + pa2 * ha2 + va2 * na2) + 0;
          v2 = (za2 * ba2 + pa2 * X2 + va2 * _2) * (za2 * ba2 + pa2 * X2 + va2 * _2);
          p2 = +G(+(v2 + q2));
          if (p2 > 11920928955078125e-23 ? n2 / p2 * 1.0499999523162842 > h2 : 0) {
            a2 = (g[l >> 2] = 0 / p2, c[l >> 2] | 0);
            f2 = (g[l >> 2] = -(za2 * ga2 + pa2 * ha2 + va2 * na2) / p2, c[l >> 2] | 0);
            o2 = 0;
            m2 = 7;
            k2 = j2 < 0 & 1;
            h2 = n2 / p2;
            e2 = (g[l >> 2] = (za2 * ba2 + pa2 * X2 + va2 * _2) / p2, c[l >> 2] | 0);
          } else {
            o2 = e2;
            a2 = 0;
            f2 = 0;
            e2 = 0;
          }
          j2 = (E2 * ga2 + Q2 * ha2 + R2 * na2) * (ya2 * ba2 + oa2 * X2 + ua2 * _2) - (E2 * ba2 + Q2 * X2 + R2 * _2) * (ya2 * ga2 + oa2 * ha2 + ua2 * na2);
          n2 = +F(+j2) - ((V2 + 9999999747378752e-21) * (ja2 + la2) * 2 * 0.5 + (B2 + 9999999747378752e-21) * ma2 * 0.5 + (S2 + 9999999747378752e-21) * (qa2 + ta2) * 2 * 0.5 + (y2 + 9999999747378752e-21) * wa2 * 0.5);
          if (n2 > 11920928955078125e-23) {
            i = Fa2;
            return;
          }
          r2 = (ya2 * ga2 + oa2 * ha2 + ua2 * na2) * (ya2 * ga2 + oa2 * ha2 + ua2 * na2) + 0;
          w2 = (ya2 * ba2 + oa2 * X2 + ua2 * _2) * (ya2 * ba2 + oa2 * X2 + ua2 * _2);
          p2 = +G(+(w2 + r2));
          if (p2 > 11920928955078125e-23 ? n2 / p2 * 1.0499999523162842 > h2 : 0) {
            a2 = (g[l >> 2] = 0 / p2, c[l >> 2] | 0);
            f2 = (g[l >> 2] = -(ya2 * ga2 + oa2 * ha2 + ua2 * na2) / p2, c[l >> 2] | 0);
            o2 = 0;
            m2 = 8;
            k2 = j2 < 0 & 1;
            h2 = n2 / p2;
            e2 = (g[l >> 2] = (ya2 * ba2 + oa2 * X2 + ua2 * _2) / p2, c[l >> 2] | 0);
          }
          j2 = (E2 * ga2 + Q2 * ha2 + R2 * na2) * (xa2 * ba2 + Da2 * X2 + Ea2 * _2) - (E2 * ba2 + Q2 * X2 + R2 * _2) * (xa2 * ga2 + Da2 * ha2 + Ea2 * na2);
          n2 = +F(+j2) - ((C2 + 9999999747378752e-21) * (ja2 + la2) * 2 * 0.5 + (T2 + 9999999747378752e-21) * ma2 * 0.5 + (A2 + 9999999747378752e-21) * (qa2 + ta2) * 2 * 0.5 + (y2 + 9999999747378752e-21) * (ra2 + sa2) * 2 * 0.5);
          if (n2 > 11920928955078125e-23) {
            i = Fa2;
            return;
          }
          t2 = (xa2 * ga2 + Da2 * ha2 + Ea2 * na2) * (xa2 * ga2 + Da2 * ha2 + Ea2 * na2) + 0;
          x2 = (xa2 * ba2 + Da2 * X2 + Ea2 * _2) * (xa2 * ba2 + Da2 * X2 + Ea2 * _2);
          p2 = +G(+(x2 + t2));
          if (p2 > 11920928955078125e-23 ? n2 / p2 * 1.0499999523162842 > h2 : 0) {
            a2 = (g[l >> 2] = 0 / p2, c[l >> 2] | 0);
            f2 = (g[l >> 2] = -(xa2 * ga2 + Da2 * ha2 + Ea2 * na2) / p2, c[l >> 2] | 0);
            o2 = 0;
            m2 = 9;
            k2 = j2 < 0 & 1;
            h2 = n2 / p2;
            e2 = (g[l >> 2] = (xa2 * ba2 + Da2 * X2 + Ea2 * _2) / p2, c[l >> 2] | 0);
          }
          j2 = (E2 * ca2 + Q2 * $2 + R2 * aa2) * (za2 * ga2 + pa2 * ha2 + va2 * na2) - (E2 * ga2 + Q2 * ha2 + R2 * na2) * (ca2 * za2 + $2 * pa2 + aa2 * va2);
          n2 = +F(+j2) - ((U2 + 9999999747378752e-21) * (ia2 + ka2) * 2 * 0.5 + (y2 + 9999999747378752e-21) * ma2 * 0.5 + (T2 + 9999999747378752e-21) * (ra2 + sa2) * 2 * 0.5 + (B2 + 9999999747378752e-21) * wa2 * 0.5);
          if (n2 > 11920928955078125e-23) {
            i = Fa2;
            return;
          }
          u2 = (ca2 * za2 + $2 * pa2 + aa2 * va2) * (ca2 * za2 + $2 * pa2 + aa2 * va2);
          p2 = +G(+(u2 + q2));
          do
            if (p2 > 11920928955078125e-23) {
              if (!(n2 / p2 * 1.0499999523162842 > h2))
                break;
              a2 = (g[l >> 2] = (za2 * ga2 + pa2 * ha2 + va2 * na2) / p2, c[l >> 2] | 0);
              f2 = (g[l >> 2] = 0 / p2, c[l >> 2] | 0);
              o2 = 0;
              m2 = 10;
              k2 = j2 < 0 & 1;
              h2 = n2 / p2;
              e2 = (g[l >> 2] = -(ca2 * za2 + $2 * pa2 + aa2 * va2) / p2, c[l >> 2] | 0);
            }
          while (0);
          j2 = (E2 * ca2 + Q2 * $2 + R2 * aa2) * (ya2 * ga2 + oa2 * ha2 + ua2 * na2) - (E2 * ga2 + Q2 * ha2 + R2 * na2) * (ca2 * ya2 + $2 * oa2 + aa2 * ua2);
          n2 = +F(+j2) - ((V2 + 9999999747378752e-21) * (ia2 + ka2) * 2 * 0.5 + (A2 + 9999999747378752e-21) * ma2 * 0.5 + (T2 + 9999999747378752e-21) * (qa2 + ta2) * 2 * 0.5 + (z2 + 9999999747378752e-21) * wa2 * 0.5);
          if (n2 > 11920928955078125e-23) {
            i = Fa2;
            return;
          }
          s2 = (ca2 * ya2 + $2 * oa2 + aa2 * ua2) * (ca2 * ya2 + $2 * oa2 + aa2 * ua2);
          p2 = +G(+(s2 + r2));
          do
            if (p2 > 11920928955078125e-23) {
              if (!(n2 / p2 * 1.0499999523162842 > h2))
                break;
              a2 = (g[l >> 2] = (ya2 * ga2 + oa2 * ha2 + ua2 * na2) / p2, c[l >> 2] | 0);
              f2 = (g[l >> 2] = 0 / p2, c[l >> 2] | 0);
              o2 = 0;
              m2 = 11;
              k2 = j2 < 0 & 1;
              h2 = n2 / p2;
              e2 = (g[l >> 2] = -(ca2 * ya2 + $2 * oa2 + aa2 * ua2) / p2, c[l >> 2] | 0);
            }
          while (0);
          j2 = (E2 * ca2 + Q2 * $2 + R2 * aa2) * (xa2 * ga2 + Da2 * ha2 + Ea2 * na2) - (E2 * ga2 + Q2 * ha2 + R2 * na2) * (ca2 * xa2 + $2 * Da2 + aa2 * Ea2);
          n2 = +F(+j2) - ((C2 + 9999999747378752e-21) * (ia2 + ka2) * 2 * 0.5 + (S2 + 9999999747378752e-21) * ma2 * 0.5 + (B2 + 9999999747378752e-21) * (qa2 + ta2) * 2 * 0.5 + (z2 + 9999999747378752e-21) * (ra2 + sa2) * 2 * 0.5);
          if (n2 > 11920928955078125e-23) {
            i = Fa2;
            return;
          }
          q2 = (ca2 * xa2 + $2 * Da2 + aa2 * Ea2) * (ca2 * xa2 + $2 * Da2 + aa2 * Ea2);
          p2 = +G(+(q2 + t2));
          do
            if (p2 > 11920928955078125e-23) {
              if (!(n2 / p2 * 1.0499999523162842 > h2))
                break;
              a2 = (g[l >> 2] = (xa2 * ga2 + Da2 * ha2 + Ea2 * na2) / p2, c[l >> 2] | 0);
              f2 = (g[l >> 2] = 0 / p2, c[l >> 2] | 0);
              o2 = 0;
              m2 = 12;
              k2 = j2 < 0 & 1;
              h2 = n2 / p2;
              e2 = (g[l >> 2] = -(ca2 * xa2 + $2 * Da2 + aa2 * Ea2) / p2, c[l >> 2] | 0);
            }
          while (0);
          n2 = (E2 * ba2 + Q2 * X2 + R2 * _2) * (ca2 * za2 + $2 * pa2 + aa2 * va2) - (E2 * ca2 + Q2 * $2 + R2 * aa2) * (za2 * ba2 + pa2 * X2 + va2 * _2);
          j2 = +F(+n2) - ((z2 + 9999999747378752e-21) * (ia2 + ka2) * 2 * 0.5 + (y2 + 9999999747378752e-21) * (ja2 + la2) * 2 * 0.5 + (C2 + 9999999747378752e-21) * (ra2 + sa2) * 2 * 0.5 + (V2 + 9999999747378752e-21) * wa2 * 0.5);
          if (j2 > 11920928955078125e-23) {
            i = Fa2;
            return;
          }
          p2 = +G(+(u2 + v2 + 0));
          do
            if (p2 > 11920928955078125e-23) {
              if (!(j2 / p2 * 1.0499999523162842 > h2))
                break;
              a2 = (g[l >> 2] = -(za2 * ba2 + pa2 * X2 + va2 * _2) / p2, c[l >> 2] | 0);
              f2 = (g[l >> 2] = (ca2 * za2 + $2 * pa2 + aa2 * va2) / p2, c[l >> 2] | 0);
              o2 = 0;
              m2 = 13;
              k2 = n2 < 0 & 1;
              h2 = j2 / p2;
              e2 = (g[l >> 2] = 0 / p2, c[l >> 2] | 0);
            }
          while (0);
          p2 = (E2 * ba2 + Q2 * X2 + R2 * _2) * (ca2 * ya2 + $2 * oa2 + aa2 * ua2) - (E2 * ca2 + Q2 * $2 + R2 * aa2) * (ya2 * ba2 + oa2 * X2 + ua2 * _2);
          j2 = +F(+p2) - ((B2 + 9999999747378752e-21) * (ia2 + ka2) * 2 * 0.5 + (A2 + 9999999747378752e-21) * (ja2 + la2) * 2 * 0.5 + (C2 + 9999999747378752e-21) * (qa2 + ta2) * 2 * 0.5 + (U2 + 9999999747378752e-21) * wa2 * 0.5);
          if (j2 > 11920928955078125e-23) {
            i = Fa2;
            return;
          }
          n2 = +G(+(s2 + w2 + 0));
          do
            if (n2 > 11920928955078125e-23) {
              if (!(j2 / n2 * 1.0499999523162842 > h2))
                break;
              a2 = (g[l >> 2] = -(ya2 * ba2 + oa2 * X2 + ua2 * _2) / n2, c[l >> 2] | 0);
              f2 = (g[l >> 2] = (ca2 * ya2 + $2 * oa2 + aa2 * ua2) / n2, c[l >> 2] | 0);
              o2 = 0;
              m2 = 14;
              k2 = p2 < 0 & 1;
              h2 = j2 / n2;
              e2 = (g[l >> 2] = 0 / n2, c[l >> 2] | 0);
            }
          while (0);
          p2 = (E2 * ba2 + Q2 * X2 + R2 * _2) * (ca2 * xa2 + $2 * Da2 + aa2 * Ea2) - (E2 * ca2 + Q2 * $2 + R2 * aa2) * (xa2 * ba2 + Da2 * X2 + Ea2 * _2);
          j2 = +F(+p2) - ((T2 + 9999999747378752e-21) * (ia2 + ka2) * 2 * 0.5 + (S2 + 9999999747378752e-21) * (ja2 + la2) * 2 * 0.5 + (V2 + 9999999747378752e-21) * (qa2 + ta2) * 2 * 0.5 + (U2 + 9999999747378752e-21) * (ra2 + sa2) * 2 * 0.5);
          if (j2 > 11920928955078125e-23) {
            i = Fa2;
            return;
          }
          n2 = +G(+(q2 + x2 + 0));
          do
            if (n2 > 11920928955078125e-23) {
              if (!(j2 / n2 * 1.0499999523162842 > h2)) {
                Aa2 = 55;
                break;
              }
              a2 = (g[l >> 2] = -(xa2 * ba2 + Da2 * X2 + Ea2 * _2) / n2, c[l >> 2] | 0);
              f2 = (g[l >> 2] = (ca2 * xa2 + $2 * Da2 + aa2 * Ea2) / n2, c[l >> 2] | 0);
              m2 = 15;
              k2 = p2 < 0 & 1;
              h2 = j2 / n2;
              e2 = (g[l >> 2] = 0 / n2, c[l >> 2] | 0);
              Aa2 = 58;
            } else
              Aa2 = 55;
          while (0);
          do
            if ((Aa2 | 0) == 55) {
              if (!m2) {
                i = Fa2;
                return;
              }
              if (!o2) {
                Aa2 = 58;
                break;
              }
              e2 = c[o2 >> 2] | 0;
              f2 = c[o2 + 16 >> 2] | 0;
              Ca2 = c[o2 + 32 >> 2] | 0;
              n2 = (c[l >> 2] = e2, +g[l >> 2]);
              j2 = (c[l >> 2] = f2, +g[l >> 2]);
              a2 = k2;
              E2 = h2;
              k2 = Ca2;
              h2 = n2;
              n2 = (c[l >> 2] = Ca2, +g[l >> 2]);
            }
          while (0);
          if ((Aa2 | 0) == 58) {
            ba2 = (c[l >> 2] = a2, +g[l >> 2]);
            E2 = (c[l >> 2] = f2, +g[l >> 2]);
            n2 = (c[l >> 2] = e2, +g[l >> 2]);
            ca2 = ba2 * +g[Fa2 + 48 >> 2] + E2 * +g[D2 >> 2] + n2 * ga2;
            e2 = (g[l >> 2] = ca2, c[l >> 2] | 0);
            j2 = ba2 * +g[Fa2 + 48 + 16 >> 2] + E2 * +g[Fa2 + 48 + 20 >> 2] + n2 * ha2;
            f2 = (g[l >> 2] = j2, c[l >> 2] | 0);
            n2 = ba2 * +g[Fa2 + 48 + 32 >> 2] + E2 * +g[Fa2 + 48 + 36 >> 2] + n2 * na2;
            a2 = k2;
            E2 = h2;
            k2 = (g[l >> 2] = n2, c[l >> 2] | 0);
            h2 = ca2;
          }
          if (!a2) {
            Ba2 = f2;
            Ca2 = k2;
          } else {
            e2 = (g[l >> 2] = -h2, c[l >> 2] | 0);
            Ba2 = (g[l >> 2] = -j2, c[l >> 2] | 0);
            Ca2 = (g[l >> 2] = -n2, c[l >> 2] | 0);
          }
          if ((m2 | 0) > 6) {
            C2 = (c[l >> 2] = e2, +g[l >> 2]);
            B2 = (c[l >> 2] = Ba2, +g[l >> 2]);
            A2 = (c[l >> 2] = Ca2, +g[l >> 2]);
            j2 = +g[Fa2 + 48 >> 2];
            u2 = +g[Fa2 + 48 + 16 >> 2];
            w2 = +g[Fa2 + 48 + 32 >> 2];
            v2 = (C2 * j2 + B2 * u2 + A2 * w2 > 0 ? 1 : -1) * (ia2 + ka2) * 2 * 0.5;
            z2 = +g[D2 >> 2];
            y2 = +g[Fa2 + 48 + 20 >> 2];
            h2 = +g[Fa2 + 48 + 36 >> 2];
            t2 = (C2 * z2 + B2 * y2 + A2 * h2 > 0 ? 1 : -1) * (ja2 + la2) * 2 * 0.5;
            x2 = (C2 * ga2 + B2 * ha2 + A2 * na2 > 0 ? 1 : -1) * ma2 * 0.5;
            z2 = +g[b2 + 48 >> 2] + v2 * j2 + t2 * z2 + x2 * ga2;
            y2 = +g[b2 + 52 >> 2] + v2 * u2 + t2 * y2 + x2 * ha2;
            x2 = +g[b2 + 56 >> 2] + v2 * w2 + t2 * h2 + x2 * na2;
            c[Fa2 + 448 >> 2] = c[b2 + 112 >> 2];
            c[Fa2 + 448 + 4 >> 2] = c[b2 + 112 + 4 >> 2];
            c[Fa2 + 448 + 8 >> 2] = c[b2 + 112 + 8 >> 2];
            h2 = (C2 * za2 + B2 * pa2 + A2 * va2 > 0 ? -1 : 1) * (qa2 + ta2) * 2 * 0.5;
            t2 = (C2 * ya2 + B2 * oa2 + A2 * ua2 > 0 ? -1 : 1) * (ra2 + sa2) * 2 * 0.5;
            w2 = +g[Fa2 + 448 + 4 >> 2] + h2 * pa2 + t2 * oa2;
            v2 = +g[Fa2 + 448 + 8 >> 2] + h2 * va2 + t2 * ua2;
            u2 = (C2 * xa2 + B2 * Da2 + A2 * Ea2 > 0 ? -1 : 1) * wa2 * 0.5;
            t2 = +g[Fa2 + 448 >> 2] + h2 * za2 + t2 * ya2 + u2 * xa2;
            g[Fa2 + 448 >> 2] = t2;
            g[Fa2 + 448 + 4 >> 2] = w2 + u2 * Da2;
            g[Fa2 + 448 + 8 >> 2] = v2 + u2 * Ea2;
            Ca2 = m2 + -7 | 0;
            h2 = +g[Fa2 + 48 + (((Ca2 | 0) / 3 | 0) << 2) >> 2];
            j2 = +g[Fa2 + 48 + (((Ca2 | 0) / 3 | 0) + 4 << 2) >> 2];
            n2 = +g[Fa2 + 48 + (((Ca2 | 0) / 3 | 0) + 8 << 2) >> 2];
            q2 = +g[Fa2 + (((Ca2 | 0) % 3 | 0) << 2) >> 2];
            r2 = +g[Fa2 + (((Ca2 | 0) % 3 | 0) + 4 << 2) >> 2];
            s2 = +g[Fa2 + (((Ca2 | 0) % 3 | 0) + 8 << 2) >> 2];
            p2 = 1 - (h2 * q2 + j2 * r2 + n2 * s2) * (h2 * q2 + j2 * r2 + n2 * s2);
            if (!(p2 <= 9999999747378752e-20))
              h2 = (((t2 - z2) * h2 + (w2 + u2 * Da2 - y2) * j2 + (v2 + u2 * Ea2 - x2) * n2) * (h2 * q2 + j2 * r2 + n2 * s2) - ((t2 - z2) * q2 + (w2 + u2 * Da2 - y2) * r2 + (v2 + u2 * Ea2 - x2) * s2)) * (1 / p2);
            else
              h2 = 0;
            g[Fa2 + 448 >> 2] = t2 + h2 * q2;
            g[Fa2 + 448 + 4 >> 2] = w2 + u2 * Da2 + h2 * r2;
            g[Fa2 + 448 + 8 >> 2] = v2 + u2 * Ea2 + h2 * s2;
            Ca2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
            g[Fa2 + 416 >> 2] = -C2;
            g[Fa2 + 416 + 4 >> 2] = -B2;
            g[Fa2 + 416 + 8 >> 2] = -A2;
            g[Fa2 + 416 + 12 >> 2] = 0;
            Tb[Ca2 & 15](d2, Fa2 + 416 | 0, Fa2 + 448 | 0, E2);
            i = Fa2;
            return;
          }
          da2 = (m2 | 0) < 4;
          ga2 = (c[l >> 2] = e2, +g[l >> 2]);
          if (da2) {
            o2 = Fa2 + 392 | 0;
            P2 = Fa2 + 404 | 0;
            a2 = b2 + 112 | 0;
            fa2 = b2 + 48 | 0;
            Z2 = Fa2;
            k2 = Fa2 + 48 | 0;
            ca2 = ga2;
            f2 = Ca2;
            e2 = Ba2;
          } else {
            e2 = (g[l >> 2] = -(c[l >> 2] = Ba2, +g[l >> 2]), c[l >> 2] | 0);
            o2 = Fa2 + 404 | 0;
            P2 = Fa2 + 392 | 0;
            a2 = b2 + 48 | 0;
            fa2 = b2 + 112 | 0;
            Z2 = Fa2 + 48 | 0;
            k2 = Fa2;
            ca2 = -ga2;
            f2 = (g[l >> 2] = -(c[l >> 2] = Ca2, +g[l >> 2]), c[l >> 2] | 0);
          }
          ba2 = (c[l >> 2] = e2, +g[l >> 2]);
          aa2 = (c[l >> 2] = f2, +g[l >> 2]);
          h2 = ca2 * +g[Z2 >> 2] + ba2 * +g[Z2 + 16 >> 2] + aa2 * +g[Z2 + 32 >> 2];
          g[Fa2 + 376 >> 2] = h2;
          j2 = ca2 * +g[Z2 + 4 >> 2] + ba2 * +g[Z2 + 20 >> 2] + aa2 * +g[Z2 + 36 >> 2];
          g[Fa2 + 376 + 4 >> 2] = j2;
          q2 = ca2 * +g[Z2 + 8 >> 2] + ba2 * +g[Z2 + 24 >> 2] + aa2 * +g[Z2 + 40 >> 2];
          g[Fa2 + 376 + 8 >> 2] = q2;
          h2 = +F(+h2);
          j2 = +F(+j2);
          q2 = +F(+q2);
          e2 = j2 > h2 ? j2 > q2 ? 1 : 2 : h2 > q2 ? 0 : 2;
          W2 = j2 > h2 ? 0 : h2 > q2 & 1;
          Y2 = (j2 > h2 ? j2 > q2 : h2 > q2) ? 2 : 1;
          q2 = +g[o2 + (e2 << 2) >> 2];
          h2 = +g[a2 >> 2] - +g[fa2 >> 2];
          j2 = q2 * +g[Z2 + (e2 << 2) >> 2];
          n2 = +g[a2 + 4 >> 2];
          ea2 = fa2 + 4 | 0;
          p2 = +g[ea2 >> 2];
          if (+g[Fa2 + 376 + (e2 << 2) >> 2] < 0) {
            $2 = h2 + j2;
            _2 = n2 - p2 + q2 * +g[Z2 + ((e2 | 4) << 2) >> 2];
            X2 = +g[a2 + 8 >> 2] - +g[fa2 + 8 >> 2] + q2 * +g[Z2 + ((e2 | 8) << 2) >> 2];
          } else {
            $2 = h2 - j2;
            _2 = n2 - p2 - q2 * +g[Z2 + ((e2 | 4) << 2) >> 2];
            X2 = +g[a2 + 8 >> 2] - +g[fa2 + 8 >> 2] - q2 * +g[Z2 + ((e2 | 8) << 2) >> 2];
          }
          L2 = (da2 ? -1 : -4) + m2 | 0;
          switch (L2 | 0) {
            case 0: {
              e2 = 2;
              f2 = 1;
              break;
            }
            case 1: {
              e2 = 2;
              f2 = 0;
              break;
            }
            default: {
              e2 = 1;
              f2 = 0;
            }
          }
          M2 = k2 + (f2 << 2) | 0;
          U2 = +g[M2 >> 2];
          S2 = +g[M2 + 16 >> 2];
          T2 = +g[M2 + 32 >> 2];
          V2 = $2 * U2 + _2 * S2 + X2 * T2;
          M2 = k2 + (e2 << 2) | 0;
          C2 = +g[M2 >> 2];
          w2 = +g[M2 + 16 >> 2];
          x2 = +g[M2 + 32 >> 2];
          R2 = $2 * C2 + _2 * w2 + X2 * x2;
          M2 = Z2 + (W2 << 2) | 0;
          Q2 = +g[M2 >> 2];
          A2 = +g[M2 + 16 >> 2];
          B2 = +g[M2 + 32 >> 2];
          N2 = Z2 + (Y2 << 2) | 0;
          E2 = +g[N2 >> 2];
          y2 = +g[N2 + 16 >> 2];
          z2 = +g[N2 + 32 >> 2];
          Da2 = +g[o2 + (W2 << 2) >> 2];
          Ea2 = +g[o2 + (Y2 << 2) >> 2];
          za2 = (U2 * E2 + S2 * y2 + T2 * z2) * Ea2;
          Ea2 = (C2 * E2 + w2 * y2 + x2 * z2) * Ea2;
          g[Fa2 + 344 >> 2] = V2 - (U2 * Q2 + S2 * A2 + T2 * B2) * Da2 - za2;
          g[Fa2 + 344 + 4 >> 2] = R2 - (C2 * Q2 + w2 * A2 + x2 * B2) * Da2 - Ea2;
          g[Fa2 + 344 + 8 >> 2] = V2 - (U2 * Q2 + S2 * A2 + T2 * B2) * Da2 + za2;
          g[Fa2 + 344 + 12 >> 2] = R2 - (C2 * Q2 + w2 * A2 + x2 * B2) * Da2 + Ea2;
          g[Fa2 + 344 + 16 >> 2] = V2 + (U2 * Q2 + S2 * A2 + T2 * B2) * Da2 + za2;
          g[Fa2 + 344 + 20 >> 2] = R2 + (C2 * Q2 + w2 * A2 + x2 * B2) * Da2 + Ea2;
          g[Fa2 + 344 + 24 >> 2] = V2 + (U2 * Q2 + S2 * A2 + T2 * B2) * Da2 - za2;
          g[Fa2 + 344 + 28 >> 2] = R2 + (C2 * Q2 + w2 * A2 + x2 * B2) * Da2 - Ea2;
          c[Fa2 + 336 >> 2] = c[P2 + (f2 << 2) >> 2];
          c[Fa2 + 336 + 4 >> 2] = c[P2 + (e2 << 2) >> 2];
          J2 = 0;
          K2 = Fa2 + 272 | 0;
          e2 = Fa2 + 344 | 0;
          f2 = 4;
          a:
            while (1) {
              H2 = Fa2 + 336 + (J2 << 2) | 0;
              I2 = 1 - J2 | 0;
              do
                if ((f2 | 0) > 0) {
                  a2 = K2;
                  b2 = e2;
                  k2 = 0;
                  while (1) {
                    m2 = b2 + (J2 << 2) | 0;
                    h2 = +g[m2 >> 2];
                    j2 = +g[H2 >> 2];
                    if (j2 > -h2) {
                      c[a2 >> 2] = c[b2 >> 2];
                      c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
                      k2 = k2 + 1 | 0;
                      if (k2 & 8 | 0) {
                        e2 = K2;
                        f2 = k2;
                        break a;
                      }
                      a2 = a2 + 8 | 0;
                      h2 = +g[m2 >> 2];
                      j2 = +g[H2 >> 2];
                    }
                    D2 = (f2 | 0) > 1;
                    m2 = b2;
                    b2 = b2 + 8 | 0;
                    o2 = D2 ? b2 : e2;
                    n2 = +g[o2 + (J2 << 2) >> 2];
                    if (j2 > -h2 ^ j2 > -n2) {
                      Ea2 = +g[m2 + (I2 << 2) >> 2];
                      g[a2 + (I2 << 2) >> 2] = Ea2 + (-j2 - h2) * ((+g[o2 + (I2 << 2) >> 2] - Ea2) / (n2 - h2));
                      g[a2 + (J2 << 2) >> 2] = -+g[H2 >> 2];
                      k2 = k2 + 1 | 0;
                      if (!(k2 & 8))
                        a2 = a2 + 8 | 0;
                      else {
                        e2 = K2;
                        f2 = k2;
                        break a;
                      }
                    }
                    if (!D2)
                      break;
                    else
                      f2 = f2 + -1 | 0;
                  }
                  e2 = (K2 | 0) == (Fa2 + 272 | 0) ? Fa2 + 448 | 0 : Fa2 + 272 | 0;
                  if ((k2 | 0) <= 0) {
                    f2 = 0;
                    break;
                  }
                  a2 = e2;
                  b2 = K2;
                  f2 = 0;
                  while (1) {
                    m2 = b2 + (J2 << 2) | 0;
                    j2 = +g[m2 >> 2];
                    h2 = +g[H2 >> 2];
                    if (j2 < h2) {
                      c[a2 >> 2] = c[b2 >> 2];
                      c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
                      f2 = f2 + 1 | 0;
                      if (f2 & 8 | 0)
                        break a;
                      a2 = a2 + 8 | 0;
                      h2 = +g[H2 >> 2];
                      j2 = +g[m2 >> 2];
                    }
                    D2 = (k2 | 0) > 1;
                    m2 = b2;
                    b2 = b2 + 8 | 0;
                    o2 = D2 ? b2 : K2;
                    n2 = +g[o2 + (J2 << 2) >> 2];
                    if (j2 < h2 ^ n2 < h2) {
                      Ea2 = +g[m2 + (I2 << 2) >> 2];
                      g[a2 + (I2 << 2) >> 2] = Ea2 + (h2 - j2) * ((+g[o2 + (I2 << 2) >> 2] - Ea2) / (n2 - j2));
                      c[a2 + (J2 << 2) >> 2] = c[H2 >> 2];
                      f2 = f2 + 1 | 0;
                      if (!(f2 & 8))
                        a2 = a2 + 8 | 0;
                      else
                        break a;
                    }
                    if (!D2)
                      break;
                    else
                      k2 = k2 + -1 | 0;
                  }
                } else {
                  f2 = 0;
                  e2 = (K2 | 0) == (Fa2 + 272 | 0) ? Fa2 + 448 | 0 : Fa2 + 272 | 0;
                }
              while (0);
              J2 = J2 + 1 | 0;
              if ((J2 | 0) >= 2)
                break;
              else
                K2 = (e2 | 0) == (Fa2 + 272 | 0) ? Fa2 + 448 | 0 : Fa2 + 272 | 0;
            }
          if ((e2 | 0) != (Fa2 + 272 | 0))
            Lm(Fa2 + 272 | 0, e2 | 0, f2 << 3 | 0) | 0;
          if ((f2 | 0) >= 1) {
            v2 = 1 / ((U2 * Q2 + S2 * A2 + T2 * B2) * (C2 * E2 + w2 * y2 + x2 * z2) - (C2 * Q2 + w2 * A2 + x2 * B2) * (U2 * E2 + S2 * y2 + T2 * z2));
            u2 = +g[P2 + (L2 << 2) >> 2];
            t2 = +g[M2 >> 2];
            q2 = +g[N2 >> 2];
            r2 = +g[Z2 + ((W2 | 4) << 2) >> 2];
            s2 = +g[Z2 + ((Y2 | 4) << 2) >> 2];
            p2 = +g[Z2 + ((W2 | 8) << 2) >> 2];
            n2 = +g[Z2 + ((Y2 | 8) << 2) >> 2];
            o2 = 0;
            e2 = 0;
            do {
              Z2 = e2 << 1;
              h2 = +g[Fa2 + 272 + (Z2 << 2) >> 2];
              j2 = +g[Fa2 + 272 + ((Z2 | 1) << 2) >> 2];
              ya2 = (C2 * E2 + w2 * y2 + x2 * z2) * v2 * (h2 - V2) - (U2 * E2 + S2 * y2 + T2 * z2) * v2 * (j2 - R2);
              Ea2 = (U2 * Q2 + S2 * A2 + T2 * B2) * v2 * (j2 - R2) - (C2 * Q2 + w2 * A2 + x2 * B2) * v2 * (h2 - V2);
              Z2 = o2 * 3 | 0;
              za2 = $2 + ya2 * t2 + Ea2 * q2;
              g[Fa2 + 176 + (Z2 << 2) >> 2] = za2;
              Da2 = _2 + ya2 * r2 + Ea2 * s2;
              g[Fa2 + 176 + (Z2 + 1 << 2) >> 2] = Da2;
              Ea2 = X2 + ya2 * p2 + Ea2 * n2;
              g[Fa2 + 176 + (Z2 + 2 << 2) >> 2] = Ea2;
              Ea2 = u2 - (ca2 * za2 + ba2 * Da2 + aa2 * Ea2);
              g[Fa2 + 144 + (o2 << 2) >> 2] = Ea2;
              if (Ea2 >= 0) {
                Z2 = o2 << 1;
                g[Fa2 + 272 + (Z2 << 2) >> 2] = h2;
                g[Fa2 + 272 + ((Z2 | 1) << 2) >> 2] = j2;
                o2 = o2 + 1 | 0;
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (f2 | 0));
            b:
              do
                if ((o2 | 0) >= 1) {
                  D2 = (o2 | 0) < 4 ? o2 : 4;
                  D2 = (D2 | 0) < 1 ? 1 : D2;
                  if ((o2 | 0) <= (D2 | 0))
                    if (da2) {
                      f2 = fa2 + 8 | 0;
                      j2 = -(c[l >> 2] = Ba2, +g[l >> 2]);
                      h2 = -(c[l >> 2] = Ca2, +g[l >> 2]);
                      e2 = 0;
                      while (1) {
                        Ca2 = e2 * 3 | 0;
                        g[Fa2 + 448 >> 2] = +g[Fa2 + 176 + (Ca2 << 2) >> 2] + +g[fa2 >> 2];
                        g[Fa2 + 448 + 4 >> 2] = +g[Fa2 + 176 + (Ca2 + 1 << 2) >> 2] + +g[ea2 >> 2];
                        g[Fa2 + 448 + 8 >> 2] = +g[Fa2 + 176 + (Ca2 + 2 << 2) >> 2] + +g[f2 >> 2];
                        Ca2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                        g[Fa2 + 416 >> 2] = -ga2;
                        g[Fa2 + 416 + 4 >> 2] = j2;
                        g[Fa2 + 416 + 8 >> 2] = h2;
                        g[Fa2 + 416 + 12 >> 2] = 0;
                        Tb[Ca2 & 15](d2, Fa2 + 416 | 0, Fa2 + 448 | 0, -+g[Fa2 + 144 + (e2 << 2) >> 2]);
                        e2 = e2 + 1 | 0;
                        if ((e2 | 0) == (o2 | 0))
                          break b;
                      }
                    } else {
                      f2 = fa2 + 8 | 0;
                      j2 = (c[l >> 2] = Ba2, +g[l >> 2]);
                      h2 = (c[l >> 2] = Ca2, +g[l >> 2]);
                      e2 = 0;
                      while (1) {
                        Ca2 = e2 * 3 | 0;
                        Ea2 = +g[Fa2 + 144 + (e2 << 2) >> 2];
                        g[Fa2 + 448 >> 2] = +g[Fa2 + 176 + (Ca2 << 2) >> 2] + +g[fa2 >> 2] - ga2 * Ea2;
                        g[Fa2 + 448 + 4 >> 2] = +g[Fa2 + 176 + (Ca2 + 1 << 2) >> 2] + +g[ea2 >> 2] - j2 * Ea2;
                        g[Fa2 + 448 + 8 >> 2] = +g[Fa2 + 176 + (Ca2 + 2 << 2) >> 2] + +g[f2 >> 2] - h2 * Ea2;
                        Ca2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                        g[Fa2 + 416 >> 2] = -ga2;
                        g[Fa2 + 416 + 4 >> 2] = -j2;
                        g[Fa2 + 416 + 8 >> 2] = -h2;
                        g[Fa2 + 416 + 12 >> 2] = 0;
                        Tb[Ca2 & 15](d2, Fa2 + 416 | 0, Fa2 + 448 | 0, -Ea2);
                        e2 = e2 + 1 | 0;
                        if ((e2 | 0) == (o2 | 0))
                          break b;
                      }
                    }
                  c:
                    do
                      if ((o2 | 0) > 1) {
                        h2 = +g[Fa2 + 144 >> 2];
                        e2 = 0;
                        f2 = 1;
                        while (1) {
                          j2 = +g[Fa2 + 144 + (f2 << 2) >> 2];
                          a2 = j2 > h2;
                          e2 = a2 ? f2 : e2;
                          f2 = f2 + 1 | 0;
                          if ((f2 | 0) == (o2 | 0))
                            break;
                          else
                            h2 = a2 ? j2 : h2;
                        }
                        switch (o2 | 0) {
                          case 1: {
                            f2 = 1;
                            a2 = Fa2 + 112 | 0;
                            k2 = Fa2 + 112 | 0;
                            Aa2 = 111;
                            break c;
                          }
                          case 2: {
                            h2 = (+g[Fa2 + 272 + 4 >> 2] + +g[Fa2 + 272 + 12 >> 2]) * 0.5;
                            j2 = (+g[Fa2 + 272 >> 2] + +g[Fa2 + 272 + 8 >> 2]) * 0.5;
                            f2 = 2;
                            a2 = Fa2 + 112 | 0;
                            k2 = Fa2 + 112 | 0;
                            Aa2 = 116;
                            break c;
                          }
                          default: {
                          }
                        }
                        a2 = o2 + -1 | 0;
                        s2 = 0;
                        t2 = 0;
                        h2 = 0;
                        f2 = 0;
                        do {
                          Z2 = f2 << 1;
                          ya2 = +g[Fa2 + 272 + (Z2 << 2) >> 2];
                          za2 = +g[Fa2 + 272 + (Z2 + 3 << 2) >> 2];
                          Da2 = +g[Fa2 + 272 + (Z2 + 2 << 2) >> 2];
                          Ea2 = +g[Fa2 + 272 + ((Z2 | 1) << 2) >> 2];
                          h2 = h2 + (ya2 * za2 - Da2 * Ea2);
                          t2 = t2 + (ya2 + Da2) * (ya2 * za2 - Da2 * Ea2);
                          s2 = s2 + (za2 + Ea2) * (ya2 * za2 - Da2 * Ea2);
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) != (a2 | 0));
                        Z2 = o2 << 1;
                        n2 = +g[Fa2 + 272 + (Z2 + -2 << 2) >> 2];
                        p2 = +g[Fa2 + 272 + 4 >> 2];
                        q2 = +g[Fa2 + 272 >> 2];
                        r2 = +g[Fa2 + 272 + (Z2 + -1 << 2) >> 2];
                        h2 = h2 + (n2 * p2 - q2 * r2);
                        if (+F(+h2) > 11920928955078125e-23)
                          j2 = 1 / (h2 * 3);
                        else
                          j2 = 999999984306749400;
                        if ((o2 | 0) > 0) {
                          h2 = j2 * (s2 + (n2 * p2 - q2 * r2) * (r2 + p2));
                          j2 = j2 * (t2 + (n2 * p2 - q2 * r2) * (n2 + q2));
                          a2 = Fa2 + 112 | 0;
                          k2 = Fa2 + 112 | 0;
                          m2 = Fa2 + 448 | 0;
                          Aa2 = 119;
                          break;
                        }
                        m2 = e2;
                        e2 = Fa2 + 112 | 0;
                        f2 = 0;
                      } else {
                        e2 = 0;
                        f2 = o2;
                        a2 = Fa2 + 112 | 0;
                        k2 = Fa2 + 112 | 0;
                        Aa2 = 111;
                      }
                    while (0);
                  if ((Aa2 | 0) == 111) {
                    h2 = +g[Fa2 + 272 + 4 >> 2];
                    j2 = +g[Fa2 + 272 >> 2];
                    Aa2 = 116;
                  }
                  if ((Aa2 | 0) == 116) {
                    o2 = f2;
                    m2 = Fa2 + 448 | 0;
                    Aa2 = 119;
                  }
                  if ((Aa2 | 0) == 119) {
                    f2 = 0;
                    do {
                      Aa2 = f2 << 1;
                      g[Fa2 + 448 + (f2 << 2) >> 2] = +O(+(+g[Fa2 + 272 + ((Aa2 | 1) << 2) >> 2] - h2), +(+g[Fa2 + 272 + (Aa2 << 2) >> 2] - j2));
                      f2 = f2 + 1 | 0;
                    } while ((f2 | 0) != (o2 | 0));
                    f2 = 0;
                    do {
                      c[Fa2 + 416 + (f2 << 2) >> 2] = 1;
                      f2 = f2 + 1 | 0;
                    } while ((f2 | 0) != (o2 | 0));
                    m2 = e2;
                    e2 = a2;
                    f2 = 1;
                  }
                  a2 = Fa2 + 416 + (m2 << 2) | 0;
                  c[a2 >> 2] = 0;
                  c[e2 >> 2] = m2;
                  d:
                    do
                      if ((D2 | 0) > 1) {
                        p2 = +g[Fa2 + 448 + (m2 << 2) >> 2];
                        if (f2) {
                          f2 = 1;
                          a2 = Fa2 + 112 + 4 | 0;
                        } else {
                          e2 = 1;
                          f2 = Fa2 + 112 + 4 | 0;
                          while (1) {
                            c[f2 >> 2] = m2;
                            c[a2 >> 2] = 0;
                            e2 = e2 + 1 | 0;
                            if ((e2 | 0) == (D2 | 0))
                              break d;
                            else
                              f2 = f2 + 4 | 0;
                          }
                        }
                        while (1) {
                          n2 = 6.2831854820251465 / +(D2 | 0) * +(f2 | 0) + p2;
                          n2 = n2 > 3.1415927410125732 ? n2 + -6.2831854820251465 : n2;
                          c[a2 >> 2] = m2;
                          j2 = 1e9;
                          k2 = 0;
                          e2 = m2;
                          while (1) {
                            do
                              if (!(c[Fa2 + 416 + (k2 << 2) >> 2] | 0))
                                h2 = j2;
                              else {
                                h2 = +F(+(+g[Fa2 + 448 + (k2 << 2) >> 2] - n2));
                                h2 = h2 > 3.1415927410125732 ? 6.2831854820251465 - h2 : h2;
                                if (!(h2 < j2)) {
                                  h2 = j2;
                                  break;
                                }
                                c[a2 >> 2] = k2;
                                e2 = k2;
                              }
                            while (0);
                            k2 = k2 + 1 | 0;
                            if ((k2 | 0) == (o2 | 0))
                              break;
                            else
                              j2 = h2;
                          }
                          c[Fa2 + 416 + (e2 << 2) >> 2] = 0;
                          f2 = f2 + 1 | 0;
                          if ((f2 | 0) == (D2 | 0))
                            break;
                          else
                            a2 = a2 + 4 | 0;
                        }
                      }
                    while (0);
                  if ((D2 | 0) > 0) {
                    f2 = fa2 + 8 | 0;
                    j2 = (c[l >> 2] = Ba2, +g[l >> 2]);
                    h2 = (c[l >> 2] = Ca2, +g[l >> 2]);
                    if (da2) {
                      e2 = 0;
                      do {
                        Ca2 = c[Fa2 + 112 + (e2 << 2) >> 2] | 0;
                        g[Fa2 + 448 >> 2] = +g[Fa2 + 176 + (Ca2 * 3 << 2) >> 2] + +g[fa2 >> 2];
                        g[Fa2 + 448 + 4 >> 2] = +g[Fa2 + 176 + ((Ca2 * 3 | 0) + 1 << 2) >> 2] + +g[ea2 >> 2];
                        g[Fa2 + 448 + 8 >> 2] = +g[Fa2 + 176 + ((Ca2 * 3 | 0) + 2 << 2) >> 2] + +g[f2 >> 2];
                        Ba2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                        g[Fa2 + 416 >> 2] = -ga2;
                        g[Fa2 + 416 + 4 >> 2] = -j2;
                        g[Fa2 + 416 + 8 >> 2] = -h2;
                        g[Fa2 + 416 + 12 >> 2] = 0;
                        Tb[Ba2 & 15](d2, Fa2 + 416 | 0, Fa2 + 448 | 0, -+g[Fa2 + 144 + (Ca2 << 2) >> 2]);
                        e2 = e2 + 1 | 0;
                      } while ((e2 | 0) < (D2 | 0));
                    } else {
                      e2 = 0;
                      do {
                        Ba2 = c[Fa2 + 112 + (e2 << 2) >> 2] | 0;
                        ya2 = +g[Fa2 + 176 + (Ba2 * 3 << 2) >> 2] + +g[fa2 >> 2];
                        g[Fa2 + 448 >> 2] = ya2;
                        za2 = +g[Fa2 + 176 + ((Ba2 * 3 | 0) + 1 << 2) >> 2] + +g[ea2 >> 2];
                        g[Fa2 + 448 + 4 >> 2] = za2;
                        Da2 = +g[Fa2 + 176 + ((Ba2 * 3 | 0) + 2 << 2) >> 2] + +g[f2 >> 2];
                        g[Fa2 + 448 + 8 >> 2] = Da2;
                        Ca2 = c[(c[d2 >> 2] | 0) + 16 >> 2] | 0;
                        g[Fa2 + 416 >> 2] = -ga2;
                        g[Fa2 + 416 + 4 >> 2] = -j2;
                        g[Fa2 + 416 + 8 >> 2] = -h2;
                        g[Fa2 + 416 + 12 >> 2] = 0;
                        Ea2 = +g[Fa2 + 144 + (Ba2 << 2) >> 2];
                        g[Fa2 + 96 >> 2] = ya2 - ga2 * Ea2;
                        g[Fa2 + 96 + 4 >> 2] = za2 - Ea2 * j2;
                        g[Fa2 + 96 + 8 >> 2] = Da2 - Ea2 * h2;
                        g[Fa2 + 96 + 12 >> 2] = 0;
                        Tb[Ca2 & 15](d2, Fa2 + 416 | 0, Fa2 + 96 | 0, -Ea2);
                        e2 = e2 + 1 | 0;
                      } while ((e2 | 0) < (D2 | 0));
                    }
                  }
                }
              while (0);
          }
          i = Fa2;
          return;
        }
        function ic(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0;
          H2 = i;
          i = i + 16 | 0;
          do
            if (a2 >>> 0 < 245) {
              r2 = a2 >>> 0 < 11 ? 16 : a2 + 11 & -8;
              q2 = c[6327] | 0;
              if (q2 >>> (r2 >>> 3) & 3 | 0) {
                b2 = 25348 + ((q2 >>> (r2 >>> 3) & 1 ^ 1) + (r2 >>> 3) << 1 << 2) | 0;
                a2 = c[b2 + 8 >> 2] | 0;
                d2 = c[a2 + 8 >> 2] | 0;
                do
                  if ((b2 | 0) != (d2 | 0)) {
                    if (d2 >>> 0 < (c[6331] | 0) >>> 0)
                      Ua();
                    if ((c[d2 + 12 >> 2] | 0) == (a2 | 0)) {
                      c[d2 + 12 >> 2] = b2;
                      c[b2 + 8 >> 2] = d2;
                      break;
                    } else
                      Ua();
                  } else
                    c[6327] = q2 & ~(1 << (q2 >>> (r2 >>> 3) & 1 ^ 1) + (r2 >>> 3));
                while (0);
                G2 = (q2 >>> (r2 >>> 3) & 1 ^ 1) + (r2 >>> 3) << 3;
                c[a2 + 4 >> 2] = G2 | 3;
                c[a2 + G2 + 4 >> 2] = c[a2 + G2 + 4 >> 2] | 1;
                G2 = a2 + 8 | 0;
                i = H2;
                return G2 | 0;
              }
              p2 = c[6329] | 0;
              if (r2 >>> 0 > p2 >>> 0) {
                if (q2 >>> (r2 >>> 3) | 0) {
                  b2 = q2 >>> (r2 >>> 3) << (r2 >>> 3) & (2 << (r2 >>> 3) | 0 - (2 << (r2 >>> 3)));
                  e2 = ((b2 & 0 - b2) + -1 | 0) >>> (((b2 & 0 - b2) + -1 | 0) >>> 12 & 16);
                  d2 = e2 >>> (e2 >>> 5 & 8) >>> (e2 >>> (e2 >>> 5 & 8) >>> 2 & 4);
                  d2 = (e2 >>> 5 & 8 | ((b2 & 0 - b2) + -1 | 0) >>> 12 & 16 | e2 >>> (e2 >>> 5 & 8) >>> 2 & 4 | d2 >>> 1 & 2 | d2 >>> (d2 >>> 1 & 2) >>> 1 & 1) + (d2 >>> (d2 >>> 1 & 2) >>> (d2 >>> (d2 >>> 1 & 2) >>> 1 & 1)) | 0;
                  e2 = c[25348 + (d2 << 1 << 2) + 8 >> 2] | 0;
                  b2 = c[e2 + 8 >> 2] | 0;
                  do
                    if ((25348 + (d2 << 1 << 2) | 0) != (b2 | 0)) {
                      if (b2 >>> 0 < (c[6331] | 0) >>> 0)
                        Ua();
                      if ((c[b2 + 12 >> 2] | 0) == (e2 | 0)) {
                        c[b2 + 12 >> 2] = 25348 + (d2 << 1 << 2);
                        c[25348 + (d2 << 1 << 2) + 8 >> 2] = b2;
                        f2 = q2;
                        break;
                      } else
                        Ua();
                    } else {
                      c[6327] = q2 & ~(1 << d2);
                      f2 = q2 & ~(1 << d2);
                    }
                  while (0);
                  c[e2 + 4 >> 2] = r2 | 3;
                  c[e2 + r2 + 4 >> 2] = (d2 << 3) - r2 | 1;
                  c[e2 + r2 + ((d2 << 3) - r2) >> 2] = (d2 << 3) - r2;
                  if (p2 | 0) {
                    a2 = c[6332] | 0;
                    if (f2 & 1 << (p2 >>> 3)) {
                      b2 = c[25348 + (p2 >>> 3 << 1 << 2) + 8 >> 2] | 0;
                      if (b2 >>> 0 < (c[6331] | 0) >>> 0)
                        Ua();
                      else {
                        h2 = b2;
                        j2 = 25348 + (p2 >>> 3 << 1 << 2) + 8 | 0;
                      }
                    } else {
                      c[6327] = f2 | 1 << (p2 >>> 3);
                      h2 = 25348 + (p2 >>> 3 << 1 << 2) | 0;
                      j2 = 25348 + (p2 >>> 3 << 1 << 2) + 8 | 0;
                    }
                    c[j2 >> 2] = a2;
                    c[h2 + 12 >> 2] = a2;
                    c[a2 + 8 >> 2] = h2;
                    c[a2 + 12 >> 2] = 25348 + (p2 >>> 3 << 1 << 2);
                  }
                  c[6329] = (d2 << 3) - r2;
                  c[6332] = e2 + r2;
                  G2 = e2 + 8 | 0;
                  i = H2;
                  return G2 | 0;
                }
                l2 = c[6328] | 0;
                if (l2) {
                  a2 = ((l2 & 0 - l2) + -1 | 0) >>> (((l2 & 0 - l2) + -1 | 0) >>> 12 & 16);
                  k2 = a2 >>> (a2 >>> 5 & 8) >>> (a2 >>> (a2 >>> 5 & 8) >>> 2 & 4);
                  k2 = c[25612 + ((a2 >>> 5 & 8 | ((l2 & 0 - l2) + -1 | 0) >>> 12 & 16 | a2 >>> (a2 >>> 5 & 8) >>> 2 & 4 | k2 >>> 1 & 2 | k2 >>> (k2 >>> 1 & 2) >>> 1 & 1) + (k2 >>> (k2 >>> 1 & 2) >>> (k2 >>> (k2 >>> 1 & 2) >>> 1 & 1)) << 2) >> 2] | 0;
                  a2 = k2;
                  j2 = k2;
                  k2 = (c[k2 + 4 >> 2] & -8) - r2 | 0;
                  while (1) {
                    b2 = c[a2 + 16 >> 2] | 0;
                    if (!b2) {
                      b2 = c[a2 + 20 >> 2] | 0;
                      if (!b2)
                        break;
                    }
                    G2 = (c[b2 + 4 >> 2] & -8) - r2 | 0;
                    F2 = G2 >>> 0 < k2 >>> 0;
                    a2 = b2;
                    j2 = F2 ? b2 : j2;
                    k2 = F2 ? G2 : k2;
                  }
                  f2 = c[6331] | 0;
                  if (j2 >>> 0 < f2 >>> 0)
                    Ua();
                  h2 = j2 + r2 | 0;
                  if (j2 >>> 0 >= h2 >>> 0)
                    Ua();
                  g2 = c[j2 + 24 >> 2] | 0;
                  b2 = c[j2 + 12 >> 2] | 0;
                  do
                    if ((b2 | 0) == (j2 | 0)) {
                      a2 = j2 + 20 | 0;
                      b2 = c[a2 >> 2] | 0;
                      if (!b2) {
                        a2 = j2 + 16 | 0;
                        b2 = c[a2 >> 2] | 0;
                        if (!b2) {
                          m2 = 0;
                          break;
                        }
                      }
                      while (1) {
                        d2 = b2 + 20 | 0;
                        e2 = c[d2 >> 2] | 0;
                        if (e2 | 0) {
                          b2 = e2;
                          a2 = d2;
                          continue;
                        }
                        d2 = b2 + 16 | 0;
                        e2 = c[d2 >> 2] | 0;
                        if (!e2)
                          break;
                        else {
                          b2 = e2;
                          a2 = d2;
                        }
                      }
                      if (a2 >>> 0 < f2 >>> 0)
                        Ua();
                      else {
                        c[a2 >> 2] = 0;
                        m2 = b2;
                        break;
                      }
                    } else {
                      a2 = c[j2 + 8 >> 2] | 0;
                      if (a2 >>> 0 < f2 >>> 0)
                        Ua();
                      if ((c[a2 + 12 >> 2] | 0) != (j2 | 0))
                        Ua();
                      if ((c[b2 + 8 >> 2] | 0) == (j2 | 0)) {
                        c[a2 + 12 >> 2] = b2;
                        c[b2 + 8 >> 2] = a2;
                        m2 = b2;
                        break;
                      } else
                        Ua();
                    }
                  while (0);
                  do
                    if (g2 | 0) {
                      b2 = c[j2 + 28 >> 2] | 0;
                      if ((j2 | 0) == (c[25612 + (b2 << 2) >> 2] | 0)) {
                        c[25612 + (b2 << 2) >> 2] = m2;
                        if (!m2) {
                          c[6328] = l2 & ~(1 << b2);
                          break;
                        }
                      } else {
                        if (g2 >>> 0 < (c[6331] | 0) >>> 0)
                          Ua();
                        if ((c[g2 + 16 >> 2] | 0) == (j2 | 0))
                          c[g2 + 16 >> 2] = m2;
                        else
                          c[g2 + 20 >> 2] = m2;
                        if (!m2)
                          break;
                      }
                      a2 = c[6331] | 0;
                      if (m2 >>> 0 < a2 >>> 0)
                        Ua();
                      c[m2 + 24 >> 2] = g2;
                      b2 = c[j2 + 16 >> 2] | 0;
                      do
                        if (b2 | 0)
                          if (b2 >>> 0 < a2 >>> 0)
                            Ua();
                          else {
                            c[m2 + 16 >> 2] = b2;
                            c[b2 + 24 >> 2] = m2;
                            break;
                          }
                      while (0);
                      b2 = c[j2 + 20 >> 2] | 0;
                      if (b2 | 0)
                        if (b2 >>> 0 < (c[6331] | 0) >>> 0)
                          Ua();
                        else {
                          c[m2 + 20 >> 2] = b2;
                          c[b2 + 24 >> 2] = m2;
                          break;
                        }
                    }
                  while (0);
                  if (k2 >>> 0 < 16) {
                    G2 = k2 + r2 | 0;
                    c[j2 + 4 >> 2] = G2 | 3;
                    G2 = j2 + G2 + 4 | 0;
                    c[G2 >> 2] = c[G2 >> 2] | 1;
                  } else {
                    c[j2 + 4 >> 2] = r2 | 3;
                    c[h2 + 4 >> 2] = k2 | 1;
                    c[h2 + k2 >> 2] = k2;
                    if (p2 | 0) {
                      a2 = c[6332] | 0;
                      if (q2 & 1 << (p2 >>> 3)) {
                        b2 = c[25348 + (p2 >>> 3 << 1 << 2) + 8 >> 2] | 0;
                        if (b2 >>> 0 < (c[6331] | 0) >>> 0)
                          Ua();
                        else {
                          n2 = b2;
                          o2 = 25348 + (p2 >>> 3 << 1 << 2) + 8 | 0;
                        }
                      } else {
                        c[6327] = q2 | 1 << (p2 >>> 3);
                        n2 = 25348 + (p2 >>> 3 << 1 << 2) | 0;
                        o2 = 25348 + (p2 >>> 3 << 1 << 2) + 8 | 0;
                      }
                      c[o2 >> 2] = a2;
                      c[n2 + 12 >> 2] = a2;
                      c[a2 + 8 >> 2] = n2;
                      c[a2 + 12 >> 2] = 25348 + (p2 >>> 3 << 1 << 2);
                    }
                    c[6329] = k2;
                    c[6332] = h2;
                  }
                  G2 = j2 + 8 | 0;
                  i = H2;
                  return G2 | 0;
                }
              }
            } else if (a2 >>> 0 <= 4294967231) {
              r2 = a2 + 11 & -8;
              l2 = c[6328] | 0;
              if (l2) {
                if ((a2 + 11 | 0) >>> 8)
                  if (r2 >>> 0 > 16777215)
                    k2 = 31;
                  else {
                    k2 = (a2 + 11 | 0) >>> 8 << ((((a2 + 11 | 0) >>> 8) + 1048320 | 0) >>> 16 & 8);
                    k2 = 14 - ((k2 + 520192 | 0) >>> 16 & 4 | (((a2 + 11 | 0) >>> 8) + 1048320 | 0) >>> 16 & 8 | ((k2 << ((k2 + 520192 | 0) >>> 16 & 4)) + 245760 | 0) >>> 16 & 2) + (k2 << ((k2 + 520192 | 0) >>> 16 & 4) << (((k2 << ((k2 + 520192 | 0) >>> 16 & 4)) + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
                    k2 = r2 >>> (k2 + 7 | 0) & 1 | k2 << 1;
                  }
                else
                  k2 = 0;
                a2 = c[25612 + (k2 << 2) >> 2] | 0;
                a:
                  do
                    if (!a2) {
                      a2 = 0;
                      e2 = 0;
                      d2 = 0 - r2 | 0;
                      z2 = 86;
                    } else {
                      e2 = 0;
                      d2 = 0 - r2 | 0;
                      j2 = r2 << ((k2 | 0) == 31 ? 0 : 25 - (k2 >>> 1) | 0);
                      h2 = 0;
                      while (1) {
                        f2 = (c[a2 + 4 >> 2] & -8) - r2 | 0;
                        if (f2 >>> 0 < d2 >>> 0)
                          if (!f2) {
                            h2 = a2;
                            d2 = 0;
                            e2 = a2;
                            z2 = 90;
                            break a;
                          } else {
                            e2 = a2;
                            d2 = f2;
                          }
                        f2 = c[a2 + 20 >> 2] | 0;
                        a2 = c[a2 + 16 + (j2 >>> 31 << 2) >> 2] | 0;
                        h2 = (f2 | 0) == 0 | (f2 | 0) == (a2 | 0) ? h2 : f2;
                        f2 = (a2 | 0) == 0;
                        if (f2) {
                          a2 = h2;
                          z2 = 86;
                          break;
                        } else
                          j2 = j2 << (f2 & 1 ^ 1);
                      }
                    }
                  while (0);
                if ((z2 | 0) == 86) {
                  if ((a2 | 0) == 0 & (e2 | 0) == 0) {
                    a2 = 2 << k2;
                    if (!(l2 & (a2 | 0 - a2)))
                      break;
                    n2 = (l2 & (a2 | 0 - a2) & 0 - (l2 & (a2 | 0 - a2))) + -1 | 0;
                    o2 = n2 >>> (n2 >>> 12 & 16) >>> (n2 >>> (n2 >>> 12 & 16) >>> 5 & 8);
                    a2 = o2 >>> (o2 >>> 2 & 4) >>> (o2 >>> (o2 >>> 2 & 4) >>> 1 & 2);
                    a2 = c[25612 + ((n2 >>> (n2 >>> 12 & 16) >>> 5 & 8 | n2 >>> 12 & 16 | o2 >>> 2 & 4 | o2 >>> (o2 >>> 2 & 4) >>> 1 & 2 | a2 >>> 1 & 1) + (a2 >>> (a2 >>> 1 & 1)) << 2) >> 2] | 0;
                  }
                  if (!a2) {
                    k2 = e2;
                    j2 = d2;
                  } else {
                    h2 = e2;
                    e2 = a2;
                    z2 = 90;
                  }
                }
                if ((z2 | 0) == 90)
                  while (1) {
                    z2 = 0;
                    f2 = (c[e2 + 4 >> 2] & -8) - r2 | 0;
                    a2 = f2 >>> 0 < d2 >>> 0;
                    d2 = a2 ? f2 : d2;
                    a2 = a2 ? e2 : h2;
                    f2 = c[e2 + 16 >> 2] | 0;
                    if (f2 | 0) {
                      h2 = a2;
                      e2 = f2;
                      z2 = 90;
                      continue;
                    }
                    e2 = c[e2 + 20 >> 2] | 0;
                    if (!e2) {
                      k2 = a2;
                      j2 = d2;
                      break;
                    } else {
                      h2 = a2;
                      z2 = 90;
                    }
                  }
                if ((k2 | 0) != 0 ? j2 >>> 0 < ((c[6329] | 0) - r2 | 0) >>> 0 : 0) {
                  f2 = c[6331] | 0;
                  if (k2 >>> 0 < f2 >>> 0)
                    Ua();
                  h2 = k2 + r2 | 0;
                  if (k2 >>> 0 >= h2 >>> 0)
                    Ua();
                  g2 = c[k2 + 24 >> 2] | 0;
                  b2 = c[k2 + 12 >> 2] | 0;
                  do
                    if ((b2 | 0) == (k2 | 0)) {
                      a2 = k2 + 20 | 0;
                      b2 = c[a2 >> 2] | 0;
                      if (!b2) {
                        a2 = k2 + 16 | 0;
                        b2 = c[a2 >> 2] | 0;
                        if (!b2) {
                          p2 = 0;
                          break;
                        }
                      }
                      while (1) {
                        d2 = b2 + 20 | 0;
                        e2 = c[d2 >> 2] | 0;
                        if (e2 | 0) {
                          b2 = e2;
                          a2 = d2;
                          continue;
                        }
                        d2 = b2 + 16 | 0;
                        e2 = c[d2 >> 2] | 0;
                        if (!e2)
                          break;
                        else {
                          b2 = e2;
                          a2 = d2;
                        }
                      }
                      if (a2 >>> 0 < f2 >>> 0)
                        Ua();
                      else {
                        c[a2 >> 2] = 0;
                        p2 = b2;
                        break;
                      }
                    } else {
                      a2 = c[k2 + 8 >> 2] | 0;
                      if (a2 >>> 0 < f2 >>> 0)
                        Ua();
                      if ((c[a2 + 12 >> 2] | 0) != (k2 | 0))
                        Ua();
                      if ((c[b2 + 8 >> 2] | 0) == (k2 | 0)) {
                        c[a2 + 12 >> 2] = b2;
                        c[b2 + 8 >> 2] = a2;
                        p2 = b2;
                        break;
                      } else
                        Ua();
                    }
                  while (0);
                  do
                    if (g2) {
                      b2 = c[k2 + 28 >> 2] | 0;
                      if ((k2 | 0) == (c[25612 + (b2 << 2) >> 2] | 0)) {
                        c[25612 + (b2 << 2) >> 2] = p2;
                        if (!p2) {
                          c[6328] = l2 & ~(1 << b2);
                          x2 = l2 & ~(1 << b2);
                          break;
                        }
                      } else {
                        if (g2 >>> 0 < (c[6331] | 0) >>> 0)
                          Ua();
                        if ((c[g2 + 16 >> 2] | 0) == (k2 | 0))
                          c[g2 + 16 >> 2] = p2;
                        else
                          c[g2 + 20 >> 2] = p2;
                        if (!p2) {
                          x2 = l2;
                          break;
                        }
                      }
                      a2 = c[6331] | 0;
                      if (p2 >>> 0 < a2 >>> 0)
                        Ua();
                      c[p2 + 24 >> 2] = g2;
                      b2 = c[k2 + 16 >> 2] | 0;
                      do
                        if (b2 | 0)
                          if (b2 >>> 0 < a2 >>> 0)
                            Ua();
                          else {
                            c[p2 + 16 >> 2] = b2;
                            c[b2 + 24 >> 2] = p2;
                            break;
                          }
                      while (0);
                      b2 = c[k2 + 20 >> 2] | 0;
                      if (b2)
                        if (b2 >>> 0 < (c[6331] | 0) >>> 0)
                          Ua();
                        else {
                          c[p2 + 20 >> 2] = b2;
                          c[b2 + 24 >> 2] = p2;
                          x2 = l2;
                          break;
                        }
                      else
                        x2 = l2;
                    } else
                      x2 = l2;
                  while (0);
                  do
                    if (j2 >>> 0 >= 16) {
                      c[k2 + 4 >> 2] = r2 | 3;
                      c[h2 + 4 >> 2] = j2 | 1;
                      c[h2 + j2 >> 2] = j2;
                      a2 = j2 >>> 3;
                      if (j2 >>> 0 < 256) {
                        b2 = c[6327] | 0;
                        if (b2 & 1 << a2) {
                          b2 = c[25348 + (a2 << 1 << 2) + 8 >> 2] | 0;
                          if (b2 >>> 0 < (c[6331] | 0) >>> 0)
                            Ua();
                          else {
                            q2 = b2;
                            u2 = 25348 + (a2 << 1 << 2) + 8 | 0;
                          }
                        } else {
                          c[6327] = b2 | 1 << a2;
                          q2 = 25348 + (a2 << 1 << 2) | 0;
                          u2 = 25348 + (a2 << 1 << 2) + 8 | 0;
                        }
                        c[u2 >> 2] = h2;
                        c[q2 + 12 >> 2] = h2;
                        c[h2 + 8 >> 2] = q2;
                        c[h2 + 12 >> 2] = 25348 + (a2 << 1 << 2);
                        break;
                      }
                      b2 = j2 >>> 8;
                      if (b2)
                        if (j2 >>> 0 > 16777215)
                          b2 = 31;
                        else {
                          G2 = b2 << ((b2 + 1048320 | 0) >>> 16 & 8) << (((b2 << ((b2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4);
                          b2 = 14 - (((b2 << ((b2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4 | (b2 + 1048320 | 0) >>> 16 & 8 | (G2 + 245760 | 0) >>> 16 & 2) + (G2 << ((G2 + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
                          b2 = j2 >>> (b2 + 7 | 0) & 1 | b2 << 1;
                        }
                      else
                        b2 = 0;
                      d2 = 25612 + (b2 << 2) | 0;
                      c[h2 + 28 >> 2] = b2;
                      c[h2 + 16 + 4 >> 2] = 0;
                      c[h2 + 16 >> 2] = 0;
                      a2 = 1 << b2;
                      if (!(x2 & a2)) {
                        c[6328] = x2 | a2;
                        c[d2 >> 2] = h2;
                        c[h2 + 24 >> 2] = d2;
                        c[h2 + 12 >> 2] = h2;
                        c[h2 + 8 >> 2] = h2;
                        break;
                      }
                      a2 = j2 << ((b2 | 0) == 31 ? 0 : 25 - (b2 >>> 1) | 0);
                      e2 = c[d2 >> 2] | 0;
                      while (1) {
                        if ((c[e2 + 4 >> 2] & -8 | 0) == (j2 | 0)) {
                          z2 = 148;
                          break;
                        }
                        d2 = e2 + 16 + (a2 >>> 31 << 2) | 0;
                        b2 = c[d2 >> 2] | 0;
                        if (!b2) {
                          z2 = 145;
                          break;
                        } else {
                          a2 = a2 << 1;
                          e2 = b2;
                        }
                      }
                      if ((z2 | 0) == 145)
                        if (d2 >>> 0 < (c[6331] | 0) >>> 0)
                          Ua();
                        else {
                          c[d2 >> 2] = h2;
                          c[h2 + 24 >> 2] = e2;
                          c[h2 + 12 >> 2] = h2;
                          c[h2 + 8 >> 2] = h2;
                          break;
                        }
                      else if ((z2 | 0) == 148) {
                        b2 = e2 + 8 | 0;
                        a2 = c[b2 >> 2] | 0;
                        G2 = c[6331] | 0;
                        if (a2 >>> 0 >= G2 >>> 0 & e2 >>> 0 >= G2 >>> 0) {
                          c[a2 + 12 >> 2] = h2;
                          c[b2 >> 2] = h2;
                          c[h2 + 8 >> 2] = a2;
                          c[h2 + 12 >> 2] = e2;
                          c[h2 + 24 >> 2] = 0;
                          break;
                        } else
                          Ua();
                      }
                    } else {
                      G2 = j2 + r2 | 0;
                      c[k2 + 4 >> 2] = G2 | 3;
                      G2 = k2 + G2 + 4 | 0;
                      c[G2 >> 2] = c[G2 >> 2] | 1;
                    }
                  while (0);
                  G2 = k2 + 8 | 0;
                  i = H2;
                  return G2 | 0;
                }
              }
            } else
              r2 = -1;
          while (0);
          d2 = c[6329] | 0;
          if (d2 >>> 0 >= r2 >>> 0) {
            b2 = d2 - r2 | 0;
            a2 = c[6332] | 0;
            if (b2 >>> 0 > 15) {
              G2 = a2 + r2 | 0;
              c[6332] = G2;
              c[6329] = b2;
              c[G2 + 4 >> 2] = b2 | 1;
              c[G2 + b2 >> 2] = b2;
              c[a2 + 4 >> 2] = r2 | 3;
            } else {
              c[6329] = 0;
              c[6332] = 0;
              c[a2 + 4 >> 2] = d2 | 3;
              c[a2 + d2 + 4 >> 2] = c[a2 + d2 + 4 >> 2] | 1;
            }
            G2 = a2 + 8 | 0;
            i = H2;
            return G2 | 0;
          }
          f2 = c[6330] | 0;
          if (f2 >>> 0 > r2 >>> 0) {
            E2 = f2 - r2 | 0;
            c[6330] = E2;
            G2 = c[6333] | 0;
            F2 = G2 + r2 | 0;
            c[6333] = F2;
            c[F2 + 4 >> 2] = E2 | 1;
            c[G2 + 4 >> 2] = r2 | 3;
            G2 = G2 + 8 | 0;
            i = H2;
            return G2 | 0;
          }
          if (!(c[6445] | 0)) {
            c[6447] = 4096;
            c[6446] = 4096;
            c[6448] = -1;
            c[6449] = -1;
            c[6450] = 0;
            c[6438] = 0;
            c[H2 >> 2] = H2 & -16 ^ 1431655768;
            c[6445] = H2 & -16 ^ 1431655768;
            a2 = 4096;
          } else
            a2 = c[6447] | 0;
          h2 = r2 + 48 | 0;
          j2 = r2 + 47 | 0;
          l2 = a2 + j2 | 0;
          k2 = 0 - a2 | 0;
          if ((l2 & k2) >>> 0 <= r2 >>> 0) {
            G2 = 0;
            i = H2;
            return G2 | 0;
          }
          a2 = c[6437] | 0;
          if (a2 | 0 ? (x2 = c[6435] | 0, (x2 + (l2 & k2) | 0) >>> 0 <= x2 >>> 0 ? 1 : (x2 + (l2 & k2) | 0) >>> 0 > a2 >>> 0) : 0) {
            G2 = 0;
            i = H2;
            return G2 | 0;
          }
          b:
            do
              if (!(c[6438] & 4)) {
                e2 = c[6333] | 0;
                c:
                  do
                    if (e2) {
                      d2 = 25756;
                      while (1) {
                        a2 = c[d2 >> 2] | 0;
                        if (a2 >>> 0 <= e2 >>> 0 ? (s2 = d2 + 4 | 0, (a2 + (c[s2 >> 2] | 0) | 0) >>> 0 > e2 >>> 0) : 0)
                          break;
                        a2 = c[d2 + 8 >> 2] | 0;
                        if (!a2) {
                          z2 = 172;
                          break c;
                        } else
                          d2 = a2;
                      }
                      if ((l2 - f2 & k2) >>> 0 < 2147483647) {
                        a2 = mo(l2 - f2 & k2 | 0) | 0;
                        if ((a2 | 0) == ((c[d2 >> 2] | 0) + (c[s2 >> 2] | 0) | 0)) {
                          if ((a2 | 0) != (-1 | 0)) {
                            h2 = l2 - f2 & k2;
                            g2 = a2;
                            z2 = 190;
                            break b;
                          }
                        } else {
                          b2 = l2 - f2 & k2;
                          z2 = 180;
                        }
                      }
                    } else
                      z2 = 172;
                  while (0);
                do
                  if (((z2 | 0) == 172 ? (g2 = mo(0) | 0, (g2 | 0) != (-1 | 0)) : 0) ? (b2 = c[6446] | 0, b2 = ((b2 + -1 & g2 | 0) == 0 ? 0 : (b2 + -1 + g2 & 0 - b2) - g2 | 0) + (l2 & k2) | 0, t2 = c[6435] | 0, b2 >>> 0 > r2 >>> 0 & b2 >>> 0 < 2147483647) : 0) {
                    x2 = c[6437] | 0;
                    if (x2 | 0 ? (b2 + t2 | 0) >>> 0 <= t2 >>> 0 | (b2 + t2 | 0) >>> 0 > x2 >>> 0 : 0)
                      break;
                    a2 = mo(b2 | 0) | 0;
                    if ((a2 | 0) == (g2 | 0)) {
                      h2 = b2;
                      z2 = 190;
                      break b;
                    } else
                      z2 = 180;
                  }
                while (0);
                d:
                  do
                    if ((z2 | 0) == 180) {
                      d2 = 0 - b2 | 0;
                      do
                        if (h2 >>> 0 > b2 >>> 0 & (b2 >>> 0 < 2147483647 & (a2 | 0) != (-1 | 0)) ? (v2 = c[6447] | 0, v2 = j2 - b2 + v2 & 0 - v2, v2 >>> 0 < 2147483647) : 0)
                          if ((mo(v2 | 0) | 0) == (-1 | 0)) {
                            mo(d2 | 0) | 0;
                            break d;
                          } else {
                            b2 = v2 + b2 | 0;
                            break;
                          }
                      while (0);
                      if ((a2 | 0) != (-1 | 0)) {
                        h2 = b2;
                        g2 = a2;
                        z2 = 190;
                        break b;
                      }
                    }
                  while (0);
                c[6438] = c[6438] | 4;
                z2 = 187;
              } else
                z2 = 187;
            while (0);
          if ((((z2 | 0) == 187 ? (l2 & k2) >>> 0 < 2147483647 : 0) ? (y2 = mo(l2 & k2 | 0) | 0, w2 = mo(0) | 0, y2 >>> 0 < w2 >>> 0 & ((y2 | 0) != (-1 | 0) & (w2 | 0) != (-1 | 0))) : 0) ? (w2 - y2 | 0) >>> 0 > (r2 + 40 | 0) >>> 0 : 0) {
            h2 = w2 - y2 | 0;
            g2 = y2;
            z2 = 190;
          }
          if ((z2 | 0) == 190) {
            b2 = (c[6435] | 0) + h2 | 0;
            c[6435] = b2;
            if (b2 >>> 0 > (c[6436] | 0) >>> 0)
              c[6436] = b2;
            j2 = c[6333] | 0;
            do
              if (j2) {
                b2 = 25756;
                while (1) {
                  a2 = c[b2 >> 2] | 0;
                  d2 = b2 + 4 | 0;
                  e2 = c[d2 >> 2] | 0;
                  if ((g2 | 0) == (a2 + e2 | 0)) {
                    z2 = 200;
                    break;
                  }
                  f2 = c[b2 + 8 >> 2] | 0;
                  if (!f2)
                    break;
                  else
                    b2 = f2;
                }
                if (((z2 | 0) == 200 ? (c[b2 + 12 >> 2] & 8 | 0) == 0 : 0) ? j2 >>> 0 < g2 >>> 0 & j2 >>> 0 >= a2 >>> 0 : 0) {
                  c[d2 >> 2] = e2 + h2;
                  F2 = (j2 + 8 & 7 | 0) == 0 ? 0 : 0 - (j2 + 8) & 7;
                  G2 = h2 - F2 + (c[6330] | 0) | 0;
                  c[6333] = j2 + F2;
                  c[6330] = G2;
                  c[j2 + F2 + 4 >> 2] = G2 | 1;
                  c[j2 + F2 + G2 + 4 >> 2] = 40;
                  c[6334] = c[6449];
                  break;
                }
                b2 = c[6331] | 0;
                if (g2 >>> 0 < b2 >>> 0) {
                  c[6331] = g2;
                  k2 = g2;
                } else
                  k2 = b2;
                a2 = g2 + h2 | 0;
                b2 = 25756;
                while (1) {
                  if ((c[b2 >> 2] | 0) == (a2 | 0)) {
                    z2 = 208;
                    break;
                  }
                  b2 = c[b2 + 8 >> 2] | 0;
                  if (!b2) {
                    a2 = 25756;
                    break;
                  }
                }
                if ((z2 | 0) == 208)
                  if (!(c[b2 + 12 >> 2] & 8)) {
                    c[b2 >> 2] = g2;
                    m2 = b2 + 4 | 0;
                    c[m2 >> 2] = (c[m2 >> 2] | 0) + h2;
                    m2 = g2 + 8 | 0;
                    m2 = g2 + ((m2 & 7 | 0) == 0 ? 0 : 0 - m2 & 7) | 0;
                    b2 = a2 + ((a2 + 8 & 7 | 0) == 0 ? 0 : 0 - (a2 + 8) & 7) | 0;
                    l2 = m2 + r2 | 0;
                    f2 = b2 - m2 - r2 | 0;
                    c[m2 + 4 >> 2] = r2 | 3;
                    do
                      if ((b2 | 0) != (j2 | 0)) {
                        if ((b2 | 0) == (c[6332] | 0)) {
                          G2 = (c[6329] | 0) + f2 | 0;
                          c[6329] = G2;
                          c[6332] = l2;
                          c[l2 + 4 >> 2] = G2 | 1;
                          c[l2 + G2 >> 2] = G2;
                          break;
                        }
                        j2 = c[b2 + 4 >> 2] | 0;
                        if ((j2 & 3 | 0) == 1) {
                          e:
                            do
                              if (j2 >>> 0 >= 256) {
                                h2 = c[b2 + 24 >> 2] | 0;
                                a2 = c[b2 + 12 >> 2] | 0;
                                do
                                  if ((a2 | 0) == (b2 | 0)) {
                                    a2 = c[b2 + 16 + 4 >> 2] | 0;
                                    if (!a2) {
                                      a2 = c[b2 + 16 >> 2] | 0;
                                      if (!a2) {
                                        E2 = 0;
                                        break;
                                      } else
                                        g2 = b2 + 16 | 0;
                                    } else
                                      g2 = b2 + 16 + 4 | 0;
                                    while (1) {
                                      d2 = a2 + 20 | 0;
                                      e2 = c[d2 >> 2] | 0;
                                      if (e2 | 0) {
                                        a2 = e2;
                                        g2 = d2;
                                        continue;
                                      }
                                      d2 = a2 + 16 | 0;
                                      e2 = c[d2 >> 2] | 0;
                                      if (!e2)
                                        break;
                                      else {
                                        a2 = e2;
                                        g2 = d2;
                                      }
                                    }
                                    if (g2 >>> 0 < k2 >>> 0)
                                      Ua();
                                    else {
                                      c[g2 >> 2] = 0;
                                      E2 = a2;
                                      break;
                                    }
                                  } else {
                                    d2 = c[b2 + 8 >> 2] | 0;
                                    if (d2 >>> 0 < k2 >>> 0)
                                      Ua();
                                    if ((c[d2 + 12 >> 2] | 0) != (b2 | 0))
                                      Ua();
                                    if ((c[a2 + 8 >> 2] | 0) == (b2 | 0)) {
                                      c[d2 + 12 >> 2] = a2;
                                      c[a2 + 8 >> 2] = d2;
                                      E2 = a2;
                                      break;
                                    } else
                                      Ua();
                                  }
                                while (0);
                                if (!h2)
                                  break;
                                a2 = c[b2 + 28 >> 2] | 0;
                                do
                                  if ((b2 | 0) != (c[25612 + (a2 << 2) >> 2] | 0)) {
                                    if (h2 >>> 0 < (c[6331] | 0) >>> 0)
                                      Ua();
                                    if ((c[h2 + 16 >> 2] | 0) == (b2 | 0))
                                      c[h2 + 16 >> 2] = E2;
                                    else
                                      c[h2 + 20 >> 2] = E2;
                                    if (!E2)
                                      break e;
                                  } else {
                                    c[25612 + (a2 << 2) >> 2] = E2;
                                    if (E2 | 0)
                                      break;
                                    c[6328] = c[6328] & ~(1 << a2);
                                    break e;
                                  }
                                while (0);
                                d2 = c[6331] | 0;
                                if (E2 >>> 0 < d2 >>> 0)
                                  Ua();
                                c[E2 + 24 >> 2] = h2;
                                a2 = c[b2 + 16 >> 2] | 0;
                                do
                                  if (a2 | 0)
                                    if (a2 >>> 0 < d2 >>> 0)
                                      Ua();
                                    else {
                                      c[E2 + 16 >> 2] = a2;
                                      c[a2 + 24 >> 2] = E2;
                                      break;
                                    }
                                while (0);
                                a2 = c[b2 + 16 + 4 >> 2] | 0;
                                if (!a2)
                                  break;
                                if (a2 >>> 0 < (c[6331] | 0) >>> 0)
                                  Ua();
                                else {
                                  c[E2 + 20 >> 2] = a2;
                                  c[a2 + 24 >> 2] = E2;
                                  break;
                                }
                              } else {
                                a2 = c[b2 + 8 >> 2] | 0;
                                d2 = c[b2 + 12 >> 2] | 0;
                                do
                                  if ((a2 | 0) != (25348 + (j2 >>> 3 << 1 << 2) | 0)) {
                                    if (a2 >>> 0 < k2 >>> 0)
                                      Ua();
                                    if ((c[a2 + 12 >> 2] | 0) == (b2 | 0))
                                      break;
                                    Ua();
                                  }
                                while (0);
                                if ((d2 | 0) == (a2 | 0)) {
                                  c[6327] = c[6327] & ~(1 << (j2 >>> 3));
                                  break;
                                }
                                do
                                  if ((d2 | 0) == (25348 + (j2 >>> 3 << 1 << 2) | 0))
                                    D2 = d2 + 8 | 0;
                                  else {
                                    if (d2 >>> 0 < k2 >>> 0)
                                      Ua();
                                    if ((c[d2 + 8 >> 2] | 0) == (b2 | 0)) {
                                      D2 = d2 + 8 | 0;
                                      break;
                                    }
                                    Ua();
                                  }
                                while (0);
                                c[a2 + 12 >> 2] = d2;
                                c[D2 >> 2] = a2;
                              }
                            while (0);
                          b2 = b2 + (j2 & -8) | 0;
                          f2 = (j2 & -8) + f2 | 0;
                        }
                        a2 = b2 + 4 | 0;
                        c[a2 >> 2] = c[a2 >> 2] & -2;
                        c[l2 + 4 >> 2] = f2 | 1;
                        c[l2 + f2 >> 2] = f2;
                        a2 = f2 >>> 3;
                        if (f2 >>> 0 < 256) {
                          b2 = c[6327] | 0;
                          do
                            if (!(b2 & 1 << a2)) {
                              c[6327] = b2 | 1 << a2;
                              F2 = 25348 + (a2 << 1 << 2) | 0;
                              G2 = 25348 + (a2 << 1 << 2) + 8 | 0;
                            } else {
                              b2 = c[25348 + (a2 << 1 << 2) + 8 >> 2] | 0;
                              if (b2 >>> 0 >= (c[6331] | 0) >>> 0) {
                                F2 = b2;
                                G2 = 25348 + (a2 << 1 << 2) + 8 | 0;
                                break;
                              }
                              Ua();
                            }
                          while (0);
                          c[G2 >> 2] = l2;
                          c[F2 + 12 >> 2] = l2;
                          c[l2 + 8 >> 2] = F2;
                          c[l2 + 12 >> 2] = 25348 + (a2 << 1 << 2);
                          break;
                        }
                        b2 = f2 >>> 8;
                        do
                          if (!b2)
                            b2 = 0;
                          else {
                            if (f2 >>> 0 > 16777215) {
                              b2 = 31;
                              break;
                            }
                            G2 = b2 << ((b2 + 1048320 | 0) >>> 16 & 8) << (((b2 << ((b2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4);
                            b2 = 14 - (((b2 << ((b2 + 1048320 | 0) >>> 16 & 8)) + 520192 | 0) >>> 16 & 4 | (b2 + 1048320 | 0) >>> 16 & 8 | (G2 + 245760 | 0) >>> 16 & 2) + (G2 << ((G2 + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
                            b2 = f2 >>> (b2 + 7 | 0) & 1 | b2 << 1;
                          }
                        while (0);
                        e2 = 25612 + (b2 << 2) | 0;
                        c[l2 + 28 >> 2] = b2;
                        c[l2 + 16 + 4 >> 2] = 0;
                        c[l2 + 16 >> 2] = 0;
                        a2 = c[6328] | 0;
                        d2 = 1 << b2;
                        if (!(a2 & d2)) {
                          c[6328] = a2 | d2;
                          c[e2 >> 2] = l2;
                          c[l2 + 24 >> 2] = e2;
                          c[l2 + 12 >> 2] = l2;
                          c[l2 + 8 >> 2] = l2;
                          break;
                        }
                        a2 = f2 << ((b2 | 0) == 31 ? 0 : 25 - (b2 >>> 1) | 0);
                        e2 = c[e2 >> 2] | 0;
                        while (1) {
                          if ((c[e2 + 4 >> 2] & -8 | 0) == (f2 | 0)) {
                            z2 = 278;
                            break;
                          }
                          d2 = e2 + 16 + (a2 >>> 31 << 2) | 0;
                          b2 = c[d2 >> 2] | 0;
                          if (!b2) {
                            z2 = 275;
                            break;
                          } else {
                            a2 = a2 << 1;
                            e2 = b2;
                          }
                        }
                        if ((z2 | 0) == 275)
                          if (d2 >>> 0 < (c[6331] | 0) >>> 0)
                            Ua();
                          else {
                            c[d2 >> 2] = l2;
                            c[l2 + 24 >> 2] = e2;
                            c[l2 + 12 >> 2] = l2;
                            c[l2 + 8 >> 2] = l2;
                            break;
                          }
                        else if ((z2 | 0) == 278) {
                          b2 = e2 + 8 | 0;
                          a2 = c[b2 >> 2] | 0;
                          G2 = c[6331] | 0;
                          if (a2 >>> 0 >= G2 >>> 0 & e2 >>> 0 >= G2 >>> 0) {
                            c[a2 + 12 >> 2] = l2;
                            c[b2 >> 2] = l2;
                            c[l2 + 8 >> 2] = a2;
                            c[l2 + 12 >> 2] = e2;
                            c[l2 + 24 >> 2] = 0;
                            break;
                          } else
                            Ua();
                        }
                      } else {
                        G2 = (c[6330] | 0) + f2 | 0;
                        c[6330] = G2;
                        c[6333] = l2;
                        c[l2 + 4 >> 2] = G2 | 1;
                      }
                    while (0);
                    G2 = m2 + 8 | 0;
                    i = H2;
                    return G2 | 0;
                  } else
                    a2 = 25756;
                while (1) {
                  b2 = c[a2 >> 2] | 0;
                  if (b2 >>> 0 <= j2 >>> 0 ? (A2 = b2 + (c[a2 + 4 >> 2] | 0) | 0, A2 >>> 0 > j2 >>> 0) : 0)
                    break;
                  a2 = c[a2 + 8 >> 2] | 0;
                }
                f2 = A2 + -47 + ((A2 + -47 + 8 & 7 | 0) == 0 ? 0 : 0 - (A2 + -47 + 8) & 7) | 0;
                f2 = f2 >>> 0 < (j2 + 16 | 0) >>> 0 ? j2 : f2;
                b2 = g2 + 8 | 0;
                b2 = (b2 & 7 | 0) == 0 ? 0 : 0 - b2 & 7;
                G2 = g2 + b2 | 0;
                b2 = h2 + -40 - b2 | 0;
                c[6333] = G2;
                c[6330] = b2;
                c[G2 + 4 >> 2] = b2 | 1;
                c[G2 + b2 + 4 >> 2] = 40;
                c[6334] = c[6449];
                c[f2 + 4 >> 2] = 27;
                c[f2 + 8 >> 2] = c[6439];
                c[f2 + 8 + 4 >> 2] = c[6440];
                c[f2 + 8 + 8 >> 2] = c[6441];
                c[f2 + 8 + 12 >> 2] = c[6442];
                c[6439] = g2;
                c[6440] = h2;
                c[6442] = 0;
                c[6441] = f2 + 8;
                b2 = f2 + 24 | 0;
                do {
                  b2 = b2 + 4 | 0;
                  c[b2 >> 2] = 7;
                } while ((b2 + 4 | 0) >>> 0 < A2 >>> 0);
                if ((f2 | 0) != (j2 | 0)) {
                  c[f2 + 4 >> 2] = c[f2 + 4 >> 2] & -2;
                  c[j2 + 4 >> 2] = f2 - j2 | 1;
                  c[f2 >> 2] = f2 - j2;
                  if ((f2 - j2 | 0) >>> 0 < 256) {
                    a2 = 25348 + ((f2 - j2 | 0) >>> 3 << 1 << 2) | 0;
                    b2 = c[6327] | 0;
                    if (b2 & 1 << ((f2 - j2 | 0) >>> 3)) {
                      b2 = c[a2 + 8 >> 2] | 0;
                      if (b2 >>> 0 < (c[6331] | 0) >>> 0)
                        Ua();
                      else {
                        B2 = b2;
                        C2 = a2 + 8 | 0;
                      }
                    } else {
                      c[6327] = b2 | 1 << ((f2 - j2 | 0) >>> 3);
                      B2 = a2;
                      C2 = a2 + 8 | 0;
                    }
                    c[C2 >> 2] = j2;
                    c[B2 + 12 >> 2] = j2;
                    c[j2 + 8 >> 2] = B2;
                    c[j2 + 12 >> 2] = a2;
                    break;
                  }
                  if ((f2 - j2 | 0) >>> 8)
                    if ((f2 - j2 | 0) >>> 0 > 16777215)
                      b2 = 31;
                    else {
                      b2 = (f2 - j2 | 0) >>> 8 << ((((f2 - j2 | 0) >>> 8) + 1048320 | 0) >>> 16 & 8);
                      b2 = 14 - ((b2 + 520192 | 0) >>> 16 & 4 | (((f2 - j2 | 0) >>> 8) + 1048320 | 0) >>> 16 & 8 | ((b2 << ((b2 + 520192 | 0) >>> 16 & 4)) + 245760 | 0) >>> 16 & 2) + (b2 << ((b2 + 520192 | 0) >>> 16 & 4) << (((b2 << ((b2 + 520192 | 0) >>> 16 & 4)) + 245760 | 0) >>> 16 & 2) >>> 15) | 0;
                      b2 = (f2 - j2 | 0) >>> (b2 + 7 | 0) & 1 | b2 << 1;
                    }
                  else
                    b2 = 0;
                  e2 = 25612 + (b2 << 2) | 0;
                  c[j2 + 28 >> 2] = b2;
                  c[j2 + 20 >> 2] = 0;
                  c[j2 + 16 >> 2] = 0;
                  a2 = c[6328] | 0;
                  d2 = 1 << b2;
                  if (!(a2 & d2)) {
                    c[6328] = a2 | d2;
                    c[e2 >> 2] = j2;
                    c[j2 + 24 >> 2] = e2;
                    c[j2 + 12 >> 2] = j2;
                    c[j2 + 8 >> 2] = j2;
                    break;
                  }
                  a2 = f2 - j2 << ((b2 | 0) == 31 ? 0 : 25 - (b2 >>> 1) | 0);
                  e2 = c[e2 >> 2] | 0;
                  while (1) {
                    if ((c[e2 + 4 >> 2] & -8 | 0) == (f2 - j2 | 0)) {
                      z2 = 304;
                      break;
                    }
                    d2 = e2 + 16 + (a2 >>> 31 << 2) | 0;
                    b2 = c[d2 >> 2] | 0;
                    if (!b2) {
                      z2 = 301;
                      break;
                    } else {
                      a2 = a2 << 1;
                      e2 = b2;
                    }
                  }
                  if ((z2 | 0) == 301)
                    if (d2 >>> 0 < (c[6331] | 0) >>> 0)
                      Ua();
                    else {
                      c[d2 >> 2] = j2;
                      c[j2 + 24 >> 2] = e2;
                      c[j2 + 12 >> 2] = j2;
                      c[j2 + 8 >> 2] = j2;
                      break;
                    }
                  else if ((z2 | 0) == 304) {
                    b2 = e2 + 8 | 0;
                    a2 = c[b2 >> 2] | 0;
                    G2 = c[6331] | 0;
                    if (a2 >>> 0 >= G2 >>> 0 & e2 >>> 0 >= G2 >>> 0) {
                      c[a2 + 12 >> 2] = j2;
                      c[b2 >> 2] = j2;
                      c[j2 + 8 >> 2] = a2;
                      c[j2 + 12 >> 2] = e2;
                      c[j2 + 24 >> 2] = 0;
                      break;
                    } else
                      Ua();
                  }
                }
              } else {
                G2 = c[6331] | 0;
                if ((G2 | 0) == 0 | g2 >>> 0 < G2 >>> 0)
                  c[6331] = g2;
                c[6439] = g2;
                c[6440] = h2;
                c[6442] = 0;
                c[6336] = c[6445];
                c[6335] = -1;
                b2 = 0;
                do {
                  G2 = 25348 + (b2 << 1 << 2) | 0;
                  c[G2 + 12 >> 2] = G2;
                  c[G2 + 8 >> 2] = G2;
                  b2 = b2 + 1 | 0;
                } while ((b2 | 0) != 32);
                G2 = g2 + 8 | 0;
                G2 = (G2 & 7 | 0) == 0 ? 0 : 0 - G2 & 7;
                F2 = g2 + G2 | 0;
                G2 = h2 + -40 - G2 | 0;
                c[6333] = F2;
                c[6330] = G2;
                c[F2 + 4 >> 2] = G2 | 1;
                c[F2 + G2 + 4 >> 2] = 40;
                c[6334] = c[6449];
              }
            while (0);
            b2 = c[6330] | 0;
            if (b2 >>> 0 > r2 >>> 0) {
              E2 = b2 - r2 | 0;
              c[6330] = E2;
              G2 = c[6333] | 0;
              F2 = G2 + r2 | 0;
              c[6333] = F2;
              c[F2 + 4 >> 2] = E2 | 1;
              c[G2 + 4 >> 2] = r2 | 3;
              G2 = G2 + 8 | 0;
              i = H2;
              return G2 | 0;
            }
          }
          c[6326] = 12;
          G2 = 0;
          i = H2;
          return G2 | 0;
        }
        function jc(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          var h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0;
          Q2 = i;
          i = i + 448 | 0;
          if (!(a[b2 + 527 >> 0] | 0)) {
            i = Q2;
            return;
          }
          P2 = c[b2 + 28 >> 2] | 0;
          C2 = +g[b2 + 348 >> 2];
          B2 = +g[b2 + 352 >> 2];
          J2 = +g[b2 + 356 >> 2];
          D2 = +g[P2 + 52 >> 2];
          E2 = C2 * +g[P2 + 4 >> 2] + B2 * +g[P2 + 8 >> 2] + J2 * +g[P2 + 12 >> 2] + D2;
          F2 = +g[P2 + 56 >> 2];
          H2 = C2 * +g[P2 + 20 >> 2] + B2 * +g[P2 + 24 >> 2] + J2 * +g[P2 + 28 >> 2] + F2;
          I2 = +g[P2 + 60 >> 2];
          J2 = C2 * +g[P2 + 36 >> 2] + B2 * +g[P2 + 40 >> 2] + J2 * +g[P2 + 44 >> 2] + I2;
          P2 = c[b2 + 32 >> 2] | 0;
          B2 = +g[b2 + 412 >> 2];
          C2 = +g[b2 + 416 >> 2];
          r2 = +g[b2 + 420 >> 2];
          k2 = +g[P2 + 52 >> 2];
          m2 = B2 * +g[P2 + 4 >> 2] + C2 * +g[P2 + 8 >> 2] + r2 * +g[P2 + 12 >> 2] + k2;
          n2 = +g[P2 + 56 >> 2];
          o2 = B2 * +g[P2 + 20 >> 2] + C2 * +g[P2 + 24 >> 2] + r2 * +g[P2 + 28 >> 2] + n2;
          q2 = +g[P2 + 60 >> 2];
          r2 = B2 * +g[P2 + 36 >> 2] + C2 * +g[P2 + 40 >> 2] + r2 * +g[P2 + 44 >> 2] + q2;
          if (!(a[b2 + 524 >> 0] | 0)) {
            A2 = +g[d2 + 192 >> 2] + +g[d2 + 80 >> 2];
            B2 = +g[d2 + 196 >> 2] + +g[d2 + 84 >> 2];
            z2 = +g[d2 + 200 >> 2] + +g[d2 + 88 >> 2];
            C2 = +g[e2 + 192 >> 2] + +g[e2 + 80 >> 2];
            y2 = +g[e2 + 196 >> 2] + +g[e2 + 84 >> 2];
            w2 = +g[e2 + 200 >> 2] + +g[e2 + 88 >> 2];
            s2 = +g[d2 + 176 >> 2] + +g[d2 + 64 >> 2] + ((J2 - I2) * B2 - (H2 - F2) * z2) - (+g[e2 + 176 >> 2] + +g[e2 + 64 >> 2] + ((r2 - q2) * y2 - (o2 - n2) * w2));
            w2 = +g[d2 + 180 >> 2] + +g[d2 + 68 >> 2] + ((E2 - D2) * z2 - (J2 - I2) * A2) - (+g[e2 + 180 >> 2] + +g[e2 + 68 >> 2] + ((m2 - k2) * w2 - (r2 - q2) * C2));
            y2 = +g[d2 + 184 >> 2] + +g[d2 + 72 >> 2] + ((H2 - F2) * A2 - (E2 - D2) * B2) - (+g[e2 + 184 >> 2] + +g[e2 + 72 >> 2] + ((o2 - n2) * C2 - (m2 - k2) * y2));
            t2 = (c[d2 + 240 >> 2] | 0) == 0;
            p2 = 0;
            do {
              C2 = 1 / +g[b2 + 48 + (p2 * 84 | 0) + 80 >> 2];
              u2 = b2 + 48 + (p2 * 84 | 0) | 0;
              B2 = +g[u2 >> 2];
              v2 = b2 + 48 + (p2 * 84 | 0) + 4 | 0;
              A2 = +g[v2 >> 2];
              x2 = b2 + 48 + (p2 * 84 | 0) + 8 | 0;
              z2 = +g[x2 >> 2];
              z2 = C2 * (((E2 - m2) * B2 + (H2 - o2) * A2 + (J2 - r2) * z2) * -0.30000001192092896 / f2) - C2 * (s2 * B2 + w2 * A2 + y2 * z2);
              g[b2 + 36 >> 2] = +g[b2 + 36 >> 2] + z2;
              A2 = +g[x2 >> 2];
              B2 = +g[v2 >> 2];
              C2 = +g[u2 >> 2];
              h2 = c[b2 + 28 >> 2] | 0;
              j2 = +g[h2 + 384 >> 2];
              if (!t2) {
                T2 = ((H2 - F2) * A2 - (J2 - I2) * B2) * +g[h2 + 336 >> 2] + ((J2 - I2) * C2 - (E2 - D2) * A2) * +g[h2 + 340 >> 2] + ((E2 - D2) * B2 - (H2 - F2) * C2) * +g[h2 + 344 >> 2];
                R2 = ((H2 - F2) * A2 - (J2 - I2) * B2) * +g[h2 + 320 >> 2] + ((J2 - I2) * C2 - (E2 - D2) * A2) * +g[h2 + 324 >> 2] + ((E2 - D2) * B2 - (H2 - F2) * C2) * +g[h2 + 328 >> 2];
                S2 = ((H2 - F2) * A2 - (J2 - I2) * B2) * +g[h2 + 304 >> 2] + ((J2 - I2) * C2 - (E2 - D2) * A2) * +g[h2 + 308 >> 2] + ((E2 - D2) * B2 - (H2 - F2) * C2) * +g[h2 + 312 >> 2];
                V2 = z2 * B2 * j2 * +g[d2 + 116 >> 2];
                U2 = z2 * A2 * j2 * +g[d2 + 120 >> 2];
                g[d2 + 64 >> 2] = z2 * C2 * j2 * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
                g[d2 + 68 >> 2] = V2 + +g[d2 + 68 >> 2];
                g[d2 + 72 >> 2] = U2 + +g[d2 + 72 >> 2];
                R2 = R2 * z2 * +g[d2 + 100 >> 2];
                j2 = T2 * z2 * +g[d2 + 104 >> 2];
                g[d2 + 80 >> 2] = S2 * z2 * +g[d2 + 96 >> 2] + +g[d2 + 80 >> 2];
                g[d2 + 84 >> 2] = R2 + +g[d2 + 84 >> 2];
                g[d2 + 88 >> 2] = j2 + +g[d2 + 88 >> 2];
              }
              h2 = c[b2 + 32 >> 2] | 0;
              j2 = +g[h2 + 384 >> 2];
              if (c[e2 + 240 >> 2] | 0) {
                V2 = ((o2 - n2) * A2 - (r2 - q2) * B2) * +g[h2 + 336 >> 2] + ((r2 - q2) * C2 - (m2 - k2) * A2) * +g[h2 + 340 >> 2] + ((m2 - k2) * B2 - (o2 - n2) * C2) * +g[h2 + 344 >> 2];
                U2 = ((o2 - n2) * A2 - (r2 - q2) * B2) * +g[h2 + 320 >> 2] + ((r2 - q2) * C2 - (m2 - k2) * A2) * +g[h2 + 324 >> 2] + ((m2 - k2) * B2 - (o2 - n2) * C2) * +g[h2 + 328 >> 2];
                T2 = ((o2 - n2) * A2 - (r2 - q2) * B2) * +g[h2 + 304 >> 2] + ((r2 - q2) * C2 - (m2 - k2) * A2) * +g[h2 + 308 >> 2] + ((m2 - k2) * B2 - (o2 - n2) * C2) * +g[h2 + 312 >> 2];
                R2 = j2 * +g[v2 >> 2] * -z2 * +g[e2 + 116 >> 2];
                S2 = j2 * +g[x2 >> 2] * -z2 * +g[e2 + 120 >> 2];
                g[e2 + 64 >> 2] = +g[e2 + 112 >> 2] * j2 * +g[u2 >> 2] * -z2 + +g[e2 + 64 >> 2];
                g[e2 + 68 >> 2] = R2 + +g[e2 + 68 >> 2];
                g[e2 + 72 >> 2] = S2 + +g[e2 + 72 >> 2];
                U2 = U2 * +g[e2 + 100 >> 2] * -z2;
                V2 = V2 * +g[e2 + 104 >> 2] * -z2;
                g[e2 + 80 >> 2] = T2 * +g[e2 + 96 >> 2] * -z2 + +g[e2 + 80 >> 2];
                g[e2 + 84 >> 2] = U2 + +g[e2 + 84 >> 2];
                g[e2 + 88 >> 2] = V2 + +g[e2 + 88 >> 2];
              }
              p2 = p2 + 1 | 0;
            } while ((p2 | 0) != 3);
          }
          do
            if (!(a[b2 + 552 >> 0] | 0)) {
              j2 = +g[b2 + 440 >> 2];
              if (!(j2 > 11920928955078125e-23)) {
                K2 = d2 + 80 | 0;
                p2 = d2 + 196 | 0;
                L2 = d2 + 84 | 0;
                t2 = d2 + 200 | 0;
                M2 = d2 + 88 | 0;
                u2 = e2 + 192 | 0;
                N2 = e2 + 80 | 0;
                v2 = e2 + 196 | 0;
                O2 = e2 + 84 | 0;
                x2 = e2 + 200 | 0;
                P2 = e2 + 88 | 0;
                h2 = d2 + 192 | 0;
                break;
              }
              k2 = +g[e2 + 192 >> 2] + +g[e2 + 80 >> 2] - (+g[d2 + 192 >> 2] + +g[d2 + 80 >> 2]);
              m2 = +g[e2 + 196 >> 2] + +g[e2 + 84 >> 2] - (+g[d2 + 196 >> 2] + +g[d2 + 84 >> 2]);
              n2 = +g[e2 + 200 >> 2] + +g[e2 + 88 >> 2] - (+g[d2 + 200 >> 2] + +g[d2 + 88 >> 2]);
              if (k2 * k2 + m2 * m2 + n2 * n2 > 11920928955078125e-23) {
                D2 = 1 / +G(+(k2 * k2 + m2 * m2 + n2 * n2));
                h2 = c[b2 + 28 >> 2] | 0;
                q2 = +g[h2 + 304 >> 2];
                r2 = +g[h2 + 320 >> 2];
                s2 = +g[h2 + 336 >> 2];
                w2 = +g[h2 + 308 >> 2];
                y2 = +g[h2 + 324 >> 2];
                z2 = +g[h2 + 340 >> 2];
                A2 = +g[h2 + 312 >> 2];
                B2 = +g[h2 + 328 >> 2];
                C2 = +g[h2 + 344 >> 2];
                h2 = c[b2 + 32 >> 2] | 0;
                j2 = j2 * (1 / (k2 * D2 * (q2 * k2 * D2 + m2 * D2 * r2 + n2 * D2 * s2) + m2 * D2 * (k2 * D2 * w2 + m2 * D2 * y2 + n2 * D2 * z2) + n2 * D2 * (k2 * D2 * A2 + m2 * D2 * B2 + n2 * D2 * C2) + (k2 * D2 * (k2 * D2 * +g[h2 + 304 >> 2] + m2 * D2 * +g[h2 + 320 >> 2] + n2 * D2 * +g[h2 + 336 >> 2]) + m2 * D2 * (k2 * D2 * +g[h2 + 308 >> 2] + m2 * D2 * +g[h2 + 324 >> 2] + n2 * D2 * +g[h2 + 340 >> 2]) + n2 * D2 * (k2 * D2 * +g[h2 + 312 >> 2] + m2 * D2 * +g[h2 + 328 >> 2] + n2 * D2 * +g[h2 + 344 >> 2]))));
                D2 = +G(+(n2 * j2 * n2 * j2 + (k2 * j2 * k2 * j2 + m2 * j2 * m2 * j2)));
                o2 = 1 / D2 * k2 * j2;
                k2 = 1 / D2 * m2 * j2;
                j2 = 1 / D2 * n2 * j2;
                if (c[d2 + 240 >> 2] | 0) {
                  V2 = D2 * 0 * +g[d2 + 116 >> 2];
                  U2 = D2 * 0 * +g[d2 + 120 >> 2];
                  g[d2 + 64 >> 2] = D2 * 0 * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
                  g[d2 + 68 >> 2] = V2 + +g[d2 + 68 >> 2];
                  g[d2 + 72 >> 2] = U2 + +g[d2 + 72 >> 2];
                  U2 = (o2 * r2 + k2 * y2 + j2 * B2) * D2 * +g[d2 + 100 >> 2];
                  V2 = (o2 * s2 + k2 * z2 + j2 * C2) * D2 * +g[d2 + 104 >> 2];
                  g[d2 + 80 >> 2] = (o2 * q2 + k2 * w2 + j2 * A2) * D2 * +g[d2 + 96 >> 2] + +g[d2 + 80 >> 2];
                  g[d2 + 84 >> 2] = U2 + +g[d2 + 84 >> 2];
                  g[d2 + 88 >> 2] = V2 + +g[d2 + 88 >> 2];
                  h2 = c[b2 + 32 >> 2] | 0;
                }
                if (c[e2 + 240 >> 2] | 0) {
                  V2 = o2 * +g[h2 + 336 >> 2] + k2 * +g[h2 + 340 >> 2] + j2 * +g[h2 + 344 >> 2];
                  U2 = o2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
                  T2 = o2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
                  R2 = D2 * -0 * +g[e2 + 116 >> 2];
                  S2 = D2 * -0 * +g[e2 + 120 >> 2];
                  g[e2 + 64 >> 2] = D2 * -0 * +g[e2 + 112 >> 2] + +g[e2 + 64 >> 2];
                  g[e2 + 68 >> 2] = R2 + +g[e2 + 68 >> 2];
                  g[e2 + 72 >> 2] = S2 + +g[e2 + 72 >> 2];
                  U2 = U2 * +g[e2 + 100 >> 2] * -D2;
                  V2 = V2 * +g[e2 + 104 >> 2] * -D2;
                  g[e2 + 80 >> 2] = T2 * +g[e2 + 96 >> 2] * -D2 + +g[e2 + 80 >> 2];
                  g[e2 + 84 >> 2] = U2 + +g[e2 + 84 >> 2];
                  g[e2 + 88 >> 2] = V2 + +g[e2 + 88 >> 2];
                  K2 = d2 + 80 | 0;
                  p2 = d2 + 196 | 0;
                  L2 = d2 + 84 | 0;
                  t2 = d2 + 200 | 0;
                  M2 = d2 + 88 | 0;
                  u2 = e2 + 192 | 0;
                  N2 = e2 + 80 | 0;
                  v2 = e2 + 196 | 0;
                  O2 = e2 + 84 | 0;
                  x2 = e2 + 200 | 0;
                  P2 = e2 + 88 | 0;
                  h2 = d2 + 192 | 0;
                } else {
                  K2 = d2 + 80 | 0;
                  p2 = d2 + 196 | 0;
                  L2 = d2 + 84 | 0;
                  t2 = d2 + 200 | 0;
                  M2 = d2 + 88 | 0;
                  u2 = e2 + 192 | 0;
                  N2 = e2 + 80 | 0;
                  v2 = e2 + 196 | 0;
                  O2 = e2 + 84 | 0;
                  x2 = e2 + 200 | 0;
                  P2 = e2 + 88 | 0;
                  h2 = d2 + 192 | 0;
                }
              } else {
                K2 = d2 + 80 | 0;
                p2 = d2 + 196 | 0;
                L2 = d2 + 84 | 0;
                t2 = d2 + 200 | 0;
                M2 = d2 + 88 | 0;
                u2 = e2 + 192 | 0;
                N2 = e2 + 80 | 0;
                v2 = e2 + 196 | 0;
                O2 = e2 + 84 | 0;
                x2 = e2 + 200 | 0;
                P2 = e2 + 88 | 0;
                h2 = d2 + 192 | 0;
              }
            } else {
              O2 = c[b2 + 28 >> 2] | 0;
              c[Q2 + 352 >> 2] = c[O2 + 4 >> 2];
              c[Q2 + 352 + 4 >> 2] = c[O2 + 4 + 4 >> 2];
              c[Q2 + 352 + 8 >> 2] = c[O2 + 4 + 8 >> 2];
              c[Q2 + 352 + 12 >> 2] = c[O2 + 4 + 12 >> 2];
              c[Q2 + 352 + 16 >> 2] = c[O2 + 20 >> 2];
              c[Q2 + 352 + 16 + 4 >> 2] = c[O2 + 20 + 4 >> 2];
              c[Q2 + 352 + 16 + 8 >> 2] = c[O2 + 20 + 8 >> 2];
              c[Q2 + 352 + 16 + 12 >> 2] = c[O2 + 20 + 12 >> 2];
              c[Q2 + 352 + 32 >> 2] = c[O2 + 36 >> 2];
              c[Q2 + 352 + 32 + 4 >> 2] = c[O2 + 36 + 4 >> 2];
              c[Q2 + 352 + 32 + 8 >> 2] = c[O2 + 36 + 8 >> 2];
              c[Q2 + 352 + 32 + 12 >> 2] = c[O2 + 36 + 12 >> 2];
              c[Q2 + 352 + 48 >> 2] = c[O2 + 52 >> 2];
              c[Q2 + 352 + 48 + 4 >> 2] = c[O2 + 52 + 4 >> 2];
              c[Q2 + 352 + 48 + 8 >> 2] = c[O2 + 52 + 8 >> 2];
              c[Q2 + 352 + 48 + 12 >> 2] = c[O2 + 52 + 12 >> 2];
              O2 = c[b2 + 32 >> 2] | 0;
              c[Q2 + 288 >> 2] = c[O2 + 4 >> 2];
              c[Q2 + 288 + 4 >> 2] = c[O2 + 4 + 4 >> 2];
              c[Q2 + 288 + 8 >> 2] = c[O2 + 4 + 8 >> 2];
              c[Q2 + 288 + 12 >> 2] = c[O2 + 4 + 12 >> 2];
              c[Q2 + 288 + 16 >> 2] = c[O2 + 20 >> 2];
              c[Q2 + 288 + 16 + 4 >> 2] = c[O2 + 20 + 4 >> 2];
              c[Q2 + 288 + 16 + 8 >> 2] = c[O2 + 20 + 8 >> 2];
              c[Q2 + 288 + 16 + 12 >> 2] = c[O2 + 20 + 12 >> 2];
              c[Q2 + 288 + 32 >> 2] = c[O2 + 36 >> 2];
              c[Q2 + 288 + 32 + 4 >> 2] = c[O2 + 36 + 4 >> 2];
              c[Q2 + 288 + 32 + 8 >> 2] = c[O2 + 36 + 8 >> 2];
              c[Q2 + 288 + 32 + 12 >> 2] = c[O2 + 36 + 12 >> 2];
              c[Q2 + 288 + 48 >> 2] = c[O2 + 52 >> 2];
              c[Q2 + 288 + 48 + 4 >> 2] = c[O2 + 52 + 4 >> 2];
              c[Q2 + 288 + 48 + 8 >> 2] = c[O2 + 52 + 8 >> 2];
              c[Q2 + 288 + 48 + 12 >> 2] = c[O2 + 52 + 12 >> 2];
              T2 = +g[d2 + 196 >> 2] + +g[d2 + 84 >> 2];
              s2 = +g[d2 + 200 >> 2] + +g[d2 + 88 >> 2];
              g[Q2 + 272 >> 2] = +g[d2 + 192 >> 2] + +g[d2 + 80 >> 2];
              g[Q2 + 272 + 4 >> 2] = T2;
              g[Q2 + 272 + 8 >> 2] = s2;
              g[Q2 + 272 + 12 >> 2] = 0;
              s2 = +g[e2 + 196 >> 2] + +g[e2 + 84 >> 2];
              T2 = +g[e2 + 200 >> 2] + +g[e2 + 88 >> 2];
              g[Q2 + 256 >> 2] = +g[e2 + 192 >> 2] + +g[e2 + 80 >> 2];
              g[Q2 + 256 + 4 >> 2] = s2;
              g[Q2 + 256 + 8 >> 2] = T2;
              g[Q2 + 256 + 12 >> 2] = 0;
              c[Q2 + 192 >> 2] = 1065353216;
              O2 = Q2 + 192 + 4 | 0;
              c[O2 >> 2] = 0;
              c[O2 + 4 >> 2] = 0;
              c[O2 + 8 >> 2] = 0;
              c[O2 + 12 >> 2] = 0;
              c[Q2 + 192 + 20 >> 2] = 1065353216;
              P2 = Q2 + 192 + 24 | 0;
              c[P2 >> 2] = 0;
              c[P2 + 4 >> 2] = 0;
              c[P2 + 8 >> 2] = 0;
              c[P2 + 12 >> 2] = 0;
              c[Q2 + 192 + 40 >> 2] = 1065353216;
              M2 = Q2 + 192 + 44 | 0;
              c[M2 >> 2] = 0;
              c[M2 + 4 >> 2] = 0;
              c[M2 + 8 >> 2] = 0;
              c[M2 + 12 >> 2] = 0;
              c[M2 + 16 >> 2] = 0;
              Mg(Q2 + 352 | 0, 0, 0, 0, Q2 + 272 | 0, f2, Q2 + 192 | 0);
              c[Q2 + 128 >> 2] = 1065353216;
              M2 = Q2 + 128 + 4 | 0;
              c[M2 >> 2] = 0;
              c[M2 + 4 >> 2] = 0;
              c[M2 + 8 >> 2] = 0;
              c[M2 + 12 >> 2] = 0;
              c[Q2 + 128 + 20 >> 2] = 1065353216;
              N2 = Q2 + 128 + 24 | 0;
              c[N2 >> 2] = 0;
              c[N2 + 4 >> 2] = 0;
              c[N2 + 8 >> 2] = 0;
              c[N2 + 12 >> 2] = 0;
              c[Q2 + 128 + 40 >> 2] = 1065353216;
              L2 = Q2 + 128 + 44 | 0;
              c[L2 >> 2] = 0;
              c[L2 + 4 >> 2] = 0;
              c[L2 + 8 >> 2] = 0;
              c[L2 + 12 >> 2] = 0;
              c[L2 + 16 >> 2] = 0;
              Mg(Q2 + 288 | 0, 0, 0, 0, Q2 + 256 | 0, f2, Q2 + 128 | 0);
              T2 = +g[b2 + 556 >> 2];
              s2 = +g[b2 + 560 >> 2];
              U2 = +g[b2 + 564 >> 2];
              w2 = +g[b2 + 568 >> 2];
              H2 = T2 * (2 / (T2 * T2 + s2 * s2 + U2 * U2 + w2 * w2));
              B2 = s2 * (2 / (T2 * T2 + s2 * s2 + U2 * U2 + w2 * w2));
              I2 = U2 * (2 / (T2 * T2 + s2 * s2 + U2 * U2 + w2 * w2));
              X2 = +g[b2 + 364 >> 2];
              W2 = +g[b2 + 368 >> 2];
              _2 = +g[b2 + 372 >> 2];
              k2 = _2 * (T2 * I2 - w2 * B2) + (W2 * (T2 * B2 + w2 * I2) + X2 * (1 - (s2 * B2 + U2 * I2)));
              m2 = _2 * (s2 * I2 + w2 * H2) + (X2 * (T2 * B2 - w2 * I2) + W2 * (1 - (T2 * H2 + U2 * I2)));
              n2 = X2 * (T2 * I2 + w2 * B2) + W2 * (s2 * I2 - w2 * H2) + _2 * (1 - (T2 * H2 + s2 * B2));
              j2 = +g[b2 + 380 >> 2];
              F2 = +g[b2 + 384 >> 2];
              C2 = +g[b2 + 388 >> 2];
              o2 = (T2 * I2 - w2 * B2) * C2 + (F2 * (T2 * B2 + w2 * I2) + j2 * (1 - (s2 * B2 + U2 * I2)));
              q2 = (s2 * I2 + w2 * H2) * C2 + (j2 * (T2 * B2 - w2 * I2) + F2 * (1 - (T2 * H2 + U2 * I2)));
              r2 = j2 * (T2 * I2 + w2 * B2) + F2 * (s2 * I2 - w2 * H2) + C2 * (1 - (T2 * H2 + s2 * B2));
              R2 = +g[b2 + 396 >> 2];
              D2 = +g[b2 + 400 >> 2];
              A2 = +g[b2 + 404 >> 2];
              S2 = (1 - (s2 * B2 + U2 * I2)) * R2 + (T2 * B2 + w2 * I2) * D2 + (T2 * I2 - w2 * B2) * A2;
              U2 = (T2 * B2 - w2 * I2) * R2 + (1 - (T2 * H2 + U2 * I2)) * D2 + (s2 * I2 + w2 * H2) * A2;
              B2 = (T2 * I2 + w2 * B2) * R2 + (s2 * I2 - w2 * H2) * D2 + (1 - (T2 * H2 + s2 * B2)) * A2;
              s2 = +g[b2 + 300 >> 2];
              H2 = +g[b2 + 316 >> 2];
              T2 = +g[b2 + 332 >> 2];
              w2 = +g[b2 + 304 >> 2];
              I2 = +g[b2 + 320 >> 2];
              V2 = +g[b2 + 336 >> 2];
              E2 = +g[b2 + 308 >> 2];
              J2 = +g[b2 + 324 >> 2];
              z2 = +g[b2 + 340 >> 2];
              y2 = -+g[b2 + 348 >> 2];
              ba2 = -+g[b2 + 352 >> 2];
              Z2 = -+g[b2 + 356 >> 2];
              _2 = X2 * 0 + W2 * 0 + _2 * 0 + +g[b2 + 412 >> 2] + (n2 * (E2 * y2 + J2 * ba2 + z2 * Z2) + (k2 * (s2 * y2 + H2 * ba2 + T2 * Z2) + m2 * (w2 * y2 + I2 * ba2 + V2 * Z2)));
              C2 = j2 * 0 + F2 * 0 + C2 * 0 + +g[b2 + 416 >> 2] + (r2 * (E2 * y2 + J2 * ba2 + z2 * Z2) + (o2 * (s2 * y2 + H2 * ba2 + T2 * Z2) + q2 * (w2 * y2 + I2 * ba2 + V2 * Z2)));
              Z2 = R2 * 0 + D2 * 0 + A2 * 0 + +g[b2 + 420 >> 2] + (B2 * (E2 * y2 + J2 * ba2 + z2 * Z2) + (S2 * (s2 * y2 + H2 * ba2 + T2 * Z2) + U2 * (w2 * y2 + I2 * ba2 + V2 * Z2)));
              ba2 = +g[Q2 + 128 >> 2];
              y2 = +g[M2 >> 2];
              A2 = +g[Q2 + 128 + 8 >> 2];
              D2 = +g[Q2 + 128 + 16 >> 2];
              R2 = +g[Q2 + 128 + 20 >> 2];
              F2 = +g[N2 >> 2];
              j2 = +g[Q2 + 128 + 32 >> 2];
              W2 = +g[Q2 + 128 + 36 >> 2];
              X2 = +g[Q2 + 128 + 40 >> 2];
              Y2 = A2 * Z2 + (ba2 * _2 + y2 * C2) + +g[Q2 + 128 + 48 >> 2];
              $2 = D2 * _2 + C2 * R2 + Z2 * F2 + +g[Q2 + 128 + 52 >> 2];
              aa2 = _2 * j2 + C2 * W2 + Z2 * X2 + +g[Q2 + 128 + 56 >> 2];
              g[Q2 + 64 >> 2] = (k2 * s2 + m2 * w2 + n2 * E2) * ba2 + (o2 * s2 + q2 * w2 + r2 * E2) * y2 + (S2 * s2 + U2 * w2 + B2 * E2) * A2;
              g[Q2 + 64 + 4 >> 2] = (k2 * H2 + m2 * I2 + n2 * J2) * ba2 + (o2 * H2 + q2 * I2 + r2 * J2) * y2 + (S2 * H2 + U2 * I2 + B2 * J2) * A2;
              g[Q2 + 64 + 8 >> 2] = (k2 * T2 + m2 * V2 + n2 * z2) * ba2 + (o2 * T2 + q2 * V2 + r2 * z2) * y2 + (S2 * T2 + U2 * V2 + B2 * z2) * A2;
              g[Q2 + 64 + 12 >> 2] = 0;
              g[Q2 + 64 + 16 >> 2] = (k2 * s2 + m2 * w2 + n2 * E2) * D2 + (o2 * s2 + q2 * w2 + r2 * E2) * R2 + (S2 * s2 + U2 * w2 + B2 * E2) * F2;
              g[Q2 + 64 + 20 >> 2] = (k2 * H2 + m2 * I2 + n2 * J2) * D2 + (o2 * H2 + q2 * I2 + r2 * J2) * R2 + (S2 * H2 + U2 * I2 + B2 * J2) * F2;
              g[Q2 + 64 + 24 >> 2] = (k2 * T2 + m2 * V2 + n2 * z2) * D2 + (o2 * T2 + q2 * V2 + r2 * z2) * R2 + (S2 * T2 + U2 * V2 + B2 * z2) * F2;
              g[Q2 + 64 + 28 >> 2] = 0;
              g[Q2 + 64 + 32 >> 2] = (k2 * s2 + m2 * w2 + n2 * E2) * j2 + (o2 * s2 + q2 * w2 + r2 * E2) * W2 + (S2 * s2 + U2 * w2 + B2 * E2) * X2;
              g[Q2 + 64 + 36 >> 2] = (k2 * H2 + m2 * I2 + n2 * J2) * j2 + (o2 * H2 + q2 * I2 + r2 * J2) * W2 + (S2 * H2 + U2 * I2 + B2 * J2) * X2;
              g[Q2 + 64 + 40 >> 2] = (k2 * T2 + m2 * V2 + n2 * z2) * j2 + (o2 * T2 + q2 * V2 + r2 * z2) * W2 + (S2 * T2 + U2 * V2 + B2 * z2) * X2;
              g[Q2 + 64 + 44 >> 2] = 0;
              g[Q2 + 64 + 48 >> 2] = Y2;
              g[Q2 + 64 + 52 >> 2] = $2;
              g[Q2 + 64 + 56 >> 2] = aa2;
              g[Q2 + 64 + 60 >> 2] = 0;
              aa2 = (S2 * s2 + U2 * w2 + B2 * E2) * -Z2 + ((k2 * s2 + m2 * w2 + n2 * E2) * -_2 + (o2 * s2 + q2 * w2 + r2 * E2) * -C2);
              $2 = (S2 * H2 + U2 * I2 + B2 * J2) * -Z2 + ((k2 * H2 + m2 * I2 + n2 * J2) * -_2 + (o2 * H2 + q2 * I2 + r2 * J2) * -C2);
              C2 = (S2 * T2 + U2 * V2 + B2 * z2) * -Z2 + ((k2 * T2 + m2 * V2 + n2 * z2) * -_2 + (o2 * T2 + q2 * V2 + r2 * z2) * -C2);
              _2 = +g[Q2 + 192 >> 2];
              Z2 = +g[O2 >> 2];
              Y2 = +g[Q2 + 192 + 8 >> 2];
              X2 = +g[Q2 + 192 + 16 >> 2];
              W2 = +g[Q2 + 192 + 20 >> 2];
              j2 = +g[P2 >> 2];
              F2 = +g[Q2 + 192 + 32 >> 2];
              R2 = +g[Q2 + 192 + 36 >> 2];
              D2 = +g[Q2 + 192 + 40 >> 2];
              A2 = aa2 * _2 + $2 * Z2 + C2 * Y2 + +g[Q2 + 192 + 48 >> 2];
              y2 = aa2 * X2 + $2 * W2 + C2 * j2 + +g[Q2 + 192 + 52 >> 2];
              C2 = aa2 * F2 + $2 * R2 + C2 * D2 + +g[Q2 + 192 + 56 >> 2];
              g[Q2 >> 2] = (k2 * s2 + m2 * w2 + n2 * E2) * _2 + (k2 * H2 + m2 * I2 + n2 * J2) * Z2 + (k2 * T2 + m2 * V2 + n2 * z2) * Y2;
              g[Q2 + 4 >> 2] = (o2 * s2 + q2 * w2 + r2 * E2) * _2 + (o2 * H2 + q2 * I2 + r2 * J2) * Z2 + (o2 * T2 + q2 * V2 + r2 * z2) * Y2;
              g[Q2 + 8 >> 2] = (S2 * s2 + U2 * w2 + B2 * E2) * _2 + (S2 * H2 + U2 * I2 + B2 * J2) * Z2 + (S2 * T2 + U2 * V2 + B2 * z2) * Y2;
              g[Q2 + 12 >> 2] = 0;
              g[Q2 + 16 >> 2] = (k2 * s2 + m2 * w2 + n2 * E2) * X2 + (k2 * H2 + m2 * I2 + n2 * J2) * W2 + (k2 * T2 + m2 * V2 + n2 * z2) * j2;
              g[Q2 + 20 >> 2] = (o2 * s2 + q2 * w2 + r2 * E2) * X2 + (o2 * H2 + q2 * I2 + r2 * J2) * W2 + (o2 * T2 + q2 * V2 + r2 * z2) * j2;
              g[Q2 + 24 >> 2] = (S2 * s2 + U2 * w2 + B2 * E2) * X2 + (S2 * H2 + U2 * I2 + B2 * J2) * W2 + (S2 * T2 + U2 * V2 + B2 * z2) * j2;
              g[Q2 + 28 >> 2] = 0;
              g[Q2 + 32 >> 2] = (k2 * s2 + m2 * w2 + n2 * E2) * F2 + (k2 * H2 + m2 * I2 + n2 * J2) * R2 + (k2 * T2 + m2 * V2 + n2 * z2) * D2;
              g[Q2 + 36 >> 2] = (o2 * s2 + q2 * w2 + r2 * E2) * F2 + (o2 * H2 + q2 * I2 + r2 * J2) * R2 + (o2 * T2 + q2 * V2 + r2 * z2) * D2;
              g[Q2 + 40 >> 2] = (S2 * s2 + U2 * w2 + B2 * E2) * F2 + (S2 * H2 + U2 * I2 + B2 * J2) * R2 + (S2 * T2 + U2 * V2 + B2 * z2) * D2;
              g[Q2 + 44 >> 2] = 0;
              g[Q2 + 48 >> 2] = A2;
              g[Q2 + 52 >> 2] = y2;
              g[Q2 + 56 >> 2] = C2;
              g[Q2 + 60 >> 2] = 0;
              rf(Q2 + 352 | 0, Q2 + 64 | 0, Q2 + 424 | 0, Q2 + 416 | 0);
              C2 = +g[Q2 + 416 >> 2];
              y2 = 1 / f2 * +g[Q2 + 424 >> 2] * C2;
              A2 = 1 / f2 * C2 * +g[Q2 + 424 + 4 >> 2];
              C2 = 1 / f2 * C2 * +g[Q2 + 424 + 8 >> 2];
              rf(Q2 + 288 | 0, Q2, Q2 + 424 | 0, Q2 + 416 | 0);
              D2 = +g[Q2 + 416 >> 2];
              y2 = y2 - +g[Q2 + 272 >> 2];
              A2 = A2 - +g[Q2 + 272 + 4 >> 2];
              C2 = C2 - +g[Q2 + 272 + 8 >> 2];
              z2 = 1 / f2 * +g[Q2 + 424 >> 2] * D2 - +g[Q2 + 256 >> 2];
              B2 = 1 / f2 * D2 * +g[Q2 + 424 + 4 >> 2] - +g[Q2 + 256 + 4 >> 2];
              D2 = 1 / f2 * D2 * +g[Q2 + 424 + 8 >> 2] - +g[Q2 + 256 + 8 >> 2];
              if (y2 * y2 + A2 * A2 + C2 * C2 > 11920928955078125e-23) {
                s2 = 1 / +G(+(y2 * y2 + A2 * A2 + C2 * C2));
                P2 = c[b2 + 28 >> 2] | 0;
                o2 = y2 * s2 * (+g[P2 + 304 >> 2] * y2 * s2 + A2 * s2 * +g[P2 + 320 >> 2] + C2 * s2 * +g[P2 + 336 >> 2]) + A2 * s2 * (y2 * s2 * +g[P2 + 308 >> 2] + A2 * s2 * +g[P2 + 324 >> 2] + C2 * s2 * +g[P2 + 340 >> 2]) + C2 * s2 * (y2 * s2 * +g[P2 + 312 >> 2] + A2 * s2 * +g[P2 + 328 >> 2] + C2 * s2 * +g[P2 + 344 >> 2]);
                k2 = y2 * s2;
                n2 = A2 * s2;
                s2 = C2 * s2;
              } else {
                o2 = 0;
                k2 = 0;
                n2 = 0;
                s2 = 0;
              }
              if (z2 * z2 + B2 * B2 + D2 * D2 > 11920928955078125e-23) {
                r2 = 1 / +G(+(z2 * z2 + B2 * B2 + D2 * D2));
                P2 = c[b2 + 32 >> 2] | 0;
                q2 = z2 * r2 * (+g[P2 + 304 >> 2] * z2 * r2 + B2 * r2 * +g[P2 + 320 >> 2] + D2 * r2 * +g[P2 + 336 >> 2]) + B2 * r2 * (z2 * r2 * +g[P2 + 308 >> 2] + B2 * r2 * +g[P2 + 324 >> 2] + D2 * r2 * +g[P2 + 340 >> 2]) + D2 * r2 * (z2 * r2 * +g[P2 + 312 >> 2] + B2 * r2 * +g[P2 + 328 >> 2] + D2 * r2 * +g[P2 + 344 >> 2]);
                j2 = z2 * r2;
                m2 = B2 * r2;
                r2 = D2 * r2;
              } else {
                q2 = 0;
                j2 = 0;
                m2 = 0;
                r2 = 0;
              }
              w2 = o2 * k2 + q2 * j2;
              k2 = o2 * n2 + q2 * m2;
              j2 = o2 * s2 + q2 * r2;
              if (w2 * w2 + k2 * k2 + j2 * j2 > 11920928955078125e-23) {
                n2 = 1 / +G(+(w2 * w2 + k2 * k2 + j2 * j2));
                p2 = c[b2 + 28 >> 2] | 0;
                m2 = w2 * n2 * (+g[p2 + 304 >> 2] * w2 * n2 + k2 * n2 * +g[p2 + 320 >> 2] + j2 * n2 * +g[p2 + 336 >> 2]) + k2 * n2 * (w2 * n2 * +g[p2 + 308 >> 2] + k2 * n2 * +g[p2 + 324 >> 2] + j2 * n2 * +g[p2 + 340 >> 2]) + j2 * n2 * (w2 * n2 * +g[p2 + 312 >> 2] + k2 * n2 * +g[p2 + 328 >> 2] + j2 * n2 * +g[p2 + 344 >> 2]);
                h2 = c[b2 + 32 >> 2] | 0;
                n2 = w2 * n2 * (w2 * n2 * +g[h2 + 304 >> 2] + k2 * n2 * +g[h2 + 320 >> 2] + j2 * n2 * +g[h2 + 336 >> 2]) + k2 * n2 * (w2 * n2 * +g[h2 + 308 >> 2] + k2 * n2 * +g[h2 + 324 >> 2] + j2 * n2 * +g[h2 + 340 >> 2]) + j2 * n2 * (w2 * n2 * +g[h2 + 312 >> 2] + k2 * n2 * +g[h2 + 328 >> 2] + j2 * n2 * +g[h2 + 344 >> 2]);
                w2 = (y2 * m2 - z2 * n2) * (1 / ((m2 + n2) * (m2 + n2)));
                j2 = (A2 * m2 - B2 * n2) * (1 / ((m2 + n2) * (m2 + n2)));
                n2 = (C2 * m2 - D2 * n2) * (1 / ((m2 + n2) * (m2 + n2)));
                k2 = +g[b2 + 572 >> 2];
                if (!(k2 >= 0))
                  k2 = w2;
                else {
                  m2 = (a[b2 + 553 >> 0] | 0) == 0 ? k2 : k2 / m2;
                  q2 = +g[b2 + 576 >> 2];
                  r2 = +g[b2 + 580 >> 2];
                  s2 = +g[b2 + 584 >> 2];
                  o2 = +G(+((w2 + q2) * (w2 + q2) + (j2 + r2) * (j2 + r2) + (n2 + s2) * (n2 + s2)));
                  if (o2 > m2) {
                    k2 = m2 * (w2 + q2) * (1 / o2) - q2;
                    n2 = m2 * (n2 + s2) * (1 / o2) - s2;
                    j2 = m2 * (j2 + r2) * (1 / o2) - r2;
                  } else
                    k2 = w2;
                  g[b2 + 576 >> 2] = k2 + q2;
                  g[b2 + 580 >> 2] = j2 + r2;
                  g[b2 + 584 >> 2] = n2 + s2;
                }
                o2 = +G(+(k2 * k2 + j2 * j2 + n2 * n2));
                m2 = k2 * (1 / o2);
                k2 = j2 * (1 / o2);
                j2 = n2 * (1 / o2);
                if (c[d2 + 240 >> 2] | 0) {
                  ba2 = m2 * +g[p2 + 336 >> 2] + k2 * +g[p2 + 340 >> 2] + j2 * +g[p2 + 344 >> 2];
                  aa2 = m2 * +g[p2 + 320 >> 2] + k2 * +g[p2 + 324 >> 2] + j2 * +g[p2 + 328 >> 2];
                  $2 = m2 * +g[p2 + 304 >> 2] + k2 * +g[p2 + 308 >> 2] + j2 * +g[p2 + 312 >> 2];
                  Z2 = o2 * 0 * +g[d2 + 116 >> 2];
                  _2 = o2 * 0 * +g[d2 + 120 >> 2];
                  g[d2 + 64 >> 2] = o2 * 0 * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
                  g[d2 + 68 >> 2] = Z2 + +g[d2 + 68 >> 2];
                  g[d2 + 72 >> 2] = _2 + +g[d2 + 72 >> 2];
                  aa2 = aa2 * o2 * +g[d2 + 100 >> 2];
                  ba2 = ba2 * o2 * +g[d2 + 104 >> 2];
                  g[d2 + 80 >> 2] = $2 * o2 * +g[d2 + 96 >> 2] + +g[d2 + 80 >> 2];
                  g[d2 + 84 >> 2] = aa2 + +g[d2 + 84 >> 2];
                  g[d2 + 88 >> 2] = ba2 + +g[d2 + 88 >> 2];
                  h2 = c[b2 + 32 >> 2] | 0;
                }
                if (c[e2 + 240 >> 2] | 0) {
                  ba2 = m2 * +g[h2 + 336 >> 2] + k2 * +g[h2 + 340 >> 2] + j2 * +g[h2 + 344 >> 2];
                  aa2 = m2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
                  $2 = m2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
                  Z2 = o2 * -0 * +g[e2 + 116 >> 2];
                  _2 = o2 * -0 * +g[e2 + 120 >> 2];
                  g[e2 + 64 >> 2] = o2 * -0 * +g[e2 + 112 >> 2] + +g[e2 + 64 >> 2];
                  g[e2 + 68 >> 2] = Z2 + +g[e2 + 68 >> 2];
                  g[e2 + 72 >> 2] = _2 + +g[e2 + 72 >> 2];
                  aa2 = aa2 * +g[e2 + 100 >> 2] * -o2;
                  ba2 = ba2 * +g[e2 + 104 >> 2] * -o2;
                  g[e2 + 80 >> 2] = $2 * +g[e2 + 96 >> 2] * -o2 + +g[e2 + 80 >> 2];
                  g[e2 + 84 >> 2] = aa2 + +g[e2 + 84 >> 2];
                  g[e2 + 88 >> 2] = ba2 + +g[e2 + 88 >> 2];
                }
              }
              K2 = d2 + 80 | 0;
              p2 = d2 + 196 | 0;
              L2 = d2 + 84 | 0;
              t2 = d2 + 200 | 0;
              M2 = d2 + 88 | 0;
              u2 = e2 + 192 | 0;
              N2 = e2 + 80 | 0;
              v2 = e2 + 196 | 0;
              O2 = e2 + 84 | 0;
              x2 = e2 + 200 | 0;
              P2 = e2 + 88 | 0;
              h2 = d2 + 192 | 0;
            }
          while (0);
          z2 = +g[h2 >> 2] + +g[K2 >> 2];
          y2 = +g[p2 >> 2] + +g[L2 >> 2];
          w2 = +g[t2 >> 2] + +g[M2 >> 2];
          s2 = +g[u2 >> 2] + +g[N2 >> 2];
          r2 = +g[v2 >> 2] + +g[O2 >> 2];
          q2 = +g[x2 >> 2] + +g[P2 >> 2];
          if (a[b2 + 526 >> 0] | 0) {
            k2 = +g[b2 + 528 >> 2];
            j2 = k2 * +g[b2 + 504 >> 2] * +g[b2 + 432 >> 2] / f2;
            m2 = +g[b2 + 460 >> 2];
            n2 = +g[b2 + 464 >> 2];
            o2 = +g[b2 + 468 >> 2];
            if ((s2 - z2) * m2 + (r2 - y2) * n2 + (q2 - w2) * o2 > 0)
              j2 = j2 + k2 * ((s2 - z2) * m2 + (r2 - y2) * n2 + (q2 - w2) * o2) * +g[b2 + 436 >> 2];
            aa2 = +g[b2 + 516 >> 2];
            _2 = aa2 + j2 * +g[b2 + 492 >> 2];
            g[Q2 + 424 >> 2] = _2;
            g[Q2 + 416 >> 2] = 0;
            h2 = c[(_2 > 0 ? Q2 + 424 | 0 : Q2 + 416 | 0) >> 2] | 0;
            c[b2 + 516 >> 2] = h2;
            aa2 = (c[l >> 2] = h2, +g[l >> 2]) - aa2;
            _2 = +g[b2 + 536 >> 2];
            $2 = +g[b2 + 540 >> 2];
            j2 = +g[b2 + 544 >> 2];
            k2 = aa2 * m2 - _2 * (aa2 * m2 * _2 + aa2 * n2 * $2 + aa2 * o2 * j2);
            ba2 = aa2 * n2 - $2 * (aa2 * m2 * _2 + aa2 * n2 * $2 + aa2 * o2 * j2);
            n2 = aa2 * o2 - j2 * (aa2 * m2 * _2 + aa2 * n2 * $2 + aa2 * o2 * j2);
            j2 = +G(+(n2 * n2 + (k2 * k2 + ba2 * ba2)));
            k2 = 1 / j2 * k2;
            m2 = 1 / j2 * ba2;
            n2 = 1 / j2 * n2;
            h2 = c[b2 + 28 >> 2] | 0;
            if (c[d2 + 240 >> 2] | 0) {
              ba2 = k2 * +g[h2 + 336 >> 2] + m2 * +g[h2 + 340 >> 2] + n2 * +g[h2 + 344 >> 2];
              aa2 = k2 * +g[h2 + 320 >> 2] + m2 * +g[h2 + 324 >> 2] + n2 * +g[h2 + 328 >> 2];
              $2 = k2 * +g[h2 + 304 >> 2] + m2 * +g[h2 + 308 >> 2] + n2 * +g[h2 + 312 >> 2];
              Z2 = j2 * 0 * +g[d2 + 116 >> 2];
              _2 = j2 * 0 * +g[d2 + 120 >> 2];
              g[d2 + 64 >> 2] = j2 * 0 * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
              g[d2 + 68 >> 2] = Z2 + +g[d2 + 68 >> 2];
              g[d2 + 72 >> 2] = _2 + +g[d2 + 72 >> 2];
              aa2 = aa2 * j2 * +g[d2 + 100 >> 2];
              ba2 = ba2 * j2 * +g[d2 + 104 >> 2];
              g[K2 >> 2] = $2 * j2 * +g[d2 + 96 >> 2] + +g[K2 >> 2];
              g[L2 >> 2] = aa2 + +g[L2 >> 2];
              g[M2 >> 2] = ba2 + +g[M2 >> 2];
            }
            h2 = c[b2 + 32 >> 2] | 0;
            if (c[e2 + 240 >> 2] | 0) {
              ba2 = k2 * +g[h2 + 336 >> 2] + m2 * +g[h2 + 340 >> 2] + n2 * +g[h2 + 344 >> 2];
              aa2 = k2 * +g[h2 + 320 >> 2] + m2 * +g[h2 + 324 >> 2] + n2 * +g[h2 + 328 >> 2];
              $2 = k2 * +g[h2 + 304 >> 2] + m2 * +g[h2 + 308 >> 2] + n2 * +g[h2 + 312 >> 2];
              Z2 = j2 * -0 * +g[e2 + 116 >> 2];
              _2 = j2 * -0 * +g[e2 + 120 >> 2];
              g[e2 + 64 >> 2] = j2 * -0 * +g[e2 + 112 >> 2] + +g[e2 + 64 >> 2];
              g[e2 + 68 >> 2] = Z2 + +g[e2 + 68 >> 2];
              g[e2 + 72 >> 2] = _2 + +g[e2 + 72 >> 2];
              aa2 = aa2 * +g[e2 + 100 >> 2] * -j2;
              ba2 = ba2 * +g[e2 + 104 >> 2] * -j2;
              g[N2 >> 2] = $2 * +g[e2 + 96 >> 2] * -j2 + +g[N2 >> 2];
              g[O2 >> 2] = aa2 + +g[O2 >> 2];
              g[P2 >> 2] = ba2 + +g[P2 >> 2];
            }
          }
          if (!(a[b2 + 525 >> 0] | 0)) {
            i = Q2;
            return;
          }
          o2 = +g[b2 + 532 >> 2];
          n2 = o2 * +g[b2 + 508 >> 2] * +g[b2 + 432 >> 2] / f2;
          m2 = +g[b2 + 476 >> 2];
          k2 = +g[b2 + 480 >> 2];
          j2 = +g[b2 + 484 >> 2];
          if ((s2 - z2) * m2 + (r2 - y2) * k2 + (q2 - w2) * j2 > 0)
            n2 = n2 + o2 * ((s2 - z2) * m2 + (r2 - y2) * k2 + (q2 - w2) * j2) * +g[b2 + 436 >> 2];
          ba2 = +g[b2 + 520 >> 2];
          n2 = ba2 + n2 * +g[b2 + 496 >> 2];
          g[Q2 + 424 >> 2] = n2;
          g[Q2 + 416 >> 2] = 0;
          h2 = c[(n2 > 0 ? Q2 + 424 | 0 : Q2 + 416 | 0) >> 2] | 0;
          c[b2 + 520 >> 2] = h2;
          n2 = (c[l >> 2] = h2, +g[l >> 2]) - ba2;
          h2 = c[b2 + 28 >> 2] | 0;
          if (c[d2 + 240 >> 2] | 0) {
            ba2 = m2 * +g[h2 + 336 >> 2] + k2 * +g[h2 + 340 >> 2] + j2 * +g[h2 + 344 >> 2];
            aa2 = m2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
            j2 = m2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
            m2 = n2 * 0 * +g[d2 + 116 >> 2];
            k2 = n2 * 0 * +g[d2 + 120 >> 2];
            g[d2 + 64 >> 2] = n2 * 0 * +g[d2 + 112 >> 2] + +g[d2 + 64 >> 2];
            g[d2 + 68 >> 2] = m2 + +g[d2 + 68 >> 2];
            g[d2 + 72 >> 2] = k2 + +g[d2 + 72 >> 2];
            k2 = aa2 * n2 * +g[d2 + 100 >> 2];
            m2 = ba2 * n2 * +g[d2 + 104 >> 2];
            g[K2 >> 2] = j2 * n2 * +g[d2 + 96 >> 2] + +g[K2 >> 2];
            g[L2 >> 2] = k2 + +g[L2 >> 2];
            g[M2 >> 2] = m2 + +g[M2 >> 2];
            m2 = +g[b2 + 476 >> 2];
            k2 = +g[b2 + 480 >> 2];
            j2 = +g[b2 + 484 >> 2];
          }
          h2 = c[b2 + 32 >> 2] | 0;
          if (!(c[e2 + 240 >> 2] | 0)) {
            i = Q2;
            return;
          }
          ba2 = m2 * +g[h2 + 336 >> 2] + k2 * +g[h2 + 340 >> 2] + j2 * +g[h2 + 344 >> 2];
          aa2 = m2 * +g[h2 + 320 >> 2] + k2 * +g[h2 + 324 >> 2] + j2 * +g[h2 + 328 >> 2];
          $2 = m2 * +g[h2 + 304 >> 2] + k2 * +g[h2 + 308 >> 2] + j2 * +g[h2 + 312 >> 2];
          Z2 = n2 * -0 * +g[e2 + 116 >> 2];
          _2 = n2 * -0 * +g[e2 + 120 >> 2];
          g[e2 + 64 >> 2] = n2 * -0 * +g[e2 + 112 >> 2] + +g[e2 + 64 >> 2];
          g[e2 + 68 >> 2] = Z2 + +g[e2 + 68 >> 2];
          g[e2 + 72 >> 2] = _2 + +g[e2 + 72 >> 2];
          aa2 = aa2 * +g[e2 + 100 >> 2] * -n2;
          ba2 = ba2 * +g[e2 + 104 >> 2] * -n2;
          g[N2 >> 2] = $2 * +g[e2 + 96 >> 2] * -n2 + +g[N2 >> 2];
          g[O2 >> 2] = aa2 + +g[O2 >> 2];
          g[P2 >> 2] = ba2 + +g[P2 >> 2];
          i = Q2;
          return;
        }
        function kc(b2, d2, e2, f2, h2, j2, k2, m2, n2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          m2 = m2 | 0;
          n2 = n2 | 0;
          var o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0;
          Y2 = i;
          i = i + 256 | 0;
          c[b2 + 188 >> 2] = -1;
          c[b2 + 184 >> 2] = 0;
          if ((e2 | 0) > 0) {
            n2 = 0;
            do {
              c[(c[d2 + (n2 << 2) >> 2] | 0) + 212 >> 2] = -1;
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != (e2 | 0));
          }
          n2 = c[b2 + 12 >> 2] | 0;
          if ((n2 | 0) > (e2 | 0)) {
            p2 = b2 + 8 | 0;
            o2 = n2;
          } else {
            if ((e2 + 1 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, o2 = ic(((e2 + 1 | 0) * 244 | 3) + 16 | 0) | 0, (o2 | 0) != 0) : 0) {
              c[(o2 + 4 + 15 & -16) + -4 >> 2] = o2;
              p2 = o2 + 4 + 15 & -16;
            } else
              p2 = 0;
            o2 = c[b2 + 8 >> 2] | 0;
            if ((o2 | 0) > 0) {
              n2 = 0;
              do {
                V2 = p2 + (n2 * 244 | 0) | 0;
                W2 = c[b2 + 16 >> 2] | 0;
                U2 = W2 + (n2 * 244 | 0) | 0;
                c[V2 >> 2] = c[U2 >> 2];
                c[V2 + 4 >> 2] = c[U2 + 4 >> 2];
                c[V2 + 8 >> 2] = c[U2 + 8 >> 2];
                c[V2 + 12 >> 2] = c[U2 + 12 >> 2];
                V2 = p2 + (n2 * 244 | 0) + 16 | 0;
                U2 = W2 + (n2 * 244 | 0) + 16 | 0;
                c[V2 >> 2] = c[U2 >> 2];
                c[V2 + 4 >> 2] = c[U2 + 4 >> 2];
                c[V2 + 8 >> 2] = c[U2 + 8 >> 2];
                c[V2 + 12 >> 2] = c[U2 + 12 >> 2];
                V2 = p2 + (n2 * 244 | 0) + 32 | 0;
                U2 = W2 + (n2 * 244 | 0) + 32 | 0;
                c[V2 >> 2] = c[U2 >> 2];
                c[V2 + 4 >> 2] = c[U2 + 4 >> 2];
                c[V2 + 8 >> 2] = c[U2 + 8 >> 2];
                c[V2 + 12 >> 2] = c[U2 + 12 >> 2];
                V2 = p2 + (n2 * 244 | 0) + 48 | 0;
                U2 = W2 + (n2 * 244 | 0) + 48 | 0;
                c[V2 >> 2] = c[U2 >> 2];
                c[V2 + 4 >> 2] = c[U2 + 4 >> 2];
                c[V2 + 8 >> 2] = c[U2 + 8 >> 2];
                c[V2 + 12 >> 2] = c[U2 + 12 >> 2];
                Lm(p2 + (n2 * 244 | 0) + 64 | 0, W2 + (n2 * 244 | 0) + 64 | 0, 180) | 0;
                n2 = n2 + 1 | 0;
              } while ((n2 | 0) != (o2 | 0));
            }
            n2 = c[b2 + 16 >> 2] | 0;
            if (n2 | 0) {
              if (a[b2 + 20 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[n2 + -4 >> 2] | 0);
              }
              c[b2 + 16 >> 2] = 0;
            }
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = p2;
            c[b2 + 12 >> 2] = e2 + 1;
            p2 = b2 + 8 | 0;
            o2 = e2 + 1 | 0;
          }
          yn(Y2 | 0, 0, 244) | 0;
          n2 = c[p2 >> 2] | 0;
          if ((n2 | 0) < 0) {
            if ((o2 | 0) < 0) {
              o2 = c[b2 + 16 >> 2] | 0;
              if (o2 | 0) {
                if (a[b2 + 20 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[o2 + -4 >> 2] | 0);
                }
                c[b2 + 16 >> 2] = 0;
              }
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = 0;
              c[b2 + 12 >> 2] = 0;
            }
            do {
              W2 = c[b2 + 16 >> 2] | 0;
              V2 = W2 + (n2 * 244 | 0) | 0;
              c[V2 >> 2] = c[Y2 >> 2];
              c[V2 + 4 >> 2] = c[Y2 + 4 >> 2];
              c[V2 + 8 >> 2] = c[Y2 + 8 >> 2];
              c[V2 + 12 >> 2] = c[Y2 + 12 >> 2];
              V2 = W2 + (n2 * 244 | 0) + 16 | 0;
              c[V2 >> 2] = c[Y2 + 16 >> 2];
              c[V2 + 4 >> 2] = c[Y2 + 16 + 4 >> 2];
              c[V2 + 8 >> 2] = c[Y2 + 16 + 8 >> 2];
              c[V2 + 12 >> 2] = c[Y2 + 16 + 12 >> 2];
              V2 = W2 + (n2 * 244 | 0) + 32 | 0;
              c[V2 >> 2] = c[Y2 + 32 >> 2];
              c[V2 + 4 >> 2] = c[Y2 + 32 + 4 >> 2];
              c[V2 + 8 >> 2] = c[Y2 + 32 + 8 >> 2];
              c[V2 + 12 >> 2] = c[Y2 + 32 + 12 >> 2];
              V2 = W2 + (n2 * 244 | 0) + 48 | 0;
              c[V2 >> 2] = c[Y2 + 48 >> 2];
              c[V2 + 4 >> 2] = c[Y2 + 48 + 4 >> 2];
              c[V2 + 8 >> 2] = c[Y2 + 48 + 8 >> 2];
              c[V2 + 12 >> 2] = c[Y2 + 48 + 12 >> 2];
              Lm(W2 + (n2 * 244 | 0) + 64 | 0, Y2 + 64 | 0, 180) | 0;
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != 0);
          }
          c[p2 >> 2] = 0;
          if ((e2 | 0) > 0) {
            o2 = 0;
            do {
              s2 = d2 + (o2 << 2) | 0;
              q2 = Oj(b2, c[s2 >> 2] | 0, +g[m2 + 12 >> 2]) | 0;
              s2 = c[s2 >> 2] | 0;
              if (!((s2 | 0) == 0 ? 1 : (c[s2 + 248 >> 2] & 2 | 0) == 0) ? +g[s2 + 384 >> 2] != 0 : 0) {
                p2 = c[b2 + 16 >> 2] | 0;
                n2 = c[s2 + 544 >> 2] | 0;
                if (n2 & 2) {
                  r2 = +g[m2 + 76 >> 2];
                  _2 = +g[s2 + 436 >> 2];
                  u2 = +g[s2 + 440 >> 2];
                  t2 = +g[s2 + 444 >> 2];
                  ea2 = +g[s2 + 4 >> 2];
                  _2 = _2 != 0 ? 1 / _2 : 0;
                  da2 = +g[s2 + 8 >> 2];
                  u2 = u2 != 0 ? 1 / u2 : 0;
                  ca2 = +g[s2 + 12 >> 2];
                  t2 = t2 != 0 ? 1 / t2 : 0;
                  ba2 = +g[s2 + 20 >> 2];
                  aa2 = +g[s2 + 24 >> 2];
                  $2 = +g[s2 + 28 >> 2];
                  Z2 = +g[s2 + 36 >> 2];
                  K2 = +g[s2 + 40 >> 2];
                  w2 = +g[s2 + 44 >> 2];
                  x2 = +g[s2 + 368 >> 2];
                  y2 = +g[s2 + 372 >> 2];
                  v2 = +g[s2 + 376 >> 2];
                  z2 = (_2 * ea2 * ea2 + u2 * da2 * da2 + t2 * ca2 * ca2) * x2 + (_2 * ea2 * ba2 + u2 * da2 * aa2 + t2 * ca2 * $2) * y2 + (_2 * ea2 * Z2 + u2 * da2 * K2 + t2 * ca2 * w2) * v2;
                  A2 = (_2 * ba2 * ea2 + u2 * aa2 * da2 + t2 * $2 * ca2) * x2 + (_2 * ba2 * ba2 + u2 * aa2 * aa2 + t2 * $2 * $2) * y2 + (_2 * ba2 * Z2 + u2 * aa2 * K2 + t2 * $2 * w2) * v2;
                  w2 = (_2 * Z2 * ea2 + u2 * K2 * da2 + t2 * w2 * ca2) * x2 + (_2 * Z2 * ba2 + u2 * K2 * aa2 + t2 * w2 * $2) * y2 + (_2 * Z2 * Z2 + u2 * K2 * K2 + t2 * w2 * w2) * v2;
                  t2 = (y2 * w2 - v2 * A2) * (y2 * w2 - v2 * A2) + (v2 * z2 - x2 * w2) * (v2 * z2 - x2 * w2) + (x2 * A2 - y2 * z2) * (x2 * A2 - y2 * z2);
                  if (t2 > r2 * r2) {
                    r2 = 1 / +G(+t2) * r2;
                    u2 = (y2 * w2 - v2 * A2) * r2;
                    t2 = r2 * (v2 * z2 - x2 * w2);
                    r2 = r2 * (x2 * A2 - y2 * z2);
                  } else {
                    u2 = y2 * w2 - v2 * A2;
                    t2 = v2 * z2 - x2 * w2;
                    r2 = x2 * A2 - y2 * z2;
                  }
                  ca2 = +g[m2 + 12 >> 2];
                  da2 = (u2 * +g[s2 + 308 >> 2] + t2 * +g[s2 + 324 >> 2] + r2 * +g[s2 + 340 >> 2]) * ca2;
                  ea2 = ca2 * (u2 * +g[s2 + 312 >> 2] + t2 * +g[s2 + 328 >> 2] + r2 * +g[s2 + 344 >> 2]);
                  g[p2 + (q2 * 244 | 0) + 224 >> 2] = +g[p2 + (q2 * 244 | 0) + 224 >> 2] - (u2 * +g[s2 + 304 >> 2] + t2 * +g[s2 + 320 >> 2] + r2 * +g[s2 + 336 >> 2]) * ca2;
                  g[p2 + (q2 * 244 | 0) + 228 >> 2] = +g[p2 + (q2 * 244 | 0) + 228 >> 2] - da2;
                  g[p2 + (q2 * 244 | 0) + 232 >> 2] = +g[p2 + (q2 * 244 | 0) + 232 >> 2] - ea2;
                  n2 = c[s2 + 544 >> 2] | 0;
                }
                if (n2 & 4) {
                  K2 = +g[m2 + 12 >> 2];
                  ia2 = +g[s2 + 436 >> 2];
                  ca2 = +g[s2 + 440 >> 2];
                  aa2 = +g[s2 + 444 >> 2];
                  y2 = +g[s2 + 368 >> 2];
                  t2 = +g[s2 + 372 >> 2];
                  ea2 = +g[s2 + 376 >> 2];
                  $2 = +g[s2 + 4 >> 2];
                  ia2 = ia2 != 0 ? 1 / ia2 : 0;
                  r2 = +g[s2 + 8 >> 2];
                  ca2 = ca2 != 0 ? 1 / ca2 : 0;
                  u2 = +g[s2 + 12 >> 2];
                  aa2 = aa2 != 0 ? 1 / aa2 : 0;
                  ja2 = +g[s2 + 20 >> 2];
                  _2 = +g[s2 + 24 >> 2];
                  x2 = +g[s2 + 28 >> 2];
                  ba2 = +g[s2 + 36 >> 2];
                  Z2 = +g[s2 + 40 >> 2];
                  ha2 = +g[s2 + 44 >> 2];
                  v2 = ia2 * $2 * $2 + ca2 * r2 * r2 + aa2 * u2 * u2;
                  A2 = ia2 * $2 * ja2 + ca2 * r2 * _2 + aa2 * u2 * x2;
                  ga2 = ia2 * $2 * ba2 + ca2 * r2 * Z2 + aa2 * u2 * ha2;
                  w2 = ia2 * ja2 * $2 + ca2 * _2 * r2 + aa2 * x2 * u2;
                  z2 = ia2 * ja2 * ja2 + ca2 * _2 * _2 + aa2 * x2 * x2;
                  fa2 = ia2 * ja2 * ba2 + ca2 * _2 * Z2 + aa2 * x2 * ha2;
                  u2 = ia2 * ba2 * $2 + ca2 * Z2 * r2 + aa2 * ha2 * u2;
                  x2 = ia2 * ba2 * ja2 + ca2 * Z2 * _2 + aa2 * ha2 * x2;
                  ha2 = ia2 * ba2 * ba2 + ca2 * Z2 * Z2 + aa2 * ha2 * ha2;
                  aa2 = y2 * v2 + t2 * A2 + ea2 * ga2 + (t2 * (y2 * u2 + t2 * x2 + ea2 * ha2) - ea2 * (y2 * w2 + t2 * z2 + ea2 * fa2)) * K2 - (K2 * 0 + (y2 * v2 + t2 * A2 + ea2 * ga2));
                  Z2 = y2 * w2 + t2 * z2 + ea2 * fa2 + (ea2 * (y2 * v2 + t2 * A2 + ea2 * ga2) - y2 * (y2 * u2 + t2 * x2 + ea2 * ha2)) * K2 - (K2 * 0 + (y2 * w2 + t2 * z2 + ea2 * fa2));
                  ca2 = y2 * u2 + t2 * x2 + ea2 * ha2 + (y2 * (y2 * w2 + t2 * z2 + ea2 * fa2) - t2 * (y2 * v2 + t2 * A2 + ea2 * ga2)) * K2 - (K2 * 0 + (y2 * u2 + t2 * x2 + ea2 * ha2));
                  ba2 = A2 + (y2 * u2 + t2 * x2 + ea2 * ha2 + (t2 * x2 + (A2 * 0 + z2 * -ea2))) * K2;
                  ia2 = ga2 + (t2 * ha2 + (ga2 * 0 + fa2 * -ea2) - (y2 * w2 + t2 * z2 + ea2 * fa2)) * K2;
                  _2 = w2 + (u2 * -y2 + (w2 * 0 + ea2 * v2) - (y2 * u2 + t2 * x2 + ea2 * ha2)) * K2;
                  ja2 = fa2 + (y2 * v2 + t2 * A2 + ea2 * ga2 + (ha2 * -y2 + (fa2 * 0 + ea2 * ga2))) * K2;
                  r2 = u2 + (u2 * 0 + (v2 * -t2 + y2 * w2) + (y2 * w2 + t2 * z2 + ea2 * fa2)) * K2;
                  $2 = x2 + (x2 * 0 + (A2 * -t2 + y2 * z2) - (y2 * v2 + t2 * A2 + ea2 * ga2)) * K2;
                  la2 = (z2 + (x2 * -y2 + (z2 * 0 + ea2 * A2)) * K2) * (ha2 + (ha2 * 0 + (ga2 * -t2 + y2 * fa2)) * K2) - $2 * ja2;
                  ka2 = $2 * ia2 - ba2 * (ha2 + (ha2 * 0 + (ga2 * -t2 + y2 * fa2)) * K2);
                  ma2 = ba2 * ja2 - (z2 + (x2 * -y2 + (z2 * 0 + ea2 * A2)) * K2) * ia2;
                  da2 = r2 * ma2 + ((v2 + (t2 * u2 + (v2 * 0 + w2 * -ea2)) * K2) * la2 + _2 * ka2);
                  n2 = +F(+da2) > 11920928955078125e-23;
                  da2 = n2 ? 1 / da2 : da2;
                  g[p2 + (q2 * 244 | 0) + 224 >> 2] = y2 - (ca2 * ma2 + (aa2 * la2 + Z2 * ka2)) * da2 - y2 + +g[p2 + (q2 * 244 | 0) + 224 >> 2];
                  g[p2 + (q2 * 244 | 0) + 228 >> 2] = t2 - (r2 * (ja2 * aa2 - ia2 * Z2) + ((v2 + (t2 * u2 + (v2 * 0 + w2 * -ea2)) * K2) * ((ha2 + (ha2 * 0 + (ga2 * -t2 + y2 * fa2)) * K2) * Z2 - ja2 * ca2) + _2 * (ia2 * ca2 - (ha2 + (ha2 * 0 + (ga2 * -t2 + y2 * fa2)) * K2) * aa2))) * da2 - t2 + +g[p2 + (q2 * 244 | 0) + 228 >> 2];
                  g[p2 + (q2 * 244 | 0) + 232 >> 2] = ea2 - (r2 * (ba2 * Z2 - (z2 + (x2 * -y2 + (z2 * 0 + ea2 * A2)) * K2) * aa2) + ((v2 + (t2 * u2 + (v2 * 0 + w2 * -ea2)) * K2) * ((z2 + (x2 * -y2 + (z2 * 0 + ea2 * A2)) * K2) * ca2 - $2 * Z2) + _2 * ($2 * aa2 - ba2 * ca2))) * da2 - ea2 + +g[p2 + (q2 * 244 | 0) + 232 >> 2];
                  n2 = c[s2 + 544 >> 2] | 0;
                }
                if (n2 & 8 | 0) {
                  ia2 = +g[m2 + 12 >> 2];
                  A2 = +g[s2 + 436 >> 2];
                  K2 = +g[s2 + 440 >> 2];
                  x2 = +g[s2 + 444 >> 2];
                  da2 = +g[s2 + 368 >> 2];
                  ea2 = +g[s2 + 372 >> 2];
                  ma2 = +g[s2 + 376 >> 2];
                  Jg(s2 + 4 | 0, Y2);
                  la2 = +g[Y2 >> 2];
                  fa2 = +g[Y2 + 4 >> 2];
                  ga2 = +g[Y2 + 8 >> 2];
                  Z2 = +g[Y2 + 12 >> 2];
                  $2 = ga2 * (da2 * -ga2 + ea2 * Z2 - ma2 * -la2) + (la2 * (-(da2 * -la2) - ea2 * -fa2 - ma2 * -ga2) + Z2 * (ma2 * -fa2 + da2 * Z2 - ea2 * -ga2)) - fa2 * (ea2 * -la2 + ma2 * Z2 - da2 * -fa2);
                  ba2 = la2 * (ea2 * -la2 + ma2 * Z2 - da2 * -fa2) + (fa2 * (-(da2 * -la2) - ea2 * -fa2 - ma2 * -ga2) + Z2 * (da2 * -ga2 + ea2 * Z2 - ma2 * -la2)) - ga2 * (ma2 * -fa2 + da2 * Z2 - ea2 * -ga2);
                  Z2 = fa2 * (ma2 * -fa2 + da2 * Z2 - ea2 * -ga2) + (ga2 * (-(da2 * -la2) - ea2 * -fa2 - ma2 * -ga2) + Z2 * (ea2 * -la2 + ma2 * Z2 - da2 * -fa2)) - la2 * (da2 * -ga2 + ea2 * Z2 - ma2 * -la2);
                  A2 = A2 != 0 ? 1 / A2 : 0;
                  ca2 = Z2 * 0 + (A2 * $2 + ba2 * 0);
                  K2 = K2 != 0 ? 1 / K2 : 0;
                  aa2 = Z2 * 0 + ($2 * 0 + K2 * ba2);
                  x2 = x2 != 0 ? 1 / x2 : 0;
                  _2 = x2 * Z2 + ($2 * 0 + ba2 * 0);
                  y2 = A2 + (ba2 * 0 + (A2 * 0 + Z2 * -0)) * ia2;
                  z2 = K2 + ($2 * -0 + (K2 * 0 + Z2 * 0)) * ia2;
                  ja2 = x2 + (x2 * 0 + (ba2 * -0 + $2 * 0)) * ia2;
                  w2 = z2 * ja2 - ((ba2 * -0 + K2 * $2 + 0 - ca2) * ia2 + 0) * ((Z2 * 0 + 0 - x2 * $2 + ca2) * ia2 + 0);
                  ha2 = ((ba2 * -0 + K2 * $2 + 0 - ca2) * ia2 + 0) * ((x2 * ba2 + (Z2 * -0 + 0) - aa2) * ia2 + 0) - ja2 * ((ba2 * 0 + (0 - K2 * Z2) + _2) * ia2 + 0);
                  v2 = ((ba2 * 0 + (0 - K2 * Z2) + _2) * ia2 + 0) * ((Z2 * 0 + 0 - x2 * $2 + ca2) * ia2 + 0) - z2 * ((x2 * ba2 + (Z2 * -0 + 0) - aa2) * ia2 + 0);
                  ka2 = (($2 * 0 - A2 * ba2 + 0 + aa2) * ia2 + 0) * v2 + (y2 * w2 + (($2 * -0 + (A2 * Z2 + 0) - _2) * ia2 + 0) * ha2);
                  W2 = +F(+ka2) > 11920928955078125e-23;
                  ka2 = W2 ? 1 / ka2 : ka2;
                  ha2 = $2 - (($2 * aa2 - ba2 * ca2) * ia2 * v2 + ((ba2 * _2 - Z2 * aa2) * ia2 * w2 + (Z2 * ca2 - $2 * _2) * ia2 * ha2)) * ka2;
                  ja2 = ba2 - ((($2 * 0 - A2 * ba2 + 0 + aa2) * ia2 + 0) * (((Z2 * 0 + 0 - x2 * $2 + ca2) * ia2 + 0) * (ba2 * _2 - Z2 * aa2) * ia2 - ((x2 * ba2 + (Z2 * -0 + 0) - aa2) * ia2 + 0) * (Z2 * ca2 - $2 * _2) * ia2) + (y2 * (ja2 * (Z2 * ca2 - $2 * _2) * ia2 - ((Z2 * 0 + 0 - x2 * $2 + ca2) * ia2 + 0) * ($2 * aa2 - ba2 * ca2) * ia2) + (($2 * -0 + (A2 * Z2 + 0) - _2) * ia2 + 0) * (((x2 * ba2 + (Z2 * -0 + 0) - aa2) * ia2 + 0) * ($2 * aa2 - ba2 * ca2) * ia2 - ja2 * (ba2 * _2 - Z2 * aa2) * ia2))) * ka2;
                  ka2 = Z2 - ((($2 * 0 - A2 * ba2 + 0 + aa2) * ia2 + 0) * (((ba2 * 0 + (0 - K2 * Z2) + _2) * ia2 + 0) * (Z2 * ca2 - $2 * _2) * ia2 - z2 * (ba2 * _2 - Z2 * aa2) * ia2) + (y2 * (z2 * ($2 * aa2 - ba2 * ca2) * ia2 - ((ba2 * -0 + K2 * $2 + 0 - ca2) * ia2 + 0) * (Z2 * ca2 - $2 * _2) * ia2) + (($2 * -0 + (A2 * Z2 + 0) - _2) * ia2 + 0) * (((ba2 * -0 + K2 * $2 + 0 - ca2) * ia2 + 0) * (ba2 * _2 - Z2 * aa2) * ia2 - ((ba2 * 0 + (0 - K2 * Z2) + _2) * ia2 + 0) * ($2 * aa2 - ba2 * ca2) * ia2))) * ka2;
                  ia2 = +g[Y2 + 12 >> 2];
                  g[p2 + (q2 * 244 | 0) + 224 >> 2] = (ga2 * ha2 + ia2 * ja2 - la2 * ka2) * -ga2 + (ia2 * (ia2 * ha2 + fa2 * ka2 - ga2 * ja2) + (-(la2 * ha2) - fa2 * ja2 - ga2 * ka2) * -la2) - (ia2 * ka2 + la2 * ja2 - fa2 * ha2) * -fa2 - da2 + +g[p2 + (q2 * 244 | 0) + 224 >> 2];
                  g[p2 + (q2 * 244 | 0) + 228 >> 2] = (ia2 * ka2 + la2 * ja2 - fa2 * ha2) * -la2 + (ia2 * (ga2 * ha2 + ia2 * ja2 - la2 * ka2) + (-(la2 * ha2) - fa2 * ja2 - ga2 * ka2) * -fa2) - (ia2 * ha2 + fa2 * ka2 - ga2 * ja2) * -ga2 - ea2 + +g[p2 + (q2 * 244 | 0) + 228 >> 2];
                  g[p2 + (q2 * 244 | 0) + 232 >> 2] = (ia2 * ha2 + fa2 * ka2 - ga2 * ja2) * -fa2 + ((-(la2 * ha2) - fa2 * ja2 - ga2 * ka2) * -ga2 + ia2 * (ia2 * ka2 + la2 * ja2 - fa2 * ha2)) - (ga2 * ha2 + ia2 * ja2 - la2 * ka2) * -la2 - ma2 + +g[p2 + (q2 * 244 | 0) + 232 >> 2];
                }
              }
              o2 = o2 + 1 | 0;
            } while ((o2 | 0) != (e2 | 0));
          }
          if ((k2 | 0) > 0) {
            n2 = 0;
            do {
              W2 = c[j2 + (n2 << 2) >> 2] | 0;
              kb[c[(c[W2 >> 2] | 0) + 8 >> 2] & 255](W2);
              g[W2 + 36 >> 2] = 0;
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != (k2 | 0));
          }
          o2 = c[b2 + 168 >> 2] | 0;
          if ((o2 | 0) < (k2 | 0) ? (c[b2 + 172 >> 2] | 0) < (k2 | 0) : 0) {
            if (!k2)
              n2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              n2 = ic((k2 << 3 | 3) + 16 | 0) | 0;
              if (!n2)
                n2 = 0;
              else {
                c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                n2 = n2 + 4 + 15 & -16;
              }
              o2 = c[b2 + 168 >> 2] | 0;
            }
            if ((o2 | 0) > 0) {
              p2 = 0;
              do {
                U2 = (c[b2 + 176 >> 2] | 0) + (p2 << 3) | 0;
                V2 = c[U2 + 4 >> 2] | 0;
                W2 = n2 + (p2 << 3) | 0;
                c[W2 >> 2] = c[U2 >> 2];
                c[W2 + 4 >> 2] = V2;
                p2 = p2 + 1 | 0;
              } while ((p2 | 0) != (o2 | 0));
            }
            o2 = c[b2 + 176 >> 2] | 0;
            if (o2 | 0) {
              if (a[b2 + 180 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[o2 + -4 >> 2] | 0);
              }
              c[b2 + 176 >> 2] = 0;
            }
            a[b2 + 180 >> 0] = 1;
            c[b2 + 176 >> 2] = n2;
            c[b2 + 172 >> 2] = k2;
          }
          c[b2 + 168 >> 2] = k2;
          if ((k2 | 0) > 0) {
            n2 = 0;
            e2 = 0;
            do {
              s2 = c[b2 + 176 >> 2] | 0;
              d2 = s2 + (e2 << 3) | 0;
              q2 = j2 + (e2 << 2) | 0;
              o2 = c[q2 >> 2] | 0;
              p2 = c[o2 + 44 >> 2] | 0;
              if (p2) {
                o2 = p2 + 64 | 0;
                do {
                  c[p2 >> 2] = 0;
                  p2 = p2 + 4 | 0;
                } while ((p2 | 0) < (o2 | 0));
                o2 = c[q2 >> 2] | 0;
              }
              if (!(a[o2 + 20 >> 0] | 0)) {
                c[d2 >> 2] = 0;
                c[s2 + (e2 << 3) + 4 >> 2] = 0;
                o2 = 0;
              } else {
                mb[c[(c[o2 >> 2] | 0) + 16 >> 2] & 127](o2, d2);
                o2 = c[d2 >> 2] | 0;
              }
              n2 = o2 + n2 | 0;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (k2 | 0));
            q2 = n2;
          } else
            q2 = 0;
          o2 = c[b2 + 48 >> 2] | 0;
          if ((o2 | 0) < (q2 | 0) ? (c[b2 + 52 >> 2] | 0) < (q2 | 0) : 0) {
            if (!q2)
              n2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              n2 = ic((q2 * 152 | 3) + 16 | 0) | 0;
              if (!n2)
                n2 = 0;
              else {
                c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                n2 = n2 + 4 + 15 & -16;
              }
              o2 = c[b2 + 48 >> 2] | 0;
            }
            if ((o2 | 0) > 0) {
              p2 = 0;
              do {
                Lm(n2 + (p2 * 152 | 0) | 0, (c[b2 + 56 >> 2] | 0) + (p2 * 152 | 0) | 0, 152) | 0;
                p2 = p2 + 1 | 0;
              } while ((p2 | 0) != (o2 | 0));
            }
            o2 = c[b2 + 56 >> 2] | 0;
            if (o2 | 0) {
              if (a[b2 + 60 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[o2 + -4 >> 2] | 0);
              }
              c[b2 + 56 >> 2] = 0;
            }
            a[b2 + 60 >> 0] = 1;
            c[b2 + 56 >> 2] = n2;
            c[b2 + 52 >> 2] = q2;
          }
          c[b2 + 48 >> 2] = q2;
          if ((k2 | 0) > 0) {
            V2 = 0;
            W2 = 0;
            n2 = c[b2 + 176 >> 2] | 0;
            while (1) {
              U2 = n2 + (W2 << 3) | 0;
              if (!(c[U2 >> 2] | 0))
                o2 = 0;
              else {
                o2 = c[b2 + 56 >> 2] | 0;
                M2 = o2 + (V2 * 152 | 0) | 0;
                N2 = j2 + (W2 << 2) | 0;
                O2 = c[N2 >> 2] | 0;
                P2 = c[O2 + 28 >> 2] | 0;
                Q2 = c[O2 + 32 >> 2] | 0;
                R2 = Oj(b2, P2, +g[m2 + 12 >> 2]) | 0;
                S2 = Oj(b2, Q2, +g[m2 + 12 >> 2]) | 0;
                T2 = c[b2 + 16 >> 2] | 0;
                p2 = c[O2 + 24 >> 2] | 0;
                p2 = (p2 | 0) > 0 ? p2 : c[m2 + 20 >> 2] | 0;
                if ((p2 | 0) > (c[b2 + 184 >> 2] | 0))
                  c[b2 + 184 >> 2] = p2;
                if ((c[U2 >> 2] | 0) > 0) {
                  n2 = 0;
                  do {
                    yn(M2 + (n2 * 152 | 0) | 0, 0, 152) | 0;
                    g[M2 + (n2 * 152 | 0) + 120 >> 2] = -34028234663852886e22;
                    g[M2 + (n2 * 152 | 0) + 124 >> 2] = 34028234663852886e22;
                    g[M2 + (n2 * 152 | 0) + 100 >> 2] = 0;
                    g[M2 + (n2 * 152 | 0) + 96 >> 2] = 0;
                    c[M2 + (n2 * 152 | 0) + 144 >> 2] = R2;
                    c[M2 + (n2 * 152 | 0) + 148 >> 2] = S2;
                    c[M2 + (n2 * 152 | 0) + 136 >> 2] = p2;
                    n2 = n2 + 1 | 0;
                  } while ((n2 | 0) < (c[U2 >> 2] | 0));
                }
                c[T2 + (R2 * 244 | 0) + 64 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 64 + 4 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 64 + 8 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 64 + 12 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 64 + 16 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 64 + 20 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 64 + 24 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 64 + 28 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 144 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 144 + 4 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 144 + 8 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 144 + 12 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 144 + 16 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 144 + 20 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 144 + 24 >> 2] = 0;
                c[T2 + (R2 * 244 | 0) + 144 + 28 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 64 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 64 + 4 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 64 + 8 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 64 + 12 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 64 + 16 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 64 + 20 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 64 + 24 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 64 + 28 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 144 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 144 + 4 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 144 + 8 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 144 + 12 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 144 + 16 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 144 + 20 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 144 + 24 >> 2] = 0;
                c[T2 + (S2 * 244 | 0) + 144 + 28 >> 2] = 0;
                g[Y2 >> 2] = 1 / +g[m2 + 12 >> 2];
                c[Y2 + 4 >> 2] = c[m2 + 32 >> 2];
                c[Y2 + 8 >> 2] = o2 + (V2 * 152 | 0) + 16;
                c[Y2 + 12 >> 2] = M2;
                c[Y2 + 16 >> 2] = o2 + (V2 * 152 | 0) + 48;
                c[Y2 + 20 >> 2] = o2 + (V2 * 152 | 0) + 32;
                c[Y2 + 24 >> 2] = 38;
                c[Y2 + 28 >> 2] = o2 + (V2 * 152 | 0) + 112;
                L2 = o2 + (V2 * 152 | 0) + 116 | 0;
                c[L2 >> 2] = c[m2 + 40 >> 2];
                c[Y2 + 48 >> 2] = c[m2 + 4 >> 2];
                c[Y2 + 32 >> 2] = L2;
                c[Y2 + 36 >> 2] = o2 + (V2 * 152 | 0) + 120;
                c[Y2 + 40 >> 2] = o2 + (V2 * 152 | 0) + 124;
                c[Y2 + 44 >> 2] = c[m2 + 20 >> 2];
                L2 = c[N2 >> 2] | 0;
                mb[c[(c[L2 >> 2] | 0) + 20 >> 2] & 127](L2, Y2);
                if ((c[U2 >> 2] | 0) > 0) {
                  L2 = 0;
                  do {
                    n2 = M2 + (L2 * 152 | 0) + 124 | 0;
                    r2 = +g[(c[N2 >> 2] | 0) + 16 >> 2];
                    if (+g[n2 >> 2] >= r2)
                      g[n2 >> 2] = r2;
                    n2 = M2 + (L2 * 152 | 0) + 120 | 0;
                    if (+g[n2 >> 2] <= -r2)
                      g[n2 >> 2] = -r2;
                    c[M2 + (L2 * 152 | 0) + 132 >> 2] = O2;
                    H2 = M2 + (L2 * 152 | 0) | 0;
                    I2 = M2 + (L2 * 152 | 0) + 64 | 0;
                    J2 = c[O2 + 28 >> 2] | 0;
                    la2 = +g[H2 >> 2];
                    ja2 = +g[H2 + 4 >> 2];
                    K2 = +g[H2 + 8 >> 2];
                    ka2 = (la2 * +g[J2 + 320 >> 2] + ja2 * +g[J2 + 324 >> 2] + K2 * +g[J2 + 328 >> 2]) * +g[J2 + 588 >> 2];
                    r2 = (la2 * +g[J2 + 336 >> 2] + ja2 * +g[J2 + 340 >> 2] + K2 * +g[J2 + 344 >> 2]) * +g[J2 + 592 >> 2];
                    g[I2 >> 2] = (+g[J2 + 304 >> 2] * la2 + +g[J2 + 308 >> 2] * ja2 + +g[J2 + 312 >> 2] * K2) * +g[J2 + 584 >> 2];
                    g[I2 + 4 >> 2] = ka2;
                    g[I2 + 8 >> 2] = r2;
                    g[I2 + 12 >> 2] = 0;
                    I2 = M2 + (L2 * 152 | 0) + 32 | 0;
                    J2 = M2 + (L2 * 152 | 0) + 80 | 0;
                    E2 = c[O2 + 32 >> 2] | 0;
                    r2 = +g[I2 >> 2];
                    ka2 = +g[I2 + 4 >> 2];
                    K2 = +g[I2 + 8 >> 2];
                    ja2 = (r2 * +g[E2 + 320 >> 2] + ka2 * +g[E2 + 324 >> 2] + K2 * +g[E2 + 328 >> 2]) * +g[E2 + 588 >> 2];
                    la2 = (r2 * +g[E2 + 336 >> 2] + ka2 * +g[E2 + 340 >> 2] + K2 * +g[E2 + 344 >> 2]) * +g[E2 + 592 >> 2];
                    g[J2 >> 2] = (+g[E2 + 304 >> 2] * r2 + +g[E2 + 308 >> 2] * ka2 + +g[E2 + 312 >> 2] * K2) * +g[E2 + 584 >> 2];
                    g[J2 + 4 >> 2] = ja2;
                    g[J2 + 8 >> 2] = la2;
                    g[J2 + 12 >> 2] = 0;
                    J2 = M2 + (L2 * 152 | 0) + 16 | 0;
                    la2 = +g[P2 + 384 >> 2];
                    ja2 = +g[J2 >> 2];
                    ka2 = +g[J2 + 4 >> 2];
                    r2 = +g[J2 + 8 >> 2];
                    t2 = +g[H2 >> 2];
                    u2 = +g[H2 + 4 >> 2];
                    v2 = +g[H2 + 8 >> 2];
                    H2 = M2 + (L2 * 152 | 0) + 48 | 0;
                    ma2 = +g[Q2 + 384 >> 2];
                    w2 = +g[H2 >> 2];
                    x2 = +g[H2 + 4 >> 2];
                    y2 = +g[H2 + 8 >> 2];
                    z2 = +g[I2 >> 2];
                    A2 = +g[I2 + 4 >> 2];
                    K2 = ja2 * la2 * ja2 + ka2 * la2 * ka2 + r2 * la2 * r2 + (t2 * (+g[P2 + 304 >> 2] * t2 + +g[P2 + 308 >> 2] * u2 + +g[P2 + 312 >> 2] * v2) + u2 * (t2 * +g[P2 + 320 >> 2] + u2 * +g[P2 + 324 >> 2] + v2 * +g[P2 + 328 >> 2]) + v2 * (t2 * +g[P2 + 336 >> 2] + u2 * +g[P2 + 340 >> 2] + v2 * +g[P2 + 344 >> 2])) + (w2 * ma2 * w2 + x2 * ma2 * x2 + y2 * ma2 * y2) + (z2 * (+g[Q2 + 304 >> 2] * z2 + +g[Q2 + 308 >> 2] * A2 + +g[Q2 + 312 >> 2] * K2) + A2 * (z2 * +g[Q2 + 320 >> 2] + A2 * +g[Q2 + 324 >> 2] + K2 * +g[Q2 + 328 >> 2]) + K2 * (z2 * +g[Q2 + 336 >> 2] + A2 * +g[Q2 + 340 >> 2] + K2 * +g[Q2 + 344 >> 2]));
                    H2 = +F(+K2) > 11920928955078125e-23;
                    K2 = H2 ? 1 / K2 : 0;
                    g[M2 + (L2 * 152 | 0) + 108 >> 2] = K2;
                    if (!(c[T2 + (R2 * 244 | 0) + 240 >> 2] | 0)) {
                      p2 = 0;
                      q2 = 0;
                      e2 = 0;
                      B2 = 0;
                      E2 = 0;
                      H2 = 0;
                    } else {
                      p2 = c[T2 + (R2 * 244 | 0) + 224 >> 2] | 0;
                      q2 = c[T2 + (R2 * 244 | 0) + 208 >> 2] | 0;
                      e2 = c[T2 + (R2 * 244 | 0) + 228 >> 2] | 0;
                      B2 = c[T2 + (R2 * 244 | 0) + 212 >> 2] | 0;
                      E2 = c[T2 + (R2 * 244 | 0) + 232 >> 2] | 0;
                      H2 = c[T2 + (R2 * 244 | 0) + 216 >> 2] | 0;
                    }
                    if (!(c[T2 + (S2 * 244 | 0) + 240 >> 2] | 0)) {
                      n2 = 0;
                      o2 = 0;
                      s2 = 0;
                      d2 = 0;
                      C2 = 0;
                      D2 = 0;
                    } else {
                      n2 = c[T2 + (S2 * 244 | 0) + 224 >> 2] | 0;
                      o2 = c[T2 + (S2 * 244 | 0) + 208 >> 2] | 0;
                      s2 = c[T2 + (S2 * 244 | 0) + 228 >> 2] | 0;
                      d2 = c[T2 + (S2 * 244 | 0) + 212 >> 2] | 0;
                      C2 = c[T2 + (S2 * 244 | 0) + 232 >> 2] | 0;
                      D2 = c[T2 + (S2 * 244 | 0) + 216 >> 2] | 0;
                    }
                    la2 = (c[l >> 2] = q2, +g[l >> 2]) + +g[P2 + 352 >> 2];
                    ka2 = (c[l >> 2] = B2, +g[l >> 2]) + +g[P2 + 356 >> 2];
                    ka2 = la2 * +g[J2 >> 2] + ka2 * +g[J2 + 4 >> 2] + ((c[l >> 2] = H2, +g[l >> 2]) + +g[P2 + 360 >> 2]) * r2;
                    la2 = (c[l >> 2] = p2, +g[l >> 2]) + +g[P2 + 368 >> 2];
                    ja2 = (c[l >> 2] = e2, +g[l >> 2]) + +g[P2 + 372 >> 2];
                    ja2 = ka2 + (la2 * t2 + ja2 * u2 + ((c[l >> 2] = E2, +g[l >> 2]) + +g[P2 + 376 >> 2]) * v2);
                    la2 = (c[l >> 2] = o2, +g[l >> 2]) + +g[Q2 + 352 >> 2];
                    ka2 = (c[l >> 2] = d2, +g[l >> 2]) + +g[Q2 + 356 >> 2];
                    ka2 = la2 * w2 + ka2 * x2 + ((c[l >> 2] = D2, +g[l >> 2]) + +g[Q2 + 360 >> 2]) * y2;
                    la2 = (c[l >> 2] = n2, +g[l >> 2]) + +g[Q2 + 368 >> 2];
                    ma2 = (c[l >> 2] = s2, +g[l >> 2]) + +g[Q2 + 372 >> 2];
                    J2 = M2 + (L2 * 152 | 0) + 112 | 0;
                    g[J2 >> 2] = +g[J2 >> 2] * K2 + K2 * (0 - +g[Y2 + 48 >> 2] * (ja2 + (ka2 + (la2 * z2 + ma2 * A2 + ((c[l >> 2] = C2, +g[l >> 2]) + +g[Q2 + 376 >> 2]) * +g[I2 + 8 >> 2]))));
                    g[M2 + (L2 * 152 | 0) + 100 >> 2] = 0;
                    L2 = L2 + 1 | 0;
                  } while ((L2 | 0) < (c[U2 >> 2] | 0));
                }
                n2 = c[b2 + 176 >> 2] | 0;
                o2 = c[n2 + (W2 << 3) >> 2] | 0;
              }
              W2 = W2 + 1 | 0;
              if ((W2 | 0) == (k2 | 0))
                break;
              else
                V2 = o2 + V2 | 0;
            }
          }
          Yb[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2, f2, h2, m2);
          s2 = c[b2 + 48 >> 2] | 0;
          d2 = c[b2 + 28 >> 2] | 0;
          e2 = c[b2 + 68 >> 2] | 0;
          o2 = c[b2 + 128 >> 2] | 0;
          if ((o2 | 0) < (s2 | 0) ? (c[b2 + 132 >> 2] | 0) < (s2 | 0) : 0) {
            if (!s2)
              n2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              n2 = ic((s2 << 2 | 3) + 16 | 0) | 0;
              if (!n2)
                n2 = 0;
              else {
                c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                n2 = n2 + 4 + 15 & -16;
              }
              o2 = c[b2 + 128 >> 2] | 0;
            }
            q2 = c[b2 + 136 >> 2] | 0;
            if ((o2 | 0) <= 0)
              if (!q2)
                o2 = b2 + 140 | 0;
              else
                X2 = 103;
            else {
              p2 = 0;
              do {
                c[n2 + (p2 << 2) >> 2] = c[q2 + (p2 << 2) >> 2];
                p2 = p2 + 1 | 0;
              } while ((p2 | 0) != (o2 | 0));
              X2 = 103;
            }
            if ((X2 | 0) == 103) {
              if (a[b2 + 140 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[q2 + -4 >> 2] | 0);
              }
              c[b2 + 136 >> 2] = 0;
              o2 = b2 + 140 | 0;
            }
            a[o2 >> 0] = 1;
            c[b2 + 136 >> 2] = n2;
            c[b2 + 132 >> 2] = s2;
          }
          c[b2 + 128 >> 2] = s2;
          if (!(c[m2 + 64 >> 2] & 16)) {
            o2 = c[b2 + 108 >> 2] | 0;
            if ((o2 | 0) < (d2 | 0) ? (c[b2 + 112 >> 2] | 0) < (d2 | 0) : 0) {
              if (!d2)
                n2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                n2 = ic((d2 << 2 | 3) + 16 | 0) | 0;
                if (!n2)
                  n2 = 0;
                else {
                  c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                  n2 = n2 + 4 + 15 & -16;
                }
                o2 = c[b2 + 108 >> 2] | 0;
              }
              q2 = c[b2 + 116 >> 2] | 0;
              if ((o2 | 0) <= 0)
                if (!q2)
                  o2 = b2 + 120 | 0;
                else
                  X2 = 133;
              else {
                p2 = 0;
                do {
                  c[n2 + (p2 << 2) >> 2] = c[q2 + (p2 << 2) >> 2];
                  p2 = p2 + 1 | 0;
                } while ((p2 | 0) != (o2 | 0));
                X2 = 133;
              }
              if ((X2 | 0) == 133) {
                if (a[b2 + 120 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[q2 + -4 >> 2] | 0);
                }
                c[b2 + 116 >> 2] = 0;
                o2 = b2 + 120 | 0;
              }
              a[o2 >> 0] = 1;
              c[b2 + 116 >> 2] = n2;
              c[b2 + 112 >> 2] = d2;
            }
            c[b2 + 108 >> 2] = d2;
          } else {
            o2 = c[b2 + 108 >> 2] | 0;
            if ((o2 | 0) < (d2 << 1 | 0) ? (c[b2 + 112 >> 2] | 0) < (d2 << 1 | 0) : 0) {
              if (!d2)
                n2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                n2 = ic((d2 << 3 | 3) + 16 | 0) | 0;
                if (!n2)
                  n2 = 0;
                else {
                  c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                  n2 = n2 + 4 + 15 & -16;
                }
                o2 = c[b2 + 108 >> 2] | 0;
              }
              q2 = c[b2 + 116 >> 2] | 0;
              if ((o2 | 0) <= 0)
                if (!q2)
                  o2 = b2 + 120 | 0;
                else
                  X2 = 118;
              else {
                p2 = 0;
                do {
                  c[n2 + (p2 << 2) >> 2] = c[q2 + (p2 << 2) >> 2];
                  p2 = p2 + 1 | 0;
                } while ((p2 | 0) != (o2 | 0));
                X2 = 118;
              }
              if ((X2 | 0) == 118) {
                if (a[b2 + 120 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[q2 + -4 >> 2] | 0);
                }
                c[b2 + 116 >> 2] = 0;
                o2 = b2 + 120 | 0;
              }
              a[o2 >> 0] = 1;
              c[b2 + 116 >> 2] = n2;
              c[b2 + 112 >> 2] = d2 << 1;
            }
            c[b2 + 108 >> 2] = d2 << 1;
          }
          o2 = c[b2 + 148 >> 2] | 0;
          if ((o2 | 0) < (e2 | 0) ? (c[b2 + 152 >> 2] | 0) < (e2 | 0) : 0) {
            if (!e2)
              n2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              n2 = ic((e2 << 2 | 3) + 16 | 0) | 0;
              if (!n2)
                n2 = 0;
              else {
                c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                n2 = n2 + 4 + 15 & -16;
              }
              o2 = c[b2 + 148 >> 2] | 0;
            }
            q2 = c[b2 + 156 >> 2] | 0;
            if ((o2 | 0) <= 0)
              if (!q2)
                o2 = b2 + 160 | 0;
              else
                X2 = 148;
            else {
              p2 = 0;
              do {
                c[n2 + (p2 << 2) >> 2] = c[q2 + (p2 << 2) >> 2];
                p2 = p2 + 1 | 0;
              } while ((p2 | 0) != (o2 | 0));
              X2 = 148;
            }
            if ((X2 | 0) == 148) {
              if (a[b2 + 160 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[q2 + -4 >> 2] | 0);
              }
              c[b2 + 156 >> 2] = 0;
              o2 = b2 + 160 | 0;
            }
            a[o2 >> 0] = 1;
            c[b2 + 156 >> 2] = n2;
            c[b2 + 152 >> 2] = e2;
          }
          c[b2 + 148 >> 2] = e2;
          if ((s2 | 0) > 0) {
            o2 = c[b2 + 136 >> 2] | 0;
            n2 = 0;
            do {
              c[o2 + (n2 << 2) >> 2] = n2;
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != (s2 | 0));
          }
          if ((d2 | 0) > 0) {
            o2 = c[b2 + 116 >> 2] | 0;
            n2 = 0;
            do {
              c[o2 + (n2 << 2) >> 2] = n2;
              n2 = n2 + 1 | 0;
            } while ((n2 | 0) != (d2 | 0));
          }
          if ((e2 | 0) <= 0) {
            i = Y2;
            return 0;
          }
          o2 = c[b2 + 156 >> 2] | 0;
          n2 = 0;
          do {
            c[o2 + (n2 << 2) >> 2] = n2;
            n2 = n2 + 1 | 0;
          } while ((n2 | 0) != (e2 | 0));
          i = Y2;
          return 0;
        }
        function lc(e2, f2, g2, j2, k2) {
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          var m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0;
          N2 = i;
          i = i + 624 | 0;
          J2 = N2 + 536 + 40 | 0;
          K2 = N2 + 588 | 0;
          L2 = N2 + 576 + 12 | 0;
          M2 = N2 + 588 + 9 | 0;
          n2 = 0;
          m2 = 0;
          r2 = 0;
          a:
            while (1) {
              do
                if ((m2 | 0) > -1)
                  if ((n2 | 0) > (2147483647 - m2 | 0)) {
                    c[6326] = 75;
                    m2 = -1;
                    break;
                  } else {
                    m2 = n2 + m2 | 0;
                    break;
                  }
              while (0);
              n2 = a[f2 >> 0] | 0;
              if (!(n2 << 24 >> 24)) {
                I2 = 261;
                break;
              } else
                o2 = f2;
              b:
                while (1) {
                  switch (n2 << 24 >> 24) {
                    case 37: {
                      n2 = o2;
                      I2 = 9;
                      break b;
                    }
                    case 0: {
                      n2 = o2;
                      break b;
                    }
                    default: {
                    }
                  }
                  n2 = o2 + 1 | 0;
                  o2 = n2;
                  n2 = a[n2 >> 0] | 0;
                }
              c:
                do
                  if ((I2 | 0) == 9)
                    while (1) {
                      I2 = 0;
                      if ((a[o2 + 1 >> 0] | 0) != 37)
                        break c;
                      n2 = n2 + 1 | 0;
                      o2 = o2 + 2 | 0;
                      if ((a[o2 >> 0] | 0) == 37)
                        I2 = 9;
                      else
                        break;
                    }
                while (0);
              n2 = n2 - f2 | 0;
              if (e2 | 0 ? (c[e2 >> 2] & 32 | 0) == 0 : 0)
                pk(f2, n2, e2);
              if (n2 | 0) {
                f2 = o2;
                continue;
              }
              p2 = o2 + 1 | 0;
              n2 = a[p2 >> 0] | 0;
              if (((n2 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
                u2 = (a[o2 + 2 >> 0] | 0) == 36;
                p2 = u2 ? o2 + 3 | 0 : p2;
                x2 = u2 ? (n2 << 24 >> 24) + -48 | 0 : -1;
                u2 = u2 ? 1 : r2;
                n2 = a[p2 >> 0] | 0;
              } else {
                x2 = -1;
                u2 = r2;
              }
              o2 = (n2 << 24 >> 24) + -32 | 0;
              d:
                do
                  if (o2 >>> 0 < 32) {
                    r2 = 0;
                    do {
                      if (!(1 << o2 & 75913))
                        break d;
                      r2 = 1 << (n2 << 24 >> 24) + -32 | r2;
                      p2 = p2 + 1 | 0;
                      n2 = a[p2 >> 0] | 0;
                      o2 = (n2 << 24 >> 24) + -32 | 0;
                    } while (o2 >>> 0 < 32);
                  } else
                    r2 = 0;
                while (0);
              do
                if (n2 << 24 >> 24 != 42) {
                  o2 = (n2 << 24 >> 24) + -48 | 0;
                  if (o2 >>> 0 < 10) {
                    s2 = 0;
                    do {
                      s2 = (s2 * 10 | 0) + o2 | 0;
                      p2 = p2 + 1 | 0;
                      n2 = a[p2 >> 0] | 0;
                      o2 = (n2 << 24 >> 24) + -48 | 0;
                    } while (o2 >>> 0 < 10);
                    if ((s2 | 0) < 0) {
                      m2 = -1;
                      break a;
                    } else
                      H2 = u2;
                  } else {
                    s2 = 0;
                    H2 = u2;
                  }
                } else {
                  t2 = p2 + 1 | 0;
                  n2 = a[t2 >> 0] | 0;
                  if (((n2 << 24 >> 24) + -48 | 0) >>> 0 < 10 ? (a[p2 + 2 >> 0] | 0) == 36 : 0) {
                    c[k2 + ((n2 << 24 >> 24) + -48 << 2) >> 2] = 10;
                    n2 = c[j2 + ((a[t2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                    o2 = 1;
                    t2 = p2 + 3 | 0;
                  } else {
                    if (u2 | 0) {
                      m2 = -1;
                      break a;
                    }
                    if (!e2) {
                      s2 = 0;
                      H2 = 0;
                      p2 = t2;
                      break;
                    }
                    o2 = (c[g2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                    n2 = c[o2 >> 2] | 0;
                    c[g2 >> 2] = o2 + 4;
                    o2 = 0;
                  }
                  H2 = (n2 | 0) < 0;
                  s2 = H2 ? 0 - n2 | 0 : n2;
                  r2 = H2 ? r2 | 8192 : r2;
                  H2 = o2;
                  p2 = t2;
                  n2 = a[t2 >> 0] | 0;
                }
              while (0);
              e:
                do
                  if (n2 << 24 >> 24 == 46) {
                    n2 = p2 + 1 | 0;
                    t2 = a[n2 >> 0] | 0;
                    if (t2 << 24 >> 24 != 42) {
                      if (((t2 << 24 >> 24) + -48 | 0) >>> 0 < 10) {
                        o2 = 0;
                        p2 = (t2 << 24 >> 24) + -48 | 0;
                      } else {
                        t2 = 0;
                        break;
                      }
                      while (1) {
                        o2 = (o2 * 10 | 0) + p2 | 0;
                        n2 = n2 + 1 | 0;
                        p2 = (a[n2 >> 0] | 0) + -48 | 0;
                        if (p2 >>> 0 >= 10) {
                          t2 = o2;
                          break e;
                        }
                      }
                    }
                    n2 = p2 + 2 | 0;
                    o2 = (a[n2 >> 0] | 0) + -48 | 0;
                    if (o2 >>> 0 < 10 ? (a[p2 + 3 >> 0] | 0) == 36 : 0) {
                      c[k2 + (o2 << 2) >> 2] = 10;
                      t2 = c[j2 + ((a[n2 >> 0] | 0) + -48 << 3) >> 2] | 0;
                      n2 = p2 + 4 | 0;
                      break;
                    }
                    if (H2 | 0) {
                      m2 = -1;
                      break a;
                    }
                    if (e2 | 0) {
                      G2 = (c[g2 >> 2] | 0) + (4 - 1) & ~(4 - 1);
                      t2 = c[G2 >> 2] | 0;
                      c[g2 >> 2] = G2 + 4;
                    } else
                      t2 = 0;
                  } else {
                    t2 = -1;
                    n2 = p2;
                  }
                while (0);
              w2 = 0;
              while (1) {
                o2 = (a[n2 >> 0] | 0) + -65 | 0;
                if (o2 >>> 0 > 57) {
                  m2 = -1;
                  break a;
                }
                G2 = n2 + 1 | 0;
                o2 = a[18953 + (w2 * 58 | 0) + o2 >> 0] | 0;
                if (((o2 & 255) + -1 | 0) >>> 0 < 8) {
                  w2 = o2 & 255;
                  n2 = G2;
                } else
                  break;
              }
              if (!(o2 << 24 >> 24)) {
                m2 = -1;
                break;
              }
              p2 = (x2 | 0) > -1;
              do
                if (o2 << 24 >> 24 == 19)
                  if (p2) {
                    m2 = -1;
                    break a;
                  } else
                    I2 = 51;
                else {
                  if (p2) {
                    c[k2 + (x2 << 2) >> 2] = o2 & 255;
                    F2 = j2 + (x2 << 3) | 0;
                    I2 = c[F2 + 4 >> 2] | 0;
                    c[N2 >> 2] = c[F2 >> 2];
                    c[N2 + 4 >> 2] = I2;
                    I2 = 51;
                    break;
                  }
                  if (!e2) {
                    m2 = 0;
                    break a;
                  }
                  Hg(N2, o2 & 255, g2);
                }
              while (0);
              if ((I2 | 0) == 51 ? (I2 = 0, (e2 | 0) == 0) : 0) {
                n2 = 0;
                r2 = H2;
                f2 = G2;
                continue;
              }
              A2 = a[n2 >> 0] | 0;
              A2 = (w2 | 0) != 0 & (A2 & 15 | 0) == 3 ? A2 & -33 : A2;
              y2 = r2 & -65537;
              u2 = (r2 & 8192 | 0) == 0 ? r2 : y2;
              f:
                do
                  switch (A2 | 0) {
                    case 110:
                      switch ((w2 & 255) << 24 >> 24) {
                        case 0: {
                          c[c[N2 >> 2] >> 2] = m2;
                          n2 = 0;
                          r2 = H2;
                          f2 = G2;
                          continue a;
                        }
                        case 1: {
                          c[c[N2 >> 2] >> 2] = m2;
                          n2 = 0;
                          r2 = H2;
                          f2 = G2;
                          continue a;
                        }
                        case 2: {
                          n2 = c[N2 >> 2] | 0;
                          c[n2 >> 2] = m2;
                          c[n2 + 4 >> 2] = ((m2 | 0) < 0) << 31 >> 31;
                          n2 = 0;
                          r2 = H2;
                          f2 = G2;
                          continue a;
                        }
                        case 3: {
                          b[c[N2 >> 2] >> 1] = m2;
                          n2 = 0;
                          r2 = H2;
                          f2 = G2;
                          continue a;
                        }
                        case 4: {
                          a[c[N2 >> 2] >> 0] = m2;
                          n2 = 0;
                          r2 = H2;
                          f2 = G2;
                          continue a;
                        }
                        case 6: {
                          c[c[N2 >> 2] >> 2] = m2;
                          n2 = 0;
                          r2 = H2;
                          f2 = G2;
                          continue a;
                        }
                        case 7: {
                          n2 = c[N2 >> 2] | 0;
                          c[n2 >> 2] = m2;
                          c[n2 + 4 >> 2] = ((m2 | 0) < 0) << 31 >> 31;
                          n2 = 0;
                          r2 = H2;
                          f2 = G2;
                          continue a;
                        }
                        default: {
                          n2 = 0;
                          r2 = H2;
                          f2 = G2;
                          continue a;
                        }
                      }
                    case 112: {
                      w2 = 120;
                      t2 = t2 >>> 0 > 8 ? t2 : 8;
                      n2 = u2 | 8;
                      I2 = 63;
                      break;
                    }
                    case 88:
                    case 120: {
                      w2 = A2;
                      n2 = u2;
                      I2 = 63;
                      break;
                    }
                    case 111: {
                      n2 = c[N2 >> 2] | 0;
                      o2 = c[N2 + 4 >> 2] | 0;
                      if ((n2 | 0) == 0 & (o2 | 0) == 0)
                        f2 = J2;
                      else {
                        f2 = J2;
                        do {
                          f2 = f2 + -1 | 0;
                          a[f2 >> 0] = n2 & 7 | 48;
                          n2 = ps(n2 | 0, o2 | 0, 3) | 0;
                          o2 = D;
                        } while (!((n2 | 0) == 0 & (o2 | 0) == 0));
                      }
                      if (!(u2 & 8)) {
                        o2 = 0;
                        p2 = 19433;
                        n2 = u2;
                        I2 = 76;
                      } else {
                        n2 = J2 - f2 | 0;
                        o2 = 0;
                        p2 = 19433;
                        t2 = (t2 | 0) > (n2 | 0) ? t2 : n2 + 1 | 0;
                        n2 = u2;
                        I2 = 76;
                      }
                      break;
                    }
                    case 105:
                    case 100: {
                      n2 = c[N2 >> 2] | 0;
                      f2 = c[N2 + 4 >> 2] | 0;
                      if ((f2 | 0) < 0) {
                        n2 = Ds(0, 0, n2 | 0, f2 | 0) | 0;
                        f2 = D;
                        c[N2 >> 2] = n2;
                        c[N2 + 4 >> 2] = f2;
                        o2 = 1;
                        p2 = 19433;
                        I2 = 75;
                        break f;
                      }
                      if (!(u2 & 2048)) {
                        o2 = u2 & 1;
                        p2 = (u2 & 1 | 0) == 0 ? 19433 : 19435;
                        I2 = 75;
                      } else {
                        o2 = 1;
                        p2 = 19434;
                        I2 = 75;
                      }
                      break;
                    }
                    case 117: {
                      o2 = 0;
                      p2 = 19433;
                      n2 = c[N2 >> 2] | 0;
                      f2 = c[N2 + 4 >> 2] | 0;
                      I2 = 75;
                      break;
                    }
                    case 99: {
                      a[N2 + 536 + 39 >> 0] = c[N2 >> 2];
                      f2 = N2 + 536 + 39 | 0;
                      x2 = 0;
                      w2 = 19433;
                      n2 = J2;
                      t2 = 1;
                      u2 = y2;
                      break;
                    }
                    case 109: {
                      o2 = c[6326] | 0;
                      f2 = 0;
                      while (1) {
                        if ((d[19487 + f2 >> 0] | 0) == (o2 | 0)) {
                          I2 = 80;
                          break;
                        }
                        n2 = f2 + 1 | 0;
                        if ((n2 | 0) == 87) {
                          n2 = 19575;
                          f2 = 87;
                          break;
                        } else
                          f2 = n2;
                      }
                      if ((I2 | 0) == 80)
                        if (!f2) {
                          n2 = 19575;
                          I2 = 87;
                          break f;
                        } else
                          n2 = 19575;
                      do {
                        do {
                          I2 = n2;
                          n2 = n2 + 1 | 0;
                        } while ((a[I2 >> 0] | 0) != 0);
                        f2 = f2 + -1 | 0;
                      } while ((f2 | 0) != 0);
                      I2 = 87;
                      break;
                    }
                    case 115: {
                      n2 = c[N2 >> 2] | 0;
                      n2 = n2 | 0 ? n2 : 19443;
                      I2 = 87;
                      break;
                    }
                    case 67: {
                      c[N2 + 8 >> 2] = c[N2 >> 2];
                      c[N2 + 8 + 4 >> 2] = 0;
                      c[N2 >> 2] = N2 + 8;
                      t2 = -1;
                      o2 = N2 + 8 | 0;
                      I2 = 103;
                      break;
                    }
                    case 83: {
                      n2 = c[N2 >> 2] | 0;
                      if (!t2) {
                        $k(e2, 32, s2, 0, u2);
                        n2 = 0;
                        I2 = 114;
                      } else {
                        o2 = n2;
                        I2 = 103;
                      }
                      break;
                    }
                    case 65:
                    case 71:
                    case 70:
                    case 69:
                    case 97:
                    case 103:
                    case 102:
                    case 101: {
                      q2 = +h[N2 >> 3];
                      c[N2 + 16 >> 2] = 0;
                      h[l >> 3] = q2;
                      if ((c[l + 4 >> 2] | 0) >= 0)
                        if (!(u2 & 2048)) {
                          C2 = u2 & 1;
                          F2 = (u2 & 1 | 0) == 0 ? 19451 : 19456;
                        } else {
                          C2 = 1;
                          F2 = 19453;
                        }
                      else {
                        q2 = -q2;
                        C2 = 1;
                        F2 = 19450;
                      }
                      h[l >> 3] = q2;
                      E2 = c[l + 4 >> 2] & 2146435072;
                      do
                        if (E2 >>> 0 < 2146435072 | (E2 | 0) == 2146435072 & 0 < 0) {
                          v2 = +vm(q2, N2 + 16 | 0) * 2;
                          if (v2 != 0)
                            c[N2 + 16 >> 2] = (c[N2 + 16 >> 2] | 0) + -1;
                          if ((A2 | 32 | 0) == 97) {
                            w2 = (A2 & 32 | 0) == 0 ? F2 : F2 + 9 | 0;
                            r2 = C2 | 2;
                            n2 = 12 - t2 | 0;
                            do
                              if (!(t2 >>> 0 > 11 | (n2 | 0) == 0)) {
                                q2 = 8;
                                do {
                                  n2 = n2 + -1 | 0;
                                  q2 = q2 * 16;
                                } while ((n2 | 0) != 0);
                                if ((a[w2 >> 0] | 0) == 45) {
                                  q2 = -(q2 + (-v2 - q2));
                                  break;
                                } else {
                                  q2 = v2 + q2 - q2;
                                  break;
                                }
                              } else
                                q2 = v2;
                            while (0);
                            f2 = c[N2 + 16 >> 2] | 0;
                            n2 = (f2 | 0) < 0 ? 0 - f2 | 0 : f2;
                            n2 = zm(n2, ((n2 | 0) < 0) << 31 >> 31, N2 + 576 + 12 | 0) | 0;
                            if ((n2 | 0) == (N2 + 576 + 12 | 0)) {
                              a[N2 + 576 + 11 >> 0] = 48;
                              n2 = N2 + 576 + 11 | 0;
                            }
                            a[n2 + -1 >> 0] = (f2 >> 31 & 2) + 43;
                            p2 = n2 + -2 | 0;
                            a[p2 >> 0] = A2 + 15;
                            o2 = (t2 | 0) < 1;
                            f2 = N2 + 588 | 0;
                            do {
                              F2 = ~~q2;
                              n2 = f2 + 1 | 0;
                              a[f2 >> 0] = d[19417 + F2 >> 0] | A2 & 32;
                              q2 = (q2 - +(F2 | 0)) * 16;
                              do
                                if ((n2 - K2 | 0) == 1) {
                                  if ((u2 & 8 | 0) == 0 & (o2 & q2 == 0)) {
                                    f2 = n2;
                                    break;
                                  }
                                  a[n2 >> 0] = 46;
                                  f2 = f2 + 2 | 0;
                                } else
                                  f2 = n2;
                              while (0);
                            } while (q2 != 0);
                            n2 = (t2 | 0) != 0 & (-2 - K2 + f2 | 0) < (t2 | 0) ? L2 + 2 + t2 - p2 | 0 : L2 - K2 - p2 + f2 | 0;
                            $k(e2, 32, s2, n2 + r2 | 0, u2);
                            if (!(c[e2 >> 2] & 32))
                              pk(w2, r2, e2);
                            $k(e2, 48, s2, n2 + r2 | 0, u2 ^ 65536);
                            if (!(c[e2 >> 2] & 32))
                              pk(N2 + 588 | 0, f2 - K2 | 0, e2);
                            $k(e2, 48, n2 - (f2 - K2 + (L2 - p2)) | 0, 0, 0);
                            if (!(c[e2 >> 2] & 32))
                              pk(p2, L2 - p2 | 0, e2);
                            $k(e2, 32, s2, n2 + r2 | 0, u2 ^ 8192);
                            n2 = (n2 + r2 | 0) < (s2 | 0) ? s2 : n2 + r2 | 0;
                            break;
                          }
                          n2 = (t2 | 0) < 0 ? 6 : t2;
                          if (v2 != 0) {
                            o2 = (c[N2 + 16 >> 2] | 0) + -28 | 0;
                            c[N2 + 16 >> 2] = o2;
                            q2 = v2 * 268435456;
                          } else {
                            q2 = v2;
                            o2 = c[N2 + 16 >> 2] | 0;
                          }
                          E2 = (o2 | 0) < 0 ? N2 + 24 | 0 : N2 + 24 + 288 | 0;
                          f2 = E2;
                          do {
                            B2 = ~~q2 >>> 0;
                            c[f2 >> 2] = B2;
                            f2 = f2 + 4 | 0;
                            q2 = (q2 - +(B2 >>> 0)) * 1e9;
                          } while (q2 != 0);
                          if ((o2 | 0) > 0) {
                            t2 = E2;
                            while (1) {
                              r2 = (o2 | 0) > 29 ? 29 : o2;
                              o2 = f2 + -4 | 0;
                              do
                                if (o2 >>> 0 < t2 >>> 0)
                                  p2 = t2;
                                else {
                                  p2 = 0;
                                  do {
                                    z2 = cs(c[o2 >> 2] | 0, 0, r2 | 0) | 0;
                                    z2 = Ct(z2 | 0, D | 0, p2 | 0, 0) | 0;
                                    B2 = D;
                                    y2 = er(z2 | 0, B2 | 0, 1e9, 0) | 0;
                                    c[o2 >> 2] = y2;
                                    p2 = Sv(z2 | 0, B2 | 0, 1e9, 0) | 0;
                                    o2 = o2 + -4 | 0;
                                  } while (o2 >>> 0 >= t2 >>> 0);
                                  if (!p2) {
                                    p2 = t2;
                                    break;
                                  }
                                  B2 = t2 + -4 | 0;
                                  c[B2 >> 2] = p2;
                                  p2 = B2;
                                }
                              while (0);
                              while (1) {
                                if (f2 >>> 0 <= p2 >>> 0)
                                  break;
                                o2 = f2 + -4 | 0;
                                if (!(c[o2 >> 2] | 0))
                                  f2 = o2;
                                else
                                  break;
                              }
                              o2 = (c[N2 + 16 >> 2] | 0) - r2 | 0;
                              c[N2 + 16 >> 2] = o2;
                              if ((o2 | 0) > 0)
                                t2 = p2;
                              else
                                break;
                            }
                          } else
                            p2 = E2;
                          if ((o2 | 0) < 0) {
                            do {
                              t2 = 0 - o2 | 0;
                              t2 = (t2 | 0) > 9 ? 9 : t2;
                              do
                                if (p2 >>> 0 < f2 >>> 0) {
                                  r2 = 0;
                                  o2 = p2;
                                  do {
                                    B2 = c[o2 >> 2] | 0;
                                    c[o2 >> 2] = (B2 >>> t2) + r2;
                                    r2 = S(B2 & (1 << t2) + -1, 1e9 >>> t2) | 0;
                                    o2 = o2 + 4 | 0;
                                  } while (o2 >>> 0 < f2 >>> 0);
                                  o2 = (c[p2 >> 2] | 0) == 0 ? p2 + 4 | 0 : p2;
                                  if (!r2) {
                                    p2 = o2;
                                    break;
                                  }
                                  c[f2 >> 2] = r2;
                                  p2 = o2;
                                  f2 = f2 + 4 | 0;
                                } else
                                  p2 = (c[p2 >> 2] | 0) == 0 ? p2 + 4 | 0 : p2;
                              while (0);
                              o2 = (A2 | 32 | 0) == 102 ? E2 : p2;
                              f2 = (f2 - o2 >> 2 | 0) > (((n2 + 25 | 0) / 9 | 0) + 1 | 0) ? o2 + (((n2 + 25 | 0) / 9 | 0) + 1 << 2) | 0 : f2;
                              o2 = (c[N2 + 16 >> 2] | 0) + t2 | 0;
                              c[N2 + 16 >> 2] = o2;
                            } while ((o2 | 0) < 0);
                            o2 = p2;
                          } else
                            o2 = p2;
                          do
                            if (o2 >>> 0 < f2 >>> 0) {
                              p2 = (E2 - o2 >> 2) * 9 | 0;
                              t2 = c[o2 >> 2] | 0;
                              if (t2 >>> 0 < 10)
                                break;
                              else
                                r2 = 10;
                              do {
                                r2 = r2 * 10 | 0;
                                p2 = p2 + 1 | 0;
                              } while (t2 >>> 0 >= r2 >>> 0);
                            } else
                              p2 = 0;
                          while (0);
                          r2 = n2 - ((A2 | 32 | 0) != 102 ? p2 : 0) + (((n2 | 0) != 0 & (A2 | 32 | 0) == 103) << 31 >> 31) | 0;
                          if ((r2 | 0) < (((f2 - E2 >> 2) * 9 | 0) + -9 | 0)) {
                            w2 = E2 + 4 + (((r2 + 9216 | 0) / 9 | 0) + -1024 << 2) | 0;
                            if ((((r2 + 9216 | 0) % 9 | 0) + 1 | 0) < 9) {
                              t2 = ((r2 + 9216 | 0) % 9 | 0) + 1 | 0;
                              r2 = 10;
                              do {
                                r2 = r2 * 10 | 0;
                                t2 = t2 + 1 | 0;
                              } while ((t2 | 0) != 9);
                            } else
                              r2 = 10;
                            y2 = c[w2 >> 2] | 0;
                            z2 = (y2 >>> 0) % (r2 >>> 0) | 0;
                            t2 = (w2 + 4 | 0) == (f2 | 0);
                            do
                              if (t2 & (z2 | 0) == 0)
                                r2 = w2;
                              else {
                                v2 = (((y2 >>> 0) / (r2 >>> 0) | 0) & 1 | 0) == 0 ? 9007199254740992 : 9007199254740994;
                                x2 = (r2 | 0) / 2 | 0;
                                if (z2 >>> 0 < x2 >>> 0)
                                  q2 = 0.5;
                                else
                                  q2 = t2 & (z2 | 0) == (x2 | 0) ? 1 : 1.5;
                                do
                                  if (C2) {
                                    if ((a[F2 >> 0] | 0) != 45)
                                      break;
                                    q2 = -q2;
                                    v2 = -v2;
                                  }
                                while (0);
                                c[w2 >> 2] = y2 - z2;
                                if (!(v2 + q2 != v2)) {
                                  r2 = w2;
                                  break;
                                }
                                B2 = y2 - z2 + r2 | 0;
                                c[w2 >> 2] = B2;
                                if (B2 >>> 0 > 999999999) {
                                  r2 = w2;
                                  while (1) {
                                    p2 = r2 + -4 | 0;
                                    c[r2 >> 2] = 0;
                                    if (p2 >>> 0 < o2 >>> 0) {
                                      o2 = o2 + -4 | 0;
                                      c[o2 >> 2] = 0;
                                    }
                                    B2 = (c[p2 >> 2] | 0) + 1 | 0;
                                    c[p2 >> 2] = B2;
                                    if (B2 >>> 0 > 999999999)
                                      r2 = p2;
                                    else {
                                      w2 = p2;
                                      break;
                                    }
                                  }
                                }
                                p2 = (E2 - o2 >> 2) * 9 | 0;
                                t2 = c[o2 >> 2] | 0;
                                if (t2 >>> 0 < 10) {
                                  r2 = w2;
                                  break;
                                } else
                                  r2 = 10;
                                do {
                                  r2 = r2 * 10 | 0;
                                  p2 = p2 + 1 | 0;
                                } while (t2 >>> 0 >= r2 >>> 0);
                                r2 = w2;
                              }
                            while (0);
                            B2 = r2 + 4 | 0;
                            f2 = f2 >>> 0 > B2 >>> 0 ? B2 : f2;
                          }
                          x2 = 0 - p2 | 0;
                          B2 = f2;
                          while (1) {
                            if (B2 >>> 0 <= o2 >>> 0) {
                              z2 = 0;
                              break;
                            }
                            f2 = B2 + -4 | 0;
                            if (!(c[f2 >> 2] | 0))
                              B2 = f2;
                            else {
                              z2 = 1;
                              break;
                            }
                          }
                          do
                            if ((A2 | 32 | 0) == 103) {
                              if ((((n2 | 0) != 0 ^ 1) + n2 | 0) > (p2 | 0) & (p2 | 0) > -5) {
                                w2 = A2 + -1 | 0;
                                n2 = ((n2 | 0) != 0 ^ 1) + n2 + -1 - p2 | 0;
                              } else {
                                w2 = A2 + -2 | 0;
                                n2 = ((n2 | 0) != 0 ^ 1) + n2 + -1 | 0;
                              }
                              if (u2 & 8 | 0) {
                                t2 = u2 & 8;
                                break;
                              }
                              do
                                if (z2) {
                                  t2 = c[B2 + -4 >> 2] | 0;
                                  if (!t2) {
                                    f2 = 9;
                                    break;
                                  }
                                  if (!((t2 >>> 0) % 10 | 0)) {
                                    f2 = 0;
                                    r2 = 10;
                                  } else {
                                    f2 = 0;
                                    break;
                                  }
                                  do {
                                    r2 = r2 * 10 | 0;
                                    f2 = f2 + 1 | 0;
                                  } while (!((t2 >>> 0) % (r2 >>> 0) | 0 | 0));
                                } else
                                  f2 = 9;
                              while (0);
                              r2 = ((B2 - E2 >> 2) * 9 | 0) + -9 | 0;
                              if ((w2 | 32 | 0) == 102) {
                                t2 = r2 - f2 | 0;
                                t2 = (t2 | 0) < 0 ? 0 : t2;
                                n2 = (n2 | 0) < (t2 | 0) ? n2 : t2;
                                t2 = 0;
                                break;
                              } else {
                                t2 = r2 + p2 - f2 | 0;
                                t2 = (t2 | 0) < 0 ? 0 : t2;
                                n2 = (n2 | 0) < (t2 | 0) ? n2 : t2;
                                t2 = 0;
                                break;
                              }
                            } else {
                              w2 = A2;
                              t2 = u2 & 8;
                            }
                          while (0);
                          y2 = n2 | t2;
                          r2 = (w2 | 32 | 0) == 102;
                          if (r2) {
                            x2 = 0;
                            f2 = (p2 | 0) > 0 ? p2 : 0;
                          } else {
                            f2 = (p2 | 0) < 0 ? x2 : p2;
                            f2 = zm(f2, ((f2 | 0) < 0) << 31 >> 31, N2 + 576 + 12 | 0) | 0;
                            if ((L2 - f2 | 0) < 2)
                              do {
                                f2 = f2 + -1 | 0;
                                a[f2 >> 0] = 48;
                              } while ((L2 - f2 | 0) < 2);
                            a[f2 + -1 >> 0] = (p2 >> 31 & 2) + 43;
                            f2 = f2 + -2 | 0;
                            a[f2 >> 0] = w2;
                            x2 = f2;
                            f2 = L2 - f2 | 0;
                          }
                          A2 = C2 + 1 + n2 + ((y2 | 0) != 0 & 1) + f2 | 0;
                          $k(e2, 32, s2, A2, u2);
                          if (!(c[e2 >> 2] & 32))
                            pk(F2, C2, e2);
                          $k(e2, 48, s2, A2, u2 ^ 65536);
                          do
                            if (r2) {
                              p2 = o2 >>> 0 > E2 >>> 0 ? E2 : o2;
                              o2 = p2;
                              do {
                                f2 = zm(c[o2 >> 2] | 0, 0, M2) | 0;
                                do
                                  if ((o2 | 0) == (p2 | 0)) {
                                    if ((f2 | 0) != (M2 | 0))
                                      break;
                                    a[N2 + 588 + 8 >> 0] = 48;
                                    f2 = N2 + 588 + 8 | 0;
                                  } else {
                                    if (f2 >>> 0 <= (N2 + 588 | 0) >>> 0)
                                      break;
                                    yn(N2 + 588 | 0, 48, f2 - K2 | 0) | 0;
                                    do
                                      f2 = f2 + -1 | 0;
                                    while (f2 >>> 0 > (N2 + 588 | 0) >>> 0);
                                  }
                                while (0);
                                if (!(c[e2 >> 2] & 32))
                                  pk(f2, M2 - f2 | 0, e2);
                                o2 = o2 + 4 | 0;
                              } while (o2 >>> 0 <= E2 >>> 0);
                              do
                                if (y2 | 0) {
                                  if (c[e2 >> 2] & 32 | 0)
                                    break;
                                  pk(19485, 1, e2);
                                }
                              while (0);
                              if ((n2 | 0) > 0 & o2 >>> 0 < B2 >>> 0)
                                while (1) {
                                  f2 = zm(c[o2 >> 2] | 0, 0, M2) | 0;
                                  if (f2 >>> 0 > (N2 + 588 | 0) >>> 0) {
                                    yn(N2 + 588 | 0, 48, f2 - K2 | 0) | 0;
                                    do
                                      f2 = f2 + -1 | 0;
                                    while (f2 >>> 0 > (N2 + 588 | 0) >>> 0);
                                  }
                                  if (!(c[e2 >> 2] & 32))
                                    pk(f2, (n2 | 0) > 9 ? 9 : n2, e2);
                                  o2 = o2 + 4 | 0;
                                  f2 = n2 + -9 | 0;
                                  if (!((n2 | 0) > 9 & o2 >>> 0 < B2 >>> 0)) {
                                    n2 = f2;
                                    break;
                                  } else
                                    n2 = f2;
                                }
                              $k(e2, 48, n2 + 9 | 0, 9, 0);
                            } else {
                              w2 = z2 ? B2 : o2 + 4 | 0;
                              if ((n2 | 0) > -1) {
                                t2 = (t2 | 0) == 0;
                                r2 = o2;
                                do {
                                  f2 = zm(c[r2 >> 2] | 0, 0, M2) | 0;
                                  if ((f2 | 0) == (M2 | 0)) {
                                    a[N2 + 588 + 8 >> 0] = 48;
                                    f2 = N2 + 588 + 8 | 0;
                                  }
                                  do
                                    if ((r2 | 0) == (o2 | 0)) {
                                      p2 = f2 + 1 | 0;
                                      if (!(c[e2 >> 2] & 32))
                                        pk(f2, 1, e2);
                                      if (t2 & (n2 | 0) < 1) {
                                        f2 = p2;
                                        break;
                                      }
                                      if (c[e2 >> 2] & 32 | 0) {
                                        f2 = p2;
                                        break;
                                      }
                                      pk(19485, 1, e2);
                                      f2 = p2;
                                    } else {
                                      if (f2 >>> 0 <= (N2 + 588 | 0) >>> 0)
                                        break;
                                      yn(N2 + 588 | 0, 48, f2 + (0 - K2) | 0) | 0;
                                      do
                                        f2 = f2 + -1 | 0;
                                      while (f2 >>> 0 > (N2 + 588 | 0) >>> 0);
                                    }
                                  while (0);
                                  p2 = M2 - f2 | 0;
                                  if (!(c[e2 >> 2] & 32))
                                    pk(f2, (n2 | 0) > (p2 | 0) ? p2 : n2, e2);
                                  n2 = n2 - p2 | 0;
                                  r2 = r2 + 4 | 0;
                                } while (r2 >>> 0 < w2 >>> 0 & (n2 | 0) > -1);
                              }
                              $k(e2, 48, n2 + 18 | 0, 18, 0);
                              if (c[e2 >> 2] & 32 | 0)
                                break;
                              pk(x2, L2 - x2 | 0, e2);
                            }
                          while (0);
                          $k(e2, 32, s2, A2, u2 ^ 8192);
                          n2 = (A2 | 0) < (s2 | 0) ? s2 : A2;
                        } else {
                          o2 = q2 != q2 | false;
                          f2 = o2 ? 0 : C2;
                          $k(e2, 32, s2, f2 + 3 | 0, y2);
                          n2 = c[e2 >> 2] | 0;
                          if (!(n2 & 32)) {
                            pk(F2, f2, e2);
                            n2 = c[e2 >> 2] | 0;
                          }
                          if (!(n2 & 32))
                            pk(o2 ? A2 & 32 | 0 ? 19477 : 19481 : A2 & 32 | 0 ? 19469 : 19473, 3, e2);
                          $k(e2, 32, s2, f2 + 3 | 0, u2 ^ 8192);
                          n2 = (f2 + 3 | 0) < (s2 | 0) ? s2 : f2 + 3 | 0;
                        }
                      while (0);
                      r2 = H2;
                      f2 = G2;
                      continue a;
                    }
                    default: {
                      x2 = 0;
                      w2 = 19433;
                      n2 = J2;
                    }
                  }
                while (0);
              g:
                do
                  if ((I2 | 0) == 63) {
                    o2 = c[N2 >> 2] | 0;
                    p2 = c[N2 + 4 >> 2] | 0;
                    r2 = w2 & 32;
                    if ((o2 | 0) == 0 & (p2 | 0) == 0) {
                      f2 = J2;
                      o2 = 0;
                      p2 = 0;
                    } else {
                      f2 = J2;
                      do {
                        f2 = f2 + -1 | 0;
                        a[f2 >> 0] = d[19417 + (o2 & 15) >> 0] | r2;
                        o2 = ps(o2 | 0, p2 | 0, 4) | 0;
                        p2 = D;
                      } while (!((o2 | 0) == 0 & (p2 | 0) == 0));
                      o2 = c[N2 >> 2] | 0;
                      p2 = c[N2 + 4 >> 2] | 0;
                    }
                    p2 = (n2 & 8 | 0) == 0 | (o2 | 0) == 0 & (p2 | 0) == 0;
                    o2 = p2 ? 0 : 2;
                    p2 = p2 ? 19433 : 19433 + (w2 >> 4) | 0;
                    I2 = 76;
                  } else if ((I2 | 0) == 75) {
                    f2 = zm(n2, f2, J2) | 0;
                    n2 = u2;
                    I2 = 76;
                  } else if ((I2 | 0) == 87) {
                    I2 = 0;
                    r2 = n2;
                    p2 = (t2 | 0) != 0;
                    h:
                      do
                        if (p2 & (r2 & 3 | 0) != 0) {
                          o2 = n2;
                          f2 = t2;
                          while (1) {
                            if (!(a[o2 >> 0] | 0))
                              break h;
                            o2 = o2 + 1 | 0;
                            p2 = f2 + -1 | 0;
                            if ((p2 | 0) != 0 & (o2 & 3 | 0) != 0)
                              f2 = p2;
                            else {
                              f2 = p2;
                              p2 = (p2 | 0) != 0;
                              I2 = 90;
                              break;
                            }
                          }
                        } else {
                          o2 = n2;
                          f2 = t2;
                          I2 = 90;
                        }
                      while (0);
                    i:
                      do
                        if ((I2 | 0) == 90) {
                          I2 = 0;
                          if (p2) {
                            if (a[o2 >> 0] | 0) {
                              j:
                                do
                                  if (f2 >>> 0 > 3)
                                    while (1) {
                                      F2 = c[o2 >> 2] | 0;
                                      if ((F2 & -2139062144 ^ -2139062144) & F2 + -16843009 | 0)
                                        break;
                                      o2 = o2 + 4 | 0;
                                      f2 = f2 + -4 | 0;
                                      if (f2 >>> 0 <= 3) {
                                        I2 = 96;
                                        break j;
                                      }
                                    }
                                  else
                                    I2 = 96;
                                while (0);
                              if ((I2 | 0) == 96) {
                                I2 = 0;
                                if (!f2) {
                                  f2 = 0;
                                  break;
                                }
                              }
                              while (1) {
                                if (!(a[o2 >> 0] | 0))
                                  break i;
                                o2 = o2 + 1 | 0;
                                f2 = f2 + -1 | 0;
                                if (!f2) {
                                  f2 = 0;
                                  break;
                                }
                              }
                            }
                          } else
                            f2 = 0;
                        }
                      while (0);
                    u2 = f2 | 0 ? o2 : 0;
                    f2 = n2;
                    x2 = 0;
                    w2 = 19433;
                    n2 = (u2 | 0) == 0 ? n2 + t2 | 0 : u2;
                    t2 = (u2 | 0) == 0 ? t2 : u2 - r2 | 0;
                    u2 = y2;
                  } else if ((I2 | 0) == 103) {
                    I2 = 0;
                    r2 = o2;
                    n2 = 0;
                    f2 = 0;
                    while (1) {
                      p2 = c[r2 >> 2] | 0;
                      if (!p2)
                        break;
                      f2 = Ml(N2 + 528 | 0, p2) | 0;
                      if ((f2 | 0) < 0 | f2 >>> 0 > (t2 - n2 | 0) >>> 0)
                        break;
                      n2 = f2 + n2 | 0;
                      if (t2 >>> 0 > n2 >>> 0)
                        r2 = r2 + 4 | 0;
                      else
                        break;
                    }
                    if ((f2 | 0) < 0) {
                      m2 = -1;
                      break a;
                    }
                    $k(e2, 32, s2, n2, u2);
                    if (!n2) {
                      n2 = 0;
                      I2 = 114;
                    } else {
                      p2 = 0;
                      while (1) {
                        f2 = c[o2 >> 2] | 0;
                        if (!f2) {
                          I2 = 114;
                          break g;
                        }
                        f2 = Ml(N2 + 528 | 0, f2) | 0;
                        p2 = f2 + p2 | 0;
                        if ((p2 | 0) > (n2 | 0)) {
                          I2 = 114;
                          break g;
                        }
                        if (!(c[e2 >> 2] & 32))
                          pk(N2 + 528 | 0, f2, e2);
                        if (p2 >>> 0 >= n2 >>> 0) {
                          I2 = 114;
                          break;
                        } else
                          o2 = o2 + 4 | 0;
                      }
                    }
                  }
                while (0);
              if ((I2 | 0) == 114) {
                I2 = 0;
                $k(e2, 32, s2, n2, u2 ^ 8192);
                n2 = (s2 | 0) > (n2 | 0) ? s2 : n2;
                r2 = H2;
                f2 = G2;
                continue;
              }
              if ((I2 | 0) == 76) {
                I2 = 0;
                u2 = (t2 | 0) > -1 ? n2 & -65537 : n2;
                n2 = (c[N2 >> 2] | 0) != 0 | (c[N2 + 4 >> 2] | 0) != 0;
                if ((t2 | 0) != 0 | n2) {
                  F2 = (n2 & 1 ^ 1) + (J2 - f2) | 0;
                  x2 = o2;
                  w2 = p2;
                  n2 = J2;
                  t2 = (t2 | 0) > (F2 | 0) ? t2 : F2;
                } else {
                  f2 = J2;
                  x2 = o2;
                  w2 = p2;
                  n2 = J2;
                  t2 = 0;
                }
              }
              r2 = n2 - f2 | 0;
              o2 = (t2 | 0) < (r2 | 0) ? r2 : t2;
              p2 = o2 + x2 | 0;
              n2 = (s2 | 0) < (p2 | 0) ? p2 : s2;
              $k(e2, 32, n2, p2, u2);
              if (!(c[e2 >> 2] & 32))
                pk(w2, x2, e2);
              $k(e2, 48, n2, p2, u2 ^ 65536);
              $k(e2, 48, o2, r2, 0);
              if (!(c[e2 >> 2] & 32))
                pk(f2, r2, e2);
              $k(e2, 32, n2, p2, u2 ^ 8192);
              r2 = H2;
              f2 = G2;
            }
          k:
            do
              if ((I2 | 0) == 261) {
                if (!e2)
                  if (!r2)
                    m2 = 0;
                  else {
                    m2 = 1;
                    while (1) {
                      n2 = c[k2 + (m2 << 2) >> 2] | 0;
                      if (!n2) {
                        f2 = 0;
                        break;
                      }
                      Hg(j2 + (m2 << 3) | 0, n2, g2);
                      m2 = m2 + 1 | 0;
                      if ((m2 | 0) >= 10) {
                        m2 = 1;
                        break k;
                      }
                    }
                    while (1) {
                      n2 = m2 + 1 | 0;
                      if (f2 | 0) {
                        m2 = -1;
                        break k;
                      }
                      if ((n2 | 0) >= 10) {
                        m2 = 1;
                        break k;
                      }
                      m2 = n2;
                      f2 = c[k2 + (n2 << 2) >> 2] | 0;
                    }
                  }
              }
            while (0);
          i = N2;
          return m2 | 0;
        }
        function mc(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0;
          V2 = c[e2 >> 2] | 0;
          fa2 = c[f2 >> 2] | 0;
          if (V2 | 0)
            g2 = c[V2 + 12 >> 2] | 0;
          else
            g2 = b2;
          h2 = c[g2 + 88 >> 2] | 0;
          i2 = c[g2 + 92 >> 2] | 0;
          j2 = c[g2 + 96 >> 2] | 0;
          if (!fa2)
            g2 = d2;
          else
            g2 = c[fa2 + 12 >> 2] | 0;
          r2 = c[g2 + 88 >> 2] | 0;
          p2 = c[g2 + 92 >> 2] | 0;
          q2 = c[g2 + 96 >> 2] | 0;
          Z2 = c[b2 + 88 >> 2] | 0;
          da2 = (c[d2 + 88 >> 2] | 0) - Z2 | 0;
          u2 = c[b2 + 92 >> 2] | 0;
          ea2 = (c[d2 + 92 >> 2] | 0) - u2 | 0;
          l2 = c[b2 + 96 >> 2] | 0;
          W2 = (c[d2 + 96 >> 2] | 0) - l2 | 0;
          Y2 = c[(V2 | 0 ? V2 : fa2) + 12 >> 2] | 0;
          _2 = (c[Y2 + 88 >> 2] | 0) - Z2 | 0;
          U2 = (c[Y2 + 92 >> 2] | 0) - u2 | 0;
          Y2 = (c[Y2 + 96 >> 2] | 0) - l2 | 0;
          X2 = (S(U2, W2) | 0) - (S(Y2, ea2) | 0) | 0;
          Y2 = (S(Y2, da2) | 0) - (S(_2, W2) | 0) | 0;
          U2 = (S(_2, ea2) | 0) - (S(U2, da2) | 0) | 0;
          Z2 = rr(X2 | 0, ((X2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, ((Z2 | 0) < 0) << 31 >> 31 | 0) | 0;
          _2 = D;
          u2 = rr(Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0, u2 | 0, ((u2 | 0) < 0) << 31 >> 31 | 0) | 0;
          t2 = D;
          l2 = rr(U2 | 0, ((U2 | 0) < 0) << 31 >> 31 | 0, l2 | 0, ((l2 | 0) < 0) << 31 >> 31 | 0) | 0;
          l2 = Ct(Z2 | 0, _2 | 0, l2 | 0, D | 0) | 0;
          t2 = Ct(l2 | 0, D | 0, u2 | 0, t2 | 0) | 0;
          u2 = D;
          l2 = rr(U2 | 0, ((U2 | 0) < 0) << 31 >> 31 | 0, ea2 | 0, ((ea2 | 0) < 0) << 31 >> 31 | 0) | 0;
          _2 = D;
          Z2 = rr(Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0, W2 | 0, ((W2 | 0) < 0) << 31 >> 31 | 0) | 0;
          Z2 = Ds(l2 | 0, _2 | 0, Z2 | 0, D | 0) | 0;
          _2 = D;
          l2 = rr(X2 | 0, ((X2 | 0) < 0) << 31 >> 31 | 0, W2 | 0, ((W2 | 0) < 0) << 31 >> 31 | 0) | 0;
          aa2 = D;
          $2 = rr(U2 | 0, ((U2 | 0) < 0) << 31 >> 31 | 0, da2 | 0, ((da2 | 0) < 0) << 31 >> 31 | 0) | 0;
          $2 = Ds(l2 | 0, aa2 | 0, $2 | 0, D | 0) | 0;
          aa2 = D;
          l2 = rr(Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0, da2 | 0, ((da2 | 0) < 0) << 31 >> 31 | 0) | 0;
          ca2 = D;
          ba2 = rr(X2 | 0, ((X2 | 0) < 0) << 31 >> 31 | 0, ea2 | 0, ((ea2 | 0) < 0) << 31 >> 31 | 0) | 0;
          ba2 = Ds(l2 | 0, ca2 | 0, ba2 | 0, D | 0) | 0;
          ca2 = D;
          l2 = rr(Z2 | 0, _2 | 0, h2 | 0, ((h2 | 0) < 0) << 31 >> 31 | 0) | 0;
          T2 = D;
          k2 = rr($2 | 0, aa2 | 0, i2 | 0, ((i2 | 0) < 0) << 31 >> 31 | 0) | 0;
          T2 = Ct(k2 | 0, D | 0, l2 | 0, T2 | 0) | 0;
          l2 = D;
          k2 = rr(ba2 | 0, ca2 | 0, j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0) | 0;
          k2 = Ct(T2 | 0, l2 | 0, k2 | 0, D | 0) | 0;
          l2 = D;
          if ((V2 | 0) != 0 ? (c[V2 + 12 >> 2] | 0) != 0 : 0) {
            g2 = h2;
            b2 = i2;
            d2 = j2;
            n2 = V2;
            o2 = l2;
            m2 = k2;
            while (1) {
              n2 = c[(c[n2 + 8 >> 2] | 0) + 4 >> 2] | 0;
              l2 = n2 + 12 | 0;
              j2 = c[l2 >> 2] | 0;
              h2 = c[j2 + 88 >> 2] | 0;
              R2 = rr(h2 | 0, ((h2 | 0) < 0) << 31 >> 31 | 0, X2 | 0, ((X2 | 0) < 0) << 31 >> 31 | 0) | 0;
              Q2 = D;
              i2 = c[j2 + 92 >> 2] | 0;
              T2 = rr(i2 | 0, ((i2 | 0) < 0) << 31 >> 31 | 0, Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0) | 0;
              Q2 = Ct(T2 | 0, D | 0, R2 | 0, Q2 | 0) | 0;
              R2 = D;
              j2 = c[j2 + 96 >> 2] | 0;
              T2 = rr(j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0, U2 | 0, ((U2 | 0) < 0) << 31 >> 31 | 0) | 0;
              T2 = Ct(Q2 | 0, R2 | 0, T2 | 0, D | 0) | 0;
              R2 = D;
              if ((R2 | 0) < (u2 | 0) | (R2 | 0) == (u2 | 0) & T2 >>> 0 < t2 >>> 0) {
                k2 = m2;
                j2 = o2;
                break;
              }
              if ((c[n2 + 20 >> 2] | 0) == (c[a2 + 100 >> 2] | 0)) {
                k2 = m2;
                j2 = o2;
                break;
              }
              T2 = rr(h2 | 0, ((h2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
              R2 = D;
              k2 = rr(i2 | 0, ((i2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
              R2 = Ct(k2 | 0, D | 0, T2 | 0, R2 | 0) | 0;
              T2 = D;
              k2 = rr(j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
              k2 = Ct(R2 | 0, T2 | 0, k2 | 0, D | 0) | 0;
              j2 = D;
              if (!((j2 | 0) > (o2 | 0) | (j2 | 0) == (o2 | 0) & k2 >>> 0 > m2 >>> 0)) {
                k2 = m2;
                j2 = o2;
                break;
              }
              c[e2 >> 2] = n2;
              T2 = c[l2 >> 2] | 0;
              g2 = c[T2 + 88 >> 2] | 0;
              b2 = c[T2 + 92 >> 2] | 0;
              d2 = c[T2 + 96 >> 2] | 0;
              if (!T2)
                break;
              else {
                o2 = j2;
                m2 = k2;
              }
            }
            h2 = g2;
            i2 = c[f2 >> 2] | 0;
            s2 = j2;
          } else {
            b2 = i2;
            d2 = j2;
            i2 = fa2;
            s2 = l2;
          }
          g2 = rr(Z2 | 0, _2 | 0, r2 | 0, ((r2 | 0) < 0) << 31 >> 31 | 0) | 0;
          T2 = D;
          j2 = rr($2 | 0, aa2 | 0, p2 | 0, ((p2 | 0) < 0) << 31 >> 31 | 0) | 0;
          T2 = Ct(j2 | 0, D | 0, g2 | 0, T2 | 0) | 0;
          g2 = D;
          j2 = rr(ba2 | 0, ca2 | 0, q2 | 0, ((q2 | 0) < 0) << 31 >> 31 | 0) | 0;
          j2 = Ct(T2 | 0, g2 | 0, j2 | 0, D | 0) | 0;
          g2 = D;
          a:
            do
              if (i2)
                if (!(c[i2 + 12 >> 2] | 0))
                  o2 = q2;
                else {
                  o2 = q2;
                  while (1) {
                    q2 = c[c[i2 + 8 >> 2] >> 2] | 0;
                    n2 = c[q2 + 12 >> 2] | 0;
                    l2 = c[n2 + 88 >> 2] | 0;
                    R2 = rr(l2 | 0, ((l2 | 0) < 0) << 31 >> 31 | 0, X2 | 0, ((X2 | 0) < 0) << 31 >> 31 | 0) | 0;
                    Q2 = D;
                    m2 = c[n2 + 92 >> 2] | 0;
                    T2 = rr(m2 | 0, ((m2 | 0) < 0) << 31 >> 31 | 0, Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0) | 0;
                    Q2 = Ct(T2 | 0, D | 0, R2 | 0, Q2 | 0) | 0;
                    R2 = D;
                    n2 = c[n2 + 96 >> 2] | 0;
                    T2 = rr(n2 | 0, ((n2 | 0) < 0) << 31 >> 31 | 0, U2 | 0, ((U2 | 0) < 0) << 31 >> 31 | 0) | 0;
                    T2 = Ct(Q2 | 0, R2 | 0, T2 | 0, D | 0) | 0;
                    R2 = D;
                    if ((R2 | 0) < (u2 | 0) | (R2 | 0) == (u2 | 0) & T2 >>> 0 < t2 >>> 0)
                      break a;
                    if ((c[q2 + 20 >> 2] | 0) == (c[a2 + 100 >> 2] | 0))
                      break a;
                    l2 = rr(l2 | 0, ((l2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
                    T2 = D;
                    m2 = rr(m2 | 0, ((m2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                    T2 = Ct(m2 | 0, D | 0, l2 | 0, T2 | 0) | 0;
                    m2 = D;
                    l2 = rr(n2 | 0, ((n2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                    l2 = Ct(T2 | 0, m2 | 0, l2 | 0, D | 0) | 0;
                    m2 = D;
                    if (!((m2 | 0) > (g2 | 0) | (m2 | 0) == (g2 | 0) & l2 >>> 0 > j2 >>> 0))
                      break a;
                    c[f2 >> 2] = q2;
                    T2 = c[q2 + 12 >> 2] | 0;
                    g2 = c[T2 + 88 >> 2] | 0;
                    i2 = c[T2 + 92 >> 2] | 0;
                    j2 = c[T2 + 96 >> 2] | 0;
                    if (!T2) {
                      r2 = g2;
                      p2 = i2;
                      o2 = j2;
                      i2 = q2;
                      j2 = l2;
                      g2 = m2;
                      break;
                    } else {
                      r2 = g2;
                      p2 = i2;
                      o2 = j2;
                      i2 = q2;
                      g2 = m2;
                      j2 = l2;
                    }
                  }
                }
              else {
                o2 = q2;
                i2 = 0;
              }
            while (0);
          j2 = Ds(j2 | 0, g2 | 0, k2 | 0, s2 | 0) | 0;
          T2 = D;
          if ((T2 | 0) > 0 | (T2 | 0) == 0 & j2 >>> 0 > 0) {
            Q2 = Ds(0, 0, U2 | 0, ((U2 | 0) < 0) << 31 >> 31 | 0) | 0;
            R2 = D;
            N2 = r2;
            k2 = h2;
            O2 = p2;
            m2 = b2;
            P2 = o2;
            n2 = d2;
            l2 = i2;
            u2 = j2;
            q2 = T2;
            while (1) {
              t2 = (S(O2 - m2 | 0, ea2) | 0) + (S(N2 - k2 | 0, da2) | 0) + (S(P2 - n2 | 0, W2) | 0) | 0;
              g2 = c[e2 >> 2] | 0;
              if (!g2) {
                C2 = t2;
                H2 = k2;
                G2 = m2;
                z2 = t2;
                g2 = ((t2 | 0) < 0) << 31 >> 31;
                A2 = q2;
              } else {
                s2 = k2;
                K2 = t2;
                M2 = t2;
                L2 = ((t2 | 0) < 0) << 31 >> 31;
                b:
                  while (1) {
                    if (!(c[g2 + 12 >> 2] | 0)) {
                      t2 = K2;
                      k2 = M2;
                      g2 = L2;
                      break;
                    }
                    G2 = c[(c[g2 >> 2] | 0) + 8 >> 2] | 0;
                    if ((c[G2 + 20 >> 2] | 0) <= (c[a2 + 100 >> 2] | 0)) {
                      t2 = K2;
                      k2 = M2;
                      g2 = L2;
                      break;
                    }
                    J2 = c[G2 + 12 >> 2] | 0;
                    H2 = c[J2 + 88 >> 2] | 0;
                    F2 = H2 - s2 | 0;
                    I2 = c[J2 + 92 >> 2] | 0;
                    E2 = I2 - m2 | 0;
                    J2 = c[J2 + 96 >> 2] | 0;
                    k2 = J2 - n2 | 0;
                    t2 = rr(F2 | 0, ((F2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
                    C2 = D;
                    l2 = rr(E2 | 0, ((E2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                    C2 = Ct(l2 | 0, D | 0, t2 | 0, C2 | 0) | 0;
                    t2 = D;
                    l2 = rr(k2 | 0, ((k2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                    l2 = Ct(C2 | 0, t2 | 0, l2 | 0, D | 0) | 0;
                    t2 = D;
                    k2 = (S(E2, ea2) | 0) + (S(F2, da2) | 0) + (S(k2, W2) | 0) | 0;
                    do
                      if ((l2 | 0) == 0 & (t2 | 0) == 0) {
                        if ((k2 | 0) >= 0) {
                          t2 = K2;
                          k2 = M2;
                          g2 = L2;
                          break b;
                        }
                      } else {
                        if ((t2 | 0) >= 0) {
                          t2 = K2;
                          k2 = M2;
                          g2 = L2;
                          break b;
                        }
                        if ((k2 | 0) > 0) {
                          w2 = 1;
                          x2 = k2;
                          v2 = ((k2 | 0) < 0) << 31 >> 31;
                        } else {
                          x2 = Ds(0, 0, k2 | 0, ((k2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          w2 = ((k2 | 0) != 0) << 31 >> 31;
                          x2 = k2 | 0 ? x2 : 0;
                          v2 = k2 | 0 ? D : 0;
                        }
                        F2 = 0 - w2 | 0;
                        A2 = Ds(0, 0, l2 | 0, t2 | 0) | 0;
                        B2 = D;
                        if ((K2 | 0) > 0) {
                          k2 = 1;
                          C2 = M2;
                          E2 = L2;
                        } else {
                          E2 = (K2 | 0) != 0;
                          C2 = Ds(0, 0, M2 | 0, L2 | 0) | 0;
                          k2 = E2 << 31 >> 31;
                          C2 = E2 ? C2 : 0;
                          E2 = E2 ? D : 0;
                        }
                        if ((q2 | 0) > 0 | (q2 | 0) == 0 & u2 >>> 0 > 0) {
                          l2 = u2;
                          t2 = q2;
                        } else {
                          t2 = (u2 | 0) != 0 | (q2 | 0) != 0;
                          l2 = Ds(0, 0, u2 | 0, q2 | 0) | 0;
                          k2 = t2 ? 0 - k2 | 0 : k2;
                          l2 = t2 ? l2 : 0;
                          t2 = t2 ? D : 0;
                        }
                        if ((k2 | 0) == (F2 | 0)) {
                          if (!w2)
                            break;
                          k2 = rr(l2 | 0, 0, x2 | 0, 0) | 0;
                          w2 = D;
                          ja2 = rr(t2 | 0, 0, x2 | 0, 0) | 0;
                          ia2 = D;
                          y2 = rr(l2 | 0, 0, v2 | 0, 0) | 0;
                          z2 = D;
                          ha2 = rr(t2 | 0, 0, v2 | 0, 0) | 0;
                          x2 = D;
                          y2 = Ct(ja2 | 0, 0, y2 | 0, 0) | 0;
                          l2 = D;
                          x2 = Ct(ia2 | 0, 0, ha2 | 0, x2 | 0) | 0;
                          z2 = Ct(x2 | 0, D | 0, z2 | 0, 0) | 0;
                          l2 = Ct(z2 | 0, D | 0, l2 | 0, 0) | 0;
                          z2 = D;
                          w2 = Ct(0, y2 | 0, k2 | 0, w2 | 0) | 0;
                          x2 = D;
                          y2 = Ct(l2 | 0, z2 | 0, (x2 >>> 0 < y2 >>> 0 | (x2 | 0) == (y2 | 0) & w2 >>> 0 < 0) & 1 | 0, 0) | 0;
                          z2 = D;
                          l2 = rr(C2 | 0, 0, A2 | 0, 0) | 0;
                          k2 = D;
                          ha2 = rr(E2 | 0, 0, A2 | 0, 0) | 0;
                          A2 = D;
                          t2 = rr(C2 | 0, 0, B2 | 0, 0) | 0;
                          v2 = D;
                          B2 = rr(E2 | 0, 0, B2 | 0, 0) | 0;
                          C2 = D;
                          t2 = Ct(ha2 | 0, 0, t2 | 0, 0) | 0;
                          E2 = D;
                          C2 = Ct(A2 | 0, 0, B2 | 0, C2 | 0) | 0;
                          v2 = Ct(C2 | 0, D | 0, v2 | 0, 0) | 0;
                          E2 = Ct(v2 | 0, D | 0, E2 | 0, 0) | 0;
                          v2 = D;
                          k2 = Ct(0, t2 | 0, l2 | 0, k2 | 0) | 0;
                          l2 = D;
                          t2 = Ct(E2 | 0, v2 | 0, (l2 >>> 0 < t2 >>> 0 | (l2 | 0) == (t2 | 0) & k2 >>> 0 < 0) & 1 | 0, 0) | 0;
                          v2 = D;
                          do
                            if (z2 >>> 0 < v2 >>> 0 | (z2 | 0) == (v2 | 0) & y2 >>> 0 < t2 >>> 0)
                              k2 = -1;
                            else {
                              if (z2 >>> 0 > v2 >>> 0 | (z2 | 0) == (v2 | 0) & y2 >>> 0 > t2 >>> 0) {
                                k2 = 1;
                                break;
                              }
                              if (x2 >>> 0 < l2 >>> 0 | (x2 | 0) == (l2 | 0) & w2 >>> 0 < k2 >>> 0) {
                                k2 = -1;
                                break;
                              }
                              k2 = (x2 >>> 0 > l2 >>> 0 | (x2 | 0) == (l2 | 0) & w2 >>> 0 > k2 >>> 0) & 1;
                            }
                          while (0);
                          k2 = S(k2, F2) | 0;
                        } else
                          k2 = F2 - k2 | 0;
                        if ((k2 | 0) <= -1) {
                          t2 = K2;
                          k2 = M2;
                          g2 = L2;
                          break b;
                        }
                      }
                    while (0);
                    ja2 = N2 - H2 | 0;
                    ia2 = O2 - I2 | 0;
                    l2 = P2 - J2 | 0;
                    q2 = rr(ja2 | 0, ((ja2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
                    ha2 = D;
                    k2 = rr(ia2 | 0, ((ia2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                    ha2 = Ct(k2 | 0, D | 0, q2 | 0, ha2 | 0) | 0;
                    q2 = D;
                    k2 = rr(l2 | 0, ((l2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                    k2 = Ct(ha2 | 0, q2 | 0, k2 | 0, D | 0) | 0;
                    q2 = D;
                    g2 = (g2 | 0) == (V2 | 0) ? 0 : G2;
                    c[e2 >> 2] = g2;
                    l2 = (S(ia2, ea2) | 0) + (S(ja2, da2) | 0) + (S(l2, W2) | 0) | 0;
                    if (!g2) {
                      t2 = l2;
                      s2 = H2;
                      m2 = I2;
                      n2 = J2;
                      u2 = k2;
                      k2 = l2;
                      g2 = ((l2 | 0) < 0) << 31 >> 31;
                      break;
                    } else {
                      s2 = H2;
                      m2 = I2;
                      n2 = J2;
                      K2 = l2;
                      M2 = l2;
                      L2 = ((l2 | 0) < 0) << 31 >> 31;
                      u2 = k2;
                    }
                  }
                C2 = t2;
                H2 = s2;
                G2 = m2;
                l2 = c[f2 >> 2] | 0;
                z2 = k2;
                A2 = q2;
              }
              if (!l2) {
                g2 = 118;
                break;
              }
              if (!(c[l2 + 12 >> 2] | 0)) {
                g2 = 118;
                break;
              }
              F2 = c[c[l2 + 8 >> 2] >> 2] | 0;
              if ((c[F2 + 20 >> 2] | 0) <= (c[a2 + 100 >> 2] | 0)) {
                g2 = 118;
                break;
              }
              q2 = c[F2 + 12 >> 2] | 0;
              t2 = c[q2 + 88 >> 2] | 0;
              m2 = t2 - N2 | 0;
              s2 = c[q2 + 92 >> 2] | 0;
              l2 = s2 - O2 | 0;
              q2 = c[q2 + 96 >> 2] | 0;
              k2 = q2 - P2 | 0;
              ja2 = rr(m2 | 0, ((m2 | 0) < 0) << 31 >> 31 | 0, X2 | 0, ((X2 | 0) < 0) << 31 >> 31 | 0) | 0;
              ha2 = D;
              ia2 = rr(l2 | 0, ((l2 | 0) < 0) << 31 >> 31 | 0, Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0) | 0;
              ha2 = Ct(ia2 | 0, D | 0, ja2 | 0, ha2 | 0) | 0;
              ja2 = D;
              ia2 = rr(k2 | 0, ((k2 | 0) < 0) << 31 >> 31 | 0, Q2 | 0, R2 | 0) | 0;
              if (!((ha2 | 0) == (ia2 | 0) & (ja2 | 0) == (D | 0))) {
                g2 = 118;
                break;
              }
              w2 = rr(m2 | 0, ((m2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
              E2 = D;
              v2 = rr(l2 | 0, ((l2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
              E2 = Ct(v2 | 0, D | 0, w2 | 0, E2 | 0) | 0;
              w2 = D;
              v2 = rr(k2 | 0, ((k2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
              v2 = Ct(E2 | 0, w2 | 0, v2 | 0, D | 0) | 0;
              w2 = D;
              k2 = (S(l2, ea2) | 0) + (S(m2, da2) | 0) + (S(k2, W2) | 0) | 0;
              E2 = t2 - H2 | 0;
              ia2 = s2 - G2 | 0;
              B2 = q2 - n2 | 0;
              E2 = rr(E2 | 0, ((E2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
              ja2 = D;
              ia2 = rr(ia2 | 0, ((ia2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
              ja2 = Ct(ia2 | 0, D | 0, E2 | 0, ja2 | 0) | 0;
              E2 = D;
              B2 = rr(B2 | 0, ((B2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
              B2 = Ct(ja2 | 0, E2 | 0, B2 | 0, D | 0) | 0;
              E2 = D;
              if (!((E2 | 0) > 0 | (E2 | 0) == 0 & B2 >>> 0 > 0)) {
                g2 = 118;
                break;
              }
              if ((v2 | 0) == 0 & (w2 | 0) == 0) {
                if ((k2 | 0) >= 0) {
                  g2 = 118;
                  break;
                }
              } else {
                if ((w2 | 0) >= 0) {
                  g2 = 118;
                  break;
                }
                if ((k2 | 0) > 0) {
                  s2 = 1;
                  t2 = k2;
                  q2 = ((k2 | 0) < 0) << 31 >> 31;
                } else {
                  t2 = Ds(0, 0, k2 | 0, ((k2 | 0) < 0) << 31 >> 31 | 0) | 0;
                  s2 = ((k2 | 0) != 0) << 31 >> 31;
                  t2 = k2 | 0 ? t2 : 0;
                  q2 = k2 | 0 ? D : 0;
                }
                y2 = 0 - s2 | 0;
                w2 = Ds(0, 0, v2 | 0, w2 | 0) | 0;
                x2 = D;
                if ((C2 | 0) > 0) {
                  k2 = 1;
                  v2 = z2;
                } else {
                  ja2 = (C2 | 0) != 0;
                  v2 = Ds(0, 0, z2 | 0, g2 | 0) | 0;
                  k2 = ja2 << 31 >> 31;
                  v2 = ja2 ? v2 : 0;
                  g2 = ja2 ? D : 0;
                }
                if ((A2 | 0) > 0 | (A2 | 0) == 0 & u2 >>> 0 > 0) {
                  m2 = k2;
                  l2 = u2;
                  k2 = A2;
                } else {
                  ja2 = (u2 | 0) != 0 | (A2 | 0) != 0;
                  l2 = Ds(0, 0, u2 | 0, A2 | 0) | 0;
                  m2 = ja2 ? 0 - k2 | 0 : k2;
                  l2 = ja2 ? l2 : 0;
                  k2 = ja2 ? D : 0;
                }
                if ((m2 | 0) == (y2 | 0)) {
                  if (!s2) {
                    g2 = 118;
                    break;
                  }
                  ja2 = rr(l2 | 0, 0, t2 | 0, 0) | 0;
                  s2 = D;
                  ia2 = rr(k2 | 0, 0, t2 | 0, 0) | 0;
                  P2 = D;
                  t2 = rr(l2 | 0, 0, q2 | 0, 0) | 0;
                  u2 = D;
                  k2 = rr(k2 | 0, 0, q2 | 0, 0) | 0;
                  q2 = D;
                  t2 = Ct(ia2 | 0, 0, t2 | 0, 0) | 0;
                  ia2 = D;
                  q2 = Ct(P2 | 0, 0, k2 | 0, q2 | 0) | 0;
                  u2 = Ct(q2 | 0, D | 0, u2 | 0, 0) | 0;
                  ia2 = Ct(u2 | 0, D | 0, ia2 | 0, 0) | 0;
                  u2 = D;
                  q2 = Ct(0, t2 | 0, ja2 | 0, s2 | 0) | 0;
                  s2 = D;
                  t2 = Ct(ia2 | 0, u2 | 0, (s2 >>> 0 < t2 >>> 0 | (s2 | 0) == (t2 | 0) & q2 >>> 0 < 0) & 1 | 0, 0) | 0;
                  u2 = D;
                  ia2 = rr(v2 | 0, 0, w2 | 0, 0) | 0;
                  k2 = D;
                  ja2 = rr(g2 | 0, 0, w2 | 0, 0) | 0;
                  P2 = D;
                  l2 = rr(v2 | 0, 0, x2 | 0, 0) | 0;
                  m2 = D;
                  ha2 = rr(g2 | 0, 0, x2 | 0, 0) | 0;
                  g2 = D;
                  l2 = Ct(ja2 | 0, 0, l2 | 0, 0) | 0;
                  ja2 = D;
                  g2 = Ct(P2 | 0, 0, ha2 | 0, g2 | 0) | 0;
                  m2 = Ct(g2 | 0, D | 0, m2 | 0, 0) | 0;
                  ja2 = Ct(m2 | 0, D | 0, ja2 | 0, 0) | 0;
                  m2 = D;
                  g2 = Ct(0, l2 | 0, ia2 | 0, k2 | 0) | 0;
                  k2 = D;
                  l2 = Ct(ja2 | 0, m2 | 0, (k2 >>> 0 < l2 >>> 0 | (k2 | 0) == (l2 | 0) & g2 >>> 0 < 0) & 1 | 0, 0) | 0;
                  m2 = D;
                  do
                    if (u2 >>> 0 < m2 >>> 0 | (u2 | 0) == (m2 | 0) & t2 >>> 0 < l2 >>> 0)
                      g2 = -1;
                    else {
                      if (u2 >>> 0 > m2 >>> 0 | (u2 | 0) == (m2 | 0) & t2 >>> 0 > l2 >>> 0) {
                        g2 = 1;
                        break;
                      }
                      if (s2 >>> 0 < k2 >>> 0 | (s2 | 0) == (k2 | 0) & q2 >>> 0 < g2 >>> 0) {
                        g2 = -1;
                        break;
                      }
                      g2 = (s2 >>> 0 > k2 >>> 0 | (s2 | 0) == (k2 | 0) & q2 >>> 0 > g2 >>> 0) & 1;
                    }
                  while (0);
                  g2 = S(g2, y2) | 0;
                } else
                  g2 = y2 - m2 | 0;
                if ((g2 | 0) <= 0) {
                  g2 = 118;
                  break;
                }
              }
              c[f2 >> 2] = F2;
              P2 = c[F2 + 12 >> 2] | 0;
              N2 = c[P2 + 88 >> 2] | 0;
              k2 = H2;
              O2 = c[P2 + 92 >> 2] | 0;
              m2 = G2;
              P2 = c[P2 + 96 >> 2] | 0;
              l2 = F2;
              u2 = B2;
              q2 = E2;
            }
            if ((g2 | 0) == 118)
              return;
          }
          if ((T2 | 0) >= 0)
            return;
          F2 = Ds(0, 0, U2 | 0, ((U2 | 0) < 0) << 31 >> 31 | 0) | 0;
          G2 = D;
          g2 = T2;
          c:
            while (1) {
              E2 = g2;
              d:
                while (1) {
                  C2 = (S(p2 - b2 | 0, ea2) | 0) + (S(r2 - h2 | 0, da2) | 0) + (S(o2 - d2 | 0, W2) | 0) | 0;
                  do
                    if ((i2 | 0 ? c[i2 + 12 >> 2] | 0 : 0) ? (ga2 = c[(c[i2 + 4 >> 2] | 0) + 8 >> 2] | 0, (c[ga2 + 20 >> 2] | 0) > (c[a2 + 100 >> 2] | 0)) : 0) {
                      B2 = c[ga2 + 12 >> 2] | 0;
                      z2 = c[B2 + 88 >> 2] | 0;
                      ja2 = z2 - r2 | 0;
                      A2 = c[B2 + 92 >> 2] | 0;
                      ia2 = A2 - p2 | 0;
                      B2 = c[B2 + 96 >> 2] | 0;
                      g2 = B2 - o2 | 0;
                      l2 = rr(ja2 | 0, ((ja2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
                      ha2 = D;
                      k2 = rr(ia2 | 0, ((ia2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                      ha2 = Ct(k2 | 0, D | 0, l2 | 0, ha2 | 0) | 0;
                      l2 = D;
                      k2 = rr(g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                      k2 = Ct(ha2 | 0, l2 | 0, k2 | 0, D | 0) | 0;
                      l2 = D;
                      g2 = (S(ia2, ea2) | 0) + (S(ja2, da2) | 0) + (S(g2, W2) | 0) | 0;
                      if ((k2 | 0) == 0 & (l2 | 0) == 0)
                        if ((g2 | 0) > 0)
                          break d;
                        else
                          break;
                      if ((l2 | 0) < 0) {
                        if ((g2 | 0) > 0) {
                          n2 = 1;
                          q2 = g2;
                          m2 = ((g2 | 0) < 0) << 31 >> 31;
                        } else {
                          q2 = Ds(0, 0, g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          n2 = ((g2 | 0) != 0) << 31 >> 31;
                          q2 = g2 | 0 ? q2 : 0;
                          m2 = g2 | 0 ? D : 0;
                        }
                        y2 = 0 - n2 | 0;
                        u2 = Ds(0, 0, k2 | 0, l2 | 0) | 0;
                        v2 = D;
                        if ((C2 | 0) > 0) {
                          g2 = 1;
                          w2 = C2;
                          x2 = ((C2 | 0) < 0) << 31 >> 31;
                        } else {
                          w2 = Ds(0, 0, C2 | 0, ((C2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          g2 = ((C2 | 0) != 0) << 31 >> 31;
                          w2 = C2 | 0 ? w2 : 0;
                          x2 = C2 | 0 ? D : 0;
                        }
                        if ((E2 | 0) > 0 | (E2 | 0) == 0 & j2 >>> 0 > 0) {
                          k2 = j2;
                          l2 = E2;
                        } else {
                          l2 = (j2 | 0) != 0 | (E2 | 0) != 0;
                          k2 = Ds(0, 0, j2 | 0, E2 | 0) | 0;
                          g2 = l2 ? 0 - g2 | 0 : g2;
                          k2 = l2 ? k2 : 0;
                          l2 = l2 ? D : 0;
                        }
                        if ((g2 | 0) == (y2 | 0)) {
                          if (!n2)
                            break d;
                          g2 = rr(k2 | 0, 0, q2 | 0, 0) | 0;
                          n2 = D;
                          ha2 = rr(l2 | 0, 0, q2 | 0, 0) | 0;
                          V2 = D;
                          s2 = rr(k2 | 0, 0, m2 | 0, 0) | 0;
                          t2 = D;
                          ja2 = rr(l2 | 0, 0, m2 | 0, 0) | 0;
                          q2 = D;
                          s2 = Ct(ha2 | 0, 0, s2 | 0, 0) | 0;
                          k2 = D;
                          q2 = Ct(V2 | 0, 0, ja2 | 0, q2 | 0) | 0;
                          t2 = Ct(q2 | 0, D | 0, t2 | 0, 0) | 0;
                          k2 = Ct(t2 | 0, D | 0, k2 | 0, 0) | 0;
                          t2 = D;
                          n2 = Ct(0, s2 | 0, g2 | 0, n2 | 0) | 0;
                          q2 = D;
                          s2 = Ct(k2 | 0, t2 | 0, (q2 >>> 0 < s2 >>> 0 | (q2 | 0) == (s2 | 0) & n2 >>> 0 < 0) & 1 | 0, 0) | 0;
                          t2 = D;
                          k2 = rr(w2 | 0, 0, u2 | 0, 0) | 0;
                          g2 = D;
                          ja2 = rr(x2 | 0, 0, u2 | 0, 0) | 0;
                          V2 = D;
                          l2 = rr(w2 | 0, 0, v2 | 0, 0) | 0;
                          m2 = D;
                          ha2 = rr(x2 | 0, 0, v2 | 0, 0) | 0;
                          ia2 = D;
                          l2 = Ct(ja2 | 0, 0, l2 | 0, 0) | 0;
                          ja2 = D;
                          ia2 = Ct(V2 | 0, 0, ha2 | 0, ia2 | 0) | 0;
                          m2 = Ct(ia2 | 0, D | 0, m2 | 0, 0) | 0;
                          ja2 = Ct(m2 | 0, D | 0, ja2 | 0, 0) | 0;
                          m2 = D;
                          g2 = Ct(0, l2 | 0, k2 | 0, g2 | 0) | 0;
                          k2 = D;
                          l2 = Ct(ja2 | 0, m2 | 0, (k2 >>> 0 < l2 >>> 0 | (k2 | 0) == (l2 | 0) & g2 >>> 0 < 0) & 1 | 0, 0) | 0;
                          m2 = D;
                          do
                            if (t2 >>> 0 < m2 >>> 0 | (t2 | 0) == (m2 | 0) & s2 >>> 0 < l2 >>> 0)
                              g2 = -1;
                            else {
                              if (t2 >>> 0 > m2 >>> 0 | (t2 | 0) == (m2 | 0) & s2 >>> 0 > l2 >>> 0) {
                                g2 = 1;
                                break;
                              }
                              if (q2 >>> 0 < k2 >>> 0 | (q2 | 0) == (k2 | 0) & n2 >>> 0 < g2 >>> 0) {
                                g2 = -1;
                                break;
                              }
                              g2 = (q2 >>> 0 > k2 >>> 0 | (q2 | 0) == (k2 | 0) & n2 >>> 0 > g2 >>> 0) & 1;
                            }
                          while (0);
                          g2 = S(g2, y2) | 0;
                        } else
                          g2 = y2 - g2 | 0;
                        if ((g2 | 0) < 1)
                          break d;
                      }
                    }
                  while (0);
                  g2 = c[e2 >> 2] | 0;
                  if (!g2) {
                    g2 = 118;
                    break c;
                  }
                  if (!(c[g2 + 12 >> 2] | 0)) {
                    g2 = 118;
                    break c;
                  }
                  v2 = c[(c[g2 + 8 >> 2] | 0) + 4 >> 2] | 0;
                  if ((c[v2 + 20 >> 2] | 0) <= (c[a2 + 100 >> 2] | 0)) {
                    g2 = 118;
                    break c;
                  }
                  i2 = c[v2 + 12 >> 2] | 0;
                  l2 = c[i2 + 88 >> 2] | 0;
                  h2 = l2 - h2 | 0;
                  k2 = c[i2 + 92 >> 2] | 0;
                  b2 = k2 - b2 | 0;
                  i2 = c[i2 + 96 >> 2] | 0;
                  g2 = i2 - d2 | 0;
                  ja2 = rr(h2 | 0, ((h2 | 0) < 0) << 31 >> 31 | 0, X2 | 0, ((X2 | 0) < 0) << 31 >> 31 | 0) | 0;
                  ha2 = D;
                  ia2 = rr(b2 | 0, ((b2 | 0) < 0) << 31 >> 31 | 0, Y2 | 0, ((Y2 | 0) < 0) << 31 >> 31 | 0) | 0;
                  ha2 = Ct(ia2 | 0, D | 0, ja2 | 0, ha2 | 0) | 0;
                  ja2 = D;
                  ia2 = rr(g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0, F2 | 0, G2 | 0) | 0;
                  if (!((ha2 | 0) == (ia2 | 0) & (ja2 | 0) == (D | 0))) {
                    g2 = 118;
                    break c;
                  }
                  m2 = rr(h2 | 0, ((h2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
                  u2 = D;
                  d2 = rr(b2 | 0, ((b2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                  u2 = Ct(d2 | 0, D | 0, m2 | 0, u2 | 0) | 0;
                  m2 = D;
                  d2 = rr(g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                  d2 = Ct(u2 | 0, m2 | 0, d2 | 0, D | 0) | 0;
                  m2 = D;
                  g2 = (S(b2, ea2) | 0) + (S(h2, da2) | 0) + (S(g2, W2) | 0) | 0;
                  u2 = r2 - l2 | 0;
                  ia2 = p2 - k2 | 0;
                  t2 = o2 - i2 | 0;
                  u2 = rr(u2 | 0, ((u2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
                  ja2 = D;
                  ia2 = rr(ia2 | 0, ((ia2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
                  ja2 = Ct(ia2 | 0, D | 0, u2 | 0, ja2 | 0) | 0;
                  u2 = D;
                  t2 = rr(t2 | 0, ((t2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
                  t2 = Ct(ja2 | 0, u2 | 0, t2 | 0, D | 0) | 0;
                  u2 = D;
                  if ((u2 | 0) >= 0) {
                    g2 = 118;
                    break c;
                  }
                  if ((d2 | 0) == 0 & (m2 | 0) == 0) {
                    if ((g2 | 0) <= 0) {
                      g2 = 118;
                      break c;
                    }
                  } else {
                    if ((m2 | 0) >= 0) {
                      g2 = 118;
                      break c;
                    }
                    if ((g2 | 0) > 0) {
                      i2 = 1;
                      k2 = g2;
                      h2 = ((g2 | 0) < 0) << 31 >> 31;
                    } else {
                      k2 = Ds(0, 0, g2 | 0, ((g2 | 0) < 0) << 31 >> 31 | 0) | 0;
                      i2 = ((g2 | 0) != 0) << 31 >> 31;
                      k2 = g2 | 0 ? k2 : 0;
                      h2 = g2 | 0 ? D : 0;
                    }
                    s2 = 0 - i2 | 0;
                    n2 = Ds(0, 0, d2 | 0, m2 | 0) | 0;
                    q2 = D;
                    if ((C2 | 0) > 0) {
                      g2 = 1;
                      m2 = C2;
                      d2 = ((C2 | 0) < 0) << 31 >> 31;
                    } else {
                      m2 = Ds(0, 0, C2 | 0, ((C2 | 0) < 0) << 31 >> 31 | 0) | 0;
                      g2 = ((C2 | 0) != 0) << 31 >> 31;
                      m2 = C2 | 0 ? m2 : 0;
                      d2 = C2 | 0 ? D : 0;
                    }
                    if ((E2 | 0) > 0 | (E2 | 0) == 0 & j2 >>> 0 > 0) {
                      b2 = g2;
                      g2 = E2;
                    } else {
                      ja2 = (j2 | 0) != 0 | (E2 | 0) != 0;
                      j2 = Ds(0, 0, j2 | 0, E2 | 0) | 0;
                      b2 = ja2 ? 0 - g2 | 0 : g2;
                      j2 = ja2 ? j2 : 0;
                      g2 = ja2 ? D : 0;
                    }
                    if ((b2 | 0) == (s2 | 0)) {
                      if (!i2) {
                        g2 = 118;
                        break c;
                      }
                      U2 = rr(j2 | 0, 0, k2 | 0, 0) | 0;
                      i2 = D;
                      b2 = rr(g2 | 0, 0, k2 | 0, 0) | 0;
                      V2 = D;
                      k2 = rr(j2 | 0, 0, h2 | 0, 0) | 0;
                      l2 = D;
                      g2 = rr(g2 | 0, 0, h2 | 0, 0) | 0;
                      j2 = D;
                      k2 = Ct(b2 | 0, 0, k2 | 0, 0) | 0;
                      b2 = D;
                      j2 = Ct(V2 | 0, 0, g2 | 0, j2 | 0) | 0;
                      l2 = Ct(j2 | 0, D | 0, l2 | 0, 0) | 0;
                      b2 = Ct(l2 | 0, D | 0, b2 | 0, 0) | 0;
                      l2 = D;
                      i2 = Ct(0, k2 | 0, U2 | 0, i2 | 0) | 0;
                      j2 = D;
                      k2 = Ct(b2 | 0, l2 | 0, (j2 >>> 0 < k2 >>> 0 | (j2 | 0) == (k2 | 0) & i2 >>> 0 < 0) & 1 | 0, 0) | 0;
                      l2 = D;
                      b2 = rr(m2 | 0, 0, n2 | 0, 0) | 0;
                      g2 = D;
                      U2 = rr(d2 | 0, 0, n2 | 0, 0) | 0;
                      V2 = D;
                      ja2 = rr(m2 | 0, 0, q2 | 0, 0) | 0;
                      h2 = D;
                      ha2 = rr(d2 | 0, 0, q2 | 0, 0) | 0;
                      ia2 = D;
                      d2 = Ct(U2 | 0, 0, ja2 | 0, 0) | 0;
                      ja2 = D;
                      ia2 = Ct(V2 | 0, 0, ha2 | 0, ia2 | 0) | 0;
                      h2 = Ct(ia2 | 0, D | 0, h2 | 0, 0) | 0;
                      ja2 = Ct(h2 | 0, D | 0, ja2 | 0, 0) | 0;
                      h2 = D;
                      g2 = Ct(0, d2 | 0, b2 | 0, g2 | 0) | 0;
                      b2 = D;
                      d2 = Ct(ja2 | 0, h2 | 0, (b2 >>> 0 < d2 >>> 0 | (b2 | 0) == (d2 | 0) & g2 >>> 0 < 0) & 1 | 0, 0) | 0;
                      h2 = D;
                      do
                        if (l2 >>> 0 < h2 >>> 0 | (l2 | 0) == (h2 | 0) & k2 >>> 0 < d2 >>> 0)
                          g2 = -1;
                        else {
                          if (l2 >>> 0 > h2 >>> 0 | (l2 | 0) == (h2 | 0) & k2 >>> 0 > d2 >>> 0) {
                            g2 = 1;
                            break;
                          }
                          if (j2 >>> 0 < b2 >>> 0 | (j2 | 0) == (b2 | 0) & i2 >>> 0 < g2 >>> 0) {
                            g2 = -1;
                            break;
                          }
                          g2 = (j2 >>> 0 > b2 >>> 0 | (j2 | 0) == (b2 | 0) & i2 >>> 0 > g2 >>> 0) & 1;
                        }
                      while (0);
                      g2 = S(g2, s2) | 0;
                    } else
                      g2 = s2 - b2 | 0;
                    if ((g2 | 0) >= 0) {
                      g2 = 118;
                      break c;
                    }
                  }
                  c[e2 >> 2] = v2;
                  d2 = c[v2 + 12 >> 2] | 0;
                  h2 = c[d2 + 88 >> 2] | 0;
                  b2 = c[d2 + 92 >> 2] | 0;
                  d2 = c[d2 + 96 >> 2] | 0;
                  i2 = c[f2 >> 2] | 0;
                  E2 = u2;
                  j2 = t2;
                }
              r2 = z2 - h2 | 0;
              o2 = A2 - b2 | 0;
              j2 = B2 - d2 | 0;
              r2 = rr(r2 | 0, ((r2 | 0) < 0) << 31 >> 31 | 0, Z2 | 0, _2 | 0) | 0;
              p2 = D;
              o2 = rr(o2 | 0, ((o2 | 0) < 0) << 31 >> 31 | 0, $2 | 0, aa2 | 0) | 0;
              p2 = Ct(o2 | 0, D | 0, r2 | 0, p2 | 0) | 0;
              r2 = D;
              j2 = rr(j2 | 0, ((j2 | 0) < 0) << 31 >> 31 | 0, ba2 | 0, ca2 | 0) | 0;
              j2 = Ct(p2 | 0, r2 | 0, j2 | 0, D | 0) | 0;
              i2 = (i2 | 0) == (fa2 | 0) ? 0 : ga2;
              c[f2 >> 2] = i2;
              r2 = z2;
              p2 = A2;
              o2 = B2;
              g2 = D;
            }
          if ((g2 | 0) == 118)
            return;
        }
        function nc(d2, e2, f2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          var h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0;
          z2 = i;
          i = i + 528 | 0;
          j2 = +g[d2 + 100 >> 2];
          n2 = +g[d2 + 104 >> 2];
          k2 = +g[d2 + 108 >> 2];
          if (j2 * j2 + n2 * n2 + k2 * k2 > 0) {
            o2 = +H(+(1 - +g[d2 + 244 >> 2]), +f2);
            g[d2 + 100 >> 2] = j2 * o2;
            g[d2 + 104 >> 2] = o2 * n2;
            g[d2 + 108 >> 2] = o2 * k2;
            j2 = j2 * o2;
            n2 = o2 * n2;
            k2 = o2 * k2;
          }
          o2 = j2 * j2 + n2 * n2 + k2 * k2;
          if (o2 > 0) {
            s2 = c[d2 + 8 >> 2] | 0;
            c[z2 + 456 >> 2] = c[s2 + 4 >> 2];
            c[z2 + 456 + 4 >> 2] = c[s2 + 4 + 4 >> 2];
            c[z2 + 456 + 8 >> 2] = c[s2 + 4 + 8 >> 2];
            c[z2 + 456 + 12 >> 2] = c[s2 + 4 + 12 >> 2];
            h2 = z2 + 456 + 16 | 0;
            c[h2 >> 2] = c[s2 + 20 >> 2];
            c[h2 + 4 >> 2] = c[s2 + 20 + 4 >> 2];
            c[h2 + 8 >> 2] = c[s2 + 20 + 8 >> 2];
            c[h2 + 12 >> 2] = c[s2 + 20 + 12 >> 2];
            m2 = z2 + 456 + 32 | 0;
            c[m2 >> 2] = c[s2 + 36 >> 2];
            c[m2 + 4 >> 2] = c[s2 + 36 + 4 >> 2];
            c[m2 + 8 >> 2] = c[s2 + 36 + 8 >> 2];
            c[m2 + 12 >> 2] = c[s2 + 36 + 12 >> 2];
            q2 = z2 + 456 + 48 | 0;
            c[q2 >> 2] = c[s2 + 52 >> 2];
            c[q2 + 4 >> 2] = c[s2 + 52 + 4 >> 2];
            c[q2 + 8 >> 2] = c[s2 + 52 + 8 >> 2];
            c[q2 + 12 >> 2] = c[s2 + 52 + 12 >> 2];
            M2 = +G(+o2);
            K2 = j2 * (1 / M2);
            D2 = n2 * (1 / M2);
            o2 = k2 * (1 / M2);
            k2 = +J(+(M2 * f2 * 0.5)) / +G(+(o2 * o2 + (K2 * K2 + D2 * D2)));
            M2 = +I(+(M2 * f2 * 0.5));
            Jg(z2 + 456 | 0, z2 + 392 | 0);
            E2 = +g[z2 + 392 >> 2];
            L2 = +g[z2 + 392 + 12 >> 2];
            A2 = +g[z2 + 392 + 8 >> 2];
            B2 = +g[z2 + 392 + 4 >> 2];
            j2 = M2 * E2 + K2 * k2 * L2 + D2 * k2 * A2 - o2 * k2 * B2;
            n2 = o2 * k2 * E2 + (D2 * k2 * L2 + M2 * B2) - K2 * k2 * A2;
            C2 = o2 * k2 * L2 + M2 * A2 + K2 * k2 * B2 - D2 * k2 * E2;
            A2 = M2 * L2 - K2 * k2 * E2 - D2 * k2 * B2 - o2 * k2 * A2;
            k2 = j2 * (2 / (A2 * A2 + (C2 * C2 + (j2 * j2 + n2 * n2))));
            o2 = n2 * (2 / (A2 * A2 + (C2 * C2 + (j2 * j2 + n2 * n2))));
            B2 = C2 * (2 / (A2 * A2 + (C2 * C2 + (j2 * j2 + n2 * n2))));
            g[z2 + 456 >> 2] = 1 - (n2 * o2 + C2 * B2);
            g[z2 + 456 + 4 >> 2] = j2 * o2 - A2 * B2;
            g[z2 + 456 + 8 >> 2] = j2 * B2 + A2 * o2;
            g[z2 + 456 + 12 >> 2] = 0;
            g[z2 + 456 + 16 >> 2] = j2 * o2 + A2 * B2;
            g[z2 + 456 + 20 >> 2] = 1 - (j2 * k2 + C2 * B2);
            g[z2 + 456 + 24 >> 2] = n2 * B2 - A2 * k2;
            g[z2 + 456 + 28 >> 2] = 0;
            g[z2 + 456 + 32 >> 2] = j2 * B2 - A2 * o2;
            g[z2 + 456 + 36 >> 2] = n2 * B2 + A2 * k2;
            g[z2 + 456 + 40 >> 2] = 1 - (j2 * k2 + n2 * o2);
            g[z2 + 456 + 44 >> 2] = 0;
            s2 = c[d2 + 8 >> 2] | 0;
            c[s2 + 300 >> 2] = (c[s2 + 300 >> 2] | 0) + 1;
            c[s2 + 4 >> 2] = c[z2 + 456 >> 2];
            c[s2 + 4 + 4 >> 2] = c[z2 + 456 + 4 >> 2];
            c[s2 + 4 + 8 >> 2] = c[z2 + 456 + 8 >> 2];
            c[s2 + 4 + 12 >> 2] = c[z2 + 456 + 12 >> 2];
            c[s2 + 20 >> 2] = c[h2 >> 2];
            c[s2 + 20 + 4 >> 2] = c[h2 + 4 >> 2];
            c[s2 + 20 + 8 >> 2] = c[h2 + 8 >> 2];
            c[s2 + 20 + 12 >> 2] = c[h2 + 12 >> 2];
            c[s2 + 36 >> 2] = c[m2 >> 2];
            c[s2 + 36 + 4 >> 2] = c[m2 + 4 >> 2];
            c[s2 + 36 + 8 >> 2] = c[m2 + 8 >> 2];
            c[s2 + 36 + 12 >> 2] = c[m2 + 12 >> 2];
            c[s2 + 52 >> 2] = c[q2 >> 2];
            c[s2 + 52 + 4 >> 2] = c[q2 + 4 >> 2];
            c[s2 + 52 + 8 >> 2] = c[q2 + 8 >> 2];
            c[s2 + 52 + 12 >> 2] = c[q2 + 12 >> 2];
            s2 = c[d2 + 8 >> 2] | 0;
            c[d2 + 132 >> 2] = c[s2 + 52 >> 2];
            c[d2 + 132 + 4 >> 2] = c[s2 + 52 + 4 >> 2];
            c[d2 + 132 + 8 >> 2] = c[s2 + 52 + 8 >> 2];
            c[d2 + 132 + 12 >> 2] = c[s2 + 52 + 12 >> 2];
            rp(d2 + 152 | 0, s2 + 52 | 0, 16) | 0;
            Jg(s2 + 4 | 0, z2 + 392 | 0);
            c[d2 + 168 >> 2] = c[z2 + 392 >> 2];
            c[d2 + 168 + 4 >> 2] = c[z2 + 392 + 4 >> 2];
            c[d2 + 168 + 8 >> 2] = c[z2 + 392 + 8 >> 2];
            c[d2 + 168 + 12 >> 2] = c[z2 + 392 + 12 >> 2];
            c[d2 + 184 >> 2] = c[d2 + 168 >> 2];
            c[d2 + 184 + 4 >> 2] = c[d2 + 168 + 4 >> 2];
            c[d2 + 184 + 8 >> 2] = c[d2 + 168 + 8 >> 2];
            c[d2 + 184 + 12 >> 2] = c[d2 + 168 + 12 >> 2];
          }
          if ((a[d2 + 251 >> 0] | 0) == 0 ? +g[d2 + 252 >> 2] <= 0 : 0) {
            i = z2;
            return;
          }
          a[d2 + 248 >> 0] = (ob[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2) | 0) & 1;
          j2 = +g[d2 + 68 >> 2];
          k2 = +g[d2 + 72 >> 2];
          n2 = +g[d2 + 76 >> 2];
          o2 = +H(+(1 - +g[d2 + 240 >> 2]), +f2);
          if (j2 * j2 + k2 * k2 + n2 * n2 > 0) {
            g[d2 + 68 >> 2] = j2 * o2;
            g[d2 + 72 >> 2] = o2 * k2;
            g[d2 + 76 >> 2] = o2 * n2;
          }
          j2 = o2 * +g[d2 + 20 >> 2] - +g[d2 + 52 >> 2] * f2;
          g[d2 + 20 >> 2] = j2;
          if (j2 > 0 ? (r2 = +g[d2 + 32 >> 2], j2 > r2) : 0) {
            g[d2 + 20 >> 2] = r2;
            j2 = r2;
          }
          if (j2 < 0 ? (M2 = +F(+j2), t2 = +F(+ +g[d2 + 28 >> 2]), M2 > t2) : 0) {
            g[d2 + 20 >> 2] = -t2;
            j2 = -t2;
          }
          k2 = j2 * f2;
          g[d2 + 24 >> 2] = k2;
          s2 = c[d2 + 8 >> 2] | 0;
          c[z2 >> 2] = c[s2 + 4 >> 2];
          c[z2 + 4 >> 2] = c[s2 + 4 + 4 >> 2];
          c[z2 + 8 >> 2] = c[s2 + 4 + 8 >> 2];
          c[z2 + 12 >> 2] = c[s2 + 4 + 12 >> 2];
          c[z2 + 16 >> 2] = c[s2 + 20 >> 2];
          c[z2 + 16 + 4 >> 2] = c[s2 + 20 + 4 >> 2];
          c[z2 + 16 + 8 >> 2] = c[s2 + 20 + 8 >> 2];
          c[z2 + 16 + 12 >> 2] = c[s2 + 20 + 12 >> 2];
          c[z2 + 32 >> 2] = c[s2 + 36 >> 2];
          c[z2 + 32 + 4 >> 2] = c[s2 + 36 + 4 >> 2];
          c[z2 + 32 + 8 >> 2] = c[s2 + 36 + 8 >> 2];
          c[z2 + 32 + 12 >> 2] = c[s2 + 36 + 12 >> 2];
          c[z2 + 48 >> 2] = c[s2 + 52 >> 2];
          c[z2 + 48 + 4 >> 2] = c[s2 + 52 + 4 >> 2];
          c[z2 + 48 + 8 >> 2] = c[s2 + 52 + 8 >> 2];
          c[z2 + 48 + 12 >> 2] = c[s2 + 52 + 12 >> 2];
          if (j2 < 0)
            m2 = c[d2 + 60 >> 2] | 0;
          else
            m2 = 0;
          c[z2 + 456 >> 2] = 1065353216;
          N2 = z2 + 456 + 4 | 0;
          c[N2 >> 2] = 0;
          c[N2 + 4 >> 2] = 0;
          c[N2 + 8 >> 2] = 0;
          c[N2 + 12 >> 2] = 0;
          c[z2 + 456 + 20 >> 2] = 1065353216;
          q2 = z2 + 456 + 24 | 0;
          c[q2 >> 2] = 0;
          c[q2 + 4 >> 2] = 0;
          c[q2 + 8 >> 2] = 0;
          c[q2 + 12 >> 2] = 0;
          c[z2 + 456 + 40 >> 2] = 1065353216;
          c[z2 + 456 + 44 >> 2] = 0;
          c[z2 + 392 >> 2] = 1065353216;
          s2 = z2 + 392 + 4 | 0;
          c[s2 >> 2] = 0;
          c[s2 + 4 >> 2] = 0;
          c[s2 + 8 >> 2] = 0;
          c[s2 + 12 >> 2] = 0;
          c[z2 + 392 + 20 >> 2] = 1065353216;
          h2 = z2 + 392 + 24 | 0;
          c[h2 >> 2] = 0;
          c[h2 + 4 >> 2] = 0;
          c[h2 + 8 >> 2] = 0;
          c[h2 + 12 >> 2] = 0;
          c[z2 + 392 + 40 >> 2] = 1065353216;
          c[z2 + 392 + 44 >> 2] = 0;
          c[z2 + 456 + 48 >> 2] = c[d2 + 132 >> 2];
          c[z2 + 456 + 48 + 4 >> 2] = c[d2 + 132 + 4 >> 2];
          c[z2 + 456 + 48 + 8 >> 2] = c[d2 + 132 + 8 >> 2];
          c[z2 + 456 + 48 + 12 >> 2] = c[d2 + 132 + 12 >> 2];
          n2 = (c[l >> 2] = m2, +g[l >> 2]);
          C2 = k2 > 0 ? k2 : 0;
          L2 = n2 * +g[d2 + 260 >> 2] + +g[d2 + 136 >> 2] + C2 * +g[d2 + 276 >> 2];
          D2 = n2 * +g[d2 + 264 >> 2] + +g[d2 + 140 >> 2] + C2 * +g[d2 + 280 >> 2];
          g[d2 + 152 >> 2] = n2 * +g[d2 + 256 >> 2] + +g[d2 + 132 >> 2] + +g[d2 + 272 >> 2] * C2;
          g[d2 + 156 >> 2] = L2;
          g[d2 + 160 >> 2] = D2;
          g[d2 + 164 >> 2] = 0;
          c[d2 + 132 >> 2] = c[d2 + 152 >> 2];
          c[d2 + 132 + 4 >> 2] = c[d2 + 152 + 4 >> 2];
          c[d2 + 132 + 8 >> 2] = c[d2 + 152 + 8 >> 2];
          c[d2 + 132 + 12 >> 2] = c[d2 + 152 + 12 >> 2];
          c[z2 + 392 + 48 >> 2] = c[d2 + 152 >> 2];
          c[z2 + 392 + 48 + 4 >> 2] = c[d2 + 152 + 4 >> 2];
          c[z2 + 392 + 48 + 8 >> 2] = c[d2 + 152 + 8 >> 2];
          c[z2 + 392 + 48 + 12 >> 2] = c[d2 + 152 + 12 >> 2];
          D2 = +g[d2 + 168 >> 2];
          L2 = +g[d2 + 172 >> 2];
          C2 = +g[d2 + 176 >> 2];
          M2 = +g[d2 + 180 >> 2];
          B2 = D2 * (2 / (D2 * D2 + L2 * L2 + C2 * C2 + M2 * M2));
          E2 = L2 * (2 / (D2 * D2 + L2 * L2 + C2 * C2 + M2 * M2));
          K2 = C2 * (2 / (D2 * D2 + L2 * L2 + C2 * C2 + M2 * M2));
          g[z2 + 456 >> 2] = 1 - (L2 * E2 + C2 * K2);
          g[N2 >> 2] = D2 * E2 - M2 * K2;
          g[z2 + 456 + 8 >> 2] = D2 * K2 + M2 * E2;
          g[z2 + 456 + 12 >> 2] = 0;
          g[z2 + 456 + 16 >> 2] = D2 * E2 + M2 * K2;
          g[z2 + 456 + 20 >> 2] = 1 - (D2 * B2 + C2 * K2);
          g[q2 >> 2] = L2 * K2 - M2 * B2;
          g[z2 + 456 + 28 >> 2] = 0;
          g[z2 + 456 + 32 >> 2] = D2 * K2 - M2 * E2;
          g[z2 + 456 + 36 >> 2] = L2 * K2 + M2 * B2;
          g[z2 + 456 + 40 >> 2] = 1 - (D2 * B2 + L2 * E2);
          g[z2 + 456 + 44 >> 2] = 0;
          E2 = +g[d2 + 184 >> 2];
          L2 = +g[d2 + 188 >> 2];
          B2 = +g[d2 + 192 >> 2];
          D2 = +g[d2 + 196 >> 2];
          M2 = E2 * (2 / (E2 * E2 + L2 * L2 + B2 * B2 + D2 * D2));
          K2 = L2 * (2 / (E2 * E2 + L2 * L2 + B2 * B2 + D2 * D2));
          C2 = B2 * (2 / (E2 * E2 + L2 * L2 + B2 * B2 + D2 * D2));
          g[z2 + 392 >> 2] = 1 - (L2 * K2 + B2 * C2);
          g[s2 >> 2] = E2 * K2 - D2 * C2;
          g[z2 + 392 + 8 >> 2] = E2 * C2 + D2 * K2;
          g[z2 + 392 + 12 >> 2] = 0;
          g[z2 + 392 + 16 >> 2] = E2 * K2 + D2 * C2;
          g[z2 + 392 + 20 >> 2] = 1 - (E2 * M2 + B2 * C2);
          g[h2 >> 2] = L2 * C2 - D2 * M2;
          g[z2 + 392 + 28 >> 2] = 0;
          g[z2 + 392 + 32 >> 2] = E2 * C2 - D2 * K2;
          g[z2 + 392 + 36 >> 2] = L2 * C2 + D2 * M2;
          g[z2 + 392 + 40 >> 2] = 1 - (E2 * M2 + L2 * K2);
          g[z2 + 392 + 44 >> 2] = 0;
          h2 = c[d2 + 8 >> 2] | 0;
          K2 = -+g[d2 + 256 >> 2];
          L2 = -+g[d2 + 260 >> 2];
          M2 = -+g[d2 + 264 >> 2];
          s2 = c[d2 + 48 >> 2] | 0;
          g[z2 + 288 + 4 >> 2] = 1;
          b[z2 + 288 + 8 >> 1] = 1;
          b[z2 + 288 + 10 >> 1] = -1;
          q2 = z2 + 288 + 12 | 0;
          c[z2 + 288 + 76 >> 2] = 0;
          c[q2 >> 2] = 0;
          c[q2 + 4 >> 2] = 0;
          c[q2 + 8 >> 2] = 0;
          c[q2 + 12 >> 2] = 0;
          c[q2 + 16 >> 2] = 0;
          c[q2 + 20 >> 2] = 0;
          c[q2 + 24 >> 2] = 0;
          c[q2 + 28 >> 2] = 0;
          c[z2 + 288 >> 2] = 4196;
          c[z2 + 288 + 80 >> 2] = h2;
          g[z2 + 288 + 84 >> 2] = K2;
          g[z2 + 288 + 88 >> 2] = L2;
          g[z2 + 288 + 92 >> 2] = M2;
          g[z2 + 288 + 96 >> 2] = 0;
          c[z2 + 288 + 100 >> 2] = s2;
          s2 = c[(c[h2 + 188 >> 2] | 0) + 4 >> 2] | 0;
          b[z2 + 288 + 8 >> 1] = s2;
          b[z2 + 288 + 10 >> 1] = s2 >>> 16;
          if (!(a[d2 + 250 >> 0] | 0))
            Hd(e2, c[d2 + 12 >> 2] | 0, z2 + 456 | 0, z2 + 392 | 0, z2 + 288 | 0, +g[e2 + 56 >> 2]);
          else
            ad(h2, c[d2 + 12 >> 2] | 0, z2 + 456 | 0, z2 + 392 | 0, z2 + 288 | 0, +g[e2 + 56 >> 2]);
          if ((+g[z2 + 288 + 4 >> 2] < 1 ? (p2 = c[d2 + 8 >> 2] | 0, (c[p2 + 204 >> 2] & 4 | 0) == 0) : 0) ? yb[c[(c[d2 >> 2] | 0) + 56 >> 2] & 63](d2, p2, c[z2 + 288 + 76 >> 2] | 0) | 0 : 0) {
            do
              if (+g[z2 + 288 + 44 >> 2] * +g[d2 + 256 >> 2] + +g[z2 + 288 + 48 >> 2] * +g[d2 + 260 >> 2] + +g[z2 + 288 + 52 >> 2] * +g[d2 + 264 >> 2] > 0) {
                j2 = +g[z2 + 288 + 4 >> 2];
                g[d2 + 148 >> 2] = n2 * j2;
                if (!(a[d2 + 288 >> 0] | 0)) {
                  c[d2 + 132 >> 2] = c[d2 + 152 >> 2];
                  c[d2 + 132 + 4 >> 2] = c[d2 + 152 + 4 >> 2];
                  c[d2 + 132 + 8 >> 2] = c[d2 + 152 + 8 >> 2];
                  c[d2 + 132 + 12 >> 2] = c[d2 + 152 + 12 >> 2];
                  break;
                } else {
                  g[d2 + 132 >> 2] = (1 - j2) * +g[d2 + 132 >> 2] + j2 * +g[d2 + 152 >> 2];
                  g[d2 + 136 >> 2] = (1 - j2) * +g[d2 + 136 >> 2] + j2 * +g[d2 + 156 >> 2];
                  g[d2 + 140 >> 2] = (1 - j2) * +g[d2 + 140 >> 2] + j2 * +g[d2 + 160 >> 2];
                  break;
                }
              }
            while (0);
            s2 = c[d2 + 8 >> 2] | 0;
            c[s2 + 52 >> 2] = c[d2 + 132 >> 2];
            c[s2 + 52 + 4 >> 2] = c[d2 + 132 + 4 >> 2];
            c[s2 + 52 + 8 >> 2] = c[d2 + 132 + 8 >> 2];
            c[s2 + 52 + 12 >> 2] = c[d2 + 132 + 12 >> 2];
            N2 = c[d2 + 8 >> 2] | 0;
            c[N2 + 300 >> 2] = (c[N2 + 300 >> 2] | 0) + 1;
            c[N2 + 4 >> 2] = c[s2 + 4 >> 2];
            c[N2 + 4 + 4 >> 2] = c[s2 + 4 + 4 >> 2];
            c[N2 + 4 + 8 >> 2] = c[s2 + 4 + 8 >> 2];
            c[N2 + 4 + 12 >> 2] = c[s2 + 4 + 12 >> 2];
            c[N2 + 20 >> 2] = c[s2 + 20 >> 2];
            c[N2 + 20 + 4 >> 2] = c[s2 + 20 + 4 >> 2];
            c[N2 + 20 + 8 >> 2] = c[s2 + 20 + 8 >> 2];
            c[N2 + 20 + 12 >> 2] = c[s2 + 20 + 12 >> 2];
            c[N2 + 36 >> 2] = c[s2 + 36 >> 2];
            c[N2 + 36 + 4 >> 2] = c[s2 + 36 + 4 >> 2];
            c[N2 + 36 + 8 >> 2] = c[s2 + 36 + 8 >> 2];
            c[N2 + 36 + 12 >> 2] = c[s2 + 36 + 12 >> 2];
            c[N2 + 52 >> 2] = c[s2 + 52 >> 2];
            c[N2 + 52 + 4 >> 2] = c[s2 + 52 + 4 >> 2];
            c[N2 + 52 + 8 >> 2] = c[s2 + 52 + 8 >> 2];
            c[N2 + 52 + 12 >> 2] = c[s2 + 52 + 12 >> 2];
            a[d2 + 220 >> 0] = 0;
            if ((((Zd(d2, e2) | 0 ? (a[d2 + 220 >> 0] = 1, Zd(d2, e2) | 0) : 0) ? (a[d2 + 220 >> 0] = 1, Zd(d2, e2) | 0) : 0) ? (a[d2 + 220 >> 0] = 1, Zd(d2, e2) | 0) : 0) ? (a[d2 + 220 >> 0] = 1, Zd(d2, e2) | 0) : 0)
              a[d2 + 220 >> 0] = 1;
            N2 = (c[d2 + 8 >> 2] | 0) + 52 | 0;
            c[d2 + 152 >> 2] = c[N2 >> 2];
            c[d2 + 152 + 4 >> 2] = c[N2 + 4 >> 2];
            c[d2 + 152 + 8 >> 2] = c[N2 + 8 >> 2];
            c[d2 + 152 + 12 >> 2] = c[N2 + 12 >> 2];
            rp(d2 + 132 | 0, N2 | 0, 16) | 0;
            if (+g[d2 + 24 >> 2] > 0) {
              g[d2 + 24 >> 2] = 0;
              g[d2 + 20 >> 2] = 0;
              c[d2 + 148 >> 2] = c[d2 + 60 >> 2];
            }
          } else {
            c[d2 + 148 >> 2] = m2;
            c[d2 + 132 >> 2] = c[d2 + 152 >> 2];
            c[d2 + 132 + 4 >> 2] = c[d2 + 152 + 4 >> 2];
            c[d2 + 132 + 8 >> 2] = c[d2 + 152 + 8 >> 2];
            c[d2 + 132 + 12 >> 2] = c[d2 + 152 + 12 >> 2];
          }
          if (!(a[d2 + 251 >> 0] | 0)) {
            L2 = +g[d2 + 252 >> 2];
            M2 = L2 > f2 ? f2 : L2;
            g[d2 + 252 >> 2] = L2 - f2;
            bd(d2, e2, M2 * +g[d2 + 68 >> 2], M2 * +g[d2 + 72 >> 2], M2 * +g[d2 + 76 >> 2]);
          } else
            bd(d2, e2, +g[d2 + 68 >> 2], +g[d2 + 72 >> 2], +g[d2 + 76 >> 2]);
          c[z2 + 272 >> 2] = c[d2 + 152 >> 2];
          c[z2 + 272 + 4 >> 2] = c[d2 + 152 + 4 >> 2];
          c[z2 + 272 + 8 >> 2] = c[d2 + 152 + 8 >> 2];
          c[z2 + 272 + 12 >> 2] = c[d2 + 152 + 12 >> 2];
          M2 = +g[d2 + 20 >> 2];
          j2 = (M2 < 0 ? -M2 : 0) * f2;
          if (!(M2 > 0)) {
            if (j2 > 0 ? (u2 = +g[d2 + 28 >> 2], j2 > u2) : 0) {
              N2 = b[d2 + 248 >> 1] | 0;
              j2 = (N2 & 255) << 24 >> 24 != 0 | (N2 & 65535) < 256 ? u2 : j2;
            }
            r2 = j2 + +g[d2 + 148 >> 2];
            n2 = +g[d2 + 256 >> 2] * r2;
            o2 = r2 * +g[d2 + 260 >> 2];
            r2 = r2 * +g[d2 + 264 >> 2];
            g[d2 + 152 >> 2] = +g[d2 + 152 >> 2] - n2;
            g[d2 + 156 >> 2] = +g[d2 + 156 >> 2] - o2;
            g[d2 + 160 >> 2] = +g[d2 + 160 >> 2] - r2;
            h2 = c[d2 + 8 >> 2] | 0;
            q2 = c[d2 + 48 >> 2] | 0;
            s2 = z2 + 168 + 4 | 0;
            g[s2 >> 2] = 1;
            b[z2 + 168 + 8 >> 1] = 1;
            b[z2 + 168 + 10 >> 1] = -1;
            p2 = z2 + 168 + 12 | 0;
            c[z2 + 168 + 76 >> 2] = 0;
            c[p2 >> 2] = 0;
            c[p2 + 4 >> 2] = 0;
            c[p2 + 8 >> 2] = 0;
            c[p2 + 12 >> 2] = 0;
            c[p2 + 16 >> 2] = 0;
            c[p2 + 20 >> 2] = 0;
            c[p2 + 24 >> 2] = 0;
            c[p2 + 28 >> 2] = 0;
            c[z2 + 168 >> 2] = 4196;
            c[z2 + 168 + 80 >> 2] = h2;
            c[z2 + 168 + 84 >> 2] = c[d2 + 256 >> 2];
            c[z2 + 168 + 84 + 4 >> 2] = c[d2 + 256 + 4 >> 2];
            c[z2 + 168 + 84 + 8 >> 2] = c[d2 + 256 + 8 >> 2];
            c[z2 + 168 + 84 + 12 >> 2] = c[d2 + 256 + 12 >> 2];
            c[z2 + 168 + 100 >> 2] = q2;
            p2 = (c[h2 + 188 >> 2] | 0) + 4 | 0;
            N2 = c[p2 >> 2] | 0;
            b[z2 + 168 + 8 >> 1] = N2;
            b[z2 + 168 + 10 >> 1] = N2 >>> 16;
            g[z2 + 64 + 4 >> 2] = 1;
            b[z2 + 64 + 8 >> 1] = 1;
            b[z2 + 64 + 10 >> 1] = -1;
            N2 = z2 + 64 + 12 | 0;
            c[z2 + 64 + 76 >> 2] = 0;
            c[N2 >> 2] = 0;
            c[N2 + 4 >> 2] = 0;
            c[N2 + 8 >> 2] = 0;
            c[N2 + 12 >> 2] = 0;
            c[N2 + 16 >> 2] = 0;
            c[N2 + 20 >> 2] = 0;
            c[N2 + 24 >> 2] = 0;
            c[N2 + 28 >> 2] = 0;
            c[z2 + 64 >> 2] = 4196;
            c[z2 + 64 + 80 >> 2] = h2;
            c[z2 + 64 + 84 >> 2] = c[d2 + 256 >> 2];
            c[z2 + 64 + 84 + 4 >> 2] = c[d2 + 256 + 4 >> 2];
            c[z2 + 64 + 84 + 8 >> 2] = c[d2 + 256 + 8 >> 2];
            c[z2 + 64 + 84 + 12 >> 2] = c[d2 + 256 + 12 >> 2];
            c[z2 + 64 + 100 >> 2] = q2;
            p2 = c[p2 >> 2] | 0;
            b[z2 + 64 + 8 >> 1] = p2;
            b[z2 + 64 + 10 >> 1] = p2 >>> 16;
            p2 = z2 + 392 + 24 | 0;
            q2 = z2 + 288 + 44 | 0;
            h2 = 0;
            while (1) {
              c[z2 + 392 + 12 >> 2] = 0;
              c[z2 + 392 + 12 + 4 >> 2] = 0;
              c[z2 + 392 + 20 >> 2] = 1065353216;
              c[p2 >> 2] = 0;
              c[p2 + 4 >> 2] = 0;
              c[p2 + 8 >> 2] = 0;
              c[p2 + 12 >> 2] = 0;
              c[z2 + 392 + 40 >> 2] = 1065353216;
              c[z2 + 392 + 44 >> 2] = 0;
              c[z2 + 288 >> 2] = 1065353216;
              c[z2 + 288 + 4 >> 2] = 0;
              c[z2 + 288 + 4 + 4 >> 2] = 0;
              c[z2 + 288 + 4 + 8 >> 2] = 0;
              c[z2 + 288 + 4 + 12 >> 2] = 0;
              c[z2 + 288 + 20 >> 2] = 1065353216;
              c[z2 + 288 + 24 >> 2] = 0;
              c[z2 + 288 + 24 + 4 >> 2] = 0;
              c[z2 + 288 + 24 + 8 >> 2] = 0;
              c[z2 + 288 + 24 + 12 >> 2] = 0;
              c[z2 + 288 + 40 >> 2] = 1065353216;
              c[q2 >> 2] = 0;
              c[q2 + 4 >> 2] = 0;
              c[q2 + 8 >> 2] = 0;
              c[q2 + 12 >> 2] = 0;
              c[q2 + 16 >> 2] = 0;
              c[z2 + 456 + 48 >> 2] = c[d2 + 132 >> 2];
              c[z2 + 456 + 48 + 4 >> 2] = c[d2 + 132 + 4 >> 2];
              c[z2 + 456 + 48 + 8 >> 2] = c[d2 + 132 + 8 >> 2];
              c[z2 + 456 + 48 + 12 >> 2] = c[d2 + 132 + 12 >> 2];
              c[z2 + 392 + 48 >> 2] = c[d2 + 152 >> 2];
              c[z2 + 392 + 48 + 4 >> 2] = c[d2 + 152 + 4 >> 2];
              c[z2 + 392 + 48 + 8 >> 2] = c[d2 + 152 + 8 >> 2];
              c[z2 + 392 + 48 + 12 >> 2] = c[d2 + 152 + 12 >> 2];
              D2 = +g[d2 + 168 >> 2];
              M2 = +g[d2 + 172 >> 2];
              C2 = +g[d2 + 176 >> 2];
              K2 = +g[d2 + 180 >> 2];
              B2 = D2 * (2 / (D2 * D2 + M2 * M2 + C2 * C2 + K2 * K2));
              E2 = M2 * (2 / (D2 * D2 + M2 * M2 + C2 * C2 + K2 * K2));
              L2 = C2 * (2 / (D2 * D2 + M2 * M2 + C2 * C2 + K2 * K2));
              g[z2 + 456 >> 2] = 1 - (M2 * E2 + C2 * L2);
              g[z2 + 456 + 4 >> 2] = D2 * E2 - K2 * L2;
              g[z2 + 456 + 8 >> 2] = D2 * L2 + K2 * E2;
              g[z2 + 456 + 12 >> 2] = 0;
              g[z2 + 456 + 16 >> 2] = D2 * E2 + K2 * L2;
              g[z2 + 456 + 20 >> 2] = 1 - (D2 * B2 + C2 * L2);
              g[z2 + 456 + 24 >> 2] = M2 * L2 - K2 * B2;
              g[z2 + 456 + 28 >> 2] = 0;
              g[z2 + 456 + 32 >> 2] = D2 * L2 - K2 * E2;
              g[z2 + 456 + 36 >> 2] = M2 * L2 + K2 * B2;
              g[z2 + 456 + 40 >> 2] = 1 - (D2 * B2 + M2 * E2);
              g[z2 + 456 + 44 >> 2] = 0;
              E2 = +g[d2 + 184 >> 2];
              M2 = +g[d2 + 188 >> 2];
              B2 = +g[d2 + 192 >> 2];
              D2 = +g[d2 + 196 >> 2];
              K2 = E2 * (2 / (E2 * E2 + M2 * M2 + B2 * B2 + D2 * D2));
              L2 = M2 * (2 / (E2 * E2 + M2 * M2 + B2 * B2 + D2 * D2));
              C2 = B2 * (2 / (E2 * E2 + M2 * M2 + B2 * B2 + D2 * D2));
              g[z2 + 392 >> 2] = 1 - (M2 * L2 + B2 * C2);
              g[z2 + 392 + 4 >> 2] = E2 * L2 - D2 * C2;
              g[z2 + 392 + 8 >> 2] = E2 * C2 + D2 * L2;
              g[z2 + 392 + 12 >> 2] = 0;
              g[z2 + 392 + 16 >> 2] = E2 * L2 + D2 * C2;
              g[z2 + 392 + 20 >> 2] = 1 - (E2 * K2 + B2 * C2);
              g[p2 >> 2] = M2 * C2 - D2 * K2;
              g[z2 + 392 + 28 >> 2] = 0;
              g[z2 + 392 + 32 >> 2] = E2 * C2 - D2 * L2;
              g[z2 + 392 + 36 >> 2] = M2 * C2 + D2 * K2;
              g[z2 + 392 + 40 >> 2] = 1 - (E2 * K2 + M2 * L2);
              g[z2 + 392 + 44 >> 2] = 0;
              L2 = +g[d2 + 156 >> 2] - o2;
              M2 = +g[d2 + 160 >> 2] - r2;
              g[z2 + 288 + 48 >> 2] = +g[d2 + 152 >> 2] - n2;
              g[z2 + 288 + 52 >> 2] = L2;
              g[z2 + 288 + 56 >> 2] = M2;
              g[z2 + 288 + 60 >> 2] = 0;
              if (!(a[d2 + 250 >> 0] | 0)) {
                Hd(e2, c[d2 + 12 >> 2] | 0, z2 + 456 | 0, z2 + 392 | 0, z2 + 168 | 0, +g[e2 + 56 >> 2]);
                if (!(+g[s2 >> 2] < 1) ? (c[(c[d2 + 8 >> 2] | 0) + 204 >> 2] & 4 | 0) == 0 : 0)
                  Hd(e2, c[d2 + 12 >> 2] | 0, z2 + 456 | 0, z2 + 288 | 0, z2 + 64 | 0, +g[e2 + 56 >> 2]);
              } else {
                ad(c[d2 + 8 >> 2] | 0, c[d2 + 12 >> 2] | 0, z2 + 456 | 0, z2 + 392 | 0, z2 + 168 | 0, +g[e2 + 56 >> 2]);
                if (!(+g[s2 >> 2] < 1) ? (v2 = c[d2 + 8 >> 2] | 0, (c[v2 + 204 >> 2] & 4 | 0) == 0) : 0)
                  ad(v2, c[d2 + 12 >> 2] | 0, z2 + 456 | 0, z2 + 288 | 0, z2 + 64 | 0, +g[e2 + 56 >> 2]);
              }
              k2 = +g[d2 + 20 >> 2];
              k2 = (k2 < 0 ? -k2 : 0) * f2;
              if (!(a[d2 + 290 >> 0] | 0))
                if (+g[z2 + 64 + 4 >> 2] < 1 ? (x2 = c[d2 + 8 >> 2] | 0, (c[x2 + 204 >> 2] & 4 | 0) == 0) : 0)
                  m2 = yb[c[(c[d2 >> 2] | 0) + 56 >> 2] & 63](d2, x2, c[z2 + 64 + 76 >> 2] | 0) | 0;
                else
                  m2 = 0;
              else if ((+g[s2 >> 2] < 1 ? 1 : +g[z2 + 64 + 4 >> 2] < 1) ? (w2 = c[d2 + 8 >> 2] | 0, (c[w2 + 204 >> 2] & 4 | 0) == 0) : 0)
                m2 = yb[c[(c[d2 >> 2] | 0) + 56 >> 2] & 63](d2, w2, c[z2 + 168 + 76 >> 2] | 0) | 0;
              else
                m2 = 0;
              if (+g[d2 + 20 >> 2] < 0)
                j2 = +g[d2 + 60 >> 2];
              else
                j2 = 0;
              if (h2 | (!(k2 > 0) | !(k2 < j2) | m2 ^ 1))
                break;
              N2 = b[d2 + 248 >> 1] | 0;
              if (!((N2 & 255) << 24 >> 24 != 0 | (N2 & 65535) < 256)) {
                h2 = 0;
                break;
              }
              c[d2 + 152 >> 2] = c[z2 + 272 >> 2];
              c[d2 + 152 + 4 >> 2] = c[z2 + 272 + 4 >> 2];
              c[d2 + 152 + 8 >> 2] = c[z2 + 272 + 8 >> 2];
              c[d2 + 152 + 12 >> 2] = c[z2 + 272 + 12 >> 2];
              r2 = j2 + +g[d2 + 148 >> 2];
              n2 = +g[d2 + 256 >> 2] * r2;
              o2 = r2 * +g[d2 + 260 >> 2];
              r2 = r2 * +g[d2 + 264 >> 2];
              g[d2 + 152 >> 2] = +g[d2 + 152 >> 2] - n2;
              g[d2 + 156 >> 2] = +g[d2 + 156 >> 2] - o2;
              g[d2 + 160 >> 2] = +g[d2 + 160 >> 2] - r2;
              h2 = 1;
            }
            m2 = c[d2 + 8 >> 2] | 0;
            if (+g[s2 >> 2] < 1 ? (c[m2 + 204 >> 2] & 4 | 0) == 0 : 0)
              if (h2 | (yb[c[(c[d2 >> 2] | 0) + 56 >> 2] & 63](d2, m2, c[z2 + 168 + 76 >> 2] | 0) | 0))
                h2 = 66;
              else
                h2 = 72;
            else if (h2)
              h2 = 66;
            else
              h2 = 72;
            if ((h2 | 0) == 66) {
              j2 = +g[d2 + 136 >> 2];
              k2 = (j2 - +g[z2 + 168 + 64 >> 2]) * 0.5;
              do
                if (a[d2 + 290 >> 0] | 0)
                  if (!(a[d2 + 289 >> 0] | 0)) {
                    g[d2 + 132 >> 2] = (1 - k2) * +g[d2 + 132 >> 2] + k2 * +g[d2 + 152 >> 2];
                    g[d2 + 136 >> 2] = (1 - k2) * j2 + k2 * +g[d2 + 156 >> 2];
                    g[d2 + 140 >> 2] = (1 - k2) * +g[d2 + 140 >> 2] + k2 * +g[d2 + 160 >> 2];
                    h2 = d2 + 289 | 0;
                    break;
                  } else {
                    M2 = +g[s2 >> 2];
                    g[d2 + 132 >> 2] = (1 - M2) * +g[d2 + 132 >> 2] + M2 * +g[d2 + 152 >> 2];
                    g[d2 + 136 >> 2] = (1 - M2) * j2 + M2 * +g[d2 + 156 >> 2];
                    g[d2 + 140 >> 2] = (1 - M2) * +g[d2 + 140 >> 2] + M2 * +g[d2 + 160 >> 2];
                    h2 = d2 + 289 | 0;
                    break;
                  }
                else {
                  M2 = +g[s2 >> 2];
                  g[d2 + 132 >> 2] = (1 - M2) * +g[d2 + 132 >> 2] + M2 * +g[d2 + 152 >> 2];
                  g[d2 + 136 >> 2] = (1 - M2) * j2 + M2 * +g[d2 + 156 >> 2];
                  g[d2 + 140 >> 2] = (1 - M2) * +g[d2 + 140 >> 2] + M2 * +g[d2 + 160 >> 2];
                  h2 = d2 + 289 | 0;
                }
              while (0);
              a[h2 >> 0] = 0;
              g[d2 + 20 >> 2] = 0;
              g[d2 + 24 >> 2] = 0;
              a[d2 + 249 >> 0] = 0;
            } else if ((h2 | 0) == 72) {
              a[d2 + 289 >> 0] = 1;
              if ((a[d2 + 290 >> 0] | 0 ? (M2 = +g[d2 + 20 >> 2], y2 = +g[d2 + 28 >> 2], (M2 < 0 ? -M2 : 0) * f2 > y2) : 0) ? (N2 = b[d2 + 248 >> 1] | 0, (N2 & 255) << 24 >> 24 != 0 | (N2 & 65535) < 256) : 0) {
                E2 = o2 + +g[d2 + 156 >> 2];
                L2 = r2 + +g[d2 + 160 >> 2];
                D2 = y2 + +g[d2 + 148 >> 2];
                K2 = D2 * +g[d2 + 260 >> 2];
                M2 = D2 * +g[d2 + 264 >> 2];
                g[d2 + 152 >> 2] = n2 + +g[d2 + 152 >> 2] - +g[d2 + 256 >> 2] * D2;
                g[d2 + 156 >> 2] = E2 - K2;
                g[d2 + 160 >> 2] = L2 - M2;
              }
              c[d2 + 132 >> 2] = c[d2 + 152 >> 2];
              c[d2 + 132 + 4 >> 2] = c[d2 + 152 + 4 >> 2];
              c[d2 + 132 + 8 >> 2] = c[d2 + 152 + 8 >> 2];
              c[d2 + 132 + 12 >> 2] = c[d2 + 152 + 12 >> 2];
            }
          }
          c[z2 + 48 >> 2] = c[d2 + 132 >> 2];
          c[z2 + 48 + 4 >> 2] = c[d2 + 132 + 4 >> 2];
          c[z2 + 48 + 8 >> 2] = c[d2 + 132 + 8 >> 2];
          c[z2 + 48 + 12 >> 2] = c[d2 + 132 + 12 >> 2];
          N2 = c[d2 + 8 >> 2] | 0;
          c[N2 + 300 >> 2] = (c[N2 + 300 >> 2] | 0) + 1;
          c[N2 + 4 >> 2] = c[z2 >> 2];
          c[N2 + 4 + 4 >> 2] = c[z2 + 4 >> 2];
          c[N2 + 4 + 8 >> 2] = c[z2 + 8 >> 2];
          c[N2 + 4 + 12 >> 2] = c[z2 + 12 >> 2];
          c[N2 + 20 >> 2] = c[z2 + 16 >> 2];
          c[N2 + 20 + 4 >> 2] = c[z2 + 16 + 4 >> 2];
          c[N2 + 20 + 8 >> 2] = c[z2 + 16 + 8 >> 2];
          c[N2 + 20 + 12 >> 2] = c[z2 + 16 + 12 >> 2];
          c[N2 + 36 >> 2] = c[z2 + 32 >> 2];
          c[N2 + 36 + 4 >> 2] = c[z2 + 32 + 4 >> 2];
          c[N2 + 36 + 8 >> 2] = c[z2 + 32 + 8 >> 2];
          c[N2 + 36 + 12 >> 2] = c[z2 + 32 + 12 >> 2];
          c[N2 + 52 >> 2] = c[z2 + 48 >> 2];
          c[N2 + 52 + 4 >> 2] = c[z2 + 48 + 4 >> 2];
          c[N2 + 52 + 8 >> 2] = c[z2 + 48 + 8 >> 2];
          c[N2 + 52 + 12 >> 2] = c[z2 + 48 + 12 >> 2];
          a[d2 + 220 >> 0] = 0;
          if ((((Zd(d2, e2) | 0 ? (a[d2 + 220 >> 0] = 1, Zd(d2, e2) | 0) : 0) ? (a[d2 + 220 >> 0] = 1, Zd(d2, e2) | 0) : 0) ? (a[d2 + 220 >> 0] = 1, Zd(d2, e2) | 0) : 0) ? (a[d2 + 220 >> 0] = 1, Zd(d2, e2) | 0) : 0)
            a[d2 + 220 >> 0] = 1;
          i = z2;
          return;
        }
        function oc(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0;
          J2 = i;
          i = i + 176 | 0;
          if ((e2 | 0) < 1) {
            f2 = c[b2 + 12 >> 2] | 0;
            if (f2 | 0) {
              if (a[b2 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[b2 + 12 >> 2] = 0;
            }
            a[b2 + 16 >> 0] = 1;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            f2 = c[b2 + 32 >> 2] | 0;
            if (f2 | 0) {
              if (a[b2 + 36 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[b2 + 32 >> 2] = 0;
            }
            a[b2 + 36 >> 0] = 1;
            c[b2 + 32 >> 2] = 0;
            c[b2 + 24 >> 2] = 0;
            c[b2 + 28 >> 2] = 0;
            f2 = c[b2 + 52 >> 2] | 0;
            if (f2 | 0) {
              if (a[b2 + 56 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
              }
              c[b2 + 52 >> 2] = 0;
            }
            a[b2 + 56 >> 0] = 1;
            c[b2 + 52 >> 2] = 0;
            c[b2 + 44 >> 2] = 0;
            c[b2 + 48 >> 2] = 0;
            i = J2;
            return;
          }
          c[J2 + 32 >> 2] = 0;
          c[J2 + 36 >> 2] = 0;
          c[J2 + 40 >> 2] = 0;
          c[J2 + 44 >> 2] = 256;
          c[J2 + 48 >> 2] = 0;
          c[J2 + 52 >> 2] = 0;
          c[J2 + 56 >> 2] = 0;
          c[J2 + 60 >> 2] = 256;
          c[J2 + 64 >> 2] = 0;
          c[J2 + 68 >> 2] = 0;
          c[J2 + 72 >> 2] = 0;
          c[J2 + 76 >> 2] = 256;
          a[J2 + 96 >> 0] = 1;
          c[J2 + 92 >> 2] = 0;
          c[J2 + 84 >> 2] = 0;
          c[J2 + 88 >> 2] = 0;
          f2 = 0;
          h2 = d2;
          j2 = -246811958;
          r2 = 1900671690;
          s2 = -246811958;
          u2 = 1900671690;
          v2 = -246811958;
          y2 = 1900671690;
          while (1) {
            E2 = +g[h2 >> 2];
            k2 = +g[h2 + 4 >> 2];
            o2 = +g[h2 + 8 >> 2];
            G2 = E2 < (c[l >> 2] = r2, +g[l >> 2]);
            m2 = (g[l >> 2] = E2, c[l >> 2] | 0);
            r2 = G2 ? m2 : r2;
            G2 = k2 < (c[l >> 2] = u2, +g[l >> 2]);
            n2 = (g[l >> 2] = k2, c[l >> 2] | 0);
            u2 = G2 ? n2 : u2;
            G2 = o2 < (c[l >> 2] = y2, +g[l >> 2]);
            q2 = (g[l >> 2] = o2, c[l >> 2] | 0);
            y2 = G2 ? q2 : y2;
            j2 = (c[l >> 2] = j2, +g[l >> 2]) < E2 ? m2 : j2;
            s2 = (c[l >> 2] = s2, +g[l >> 2]) < k2 ? n2 : s2;
            v2 = (c[l >> 2] = v2, +g[l >> 2]) < o2 ? q2 : v2;
            f2 = f2 + 1 | 0;
            if ((f2 | 0) == (e2 | 0))
              break;
            else
              h2 = h2 + 16 | 0;
          }
          B2 = (c[l >> 2] = j2, +g[l >> 2]);
          A2 = (c[l >> 2] = r2, +g[l >> 2]);
          z2 = (c[l >> 2] = s2, +g[l >> 2]);
          x2 = (c[l >> 2] = u2, +g[l >> 2]);
          w2 = (c[l >> 2] = v2, +g[l >> 2]);
          t2 = (c[l >> 2] = y2, +g[l >> 2]);
          h2 = B2 - A2 < z2 - x2 ? z2 - x2 < w2 - t2 ? 2 : 1 : B2 - A2 < w2 - t2 ? 2 : 0;
          c[J2 + 112 >> 2] = h2;
          f2 = B2 - A2 < z2 - x2 ? B2 - A2 < w2 - t2 ? 0 : 2 : z2 - x2 < w2 - t2 ? 1 : 2;
          if ((f2 | 0) == (h2 | 0))
            f2 = ((h2 + 1 | 0) >>> 0) % 3 | 0;
          c[J2 + 104 >> 2] = f2;
          G2 = (h2 ^ 3) - f2 | 0;
          c[J2 + 108 >> 2] = G2;
          if (((G2 + 1 | 0) % 3 | 0 | 0) == (h2 | 0)) {
            k2 = (B2 - A2) * 9788566967472434e-20;
            o2 = (z2 - x2) * 9788566967472434e-20;
            p2 = (w2 - t2) * 9788566967472434e-20;
          } else {
            k2 = -((B2 - A2) * 9788566967472434e-20);
            o2 = -((z2 - x2) * 9788566967472434e-20);
            p2 = -((w2 - t2) * 9788566967472434e-20);
          }
          g[J2 >> 2] = k2;
          g[J2 + 4 >> 2] = o2;
          g[J2 + 8 >> 2] = p2;
          g[J2 + 12 >> 2] = 0;
          E2 = k2 != 0 ? 1 / k2 : k2;
          D2 = o2 != 0 ? 1 / o2 : o2;
          C2 = p2 != 0 ? 1 / p2 : p2;
          g[J2 + 16 >> 2] = (B2 + A2) * 0.5;
          g[J2 + 20 >> 2] = (z2 + x2) * 0.5;
          g[J2 + 24 >> 2] = (w2 + t2) * 0.5;
          g[J2 + 28 >> 2] = 0;
          r2 = J2 + 144 + 16 | 0;
          a[r2 >> 0] = 1;
          s2 = J2 + 144 + 12 | 0;
          c[s2 >> 2] = 0;
          c[J2 + 144 + 4 >> 2] = 0;
          c[J2 + 144 + 8 >> 2] = 0;
          c[6324] = (c[6324] | 0) + 1;
          f2 = ic((e2 << 4 | 3) + 16 | 0) | 0;
          if (!f2)
            h2 = 0;
          else {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            h2 = f2 + 4 + 15 & -16;
          }
          j2 = c[J2 + 144 + 4 >> 2] | 0;
          m2 = c[s2 >> 2] | 0;
          if ((j2 | 0) <= 0) {
            if (m2 | 0)
              I2 = 26;
          } else {
            f2 = 0;
            do {
              I2 = h2 + (f2 << 4) | 0;
              G2 = m2 + (f2 << 4) | 0;
              c[I2 >> 2] = c[G2 >> 2];
              c[I2 + 4 >> 2] = c[G2 + 4 >> 2];
              c[I2 + 8 >> 2] = c[G2 + 8 >> 2];
              c[I2 + 12 >> 2] = c[G2 + 12 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (j2 | 0));
            I2 = 26;
          }
          if ((I2 | 0) == 26) {
            if (a[r2 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[m2 + -4 >> 2] | 0);
            }
            c[s2 >> 2] = 0;
          }
          a[r2 >> 0] = 1;
          c[s2 >> 2] = h2;
          c[J2 + 144 + 8 >> 2] = e2;
          c[h2 >> 2] = c[J2 + 128 >> 2];
          c[h2 + 4 >> 2] = c[J2 + 128 + 4 >> 2];
          c[h2 + 8 >> 2] = c[J2 + 128 + 8 >> 2];
          c[h2 + 12 >> 2] = c[J2 + 128 + 12 >> 2];
          if ((e2 | 0) != 1) {
            f2 = 1;
            do {
              G2 = (c[s2 >> 2] | 0) + (f2 << 4) | 0;
              c[G2 >> 2] = c[J2 + 128 >> 2];
              c[G2 + 4 >> 2] = c[J2 + 128 + 4 >> 2];
              c[G2 + 8 >> 2] = c[J2 + 128 + 8 >> 2];
              c[G2 + 12 >> 2] = c[J2 + 128 + 12 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (e2 | 0));
          }
          c[J2 + 144 + 4 >> 2] = e2;
          j2 = J2 + 128 + (c[J2 + 108 >> 2] << 2) | 0;
          m2 = c[s2 >> 2] | 0;
          n2 = J2 + 128 + (c[J2 + 112 >> 2] << 2) | 0;
          q2 = J2 + 128 + (c[J2 + 104 >> 2] << 2) | 0;
          k2 = +g[J2 + 16 >> 2];
          o2 = +g[J2 + 20 >> 2];
          p2 = +g[J2 + 24 >> 2];
          h2 = 0;
          f2 = d2;
          while (1) {
            A2 = D2 * (+g[f2 + 4 >> 2] - o2);
            B2 = C2 * (+g[f2 + 8 >> 2] - p2);
            g[J2 + 128 >> 2] = E2 * (+g[f2 >> 2] - k2);
            g[J2 + 128 + 4 >> 2] = A2;
            g[J2 + 128 + 8 >> 2] = B2;
            g[J2 + 128 + 12 >> 2] = 0;
            c[m2 + (h2 << 4) >> 2] = ~~+g[j2 >> 2];
            c[m2 + (h2 << 4) + 4 >> 2] = ~~+g[n2 >> 2];
            c[m2 + (h2 << 4) + 8 >> 2] = ~~+g[q2 >> 2];
            c[m2 + (h2 << 4) + 12 >> 2] = h2;
            h2 = h2 + 1 | 0;
            if ((h2 | 0) == (e2 | 0))
              break;
            else
              f2 = f2 + 16 | 0;
          }
          if ((e2 | 0) > 1)
            Tg(J2 + 144 | 0, 0, e2 + -1 | 0);
          c[J2 + 36 >> 2] = c[J2 + 32 >> 2];
          c[J2 + 40 >> 2] = 0;
          c[J2 + 44 >> 2] = e2;
          f2 = c[J2 + 84 >> 2] | 0;
          if ((f2 | 0) < (e2 | 0)) {
            if ((c[J2 + 88 >> 2] | 0) < (e2 | 0)) {
              if (!e2) {
                h2 = 0;
                m2 = f2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                h2 = ic((e2 << 2 | 3) + 16 | 0) | 0;
                if (!h2)
                  h2 = 0;
                else {
                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                  h2 = h2 + 4 + 15 & -16;
                }
                m2 = c[J2 + 84 >> 2] | 0;
              }
              if ((m2 | 0) > 0) {
                j2 = 0;
                do {
                  c[h2 + (j2 << 2) >> 2] = c[(c[J2 + 92 >> 2] | 0) + (j2 << 2) >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (m2 | 0));
              }
              j2 = c[J2 + 92 >> 2] | 0;
              if (j2 | 0) {
                if (a[J2 + 96 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[j2 + -4 >> 2] | 0);
                }
                c[J2 + 92 >> 2] = 0;
              }
              a[J2 + 96 >> 0] = 1;
              c[J2 + 92 >> 2] = h2;
              c[J2 + 88 >> 2] = e2;
            }
            do {
              c[(c[J2 + 92 >> 2] | 0) + (f2 << 2) >> 2] = 0;
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != (e2 | 0));
          }
          c[J2 + 84 >> 2] = e2;
          n2 = 0;
          do {
            f2 = c[J2 + 40 >> 2] | 0;
            if (!f2) {
              f2 = c[J2 + 36 >> 2] | 0;
              if (!f2) {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic(31) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                h2 = c[J2 + 44 >> 2] | 0;
                c[f2 + 4 >> 2] = h2;
                j2 = f2 + 8 | 0;
                c[j2 >> 2] = 0;
                c[6324] = (c[6324] | 0) + 1;
                h2 = ic((h2 * 112 | 3) + 16 | 0) | 0;
                if (!h2)
                  h2 = 0;
                else {
                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                  h2 = h2 + 4 + 15 & -16;
                }
                c[f2 >> 2] = h2;
                c[j2 >> 2] = c[J2 + 32 >> 2];
                c[J2 + 32 >> 2] = f2;
              } else
                c[J2 + 36 >> 2] = c[f2 + 8 >> 2];
              m2 = c[f2 + 4 >> 2] | 0;
              f2 = c[f2 >> 2] | 0;
              if ((m2 | 0) > 0) {
                h2 = 0;
                j2 = f2;
                do {
                  h2 = h2 + 1 | 0;
                  G2 = j2;
                  j2 = j2 + 112 | 0;
                  c[G2 >> 2] = (h2 | 0) < (m2 | 0) ? j2 : 0;
                } while ((h2 | 0) != (m2 | 0));
              }
            }
            c[J2 + 40 >> 2] = c[f2 >> 2];
            G2 = f2 + 104 | 0;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            c[f2 + 16 >> 2] = 0;
            c[G2 >> 2] = -1;
            c[f2 + 8 >> 2] = 0;
            F2 = f2 + 88 | 0;
            d2 = (c[s2 >> 2] | 0) + (n2 << 4) | 0;
            c[F2 >> 2] = c[d2 >> 2];
            c[F2 + 4 >> 2] = c[d2 + 4 >> 2];
            c[F2 + 8 >> 2] = c[d2 + 8 >> 2];
            c[F2 + 12 >> 2] = c[d2 + 12 >> 2];
            c[G2 >> 2] = -1;
            c[(c[J2 + 92 >> 2] | 0) + (n2 << 2) >> 2] = f2;
            n2 = n2 + 1 | 0;
          } while ((n2 | 0) < (e2 | 0));
          f2 = c[s2 >> 2] | 0;
          if (f2 | 0) {
            if (a[r2 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[f2 + -4 >> 2] | 0);
            }
            c[s2 >> 2] = 0;
          }
          a[r2 >> 0] = 1;
          c[s2 >> 2] = 0;
          c[J2 + 144 + 4 >> 2] = 0;
          c[J2 + 144 + 8 >> 2] = 0;
          c[J2 + 52 >> 2] = c[J2 + 48 >> 2];
          c[J2 + 56 >> 2] = 0;
          c[J2 + 60 >> 2] = e2 * 6;
          c[J2 + 116 >> 2] = 0;
          c[J2 + 120 >> 2] = 0;
          c[J2 + 100 >> 2] = -3;
          c[J2 + 128 >> 2] = 0;
          c[J2 + 128 + 4 >> 2] = 0;
          c[J2 + 128 + 8 >> 2] = 0;
          c[J2 + 128 + 12 >> 2] = 0;
          ec(J2, 0, e2, J2 + 128 | 0);
          c[J2 + 124 >> 2] = c[J2 + 128 >> 2];
          f2 = c[s2 >> 2] | 0;
          if (f2 | 0) {
            if (a[r2 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[f2 + -4 >> 2] | 0);
            }
            c[s2 >> 2] = 0;
          }
          f2 = c[b2 + 4 >> 2] | 0;
          if ((f2 | 0) < 0) {
            if ((c[b2 + 8 >> 2] | 0) < 0) {
              h2 = c[b2 + 12 >> 2] | 0;
              if (h2 | 0) {
                if (a[b2 + 16 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[h2 + -4 >> 2] | 0);
                }
                c[b2 + 12 >> 2] = 0;
              }
              a[b2 + 16 >> 0] = 1;
              c[b2 + 12 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
            }
            do {
              G2 = (c[b2 + 12 >> 2] | 0) + (f2 << 4) | 0;
              c[G2 >> 2] = c[J2 + 144 >> 2];
              c[G2 + 4 >> 2] = c[J2 + 144 + 4 >> 2];
              c[G2 + 8 >> 2] = c[J2 + 144 + 8 >> 2];
              c[G2 + 12 >> 2] = c[J2 + 144 + 12 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != 0);
          }
          c[b2 + 4 >> 2] = 0;
          c[J2 + 144 >> 2] = 0;
          c[J2 + 144 + 4 >> 2] = 0;
          c[J2 + 144 + 8 >> 2] = 0;
          f2 = c[b2 + 24 >> 2] | 0;
          if ((f2 | 0) < 0) {
            if ((c[b2 + 28 >> 2] | 0) < 0) {
              h2 = c[b2 + 32 >> 2] | 0;
              if (h2 | 0) {
                if (a[b2 + 36 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[h2 + -4 >> 2] | 0);
                }
                c[b2 + 32 >> 2] = 0;
              }
              a[b2 + 36 >> 0] = 1;
              c[b2 + 32 >> 2] = 0;
              c[b2 + 28 >> 2] = 0;
            }
            do {
              G2 = (c[b2 + 32 >> 2] | 0) + (f2 * 12 | 0) | 0;
              c[G2 >> 2] = c[J2 + 144 >> 2];
              c[G2 + 4 >> 2] = c[J2 + 144 + 4 >> 2];
              c[G2 + 8 >> 2] = c[J2 + 144 + 8 >> 2];
              f2 = f2 + 1 | 0;
            } while ((f2 | 0) != 0);
          }
          c[b2 + 24 >> 2] = 0;
          h2 = c[b2 + 44 >> 2] | 0;
          if ((h2 | 0) < 0) {
            f2 = c[b2 + 52 >> 2] | 0;
            do
              if ((c[b2 + 48 >> 2] | 0) < 0) {
                if (!f2) {
                  a[b2 + 56 >> 0] = 1;
                  c[b2 + 52 >> 2] = 0;
                  c[b2 + 48 >> 2] = 0;
                  f2 = 0;
                  break;
                }
                if (a[b2 + 56 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[f2 + -4 >> 2] | 0);
                }
                a[b2 + 56 >> 0] = 1;
                c[b2 + 52 >> 2] = 0;
                c[b2 + 48 >> 2] = 0;
                f2 = 0;
              }
            while (0);
            yn(f2 + (h2 << 2) | 0, 0, S(h2, -4) | 0) | 0;
          }
          c[b2 + 44 >> 2] = 0;
          f2 = c[J2 + 124 >> 2] | 0;
          if ((c[f2 + 104 >> 2] | 0) < 0) {
            c[f2 + 104 >> 2] = 0;
            c[6324] = (c[6324] | 0) + 1;
            q2 = ic(23) | 0;
            c[(q2 + 4 + 15 & -16) + -4 >> 2] = q2;
            c[(q2 + 4 + 15 & -16) >> 2] = f2;
            G2 = 0;
            j2 = 1;
            q2 = q2 + 4 + 15 & -16;
            r2 = 1;
            while (1) {
              if ((c[f2 + 100 >> 2] | 0) > -1) {
                g[J2 + 144 + (c[J2 + 108 >> 2] << 2) >> 2] = +(c[f2 + 88 >> 2] | 0);
                g[J2 + 144 + (c[J2 + 112 >> 2] << 2) >> 2] = +(c[f2 + 92 >> 2] | 0);
                k2 = +(c[f2 + 96 >> 2] | 0);
              } else {
                F2 = f2 + 24 | 0;
                d2 = f2 + 32 | 0;
                k2 = +Wm(c[F2 >> 2] | 0, c[F2 + 4 >> 2] | 0, c[d2 >> 2] | 0, c[d2 + 4 >> 2] | 0);
                d2 = f2 + 72 | 0;
                F2 = f2 + 80 | 0;
                e2 = c[F2 >> 2] | 0;
                F2 = c[F2 + 4 >> 2] | 0;
                k2 = k2 / +Wm(c[d2 >> 2] | 0, c[d2 + 4 >> 2] | 0, e2, F2);
                g[J2 + 144 + (c[J2 + 108 >> 2] << 2) >> 2] = k2;
                y2 = f2 + 40 | 0;
                v2 = f2 + 48 | 0;
                k2 = +Wm(c[y2 >> 2] | 0, c[y2 + 4 >> 2] | 0, c[v2 >> 2] | 0, c[v2 + 4 >> 2] | 0);
                k2 = k2 / +Wm(c[d2 >> 2] | 0, c[d2 + 4 >> 2] | 0, e2, F2);
                g[J2 + 144 + (c[J2 + 112 >> 2] << 2) >> 2] = k2;
                v2 = f2 + 56 | 0;
                y2 = f2 + 64 | 0;
                k2 = +Wm(c[v2 >> 2] | 0, c[v2 + 4 >> 2] | 0, c[y2 >> 2] | 0, c[y2 + 4 >> 2] | 0);
                k2 = k2 / +Wm(c[d2 >> 2] | 0, c[d2 + 4 >> 2] | 0, e2, F2);
              }
              g[J2 + 144 + (c[J2 + 104 >> 2] << 2) >> 2] = k2;
              k2 = +g[J2 + 144 >> 2] * +g[J2 >> 2] + +g[J2 + 16 >> 2];
              o2 = +g[J2 + 144 + 4 >> 2] * +g[J2 + 4 >> 2] + +g[J2 + 20 >> 2];
              p2 = +g[J2 + 144 + 8 >> 2] * +g[J2 + 8 >> 2] + +g[J2 + 24 >> 2];
              m2 = c[b2 + 4 >> 2] | 0;
              if ((m2 | 0) == (c[b2 + 8 >> 2] | 0) ? (H2 = m2 | 0 ? m2 << 1 : 1, (m2 | 0) < (H2 | 0)) : 0) {
                if (!H2)
                  h2 = 0;
                else {
                  c[6324] = (c[6324] | 0) + 1;
                  h2 = ic((H2 << 4 | 3) + 16 | 0) | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    h2 = h2 + 4 + 15 & -16;
                  }
                  m2 = c[b2 + 4 >> 2] | 0;
                }
                if ((m2 | 0) > 0) {
                  n2 = 0;
                  do {
                    F2 = h2 + (n2 << 4) | 0;
                    e2 = (c[b2 + 12 >> 2] | 0) + (n2 << 4) | 0;
                    c[F2 >> 2] = c[e2 >> 2];
                    c[F2 + 4 >> 2] = c[e2 + 4 >> 2];
                    c[F2 + 8 >> 2] = c[e2 + 8 >> 2];
                    c[F2 + 12 >> 2] = c[e2 + 12 >> 2];
                    n2 = n2 + 1 | 0;
                  } while ((n2 | 0) != (m2 | 0));
                }
                m2 = c[b2 + 12 >> 2] | 0;
                if (m2 | 0) {
                  if (a[b2 + 16 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[m2 + -4 >> 2] | 0);
                  }
                  c[b2 + 12 >> 2] = 0;
                }
                a[b2 + 16 >> 0] = 1;
                c[b2 + 12 >> 2] = h2;
                c[b2 + 8 >> 2] = H2;
                h2 = c[b2 + 4 >> 2] | 0;
              } else
                h2 = m2;
              F2 = c[b2 + 12 >> 2] | 0;
              g[F2 + (h2 << 4) >> 2] = k2;
              g[F2 + (h2 << 4) + 4 >> 2] = o2;
              g[F2 + (h2 << 4) + 8 >> 2] = p2;
              g[F2 + (h2 << 4) + 12 >> 2] = 0;
              c[b2 + 4 >> 2] = (c[b2 + 4 >> 2] | 0) + 1;
              F2 = c[f2 + 8 >> 2] | 0;
              if (!F2) {
                n2 = q2;
                f2 = r2;
              } else {
                d2 = F2;
                e2 = -1;
                h2 = -1;
                v2 = q2;
                f2 = r2;
                while (1) {
                  y2 = d2 + 20 | 0;
                  m2 = c[y2 >> 2] | 0;
                  if ((m2 | 0) < 0) {
                    u2 = c[b2 + 24 >> 2] | 0;
                    c[J2 + 144 >> 2] = 0;
                    c[J2 + 144 + 4 >> 2] = 0;
                    c[J2 + 144 + 8 >> 2] = 0;
                    do
                      if ((u2 | 0) == (c[b2 + 28 >> 2] | 0)) {
                        r2 = u2 | 0 ? u2 << 1 : 1;
                        if ((u2 | 0) >= (r2 | 0)) {
                          m2 = u2;
                          break;
                        }
                        if (!r2) {
                          m2 = 0;
                          q2 = u2;
                        } else {
                          c[6324] = (c[6324] | 0) + 1;
                          m2 = ic((r2 * 12 | 3) + 16 | 0) | 0;
                          if (!m2)
                            m2 = 0;
                          else {
                            c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
                            m2 = m2 + 4 + 15 & -16;
                          }
                          q2 = c[b2 + 24 >> 2] | 0;
                        }
                        if ((q2 | 0) > 0) {
                          n2 = 0;
                          do {
                            s2 = m2 + (n2 * 12 | 0) | 0;
                            K2 = (c[b2 + 32 >> 2] | 0) + (n2 * 12 | 0) | 0;
                            c[s2 >> 2] = c[K2 >> 2];
                            c[s2 + 4 >> 2] = c[K2 + 4 >> 2];
                            c[s2 + 8 >> 2] = c[K2 + 8 >> 2];
                            n2 = n2 + 1 | 0;
                          } while ((n2 | 0) != (q2 | 0));
                        }
                        n2 = c[b2 + 32 >> 2] | 0;
                        if (n2 | 0) {
                          if (a[b2 + 36 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[n2 + -4 >> 2] | 0);
                          }
                          c[b2 + 32 >> 2] = 0;
                        }
                        a[b2 + 36 >> 0] = 1;
                        c[b2 + 32 >> 2] = m2;
                        c[b2 + 28 >> 2] = r2;
                        m2 = c[b2 + 24 >> 2] | 0;
                      } else
                        m2 = u2;
                    while (0);
                    m2 = (c[b2 + 32 >> 2] | 0) + (m2 * 12 | 0) | 0;
                    c[m2 >> 2] = c[J2 + 144 >> 2];
                    c[m2 + 4 >> 2] = c[J2 + 144 + 4 >> 2];
                    c[m2 + 8 >> 2] = c[J2 + 144 + 8 >> 2];
                    m2 = (c[b2 + 24 >> 2] | 0) + 1 | 0;
                    c[b2 + 24 >> 2] = m2;
                    c[J2 + 144 >> 2] = 0;
                    c[J2 + 144 + 4 >> 2] = 0;
                    c[J2 + 144 + 8 >> 2] = 0;
                    do
                      if ((m2 | 0) == (c[b2 + 28 >> 2] | 0)) {
                        r2 = m2 | 0 ? m2 << 1 : 1;
                        if ((m2 | 0) >= (r2 | 0))
                          break;
                        if (!r2)
                          q2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          m2 = ic((r2 * 12 | 3) + 16 | 0) | 0;
                          if (!m2)
                            m2 = 0;
                          else {
                            c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
                            m2 = m2 + 4 + 15 & -16;
                          }
                          q2 = m2;
                          m2 = c[b2 + 24 >> 2] | 0;
                        }
                        if ((m2 | 0) > 0) {
                          n2 = 0;
                          do {
                            K2 = q2 + (n2 * 12 | 0) | 0;
                            s2 = (c[b2 + 32 >> 2] | 0) + (n2 * 12 | 0) | 0;
                            c[K2 >> 2] = c[s2 >> 2];
                            c[K2 + 4 >> 2] = c[s2 + 4 >> 2];
                            c[K2 + 8 >> 2] = c[s2 + 8 >> 2];
                            n2 = n2 + 1 | 0;
                          } while ((n2 | 0) != (m2 | 0));
                        }
                        m2 = c[b2 + 32 >> 2] | 0;
                        if (m2 | 0) {
                          if (a[b2 + 36 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[m2 + -4 >> 2] | 0);
                          }
                          c[b2 + 32 >> 2] = 0;
                        }
                        a[b2 + 36 >> 0] = 1;
                        c[b2 + 32 >> 2] = q2;
                        c[b2 + 28 >> 2] = r2;
                        m2 = c[b2 + 24 >> 2] | 0;
                      }
                    while (0);
                    s2 = (c[b2 + 32 >> 2] | 0) + (m2 * 12 | 0) | 0;
                    c[s2 >> 2] = c[J2 + 144 >> 2];
                    c[s2 + 4 >> 2] = c[J2 + 144 + 4 >> 2];
                    c[s2 + 8 >> 2] = c[J2 + 144 + 8 >> 2];
                    c[b2 + 24 >> 2] = (c[b2 + 24 >> 2] | 0) + 1;
                    s2 = c[b2 + 32 >> 2] | 0;
                    c[y2 >> 2] = u2;
                    c[(c[d2 + 8 >> 2] | 0) + 20 >> 2] = u2 + 1;
                    c[s2 + (u2 * 12 | 0) + 4 >> 2] = 1;
                    c[s2 + ((u2 + 1 | 0) * 12 | 0) + 4 >> 2] = -1;
                    r2 = c[d2 + 12 >> 2] | 0;
                    m2 = c[r2 + 104 >> 2] | 0;
                    if ((m2 | 0) < 0) {
                      c[r2 + 104 >> 2] = f2;
                      do
                        if ((f2 | 0) == (j2 | 0)) {
                          q2 = j2 | 0 ? j2 << 1 : 1;
                          if ((j2 | 0) >= (q2 | 0)) {
                            n2 = v2;
                            break;
                          }
                          do
                            if (!q2)
                              n2 = 0;
                            else {
                              c[6324] = (c[6324] | 0) + 1;
                              m2 = ic((q2 << 2 | 3) + 16 | 0) | 0;
                              if (!m2) {
                                n2 = 0;
                                break;
                              }
                              c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
                              n2 = m2 + 4 + 15 & -16;
                            }
                          while (0);
                          if ((j2 | 0) <= 0) {
                            if (!v2) {
                              j2 = q2;
                              break;
                            }
                          } else {
                            m2 = 0;
                            do {
                              c[n2 + (m2 << 2) >> 2] = c[v2 + (m2 << 2) >> 2];
                              m2 = m2 + 1 | 0;
                            } while ((m2 | 0) != (j2 | 0));
                          }
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[v2 + -4 >> 2] | 0);
                          j2 = q2;
                        } else
                          n2 = v2;
                      while (0);
                      c[n2 + (f2 << 2) >> 2] = r2;
                      m2 = f2;
                      f2 = f2 + 1 | 0;
                    } else
                      n2 = v2;
                    c[s2 + (u2 * 12 | 0) + 8 >> 2] = m2;
                    c[s2 + ((u2 + 1 | 0) * 12 | 0) + 8 >> 2] = G2;
                    m2 = c[y2 >> 2] | 0;
                  } else
                    n2 = v2;
                  if ((e2 | 0) > -1)
                    c[(c[b2 + 32 >> 2] | 0) + (m2 * 12 | 0) >> 2] = e2 - m2;
                  else
                    h2 = m2;
                  d2 = c[d2 >> 2] | 0;
                  if ((d2 | 0) == (F2 | 0))
                    break;
                  else {
                    e2 = m2;
                    v2 = n2;
                  }
                }
                c[(c[b2 + 32 >> 2] | 0) + (h2 * 12 | 0) >> 2] = m2 - h2;
              }
              h2 = G2 + 1 | 0;
              if ((h2 | 0) >= (f2 | 0))
                break;
              G2 = h2;
              q2 = n2;
              r2 = f2;
              f2 = c[n2 + (h2 << 2) >> 2] | 0;
            }
            if ((G2 | 0) > -1) {
              u2 = 0;
              while (1) {
                v2 = c[(c[n2 + (u2 << 2) >> 2] | 0) + 8 >> 2] | 0;
                if (v2 | 0) {
                  s2 = v2;
                  do {
                    r2 = s2 + 20 | 0;
                    f2 = c[r2 >> 2] | 0;
                    if ((f2 | 0) > -1) {
                      h2 = c[b2 + 44 >> 2] | 0;
                      do
                        if ((h2 | 0) == (c[b2 + 48 >> 2] | 0)) {
                          q2 = h2 | 0 ? h2 << 1 : 1;
                          if ((h2 | 0) >= (q2 | 0))
                            break;
                          if (!q2)
                            f2 = 0;
                          else {
                            c[6324] = (c[6324] | 0) + 1;
                            f2 = ic((q2 << 2 | 3) + 16 | 0) | 0;
                            if (!f2)
                              f2 = 0;
                            else {
                              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                              f2 = f2 + 4 + 15 & -16;
                            }
                            h2 = c[b2 + 44 >> 2] | 0;
                          }
                          m2 = c[b2 + 52 >> 2] | 0;
                          if ((h2 | 0) <= 0) {
                            if (m2)
                              I2 = 172;
                          } else {
                            j2 = 0;
                            do {
                              c[f2 + (j2 << 2) >> 2] = c[m2 + (j2 << 2) >> 2];
                              j2 = j2 + 1 | 0;
                            } while ((j2 | 0) != (h2 | 0));
                            I2 = 172;
                          }
                          if ((I2 | 0) == 172) {
                            I2 = 0;
                            if (a[b2 + 56 >> 0] | 0) {
                              c[6325] = (c[6325] | 0) + 1;
                              Rc(c[m2 + -4 >> 2] | 0);
                            }
                            c[b2 + 52 >> 2] = 0;
                            h2 = c[b2 + 44 >> 2] | 0;
                          }
                          a[b2 + 56 >> 0] = 1;
                          c[b2 + 52 >> 2] = f2;
                          c[b2 + 48 >> 2] = q2;
                          f2 = c[r2 >> 2] | 0;
                        }
                      while (0);
                      c[(c[b2 + 52 >> 2] | 0) + (h2 << 2) >> 2] = f2;
                      c[b2 + 44 >> 2] = (c[b2 + 44 >> 2] | 0) + 1;
                      f2 = s2;
                      do {
                        c[f2 + 20 >> 2] = -1;
                        f2 = c[(c[f2 + 8 >> 2] | 0) + 4 >> 2] | 0;
                      } while ((f2 | 0) != (s2 | 0));
                    }
                    s2 = c[s2 >> 2] | 0;
                  } while ((s2 | 0) != (v2 | 0));
                }
                if ((u2 | 0) == (G2 | 0))
                  break;
                else
                  u2 = u2 + 1 | 0;
              }
            }
            if (n2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[n2 + -4 >> 2] | 0);
            }
          }
          Oi(J2);
          i = J2;
          return;
        }
        function pc(b2, d2, e2, f2, h2, j2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          j2 = +j2;
          var k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0;
          E2 = i;
          i = i + 960 | 0;
          D2 = c[f2 + 4 >> 2] | 0;
          C2 = c[f2 + 12 >> 2] | 0;
          k2 = c[D2 + 4 >> 2] | 0;
          if ((k2 | 0) < 20) {
            c[E2 + 776 >> 2] = 3928;
            c[E2 + 776 + 168 >> 2] = 0;
            g[E2 + 776 + 172 >> 2] = j2;
            c[E2 + 776 + 164 >> 2] = c[h2 + 4 >> 2];
            g[E2 + 416 + 308 >> 2] = 9999999747378752e-20;
            a[E2 + 416 + 332 >> 0] = 0;
            c[E2 + 352 >> 2] = 8828;
            c[E2 + 128 >> 2] = 8736;
            c[E2 + 128 + 4 >> 2] = E2 + 416;
            c[E2 + 128 + 8 >> 2] = E2 + 352;
            c[E2 + 128 + 12 >> 2] = b2;
            c[E2 + 128 + 16 >> 2] = D2;
            c[E2 + 128 + 20 >> 2] = 0;
            if ((Jd(E2 + 128 | 0, d2, e2, C2, C2, E2 + 776 | 0) | 0 ? (u2 = E2 + 776 + 132 | 0, p2 = +g[u2 >> 2], q2 = +g[E2 + 776 + 136 >> 2], r2 = +g[E2 + 776 + 140 >> 2], p2 * p2 + q2 * q2 + r2 * r2 > 9999999747378752e-20) : 0) ? (s2 = +g[E2 + 776 + 164 >> 2], s2 < +g[h2 + 4 >> 2]) : 0) {
              j2 = 1 / +G(+(p2 * p2 + q2 * q2 + r2 * r2));
              g[u2 >> 2] = p2 * j2;
              g[E2 + 776 + 136 >> 2] = q2 * j2;
              g[E2 + 776 + 140 >> 2] = r2 * j2;
              c[E2 + 64 >> 2] = c[f2 + 8 >> 2];
              c[E2 + 64 + 4 >> 2] = 0;
              c[E2 + 64 + 8 >> 2] = c[u2 >> 2];
              c[E2 + 64 + 8 + 4 >> 2] = c[u2 + 4 >> 2];
              c[E2 + 64 + 8 + 8 >> 2] = c[u2 + 8 >> 2];
              c[E2 + 64 + 8 + 12 >> 2] = c[u2 + 12 >> 2];
              c[E2 + 64 + 24 >> 2] = c[E2 + 776 + 148 >> 2];
              c[E2 + 64 + 24 + 4 >> 2] = c[E2 + 776 + 148 + 4 >> 2];
              c[E2 + 64 + 24 + 8 >> 2] = c[E2 + 776 + 148 + 8 >> 2];
              c[E2 + 64 + 24 + 12 >> 2] = c[E2 + 776 + 148 + 12 >> 2];
              g[E2 + 64 + 40 >> 2] = s2;
              +Kb[c[(c[h2 >> 2] | 0) + 12 >> 2] & 15](h2, E2 + 64 | 0, 1);
            }
            i = E2;
            return;
          }
          if ((k2 + -21 | 0) >>> 0 >= 9) {
            if ((k2 | 0) != 31) {
              i = E2;
              return;
            }
            u2 = c[(c[b2 >> 2] | 0) + 8 >> 2] | 0;
            M2 = +g[C2 >> 2];
            N2 = +g[C2 + 16 >> 2];
            O2 = +g[C2 + 32 >> 2];
            w2 = +g[C2 + 4 >> 2];
            v2 = +g[C2 + 20 >> 2];
            s2 = +g[C2 + 36 >> 2];
            r2 = +g[C2 + 8 >> 2];
            p2 = +g[C2 + 24 >> 2];
            n2 = +g[C2 + 40 >> 2];
            B2 = -+g[C2 + 48 >> 2];
            z2 = -+g[C2 + 52 >> 2];
            x2 = -+g[C2 + 56 >> 2];
            l2 = +g[d2 >> 2];
            A2 = +g[d2 + 16 >> 2];
            y2 = +g[d2 + 32 >> 2];
            F2 = +g[d2 + 4 >> 2];
            H2 = +g[d2 + 20 >> 2];
            I2 = +g[d2 + 36 >> 2];
            J2 = +g[d2 + 8 >> 2];
            K2 = +g[d2 + 24 >> 2];
            L2 = +g[d2 + 40 >> 2];
            q2 = +g[d2 + 48 >> 2];
            o2 = +g[d2 + 52 >> 2];
            m2 = +g[d2 + 56 >> 2];
            g[E2 + 64 >> 2] = M2 * l2 + N2 * A2 + O2 * y2;
            g[E2 + 64 + 4 >> 2] = M2 * F2 + N2 * H2 + O2 * I2;
            g[E2 + 64 + 8 >> 2] = M2 * J2 + N2 * K2 + O2 * L2;
            g[E2 + 64 + 12 >> 2] = 0;
            g[E2 + 64 + 16 >> 2] = w2 * l2 + v2 * A2 + s2 * y2;
            g[E2 + 64 + 20 >> 2] = w2 * F2 + v2 * H2 + s2 * I2;
            g[E2 + 64 + 24 >> 2] = w2 * J2 + v2 * K2 + s2 * L2;
            g[E2 + 64 + 28 >> 2] = 0;
            g[E2 + 64 + 32 >> 2] = r2 * l2 + p2 * A2 + n2 * y2;
            g[E2 + 64 + 36 >> 2] = r2 * F2 + p2 * H2 + n2 * I2;
            g[E2 + 64 + 40 >> 2] = r2 * J2 + p2 * K2 + n2 * L2;
            g[E2 + 64 + 44 >> 2] = 0;
            g[E2 + 64 + 48 >> 2] = M2 * B2 + N2 * z2 + O2 * x2 + (M2 * q2 + N2 * o2 + O2 * m2);
            g[E2 + 64 + 52 >> 2] = w2 * B2 + v2 * z2 + s2 * x2 + (w2 * q2 + v2 * o2 + s2 * m2);
            g[E2 + 64 + 56 >> 2] = r2 * B2 + p2 * z2 + n2 * x2 + (r2 * q2 + p2 * o2 + n2 * m2);
            g[E2 + 64 + 60 >> 2] = 0;
            Yb[u2 & 127](b2, E2 + 64 | 0, E2 + 776 | 0, E2 + 416 | 0);
            u2 = c[(c[b2 >> 2] | 0) + 8 >> 2] | 0;
            m2 = +g[C2 >> 2];
            n2 = +g[C2 + 16 >> 2];
            o2 = +g[C2 + 32 >> 2];
            p2 = +g[C2 + 4 >> 2];
            q2 = +g[C2 + 20 >> 2];
            r2 = +g[C2 + 36 >> 2];
            x2 = +g[C2 + 8 >> 2];
            z2 = +g[C2 + 24 >> 2];
            B2 = +g[C2 + 40 >> 2];
            s2 = -+g[C2 + 48 >> 2];
            v2 = -+g[C2 + 52 >> 2];
            w2 = -+g[C2 + 56 >> 2];
            O2 = +g[e2 >> 2];
            N2 = +g[e2 + 16 >> 2];
            M2 = +g[e2 + 32 >> 2];
            L2 = +g[e2 + 4 >> 2];
            K2 = +g[e2 + 20 >> 2];
            J2 = +g[e2 + 36 >> 2];
            I2 = +g[e2 + 8 >> 2];
            H2 = +g[e2 + 24 >> 2];
            F2 = +g[e2 + 40 >> 2];
            y2 = +g[e2 + 48 >> 2];
            A2 = +g[e2 + 52 >> 2];
            l2 = +g[e2 + 56 >> 2];
            g[E2 + 64 >> 2] = m2 * O2 + n2 * N2 + o2 * M2;
            g[E2 + 64 + 4 >> 2] = m2 * L2 + n2 * K2 + o2 * J2;
            g[E2 + 64 + 8 >> 2] = m2 * I2 + n2 * H2 + o2 * F2;
            g[E2 + 64 + 12 >> 2] = 0;
            g[E2 + 64 + 16 >> 2] = p2 * O2 + q2 * N2 + r2 * M2;
            g[E2 + 64 + 20 >> 2] = p2 * L2 + q2 * K2 + r2 * J2;
            g[E2 + 64 + 24 >> 2] = p2 * I2 + q2 * H2 + r2 * F2;
            g[E2 + 64 + 28 >> 2] = 0;
            g[E2 + 64 + 32 >> 2] = x2 * O2 + z2 * N2 + B2 * M2;
            g[E2 + 64 + 36 >> 2] = x2 * L2 + z2 * K2 + B2 * J2;
            g[E2 + 64 + 40 >> 2] = x2 * I2 + z2 * H2 + B2 * F2;
            g[E2 + 64 + 44 >> 2] = 0;
            g[E2 + 64 + 48 >> 2] = m2 * s2 + n2 * v2 + o2 * w2 + (m2 * y2 + n2 * A2 + o2 * l2);
            g[E2 + 64 + 52 >> 2] = p2 * s2 + q2 * v2 + r2 * w2 + (p2 * y2 + q2 * A2 + r2 * l2);
            g[E2 + 64 + 56 >> 2] = x2 * s2 + z2 * v2 + B2 * w2 + (x2 * y2 + z2 * A2 + B2 * l2);
            g[E2 + 64 + 60 >> 2] = 0;
            Yb[u2 & 127](b2, E2 + 64 | 0, E2 + 352 | 0, E2 + 128 | 0);
            l2 = +g[E2 + 352 >> 2];
            if (l2 < +g[E2 + 776 >> 2])
              g[E2 + 776 >> 2] = l2;
            l2 = +g[E2 + 352 + 4 >> 2];
            if (l2 < +g[E2 + 776 + 4 >> 2])
              g[E2 + 776 + 4 >> 2] = l2;
            l2 = +g[E2 + 352 + 8 >> 2];
            if (l2 < +g[E2 + 776 + 8 >> 2])
              g[E2 + 776 + 8 >> 2] = l2;
            l2 = +g[E2 + 352 + 12 >> 2];
            if (l2 < +g[E2 + 776 + 12 >> 2])
              g[E2 + 776 + 12 >> 2] = l2;
            l2 = +g[E2 + 128 >> 2];
            if (+g[E2 + 416 >> 2] < l2)
              g[E2 + 416 >> 2] = l2;
            l2 = +g[E2 + 128 + 4 >> 2];
            if (+g[E2 + 416 + 4 >> 2] < l2)
              g[E2 + 416 + 4 >> 2] = l2;
            l2 = +g[E2 + 128 + 8 >> 2];
            if (+g[E2 + 416 + 8 >> 2] < l2)
              g[E2 + 416 + 8 >> 2] = l2;
            l2 = +g[E2 + 128 + 12 >> 2];
            if (+g[E2 + 416 + 12 >> 2] < l2)
              g[E2 + 416 + 12 >> 2] = l2;
            c[E2 + 64 >> 2] = 5908;
            c[E2 + 64 + 4 >> 2] = f2;
            c[E2 + 64 + 8 >> 2] = b2;
            c[E2 + 64 + 12 >> 2] = d2;
            c[E2 + 64 + 16 >> 2] = e2;
            g[E2 + 64 + 20 >> 2] = j2;
            c[E2 + 64 + 24 >> 2] = D2;
            c[E2 + 64 + 28 >> 2] = C2;
            c[E2 + 64 + 32 >> 2] = h2;
            k2 = c[D2 + 68 >> 2] | 0;
            if (!k2) {
              if ((c[D2 + 20 >> 2] | 0) > 0) {
                k2 = 0;
                do {
                  f2 = c[D2 + 28 >> 2] | 0;
                  h2 = c[f2 + (k2 * 80 | 0) + 64 >> 2] | 0;
                  e2 = f2 + (k2 * 80 | 0) | 0;
                  c[E2 >> 2] = c[e2 >> 2];
                  c[E2 + 4 >> 2] = c[e2 + 4 >> 2];
                  c[E2 + 8 >> 2] = c[e2 + 8 >> 2];
                  c[E2 + 12 >> 2] = c[e2 + 12 >> 2];
                  e2 = f2 + (k2 * 80 | 0) + 16 | 0;
                  c[E2 + 16 >> 2] = c[e2 >> 2];
                  c[E2 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
                  c[E2 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
                  c[E2 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
                  e2 = f2 + (k2 * 80 | 0) + 32 | 0;
                  c[E2 + 32 >> 2] = c[e2 >> 2];
                  c[E2 + 32 + 4 >> 2] = c[e2 + 4 >> 2];
                  c[E2 + 32 + 8 >> 2] = c[e2 + 8 >> 2];
                  c[E2 + 32 + 12 >> 2] = c[e2 + 12 >> 2];
                  f2 = f2 + (k2 * 80 | 0) + 48 | 0;
                  c[E2 + 48 >> 2] = c[f2 >> 2];
                  c[E2 + 48 + 4 >> 2] = c[f2 + 4 >> 2];
                  c[E2 + 48 + 8 >> 2] = c[f2 + 8 >> 2];
                  c[E2 + 48 + 12 >> 2] = c[f2 + 12 >> 2];
                  Xf(E2 + 64 | 0, k2, E2, h2);
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) < (c[D2 + 20 >> 2] | 0));
              }
            } else {
              c[E2 >> 2] = c[E2 + 776 >> 2];
              c[E2 + 4 >> 2] = c[E2 + 776 + 4 >> 2];
              c[E2 + 8 >> 2] = c[E2 + 776 + 8 >> 2];
              c[E2 + 12 >> 2] = c[E2 + 776 + 12 >> 2];
              c[E2 + 16 >> 2] = c[E2 + 416 >> 2];
              c[E2 + 16 + 4 >> 2] = c[E2 + 416 + 4 >> 2];
              c[E2 + 16 + 8 >> 2] = c[E2 + 416 + 8 >> 2];
              c[E2 + 16 + 12 >> 2] = c[E2 + 416 + 12 >> 2];
              Mf(c[k2 >> 2] | 0, E2, E2 + 64 | 0);
            }
            i = E2;
            return;
          }
          switch (k2 | 0) {
            case 21: {
              o2 = +g[C2 >> 2];
              p2 = +g[C2 + 16 >> 2];
              q2 = +g[C2 + 32 >> 2];
              r2 = +g[C2 + 4 >> 2];
              s2 = +g[C2 + 20 >> 2];
              v2 = +g[C2 + 36 >> 2];
              w2 = +g[C2 + 8 >> 2];
              x2 = +g[C2 + 24 >> 2];
              y2 = +g[C2 + 40 >> 2];
              z2 = -+g[C2 + 48 >> 2];
              A2 = -+g[C2 + 52 >> 2];
              B2 = -+g[C2 + 56 >> 2];
              n2 = +g[d2 + 48 >> 2];
              m2 = +g[d2 + 52 >> 2];
              l2 = +g[d2 + 56 >> 2];
              g[E2 + 416 >> 2] = o2 * z2 + p2 * A2 + q2 * B2 + (o2 * n2 + p2 * m2 + q2 * l2);
              g[E2 + 416 + 4 >> 2] = r2 * z2 + s2 * A2 + v2 * B2 + (r2 * n2 + s2 * m2 + v2 * l2);
              g[E2 + 416 + 8 >> 2] = w2 * z2 + x2 * A2 + y2 * B2 + (w2 * n2 + x2 * m2 + y2 * l2);
              g[E2 + 416 + 12 >> 2] = 0;
              l2 = +g[e2 + 48 >> 2];
              m2 = +g[e2 + 52 >> 2];
              n2 = +g[e2 + 56 >> 2];
              F2 = +g[e2 >> 2];
              H2 = +g[e2 + 16 >> 2];
              I2 = +g[e2 + 32 >> 2];
              J2 = +g[e2 + 4 >> 2];
              K2 = +g[e2 + 20 >> 2];
              L2 = +g[e2 + 36 >> 2];
              M2 = +g[e2 + 8 >> 2];
              N2 = +g[e2 + 24 >> 2];
              O2 = +g[e2 + 40 >> 2];
              g[E2 + 352 >> 2] = o2 * F2 + p2 * H2 + q2 * I2;
              g[E2 + 352 + 4 >> 2] = o2 * J2 + p2 * K2 + q2 * L2;
              g[E2 + 352 + 8 >> 2] = o2 * M2 + p2 * N2 + q2 * O2;
              g[E2 + 352 + 12 >> 2] = 0;
              g[E2 + 352 + 16 >> 2] = r2 * F2 + s2 * H2 + v2 * I2;
              g[E2 + 352 + 20 >> 2] = r2 * J2 + s2 * K2 + v2 * L2;
              g[E2 + 352 + 24 >> 2] = r2 * M2 + s2 * N2 + v2 * O2;
              g[E2 + 352 + 28 >> 2] = 0;
              g[E2 + 352 + 32 >> 2] = w2 * F2 + x2 * H2 + y2 * I2;
              g[E2 + 352 + 36 >> 2] = w2 * J2 + x2 * K2 + y2 * L2;
              g[E2 + 352 + 40 >> 2] = w2 * M2 + x2 * N2 + y2 * O2;
              k2 = E2 + 352 + 44 | 0;
              c[k2 >> 2] = 0;
              c[k2 + 4 >> 2] = 0;
              c[k2 + 8 >> 2] = 0;
              c[k2 + 12 >> 2] = 0;
              c[k2 + 16 >> 2] = 0;
              k2 = c[f2 + 8 >> 2] | 0;
              O2 = +Cb[c[(c[D2 >> 2] | 0) + 48 >> 2] & 15](D2);
              c[E2 + 128 >> 2] = 8916;
              c[E2 + 128 + 4 >> 2] = b2;
              c[E2 + 128 + 8 >> 2] = c[d2 >> 2];
              c[E2 + 128 + 8 + 4 >> 2] = c[d2 + 4 >> 2];
              c[E2 + 128 + 8 + 8 >> 2] = c[d2 + 8 >> 2];
              c[E2 + 128 + 8 + 12 >> 2] = c[d2 + 12 >> 2];
              c[E2 + 128 + 24 >> 2] = c[d2 + 16 >> 2];
              c[E2 + 128 + 24 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
              c[E2 + 128 + 24 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
              c[E2 + 128 + 24 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
              c[E2 + 128 + 40 >> 2] = c[d2 + 32 >> 2];
              c[E2 + 128 + 40 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
              c[E2 + 128 + 40 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
              c[E2 + 128 + 40 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
              c[E2 + 128 + 56 >> 2] = c[d2 + 48 >> 2];
              c[E2 + 128 + 56 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
              c[E2 + 128 + 56 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
              c[E2 + 128 + 56 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
              c[E2 + 128 + 72 >> 2] = c[e2 >> 2];
              c[E2 + 128 + 72 + 4 >> 2] = c[e2 + 4 >> 2];
              c[E2 + 128 + 72 + 8 >> 2] = c[e2 + 8 >> 2];
              c[E2 + 128 + 72 + 12 >> 2] = c[e2 + 12 >> 2];
              c[E2 + 128 + 88 >> 2] = c[e2 + 16 >> 2];
              c[E2 + 128 + 88 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
              c[E2 + 128 + 88 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
              c[E2 + 128 + 88 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
              c[E2 + 128 + 104 >> 2] = c[e2 + 32 >> 2];
              c[E2 + 128 + 104 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
              c[E2 + 128 + 104 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
              c[E2 + 128 + 104 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
              c[E2 + 128 + 120 >> 2] = c[e2 + 48 >> 2];
              c[E2 + 128 + 120 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
              c[E2 + 128 + 120 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
              c[E2 + 128 + 120 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
              c[E2 + 128 + 136 >> 2] = c[C2 >> 2];
              c[E2 + 128 + 136 + 4 >> 2] = c[C2 + 4 >> 2];
              c[E2 + 128 + 136 + 8 >> 2] = c[C2 + 8 >> 2];
              c[E2 + 128 + 136 + 12 >> 2] = c[C2 + 12 >> 2];
              c[E2 + 128 + 152 >> 2] = c[C2 + 16 >> 2];
              c[E2 + 128 + 152 + 4 >> 2] = c[C2 + 16 + 4 >> 2];
              c[E2 + 128 + 152 + 8 >> 2] = c[C2 + 16 + 8 >> 2];
              c[E2 + 128 + 152 + 12 >> 2] = c[C2 + 16 + 12 >> 2];
              c[E2 + 128 + 168 >> 2] = c[C2 + 32 >> 2];
              c[E2 + 128 + 168 + 4 >> 2] = c[C2 + 32 + 4 >> 2];
              c[E2 + 128 + 168 + 8 >> 2] = c[C2 + 32 + 8 >> 2];
              c[E2 + 128 + 168 + 12 >> 2] = c[C2 + 32 + 12 >> 2];
              c[E2 + 128 + 184 >> 2] = c[C2 + 48 >> 2];
              c[E2 + 128 + 184 + 4 >> 2] = c[C2 + 48 + 4 >> 2];
              c[E2 + 128 + 184 + 8 >> 2] = c[C2 + 48 + 8 >> 2];
              c[E2 + 128 + 184 + 12 >> 2] = c[C2 + 48 + 12 >> 2];
              g[E2 + 128 + 204 >> 2] = O2;
              c[E2 + 128 >> 2] = 5860;
              c[E2 + 128 + 212 >> 2] = h2;
              c[E2 + 128 + 216 >> 2] = k2;
              c[E2 + 128 + 220 >> 2] = D2;
              c[E2 + 128 + 200 >> 2] = c[h2 + 4 >> 2];
              g[E2 + 128 + 208 >> 2] = j2;
              Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, E2 + 352 | 0, E2 + 64 | 0, E2);
              k2 = c[D2 + 52 >> 2] | 0;
              c[E2 + 776 >> 2] = 6780;
              c[E2 + 776 + 4 >> 2] = k2;
              c[E2 + 776 + 8 >> 2] = E2 + 128;
              k2 = c[D2 + 56 >> 2] | 0;
              if (!(a[k2 + 60 >> 0] | 0))
                Ae(k2, E2 + 776 | 0, E2 + 416 | 0, o2 * z2 + p2 * A2 + q2 * B2 + (o2 * l2 + p2 * m2 + q2 * n2), r2 * z2 + s2 * A2 + v2 * B2 + (r2 * l2 + s2 * m2 + v2 * n2), w2 * z2 + x2 * A2 + y2 * B2 + (w2 * l2 + x2 * m2 + y2 * n2), E2 + 64 | 0, E2);
              else
                ke(k2, E2 + 776 | 0, E2 + 416 | 0, o2 * z2 + p2 * A2 + q2 * B2 + (o2 * l2 + p2 * m2 + q2 * n2), r2 * z2 + s2 * A2 + v2 * B2 + (r2 * l2 + s2 * m2 + v2 * n2), w2 * z2 + x2 * A2 + y2 * B2 + (w2 * l2 + x2 * m2 + y2 * n2), E2 + 64 | 0, E2, c[k2 + 56 >> 2] | 0);
              i = E2;
              return;
            }
            case 28: {
              c[E2 + 776 >> 2] = 3928;
              c[E2 + 776 + 168 >> 2] = 0;
              g[E2 + 776 + 172 >> 2] = j2;
              c[E2 + 776 + 164 >> 2] = c[h2 + 4 >> 2];
              c[E2 + 416 >> 2] = 8736;
              c[E2 + 416 + 4 >> 2] = 0;
              c[E2 + 416 + 8 >> 2] = 0;
              c[E2 + 416 + 12 >> 2] = b2;
              c[E2 + 416 + 16 >> 2] = 0;
              c[E2 + 416 + 20 >> 2] = D2;
              if ((Jd(E2 + 416 | 0, d2, e2, C2, C2, E2 + 776 | 0) | 0 ? (t2 = E2 + 776 + 132 | 0, l2 = +g[t2 >> 2], m2 = +g[E2 + 776 + 136 >> 2], n2 = +g[E2 + 776 + 140 >> 2], l2 * l2 + m2 * m2 + n2 * n2 > 9999999747378752e-20) : 0) ? (o2 = +g[E2 + 776 + 164 >> 2], o2 < +g[h2 + 4 >> 2]) : 0) {
                O2 = 1 / +G(+(l2 * l2 + m2 * m2 + n2 * n2));
                g[t2 >> 2] = l2 * O2;
                g[E2 + 776 + 136 >> 2] = m2 * O2;
                g[E2 + 776 + 140 >> 2] = n2 * O2;
                c[E2 + 352 >> 2] = c[f2 + 8 >> 2];
                c[E2 + 352 + 4 >> 2] = 0;
                c[E2 + 352 + 8 >> 2] = c[t2 >> 2];
                c[E2 + 352 + 8 + 4 >> 2] = c[t2 + 4 >> 2];
                c[E2 + 352 + 8 + 8 >> 2] = c[t2 + 8 >> 2];
                c[E2 + 352 + 8 + 12 >> 2] = c[t2 + 12 >> 2];
                c[E2 + 352 + 24 >> 2] = c[E2 + 776 + 148 >> 2];
                c[E2 + 352 + 24 + 4 >> 2] = c[E2 + 776 + 148 + 4 >> 2];
                c[E2 + 352 + 24 + 8 >> 2] = c[E2 + 776 + 148 + 8 >> 2];
                c[E2 + 352 + 24 + 12 >> 2] = c[E2 + 776 + 148 + 12 >> 2];
                g[E2 + 352 + 40 >> 2] = o2;
                +Kb[c[(c[h2 >> 2] | 0) + 12 >> 2] & 15](h2, E2 + 352 | 0, 1);
              }
              i = E2;
              return;
            }
            default: {
              o2 = +g[C2 >> 2];
              p2 = +g[C2 + 16 >> 2];
              q2 = +g[C2 + 32 >> 2];
              w2 = +g[C2 + 4 >> 2];
              x2 = +g[C2 + 20 >> 2];
              y2 = +g[C2 + 36 >> 2];
              J2 = +g[C2 + 8 >> 2];
              L2 = +g[C2 + 24 >> 2];
              N2 = +g[C2 + 40 >> 2];
              H2 = -+g[C2 + 48 >> 2];
              F2 = -+g[C2 + 52 >> 2];
              B2 = -+g[C2 + 56 >> 2];
              z2 = +g[d2 + 48 >> 2];
              A2 = +g[d2 + 52 >> 2];
              l2 = +g[d2 + 56 >> 2];
              n2 = o2 * H2 + p2 * F2 + q2 * B2 + (o2 * z2 + p2 * A2 + q2 * l2);
              m2 = w2 * H2 + x2 * F2 + y2 * B2 + (w2 * z2 + x2 * A2 + y2 * l2);
              l2 = J2 * H2 + L2 * F2 + N2 * B2 + (J2 * z2 + L2 * A2 + N2 * l2);
              A2 = +g[e2 + 48 >> 2];
              z2 = +g[e2 + 52 >> 2];
              v2 = +g[e2 + 56 >> 2];
              r2 = o2 * H2 + p2 * F2 + q2 * B2 + (o2 * A2 + p2 * z2 + q2 * v2);
              s2 = w2 * H2 + x2 * F2 + y2 * B2 + (w2 * A2 + x2 * z2 + y2 * v2);
              v2 = J2 * H2 + L2 * F2 + N2 * B2 + (J2 * A2 + L2 * z2 + N2 * v2);
              z2 = +g[e2 >> 2];
              A2 = +g[e2 + 16 >> 2];
              B2 = +g[e2 + 32 >> 2];
              F2 = +g[e2 + 4 >> 2];
              H2 = +g[e2 + 20 >> 2];
              I2 = +g[e2 + 36 >> 2];
              K2 = +g[e2 + 8 >> 2];
              M2 = +g[e2 + 24 >> 2];
              O2 = +g[e2 + 40 >> 2];
              g[E2 + 776 >> 2] = o2 * z2 + p2 * A2 + q2 * B2;
              g[E2 + 776 + 4 >> 2] = o2 * F2 + p2 * H2 + q2 * I2;
              g[E2 + 776 + 8 >> 2] = o2 * K2 + p2 * M2 + q2 * O2;
              g[E2 + 776 + 12 >> 2] = 0;
              g[E2 + 776 + 16 >> 2] = w2 * z2 + x2 * A2 + y2 * B2;
              g[E2 + 776 + 20 >> 2] = w2 * F2 + x2 * H2 + y2 * I2;
              g[E2 + 776 + 24 >> 2] = w2 * K2 + x2 * M2 + y2 * O2;
              g[E2 + 776 + 28 >> 2] = 0;
              g[E2 + 776 + 32 >> 2] = J2 * z2 + L2 * A2 + N2 * B2;
              g[E2 + 776 + 36 >> 2] = J2 * F2 + L2 * H2 + N2 * I2;
              g[E2 + 776 + 40 >> 2] = J2 * K2 + L2 * M2 + N2 * O2;
              u2 = E2 + 776 + 44 | 0;
              c[u2 >> 2] = 0;
              c[u2 + 4 >> 2] = 0;
              c[u2 + 8 >> 2] = 0;
              c[u2 + 12 >> 2] = 0;
              c[u2 + 16 >> 2] = 0;
              f2 = c[f2 + 8 >> 2] | 0;
              O2 = +Cb[c[(c[D2 >> 2] | 0) + 48 >> 2] & 15](D2);
              c[E2 + 416 >> 2] = 8916;
              c[E2 + 416 + 4 >> 2] = b2;
              c[E2 + 416 + 8 >> 2] = c[d2 >> 2];
              c[E2 + 416 + 8 + 4 >> 2] = c[d2 + 4 >> 2];
              c[E2 + 416 + 8 + 8 >> 2] = c[d2 + 8 >> 2];
              c[E2 + 416 + 8 + 12 >> 2] = c[d2 + 12 >> 2];
              c[E2 + 416 + 24 >> 2] = c[d2 + 16 >> 2];
              c[E2 + 416 + 24 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
              c[E2 + 416 + 24 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
              c[E2 + 416 + 24 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
              c[E2 + 416 + 40 >> 2] = c[d2 + 32 >> 2];
              c[E2 + 416 + 40 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
              c[E2 + 416 + 40 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
              c[E2 + 416 + 40 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
              c[E2 + 416 + 56 >> 2] = c[d2 + 48 >> 2];
              c[E2 + 416 + 56 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
              c[E2 + 416 + 56 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
              c[E2 + 416 + 56 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
              c[E2 + 416 + 72 >> 2] = c[e2 >> 2];
              c[E2 + 416 + 72 + 4 >> 2] = c[e2 + 4 >> 2];
              c[E2 + 416 + 72 + 8 >> 2] = c[e2 + 8 >> 2];
              c[E2 + 416 + 72 + 12 >> 2] = c[e2 + 12 >> 2];
              c[E2 + 416 + 88 >> 2] = c[e2 + 16 >> 2];
              c[E2 + 416 + 88 + 4 >> 2] = c[e2 + 16 + 4 >> 2];
              c[E2 + 416 + 88 + 8 >> 2] = c[e2 + 16 + 8 >> 2];
              c[E2 + 416 + 88 + 12 >> 2] = c[e2 + 16 + 12 >> 2];
              c[E2 + 416 + 104 >> 2] = c[e2 + 32 >> 2];
              c[E2 + 416 + 104 + 4 >> 2] = c[e2 + 32 + 4 >> 2];
              c[E2 + 416 + 104 + 8 >> 2] = c[e2 + 32 + 8 >> 2];
              c[E2 + 416 + 104 + 12 >> 2] = c[e2 + 32 + 12 >> 2];
              c[E2 + 416 + 120 >> 2] = c[e2 + 48 >> 2];
              c[E2 + 416 + 120 + 4 >> 2] = c[e2 + 48 + 4 >> 2];
              c[E2 + 416 + 120 + 8 >> 2] = c[e2 + 48 + 8 >> 2];
              c[E2 + 416 + 120 + 12 >> 2] = c[e2 + 48 + 12 >> 2];
              c[E2 + 416 + 136 >> 2] = c[C2 >> 2];
              c[E2 + 416 + 136 + 4 >> 2] = c[C2 + 4 >> 2];
              c[E2 + 416 + 136 + 8 >> 2] = c[C2 + 8 >> 2];
              c[E2 + 416 + 136 + 12 >> 2] = c[C2 + 12 >> 2];
              c[E2 + 416 + 152 >> 2] = c[C2 + 16 >> 2];
              c[E2 + 416 + 152 + 4 >> 2] = c[C2 + 16 + 4 >> 2];
              c[E2 + 416 + 152 + 8 >> 2] = c[C2 + 16 + 8 >> 2];
              c[E2 + 416 + 152 + 12 >> 2] = c[C2 + 16 + 12 >> 2];
              c[E2 + 416 + 168 >> 2] = c[C2 + 32 >> 2];
              c[E2 + 416 + 168 + 4 >> 2] = c[C2 + 32 + 4 >> 2];
              c[E2 + 416 + 168 + 8 >> 2] = c[C2 + 32 + 8 >> 2];
              c[E2 + 416 + 168 + 12 >> 2] = c[C2 + 32 + 12 >> 2];
              c[E2 + 416 + 184 >> 2] = c[C2 + 48 >> 2];
              c[E2 + 416 + 184 + 4 >> 2] = c[C2 + 48 + 4 >> 2];
              c[E2 + 416 + 184 + 8 >> 2] = c[C2 + 48 + 8 >> 2];
              c[E2 + 416 + 184 + 12 >> 2] = c[C2 + 48 + 12 >> 2];
              g[E2 + 416 + 204 >> 2] = O2;
              c[E2 + 416 >> 2] = 5884;
              c[E2 + 416 + 212 >> 2] = h2;
              c[E2 + 416 + 216 >> 2] = f2;
              c[E2 + 416 + 220 >> 2] = D2;
              c[E2 + 416 + 200 >> 2] = c[h2 + 4 >> 2];
              g[E2 + 416 + 208 >> 2] = j2;
              Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, E2 + 776 | 0, E2 + 352 | 0, E2 + 128 | 0);
              g[E2 + 64 >> 2] = n2;
              g[E2 + 64 + 4 >> 2] = m2;
              g[E2 + 64 + 8 >> 2] = l2;
              g[E2 + 64 + 12 >> 2] = 0;
              if (r2 < n2) {
                g[E2 + 64 >> 2] = r2;
                o2 = r2;
              } else
                o2 = n2;
              if (s2 < m2) {
                g[E2 + 64 + 4 >> 2] = s2;
                p2 = s2;
              } else
                p2 = m2;
              if (v2 < l2) {
                g[E2 + 64 + 8 >> 2] = v2;
                q2 = v2;
              } else
                q2 = l2;
              g[E2 >> 2] = n2;
              g[E2 + 4 >> 2] = m2;
              g[E2 + 8 >> 2] = l2;
              g[E2 + 12 >> 2] = 0;
              if (n2 < r2) {
                g[E2 >> 2] = r2;
                n2 = r2;
              }
              if (m2 < s2) {
                g[E2 + 4 >> 2] = s2;
                m2 = s2;
              }
              if (l2 < v2) {
                g[E2 + 8 >> 2] = v2;
                l2 = v2;
              }
              g[E2 + 64 >> 2] = +g[E2 + 352 >> 2] + o2;
              g[E2 + 64 + 4 >> 2] = +g[E2 + 352 + 4 >> 2] + p2;
              g[E2 + 64 + 8 >> 2] = +g[E2 + 352 + 8 >> 2] + q2;
              g[E2 >> 2] = +g[E2 + 128 >> 2] + n2;
              g[E2 + 4 >> 2] = +g[E2 + 128 + 4 >> 2] + m2;
              g[E2 + 8 >> 2] = +g[E2 + 128 + 8 >> 2] + l2;
              Yb[c[(c[D2 >> 2] | 0) + 64 >> 2] & 127](D2, E2 + 416 | 0, E2 + 64 | 0, E2);
              i = E2;
              return;
            }
          }
        }
        function qc(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, K2 = 0, M2 = 0, N2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0, ua2 = 0, va2 = 0, wa2 = 0;
          qa2 = i;
          i = i + 80 | 0;
          g[b2 + 504 >> 2] = 0;
          g[b2 + 500 >> 2] = 0;
          a[b2 + 525 >> 0] = 0;
          a[b2 + 526 >> 0] = 0;
          if (a[b2 + 552 >> 0] | 0 ? (a[b2 + 527 >> 0] | 0) == 0 : 0) {
            wa2 = +g[b2 + 556 >> 2];
            ua2 = +g[b2 + 560 >> 2];
            pa2 = +g[b2 + 564 >> 2];
            ta2 = +g[b2 + 568 >> 2];
            ea2 = wa2 * (2 / (wa2 * wa2 + ua2 * ua2 + pa2 * pa2 + ta2 * ta2));
            va2 = ua2 * (2 / (wa2 * wa2 + ua2 * ua2 + pa2 * pa2 + ta2 * ta2));
            sa2 = pa2 * (2 / (wa2 * wa2 + ua2 * ua2 + pa2 * pa2 + ta2 * ta2));
            fa2 = +g[b2 + 300 >> 2];
            X2 = +g[d2 >> 2];
            ga2 = +g[b2 + 316 >> 2];
            Y2 = +g[d2 + 4 >> 2];
            ha2 = +g[b2 + 332 >> 2];
            Z2 = +g[d2 + 8 >> 2];
            ja2 = +g[b2 + 304 >> 2];
            la2 = +g[b2 + 320 >> 2];
            na2 = +g[b2 + 336 >> 2];
            ba2 = +g[b2 + 308 >> 2];
            ca2 = +g[b2 + 324 >> 2];
            da2 = +g[b2 + 340 >> 2];
            _2 = +g[d2 + 16 >> 2];
            $2 = +g[d2 + 20 >> 2];
            aa2 = +g[d2 + 24 >> 2];
            ka2 = +g[d2 + 32 >> 2];
            ma2 = +g[d2 + 36 >> 2];
            oa2 = +g[d2 + 40 >> 2];
            v2 = +g[b2 + 348 >> 2];
            u2 = +g[b2 + 352 >> 2];
            q2 = +g[b2 + 356 >> 2];
            z2 = +g[b2 + 364 >> 2];
            ra2 = +g[e2 >> 2];
            A2 = +g[b2 + 380 >> 2];
            n2 = +g[e2 + 4 >> 2];
            B2 = +g[b2 + 396 >> 2];
            m2 = +g[e2 + 8 >> 2];
            C2 = +g[b2 + 368 >> 2];
            D2 = +g[b2 + 384 >> 2];
            E2 = +g[b2 + 400 >> 2];
            w2 = +g[b2 + 372 >> 2];
            x2 = +g[b2 + 388 >> 2];
            y2 = +g[b2 + 404 >> 2];
            o2 = +g[e2 + 16 >> 2];
            p2 = +g[e2 + 20 >> 2];
            k2 = +g[e2 + 24 >> 2];
            H2 = +g[e2 + 32 >> 2];
            M2 = +g[e2 + 36 >> 2];
            P2 = +g[e2 + 40 >> 2];
            K2 = +g[b2 + 412 >> 2];
            N2 = +g[b2 + 416 >> 2];
            j2 = +g[b2 + 420 >> 2];
            R2 = (1 - (ua2 * va2 + pa2 * sa2)) * (z2 * ra2 + A2 * n2 + B2 * m2) + (wa2 * va2 + ta2 * sa2) * (ra2 * C2 + n2 * D2 + m2 * E2) + (wa2 * sa2 - ta2 * va2) * (ra2 * w2 + n2 * x2 + m2 * y2);
            S2 = (wa2 * va2 - ta2 * sa2) * (z2 * ra2 + A2 * n2 + B2 * m2) + (1 - (wa2 * ea2 + pa2 * sa2)) * (ra2 * C2 + n2 * D2 + m2 * E2) + (ua2 * sa2 + ta2 * ea2) * (ra2 * w2 + n2 * x2 + m2 * y2);
            Q2 = (wa2 * sa2 + ta2 * va2) * (z2 * ra2 + A2 * n2 + B2 * m2) + (ua2 * sa2 - ta2 * ea2) * (ra2 * C2 + n2 * D2 + m2 * E2) + (1 - (wa2 * ea2 + ua2 * va2)) * (ra2 * w2 + n2 * x2 + m2 * y2);
            V2 = (wa2 * sa2 - ta2 * va2) * (w2 * o2 + x2 * p2 + y2 * k2) + ((1 - (ua2 * va2 + pa2 * sa2)) * (z2 * o2 + A2 * p2 + B2 * k2) + (wa2 * va2 + ta2 * sa2) * (C2 * o2 + D2 * p2 + E2 * k2));
            W2 = (ua2 * sa2 + ta2 * ea2) * (w2 * o2 + x2 * p2 + y2 * k2) + ((wa2 * va2 - ta2 * sa2) * (z2 * o2 + A2 * p2 + B2 * k2) + (1 - (wa2 * ea2 + pa2 * sa2)) * (C2 * o2 + D2 * p2 + E2 * k2));
            U2 = (1 - (wa2 * ea2 + ua2 * va2)) * (w2 * o2 + x2 * p2 + y2 * k2) + ((wa2 * sa2 + ta2 * va2) * (z2 * o2 + A2 * p2 + B2 * k2) + (ua2 * sa2 - ta2 * ea2) * (C2 * o2 + D2 * p2 + E2 * k2));
            ia2 = (wa2 * sa2 - ta2 * va2) * (w2 * H2 + x2 * M2 + y2 * P2) + ((1 - (ua2 * va2 + pa2 * sa2)) * (z2 * H2 + A2 * M2 + B2 * P2) + (wa2 * va2 + ta2 * sa2) * (C2 * H2 + D2 * M2 + E2 * P2));
            pa2 = (ua2 * sa2 + ta2 * ea2) * (w2 * H2 + x2 * M2 + y2 * P2) + ((wa2 * va2 - ta2 * sa2) * (z2 * H2 + A2 * M2 + B2 * P2) + (1 - (wa2 * ea2 + pa2 * sa2)) * (C2 * H2 + D2 * M2 + E2 * P2));
            ea2 = (1 - (wa2 * ea2 + ua2 * va2)) * (w2 * H2 + x2 * M2 + y2 * P2) + ((wa2 * sa2 + ta2 * va2) * (z2 * H2 + A2 * M2 + B2 * P2) + (ua2 * sa2 - ta2 * ea2) * (C2 * H2 + D2 * M2 + E2 * P2));
            ta2 = -(+g[d2 + 48 >> 2] + (X2 * v2 + Y2 * u2 + Z2 * q2));
            sa2 = -(_2 * v2 + $2 * u2 + aa2 * q2 + +g[d2 + 52 >> 2]);
            q2 = -(ka2 * v2 + ma2 * u2 + oa2 * q2 + +g[d2 + 56 >> 2]);
            u2 = (fa2 * X2 + ga2 * Y2 + ha2 * Z2) * ta2 + (fa2 * _2 + ga2 * $2 + ha2 * aa2) * sa2 + (fa2 * ka2 + ga2 * ma2 + ha2 * oa2) * q2;
            v2 = (X2 * ja2 + Y2 * la2 + Z2 * na2) * ta2 + (ja2 * _2 + la2 * $2 + na2 * aa2) * sa2 + (ja2 * ka2 + la2 * ma2 + na2 * oa2) * q2;
            q2 = (X2 * ba2 + Y2 * ca2 + Z2 * da2) * ta2 + (ba2 * _2 + ca2 * $2 + da2 * aa2) * sa2 + (ba2 * ka2 + ca2 * ma2 + da2 * oa2) * q2;
            m2 = q2 * Q2 + (u2 * R2 + v2 * S2) + ((z2 * ra2 + A2 * n2 + B2 * m2) * 0 + (ra2 * C2 + n2 * D2 + m2 * E2) * 0 + (ra2 * w2 + n2 * x2 + m2 * y2) * 0 + (+g[e2 + 48 >> 2] + (ra2 * K2 + n2 * N2 + m2 * j2)));
            k2 = q2 * U2 + (u2 * V2 + v2 * W2) + ((w2 * o2 + x2 * p2 + y2 * k2) * 0 + ((z2 * o2 + A2 * p2 + B2 * k2) * 0 + (C2 * o2 + D2 * p2 + E2 * k2) * 0) + (o2 * K2 + p2 * N2 + k2 * j2 + +g[e2 + 52 >> 2]));
            j2 = q2 * ea2 + (u2 * ia2 + v2 * pa2) + ((w2 * H2 + x2 * M2 + y2 * P2) * 0 + ((z2 * H2 + A2 * M2 + B2 * P2) * 0 + (C2 * H2 + D2 * M2 + E2 * P2) * 0) + (H2 * K2 + M2 * N2 + P2 * j2 + +g[e2 + 56 >> 2]));
            g[qa2 + 16 >> 2] = (X2 * ba2 + Y2 * ca2 + Z2 * da2) * Q2 + ((fa2 * X2 + ga2 * Y2 + ha2 * Z2) * R2 + (X2 * ja2 + Y2 * la2 + Z2 * na2) * S2);
            g[qa2 + 16 + 4 >> 2] = (ba2 * _2 + ca2 * $2 + da2 * aa2) * Q2 + ((fa2 * _2 + ga2 * $2 + ha2 * aa2) * R2 + (ja2 * _2 + la2 * $2 + na2 * aa2) * S2);
            g[qa2 + 16 + 8 >> 2] = (ba2 * ka2 + ca2 * ma2 + da2 * oa2) * Q2 + ((fa2 * ka2 + ga2 * ma2 + ha2 * oa2) * R2 + (ja2 * ka2 + la2 * ma2 + na2 * oa2) * S2);
            g[qa2 + 16 + 12 >> 2] = 0;
            g[qa2 + 16 + 16 >> 2] = (X2 * ba2 + Y2 * ca2 + Z2 * da2) * U2 + ((fa2 * X2 + ga2 * Y2 + ha2 * Z2) * V2 + (X2 * ja2 + Y2 * la2 + Z2 * na2) * W2);
            g[qa2 + 16 + 20 >> 2] = (ba2 * _2 + ca2 * $2 + da2 * aa2) * U2 + ((fa2 * _2 + ga2 * $2 + ha2 * aa2) * V2 + (ja2 * _2 + la2 * $2 + na2 * aa2) * W2);
            g[qa2 + 16 + 24 >> 2] = (ba2 * ka2 + ca2 * ma2 + da2 * oa2) * U2 + ((fa2 * ka2 + ga2 * ma2 + ha2 * oa2) * V2 + (ja2 * ka2 + la2 * ma2 + na2 * oa2) * W2);
            g[qa2 + 16 + 28 >> 2] = 0;
            g[qa2 + 16 + 32 >> 2] = (X2 * ba2 + Y2 * ca2 + Z2 * da2) * ea2 + ((fa2 * X2 + ga2 * Y2 + ha2 * Z2) * ia2 + (X2 * ja2 + Y2 * la2 + Z2 * na2) * pa2);
            g[qa2 + 16 + 36 >> 2] = (ba2 * _2 + ca2 * $2 + da2 * aa2) * ea2 + ((fa2 * _2 + ga2 * $2 + ha2 * aa2) * ia2 + (ja2 * _2 + la2 * $2 + na2 * aa2) * pa2);
            g[qa2 + 16 + 40 >> 2] = (ba2 * ka2 + ca2 * ma2 + da2 * oa2) * ea2 + ((fa2 * ka2 + ga2 * ma2 + ha2 * oa2) * ia2 + (ja2 * ka2 + la2 * ma2 + na2 * oa2) * pa2);
            g[qa2 + 16 + 44 >> 2] = 0;
            g[qa2 + 16 + 48 >> 2] = m2;
            g[qa2 + 16 + 52 >> 2] = k2;
            g[qa2 + 16 + 56 >> 2] = j2;
            g[qa2 + 16 + 60 >> 2] = 0;
            Jg(qa2 + 16 | 0, qa2);
            j2 = +g[qa2 >> 2];
            k2 = +g[qa2 + 4 >> 2];
            m2 = +g[qa2 + 8 >> 2];
            if (!(+F(+(j2 * j2 + k2 * k2 + m2 * m2)) < 11920928955078125e-23) ? (g[b2 + 472 >> 2] = 0, wa2 = 1 / +G(+(j2 * j2 + k2 * k2 + m2 * m2)), g[b2 + 460 >> 2] = j2 * wa2, g[b2 + 464 >> 2] = k2 * wa2, g[b2 + 468 >> 2] = m2 * wa2, wa2 = +g[qa2 + 12 >> 2], wa2 = wa2 < -1 ? -1 : wa2, wa2 = +L(+(wa2 > 1 ? 1 : wa2)) * 2, g[b2 + 504 >> 2] = wa2, !(+F(+wa2) < 11920928955078125e-23)) : 0)
              a[b2 + 526 >> 0] = 1;
            i = qa2;
            return;
          }
          Jg(d2, qa2 + 16 | 0);
          Jg(b2 + 300 | 0, qa2);
          Z2 = +g[qa2 + 16 + 12 >> 2];
          _2 = +g[qa2 >> 2];
          $2 = +g[qa2 + 16 >> 2];
          aa2 = +g[qa2 + 12 >> 2];
          ba2 = +g[qa2 + 16 + 4 >> 2];
          ca2 = +g[qa2 + 8 >> 2];
          da2 = +g[qa2 + 16 + 8 >> 2];
          ea2 = +g[qa2 + 4 >> 2];
          Jg(e2, qa2 + 16 | 0);
          Jg(b2 + 364 | 0, qa2);
          fa2 = +g[qa2 + 16 + 12 >> 2];
          ga2 = +g[qa2 >> 2];
          ha2 = +g[qa2 + 16 >> 2];
          ia2 = +g[qa2 + 12 >> 2];
          ja2 = +g[qa2 + 16 + 4 >> 2];
          ka2 = +g[qa2 + 8 >> 2];
          la2 = +g[qa2 + 16 + 8 >> 2];
          ma2 = +g[qa2 + 4 >> 2];
          na2 = -(fa2 * ga2 + ha2 * ia2 + ja2 * ka2 - la2 * ma2);
          oa2 = -(ga2 * la2 + (ia2 * ja2 + fa2 * ma2) - ha2 * ka2);
          pa2 = -(fa2 * ka2 + ia2 * la2 + ha2 * ma2 - ga2 * ja2);
          u2 = (Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * na2 + (Z2 * _2 + $2 * aa2 + ba2 * ca2 - da2 * ea2) * (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) + (Z2 * ca2 + aa2 * da2 + $2 * ea2 - _2 * ba2) * oa2 - (_2 * da2 + (aa2 * ba2 + Z2 * ea2) - $2 * ca2) * pa2;
          v2 = (Z2 * _2 + $2 * aa2 + ba2 * ca2 - da2 * ea2) * pa2 + ((_2 * da2 + (aa2 * ba2 + Z2 * ea2) - $2 * ca2) * (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) + (Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * oa2) - (Z2 * ca2 + aa2 * da2 + $2 * ea2 - _2 * ba2) * na2;
          w2 = (_2 * da2 + (aa2 * ba2 + Z2 * ea2) - $2 * ca2) * na2 + ((Z2 * ca2 + aa2 * da2 + $2 * ea2 - _2 * ba2) * (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) + (Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * pa2) - (Z2 * _2 + $2 * aa2 + ba2 * ca2 - da2 * ea2) * oa2;
          x2 = (Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) - (Z2 * _2 + $2 * aa2 + ba2 * ca2 - da2 * ea2) * na2 - (_2 * da2 + (aa2 * ba2 + Z2 * ea2) - $2 * ca2) * oa2 - (Z2 * ca2 + aa2 * da2 + $2 * ea2 - _2 * ba2) * pa2;
          m2 = +g[5703];
          n2 = +g[5705];
          k2 = +g[5704];
          o2 = (m2 * w2 + k2 * x2 - n2 * u2) * -w2 + (x2 * (m2 * x2 + n2 * v2 - k2 * w2) + (-(m2 * u2) - k2 * v2 - n2 * w2) * -u2) - (n2 * x2 + k2 * u2 - m2 * v2) * -v2;
          j2 = (n2 * x2 + k2 * u2 - m2 * v2) * -u2 + (x2 * (m2 * w2 + k2 * x2 - n2 * u2) + (-(m2 * u2) - k2 * v2 - n2 * w2) * -v2) - (m2 * x2 + n2 * v2 - k2 * w2) * -w2;
          p2 = (m2 * x2 + n2 * v2 - k2 * w2) * -v2 + (x2 * (n2 * x2 + k2 * u2 - m2 * v2) + (-(m2 * u2) - k2 * v2 - n2 * w2) * -w2) - (m2 * w2 + k2 * x2 - n2 * u2) * -u2;
          q2 = 1 / +G(+(p2 * p2 + (o2 * o2 + j2 * j2)));
          do
            if (n2 * q2 * p2 + (k2 * q2 * j2 + m2 * q2 * o2) < -0.9999998807907104)
              if (+F(+n2) > 0.7071067690849304) {
                j2 = 1 / +G(+(n2 * n2 + k2 * k2));
                r2 = 0;
                s2 = (g[l >> 2] = k2 * j2, c[l >> 2] | 0);
                t2 = 0;
                j2 = -(n2 * j2);
                break;
              } else {
                j2 = 1 / +G(+(m2 * m2 + k2 * k2));
                r2 = (g[l >> 2] = -(k2 * j2), c[l >> 2] | 0);
                s2 = 0;
                t2 = 0;
                j2 = m2 * j2;
                break;
              }
            else {
              wa2 = +G(+((n2 * q2 * p2 + (k2 * q2 * j2 + m2 * q2 * o2) + 1) * 2));
              r2 = (g[l >> 2] = (k2 * q2 * p2 - n2 * q2 * j2) * (1 / wa2), c[l >> 2] | 0);
              s2 = (g[l >> 2] = (m2 * q2 * j2 - k2 * q2 * o2) * (1 / wa2), c[l >> 2] | 0);
              t2 = (g[l >> 2] = wa2 * 0.5, c[l >> 2] | 0);
              j2 = (n2 * q2 * o2 - m2 * q2 * p2) * (1 / wa2);
            }
          while (0);
          m2 = (c[l >> 2] = r2, +g[l >> 2]);
          p2 = (c[l >> 2] = s2, +g[l >> 2]);
          k2 = (c[l >> 2] = t2, +g[l >> 2]);
          n2 = 1 / +G(+(m2 * m2 + j2 * j2 + p2 * p2 + k2 * k2));
          o2 = j2 * n2;
          W2 = w2 * -o2 + (u2 * k2 * n2 + x2 * -(m2 * n2)) - v2 * -(p2 * n2);
          X2 = u2 * -(p2 * n2) + (x2 * -o2 + v2 * k2 * n2) - w2 * -(m2 * n2);
          Y2 = v2 * -(m2 * n2) + (w2 * k2 * n2 + x2 * -(p2 * n2)) - u2 * -o2;
          U2 = x2 * k2 * n2 - u2 * -(m2 * n2) - v2 * -o2 - w2 * -(p2 * n2);
          V2 = 1 / +G(+(U2 * U2 + (Y2 * Y2 + (W2 * W2 + X2 * X2))));
          u2 = +g[b2 + 444 >> 2];
          j2 = +g[b2 + 456 >> 2];
          r2 = (g[l >> 2] = u2, c[l >> 2] | 0);
          if (u2 >= j2 ? (y2 = +g[b2 + 448 >> 2], y2 >= j2) : 0) {
            q2 = k2 * n2 < -1 ? -1 : k2 * n2;
            q2 = +L(+(q2 > 1 ? 1 : q2)) * 2;
            if (q2 > 11920928955078125e-23) {
              j2 = 1 / +G(+(p2 * n2 * p2 * n2 + (m2 * n2 * m2 * n2 + o2 * o2)));
              if (+F(+(o2 * j2)) > 11920928955078125e-23) {
                k2 = +G(+((p2 * n2 * j2 * p2 * n2 * j2 / (o2 * j2 * o2 * j2) + 1) / (1 / (y2 * y2) + p2 * n2 * j2 * p2 * n2 * j2 / (o2 * j2 * o2 * j2) / (u2 * u2))));
                m2 = m2 * n2 * j2;
                r2 = (g[l >> 2] = k2, c[l >> 2] | 0);
                k2 = p2 * n2 * j2;
                j2 = o2 * j2;
              } else {
                m2 = m2 * n2 * j2;
                k2 = p2 * n2 * j2;
                j2 = o2 * j2;
              }
            } else {
              m2 = 0;
              r2 = 0;
              k2 = 0;
              j2 = 0;
            }
            n2 = (c[l >> 2] = r2, +g[l >> 2]);
            o2 = +g[b2 + 428 >> 2];
            if (q2 > n2 * o2) {
              a[b2 + 526 >> 0] = 1;
              if (q2 < n2 & o2 < 0.9999998807907104)
                p2 = (q2 - n2 * o2) / (n2 - n2 * o2);
              else
                p2 = 1;
              g[b2 + 528 >> 2] = p2;
              g[b2 + 504 >> 2] = q2 - n2 * o2;
              if (+F(+j2) > 11920928955078125e-23) {
                wa2 = +F(+(j2 * -k2 / j2 * (y2 / u2)));
                k2 = k2 < -0 ? wa2 : -wa2;
                wa2 = 1 / +G(+(m2 * m2 + j2 * j2 + k2 * k2));
                m2 = m2 * wa2;
                k2 = -(k2 * wa2);
                j2 = j2 * wa2;
              }
              va2 = -m2;
              ua2 = -j2;
              sa2 = -k2;
              ra2 = (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * va2 + (ga2 * la2 + (ia2 * ja2 + fa2 * ma2) - ha2 * ka2) * sa2 - (fa2 * ka2 + ia2 * la2 + ha2 * ma2 - ga2 * ja2) * ua2;
              wa2 = (fa2 * ka2 + ia2 * la2 + ha2 * ma2 - ga2 * ja2) * va2 + (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * ua2 - (fa2 * ga2 + ha2 * ia2 + ja2 * ka2 - la2 * ma2) * sa2;
              ta2 = (fa2 * ga2 + ha2 * ia2 + ja2 * ka2 - la2 * ma2) * ua2 + (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * sa2 - (ga2 * la2 + (ia2 * ja2 + fa2 * ma2) - ha2 * ka2) * va2;
              sa2 = -((fa2 * ga2 + ha2 * ia2 + ja2 * ka2 - la2 * ma2) * va2) - (ga2 * la2 + (ia2 * ja2 + fa2 * ma2) - ha2 * ka2) * ua2 - (fa2 * ka2 + ia2 * la2 + ha2 * ma2 - ga2 * ja2) * sa2;
              ua2 = wa2 * pa2 + (sa2 * na2 + (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * ra2) - ta2 * oa2;
              va2 = ta2 * na2 + ((fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * wa2 + sa2 * oa2) - ra2 * pa2;
              wa2 = ra2 * oa2 + (sa2 * pa2 + (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * ta2) - wa2 * na2;
              g[b2 + 460 >> 2] = ua2;
              g[b2 + 464 >> 2] = va2;
              g[b2 + 468 >> 2] = wa2;
              g[b2 + 472 >> 2] = 0;
              c[b2 + 536 >> 2] = 0;
              c[b2 + 536 + 4 >> 2] = 0;
              c[b2 + 536 + 8 >> 2] = 0;
              c[b2 + 536 + 12 >> 2] = 0;
              g[b2 + 492 >> 2] = 1 / (ua2 * (+g[f2 >> 2] * ua2 + +g[f2 + 16 >> 2] * va2 + +g[f2 + 32 >> 2] * wa2) + va2 * (ua2 * +g[f2 + 4 >> 2] + va2 * +g[f2 + 20 >> 2] + wa2 * +g[f2 + 36 >> 2]) + wa2 * (ua2 * +g[f2 + 8 >> 2] + va2 * +g[f2 + 24 >> 2] + wa2 * +g[f2 + 40 >> 2]) + (ua2 * (ua2 * +g[h2 >> 2] + va2 * +g[h2 + 16 >> 2] + wa2 * +g[h2 + 32 >> 2]) + va2 * (ua2 * +g[h2 + 4 >> 2] + va2 * +g[h2 + 20 >> 2] + wa2 * +g[h2 + 36 >> 2]) + wa2 * (ua2 * +g[h2 + 8 >> 2] + va2 * +g[h2 + 24 >> 2] + wa2 * +g[h2 + 40 >> 2])));
            }
          } else
            T2 = 23;
          a:
            do
              if ((T2 | 0) == 23) {
                H2 = +g[b2 + 300 >> 2];
                K2 = +g[b2 + 316 >> 2];
                M2 = +g[b2 + 332 >> 2];
                p2 = +g[d2 >> 2];
                q2 = +g[d2 + 4 >> 2];
                u2 = +g[d2 + 8 >> 2];
                v2 = +g[d2 + 16 >> 2];
                w2 = +g[d2 + 20 >> 2];
                x2 = +g[d2 + 24 >> 2];
                N2 = +g[d2 + 32 >> 2];
                P2 = +g[d2 + 36 >> 2];
                y2 = +g[d2 + 40 >> 2];
                z2 = +g[b2 + 304 >> 2];
                A2 = +g[b2 + 320 >> 2];
                B2 = +g[b2 + 336 >> 2];
                C2 = +g[b2 + 308 >> 2];
                D2 = +g[b2 + 324 >> 2];
                E2 = +g[b2 + 340 >> 2];
                m2 = +g[b2 + 364 >> 2];
                o2 = +g[b2 + 380 >> 2];
                Q2 = +g[b2 + 396 >> 2];
                R2 = m2 * +g[e2 >> 2] + o2 * +g[e2 + 4 >> 2] + Q2 * +g[e2 + 8 >> 2];
                S2 = m2 * +g[e2 + 16 >> 2] + o2 * +g[e2 + 20 >> 2] + Q2 * +g[e2 + 24 >> 2];
                Q2 = m2 * +g[e2 + 32 >> 2] + o2 * +g[e2 + 36 >> 2] + Q2 * +g[e2 + 40 >> 2];
                o2 = (H2 * p2 + K2 * q2 + M2 * u2) * R2 + (H2 * v2 + K2 * w2 + M2 * x2) * S2 + (H2 * N2 + K2 * P2 + M2 * y2) * Q2;
                m2 = (p2 * z2 + q2 * A2 + u2 * B2) * R2 + (v2 * z2 + w2 * A2 + x2 * B2) * S2 + (N2 * z2 + P2 * A2 + y2 * B2) * Q2;
                k2 = (p2 * C2 + q2 * D2 + u2 * E2) * R2 + (v2 * C2 + w2 * D2 + x2 * E2) * S2 + (N2 * C2 + P2 * D2 + y2 * E2) * Q2;
                n2 = +g[b2 + 444 >> 2];
                j2 = +g[b2 + 456 >> 2];
                do
                  if (n2 < j2) {
                    n2 = +g[b2 + 448 >> 2];
                    if (n2 < j2) {
                      if (+F(+m2) < 11920928955078125e-23 ? +F(+k2) < 11920928955078125e-23 : 0)
                        break a;
                      a[b2 + 526 >> 0] = 1;
                      g[b2 + 460 >> 2] = -((H2 * N2 + K2 * P2 + M2 * y2) * S2 - (H2 * v2 + K2 * w2 + M2 * x2) * Q2);
                      g[b2 + 464 >> 2] = -((H2 * p2 + K2 * q2 + M2 * u2) * Q2 - (H2 * N2 + K2 * P2 + M2 * y2) * R2);
                      g[b2 + 468 >> 2] = -((H2 * v2 + K2 * w2 + M2 * x2) * R2 - (H2 * p2 + K2 * q2 + M2 * u2) * S2);
                      g[b2 + 472 >> 2] = 0;
                      break a;
                    }
                    if (+F(+o2) < 11920928955078125e-23 ? +F(+k2) < 11920928955078125e-23 : 0) {
                      j2 = o2;
                      break;
                    }
                    a[b2 + 526 >> 0] = 1;
                    if (n2 >= j2) {
                      j2 = +O(+k2, +o2);
                      if (j2 > n2) {
                        k2 = +J(+n2);
                        m2 = 0;
                        j2 = +I(+n2);
                        break;
                      }
                      if (j2 < -n2) {
                        k2 = -+J(+n2);
                        m2 = 0;
                        j2 = +I(+n2);
                      } else {
                        m2 = 0;
                        j2 = o2;
                      }
                    } else
                      j2 = o2;
                  } else {
                    if (+F(+o2) < 11920928955078125e-23 ? +F(+m2) < 11920928955078125e-23 : 0) {
                      j2 = o2;
                      break;
                    }
                    a[b2 + 526 >> 0] = 1;
                    if (n2 >= j2) {
                      j2 = +O(+m2, +o2);
                      if (j2 > n2) {
                        k2 = 0;
                        m2 = +J(+n2);
                        j2 = +I(+n2);
                        break;
                      }
                      if (j2 < -n2) {
                        k2 = 0;
                        m2 = -+J(+n2);
                        j2 = +I(+n2);
                      } else {
                        k2 = 0;
                        j2 = o2;
                      }
                    } else
                      j2 = o2;
                  }
                while (0);
                o2 = (p2 * C2 + q2 * D2 + u2 * E2) * k2 + ((p2 * z2 + q2 * A2 + u2 * B2) * m2 + (H2 * p2 + K2 * q2 + M2 * u2) * j2);
                n2 = (v2 * C2 + w2 * D2 + x2 * E2) * k2 + ((v2 * z2 + w2 * A2 + x2 * B2) * m2 + (H2 * v2 + K2 * w2 + M2 * x2) * j2);
                j2 = (N2 * C2 + P2 * D2 + y2 * E2) * k2 + ((N2 * z2 + P2 * A2 + y2 * B2) * m2 + (H2 * N2 + K2 * P2 + M2 * y2) * j2);
                k2 = 1 / +G(+(j2 * j2 + (o2 * o2 + n2 * n2)));
                g[b2 + 460 >> 2] = -(S2 * k2 * j2 - Q2 * k2 * n2);
                g[b2 + 464 >> 2] = -(Q2 * k2 * o2 - R2 * k2 * j2);
                g[b2 + 468 >> 2] = -(R2 * k2 * n2 - S2 * k2 * o2);
                g[b2 + 472 >> 2] = 0;
                m2 = +G(+((S2 * k2 * j2 - Q2 * k2 * n2) * (S2 * k2 * j2 - Q2 * k2 * n2) + (Q2 * k2 * o2 - R2 * k2 * j2) * (Q2 * k2 * o2 - R2 * k2 * j2) + (R2 * k2 * n2 - S2 * k2 * o2) * (R2 * k2 * n2 - S2 * k2 * o2)));
                g[b2 + 504 >> 2] = m2;
                if (!(+F(+m2) < 11920928955078125e-23)) {
                  g[b2 + 460 >> 2] = 1 / m2 * -(S2 * k2 * j2 - Q2 * k2 * n2);
                  g[b2 + 464 >> 2] = 1 / m2 * -(Q2 * k2 * o2 - R2 * k2 * j2);
                  g[b2 + 468 >> 2] = 1 / m2 * -(R2 * k2 * n2 - S2 * k2 * o2);
                }
              }
            while (0);
          q2 = +g[b2 + 452 >> 2];
          if (!(q2 >= 0)) {
            g[b2 + 512 >> 2] = 0;
            i = qa2;
            return;
          }
          n2 = V2 * U2 < -1 ? -1 : V2 * U2;
          n2 = +L(+(n2 > 1 ? 1 : n2)) * 2;
          if (n2 > 3.1415927410125732) {
            p2 = -(V2 * U2) < -1 ? -1 : -(V2 * U2);
            m2 = -(V2 * W2);
            k2 = -(V2 * X2);
            j2 = -(V2 * Y2);
            p2 = +L(+(p2 > 1 ? 1 : p2)) * 2;
          } else {
            m2 = V2 * W2;
            k2 = V2 * X2;
            j2 = V2 * Y2;
            p2 = n2;
          }
          g[b2 + 512 >> 2] = p2;
          if (p2 > 11920928955078125e-23) {
            wa2 = 1 / +G(+(m2 * m2 + k2 * k2 + j2 * j2));
            o2 = m2 * wa2;
            n2 = j2 * wa2;
            k2 = k2 * wa2;
          } else {
            o2 = m2;
            n2 = j2;
          }
          j2 = +g[b2 + 428 >> 2];
          if (p2 > q2 * j2) {
            a[b2 + 525 >> 0] = 1;
            m2 = p2 - q2 * j2;
            if (p2 < q2 & j2 < 0.9999998807907104)
              j2 = m2 / (q2 - q2 * j2);
            else
              j2 = 1;
            g[b2 + 532 >> 2] = j2;
            g[b2 + 508 >> 2] = m2;
            va2 = -o2;
            ua2 = -k2;
            sa2 = -n2;
            ra2 = (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * va2 + (ga2 * la2 + (ia2 * ja2 + fa2 * ma2) - ha2 * ka2) * sa2 - (fa2 * ka2 + ia2 * la2 + ha2 * ma2 - ga2 * ja2) * ua2;
            wa2 = (fa2 * ka2 + ia2 * la2 + ha2 * ma2 - ga2 * ja2) * va2 + (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * ua2 - (fa2 * ga2 + ha2 * ia2 + ja2 * ka2 - la2 * ma2) * sa2;
            ta2 = (fa2 * ga2 + ha2 * ia2 + ja2 * ka2 - la2 * ma2) * ua2 + (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * sa2 - (ga2 * la2 + (ia2 * ja2 + fa2 * ma2) - ha2 * ka2) * va2;
            sa2 = -((fa2 * ga2 + ha2 * ia2 + ja2 * ka2 - la2 * ma2) * va2) - (ga2 * la2 + (ia2 * ja2 + fa2 * ma2) - ha2 * ka2) * ua2 - (fa2 * ka2 + ia2 * la2 + ha2 * ma2 - ga2 * ja2) * sa2;
            ua2 = wa2 * pa2 + (sa2 * na2 + (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * ra2) - ta2 * oa2;
            va2 = ta2 * na2 + ((fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * wa2 + sa2 * oa2) - ra2 * pa2;
            wa2 = ra2 * oa2 + (sa2 * pa2 + (fa2 * ia2 - ga2 * ha2 - ja2 * ma2 - ka2 * la2) * ta2) - wa2 * na2;
            g[b2 + 476 >> 2] = ua2;
            g[b2 + 480 >> 2] = va2;
            g[b2 + 484 >> 2] = wa2;
            g[b2 + 488 >> 2] = 0;
            g[b2 + 496 >> 2] = 1 / (ua2 * (+g[f2 >> 2] * ua2 + +g[f2 + 16 >> 2] * va2 + +g[f2 + 32 >> 2] * wa2) + va2 * (ua2 * +g[f2 + 4 >> 2] + va2 * +g[f2 + 20 >> 2] + wa2 * +g[f2 + 36 >> 2]) + wa2 * (ua2 * +g[f2 + 8 >> 2] + va2 * +g[f2 + 24 >> 2] + wa2 * +g[f2 + 40 >> 2]) + (ua2 * (ua2 * +g[h2 >> 2] + va2 * +g[h2 + 16 >> 2] + wa2 * +g[h2 + 32 >> 2]) + va2 * (ua2 * +g[h2 + 4 >> 2] + va2 * +g[h2 + 20 >> 2] + wa2 * +g[h2 + 36 >> 2]) + wa2 * (ua2 * +g[h2 + 8 >> 2] + va2 * +g[h2 + 24 >> 2] + wa2 * +g[h2 + 40 >> 2])));
          }
          if (!(a[b2 + 526 >> 0] | 0)) {
            i = qa2;
            return;
          }
          ra2 = -o2;
          wa2 = -k2;
          sa2 = -n2;
          pa2 = (Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * ra2 + (_2 * da2 + (aa2 * ba2 + Z2 * ea2) - $2 * ca2) * sa2 - (Z2 * ca2 + aa2 * da2 + $2 * ea2 - _2 * ba2) * wa2;
          va2 = (Z2 * ca2 + aa2 * da2 + $2 * ea2 - _2 * ba2) * ra2 + (Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * wa2 - (Z2 * _2 + $2 * aa2 + ba2 * ca2 - da2 * ea2) * sa2;
          ua2 = (Z2 * _2 + $2 * aa2 + ba2 * ca2 - da2 * ea2) * wa2 + (Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * sa2 - (_2 * da2 + (aa2 * ba2 + Z2 * ea2) - $2 * ca2) * ra2;
          sa2 = -((Z2 * _2 + $2 * aa2 + ba2 * ca2 - da2 * ea2) * ra2) - (_2 * da2 + (aa2 * ba2 + Z2 * ea2) - $2 * ca2) * wa2 - (Z2 * ca2 + aa2 * da2 + $2 * ea2 - _2 * ba2) * sa2;
          wa2 = -(Z2 * _2 + $2 * aa2 + ba2 * ca2 - da2 * ea2);
          ra2 = -(_2 * da2 + (aa2 * ba2 + Z2 * ea2) - $2 * ca2);
          ta2 = -(Z2 * ca2 + aa2 * da2 + $2 * ea2 - _2 * ba2);
          g[b2 + 536 >> 2] = va2 * ta2 + (sa2 * wa2 + (Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * pa2) - ua2 * ra2;
          g[b2 + 540 >> 2] = ua2 * wa2 + ((Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * va2 + sa2 * ra2) - pa2 * ta2;
          g[b2 + 544 >> 2] = pa2 * ra2 + (sa2 * ta2 + (Z2 * aa2 - _2 * $2 - ba2 * ea2 - ca2 * da2) * ua2) - va2 * wa2;
          g[b2 + 548 >> 2] = 0;
          i = qa2;
          return;
        }
        function rc(d2, e2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0;
          fa2 = i;
          i = i + 16 | 0;
          da2 = c[d2 + 28 >> 2] | 0;
          ea2 = c[d2 + 32 >> 2] | 0;
          Y2 = +g[da2 + 384 >> 2];
          Z2 = +g[ea2 + 384 >> 2];
          U2 = c[e2 + 24 >> 2] | 0;
          ca2 = a[d2 + 180 >> 0] | 0 ? 1 : -1;
          V2 = +g[d2 + 936 >> 2] - +g[d2 + 872 >> 2];
          W2 = +g[d2 + 940 >> 2] - +g[d2 + 876 >> 2];
          X2 = +g[d2 + 944 >> 2] - +g[d2 + 880 >> 2];
          _2 = Y2 + Z2 > 0 ? Z2 / (Y2 + Z2) : 0.5;
          E2 = c[d2 + 824 >> 2] | 0;
          H2 = c[d2 + 840 >> 2] | 0;
          I2 = c[d2 + 856 >> 2] | 0;
          J2 = c[d2 + 888 >> 2] | 0;
          K2 = c[d2 + 904 >> 2] | 0;
          L2 = c[d2 + 920 >> 2] | 0;
          M2 = (a[d2 + 49 >> 0] | 0) == 0;
          if (M2) {
            h2 = c[d2 + 828 >> 2] | 0;
            z2 = c[d2 + 844 >> 2] | 0;
            B2 = c[d2 + 860 >> 2] | 0;
            c[fa2 + 4 >> 2] = z2;
            y2 = c[d2 + 832 >> 2] | 0;
            x2 = c[d2 + 848 >> 2] | 0;
            T2 = c[d2 + 864 >> 2] | 0;
            c[fa2 >> 2] = y2;
            t2 = (c[l >> 2] = B2, +g[l >> 2]);
            s2 = (c[l >> 2] = y2, +g[l >> 2]);
            q2 = (c[l >> 2] = x2, +g[l >> 2]);
            $2 = E2;
            A2 = T2;
            aa2 = H2;
            ba2 = I2;
            r2 = (c[l >> 2] = T2, +g[l >> 2]);
          } else {
            f2 = _2 * (c[l >> 2] = E2, +g[l >> 2]);
            n2 = _2 * (c[l >> 2] = H2, +g[l >> 2]);
            m2 = _2 * (c[l >> 2] = I2, +g[l >> 2]);
            j2 = (1 - _2) * (c[l >> 2] = J2, +g[l >> 2]);
            o2 = (1 - _2) * (c[l >> 2] = K2, +g[l >> 2]);
            m2 = m2 + (1 - _2) * (c[l >> 2] = L2, +g[l >> 2]);
            p2 = 1 / +G(+((f2 + j2) * (f2 + j2) + (n2 + o2) * (n2 + o2) + m2 * m2));
            k2 = (g[l >> 2] = (f2 + j2) * p2, c[l >> 2] | 0);
            u2 = (g[l >> 2] = (n2 + o2) * p2, c[l >> 2] | 0);
            x2 = (g[l >> 2] = m2 * p2, c[l >> 2] | 0);
            if (+F(+(m2 * p2)) > 0.7071067690849304) {
              Q2 = 1 / +G(+(m2 * p2 * m2 * p2 + (n2 + o2) * p2 * (n2 + o2) * p2));
              g[fa2 + 4 >> 2] = -(m2 * p2 * Q2);
              q2 = -((f2 + j2) * p2 * (n2 + o2) * p2 * Q2);
              r2 = (f2 + j2) * p2 * -(m2 * p2 * Q2);
              j2 = (m2 * p2 * m2 * p2 + (n2 + o2) * p2 * (n2 + o2) * p2) * Q2;
              f2 = (n2 + o2) * p2 * Q2;
              h2 = 0;
            } else {
              r2 = (f2 + j2) * p2 * (f2 + j2) * p2 + (n2 + o2) * p2 * (n2 + o2) * p2;
              Q2 = 1 / +G(+r2);
              h2 = (g[l >> 2] = -((n2 + o2) * p2 * Q2), c[l >> 2] | 0);
              g[fa2 + 4 >> 2] = (f2 + j2) * p2 * Q2;
              q2 = m2 * p2 * -((n2 + o2) * p2 * Q2);
              r2 = r2 * Q2;
              j2 = -(m2 * p2 * (f2 + j2) * p2 * Q2);
              f2 = 0;
            }
            B2 = (g[l >> 2] = f2, c[l >> 2] | 0);
            y2 = (g[l >> 2] = j2, c[l >> 2] | 0);
            g[fa2 >> 2] = j2;
            z2 = (g[l >> 2] = q2, c[l >> 2] | 0);
            $2 = k2;
            A2 = (g[l >> 2] = r2, c[l >> 2] | 0);
            aa2 = u2;
            ba2 = x2;
            x2 = z2;
            z2 = c[fa2 + 4 >> 2] | 0;
            t2 = f2;
            s2 = j2;
          }
          N2 = c[e2 + 12 >> 2] | 0;
          c[N2 >> 2] = h2;
          c[N2 + 4 >> 2] = z2;
          c[N2 + 8 >> 2] = B2;
          c[N2 + (U2 << 2) >> 2] = y2;
          c[N2 + (U2 + 1 << 2) >> 2] = x2;
          c[N2 + (U2 + 2 << 2) >> 2] = A2;
          v2 = (c[l >> 2] = h2, +g[l >> 2]);
          u2 = c[e2 + 20 >> 2] | 0;
          g[u2 >> 2] = -v2;
          j2 = +g[fa2 + 4 >> 2];
          g[u2 + 4 >> 2] = -j2;
          g[u2 + 8 >> 2] = -t2;
          g[u2 + (U2 << 2) >> 2] = -s2;
          g[u2 + (U2 + 1 << 2) >> 2] = -q2;
          g[u2 + (U2 + 2 << 2) >> 2] = -r2;
          k2 = c[d2 + 300 >> 2] | 0;
          f2 = +g[d2 + 280 >> 2];
          if (!(k2 & 128))
            f2 = f2 * +g[e2 + 4 >> 2];
          p2 = f2 * +g[e2 >> 2];
          P2 = (c[l >> 2] = H2, +g[l >> 2]);
          C2 = (c[l >> 2] = L2, +g[l >> 2]);
          w2 = (c[l >> 2] = I2, +g[l >> 2]);
          O2 = (c[l >> 2] = K2, +g[l >> 2]);
          Q2 = (c[l >> 2] = J2, +g[l >> 2]);
          D2 = (c[l >> 2] = E2, +g[l >> 2]);
          T2 = c[e2 + 28 >> 2] | 0;
          g[T2 >> 2] = p2 * ((P2 * C2 - w2 * O2) * v2 + (w2 * Q2 - D2 * C2) * j2 + (D2 * O2 - P2 * Q2) * t2);
          g[T2 + (U2 << 2) >> 2] = p2 * ((P2 * C2 - w2 * O2) * s2 + (w2 * Q2 - D2 * C2) * q2 + (D2 * O2 - P2 * Q2) * r2);
          if (k2 & 64 | 0) {
            T2 = c[e2 + 32 >> 2] | 0;
            c[T2 >> 2] = c[d2 + 292 >> 2];
            c[T2 + (U2 << 2) >> 2] = c[d2 + 292 >> 2];
          }
          o2 = +g[da2 + 52 >> 2];
          p2 = +g[da2 + 56 >> 2];
          n2 = +g[da2 + 60 >> 2];
          j2 = +g[ea2 + 52 >> 2];
          m2 = +g[ea2 + 56 >> 2];
          f2 = +g[ea2 + 60 >> 2];
          if (M2) {
            H2 = (g[l >> 2] = m2 - p2, c[l >> 2] | 0);
            Q2 = +g[fa2 + 4 >> 2];
            O2 = (m2 - p2) * t2 - (f2 - n2) * Q2;
            P2 = (f2 - n2) * v2 - (j2 - o2) * t2;
            g[N2 + (U2 << 1 << 2) >> 2] = _2 * O2;
            g[N2 + ((U2 << 1 | 1) << 2) >> 2] = _2 * P2;
            g[N2 + ((U2 << 1) + 2 << 2) >> 2] = _2 * ((j2 - o2) * Q2 - (m2 - p2) * v2);
            M2 = (g[l >> 2] = j2 - o2, c[l >> 2] | 0);
            K2 = (g[l >> 2] = f2 - n2, c[l >> 2] | 0);
            g[u2 + (U2 << 1 << 2) >> 2] = (1 - _2) * O2;
            g[u2 + ((U2 << 1 | 1) << 2) >> 2] = (1 - _2) * P2;
            g[u2 + ((U2 << 1) + 2 << 2) >> 2] = (1 - _2) * ((j2 - o2) * Q2 - (m2 - p2) * v2);
            Q2 = (m2 - p2) * r2 - (f2 - n2) * q2;
            n2 = (f2 - n2) * s2 - (j2 - o2) * r2;
            q2 = (j2 - o2) * q2 - (m2 - p2) * s2;
            g[N2 + (U2 * 3 << 2) >> 2] = _2 * Q2;
            g[N2 + ((U2 * 3 | 0) + 1 << 2) >> 2] = _2 * n2;
            g[N2 + ((U2 * 3 | 0) + 2 << 2) >> 2] = _2 * q2;
            g[u2 + (U2 * 3 << 2) >> 2] = (1 - _2) * Q2;
            g[u2 + ((U2 * 3 | 0) + 1 << 2) >> 2] = (1 - _2) * n2;
            g[u2 + ((U2 * 3 | 0) + 2 << 2) >> 2] = (1 - _2) * q2;
            T2 = c[e2 + 8 >> 2] | 0;
            c[T2 + (U2 << 1 << 2) >> 2] = h2;
            c[T2 + ((U2 << 1 | 1) << 2) >> 2] = z2;
            c[T2 + ((U2 << 1) + 2 << 2) >> 2] = B2;
            N2 = c[fa2 >> 2] | 0;
            c[T2 + (U2 * 3 << 2) >> 2] = N2;
            c[T2 + ((U2 * 3 | 0) + 1 << 2) >> 2] = x2;
            c[T2 + ((U2 * 3 | 0) + 2 << 2) >> 2] = A2;
            k2 = c[e2 + 16 >> 2] | 0;
            g[k2 + (U2 << 1 << 2) >> 2] = -v2;
            q2 = (c[l >> 2] = z2, +g[l >> 2]);
            g[k2 + ((U2 << 1 | 1) << 2) >> 2] = -q2;
            o2 = (c[l >> 2] = B2, +g[l >> 2]);
            g[k2 + ((U2 << 1) + 2 << 2) >> 2] = -o2;
            n2 = (c[l >> 2] = N2, +g[l >> 2]);
            g[k2 + (U2 * 3 << 2) >> 2] = -n2;
            m2 = (c[l >> 2] = x2, +g[l >> 2]);
            g[k2 + ((U2 * 3 | 0) + 1 << 2) >> 2] = -m2;
            j2 = (c[l >> 2] = A2, +g[l >> 2]);
            g[k2 + ((U2 * 3 | 0) + 2 << 2) >> 2] = -j2;
            N2 = M2;
            u2 = 0;
            M2 = 0;
            L2 = 0;
            J2 = 0;
            I2 = 0;
            E2 = 0;
            p2 = v2;
            h2 = T2;
          } else {
            ha2 = +g[d2 + 936 >> 2] - j2;
            ga2 = +g[d2 + 940 >> 2] - m2;
            O2 = +g[d2 + 944 >> 2] - f2;
            r2 = (c[l >> 2] = $2, +g[l >> 2]);
            s2 = (c[l >> 2] = aa2, +g[l >> 2]);
            q2 = (c[l >> 2] = ba2, +g[l >> 2]);
            P2 = +g[d2 + 872 >> 2] - o2;
            Q2 = +g[d2 + 876 >> 2] - p2;
            f2 = +g[d2 + 880 >> 2] - n2;
            w2 = +g[d2 + 1080 >> 2] - +g[d2 + 1032 >> 2];
            C2 = r2 * (r2 * P2 + s2 * Q2 + q2 * f2) + r2 * w2 - r2 * (r2 * ha2 + s2 * ga2 + q2 * O2);
            D2 = s2 * (r2 * P2 + s2 * Q2 + q2 * f2) + s2 * w2 - s2 * (r2 * ha2 + s2 * ga2 + q2 * O2);
            w2 = q2 * (r2 * P2 + s2 * Q2 + q2 * f2) + q2 * w2 - q2 * (r2 * ha2 + s2 * ga2 + q2 * O2);
            t2 = P2 - r2 * (r2 * P2 + s2 * Q2 + q2 * f2) + _2 * C2;
            n2 = Q2 - s2 * (r2 * P2 + s2 * Q2 + q2 * f2) + _2 * D2;
            v2 = f2 - q2 * (r2 * P2 + s2 * Q2 + q2 * f2) + _2 * w2;
            x2 = (g[l >> 2] = t2, c[l >> 2] | 0);
            J2 = (g[l >> 2] = n2, c[l >> 2] | 0);
            E2 = (g[l >> 2] = v2, c[l >> 2] | 0);
            C2 = ha2 - r2 * (r2 * ha2 + s2 * ga2 + q2 * O2) - (1 - _2) * C2;
            D2 = ga2 - s2 * (r2 * ha2 + s2 * ga2 + q2 * O2) - (1 - _2) * D2;
            w2 = O2 - q2 * (r2 * ha2 + s2 * ga2 + q2 * O2) - (1 - _2) * w2;
            u2 = (g[l >> 2] = C2, c[l >> 2] | 0);
            y2 = (g[l >> 2] = D2, c[l >> 2] | 0);
            I2 = (g[l >> 2] = w2, c[l >> 2] | 0);
            m2 = _2 * (ha2 - r2 * (r2 * ha2 + s2 * ga2 + q2 * O2)) + (1 - _2) * (P2 - r2 * (r2 * P2 + s2 * Q2 + q2 * f2));
            j2 = _2 * (ga2 - s2 * (r2 * ha2 + s2 * ga2 + q2 * O2)) + (1 - _2) * (Q2 - s2 * (r2 * P2 + s2 * Q2 + q2 * f2));
            f2 = _2 * (O2 - q2 * (r2 * ha2 + s2 * ga2 + q2 * O2)) + (1 - _2) * (f2 - q2 * (r2 * P2 + s2 * Q2 + q2 * f2));
            g[fa2 + 4 >> 2] = j2;
            if (f2 * f2 + (m2 * m2 + j2 * j2) > 11920928955078125e-23) {
              ha2 = 1 / +G(+(f2 * f2 + (m2 * m2 + j2 * j2)));
              h2 = (g[l >> 2] = m2 * ha2, c[l >> 2] | 0);
              g[fa2 + 4 >> 2] = ha2 * j2;
              k2 = (g[l >> 2] = ha2 * f2, c[l >> 2] | 0);
              Q2 = ha2 * f2;
              j2 = ha2 * j2;
              f2 = m2 * ha2;
            } else {
              T2 = c[d2 + 828 >> 2] | 0;
              h2 = c[d2 + 844 >> 2] | 0;
              k2 = c[d2 + 860 >> 2] | 0;
              c[fa2 + 4 >> 2] = h2;
              Q2 = (c[l >> 2] = k2, +g[l >> 2]);
              j2 = (c[l >> 2] = h2, +g[l >> 2]);
              h2 = T2;
              f2 = (c[l >> 2] = T2, +g[l >> 2]);
            }
            O2 = s2 * Q2 - q2 * j2;
            P2 = q2 * f2 - r2 * Q2;
            r2 = r2 * j2 - s2 * f2;
            g[fa2 >> 2] = O2;
            g[N2 + (U2 << 1 << 2) >> 2] = n2 * Q2 - v2 * j2;
            g[N2 + (U2 << 1 << 2) + 4 >> 2] = v2 * f2 - t2 * Q2;
            g[N2 + (U2 << 1 << 2) + 8 >> 2] = t2 * j2 - n2 * f2;
            T2 = c[e2 + 20 >> 2] | 0;
            g[T2 + (U2 << 1 << 2) >> 2] = -(D2 * Q2 - w2 * j2);
            g[T2 + ((U2 << 1 | 1) << 2) >> 2] = -(w2 * f2 - C2 * Q2);
            g[T2 + ((U2 << 1) + 2 << 2) >> 2] = -(C2 * j2 - D2 * f2);
            if (Y2 < 11920928955078125e-23 | Z2 < 11920928955078125e-23 ? (a[d2 + 297 >> 0] | 0) != 0 : 0) {
              p2 = _2 * (n2 * r2 - v2 * P2);
              o2 = _2 * (t2 * P2 - n2 * O2);
              m2 = _2 * (v2 * O2 - t2 * r2);
              n2 = (1 - _2) * (D2 * r2 - w2 * P2);
              j2 = (1 - _2) * (w2 * O2 - C2 * r2);
              f2 = (1 - _2) * (C2 * P2 - D2 * O2);
            } else {
              p2 = n2 * r2 - v2 * P2;
              o2 = t2 * P2 - n2 * O2;
              m2 = v2 * O2 - t2 * r2;
              n2 = D2 * r2 - w2 * P2;
              j2 = w2 * O2 - C2 * r2;
              f2 = C2 * P2 - D2 * O2;
            }
            T2 = (c[e2 + 12 >> 2] | 0) + (U2 * 3 << 2) | 0;
            g[T2 >> 2] = p2;
            g[T2 + 4 >> 2] = m2;
            g[T2 + 8 >> 2] = o2;
            T2 = c[e2 + 20 >> 2] | 0;
            g[T2 + (U2 * 3 << 2) >> 2] = -n2;
            g[T2 + ((U2 * 3 | 0) + 1 << 2) >> 2] = -j2;
            g[T2 + ((U2 * 3 | 0) + 2 << 2) >> 2] = -f2;
            T2 = c[e2 + 8 >> 2] | 0;
            c[T2 + (U2 << 1 << 2) >> 2] = h2;
            c[T2 + ((U2 << 1 | 1) << 2) >> 2] = c[fa2 + 4 >> 2];
            c[T2 + ((U2 << 1) + 2 << 2) >> 2] = k2;
            g[T2 + (U2 * 3 << 2) >> 2] = O2;
            g[T2 + ((U2 * 3 | 0) + 1 << 2) >> 2] = P2;
            g[T2 + ((U2 * 3 | 0) + 2 << 2) >> 2] = r2;
            k2 = c[e2 + 16 >> 2] | 0;
            p2 = (c[l >> 2] = h2, +g[l >> 2]);
            g[k2 + (U2 << 1 << 2) >> 2] = -p2;
            q2 = +g[fa2 + 4 >> 2];
            g[k2 + ((U2 << 1 | 1) << 2) >> 2] = -q2;
            g[k2 + ((U2 << 1) + 2 << 2) >> 2] = -Q2;
            g[k2 + (U2 * 3 << 2) >> 2] = -O2;
            g[k2 + ((U2 * 3 | 0) + 1 << 2) >> 2] = -P2;
            g[k2 + ((U2 * 3 | 0) + 2 << 2) >> 2] = -r2;
            N2 = 0;
            M2 = x2;
            L2 = y2;
            K2 = 0;
            H2 = 0;
            o2 = Q2;
            n2 = O2;
            m2 = P2;
            j2 = r2;
            h2 = T2;
          }
          R2 = c[d2 + 300 >> 2] | 0;
          f2 = +g[d2 + 264 >> 2];
          if (!(R2 & 32))
            f2 = f2 * +g[e2 + 4 >> 2];
          ha2 = f2 * +g[e2 >> 2];
          T2 = c[e2 + 28 >> 2] | 0;
          g[T2 + (U2 << 1 << 2) >> 2] = ha2 * (V2 * p2 + W2 * q2 + X2 * o2);
          g[T2 + (U2 * 3 << 2) >> 2] = ha2 * (V2 * n2 + W2 * m2 + X2 * j2);
          if (R2 & 16 | 0) {
            B2 = c[e2 + 32 >> 2] | 0;
            c[B2 + (U2 << 1 << 2) >> 2] = c[d2 + 276 >> 2];
            c[B2 + (U2 * 3 << 2) >> 2] = c[d2 + 276 >> 2];
          }
          B2 = b[d2 + 296 >> 1] | 0;
          if (!((B2 & 255) << 24 >> 24)) {
            q2 = 0;
            z2 = 0;
          } else {
            ha2 = ca2 * +g[d2 + 1032 >> 2];
            q2 = ha2;
            z2 = ha2 > 0 ? 2 : 1;
          }
          x2 = a[d2 + 1096 >> 0] | 0;
          y2 = (z2 | 0) != 0;
          if (x2 & 255 | z2) {
            A2 = c[e2 + 24 >> 2] << 2;
            c[h2 + (A2 << 2) >> 2] = $2;
            c[h2 + ((A2 | 1) << 2) >> 2] = aa2;
            c[h2 + ((A2 | 2) << 2) >> 2] = ba2;
            r2 = (c[l >> 2] = $2, +g[l >> 2]);
            g[k2 + (A2 << 2) >> 2] = -r2;
            s2 = (c[l >> 2] = aa2, +g[l >> 2]);
            g[k2 + ((A2 | 1) << 2) >> 2] = -s2;
            t2 = (c[l >> 2] = ba2, +g[l >> 2]);
            g[k2 + ((A2 | 2) << 2) >> 2] = -t2;
            if (a[d2 + 49 >> 0] | 0) {
              if (!(Y2 < 11920928955078125e-23 | Z2 < 11920928955078125e-23)) {
                Z2 = (c[l >> 2] = J2, +g[l >> 2]);
                X2 = (c[l >> 2] = E2, +g[l >> 2]);
                Y2 = (c[l >> 2] = M2, +g[l >> 2]);
                ha2 = (c[l >> 2] = L2, +g[l >> 2]);
                _2 = (c[l >> 2] = I2, +g[l >> 2]);
                ga2 = (c[l >> 2] = u2, +g[l >> 2]);
                U2 = c[e2 + 12 >> 2] | 0;
                g[U2 + (A2 << 2) >> 2] = t2 * Z2 - s2 * X2;
                g[U2 + ((A2 | 1) << 2) >> 2] = r2 * X2 - t2 * Y2;
                g[U2 + ((A2 | 2) << 2) >> 2] = s2 * Y2 - r2 * Z2;
                U2 = c[e2 + 20 >> 2] | 0;
                g[U2 + (A2 << 2) >> 2] = -(t2 * ha2 - s2 * _2);
                g[U2 + ((A2 | 1) << 2) >> 2] = -(r2 * _2 - t2 * ga2);
                g[U2 + ((A2 | 2) << 2) >> 2] = -(s2 * ga2 - r2 * ha2);
              }
            } else {
              ha2 = (c[l >> 2] = H2, +g[l >> 2]);
              Z2 = (c[l >> 2] = K2, +g[l >> 2]);
              ga2 = (c[l >> 2] = N2, +g[l >> 2]);
              U2 = c[e2 + 12 >> 2] | 0;
              g[U2 + (A2 << 2) >> 2] = _2 * (t2 * ha2 - s2 * Z2);
              g[U2 + ((A2 | 1) << 2) >> 2] = _2 * (r2 * Z2 - t2 * ga2);
              g[U2 + ((A2 | 2) << 2) >> 2] = _2 * (s2 * ga2 - r2 * ha2);
              U2 = c[e2 + 20 >> 2] | 0;
              g[U2 + (A2 << 2) >> 2] = (1 - _2) * (t2 * ha2 - s2 * Z2);
              g[U2 + ((A2 | 1) << 2) >> 2] = (1 - _2) * (r2 * Z2 - t2 * ga2);
              g[U2 + ((A2 | 2) << 2) >> 2] = (1 - _2) * (s2 * ga2 - r2 * ha2);
            }
            h2 = +g[d2 + 184 >> 2] == +g[d2 + 188 >> 2];
            g[T2 + (A2 << 2) >> 2] = 0;
            k2 = (c[e2 + 36 >> 2] | 0) + (A2 << 2) | 0;
            g[k2 >> 2] = 0;
            u2 = (c[e2 + 40 >> 2] | 0) + (A2 << 2) | 0;
            g[u2 >> 2] = 0;
            p2 = +g[((R2 & 512 | 0) == 0 ? e2 + 4 | 0 : d2 + 232 | 0) >> 2];
            if (!(x2 << 24 >> 24 == 0 | y2 & h2)) {
              if (R2 & 1 | 0)
                c[(c[e2 + 32 >> 2] | 0) + (A2 << 2) >> 2] = c[d2 + 212 >> 2];
              o2 = +g[d2 + 1100 >> 2];
              f2 = +g[d2 + 1080 >> 2];
              j2 = +g[d2 + 184 >> 2];
              m2 = +g[d2 + 188 >> 2];
              n2 = p2 * +g[e2 >> 2];
              do
                if (!(j2 > m2))
                  if (!(j2 == m2)) {
                    if (o2 / n2 < 0)
                      if (f2 >= j2 ? j2 - o2 / n2 > f2 : 0) {
                        f2 = (j2 - f2) / (o2 / n2);
                        break;
                      } else {
                        f2 = f2 < j2 ? 0 : 1;
                        break;
                      }
                    if (o2 / n2 > 0)
                      if (f2 <= m2 ? m2 - o2 / n2 < f2 : 0) {
                        f2 = (m2 - f2) / (o2 / n2);
                        break;
                      } else {
                        f2 = f2 > m2 ? 0 : 1;
                        break;
                      }
                    else
                      f2 = 0;
                  } else
                    f2 = 0;
                else
                  f2 = 1;
              while (0);
              g[T2 + (A2 << 2) >> 2] = +g[T2 + (A2 << 2) >> 2] - ca2 * f2 * o2;
              g[k2 >> 2] = -+g[d2 + 1104 >> 2] / +g[e2 >> 2] + +g[k2 >> 2];
              g[u2 >> 2] = +g[d2 + 1104 >> 2] / +g[e2 >> 2] + +g[u2 >> 2];
            }
            if (y2) {
              g[T2 + (A2 << 2) >> 2] = +g[T2 + (A2 << 2) >> 2] + q2 * p2 * +g[e2 >> 2];
              if (R2 & 256 | 0)
                c[(c[e2 + 32 >> 2] | 0) + (A2 << 2) >> 2] = c[d2 + 244 >> 2];
              do
                if (!h2)
                  if ((z2 | 0) == 1) {
                    g[k2 >> 2] = -34028234663852886e22;
                    g[u2 >> 2] = 0;
                    break;
                  } else {
                    g[k2 >> 2] = 0;
                    g[u2 >> 2] = 34028234663852886e22;
                    break;
                  }
                else {
                  g[k2 >> 2] = -34028234663852886e22;
                  g[u2 >> 2] = 34028234663852886e22;
                }
              while (0);
              ha2 = 1 - +g[d2 + 240 >> 2];
              j2 = +F(+ha2);
              do
                if (!(ha2 != ha2 | false | ha2 == 0)) {
                  f2 = ca2 * (r2 * +g[da2 + 352 >> 2] + s2 * +g[da2 + 356 >> 2] + t2 * +g[da2 + 360 >> 2] - (r2 * +g[ea2 + 352 >> 2] + s2 * +g[ea2 + 356 >> 2] + t2 * +g[ea2 + 360 >> 2]));
                  if ((z2 | 0) == 1) {
                    if (!(f2 < 0))
                      break;
                    if (!(+g[T2 + (A2 << 2) >> 2] < -(j2 * f2)))
                      break;
                    g[T2 + (A2 << 2) >> 2] = -(j2 * f2);
                    break;
                  } else {
                    if (!(f2 > 0))
                      break;
                    if (!(+g[T2 + (A2 << 2) >> 2] > -(j2 * f2)))
                      break;
                    g[T2 + (A2 << 2) >> 2] = -(j2 * f2);
                    break;
                  }
                }
              while (0);
              g[T2 + (A2 << 2) >> 2] = +g[d2 + 232 >> 2] * +g[T2 + (A2 << 2) >> 2];
              h2 = 5;
            } else
              h2 = 5;
          } else
            h2 = 4;
          if ((B2 & 65535) < 256) {
            t2 = 0;
            y2 = 0;
          } else {
            ha2 = +g[d2 + 1088 >> 2];
            t2 = ha2;
            y2 = ha2 > 0 ? 1 : 2;
          }
          k2 = a[d2 + 1112 >> 0] | 0;
          u2 = (y2 | 0) != 0;
          if (!(k2 & 255 | y2)) {
            i = fa2;
            return;
          }
          x2 = S(c[e2 + 24 >> 2] | 0, h2) | 0;
          ea2 = c[e2 + 12 >> 2] | 0;
          c[ea2 + (x2 << 2) >> 2] = $2;
          c[ea2 + (x2 + 1 << 2) >> 2] = aa2;
          c[ea2 + (x2 + 2 << 2) >> 2] = ba2;
          w2 = (c[l >> 2] = $2, +g[l >> 2]);
          ea2 = c[e2 + 20 >> 2] | 0;
          g[ea2 + (x2 << 2) >> 2] = -w2;
          v2 = (c[l >> 2] = aa2, +g[l >> 2]);
          g[ea2 + (x2 + 1 << 2) >> 2] = -v2;
          s2 = (c[l >> 2] = ba2, +g[l >> 2]);
          g[ea2 + (x2 + 2 << 2) >> 2] = -s2;
          p2 = +g[d2 + 192 >> 2];
          q2 = +g[d2 + 196 >> 2];
          r2 = +g[((R2 & 2048 | 0) == 0 ? e2 + 4 | 0 : d2 + 248 | 0) >> 2];
          if (!(k2 << 24 >> 24 == 0 | u2 & p2 == q2)) {
            if (!(R2 & 4)) {
              m2 = q2;
              n2 = p2;
            } else {
              c[(c[e2 + 32 >> 2] | 0) + (x2 << 2) >> 2] = c[d2 + 228 >> 2];
              m2 = +g[d2 + 196 >> 2];
              n2 = +g[d2 + 192 >> 2];
            }
            f2 = +g[d2 + 1084 >> 2];
            o2 = +g[d2 + 1116 >> 2];
            j2 = r2 * +g[e2 >> 2];
            do
              if (!(n2 > m2))
                if (!(n2 == m2)) {
                  if (o2 / j2 < 0)
                    if (f2 >= n2 ? n2 - o2 / j2 > f2 : 0) {
                      f2 = (n2 - f2) / (o2 / j2);
                      break;
                    } else {
                      f2 = f2 < n2 ? 0 : 1;
                      break;
                    }
                  if (o2 / j2 > 0)
                    if (f2 <= m2 ? m2 - o2 / j2 < f2 : 0) {
                      f2 = (m2 - f2) / (o2 / j2);
                      break;
                    } else {
                      f2 = f2 > m2 ? 0 : 1;
                      break;
                    }
                  else
                    f2 = 0;
                } else
                  f2 = 0;
              else
                f2 = 1;
            while (0);
            g[T2 + (x2 << 2) >> 2] = f2 * o2;
            g[(c[e2 + 36 >> 2] | 0) + (x2 << 2) >> 2] = -+g[d2 + 1120 >> 2] / +g[e2 >> 2];
            g[(c[e2 + 40 >> 2] | 0) + (x2 << 2) >> 2] = +g[d2 + 1120 >> 2] / +g[e2 >> 2];
          }
          if (!u2) {
            i = fa2;
            return;
          }
          g[T2 + (x2 << 2) >> 2] = +g[T2 + (x2 << 2) >> 2] + t2 * r2 * +g[e2 >> 2];
          if (R2 & 1024 | 0)
            c[(c[e2 + 32 >> 2] | 0) + (x2 << 2) >> 2] = c[d2 + 260 >> 2];
          do
            if (!(p2 == q2)) {
              k2 = (c[e2 + 36 >> 2] | 0) + (x2 << 2) | 0;
              h2 = c[e2 + 40 >> 2] | 0;
              if ((y2 | 0) == 1) {
                g[k2 >> 2] = 0;
                g[h2 + (x2 << 2) >> 2] = 34028234663852886e22;
                break;
              } else {
                g[k2 >> 2] = -34028234663852886e22;
                g[h2 + (x2 << 2) >> 2] = 0;
                break;
              }
            } else {
              g[(c[e2 + 36 >> 2] | 0) + (x2 << 2) >> 2] = -34028234663852886e22;
              g[(c[e2 + 40 >> 2] | 0) + (x2 << 2) >> 2] = 34028234663852886e22;
            }
          while (0);
          ha2 = 1 - +g[d2 + 256 >> 2];
          j2 = +F(+ha2);
          do
            if (!(ha2 != ha2 | false | ha2 == 0)) {
              ea2 = c[d2 + 28 >> 2] | 0;
              e2 = c[d2 + 32 >> 2] | 0;
              f2 = w2 * +g[ea2 + 368 >> 2] + v2 * +g[ea2 + 372 >> 2] + s2 * +g[ea2 + 376 >> 2] - (w2 * +g[e2 + 368 >> 2] + v2 * +g[e2 + 372 >> 2] + s2 * +g[e2 + 376 >> 2]);
              if ((y2 | 0) == 1) {
                if (!(f2 < 0))
                  break;
                if (!(+g[T2 + (x2 << 2) >> 2] < -(j2 * f2)))
                  break;
                g[T2 + (x2 << 2) >> 2] = -(j2 * f2);
                break;
              } else {
                if (!(f2 > 0))
                  break;
                if (!(+g[T2 + (x2 << 2) >> 2] > -(j2 * f2)))
                  break;
                g[T2 + (x2 << 2) >> 2] = -(j2 * f2);
                break;
              }
            }
          while (0);
          g[T2 + (x2 << 2) >> 2] = +g[d2 + 248 >> 2] * +g[T2 + (x2 << 2) >> 2];
          i = fa2;
          return;
        }
        function sc(d2, e2) {
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0;
          ra2 = c[d2 + 28 >> 2] | 0;
          sa2 = c[d2 + 32 >> 2] | 0;
          s2 = c[e2 + 24 >> 2] | 0;
          if (!(a[d2 + 739 >> 0] | 0)) {
            A2 = +g[d2 + 552 >> 2];
            V2 = +g[ra2 + 4 >> 2];
            B2 = +g[d2 + 568 >> 2];
            W2 = +g[ra2 + 8 >> 2];
            C2 = +g[d2 + 584 >> 2];
            X2 = +g[ra2 + 12 >> 2];
            D2 = +g[d2 + 556 >> 2];
            E2 = +g[d2 + 572 >> 2];
            F2 = +g[d2 + 588 >> 2];
            Y2 = +g[d2 + 560 >> 2];
            Z2 = +g[d2 + 576 >> 2];
            _2 = +g[d2 + 592 >> 2];
            $2 = +g[ra2 + 20 >> 2];
            aa2 = +g[ra2 + 24 >> 2];
            ba2 = +g[ra2 + 28 >> 2];
            ca2 = +g[ra2 + 36 >> 2];
            da2 = +g[ra2 + 40 >> 2];
            ea2 = +g[ra2 + 44 >> 2];
            m2 = +g[d2 + 600 >> 2];
            o2 = +g[d2 + 604 >> 2];
            q2 = +g[d2 + 608 >> 2];
            u2 = +g[ra2 + 52 >> 2];
            v2 = +g[ra2 + 56 >> 2];
            w2 = +g[ra2 + 60 >> 2];
            H2 = +g[sa2 + 4 >> 2];
            I2 = +g[sa2 + 8 >> 2];
            J2 = +g[sa2 + 12 >> 2];
            K2 = +g[d2 + 624 >> 2];
            L2 = +g[d2 + 640 >> 2];
            M2 = +g[d2 + 656 >> 2];
            N2 = +g[sa2 + 20 >> 2];
            O2 = +g[sa2 + 24 >> 2];
            P2 = +g[sa2 + 28 >> 2];
            Q2 = +g[sa2 + 36 >> 2];
            R2 = +g[sa2 + 40 >> 2];
            S2 = +g[sa2 + 44 >> 2];
            pa2 = +g[d2 + 664 >> 2];
            qa2 = +g[d2 + 668 >> 2];
            z2 = +g[d2 + 672 >> 2];
            x2 = +g[sa2 + 52 >> 2] + (H2 * pa2 + I2 * qa2 + J2 * z2);
            y2 = N2 * pa2 + O2 * qa2 + P2 * z2 + +g[sa2 + 56 >> 2];
            z2 = Q2 * pa2 + R2 * qa2 + S2 * z2 + +g[sa2 + 60 >> 2];
            T2 = b[d2 + 736 >> 1] | 0;
            if (!((T2 & 255) << 24 >> 24)) {
              i2 = c[e2 + 8 >> 2] | 0;
              g[i2 >> 2] = 1;
              g[i2 + (s2 + 1 << 2) >> 2] = 1;
              g[i2 + ((s2 << 1) + 2 << 2) >> 2] = 1;
              i2 = c[e2 + 16 >> 2] | 0;
              g[i2 >> 2] = -1;
              g[i2 + (s2 + 1 << 2) >> 2] = -1;
              g[i2 + ((s2 << 1) + 2 << 2) >> 2] = -1;
              i2 = s2 << 1;
              f2 = +g[ra2 + 52 >> 2];
              h2 = +g[ra2 + 56 >> 2];
              k2 = +g[ra2 + 60 >> 2];
            } else {
              i2 = s2 << 1;
              f2 = u2;
              h2 = v2;
              k2 = w2;
            }
            l2 = u2 + (V2 * m2 + W2 * o2 + X2 * q2) - f2;
            f2 = $2 * m2 + aa2 * o2 + ba2 * q2 + v2 - h2;
            qa2 = ca2 * m2 + da2 * o2 + ea2 * q2 + w2 - k2;
            n2 = c[e2 + 12 >> 2] | 0;
            r2 = n2 + (i2 << 2) | 0;
            c[n2 >> 2] = 0;
            g[n2 + 4 >> 2] = qa2;
            g[n2 + 8 >> 2] = -f2;
            g[n2 + 12 >> 2] = 0;
            g[n2 + (s2 << 2) >> 2] = -qa2;
            c[n2 + (s2 << 2) + 4 >> 2] = 0;
            g[n2 + (s2 << 2) + 8 >> 2] = l2;
            g[n2 + (s2 << 2) + 12 >> 2] = 0;
            g[r2 >> 2] = f2;
            g[r2 + 4 >> 2] = -l2;
            c[r2 + 8 >> 2] = 0;
            g[r2 + 12 >> 2] = 0;
            l2 = x2 - +g[sa2 + 52 >> 2];
            f2 = y2 - +g[sa2 + 56 >> 2];
            qa2 = z2 - +g[sa2 + 60 >> 2];
            r2 = c[e2 + 20 >> 2] | 0;
            U2 = r2 + (i2 << 2) | 0;
            c[r2 >> 2] = 0;
            g[r2 + 4 >> 2] = -qa2;
            g[r2 + 8 >> 2] = f2;
            g[r2 + 12 >> 2] = 0;
            g[r2 + (s2 << 2) >> 2] = qa2;
            c[r2 + (s2 << 2) + 4 >> 2] = 0;
            g[r2 + (s2 << 2) + 8 >> 2] = -l2;
            g[r2 + (s2 << 2) + 12 >> 2] = 0;
            g[U2 >> 2] = -f2;
            g[U2 + 4 >> 2] = l2;
            c[U2 + 8 >> 2] = 0;
            g[U2 + 12 >> 2] = 0;
            U2 = c[d2 + 748 >> 2] | 0;
            l2 = +g[((U2 & 8 | 0) == 0 ? e2 + 4 | 0 : d2 + 756 | 0) >> 2];
            f2 = l2 * +g[e2 >> 2];
            t2 = c[e2 + 28 >> 2] | 0;
            if (!((T2 & 255) << 24 >> 24)) {
              g[t2 >> 2] = f2 * (x2 - (u2 + (V2 * m2 + W2 * o2 + X2 * q2)));
              g[t2 + (s2 << 2) >> 2] = f2 * (y2 - ($2 * m2 + aa2 * o2 + ba2 * q2 + v2));
              g[t2 + (s2 << 1 << 2) >> 2] = f2 * (z2 - (ca2 * m2 + da2 * o2 + ea2 * q2 + w2));
            }
            s2 = c[e2 + 24 >> 2] | 0;
            g[n2 + (s2 * 3 << 2) >> 2] = A2 * V2 + B2 * W2 + C2 * X2;
            g[n2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = A2 * $2 + B2 * aa2 + C2 * ba2;
            g[n2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = A2 * ca2 + B2 * da2 + C2 * ea2;
            g[n2 + (s2 << 2 << 2) >> 2] = V2 * D2 + W2 * E2 + X2 * F2;
            g[n2 + ((s2 << 2 | 1) << 2) >> 2] = D2 * $2 + E2 * aa2 + F2 * ba2;
            g[n2 + ((s2 << 2 | 2) << 2) >> 2] = D2 * ca2 + E2 * da2 + F2 * ea2;
            g[r2 + (s2 * 3 << 2) >> 2] = -(A2 * V2 + B2 * W2 + C2 * X2);
            g[r2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = -(A2 * $2 + B2 * aa2 + C2 * ba2);
            g[r2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = -(A2 * ca2 + B2 * da2 + C2 * ea2);
            g[r2 + (s2 << 2 << 2) >> 2] = -(V2 * D2 + W2 * E2 + X2 * F2);
            g[r2 + ((s2 << 2 | 1) << 2) >> 2] = -(D2 * $2 + E2 * aa2 + F2 * ba2);
            g[r2 + ((s2 << 2 | 2) << 2) >> 2] = -(D2 * ca2 + E2 * da2 + F2 * ea2);
            pa2 = (Y2 * $2 + Z2 * aa2 + _2 * ba2) * (K2 * Q2 + L2 * R2 + M2 * S2) - (Y2 * ca2 + Z2 * da2 + _2 * ea2) * (K2 * N2 + L2 * O2 + M2 * P2);
            qa2 = (Y2 * ca2 + Z2 * da2 + _2 * ea2) * (H2 * K2 + I2 * L2 + J2 * M2) - (V2 * Y2 + W2 * Z2 + X2 * _2) * (K2 * Q2 + L2 * R2 + M2 * S2);
            oa2 = (V2 * Y2 + W2 * Z2 + X2 * _2) * (K2 * N2 + L2 * O2 + M2 * P2) - (Y2 * $2 + Z2 * aa2 + _2 * ba2) * (H2 * K2 + I2 * L2 + J2 * M2);
            g[t2 + (s2 * 3 << 2) >> 2] = ((A2 * ca2 + B2 * da2 + C2 * ea2) * oa2 + ((A2 * V2 + B2 * W2 + C2 * X2) * pa2 + (A2 * $2 + B2 * aa2 + C2 * ba2) * qa2)) * f2;
            g[t2 + (s2 << 2 << 2) >> 2] = ((D2 * ca2 + E2 * da2 + F2 * ea2) * oa2 + ((V2 * D2 + W2 * E2 + X2 * F2) * pa2 + (D2 * $2 + E2 * aa2 + F2 * ba2) * qa2)) * f2;
            if (!(a[d2 + 716 >> 0] | 0)) {
              q2 = 0;
              p2 = 0;
            } else {
              qa2 = +g[d2 + 708 >> 2] * +g[d2 + 732 >> 2];
              q2 = qa2;
              p2 = qa2 > 0 ? 1 : 2;
            }
            j2 = (p2 | 0) != 0;
            if (!((T2 & 65535) >>> 8 & 65535 | p2))
              return;
            g[n2 + (s2 * 5 << 2) >> 2] = V2 * Y2 + W2 * Z2 + X2 * _2;
            g[n2 + ((s2 * 5 | 0) + 1 << 2) >> 2] = Y2 * $2 + Z2 * aa2 + _2 * ba2;
            g[n2 + ((s2 * 5 | 0) + 2 << 2) >> 2] = Y2 * ca2 + Z2 * da2 + _2 * ea2;
            g[r2 + (s2 * 5 << 2) >> 2] = -(V2 * Y2 + W2 * Z2 + X2 * _2);
            g[r2 + ((s2 * 5 | 0) + 1 << 2) >> 2] = -(Y2 * $2 + Z2 * aa2 + _2 * ba2);
            g[r2 + ((s2 * 5 | 0) + 2 << 2) >> 2] = -(Y2 * ca2 + Z2 * da2 + _2 * ea2);
            h2 = +g[d2 + 688 >> 2];
            k2 = +g[d2 + 692 >> 2];
            f2 = +jh(h2 - k2, 6.2831854820251465);
            if (!(f2 < -3.1415927410125732))
              if (f2 > 3.1415927410125732)
                o2 = f2 + -6.2831854820251465;
              else
                o2 = f2;
            else
              o2 = f2 + 6.2831854820251465;
            f2 = +jh(h2 + k2, 6.2831854820251465);
            if (!(f2 < -3.1415927410125732))
              if (f2 > 3.1415927410125732)
                m2 = f2 + -6.2831854820251465;
              else
                m2 = f2;
            else
              m2 = f2 + 6.2831854820251465;
            i2 = o2 == m2;
            n2 = t2 + (s2 * 5 << 2) | 0;
            g[n2 >> 2] = 0;
            if (U2 & 2)
              l2 = +g[d2 + 764 >> 2];
            if (!((T2 & 65535) >>> 8 << 16 >> 16 == 0 | j2 & i2)) {
              if (U2 & 4 | 0)
                c[(c[e2 + 32 >> 2] | 0) + (s2 * 5 << 2) >> 2] = c[d2 + 752 >> 2];
              h2 = +g[d2 + 728 >> 2];
              k2 = +g[d2 + 680 >> 2];
              f2 = o2 > m2 ? 1 : 0;
              do
                if (!(o2 >= m2)) {
                  f2 = k2 / (l2 * +g[e2 >> 2]);
                  if (f2 < 0)
                    if (h2 >= o2 & o2 - f2 > h2) {
                      f2 = (o2 - h2) / f2;
                      break;
                    } else {
                      f2 = h2 < o2 ? 0 : 1;
                      break;
                    }
                  if (f2 > 0)
                    if (h2 <= m2 & m2 - f2 < h2) {
                      f2 = (m2 - h2) / f2;
                      break;
                    } else {
                      f2 = h2 > m2 ? 0 : 1;
                      break;
                    }
                  else
                    f2 = 0;
                }
              while (0);
              g[n2 >> 2] = f2 * k2 * +g[d2 + 732 >> 2] + +g[n2 >> 2];
              g[(c[e2 + 36 >> 2] | 0) + (s2 * 5 << 2) >> 2] = -+g[d2 + 684 >> 2];
              c[(c[e2 + 40 >> 2] | 0) + (s2 * 5 << 2) >> 2] = c[d2 + 684 >> 2];
            }
            if (!j2)
              return;
            g[n2 >> 2] = +g[n2 >> 2] + q2 * l2 * +g[e2 >> 2];
            if (U2 & 1 | 0)
              c[(c[e2 + 32 >> 2] | 0) + (s2 * 5 << 2) >> 2] = c[d2 + 760 >> 2];
            do
              if (!i2) {
                j2 = (c[e2 + 36 >> 2] | 0) + (s2 * 5 << 2) | 0;
                i2 = c[e2 + 40 >> 2] | 0;
                if ((p2 | 0) == 1) {
                  g[j2 >> 2] = 0;
                  g[i2 + (s2 * 5 << 2) >> 2] = 34028234663852886e22;
                  break;
                } else {
                  g[j2 >> 2] = -34028234663852886e22;
                  g[i2 + (s2 * 5 << 2) >> 2] = 0;
                  break;
                }
              } else {
                g[(c[e2 + 36 >> 2] | 0) + (s2 * 5 << 2) >> 2] = -34028234663852886e22;
                g[(c[e2 + 40 >> 2] | 0) + (s2 * 5 << 2) >> 2] = 34028234663852886e22;
              }
            while (0);
            h2 = +g[d2 + 704 >> 2];
            do
              if (h2 > 0) {
                f2 = (V2 * Y2 + W2 * Z2 + X2 * _2) * +g[ra2 + 368 >> 2] + (Y2 * $2 + Z2 * aa2 + _2 * ba2) * +g[ra2 + 372 >> 2] + (Y2 * ca2 + Z2 * da2 + _2 * ea2) * +g[ra2 + 376 >> 2] - ((V2 * Y2 + W2 * Z2 + X2 * _2) * +g[sa2 + 368 >> 2] + (Y2 * $2 + Z2 * aa2 + _2 * ba2) * +g[sa2 + 372 >> 2] + (Y2 * ca2 + Z2 * da2 + _2 * ea2) * +g[sa2 + 376 >> 2]);
                if ((p2 | 0) == 1) {
                  if (!(f2 < 0))
                    break;
                  if (!(+g[n2 >> 2] < -(h2 * f2)))
                    break;
                  g[n2 >> 2] = -(h2 * f2);
                  break;
                } else {
                  if (!(f2 > 0))
                    break;
                  if (!(+g[n2 >> 2] > -(h2 * f2)))
                    break;
                  g[n2 >> 2] = -(h2 * f2);
                  break;
                }
              }
            while (0);
            g[n2 >> 2] = +g[d2 + 700 >> 2] * +g[n2 >> 2];
            return;
          }
          Y2 = +g[ra2 + 4 >> 2];
          Z2 = +g[ra2 + 8 >> 2];
          _2 = +g[ra2 + 12 >> 2];
          w2 = +g[d2 + 556 >> 2];
          y2 = +g[d2 + 572 >> 2];
          z2 = +g[d2 + 588 >> 2];
          $2 = +g[d2 + 560 >> 2];
          aa2 = +g[d2 + 576 >> 2];
          ba2 = +g[d2 + 592 >> 2];
          ca2 = +g[ra2 + 20 >> 2];
          da2 = +g[ra2 + 24 >> 2];
          ea2 = +g[ra2 + 28 >> 2];
          fa2 = +g[ra2 + 36 >> 2];
          ga2 = +g[ra2 + 40 >> 2];
          ha2 = +g[ra2 + 44 >> 2];
          ja2 = +g[d2 + 600 >> 2];
          ia2 = +g[d2 + 604 >> 2];
          o2 = +g[d2 + 608 >> 2];
          h2 = +g[ra2 + 52 >> 2] + (Y2 * ja2 + Z2 * ia2 + _2 * o2);
          v2 = ca2 * ja2 + da2 * ia2 + ea2 * o2 + +g[ra2 + 56 >> 2];
          o2 = fa2 * ja2 + ga2 * ia2 + ha2 * o2 + +g[ra2 + 60 >> 2];
          ia2 = +g[sa2 + 4 >> 2];
          ja2 = +g[sa2 + 8 >> 2];
          ka2 = +g[sa2 + 12 >> 2];
          la2 = +g[d2 + 624 >> 2];
          ma2 = +g[d2 + 640 >> 2];
          P2 = +g[d2 + 656 >> 2];
          Q2 = +g[sa2 + 20 >> 2];
          R2 = +g[sa2 + 24 >> 2];
          S2 = +g[sa2 + 28 >> 2];
          V2 = +g[sa2 + 36 >> 2];
          W2 = +g[sa2 + 40 >> 2];
          X2 = +g[sa2 + 44 >> 2];
          q2 = +g[d2 + 664 >> 2];
          x2 = +g[d2 + 668 >> 2];
          k2 = +g[d2 + 672 >> 2];
          f2 = +g[sa2 + 52 >> 2];
          u2 = +g[sa2 + 56 >> 2];
          m2 = +g[sa2 + 60 >> 2];
          L2 = f2 + (ia2 * q2 + ja2 * x2 + ka2 * k2) - h2;
          M2 = Q2 * q2 + R2 * x2 + S2 * k2 + u2 - v2;
          N2 = V2 * q2 + W2 * x2 + X2 * k2 + m2 - o2;
          A2 = +g[(c[d2 + 28 >> 2] | 0) + 384 >> 2];
          B2 = +g[(c[d2 + 32 >> 2] | 0) + 384 >> 2];
          J2 = A2 + B2 > 0 ? B2 / (A2 + B2) : 0.5;
          na2 = (Y2 * $2 + Z2 * aa2 + _2 * ba2) * J2 + (ia2 * la2 + ja2 * ma2 + ka2 * P2) * (1 - J2);
          oa2 = ($2 * ca2 + aa2 * da2 + ba2 * ea2) * J2 + (la2 * Q2 + ma2 * R2 + P2 * S2) * (1 - J2);
          pa2 = ($2 * fa2 + aa2 * ga2 + ba2 * ha2) * J2 + (la2 * V2 + ma2 * W2 + P2 * X2) * (1 - J2);
          qa2 = 1 / +G(+(na2 * na2 + oa2 * oa2 + pa2 * pa2));
          F2 = (f2 + (ia2 * q2 + ja2 * x2 + ka2 * k2) - f2) * na2 * qa2 + (Q2 * q2 + R2 * x2 + S2 * k2 + u2 - u2) * oa2 * qa2 + (V2 * q2 + W2 * x2 + X2 * k2 + m2 - m2) * pa2 * qa2;
          f2 = f2 + (ia2 * q2 + ja2 * x2 + ka2 * k2) - f2 - na2 * qa2 * F2;
          u2 = Q2 * q2 + R2 * x2 + S2 * k2 + u2 - u2 - oa2 * qa2 * F2;
          m2 = V2 * q2 + W2 * x2 + X2 * k2 + m2 - m2 - pa2 * qa2 * F2;
          h2 = h2 - +g[ra2 + 52 >> 2];
          v2 = v2 - +g[ra2 + 56 >> 2];
          o2 = o2 - +g[ra2 + 60 >> 2];
          k2 = na2 * qa2 * (h2 * na2 * qa2 + v2 * oa2 * qa2 + o2 * pa2 * qa2);
          x2 = oa2 * qa2 * (h2 * na2 * qa2 + v2 * oa2 * qa2 + o2 * pa2 * qa2);
          q2 = pa2 * qa2 * (h2 * na2 * qa2 + v2 * oa2 * qa2 + o2 * pa2 * qa2);
          D2 = h2 - k2 + J2 * (k2 - na2 * qa2 * F2);
          E2 = v2 - x2 + J2 * (x2 - oa2 * qa2 * F2);
          C2 = o2 - q2 + J2 * (q2 - pa2 * qa2 * F2);
          H2 = f2 - (1 - J2) * (k2 - na2 * qa2 * F2);
          I2 = u2 - (1 - J2) * (x2 - oa2 * qa2 * F2);
          F2 = m2 - (1 - J2) * (q2 - pa2 * qa2 * F2);
          l2 = (J2 * f2 + (1 - J2) * (h2 - k2)) * (J2 * f2 + (1 - J2) * (h2 - k2)) + (J2 * u2 + (1 - J2) * (v2 - x2)) * (J2 * u2 + (1 - J2) * (v2 - x2)) + (J2 * m2 + (1 - J2) * (o2 - q2)) * (J2 * m2 + (1 - J2) * (o2 - q2));
          if (l2 > 11920928955078125e-23) {
            z2 = 1 / +G(+l2);
            O2 = (J2 * f2 + (1 - J2) * (h2 - k2)) * z2;
            K2 = z2 * (J2 * m2 + (1 - J2) * (o2 - q2));
            q2 = z2 * (J2 * u2 + (1 - J2) * (v2 - x2));
          } else {
            O2 = Y2 * w2 + Z2 * y2 + _2 * z2;
            K2 = w2 * fa2 + y2 * ga2 + z2 * ha2;
            q2 = w2 * ca2 + y2 * da2 + z2 * ea2;
          }
          u2 = oa2 * qa2 * K2 - pa2 * qa2 * q2;
          v2 = pa2 * qa2 * O2 - K2 * na2 * qa2;
          w2 = q2 * na2 * qa2 - oa2 * qa2 * O2;
          U2 = c[e2 + 12 >> 2] | 0;
          g[U2 >> 2] = E2 * K2 - C2 * q2;
          g[U2 + 4 >> 2] = C2 * O2 - D2 * K2;
          g[U2 + 8 >> 2] = D2 * q2 - E2 * O2;
          U2 = c[e2 + 20 >> 2] | 0;
          g[U2 >> 2] = -(I2 * K2 - F2 * q2);
          g[U2 + 4 >> 2] = -(F2 * O2 - H2 * K2);
          g[U2 + 8 >> 2] = -(H2 * q2 - I2 * O2);
          if (A2 < 11920928955078125e-23 | B2 < 11920928955078125e-23 ? (a[d2 + 716 >> 0] | 0) != 0 : 0) {
            f2 = J2 * (E2 * w2 - C2 * v2);
            h2 = J2 * (C2 * u2 - D2 * w2);
            k2 = J2 * (D2 * v2 - E2 * u2);
            l2 = (1 - J2) * (I2 * w2 - F2 * v2);
            m2 = (1 - J2) * (F2 * u2 - H2 * w2);
            o2 = (1 - J2) * (H2 * v2 - I2 * u2);
          } else {
            f2 = E2 * w2 - C2 * v2;
            h2 = C2 * u2 - D2 * w2;
            k2 = D2 * v2 - E2 * u2;
            l2 = I2 * w2 - F2 * v2;
            m2 = F2 * u2 - H2 * w2;
            o2 = H2 * v2 - I2 * u2;
          }
          U2 = (c[e2 + 12 >> 2] | 0) + (s2 << 2) | 0;
          g[U2 >> 2] = f2;
          g[U2 + 4 >> 2] = h2;
          g[U2 + 8 >> 2] = k2;
          U2 = c[e2 + 20 >> 2] | 0;
          g[U2 + (s2 << 2) >> 2] = -l2;
          g[U2 + (s2 + 1 << 2) >> 2] = -m2;
          g[U2 + (s2 + 2 << 2) >> 2] = -o2;
          if (A2 < 11920928955078125e-23 | B2 < 11920928955078125e-23) {
            o2 = J2 * (E2 * pa2 * qa2 - C2 * oa2 * qa2);
            m2 = J2 * (C2 * na2 * qa2 - D2 * pa2 * qa2);
            h2 = J2 * (D2 * oa2 * qa2 - E2 * na2 * qa2);
            l2 = (1 - J2) * (I2 * pa2 * qa2 - F2 * oa2 * qa2);
            k2 = (1 - J2) * (F2 * na2 * qa2 - H2 * pa2 * qa2);
            f2 = (1 - J2) * (H2 * oa2 * qa2 - I2 * na2 * qa2);
          } else {
            o2 = E2 * pa2 * qa2 - C2 * oa2 * qa2;
            m2 = C2 * na2 * qa2 - D2 * pa2 * qa2;
            h2 = D2 * oa2 * qa2 - E2 * na2 * qa2;
            l2 = I2 * pa2 * qa2 - F2 * oa2 * qa2;
            k2 = F2 * na2 * qa2 - H2 * pa2 * qa2;
            f2 = H2 * oa2 * qa2 - I2 * na2 * qa2;
          }
          i2 = (c[e2 + 12 >> 2] | 0) + (s2 << 1 << 2) | 0;
          g[i2 >> 2] = o2;
          g[i2 + 4 >> 2] = m2;
          g[i2 + 8 >> 2] = h2;
          i2 = c[e2 + 20 >> 2] | 0;
          g[i2 + (s2 << 1 << 2) >> 2] = -l2;
          g[i2 + ((s2 << 1 | 1) << 2) >> 2] = -k2;
          g[i2 + ((s2 << 1) + 2 << 2) >> 2] = -f2;
          m2 = +g[((c[d2 + 748 >> 2] & 8 | 0) == 0 ? e2 + 4 | 0 : d2 + 756 | 0) >> 2];
          f2 = m2 * +g[e2 >> 2];
          if (!(a[d2 + 736 >> 0] | 0)) {
            p2 = c[e2 + 8 >> 2] | 0;
            g[p2 >> 2] = O2;
            g[p2 + 4 >> 2] = q2;
            g[p2 + 8 >> 2] = K2;
            p2 = (c[e2 + 8 >> 2] | 0) + (s2 << 2) | 0;
            g[p2 >> 2] = u2;
            g[p2 + 4 >> 2] = v2;
            g[p2 + 8 >> 2] = w2;
            p2 = (c[e2 + 8 >> 2] | 0) + (s2 << 1 << 2) | 0;
            g[p2 >> 2] = na2 * qa2;
            g[p2 + 4 >> 2] = oa2 * qa2;
            g[p2 + 8 >> 2] = pa2 * qa2;
            p2 = c[e2 + 16 >> 2] | 0;
            h2 = -O2;
            g[p2 >> 2] = h2;
            g[p2 + 4 >> 2] = -q2;
            g[p2 + 8 >> 2] = -K2;
            g[p2 + (s2 << 2) >> 2] = -u2;
            g[p2 + (s2 + 1 << 2) >> 2] = -v2;
            g[p2 + (s2 + 2 << 2) >> 2] = -w2;
            g[p2 + (s2 << 1 << 2) >> 2] = -(na2 * qa2);
            g[p2 + ((s2 << 1 | 1) << 2) >> 2] = -(oa2 * qa2);
            g[p2 + ((s2 << 1) + 2 << 2) >> 2] = -(pa2 * qa2);
            p2 = c[e2 + 28 >> 2] | 0;
            g[p2 >> 2] = f2 * (L2 * O2 + M2 * q2 + N2 * K2);
            g[p2 + (s2 << 2) >> 2] = f2 * (L2 * u2 + M2 * v2 + N2 * w2);
            g[p2 + (s2 << 1 << 2) >> 2] = f2 * (L2 * na2 * qa2 + M2 * oa2 * qa2 + N2 * pa2 * qa2);
            f2 = h2;
            h2 = -u2;
            k2 = -v2;
            l2 = -w2;
            i2 = c[e2 + 20 >> 2] | 0;
          } else {
            f2 = -O2;
            h2 = -u2;
            k2 = -v2;
            l2 = -w2;
            p2 = c[e2 + 28 >> 2] | 0;
          }
          j2 = c[e2 + 12 >> 2] | 0;
          g[j2 + (s2 * 3 << 2) >> 2] = O2;
          g[j2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = q2;
          g[j2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = K2;
          g[j2 + (s2 << 2 << 2) >> 2] = u2;
          g[j2 + ((s2 << 2 | 1) << 2) >> 2] = v2;
          g[j2 + ((s2 << 2 | 2) << 2) >> 2] = w2;
          g[i2 + (s2 * 3 << 2) >> 2] = f2;
          g[i2 + ((s2 * 3 | 0) + 1 << 2) >> 2] = -q2;
          g[i2 + ((s2 * 3 | 0) + 2 << 2) >> 2] = -K2;
          g[i2 + (s2 << 2 << 2) >> 2] = h2;
          g[i2 + ((s2 << 2 | 1) << 2) >> 2] = k2;
          g[i2 + ((s2 << 2 | 2) << 2) >> 2] = l2;
          M2 = m2 * +g[e2 >> 2];
          N2 = ($2 * ca2 + aa2 * da2 + ba2 * ea2) * (la2 * V2 + ma2 * W2 + P2 * X2) - ($2 * fa2 + aa2 * ga2 + ba2 * ha2) * (la2 * Q2 + ma2 * R2 + P2 * S2);
          ha2 = ($2 * fa2 + aa2 * ga2 + ba2 * ha2) * (ia2 * la2 + ja2 * ma2 + ka2 * P2) - (Y2 * $2 + Z2 * aa2 + _2 * ba2) * (la2 * V2 + ma2 * W2 + P2 * X2);
          ma2 = (Y2 * $2 + Z2 * aa2 + _2 * ba2) * (la2 * Q2 + ma2 * R2 + P2 * S2) - ($2 * ca2 + aa2 * da2 + ba2 * ea2) * (ia2 * la2 + ja2 * ma2 + ka2 * P2);
          g[p2 + (s2 * 3 << 2) >> 2] = M2 * (N2 * O2 + ha2 * q2 + ma2 * K2);
          g[p2 + (s2 << 2 << 2) >> 2] = M2 * (N2 * u2 + ha2 * v2 + ma2 * w2);
          if (!(a[d2 + 716 >> 0] | 0)) {
            q2 = 0;
            t2 = 0;
          } else {
            ma2 = +g[d2 + 708 >> 2] * +g[d2 + 732 >> 2];
            q2 = ma2;
            t2 = ma2 > 0 ? 1 : 2;
          }
          n2 = a[d2 + 737 >> 0] | 0;
          r2 = (t2 | 0) != 0;
          if (!(n2 & 255 | t2))
            return;
          s2 = (c[e2 + 24 >> 2] | 0) * 5 | 0;
          g[j2 + (s2 << 2) >> 2] = na2 * qa2;
          g[j2 + (s2 + 1 << 2) >> 2] = oa2 * qa2;
          g[j2 + (s2 + 2 << 2) >> 2] = pa2 * qa2;
          g[i2 + (s2 << 2) >> 2] = -(na2 * qa2);
          g[i2 + (s2 + 1 << 2) >> 2] = -(oa2 * qa2);
          g[i2 + (s2 + 2 << 2) >> 2] = -(pa2 * qa2);
          h2 = +g[d2 + 688 >> 2];
          k2 = +g[d2 + 692 >> 2];
          f2 = +jh(h2 - k2, 6.2831854820251465);
          if (!(f2 < -3.1415927410125732))
            if (f2 > 3.1415927410125732)
              o2 = f2 + -6.2831854820251465;
            else
              o2 = f2;
          else
            o2 = f2 + 6.2831854820251465;
          f2 = +jh(h2 + k2, 6.2831854820251465);
          if (!(f2 < -3.1415927410125732)) {
            if (f2 > 3.1415927410125732)
              f2 = f2 + -6.2831854820251465;
          } else
            f2 = f2 + 6.2831854820251465;
          j2 = o2 == f2;
          p2 = p2 + (s2 << 2) | 0;
          g[p2 >> 2] = 0;
          i2 = c[d2 + 748 >> 2] | 0;
          if (i2 & 2)
            m2 = +g[d2 + 764 >> 2];
          if (!(n2 << 24 >> 24 == 0 | r2 & j2)) {
            if (i2 & 4 | 0)
              c[(c[e2 + 32 >> 2] | 0) + (s2 << 2) >> 2] = c[d2 + 752 >> 2];
            k2 = +g[d2 + 728 >> 2];
            l2 = +g[d2 + 680 >> 2];
            h2 = o2 > f2 ? 1 : 0;
            do
              if (!(o2 >= f2)) {
                h2 = l2 / (m2 * +g[e2 >> 2]);
                if (h2 < 0)
                  if (k2 >= o2 & o2 - h2 > k2) {
                    f2 = (o2 - k2) / h2;
                    break;
                  } else {
                    f2 = k2 < o2 ? 0 : 1;
                    break;
                  }
                if (h2 > 0)
                  if (k2 <= f2 & f2 - h2 < k2) {
                    f2 = (f2 - k2) / h2;
                    break;
                  } else {
                    f2 = k2 > f2 ? 0 : 1;
                    break;
                  }
                else
                  f2 = 0;
              } else
                f2 = h2;
            while (0);
            g[p2 >> 2] = f2 * l2 * +g[d2 + 732 >> 2] + +g[p2 >> 2];
            g[(c[e2 + 36 >> 2] | 0) + (s2 << 2) >> 2] = -+g[d2 + 684 >> 2];
            c[(c[e2 + 40 >> 2] | 0) + (s2 << 2) >> 2] = c[d2 + 684 >> 2];
          }
          if (!r2)
            return;
          g[p2 >> 2] = +g[p2 >> 2] + q2 * m2 * +g[e2 >> 2];
          if (i2 & 1 | 0)
            c[(c[e2 + 32 >> 2] | 0) + (s2 << 2) >> 2] = c[d2 + 760 >> 2];
          do
            if (!j2) {
              j2 = (c[e2 + 36 >> 2] | 0) + (s2 << 2) | 0;
              i2 = c[e2 + 40 >> 2] | 0;
              if ((t2 | 0) == 1) {
                g[j2 >> 2] = 0;
                g[i2 + (s2 << 2) >> 2] = 34028234663852886e22;
                break;
              } else {
                g[j2 >> 2] = -34028234663852886e22;
                g[i2 + (s2 << 2) >> 2] = 0;
                break;
              }
            } else {
              g[(c[e2 + 36 >> 2] | 0) + (s2 << 2) >> 2] = -34028234663852886e22;
              g[(c[e2 + 40 >> 2] | 0) + (s2 << 2) >> 2] = 34028234663852886e22;
            }
          while (0);
          h2 = +g[d2 + 704 >> 2];
          do
            if (h2 > 0) {
              f2 = +g[ra2 + 368 >> 2] * na2 * qa2 + +g[ra2 + 372 >> 2] * oa2 * qa2 + +g[ra2 + 376 >> 2] * pa2 * qa2 - (na2 * qa2 * +g[sa2 + 368 >> 2] + oa2 * qa2 * +g[sa2 + 372 >> 2] + pa2 * qa2 * +g[sa2 + 376 >> 2]);
              if ((t2 | 0) == 1) {
                if (!(f2 < 0))
                  break;
                if (!(+g[p2 >> 2] < -(h2 * f2)))
                  break;
                g[p2 >> 2] = -(h2 * f2);
                break;
              } else {
                if (!(f2 > 0))
                  break;
                if (!(+g[p2 >> 2] > -(h2 * f2)))
                  break;
                g[p2 >> 2] = -(h2 * f2);
                break;
              }
            }
          while (0);
          g[p2 >> 2] = +g[d2 + 700 >> 2] * +g[p2 >> 2];
          return;
        }
        function tc(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0;
          z2 = i;
          i = i + 112 | 0;
          c[b2 + 164 >> 2] = 1065353216;
          c[b2 + 168 >> 2] = 1065353216;
          c[b2 + 172 >> 2] = 1065353216;
          g[b2 + 176 >> 2] = 0;
          c[b2 + 180 >> 2] = 0;
          g[b2 + 184 >> 2] = 999999984306749400;
          c[b2 + 188 >> 2] = 0;
          c[b2 + 188 + 4 >> 2] = 0;
          c[b2 + 188 + 8 >> 2] = 0;
          c[b2 + 188 + 12 >> 2] = 0;
          c[b2 + 204 >> 2] = 1;
          c[b2 + 208 >> 2] = -1;
          c[b2 + 212 >> 2] = -1;
          c[b2 + 216 >> 2] = 1;
          g[b2 + 220 >> 2] = 0;
          g[b2 + 224 >> 2] = 0.5;
          g[b2 + 228 >> 2] = 0;
          g[b2 + 232 >> 2] = 0;
          g[b2 + 236 >> 2] = 0;
          g[b2 + 240 >> 2] = 0.10000000149011612;
          g[b2 + 244 >> 2] = 1e4;
          c[b2 + 248 >> 2] = 1;
          c[b2 + 252 >> 2] = 0;
          c[b2 + 256 >> 2] = -1;
          c[b2 + 260 >> 2] = -1;
          g[b2 + 264 >> 2] = 1;
          g[b2 + 268 >> 2] = 0;
          g[b2 + 272 >> 2] = 0;
          c[b2 + 276 >> 2] = 0;
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          c[b2 + 288 >> 2] = 0;
          c[b2 + 300 >> 2] = 0;
          c[b2 + 4 >> 2] = 1065353216;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 8 + 4 >> 2] = 0;
          c[b2 + 8 + 8 >> 2] = 0;
          c[b2 + 8 + 12 >> 2] = 0;
          c[b2 + 24 >> 2] = 1065353216;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 28 + 4 >> 2] = 0;
          c[b2 + 28 + 8 >> 2] = 0;
          c[b2 + 28 + 12 >> 2] = 0;
          c[b2 + 44 >> 2] = 1065353216;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 48 + 4 >> 2] = 0;
          c[b2 + 48 + 8 >> 2] = 0;
          c[b2 + 48 + 12 >> 2] = 0;
          c[b2 + 48 + 16 >> 2] = 0;
          c[b2 >> 2] = 2996;
          a[b2 + 320 >> 0] = 1;
          c[b2 + 316 >> 2] = 0;
          c[b2 + 308 >> 2] = 0;
          c[b2 + 312 >> 2] = 0;
          c[b2 + 324 >> 2] = 0;
          a[b2 + 448 >> 0] = 1;
          c[b2 + 444 >> 2] = 0;
          c[b2 + 436 >> 2] = 0;
          c[b2 + 440 >> 2] = 0;
          a[b2 + 468 >> 0] = 1;
          c[b2 + 464 >> 2] = 0;
          c[b2 + 456 >> 2] = 0;
          c[b2 + 460 >> 2] = 0;
          a[b2 + 488 >> 0] = 1;
          c[b2 + 484 >> 2] = 0;
          c[b2 + 476 >> 2] = 0;
          c[b2 + 480 >> 2] = 0;
          a[b2 + 536 >> 0] = 1;
          c[b2 + 532 >> 2] = 0;
          c[b2 + 524 >> 2] = 0;
          c[b2 + 528 >> 2] = 0;
          a[b2 + 556 >> 0] = 1;
          c[b2 + 552 >> 2] = 0;
          c[b2 + 544 >> 2] = 0;
          c[b2 + 548 >> 2] = 0;
          c[b2 + 724 >> 2] = d2;
          a[b2 + 744 >> 0] = 1;
          c[b2 + 740 >> 2] = 0;
          c[b2 + 732 >> 2] = 0;
          c[b2 + 736 >> 2] = 0;
          a[b2 + 764 >> 0] = 1;
          c[b2 + 760 >> 2] = 0;
          c[b2 + 752 >> 2] = 0;
          c[b2 + 756 >> 2] = 0;
          a[b2 + 784 >> 0] = 1;
          c[b2 + 780 >> 2] = 0;
          c[b2 + 772 >> 2] = 0;
          c[b2 + 776 >> 2] = 0;
          a[b2 + 804 >> 0] = 1;
          c[b2 + 800 >> 2] = 0;
          c[b2 + 792 >> 2] = 0;
          c[b2 + 796 >> 2] = 0;
          a[b2 + 824 >> 0] = 1;
          c[b2 + 820 >> 2] = 0;
          c[b2 + 812 >> 2] = 0;
          c[b2 + 816 >> 2] = 0;
          a[b2 + 844 >> 0] = 1;
          c[b2 + 840 >> 2] = 0;
          c[b2 + 832 >> 2] = 0;
          c[b2 + 836 >> 2] = 0;
          a[b2 + 864 >> 0] = 1;
          c[b2 + 860 >> 2] = 0;
          c[b2 + 852 >> 2] = 0;
          c[b2 + 856 >> 2] = 0;
          a[b2 + 884 >> 0] = 1;
          c[b2 + 880 >> 2] = 0;
          c[b2 + 872 >> 2] = 0;
          c[b2 + 876 >> 2] = 0;
          a[b2 + 904 >> 0] = 1;
          c[b2 + 900 >> 2] = 0;
          c[b2 + 892 >> 2] = 0;
          c[b2 + 896 >> 2] = 0;
          a[b2 + 924 >> 0] = 1;
          c[b2 + 920 >> 2] = 0;
          c[b2 + 912 >> 2] = 0;
          c[b2 + 916 >> 2] = 0;
          a[b2 + 1004 >> 0] = 1;
          c[b2 + 1e3 >> 2] = 0;
          c[b2 + 992 >> 2] = 0;
          c[b2 + 996 >> 2] = 0;
          a[b2 + 1024 >> 0] = 1;
          c[b2 + 1020 >> 2] = 0;
          c[b2 + 1012 >> 2] = 0;
          c[b2 + 1016 >> 2] = 0;
          c[b2 + 968 >> 2] = 0;
          c[b2 + 972 >> 2] = 0;
          c[b2 + 976 >> 2] = -1;
          c[b2 + 980 >> 2] = 0;
          c[b2 + 984 >> 2] = 0;
          a[b2 + 1064 >> 0] = 1;
          c[b2 + 1060 >> 2] = 0;
          c[b2 + 1052 >> 2] = 0;
          c[b2 + 1056 >> 2] = 0;
          a[b2 + 1084 >> 0] = 1;
          c[b2 + 1080 >> 2] = 0;
          c[b2 + 1072 >> 2] = 0;
          c[b2 + 1076 >> 2] = 0;
          c[b2 + 1028 >> 2] = 0;
          c[b2 + 1032 >> 2] = 0;
          c[b2 + 1036 >> 2] = -1;
          c[b2 + 1040 >> 2] = 0;
          c[b2 + 1044 >> 2] = 0;
          a[b2 + 1124 >> 0] = 1;
          c[b2 + 1120 >> 2] = 0;
          c[b2 + 1112 >> 2] = 0;
          c[b2 + 1116 >> 2] = 0;
          a[b2 + 1144 >> 0] = 1;
          c[b2 + 1140 >> 2] = 0;
          c[b2 + 1132 >> 2] = 0;
          c[b2 + 1136 >> 2] = 0;
          c[b2 + 1088 >> 2] = 0;
          c[b2 + 1092 >> 2] = 0;
          c[b2 + 1096 >> 2] = -1;
          c[b2 + 1100 >> 2] = 0;
          c[b2 + 1104 >> 2] = 0;
          a[b2 + 1164 >> 0] = 1;
          c[b2 + 1160 >> 2] = 0;
          c[b2 + 1152 >> 2] = 0;
          c[b2 + 1156 >> 2] = 0;
          a[b2 + 1184 >> 0] = 1;
          c[b2 + 1180 >> 2] = 0;
          c[b2 + 1172 >> 2] = 0;
          c[b2 + 1176 >> 2] = 0;
          a[b2 + 1288 >> 0] = 1;
          c[b2 + 1284 >> 2] = 0;
          c[b2 + 1276 >> 2] = 0;
          c[b2 + 1280 >> 2] = 0;
          c[b2 + 248 >> 2] = 8;
          c[b2 + 328 >> 2] = 0;
          g[b2 + 332 >> 2] = 1;
          c[b2 + 336 >> 2] = 0;
          c[b2 + 336 + 4 >> 2] = 0;
          c[b2 + 336 + 8 >> 2] = 0;
          c[b2 + 336 + 12 >> 2] = 0;
          c[b2 + 336 + 16 >> 2] = 0;
          g[b2 + 356 >> 2] = 0.20000000298023224;
          g[b2 + 360 >> 2] = 0;
          g[b2 + 364 >> 2] = 1;
          g[b2 + 368 >> 2] = 0.10000000149011612;
          g[b2 + 372 >> 2] = 1;
          g[b2 + 376 >> 2] = 0.699999988079071;
          g[b2 + 380 >> 2] = 0.10000000149011612;
          g[b2 + 384 >> 2] = 1;
          g[b2 + 388 >> 2] = 0.5;
          g[b2 + 392 >> 2] = 0.5;
          g[b2 + 396 >> 2] = 0.5;
          g[b2 + 400 >> 2] = 0.5;
          g[b2 + 404 >> 2] = 1;
          g[b2 + 408 >> 2] = 1;
          c[b2 + 412 >> 2] = 0;
          c[b2 + 416 >> 2] = 1;
          c[b2 + 420 >> 2] = 0;
          c[b2 + 424 >> 2] = 4;
          c[b2 + 428 >> 2] = 1;
          a[b2 + 512 >> 0] = 0;
          a[b2 + 513 >> 0] = 0;
          g[b2 + 516 >> 2] = 0;
          c[b2 + 560 >> 2] = 0;
          c[b2 + 560 + 4 >> 2] = 0;
          c[b2 + 560 + 8 >> 2] = 0;
          c[b2 + 560 + 12 >> 2] = 0;
          c[b2 + 576 >> 2] = 1065353216;
          c[b2 + 580 >> 2] = 0;
          c[b2 + 580 + 4 >> 2] = 0;
          c[b2 + 580 + 8 >> 2] = 0;
          c[b2 + 580 + 12 >> 2] = 0;
          c[b2 + 596 >> 2] = 1065353216;
          c[b2 + 600 >> 2] = 0;
          c[b2 + 600 + 4 >> 2] = 0;
          c[b2 + 600 + 8 >> 2] = 0;
          c[b2 + 600 + 12 >> 2] = 0;
          c[b2 + 616 >> 2] = 1065353216;
          g[b2 + 620 >> 2] = 0;
          c[b2 + 624 >> 2] = 1065353216;
          c[b2 + 628 >> 2] = 0;
          c[b2 + 628 + 4 >> 2] = 0;
          c[b2 + 628 + 8 >> 2] = 0;
          c[b2 + 628 + 12 >> 2] = 0;
          c[b2 + 644 >> 2] = 1065353216;
          c[b2 + 648 >> 2] = 0;
          c[b2 + 648 + 4 >> 2] = 0;
          c[b2 + 648 + 8 >> 2] = 0;
          c[b2 + 648 + 12 >> 2] = 0;
          c[b2 + 664 >> 2] = 1065353216;
          g[b2 + 668 >> 2] = 0;
          c[b2 + 720 >> 2] = 0;
          g[b2 + 928 >> 2] = 0;
          a[b2 + 964 >> 0] = 1;
          c[b2 + 932 >> 2] = 0;
          c[b2 + 932 + 4 >> 2] = 0;
          c[b2 + 932 + 8 >> 2] = 0;
          c[b2 + 932 + 12 >> 2] = 0;
          c[b2 + 932 + 16 >> 2] = 0;
          c[b2 + 932 + 20 >> 2] = 0;
          c[b2 + 932 + 24 >> 2] = 0;
          c[b2 + 932 + 28 >> 2] = 0;
          c[b2 + 4 >> 2] = 1065353216;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 8 + 4 >> 2] = 0;
          c[b2 + 8 + 8 >> 2] = 0;
          c[b2 + 8 + 12 >> 2] = 0;
          c[b2 + 24 >> 2] = 1065353216;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 28 + 4 >> 2] = 0;
          c[b2 + 28 + 8 >> 2] = 0;
          c[b2 + 28 + 12 >> 2] = 0;
          c[b2 + 44 >> 2] = 1065353216;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 48 + 4 >> 2] = 0;
          c[b2 + 48 + 8 >> 2] = 0;
          c[b2 + 48 + 12 >> 2] = 0;
          c[b2 + 48 + 16 >> 2] = 0;
          d2 = c[b2 + 444 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 448 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 444 >> 2] = 0;
          }
          a[b2 + 448 >> 0] = 1;
          c[b2 + 444 >> 2] = 0;
          c[b2 + 436 >> 2] = 0;
          c[b2 + 440 >> 2] = 0;
          d2 = c[b2 + 464 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 468 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 464 >> 2] = 0;
          }
          a[b2 + 468 >> 0] = 1;
          c[b2 + 464 >> 2] = 0;
          c[b2 + 456 >> 2] = 0;
          c[b2 + 460 >> 2] = 0;
          d2 = c[b2 + 484 >> 2] | 0;
          do
            if (d2)
              if (a[b2 + 488 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[d2 + -4 >> 2] | 0);
                j2 = c[b2 + 456 >> 2] | 0;
                d2 = c[b2 + 460 >> 2] | 0;
                c[b2 + 484 >> 2] = 0;
                a[b2 + 488 >> 0] = 1;
                c[b2 + 484 >> 2] = 0;
                c[b2 + 476 >> 2] = 0;
                c[b2 + 480 >> 2] = 0;
                if ((j2 | 0) == (d2 | 0)) {
                  s2 = 14;
                  break;
                } else
                  break;
              } else {
                c[b2 + 484 >> 2] = 0;
                a[b2 + 488 >> 0] = 1;
                c[b2 + 484 >> 2] = 0;
                c[b2 + 476 >> 2] = 0;
                c[b2 + 480 >> 2] = 0;
                d2 = 0;
                s2 = 14;
                break;
              }
            else {
              a[b2 + 488 >> 0] = 1;
              c[b2 + 484 >> 2] = 0;
              c[b2 + 476 >> 2] = 0;
              c[b2 + 480 >> 2] = 0;
              d2 = 0;
              s2 = 14;
            }
          while (0);
          if ((s2 | 0) == 14) {
            o2 = d2 | 0 ? d2 << 1 : 1;
            if ((d2 | 0) < (o2 | 0)) {
              if (!o2)
                m2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic((o2 << 2 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                m2 = d2;
                d2 = c[b2 + 456 >> 2] | 0;
              }
              k2 = c[b2 + 464 >> 2] | 0;
              if ((d2 | 0) <= 0) {
                if (k2)
                  s2 = 22;
              } else {
                j2 = 0;
                do {
                  c[m2 + (j2 << 2) >> 2] = c[k2 + (j2 << 2) >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (d2 | 0));
                s2 = 22;
              }
              if ((s2 | 0) == 22) {
                if (a[b2 + 468 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[k2 + -4 >> 2] | 0);
                  d2 = c[b2 + 456 >> 2] | 0;
                }
                c[b2 + 464 >> 2] = 0;
              }
              a[b2 + 468 >> 0] = 1;
              c[b2 + 464 >> 2] = m2;
              c[b2 + 460 >> 2] = o2;
              j2 = d2;
              d2 = o2;
            } else
              j2 = d2;
          }
          k2 = c[b2 + 464 >> 2] | 0;
          c[k2 + (j2 << 2) >> 2] = 1;
          j2 = j2 + 1 | 0;
          c[b2 + 456 >> 2] = j2;
          if ((j2 | 0) == (d2 | 0)) {
            o2 = d2 | 0 ? d2 << 1 : 1;
            if ((d2 | 0) < (o2 | 0)) {
              if (!o2)
                m2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic((o2 << 2 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                m2 = d2;
                d2 = c[b2 + 456 >> 2] | 0;
                k2 = c[b2 + 464 >> 2] | 0;
              }
              if ((d2 | 0) <= 0) {
                if (k2)
                  s2 = 35;
              } else {
                j2 = 0;
                do {
                  c[m2 + (j2 << 2) >> 2] = c[k2 + (j2 << 2) >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (d2 | 0));
                s2 = 35;
              }
              if ((s2 | 0) == 35) {
                if (a[b2 + 468 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[k2 + -4 >> 2] | 0);
                  d2 = c[b2 + 456 >> 2] | 0;
                }
                c[b2 + 464 >> 2] = 0;
              }
              a[b2 + 468 >> 0] = 1;
              c[b2 + 464 >> 2] = m2;
              c[b2 + 460 >> 2] = o2;
              k2 = m2;
              j2 = d2;
              d2 = o2;
            } else
              j2 = d2;
          }
          c[k2 + (j2 << 2) >> 2] = 2;
          j2 = j2 + 1 | 0;
          c[b2 + 456 >> 2] = j2;
          if ((j2 | 0) == (d2 | 0)) {
            o2 = d2 | 0 ? d2 << 1 : 1;
            if ((d2 | 0) < (o2 | 0)) {
              if (!o2)
                m2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic((o2 << 2 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                m2 = d2;
                d2 = c[b2 + 456 >> 2] | 0;
                k2 = c[b2 + 464 >> 2] | 0;
              }
              if ((d2 | 0) <= 0) {
                if (k2)
                  s2 = 48;
              } else {
                j2 = 0;
                do {
                  c[m2 + (j2 << 2) >> 2] = c[k2 + (j2 << 2) >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (d2 | 0));
                s2 = 48;
              }
              if ((s2 | 0) == 48) {
                if (a[b2 + 468 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[k2 + -4 >> 2] | 0);
                  d2 = c[b2 + 456 >> 2] | 0;
                }
                c[b2 + 464 >> 2] = 0;
              }
              a[b2 + 468 >> 0] = 1;
              c[b2 + 464 >> 2] = m2;
              c[b2 + 460 >> 2] = o2;
              j2 = d2;
              d2 = o2;
            } else {
              m2 = k2;
              j2 = d2;
            }
          } else
            m2 = k2;
          c[m2 + (j2 << 2) >> 2] = 3;
          j2 = j2 + 1 | 0;
          c[b2 + 456 >> 2] = j2;
          if ((j2 | 0) == (d2 | 0)) {
            o2 = d2 | 0 ? d2 << 1 : 1;
            if ((d2 | 0) < (o2 | 0)) {
              if (!o2)
                k2 = 0;
              else {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic((o2 << 2 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                k2 = d2;
                d2 = c[b2 + 456 >> 2] | 0;
                m2 = c[b2 + 464 >> 2] | 0;
              }
              if ((d2 | 0) <= 0) {
                if (m2)
                  s2 = 61;
              } else {
                j2 = 0;
                do {
                  c[k2 + (j2 << 2) >> 2] = c[m2 + (j2 << 2) >> 2];
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (d2 | 0));
                s2 = 61;
              }
              if ((s2 | 0) == 61) {
                if (a[b2 + 468 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[m2 + -4 >> 2] | 0);
                  d2 = c[b2 + 456 >> 2] | 0;
                }
                c[b2 + 464 >> 2] = 0;
              }
              a[b2 + 468 >> 0] = 1;
              c[b2 + 464 >> 2] = k2;
              c[b2 + 460 >> 2] = o2;
            } else
              k2 = m2;
          } else {
            k2 = m2;
            d2 = j2;
          }
          c[k2 + (d2 << 2) >> 2] = 0;
          c[b2 + 456 >> 2] = d2 + 1;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(43) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = -1;
          c[d2 >> 2] = 3104;
          c[d2 + 4 >> 2] = 32;
          c[d2 + 20 >> 2] = b2;
          c[b2 + 192 >> 2] = d2;
          g[d2 + 16 >> 2] = 0.25;
          c[b2 + 1188 >> 2] = 1065353216;
          c[b2 + 1192 >> 2] = 0;
          c[b2 + 1192 + 4 >> 2] = 0;
          c[b2 + 1192 + 8 >> 2] = 0;
          c[b2 + 1192 + 12 >> 2] = 0;
          c[b2 + 1208 >> 2] = 1065353216;
          c[b2 + 1212 >> 2] = 0;
          c[b2 + 1212 + 4 >> 2] = 0;
          c[b2 + 1212 + 8 >> 2] = 0;
          c[b2 + 1212 + 12 >> 2] = 0;
          c[b2 + 1228 >> 2] = 1065353216;
          s2 = b2 + 1232 | 0;
          t2 = s2 + 36 | 0;
          do {
            c[s2 >> 2] = 0;
            s2 = s2 + 4 | 0;
          } while ((s2 | 0) < (t2 | 0));
          g[b2 + 1268 >> 2] = 1;
          x2 = bh(b2) | 0;
          g[x2 + 4 >> 2] = 1;
          g[x2 + 8 >> 2] = 1;
          g[x2 + 12 >> 2] = 1;
          c[x2 + 16 >> 2] = 1;
          s2 = c[b2 + 192 >> 2] | 0;
          y2 = +Cb[c[(c[s2 >> 2] | 0) + 48 >> 2] & 15](s2);
          s2 = z2;
          t2 = s2 + 100 | 0;
          do {
            c[s2 >> 2] = 0;
            s2 = s2 + 4 | 0;
          } while ((s2 | 0) < (t2 | 0));
          o2 = c[b2 + 752 >> 2] | 0;
          if ((o2 | 0) < (e2 | 0)) {
            if ((c[b2 + 756 >> 2] | 0) < (e2 | 0)) {
              if (!e2) {
                d2 = 0;
                k2 = o2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic((e2 * 104 | 3) + 16 | 0) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                k2 = c[b2 + 752 >> 2] | 0;
              }
              if ((k2 | 0) > 0) {
                j2 = 0;
                do {
                  s2 = d2 + (j2 * 104 | 0) | 0;
                  m2 = (c[b2 + 760 >> 2] | 0) + (j2 * 104 | 0) | 0;
                  t2 = s2 + 104 | 0;
                  do {
                    c[s2 >> 2] = c[m2 >> 2];
                    s2 = s2 + 4 | 0;
                    m2 = m2 + 4 | 0;
                  } while ((s2 | 0) < (t2 | 0));
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (k2 | 0));
              }
              j2 = c[b2 + 760 >> 2] | 0;
              if (j2 | 0) {
                if (a[b2 + 764 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[j2 + -4 >> 2] | 0);
                }
                c[b2 + 760 >> 2] = 0;
              }
              a[b2 + 764 >> 0] = 1;
              c[b2 + 760 >> 2] = d2;
              c[b2 + 756 >> 2] = e2;
              d2 = o2;
            } else
              d2 = o2;
            do {
              s2 = c[b2 + 760 >> 2] | 0;
              c[s2 + (d2 * 104 | 0) >> 2] = 0;
              s2 = s2 + (d2 * 104 | 0) + 4 | 0;
              m2 = z2;
              t2 = s2 + 100 | 0;
              do {
                c[s2 >> 2] = c[m2 >> 2];
                s2 = s2 + 4 | 0;
                m2 = m2 + 4 | 0;
              } while ((s2 | 0) < (t2 | 0));
              d2 = d2 + 1 | 0;
            } while ((d2 | 0) != (e2 | 0));
          }
          c[b2 + 752 >> 2] = e2;
          if ((e2 | 0) > 0) {
            o2 = f2;
            f2 = 0;
            while (1) {
              v2 = c[b2 + 760 >> 2] | 0;
              w2 = v2 + (f2 * 104 | 0) | 0;
              s2 = w2;
              t2 = s2 + 104 | 0;
              do {
                c[s2 >> 2] = 0;
                s2 = s2 + 4 | 0;
              } while ((s2 | 0) < (t2 | 0));
              j2 = v2 + (f2 * 104 | 0) + 8 | 0;
              if (!o2) {
                u2 = 0;
                d2 = 0;
                k2 = 0;
                m2 = 0;
                n2 = 0;
              } else {
                u2 = o2 + 16 | 0;
                d2 = c[o2 >> 2] | 0;
                k2 = c[o2 + 4 >> 2] | 0;
                m2 = c[o2 + 8 >> 2] | 0;
                n2 = +g[o2 + 12 >> 2];
              }
              c[j2 >> 2] = d2;
              c[v2 + (f2 * 104 | 0) + 12 >> 2] = k2;
              c[v2 + (f2 * 104 | 0) + 16 >> 2] = m2;
              g[v2 + (f2 * 104 | 0) + 20 >> 2] = n2;
              t2 = v2 + (f2 * 104 | 0) + 24 | 0;
              c[t2 >> 2] = c[j2 >> 2];
              c[t2 + 4 >> 2] = c[j2 + 4 >> 2];
              c[t2 + 8 >> 2] = c[j2 + 8 >> 2];
              c[t2 + 12 >> 2] = c[j2 + 12 >> 2];
              r2 = (c[l >> 2] = d2, +g[l >> 2]);
              q2 = (c[l >> 2] = k2, +g[l >> 2]);
              p2 = (c[l >> 2] = m2, +g[l >> 2]);
              if (!h2) {
                j2 = 0;
                n2 = 1;
              } else {
                j2 = h2 + 4 | 0;
                n2 = +g[h2 >> 2];
              }
              g[v2 + (f2 * 104 | 0) + 88 >> 2] = n2 > 0 ? 1 / n2 : 0;
              d2 = c[b2 + 972 >> 2] | 0;
              if (!d2) {
                c[6324] = (c[6324] | 0) + 1;
                d2 = ic(63) | 0;
                if (!d2)
                  d2 = 0;
                else {
                  c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                  d2 = d2 + 4 + 15 & -16;
                }
                s2 = d2;
                t2 = s2 + 44 | 0;
                do {
                  c[s2 >> 2] = 0;
                  s2 = s2 + 4 | 0;
                } while ((s2 | 0) < (t2 | 0));
              } else
                c[b2 + 972 >> 2] = 0;
              c[d2 + 32 >> 2] = 0;
              c[d2 + 36 >> 2] = w2;
              c[d2 + 40 >> 2] = 0;
              g[d2 >> 2] = r2 - y2;
              g[d2 + 4 >> 2] = q2 - y2;
              g[d2 + 8 >> 2] = p2 - y2;
              g[d2 + 12 >> 2] = 0;
              g[d2 + 16 >> 2] = y2 + r2;
              g[d2 + 20 >> 2] = y2 + q2;
              g[d2 + 24 >> 2] = y2 + p2;
              g[d2 + 28 >> 2] = 0;
              Ze(b2 + 968 | 0, c[b2 + 968 >> 2] | 0, d2);
              c[b2 + 980 >> 2] = (c[b2 + 980 >> 2] | 0) + 1;
              c[v2 + (f2 * 104 | 0) + 96 >> 2] = d2;
              c[v2 + (f2 * 104 | 0) + 4 >> 2] = x2;
              f2 = f2 + 1 | 0;
              if ((f2 | 0) == (e2 | 0))
                break;
              else {
                o2 = u2;
                h2 = j2;
              }
            }
          }
          d2 = c[b2 + 968 >> 2] | 0;
          if (!d2) {
            c[b2 + 932 >> 2] = 0;
            c[b2 + 932 + 4 >> 2] = 0;
            c[b2 + 932 + 8 >> 2] = 0;
            c[b2 + 932 + 12 >> 2] = 0;
            c[b2 + 932 + 16 >> 2] = 0;
            c[b2 + 932 + 20 >> 2] = 0;
            c[b2 + 932 + 24 >> 2] = 0;
            c[b2 + 932 + 28 >> 2] = 0;
            i = z2;
            return;
          }
          e2 = c[b2 + 192 >> 2] | 0;
          q2 = +Cb[c[(c[e2 >> 2] | 0) + 48 >> 2] & 15](e2);
          y2 = +g[d2 + 4 >> 2] - q2;
          r2 = +g[d2 + 8 >> 2] - q2;
          g[b2 + 932 >> 2] = +g[d2 >> 2] - q2;
          g[b2 + 936 >> 2] = y2;
          g[b2 + 940 >> 2] = r2;
          g[b2 + 944 >> 2] = 0;
          r2 = q2 + +g[d2 + 20 >> 2];
          y2 = q2 + +g[d2 + 24 >> 2];
          g[b2 + 948 >> 2] = q2 + +g[d2 + 16 >> 2];
          g[b2 + 952 >> 2] = r2;
          g[b2 + 956 >> 2] = y2;
          g[b2 + 960 >> 2] = 0;
          d2 = c[b2 + 188 >> 2] | 0;
          if (!d2) {
            i = z2;
            return;
          }
          e2 = c[b2 + 724 >> 2] | 0;
          x2 = c[e2 + 32 >> 2] | 0;
          ib[c[(c[x2 >> 2] | 0) + 16 >> 2] & 31](x2, d2, b2 + 932 | 0, b2 + 948 | 0, c[e2 + 36 >> 2] | 0);
          i = z2;
          return;
        }
        function uc(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0;
          S2 = i;
          i = i + 240 | 0;
          g[b2 + 56 >> 2] = 0;
          K2 = S2 + 224 + 4 | 0;
          L2 = S2 + 224 + 8 | 0;
          c[S2 + 224 >> 2] = 0;
          c[S2 + 224 + 4 >> 2] = 0;
          c[S2 + 224 + 8 >> 2] = 0;
          c[S2 + 224 + 12 >> 2] = 0;
          c[S2 + 160 >> 2] = c[d2 >> 2];
          c[S2 + 160 + 4 >> 2] = c[d2 + 4 >> 2];
          c[S2 + 160 + 8 >> 2] = c[d2 + 8 >> 2];
          c[S2 + 160 + 12 >> 2] = c[d2 + 12 >> 2];
          c[S2 + 160 + 16 >> 2] = c[d2 + 16 >> 2];
          c[S2 + 160 + 16 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[S2 + 160 + 16 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[S2 + 160 + 16 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[S2 + 160 + 32 >> 2] = c[d2 + 32 >> 2];
          c[S2 + 160 + 32 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[S2 + 160 + 32 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[S2 + 160 + 32 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          B2 = S2 + 160 + 48 | 0;
          c[B2 >> 2] = c[d2 + 48 >> 2];
          c[B2 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[B2 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[B2 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          c[S2 + 96 >> 2] = c[d2 + 64 >> 2];
          c[S2 + 96 + 4 >> 2] = c[d2 + 64 + 4 >> 2];
          c[S2 + 96 + 8 >> 2] = c[d2 + 64 + 8 >> 2];
          c[S2 + 96 + 12 >> 2] = c[d2 + 64 + 12 >> 2];
          c[S2 + 96 + 16 >> 2] = c[d2 + 80 >> 2];
          c[S2 + 96 + 16 + 4 >> 2] = c[d2 + 80 + 4 >> 2];
          c[S2 + 96 + 16 + 8 >> 2] = c[d2 + 80 + 8 >> 2];
          c[S2 + 96 + 16 + 12 >> 2] = c[d2 + 80 + 12 >> 2];
          c[S2 + 96 + 32 >> 2] = c[d2 + 96 >> 2];
          c[S2 + 96 + 32 + 4 >> 2] = c[d2 + 96 + 4 >> 2];
          c[S2 + 96 + 32 + 8 >> 2] = c[d2 + 96 + 8 >> 2];
          c[S2 + 96 + 32 + 12 >> 2] = c[d2 + 96 + 12 >> 2];
          C2 = S2 + 96 + 48 | 0;
          c[C2 >> 2] = c[d2 + 112 >> 2];
          c[C2 + 4 >> 2] = c[d2 + 112 + 4 >> 2];
          c[C2 + 8 >> 2] = c[d2 + 112 + 8 >> 2];
          c[C2 + 12 >> 2] = c[d2 + 112 + 12 >> 2];
          M2 = +g[B2 >> 2];
          N2 = +g[C2 >> 2];
          F2 = S2 + 160 + 52 | 0;
          O2 = +g[F2 >> 2];
          H2 = S2 + 96 + 52 | 0;
          P2 = +g[H2 >> 2];
          I2 = S2 + 160 + 56 | 0;
          Q2 = +g[I2 >> 2];
          J2 = S2 + 96 + 56 | 0;
          R2 = +g[J2 >> 2];
          g[B2 >> 2] = M2 - (M2 + N2) * 0.5;
          g[F2 >> 2] = O2 - (O2 + P2) * 0.5;
          g[I2 >> 2] = Q2 - (Q2 + R2) * 0.5;
          g[C2 >> 2] = N2 - (M2 + N2) * 0.5;
          g[H2 >> 2] = P2 - (O2 + P2) * 0.5;
          g[J2 >> 2] = R2 - (Q2 + R2) * 0.5;
          if (((c[(c[b2 + 28 >> 2] | 0) + 4 >> 2] | 0) + -17 | 0) >>> 0 < 2)
            B2 = ((c[(c[b2 + 32 >> 2] | 0) + 4 >> 2] | 0) + -17 | 0) >>> 0 < 2;
          else
            B2 = 0;
          v2 = +g[b2 + 44 >> 2];
          u2 = +g[b2 + 48 >> 2];
          c[6068] = (c[6068] | 0) + 1;
          C2 = a[b2 + 52 >> 0] | 0;
          c[b2 + 64 >> 2] = 0;
          c[b2 + 4 >> 2] = 0;
          c[b2 + 8 >> 2] = 1065353216;
          c[b2 + 12 >> 2] = 0;
          g[b2 + 16 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 60 >> 2] = -1;
          n2 = c[b2 + 24 >> 2] | 0;
          a[n2 + 312 >> 0] = 0;
          c[n2 >> 2] = 0;
          a[n2 + 356 >> 0] = 1;
          c[n2 + 292 >> 2] = 1566444395;
          c[n2 + 296 >> 2] = 1566444395;
          c[n2 + 300 >> 2] = 1566444395;
          g[n2 + 304 >> 2] = 0;
          c[n2 + 336 >> 2] = 0;
          c[n2 + 336 + 4 >> 2] = 0;
          c[n2 + 336 + 8 >> 2] = 0;
          c[n2 + 336 + 12 >> 2] = 0;
          a[n2 + 336 + 16 >> 0] = 0;
          a[n2 + 332 >> 0] = a[n2 + 332 >> 0] & -16;
          n2 = 0;
          q2 = 999999984306749400;
          do {
            p2 = +g[b2 + 4 >> 2];
            o2 = +g[b2 + 8 >> 2];
            k2 = +g[b2 + 12 >> 2];
            l2 = +g[d2 + 4 >> 2] * -p2 + +g[d2 + 20 >> 2] * -o2 + +g[d2 + 36 >> 2] * -k2;
            m2 = +g[d2 + 8 >> 2] * -p2 + +g[d2 + 24 >> 2] * -o2 + +g[d2 + 40 >> 2] * -k2;
            g[S2 + 80 >> 2] = +g[d2 >> 2] * -p2 + +g[d2 + 16 >> 2] * -o2 + +g[d2 + 32 >> 2] * -k2;
            g[S2 + 80 + 4 >> 2] = l2;
            g[S2 + 80 + 8 >> 2] = m2;
            g[S2 + 80 + 12 >> 2] = 0;
            m2 = p2 * +g[d2 + 68 >> 2] + o2 * +g[d2 + 84 >> 2] + k2 * +g[d2 + 100 >> 2];
            l2 = p2 * +g[d2 + 72 >> 2] + o2 * +g[d2 + 88 >> 2] + k2 * +g[d2 + 104 >> 2];
            g[S2 + 64 >> 2] = +g[d2 + 64 >> 2] * p2 + +g[d2 + 80 >> 2] * o2 + +g[d2 + 96 >> 2] * k2;
            g[S2 + 64 + 4 >> 2] = m2;
            g[S2 + 64 + 8 >> 2] = l2;
            g[S2 + 64 + 12 >> 2] = 0;
            sd(S2 + 48 | 0, c[b2 + 28 >> 2] | 0, S2 + 80 | 0);
            sd(S2 + 32 | 0, c[b2 + 32 >> 2] | 0, S2 + 64 | 0);
            l2 = +g[S2 + 48 >> 2];
            m2 = +g[S2 + 48 + 4 >> 2];
            k2 = +g[S2 + 48 + 8 >> 2];
            o2 = l2 * +g[S2 + 160 >> 2] + m2 * +g[S2 + 160 + 4 >> 2] + k2 * +g[S2 + 160 + 8 >> 2] + +g[S2 + 160 + 48 >> 2];
            p2 = l2 * +g[S2 + 160 + 16 >> 2] + m2 * +g[S2 + 160 + 20 >> 2] + k2 * +g[S2 + 160 + 24 >> 2] + +g[F2 >> 2];
            k2 = l2 * +g[S2 + 160 + 32 >> 2] + m2 * +g[S2 + 160 + 36 >> 2] + k2 * +g[S2 + 160 + 40 >> 2] + +g[I2 >> 2];
            m2 = +g[S2 + 32 >> 2];
            l2 = +g[S2 + 32 + 4 >> 2];
            t2 = +g[S2 + 32 + 8 >> 2];
            r2 = m2 * +g[S2 + 96 >> 2] + l2 * +g[S2 + 96 + 4 >> 2] + t2 * +g[S2 + 96 + 8 >> 2] + +g[S2 + 96 + 48 >> 2];
            s2 = m2 * +g[S2 + 96 + 16 >> 2] + l2 * +g[S2 + 96 + 20 >> 2] + t2 * +g[S2 + 96 + 24 >> 2] + +g[H2 >> 2];
            t2 = m2 * +g[S2 + 96 + 32 >> 2] + l2 * +g[S2 + 96 + 36 >> 2] + t2 * +g[S2 + 96 + 40 >> 2] + +g[J2 >> 2];
            l2 = B2 ? 0 : t2;
            m2 = B2 ? 0 : k2;
            t2 = (B2 ? 0 : k2) - (B2 ? 0 : t2);
            k2 = +g[b2 + 4 >> 2] * (o2 - r2) + +g[b2 + 8 >> 2] * (p2 - s2) + +g[b2 + 12 >> 2] * t2;
            if (k2 > 0 ? k2 * k2 > q2 * +g[d2 + 128 >> 2] : 0) {
              c[b2 + 68 >> 2] = 10;
              n2 = 1;
              h2 = 0;
            } else
              T2 = 7;
            do
              if ((T2 | 0) == 7) {
                T2 = 0;
                w2 = c[b2 + 24 >> 2] | 0;
                x2 = c[w2 >> 2] | 0;
                a:
                  do
                    if ((x2 | 0) > 0) {
                      j2 = +g[w2 + 308 >> 2];
                      h2 = 0;
                      while (1) {
                        z2 = o2 - r2 - +g[w2 + 4 + (h2 << 4) >> 2];
                        A2 = p2 - s2 - +g[w2 + 4 + (h2 << 4) + 4 >> 2];
                        D2 = t2 - +g[w2 + 4 + (h2 << 4) + 8 >> 2];
                        h2 = h2 + 1 | 0;
                        if (z2 * z2 + A2 * A2 + D2 * D2 <= j2) {
                          h2 = 1;
                          break a;
                        }
                        if ((h2 | 0) >= (x2 | 0)) {
                          h2 = 0;
                          break;
                        }
                      }
                    } else
                      h2 = 0;
                  while (0);
                if ((+g[w2 + 304 >> 2] == 0 ? t2 == +g[w2 + 300 >> 2] : 0) ? p2 - s2 == +g[w2 + 296 >> 2] : 0) {
                  if (o2 - r2 == +g[w2 + 292 >> 2] | h2)
                    T2 = 16;
                } else
                  T2 = 15;
                if ((T2 | 0) == 15 ? (T2 = 0, h2) : 0)
                  T2 = 16;
                if ((T2 | 0) == 16) {
                  T2 = 0;
                  c[b2 + 68 >> 2] = 1;
                  n2 = 1;
                  h2 = 0;
                  break;
                }
                j2 = q2 - k2;
                if (j2 <= q2 * 9999999974752427e-22) {
                  c[b2 + 68 >> 2] = !(j2 <= 0) ? 11 : 2;
                  n2 = 1;
                  h2 = 0;
                  break;
                }
                g[w2 + 292 >> 2] = o2 - r2;
                g[w2 + 296 >> 2] = p2 - s2;
                g[w2 + 300 >> 2] = t2;
                g[w2 + 304 >> 2] = 0;
                a[w2 + 356 >> 0] = 1;
                g[w2 + 4 + (x2 << 4) >> 2] = o2 - r2;
                g[w2 + 4 + (x2 << 4) + 4 >> 2] = p2 - s2;
                g[w2 + 4 + (x2 << 4) + 8 >> 2] = t2;
                g[w2 + 4 + (x2 << 4) + 12 >> 2] = 0;
                h2 = c[w2 >> 2] | 0;
                g[w2 + 84 + (h2 << 4) >> 2] = o2;
                g[w2 + 84 + (h2 << 4) + 4 >> 2] = p2;
                g[w2 + 84 + (h2 << 4) + 8 >> 2] = m2;
                g[w2 + 84 + (h2 << 4) + 12 >> 2] = 0;
                h2 = c[w2 >> 2] | 0;
                g[w2 + 164 + (h2 << 4) >> 2] = r2;
                g[w2 + 164 + (h2 << 4) + 4 >> 2] = s2;
                g[w2 + 164 + (h2 << 4) + 8 >> 2] = l2;
                g[w2 + 164 + (h2 << 4) + 12 >> 2] = 0;
                c[w2 >> 2] = (c[w2 >> 2] | 0) + 1;
                h2 = c[b2 + 24 >> 2] | 0;
                x2 = Hc(h2) | 0;
                j2 = +g[h2 + 276 >> 2];
                k2 = +g[h2 + 280 >> 2];
                l2 = +g[h2 + 284 >> 2];
                h2 = c[h2 + 288 >> 2] | 0;
                if (!x2) {
                  c[b2 + 68 >> 2] = 3;
                  n2 = 1;
                  h2 = 0;
                  break;
                }
                if (j2 * j2 + k2 * k2 + l2 * l2 < 9999999974752427e-22) {
                  g[b2 + 4 >> 2] = j2;
                  g[b2 + 8 >> 2] = k2;
                  g[b2 + 12 >> 2] = l2;
                  c[b2 + 16 >> 2] = h2;
                  c[b2 + 68 >> 2] = 6;
                  n2 = 1;
                  h2 = 0;
                  break;
                }
                if (q2 - (j2 * j2 + k2 * k2 + l2 * l2) <= q2 * 11920928955078125e-23) {
                  c[b2 + 68 >> 2] = 12;
                  q2 = j2 * j2 + k2 * k2 + l2 * l2;
                  n2 = 1;
                  h2 = 0;
                  break;
                }
                g[b2 + 4 >> 2] = j2;
                g[b2 + 8 >> 2] = k2;
                g[b2 + 12 >> 2] = l2;
                c[b2 + 16 >> 2] = h2;
                x2 = c[b2 + 64 >> 2] | 0;
                c[b2 + 64 >> 2] = x2 + 1;
                if ((x2 | 0) <= 1e3)
                  if ((c[c[b2 + 24 >> 2] >> 2] | 0) == 4) {
                    c[b2 + 68 >> 2] = 13;
                    q2 = j2 * j2 + k2 * k2 + l2 * l2;
                    h2 = 0;
                  } else {
                    q2 = j2 * j2 + k2 * k2 + l2 * l2;
                    h2 = 1;
                  }
                else {
                  q2 = j2 * j2 + k2 * k2 + l2 * l2;
                  h2 = 0;
                }
              }
            while (0);
          } while (h2);
          y2 = C2 << 24 >> 24 == 0 ? u2 : 0;
          u2 = (C2 << 24 >> 24 == 0 ? v2 : 0) + y2;
          do
            if (n2) {
              C2 = c[b2 + 24 >> 2] | 0;
              Hc(C2) | 0;
              l2 = +g[C2 + 260 >> 2];
              k2 = +g[C2 + 264 >> 2];
              j2 = +g[C2 + 268 >> 2];
              c[S2 + 224 >> 2] = c[b2 + 4 >> 2];
              c[S2 + 224 + 4 >> 2] = c[b2 + 4 + 4 >> 2];
              c[S2 + 224 + 8 >> 2] = c[b2 + 4 + 8 >> 2];
              c[S2 + 224 + 12 >> 2] = c[b2 + 4 + 12 >> 2];
              m2 = +g[b2 + 4 >> 2];
              o2 = +g[b2 + 8 >> 2];
              p2 = +g[b2 + 12 >> 2];
              if (m2 * m2 + o2 * o2 + p2 * p2 < 1e-4)
                c[b2 + 68 >> 2] = 5;
              if (m2 * m2 + o2 * o2 + p2 * p2 > 14210854715202004e-30) {
                D2 = 1 / +G(+(m2 * m2 + o2 * o2 + p2 * p2));
                g[S2 + 224 >> 2] = D2 * +g[S2 + 224 >> 2];
                g[K2 >> 2] = D2 * +g[K2 >> 2];
                g[L2 >> 2] = D2 * +g[L2 >> 2];
                A2 = y2 / +G(+q2);
                c[b2 + 60 >> 2] = 1;
                D2 = 1 / D2 - u2;
                w2 = 1;
                l2 = A2 * m2 + l2;
                k2 = A2 * o2 + k2;
                j2 = A2 * p2 + j2;
                break;
              } else {
                c[b2 + 60 >> 2] = 2;
                D2 = 0;
                w2 = 0;
                break;
              }
            } else {
              D2 = 0;
              w2 = 0;
              l2 = 0;
              k2 = 0;
              j2 = 0;
            }
          while (0);
          if (((c[b2 + 72 >> 2] | 0) != 0 ? (c[b2 + 20 >> 2] | 0) != 0 : 0) ? (c[b2 + 68 >> 2] | 0) != 0 : 0)
            h2 = u2 + D2 < 0.0010000000474974513;
          else
            h2 = 0;
          n2 = w2 ^ 1;
          do
            if (h2 | n2 ? (E2 = c[b2 + 20 >> 2] | 0, (E2 | 0) != 0) : 0) {
              c[6067] = (c[6067] | 0) + 1;
              c[b2 + 4 >> 2] = 0;
              c[b2 + 4 + 4 >> 2] = 0;
              c[b2 + 4 + 8 >> 2] = 0;
              c[b2 + 4 + 12 >> 2] = 0;
              if (!(nb[c[(c[E2 >> 2] | 0) + 8 >> 2] & 3](E2, c[b2 + 24 >> 2] | 0, c[b2 + 28 >> 2] | 0, c[b2 + 32 >> 2] | 0, S2 + 160 | 0, S2 + 96 | 0, b2 + 4 | 0, S2 + 80 | 0, S2 + 64 | 0, f2) | 0)) {
                o2 = +g[b2 + 4 >> 2];
                q2 = +g[b2 + 8 >> 2];
                s2 = +g[b2 + 12 >> 2];
                if (!(o2 * o2 + q2 * q2 + s2 * s2 > 0)) {
                  if (w2) {
                    m2 = D2;
                    break;
                  }
                  i = S2;
                  return;
                }
                p2 = +g[S2 + 64 >> 2];
                z2 = +g[S2 + 80 >> 2] - p2;
                r2 = +g[S2 + 64 + 4 >> 2];
                A2 = +g[S2 + 80 + 4 >> 2] - r2;
                t2 = +g[S2 + 64 + 8 >> 2];
                m2 = +g[S2 + 80 + 8 >> 2] - t2;
                m2 = +G(+(z2 * z2 + A2 * A2 + m2 * m2)) - u2;
                if (m2 < D2 | n2) {
                  c[S2 + 224 >> 2] = c[b2 + 4 >> 2];
                  c[S2 + 224 + 4 >> 2] = c[b2 + 4 + 4 >> 2];
                  c[S2 + 224 + 8 >> 2] = c[b2 + 4 + 8 >> 2];
                  c[S2 + 224 + 12 >> 2] = c[b2 + 4 + 12 >> 2];
                  D2 = +g[S2 + 224 >> 2];
                  j2 = +g[K2 >> 2];
                  k2 = +g[L2 >> 2];
                  l2 = 1 / +G(+(D2 * D2 + j2 * j2 + k2 * k2));
                  g[S2 + 224 >> 2] = D2 * l2;
                  g[K2 >> 2] = j2 * l2;
                  g[L2 >> 2] = k2 * l2;
                  c[b2 + 60 >> 2] = 6;
                  l2 = y2 * o2 + p2;
                  k2 = y2 * q2 + r2;
                  j2 = y2 * s2 + t2;
                  break;
                }
                c[b2 + 60 >> 2] = 5;
                if (w2) {
                  m2 = D2;
                  break;
                }
                i = S2;
                return;
              }
              y2 = +g[S2 + 64 >> 2];
              o2 = +g[S2 + 80 >> 2];
              z2 = +g[S2 + 64 + 4 >> 2];
              p2 = +g[S2 + 80 + 4 >> 2];
              A2 = +g[S2 + 64 + 8 >> 2];
              q2 = +g[S2 + 80 + 8 >> 2];
              if (!((y2 - o2) * (y2 - o2) + (z2 - p2) * (z2 - p2) + (A2 - q2) * (A2 - q2) <= 14210854715202004e-30)) {
                m2 = (y2 - o2) * (y2 - o2) + (z2 - p2) * (z2 - p2) + (A2 - q2) * (A2 - q2);
                s2 = y2 - o2;
                t2 = A2 - q2;
                u2 = 0;
                v2 = z2 - p2;
              } else {
                s2 = +g[b2 + 4 >> 2];
                v2 = +g[b2 + 8 >> 2];
                t2 = +g[b2 + 12 >> 2];
                m2 = s2 * s2 + v2 * v2 + t2 * t2;
                u2 = +g[b2 + 16 >> 2];
              }
              if (!(m2 > 14210854715202004e-30)) {
                c[b2 + 60 >> 2] = 9;
                if (w2) {
                  m2 = D2;
                  break;
                }
                i = S2;
                return;
              }
              r2 = 1 / +G(+m2);
              m2 = -+G(+((o2 - y2) * (o2 - y2) + (p2 - z2) * (p2 - z2) + (q2 - A2) * (q2 - A2)));
              c[b2 + 60 >> 2] = 3;
              if (!(D2 > m2 | n2)) {
                c[b2 + 60 >> 2] = 8;
                if (w2) {
                  m2 = D2;
                  break;
                }
                i = S2;
                return;
              }
              D2 = t2 * r2;
              q2 = v2 * r2;
              s2 = s2 * r2;
              g[S2 + 224 >> 2] = s2;
              g[K2 >> 2] = q2;
              g[L2 >> 2] = D2;
              g[S2 + 224 + 12 >> 2] = u2;
              k2 = s2 * +g[d2 + 4 >> 2] + q2 * +g[d2 + 20 >> 2] + D2 * +g[d2 + 36 >> 2];
              j2 = s2 * +g[d2 + 8 >> 2] + q2 * +g[d2 + 24 >> 2] + D2 * +g[d2 + 40 >> 2];
              g[S2 + 48 >> 2] = +g[d2 >> 2] * s2 + +g[d2 + 16 >> 2] * q2 + +g[d2 + 32 >> 2] * D2;
              g[S2 + 48 + 4 >> 2] = k2;
              g[S2 + 48 + 8 >> 2] = j2;
              g[S2 + 48 + 12 >> 2] = 0;
              j2 = +g[d2 + 68 >> 2] * -s2 + +g[d2 + 84 >> 2] * -q2 + +g[d2 + 100 >> 2] * -D2;
              k2 = +g[d2 + 72 >> 2] * -s2 + +g[d2 + 88 >> 2] * -q2 + +g[d2 + 104 >> 2] * -D2;
              g[S2 + 32 >> 2] = +g[d2 + 64 >> 2] * -s2 + +g[d2 + 80 >> 2] * -q2 + +g[d2 + 96 >> 2] * -D2;
              g[S2 + 32 + 4 >> 2] = j2;
              g[S2 + 32 + 8 >> 2] = k2;
              g[S2 + 32 + 12 >> 2] = 0;
              sd(S2 + 16 | 0, c[b2 + 28 >> 2] | 0, S2 + 48 | 0);
              sd(S2, c[b2 + 32 >> 2] | 0, S2 + 32 | 0);
              k2 = +g[S2 + 16 >> 2];
              j2 = +g[S2 + 16 + 4 >> 2];
              D2 = +g[S2 + 16 + 8 >> 2];
              s2 = +g[S2 >> 2];
              r2 = +g[S2 + 4 >> 2];
              q2 = +g[S2 + 8 >> 2];
              v2 = +g[S2 + 224 >> 2];
              u2 = +g[K2 >> 2];
              t2 = +g[L2 >> 2];
              q2 = -((k2 * +g[S2 + 160 + 16 >> 2] + j2 * +g[S2 + 160 + 20 >> 2] + D2 * +g[S2 + 160 + 24 >> 2] + +g[F2 >> 2] - (s2 * +g[S2 + 96 + 16 >> 2] + r2 * +g[S2 + 96 + 20 >> 2] + q2 * +g[S2 + 96 + 24 >> 2] + +g[H2 >> 2])) * u2) - (k2 * +g[S2 + 160 >> 2] + j2 * +g[S2 + 160 + 4 >> 2] + D2 * +g[S2 + 160 + 8 >> 2] + +g[S2 + 160 + 48 >> 2] - (s2 * +g[S2 + 96 >> 2] + r2 * +g[S2 + 96 + 4 >> 2] + q2 * +g[S2 + 96 + 8 >> 2] + +g[S2 + 96 + 48 >> 2])) * v2 - (k2 * +g[S2 + 160 + 32 >> 2] + j2 * +g[S2 + 160 + 36 >> 2] + D2 * +g[S2 + 160 + 40 >> 2] + +g[I2 >> 2] - (s2 * +g[S2 + 96 + 32 >> 2] + r2 * +g[S2 + 96 + 36 >> 2] + q2 * +g[S2 + 96 + 40 >> 2] + +g[J2 >> 2])) * t2;
              r2 = +g[d2 + 4 >> 2] * -v2 + +g[d2 + 20 >> 2] * -u2 + +g[d2 + 36 >> 2] * -t2;
              s2 = +g[d2 + 8 >> 2] * -v2 + +g[d2 + 24 >> 2] * -u2 + +g[d2 + 40 >> 2] * -t2;
              g[S2 + 48 >> 2] = +g[d2 >> 2] * -v2 + +g[d2 + 16 >> 2] * -u2 + +g[d2 + 32 >> 2] * -t2;
              g[S2 + 48 + 4 >> 2] = r2;
              g[S2 + 48 + 8 >> 2] = s2;
              g[S2 + 48 + 12 >> 2] = 0;
              s2 = v2 * +g[d2 + 68 >> 2] + u2 * +g[d2 + 84 >> 2] + t2 * +g[d2 + 100 >> 2];
              r2 = v2 * +g[d2 + 72 >> 2] + u2 * +g[d2 + 88 >> 2] + t2 * +g[d2 + 104 >> 2];
              g[S2 + 32 >> 2] = +g[d2 + 64 >> 2] * v2 + +g[d2 + 80 >> 2] * u2 + +g[d2 + 96 >> 2] * t2;
              g[S2 + 32 + 4 >> 2] = s2;
              g[S2 + 32 + 8 >> 2] = r2;
              g[S2 + 32 + 12 >> 2] = 0;
              sd(S2 + 16 | 0, c[b2 + 28 >> 2] | 0, S2 + 48 | 0);
              sd(S2, c[b2 + 32 >> 2] | 0, S2 + 32 | 0);
              r2 = +g[S2 + 16 >> 2];
              s2 = +g[S2 + 16 + 4 >> 2];
              t2 = +g[S2 + 16 + 8 >> 2];
              u2 = +g[S2 >> 2];
              v2 = +g[S2 + 4 >> 2];
              D2 = +g[S2 + 8 >> 2];
              j2 = +g[S2 + 224 >> 2];
              k2 = +g[K2 >> 2];
              l2 = +g[L2 >> 2];
              if (q2 > (r2 * +g[S2 + 160 >> 2] + s2 * +g[S2 + 160 + 4 >> 2] + t2 * +g[S2 + 160 + 8 >> 2] + +g[S2 + 160 + 48 >> 2] - (u2 * +g[S2 + 96 >> 2] + v2 * +g[S2 + 96 + 4 >> 2] + D2 * +g[S2 + 96 + 8 >> 2] + +g[S2 + 96 + 48 >> 2])) * j2 + (r2 * +g[S2 + 160 + 16 >> 2] + s2 * +g[S2 + 160 + 20 >> 2] + t2 * +g[S2 + 160 + 24 >> 2] + +g[F2 >> 2] - (u2 * +g[S2 + 96 + 16 >> 2] + v2 * +g[S2 + 96 + 20 >> 2] + D2 * +g[S2 + 96 + 24 >> 2] + +g[H2 >> 2])) * k2 + (r2 * +g[S2 + 160 + 32 >> 2] + s2 * +g[S2 + 160 + 36 >> 2] + t2 * +g[S2 + 160 + 40 >> 2] + +g[I2 >> 2] - (u2 * +g[S2 + 96 + 32 >> 2] + v2 * +g[S2 + 96 + 36 >> 2] + D2 * +g[S2 + 96 + 40 >> 2] + +g[J2 >> 2])) * l2) {
                c[b2 + 60 >> 2] = 10;
                g[S2 + 224 >> 2] = -j2;
                g[K2 >> 2] = -k2;
                g[L2 >> 2] = -l2;
              }
              l2 = y2;
              k2 = z2;
              j2 = A2;
            } else
              T2 = 56;
          while (0);
          if ((T2 | 0) == 56)
            if (w2)
              m2 = D2;
            else {
              i = S2;
              return;
            }
          if (!(m2 < 0) ? !(m2 * m2 < +g[d2 + 128 >> 2]) : 0) {
            i = S2;
            return;
          }
          c[b2 + 4 >> 2] = c[S2 + 224 >> 2];
          c[b2 + 4 + 4 >> 2] = c[S2 + 224 + 4 >> 2];
          c[b2 + 4 + 8 >> 2] = c[S2 + 224 + 8 >> 2];
          c[b2 + 4 + 12 >> 2] = c[S2 + 224 + 12 >> 2];
          g[b2 + 56 >> 2] = m2;
          T2 = c[(c[e2 >> 2] | 0) + 16 >> 2] | 0;
          g[S2 + 80 >> 2] = (M2 + N2) * 0.5 + l2;
          g[S2 + 80 + 4 >> 2] = (O2 + P2) * 0.5 + k2;
          g[S2 + 80 + 8 >> 2] = (Q2 + R2) * 0.5 + j2;
          g[S2 + 80 + 12 >> 2] = 0;
          Tb[T2 & 15](e2, S2 + 224 | 0, S2 + 80 | 0, m2);
          i = S2;
          return;
        }
        function vc(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0;
          u2 = i;
          i = i + 208 | 0;
          if (ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0 ? (s2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0, (ob[c[(c[s2 >> 2] | 0) + 56 >> 2] & 127](s2) | 0) & 32768 | 0) : 0) {
            s2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
            Wb[c[(c[s2 >> 2] | 0) + 64 >> 2] & 7](s2, b2, 1);
          }
          f2 = c[d2 + 4 >> 2] | 0;
          switch (f2 | 0) {
            case 31: {
              f2 = c[d2 + 20 >> 2] | 0;
              if ((f2 | 0) <= 0) {
                i = u2;
                return;
              }
              do {
                t2 = f2;
                f2 = f2 + -1 | 0;
                s2 = c[d2 + 28 >> 2] | 0;
                J2 = +g[s2 + (f2 * 80 | 0) >> 2];
                G2 = +g[s2 + (f2 * 80 | 0) + 4 >> 2];
                D2 = +g[s2 + (f2 * 80 | 0) + 8 >> 2];
                I2 = +g[s2 + (f2 * 80 | 0) + 16 >> 2];
                F2 = +g[s2 + (f2 * 80 | 0) + 20 >> 2];
                B2 = +g[s2 + (f2 * 80 | 0) + 24 >> 2];
                H2 = +g[s2 + (f2 * 80 | 0) + 32 >> 2];
                E2 = +g[s2 + (f2 * 80 | 0) + 36 >> 2];
                z2 = +g[s2 + (f2 * 80 | 0) + 40 >> 2];
                R2 = +g[s2 + (f2 * 80 | 0) + 48 >> 2];
                Q2 = +g[s2 + (f2 * 80 | 0) + 52 >> 2];
                v2 = +g[s2 + (f2 * 80 | 0) + 56 >> 2];
                s2 = c[s2 + (f2 * 80 | 0) + 64 >> 2] | 0;
                r2 = c[(c[a2 >> 2] | 0) + 28 >> 2] | 0;
                P2 = +g[b2 >> 2];
                O2 = +g[b2 + 4 >> 2];
                N2 = +g[b2 + 8 >> 2];
                M2 = +g[b2 + 16 >> 2];
                L2 = +g[b2 + 20 >> 2];
                K2 = +g[b2 + 24 >> 2];
                C2 = +g[b2 + 32 >> 2];
                A2 = +g[b2 + 36 >> 2];
                y2 = +g[b2 + 40 >> 2];
                x2 = R2 * P2 + Q2 * O2 + v2 * N2 + +g[b2 + 48 >> 2];
                w2 = R2 * M2 + Q2 * L2 + v2 * K2 + +g[b2 + 52 >> 2];
                v2 = R2 * C2 + Q2 * A2 + v2 * y2 + +g[b2 + 56 >> 2];
                g[u2 + 144 >> 2] = J2 * P2 + I2 * O2 + H2 * N2;
                g[u2 + 144 + 4 >> 2] = G2 * P2 + F2 * O2 + E2 * N2;
                g[u2 + 144 + 8 >> 2] = D2 * P2 + B2 * O2 + z2 * N2;
                g[u2 + 144 + 12 >> 2] = 0;
                g[u2 + 144 + 16 >> 2] = J2 * M2 + I2 * L2 + H2 * K2;
                g[u2 + 144 + 20 >> 2] = G2 * M2 + F2 * L2 + E2 * K2;
                g[u2 + 144 + 24 >> 2] = D2 * M2 + B2 * L2 + z2 * K2;
                g[u2 + 144 + 28 >> 2] = 0;
                g[u2 + 144 + 32 >> 2] = J2 * C2 + I2 * A2 + H2 * y2;
                g[u2 + 144 + 36 >> 2] = G2 * C2 + F2 * A2 + E2 * y2;
                g[u2 + 144 + 40 >> 2] = D2 * C2 + B2 * A2 + z2 * y2;
                g[u2 + 144 + 44 >> 2] = 0;
                g[u2 + 144 + 48 >> 2] = x2;
                g[u2 + 144 + 52 >> 2] = w2;
                g[u2 + 144 + 56 >> 2] = v2;
                g[u2 + 144 + 60 >> 2] = 0;
                Yb[r2 & 127](a2, u2 + 144 | 0, s2, e2);
              } while ((t2 | 0) > 1);
              i = u2;
              return;
            }
            case 0: {
              c[u2 + 144 >> 2] = c[d2 + 32 >> 2];
              c[u2 + 144 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
              c[u2 + 144 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
              c[u2 + 144 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
              P2 = +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              Q2 = +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              R2 = +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              P2 = P2 + +g[u2 + 144 >> 2];
              g[u2 + 144 >> 2] = P2;
              Q2 = Q2 + +g[u2 + 144 + 4 >> 2];
              g[u2 + 144 + 4 >> 2] = Q2;
              R2 = R2 + +g[u2 + 144 + 8 >> 2];
              g[u2 + 144 + 8 >> 2] = R2;
              d2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
              a2 = c[(c[d2 >> 2] | 0) + 80 >> 2] | 0;
              g[u2 + 128 >> 2] = -P2;
              g[u2 + 128 + 4 >> 2] = -Q2;
              g[u2 + 128 + 8 >> 2] = -R2;
              g[u2 + 128 + 12 >> 2] = 0;
              ib[a2 & 31](d2, u2 + 128 | 0, u2 + 144 | 0, b2, e2);
              i = u2;
              return;
            }
            case 8: {
              R2 = +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              d2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
              rb[c[(c[d2 >> 2] | 0) + 24 >> 2] & 0](d2, R2, b2, e2);
              i = u2;
              return;
            }
            case 9: {
              f2 = c[d2 + 96 >> 2] | 0;
              if ((f2 | 0) <= 0) {
                i = u2;
                return;
              }
              do {
                t2 = f2;
                f2 = f2 + -1 | 0;
                s2 = c[d2 + 104 >> 2] | 0;
                D2 = +g[s2 + (f2 << 4) >> 2];
                E2 = +g[s2 + (f2 << 4) + 4 >> 2];
                Q2 = +g[s2 + (f2 << 4) + 8 >> 2];
                s2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                r2 = c[(c[s2 >> 2] | 0) + 24 >> 2] | 0;
                R2 = +g[(c[d2 + 124 >> 2] | 0) + (f2 << 2) >> 2];
                G2 = +g[b2 >> 2];
                H2 = +g[b2 + 4 >> 2];
                F2 = +g[b2 + 8 >> 2];
                J2 = +g[b2 + 16 >> 2];
                K2 = +g[b2 + 20 >> 2];
                I2 = +g[b2 + 24 >> 2];
                M2 = +g[b2 + 32 >> 2];
                N2 = +g[b2 + 36 >> 2];
                L2 = +g[b2 + 40 >> 2];
                O2 = D2 * G2 + E2 * H2 + Q2 * F2 + +g[b2 + 48 >> 2];
                P2 = D2 * J2 + E2 * K2 + Q2 * I2 + +g[b2 + 52 >> 2];
                Q2 = D2 * M2 + E2 * N2 + Q2 * L2 + +g[b2 + 56 >> 2];
                g[u2 + 144 >> 2] = G2 + H2 * 0 + F2 * 0;
                g[u2 + 144 + 4 >> 2] = G2 * 0 + H2 + F2 * 0;
                g[u2 + 144 + 8 >> 2] = F2 + (G2 * 0 + H2 * 0);
                g[u2 + 144 + 12 >> 2] = 0;
                g[u2 + 144 + 16 >> 2] = J2 + K2 * 0 + I2 * 0;
                g[u2 + 144 + 20 >> 2] = J2 * 0 + K2 + I2 * 0;
                g[u2 + 144 + 24 >> 2] = I2 + (J2 * 0 + K2 * 0);
                g[u2 + 144 + 28 >> 2] = 0;
                g[u2 + 144 + 32 >> 2] = M2 + N2 * 0 + L2 * 0;
                g[u2 + 144 + 36 >> 2] = M2 * 0 + N2 + L2 * 0;
                g[u2 + 144 + 40 >> 2] = L2 + (M2 * 0 + N2 * 0);
                g[u2 + 144 + 44 >> 2] = 0;
                g[u2 + 144 + 48 >> 2] = O2;
                g[u2 + 144 + 52 >> 2] = P2;
                g[u2 + 144 + 56 >> 2] = Q2;
                g[u2 + 144 + 60 >> 2] = 0;
                rb[r2 & 0](s2, R2, u2 + 144 | 0, e2);
              } while ((t2 | 0) > 1);
              i = u2;
              return;
            }
            case 10: {
              t2 = c[d2 + 56 >> 2] | 0;
              Q2 = +g[d2 + 32 + (((t2 + 2 | 0) % 3 | 0) << 2) >> 2];
              R2 = +g[d2 + 32 + (t2 << 2) >> 2];
              d2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
              qb[c[(c[d2 >> 2] | 0) + 84 >> 2] & 0](d2, Q2, R2, t2, b2, e2);
              i = u2;
              return;
            }
            case 11: {
              Q2 = +g[d2 + 60 >> 2];
              R2 = +g[d2 + 64 >> 2];
              d2 = c[d2 + 72 >> 2] | 0;
              a2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
              qb[c[(c[a2 >> 2] | 0) + 92 >> 2] & 0](a2, Q2, R2, d2, b2, e2);
              i = u2;
              return;
            }
            case 13: {
              t2 = c[d2 + 56 >> 2] | 0;
              Q2 = +Cb[c[(c[d2 >> 2] | 0) + 92 >> 2] & 15](d2);
              c[u2 + 112 >> 2] = c[d2 + 32 >> 2];
              c[u2 + 112 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
              c[u2 + 112 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
              c[u2 + 112 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
              O2 = +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              P2 = +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              R2 = +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
              g[u2 + 112 >> 2] = O2 + +g[u2 + 112 >> 2];
              g[u2 + 112 + 4 >> 2] = P2 + +g[u2 + 112 + 4 >> 2];
              g[u2 + 112 + 8 >> 2] = R2 + +g[u2 + 112 + 8 >> 2];
              R2 = +g[u2 + 112 + (t2 << 2) >> 2];
              d2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
              qb[c[(c[d2 >> 2] | 0) + 88 >> 2] & 0](d2, Q2, R2, t2, b2, e2);
              i = u2;
              return;
            }
            case 28: {
              R2 = +g[d2 + 68 >> 2];
              a2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
              Fb[c[(c[a2 >> 2] | 0) + 96 >> 2] & 0](a2, d2 + 52 | 0, R2, b2, e2);
              i = u2;
              return;
            }
            default: {
              a:
                do
                  if ((f2 | 0) < 7) {
                    r2 = c[d2 + 56 >> 2] | 0;
                    if (!r2) {
                      if ((ob[c[(c[d2 >> 2] | 0) + 100 >> 2] & 127](d2) | 0) <= 0)
                        break;
                      f2 = 0;
                      while (1) {
                        Yb[c[(c[d2 >> 2] | 0) + 104 >> 2] & 127](d2, f2, u2 + 144 | 0, u2 + 128 | 0);
                        P2 = +g[u2 + 144 >> 2];
                        D2 = +g[b2 >> 2];
                        N2 = +g[u2 + 144 + 4 >> 2];
                        E2 = +g[b2 + 4 >> 2];
                        L2 = +g[u2 + 144 + 8 >> 2];
                        F2 = +g[b2 + 8 >> 2];
                        H2 = +g[b2 + 16 >> 2];
                        I2 = +g[b2 + 20 >> 2];
                        J2 = +g[b2 + 24 >> 2];
                        M2 = +g[b2 + 32 >> 2];
                        O2 = +g[b2 + 36 >> 2];
                        Q2 = +g[b2 + 40 >> 2];
                        G2 = +g[b2 + 48 >> 2];
                        K2 = +g[b2 + 52 >> 2];
                        R2 = +g[b2 + 56 >> 2];
                        g[u2 + 16 >> 2] = P2 * D2 + N2 * E2 + L2 * F2 + G2;
                        g[u2 + 16 + 4 >> 2] = P2 * H2 + N2 * I2 + L2 * J2 + K2;
                        g[u2 + 16 + 8 >> 2] = P2 * M2 + N2 * O2 + L2 * Q2 + R2;
                        g[u2 + 16 + 12 >> 2] = 0;
                        L2 = +g[u2 + 128 >> 2];
                        N2 = +g[u2 + 128 + 4 >> 2];
                        P2 = +g[u2 + 128 + 8 >> 2];
                        g[u2 >> 2] = L2 * D2 + N2 * E2 + P2 * F2 + G2;
                        g[u2 + 4 >> 2] = L2 * H2 + N2 * I2 + P2 * J2 + K2;
                        g[u2 + 8 >> 2] = L2 * M2 + N2 * O2 + P2 * Q2 + R2;
                        g[u2 + 12 >> 2] = 0;
                        t2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                        Yb[c[(c[t2 >> 2] | 0) + 16 >> 2] & 127](t2, u2 + 16 | 0, u2, e2);
                        f2 = f2 + 1 | 0;
                        if ((f2 | 0) >= (ob[c[(c[d2 >> 2] | 0) + 100 >> 2] & 127](d2) | 0))
                          break a;
                      }
                    }
                    if ((c[r2 + 28 >> 2] | 0) > 0) {
                      q2 = 0;
                      do {
                        f2 = c[r2 + 36 >> 2] | 0;
                        s2 = c[f2 + (q2 * 36 | 0) + 4 >> 2] | 0;
                        b:
                          do
                            if ((s2 | 0) != 0 ? (t2 = c[f2 + (q2 * 36 | 0) + 12 >> 2] | 0, (s2 | 0) > 0) : 0) {
                              m2 = 0;
                              n2 = c[t2 + (s2 + -1 << 2) >> 2] | 0;
                              j2 = 0;
                              h2 = 0;
                              f2 = 0;
                              k2 = t2;
                              while (1) {
                                o2 = c[k2 + (m2 << 2) >> 2] | 0;
                                k2 = c[r2 + 16 >> 2] | 0;
                                j2 = (g[l >> 2] = (c[l >> 2] = j2, +g[l >> 2]) + +g[k2 + (o2 << 4) >> 2], c[l >> 2] | 0);
                                f2 = (g[l >> 2] = (c[l >> 2] = f2, +g[l >> 2]) + +g[k2 + (o2 << 4) + 4 >> 2], c[l >> 2] | 0);
                                h2 = (g[l >> 2] = (c[l >> 2] = h2, +g[l >> 2]) + +g[k2 + (o2 << 4) + 8 >> 2], c[l >> 2] | 0);
                                k2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                                p2 = c[(c[k2 >> 2] | 0) + 16 >> 2] | 0;
                                S2 = c[r2 + 16 >> 2] | 0;
                                P2 = +g[S2 + (n2 << 4) >> 2];
                                D2 = +g[b2 >> 2];
                                N2 = +g[S2 + (n2 << 4) + 4 >> 2];
                                E2 = +g[b2 + 4 >> 2];
                                L2 = +g[S2 + (n2 << 4) + 8 >> 2];
                                F2 = +g[b2 + 8 >> 2];
                                H2 = +g[b2 + 16 >> 2];
                                I2 = +g[b2 + 20 >> 2];
                                J2 = +g[b2 + 24 >> 2];
                                M2 = +g[b2 + 32 >> 2];
                                O2 = +g[b2 + 36 >> 2];
                                Q2 = +g[b2 + 40 >> 2];
                                G2 = +g[b2 + 48 >> 2];
                                K2 = +g[b2 + 52 >> 2];
                                R2 = +g[b2 + 56 >> 2];
                                g[u2 + 144 >> 2] = P2 * D2 + N2 * E2 + L2 * F2 + G2;
                                g[u2 + 144 + 4 >> 2] = P2 * H2 + N2 * I2 + L2 * J2 + K2;
                                g[u2 + 144 + 8 >> 2] = P2 * M2 + N2 * O2 + L2 * Q2 + R2;
                                g[u2 + 144 + 12 >> 2] = 0;
                                L2 = +g[S2 + (o2 << 4) >> 2];
                                N2 = +g[S2 + (o2 << 4) + 4 >> 2];
                                P2 = +g[S2 + (o2 << 4) + 8 >> 2];
                                g[u2 + 128 >> 2] = L2 * D2 + N2 * E2 + P2 * F2 + G2;
                                g[u2 + 128 + 4 >> 2] = L2 * H2 + N2 * I2 + P2 * J2 + K2;
                                g[u2 + 128 + 8 >> 2] = L2 * M2 + N2 * O2 + P2 * Q2 + R2;
                                g[u2 + 128 + 12 >> 2] = 0;
                                Yb[p2 & 127](k2, u2 + 144 | 0, u2 + 128 | 0, e2);
                                k2 = m2 + 1 | 0;
                                p2 = c[r2 + 36 >> 2] | 0;
                                if ((k2 | 0) >= (c[p2 + (q2 * 36 | 0) + 4 >> 2] | 0))
                                  break b;
                                m2 = k2;
                                n2 = o2;
                                k2 = c[p2 + (q2 * 36 | 0) + 12 >> 2] | 0;
                              }
                            } else {
                              j2 = 0;
                              h2 = 0;
                              f2 = 0;
                            }
                          while (0);
                        S2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                        if ((ob[c[(c[S2 >> 2] | 0) + 56 >> 2] & 127](S2) | 0) & 16384 | 0) {
                          O2 = 1 / +(s2 | 0) * (c[l >> 2] = h2, +g[l >> 2]);
                          L2 = 1 / +(s2 | 0) * (c[l >> 2] = f2, +g[l >> 2]);
                          I2 = 1 / +(s2 | 0) * (c[l >> 2] = j2, +g[l >> 2]);
                          c[u2 + 144 >> 2] = 1065353216;
                          c[u2 + 144 + 4 >> 2] = 1065353216;
                          c[u2 + 144 + 8 >> 2] = 0;
                          g[u2 + 144 + 12 >> 2] = 0;
                          S2 = c[r2 + 36 >> 2] | 0;
                          J2 = +g[S2 + (q2 * 36 | 0) + 20 >> 2];
                          M2 = +g[S2 + (q2 * 36 | 0) + 24 >> 2];
                          P2 = +g[S2 + (q2 * 36 | 0) + 28 >> 2];
                          S2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                          s2 = c[(c[S2 >> 2] | 0) + 16 >> 2] | 0;
                          A2 = +g[b2 >> 2];
                          B2 = +g[b2 + 4 >> 2];
                          C2 = +g[b2 + 8 >> 2];
                          E2 = +g[b2 + 16 >> 2];
                          F2 = +g[b2 + 20 >> 2];
                          G2 = +g[b2 + 24 >> 2];
                          K2 = +g[b2 + 32 >> 2];
                          N2 = +g[b2 + 36 >> 2];
                          Q2 = +g[b2 + 40 >> 2];
                          D2 = +g[b2 + 48 >> 2];
                          H2 = +g[b2 + 52 >> 2];
                          R2 = +g[b2 + 56 >> 2];
                          g[u2 + 128 >> 2] = I2 * A2 + L2 * B2 + O2 * C2 + D2;
                          g[u2 + 128 + 4 >> 2] = I2 * E2 + L2 * F2 + O2 * G2 + H2;
                          g[u2 + 128 + 8 >> 2] = I2 * K2 + L2 * N2 + O2 * Q2 + R2;
                          g[u2 + 128 + 12 >> 2] = 0;
                          g[u2 + 16 >> 2] = (I2 + J2) * A2 + (L2 + M2) * B2 + (O2 + P2) * C2 + D2;
                          g[u2 + 16 + 4 >> 2] = (I2 + J2) * E2 + (L2 + M2) * F2 + (O2 + P2) * G2 + H2;
                          g[u2 + 16 + 8 >> 2] = (I2 + J2) * K2 + (L2 + M2) * N2 + (O2 + P2) * Q2 + R2;
                          g[u2 + 16 + 12 >> 2] = 0;
                          Yb[s2 & 127](S2, u2 + 128 | 0, u2 + 16 | 0, u2 + 144 | 0);
                        }
                        q2 = q2 + 1 | 0;
                      } while ((q2 | 0) < (c[r2 + 28 >> 2] | 0));
                    }
                  }
                while (0);
              f2 = c[d2 + 4 >> 2] | 0;
              if ((f2 + -21 | 0) >>> 0 < 9) {
                c[u2 + 144 >> 2] = 1566444395;
                c[u2 + 144 + 4 >> 2] = 1566444395;
                c[u2 + 144 + 8 >> 2] = 1566444395;
                g[u2 + 144 + 12 >> 2] = 0;
                c[u2 + 128 >> 2] = -581039253;
                c[u2 + 128 + 4 >> 2] = -581039253;
                c[u2 + 128 + 8 >> 2] = -581039253;
                g[u2 + 128 + 12 >> 2] = 0;
                f2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
                c[u2 + 16 >> 2] = 5816;
                c[u2 + 16 + 4 >> 2] = 5840;
                c[u2 + 16 + 8 >> 2] = f2;
                c[u2 + 16 + 12 >> 2] = c[e2 >> 2];
                c[u2 + 16 + 12 + 4 >> 2] = c[e2 + 4 >> 2];
                c[u2 + 16 + 12 + 8 >> 2] = c[e2 + 8 >> 2];
                c[u2 + 16 + 12 + 12 >> 2] = c[e2 + 12 >> 2];
                c[u2 + 16 + 28 >> 2] = c[b2 >> 2];
                c[u2 + 16 + 28 + 4 >> 2] = c[b2 + 4 >> 2];
                c[u2 + 16 + 28 + 8 >> 2] = c[b2 + 8 >> 2];
                c[u2 + 16 + 28 + 12 >> 2] = c[b2 + 12 >> 2];
                c[u2 + 16 + 44 >> 2] = c[b2 + 16 >> 2];
                c[u2 + 16 + 44 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
                c[u2 + 16 + 44 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
                c[u2 + 16 + 44 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
                c[u2 + 16 + 60 >> 2] = c[b2 + 32 >> 2];
                c[u2 + 16 + 60 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
                c[u2 + 16 + 60 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
                c[u2 + 16 + 60 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
                c[u2 + 16 + 76 >> 2] = c[b2 + 48 >> 2];
                c[u2 + 16 + 76 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
                c[u2 + 16 + 76 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
                c[u2 + 16 + 76 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
                Yb[c[(c[d2 >> 2] | 0) + 64 >> 2] & 127](d2, u2 + 16 | 0, u2 + 128 | 0, u2 + 144 | 0);
                f2 = c[d2 + 4 >> 2] | 0;
              }
              if ((f2 | 0) != 3) {
                i = u2;
                return;
              }
              c[u2 + 144 >> 2] = 1566444395;
              c[u2 + 144 + 4 >> 2] = 1566444395;
              c[u2 + 144 + 8 >> 2] = 1566444395;
              g[u2 + 144 + 12 >> 2] = 0;
              c[u2 + 128 >> 2] = -581039253;
              c[u2 + 128 + 4 >> 2] = -581039253;
              c[u2 + 128 + 8 >> 2] = -581039253;
              g[u2 + 128 + 12 >> 2] = 0;
              S2 = ob[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2) | 0;
              c[u2 + 16 >> 2] = 5816;
              c[u2 + 16 + 4 >> 2] = 5840;
              c[u2 + 16 + 8 >> 2] = S2;
              c[u2 + 16 + 12 >> 2] = c[e2 >> 2];
              c[u2 + 16 + 12 + 4 >> 2] = c[e2 + 4 >> 2];
              c[u2 + 16 + 12 + 8 >> 2] = c[e2 + 8 >> 2];
              c[u2 + 16 + 12 + 12 >> 2] = c[e2 + 12 >> 2];
              c[u2 + 16 + 28 >> 2] = c[b2 >> 2];
              c[u2 + 16 + 28 + 4 >> 2] = c[b2 + 4 >> 2];
              c[u2 + 16 + 28 + 8 >> 2] = c[b2 + 8 >> 2];
              c[u2 + 16 + 28 + 12 >> 2] = c[b2 + 12 >> 2];
              c[u2 + 16 + 44 >> 2] = c[b2 + 16 >> 2];
              c[u2 + 16 + 44 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
              c[u2 + 16 + 44 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
              c[u2 + 16 + 44 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
              c[u2 + 16 + 60 >> 2] = c[b2 + 32 >> 2];
              c[u2 + 16 + 60 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
              c[u2 + 16 + 60 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
              c[u2 + 16 + 60 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
              c[u2 + 16 + 76 >> 2] = c[b2 + 48 >> 2];
              c[u2 + 16 + 76 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
              c[u2 + 16 + 76 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
              c[u2 + 16 + 76 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
              S2 = c[d2 + 96 >> 2] | 0;
              Yb[c[(c[S2 >> 2] | 0) + 8 >> 2] & 127](S2, u2 + 16 + 4 | 0, u2 + 128 | 0, u2 + 144 | 0);
              i = u2;
              return;
            }
          }
        }
        function wc(d2, f2, h2) {
          d2 = d2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0;
          K2 = i;
          i = i + 96 | 0;
          H2 = c[d2 + 56 >> 2] | 0;
          if ((h2 - f2 | 0) == 1) {
            if (!(a[d2 + 60 >> 0] | 0)) {
              q2 = (c[d2 + 96 >> 2] | 0) + (H2 << 6) | 0;
              r2 = (c[d2 + 76 >> 2] | 0) + (f2 << 6) | 0;
              s2 = q2 + 64 | 0;
              do {
                c[q2 >> 2] = c[r2 >> 2];
                q2 = q2 + 4 | 0;
                r2 = r2 + 4 | 0;
              } while ((q2 | 0) < (s2 | 0));
            } else {
              J2 = (c[d2 + 136 >> 2] | 0) + (H2 << 4) | 0;
              I2 = (c[d2 + 116 >> 2] | 0) + (f2 << 4) | 0;
              c[J2 >> 2] = c[I2 >> 2];
              c[J2 + 4 >> 2] = c[I2 + 4 >> 2];
              c[J2 + 8 >> 2] = c[I2 + 8 >> 2];
              c[J2 + 12 >> 2] = c[I2 + 12 >> 2];
            }
            c[d2 + 56 >> 2] = (c[d2 + 56 >> 2] | 0) + 1;
            i = K2;
            return;
          }
          if ((h2 | 0) > (f2 | 0)) {
            n2 = (a[d2 + 60 >> 0] | 0) == 0;
            if (n2) {
              k2 = c[d2 + 76 >> 2] | 0;
              j2 = f2;
              m2 = 0;
              o2 = 0;
              l2 = 0;
              do {
                m2 = m2 + (+g[k2 + (j2 << 6) + 16 >> 2] + +g[k2 + (j2 << 6) >> 2]) * 0.5;
                l2 = l2 + (+g[k2 + (j2 << 6) + 20 >> 2] + +g[k2 + (j2 << 6) + 4 >> 2]) * 0.5;
                o2 = o2 + (+g[k2 + (j2 << 6) + 24 >> 2] + +g[k2 + (j2 << 6) + 8 >> 2]) * 0.5;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
            } else {
              k2 = c[d2 + 116 >> 2] | 0;
              p2 = +g[d2 + 36 >> 2];
              t2 = +g[d2 + 40 >> 2];
              u2 = +g[d2 + 44 >> 2];
              x2 = +g[d2 + 4 >> 2];
              y2 = +g[d2 + 8 >> 2];
              z2 = +g[d2 + 12 >> 2];
              j2 = f2;
              m2 = 0;
              o2 = 0;
              l2 = 0;
              do {
                m2 = m2 + (+(e[k2 + (j2 << 4) + 6 >> 1] | 0) / p2 + x2 + (+(e[k2 + (j2 << 4) >> 1] | 0) / p2 + x2)) * 0.5;
                l2 = l2 + (+(e[k2 + (j2 << 4) + 8 >> 1] | 0) / t2 + y2 + (+(e[k2 + (j2 << 4) + 2 >> 1] | 0) / t2 + y2)) * 0.5;
                o2 = o2 + (+(e[k2 + (j2 << 4) + 10 >> 1] | 0) / u2 + z2 + (+(e[k2 + (j2 << 4) + 4 >> 1] | 0) / u2 + z2)) * 0.5;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
            }
            C2 = 1 / +(h2 - f2 | 0);
            E2 = C2 * m2;
            D2 = C2 * l2;
            C2 = C2 * o2;
            if (n2) {
              k2 = c[d2 + 76 >> 2] | 0;
              j2 = f2;
              p2 = 0;
              o2 = 0;
              l2 = 0;
              do {
                x2 = (+g[k2 + (j2 << 6) + 16 >> 2] + +g[k2 + (j2 << 6) >> 2]) * 0.5 - E2;
                y2 = (+g[k2 + (j2 << 6) + 20 >> 2] + +g[k2 + (j2 << 6) + 4 >> 2]) * 0.5 - D2;
                z2 = (+g[k2 + (j2 << 6) + 24 >> 2] + +g[k2 + (j2 << 6) + 8 >> 2]) * 0.5 - C2;
                p2 = p2 + x2 * x2;
                l2 = l2 + y2 * y2;
                o2 = o2 + z2 * z2;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
              m2 = +(h2 - f2 | 0);
            } else {
              k2 = c[d2 + 116 >> 2] | 0;
              m2 = +g[d2 + 36 >> 2];
              t2 = +g[d2 + 40 >> 2];
              u2 = +g[d2 + 44 >> 2];
              x2 = +g[d2 + 4 >> 2];
              y2 = +g[d2 + 8 >> 2];
              z2 = +g[d2 + 12 >> 2];
              j2 = f2;
              p2 = 0;
              o2 = 0;
              l2 = 0;
              do {
                N2 = (+(e[k2 + (j2 << 4) + 6 >> 1] | 0) / m2 + x2 + (+(e[k2 + (j2 << 4) >> 1] | 0) / m2 + x2)) * 0.5 - E2;
                M2 = (+(e[k2 + (j2 << 4) + 8 >> 1] | 0) / t2 + y2 + (+(e[k2 + (j2 << 4) + 2 >> 1] | 0) / t2 + y2)) * 0.5 - D2;
                L2 = (+(e[k2 + (j2 << 4) + 10 >> 1] | 0) / u2 + z2 + (+(e[k2 + (j2 << 4) + 4 >> 1] | 0) / u2 + z2)) * 0.5 - C2;
                p2 = p2 + N2 * N2;
                l2 = l2 + M2 * M2;
                o2 = o2 + L2 * L2;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
              m2 = +(h2 - f2 | 0);
            }
          } else {
            p2 = 0;
            o2 = 0;
            l2 = 0;
            m2 = +(h2 - f2 | 0);
          }
          N2 = 1 / (m2 + -1);
          M2 = N2 * p2;
          L2 = N2 * l2;
          N2 = N2 * o2;
          w2 = M2 < L2 ? L2 < N2 ? 2 : 1 : M2 < N2 ? 2 : 0;
          c[K2 + 16 >> 2] = 0;
          c[K2 + 16 + 4 >> 2] = 0;
          c[K2 + 16 + 8 >> 2] = 0;
          c[K2 + 16 + 12 >> 2] = 0;
          if ((h2 | 0) > (f2 | 0)) {
            if (!(a[d2 + 60 >> 0] | 0)) {
              k2 = c[d2 + 76 >> 2] | 0;
              j2 = f2;
              o2 = 0;
              m2 = 0;
              l2 = 0;
              do {
                o2 = (+g[k2 + (j2 << 6) + 16 >> 2] + +g[k2 + (j2 << 6) >> 2]) * 0.5 + o2;
                m2 = (+g[k2 + (j2 << 6) + 20 >> 2] + +g[k2 + (j2 << 6) + 4 >> 2]) * 0.5 + m2;
                l2 = (+g[k2 + (j2 << 6) + 24 >> 2] + +g[k2 + (j2 << 6) + 8 >> 2]) * 0.5 + l2;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
            } else {
              k2 = c[d2 + 116 >> 2] | 0;
              p2 = +g[d2 + 36 >> 2];
              t2 = +g[d2 + 40 >> 2];
              u2 = +g[d2 + 44 >> 2];
              x2 = +g[d2 + 4 >> 2];
              y2 = +g[d2 + 8 >> 2];
              z2 = +g[d2 + 12 >> 2];
              j2 = f2;
              o2 = 0;
              m2 = 0;
              l2 = 0;
              do {
                o2 = (+(e[k2 + (j2 << 4) + 6 >> 1] | 0) / p2 + x2 + (+(e[k2 + (j2 << 4) >> 1] | 0) / p2 + x2)) * 0.5 + o2;
                m2 = (+(e[k2 + (j2 << 4) + 8 >> 1] | 0) / t2 + y2 + (+(e[k2 + (j2 << 4) + 2 >> 1] | 0) / t2 + y2)) * 0.5 + m2;
                l2 = (+(e[k2 + (j2 << 4) + 10 >> 1] | 0) / u2 + z2 + (+(e[k2 + (j2 << 4) + 4 >> 1] | 0) / u2 + z2)) * 0.5 + l2;
                j2 = j2 + 1 | 0;
              } while ((j2 | 0) != (h2 | 0));
            }
            g[K2 + 16 >> 2] = o2;
            g[K2 + 16 + 4 >> 2] = m2;
            g[K2 + 16 + 8 >> 2] = l2;
            j2 = K2 + 16 | 0;
          } else {
            j2 = K2 + 16 | 0;
            o2 = 0;
            m2 = 0;
            l2 = 0;
          }
          g[j2 >> 2] = 1 / +(h2 - f2 | 0) * o2;
          g[K2 + 16 + 4 >> 2] = 1 / +(h2 - f2 | 0) * m2;
          g[K2 + 16 + 8 >> 2] = 1 / +(h2 - f2 | 0) * l2;
          x2 = +g[K2 + 16 + (w2 << 2) >> 2];
          if ((h2 | 0) > (f2 | 0)) {
            j2 = f2;
            v2 = f2;
            do {
              k2 = (a[d2 + 60 >> 0] | 0) == 0;
              if (k2) {
                G2 = c[d2 + 76 >> 2] | 0;
                l2 = +g[G2 + (v2 << 6) >> 2];
                m2 = +g[G2 + (v2 << 6) + 16 >> 2];
                o2 = +g[G2 + (v2 << 6) + 4 >> 2];
                p2 = +g[G2 + (v2 << 6) + 20 >> 2];
                t2 = +g[G2 + (v2 << 6) + 8 >> 2];
                u2 = +g[G2 + (v2 << 6) + 24 >> 2];
              } else {
                G2 = c[d2 + 116 >> 2] | 0;
                o2 = +g[d2 + 36 >> 2];
                t2 = +g[d2 + 40 >> 2];
                N2 = +g[d2 + 44 >> 2];
                m2 = +g[d2 + 4 >> 2];
                p2 = +g[d2 + 8 >> 2];
                u2 = +g[d2 + 12 >> 2];
                l2 = +(e[G2 + (v2 << 4) >> 1] | 0) / o2 + m2;
                m2 = +(e[G2 + (v2 << 4) + 6 >> 1] | 0) / o2 + m2;
                o2 = +(e[G2 + (v2 << 4) + 2 >> 1] | 0) / t2 + p2;
                p2 = +(e[G2 + (v2 << 4) + 8 >> 1] | 0) / t2 + p2;
                t2 = +(e[G2 + (v2 << 4) + 4 >> 1] | 0) / N2 + u2;
                u2 = +(e[G2 + (v2 << 4) + 10 >> 1] | 0) / N2 + u2;
              }
              g[K2 >> 2] = (m2 + l2) * 0.5;
              g[K2 + 4 >> 2] = (p2 + o2) * 0.5;
              g[K2 + 8 >> 2] = (u2 + t2) * 0.5;
              g[K2 + 12 >> 2] = 0;
              if (+g[K2 + (w2 << 2) >> 2] > x2) {
                if (k2) {
                  k2 = c[d2 + 76 >> 2] | 0;
                  n2 = k2 + (v2 << 6) | 0;
                  q2 = K2 + 32 | 0;
                  r2 = n2;
                  s2 = q2 + 64 | 0;
                  do {
                    c[q2 >> 2] = c[r2 >> 2];
                    q2 = q2 + 4 | 0;
                    r2 = r2 + 4 | 0;
                  } while ((q2 | 0) < (s2 | 0));
                  q2 = n2;
                  r2 = k2 + (j2 << 6) | 0;
                  s2 = q2 + 64 | 0;
                  do {
                    c[q2 >> 2] = c[r2 >> 2];
                    q2 = q2 + 4 | 0;
                    r2 = r2 + 4 | 0;
                  } while ((q2 | 0) < (s2 | 0));
                  q2 = (c[d2 + 76 >> 2] | 0) + (j2 << 6) | 0;
                  r2 = K2 + 32 | 0;
                  s2 = q2 + 64 | 0;
                  do {
                    c[q2 >> 2] = c[r2 >> 2];
                    q2 = q2 + 4 | 0;
                    r2 = r2 + 4 | 0;
                  } while ((q2 | 0) < (s2 | 0));
                } else {
                  F2 = c[d2 + 116 >> 2] | 0;
                  G2 = F2 + (v2 << 4) | 0;
                  c[K2 + 32 >> 2] = c[G2 >> 2];
                  c[K2 + 32 + 4 >> 2] = c[G2 + 4 >> 2];
                  c[K2 + 32 + 8 >> 2] = c[G2 + 8 >> 2];
                  c[K2 + 32 + 12 >> 2] = c[G2 + 12 >> 2];
                  F2 = F2 + (j2 << 4) | 0;
                  c[G2 >> 2] = c[F2 >> 2];
                  c[G2 + 4 >> 2] = c[F2 + 4 >> 2];
                  c[G2 + 8 >> 2] = c[F2 + 8 >> 2];
                  c[G2 + 12 >> 2] = c[F2 + 12 >> 2];
                  G2 = (c[d2 + 116 >> 2] | 0) + (j2 << 4) | 0;
                  c[G2 >> 2] = c[K2 + 32 >> 2];
                  c[G2 + 4 >> 2] = c[K2 + 32 + 4 >> 2];
                  c[G2 + 8 >> 2] = c[K2 + 32 + 8 >> 2];
                  c[G2 + 12 >> 2] = c[K2 + 32 + 12 >> 2];
                }
                j2 = j2 + 1 | 0;
              }
              v2 = v2 + 1 | 0;
            } while ((v2 | 0) != (h2 | 0));
          } else
            j2 = f2;
          if (!((j2 | 0) > (((h2 - f2 | 0) / 3 | 0) + f2 | 0) ? (j2 | 0) < (h2 + -1 - ((h2 - f2 | 0) / 3 | 0) | 0) : 0))
            j2 = (h2 - f2 >> 1) + f2 | 0;
          G2 = c[d2 + 56 >> 2] | 0;
          if (!(a[d2 + 60 >> 0] | 0)) {
            F2 = (c[d2 + 96 >> 2] | 0) + (G2 << 6) | 0;
            c[F2 >> 2] = c[d2 + 20 >> 2];
            c[F2 + 4 >> 2] = c[d2 + 20 + 4 >> 2];
            c[F2 + 8 >> 2] = c[d2 + 20 + 8 >> 2];
            c[F2 + 12 >> 2] = c[d2 + 20 + 12 >> 2];
          } else {
            F2 = c[d2 + 136 >> 2] | 0;
            M2 = (+g[d2 + 24 >> 2] - +g[d2 + 8 >> 2]) * +g[d2 + 40 >> 2];
            N2 = (+g[d2 + 28 >> 2] - +g[d2 + 12 >> 2]) * +g[d2 + 44 >> 2];
            b[F2 + (G2 << 4) >> 1] = ~~((+g[d2 + 20 >> 2] - +g[d2 + 4 >> 2]) * +g[d2 + 36 >> 2]) & 65534;
            b[F2 + (G2 << 4) + 2 >> 1] = ~~M2 & 65534;
            b[F2 + (G2 << 4) + 4 >> 1] = ~~N2 & 65534;
          }
          k2 = c[d2 + 56 >> 2] | 0;
          if (!(a[d2 + 60 >> 0] | 0)) {
            F2 = (c[d2 + 96 >> 2] | 0) + (k2 << 6) + 16 | 0;
            c[F2 >> 2] = c[d2 + 4 >> 2];
            c[F2 + 4 >> 2] = c[d2 + 4 + 4 >> 2];
            c[F2 + 8 >> 2] = c[d2 + 4 + 8 >> 2];
            c[F2 + 12 >> 2] = c[d2 + 4 + 12 >> 2];
          } else {
            F2 = c[d2 + 136 >> 2] | 0;
            L2 = +g[d2 + 4 >> 2];
            M2 = +g[d2 + 8 >> 2];
            N2 = +g[d2 + 12 >> 2];
            M2 = (M2 - M2) * +g[d2 + 40 >> 2];
            N2 = (N2 - N2) * +g[d2 + 44 >> 2];
            b[F2 + (k2 << 4) + 6 >> 1] = ~~((L2 - L2) * +g[d2 + 36 >> 2] + 1) & 65535 | 1;
            b[F2 + (k2 << 4) + 8 >> 1] = ~~(M2 + 1) & 65535 | 1;
            b[F2 + (k2 << 4) + 10 >> 1] = ~~(N2 + 1) & 65535 | 1;
          }
          F2 = c[d2 + 56 >> 2] | 0;
          if ((h2 | 0) > (f2 | 0)) {
            B2 = a[d2 + 60 >> 0] | 0;
            A2 = f2;
            do {
              if (!(B2 << 24 >> 24)) {
                k2 = c[d2 + 76 >> 2] | 0;
                m2 = +g[k2 + (A2 << 6) >> 2];
                u2 = +g[k2 + (A2 << 6) + 4 >> 2];
                y2 = +g[k2 + (A2 << 6) + 8 >> 2];
                p2 = +g[k2 + (A2 << 6) + 12 >> 2];
                l2 = +g[k2 + (A2 << 6) + 16 >> 2];
                x2 = +g[k2 + (A2 << 6) + 20 >> 2];
                o2 = +g[k2 + (A2 << 6) + 24 >> 2];
                t2 = +g[k2 + (A2 << 6) + 28 >> 2];
                k2 = c[d2 + 96 >> 2] | 0;
                if (m2 < +g[k2 + (F2 << 6) >> 2])
                  g[k2 + (F2 << 6) >> 2] = m2;
                if (u2 < +g[k2 + (F2 << 6) + 4 >> 2])
                  g[k2 + (F2 << 6) + 4 >> 2] = u2;
                if (y2 < +g[k2 + (F2 << 6) + 8 >> 2])
                  g[k2 + (F2 << 6) + 8 >> 2] = y2;
                if (p2 < +g[k2 + (F2 << 6) + 12 >> 2])
                  g[k2 + (F2 << 6) + 12 >> 2] = p2;
                if (+g[k2 + (F2 << 6) + 16 >> 2] < l2)
                  g[k2 + (F2 << 6) + 16 >> 2] = l2;
                if (+g[k2 + (F2 << 6) + 20 >> 2] < x2)
                  g[k2 + (F2 << 6) + 20 >> 2] = x2;
                if (+g[k2 + (F2 << 6) + 24 >> 2] < o2)
                  g[k2 + (F2 << 6) + 24 >> 2] = o2;
                if (+g[k2 + (F2 << 6) + 28 >> 2] < t2)
                  g[k2 + (F2 << 6) + 28 >> 2] = t2;
              } else {
                r2 = c[d2 + 116 >> 2] | 0;
                p2 = +g[d2 + 36 >> 2];
                E2 = +g[d2 + 40 >> 2];
                y2 = +g[d2 + 44 >> 2];
                t2 = +g[d2 + 4 >> 2];
                L2 = +g[d2 + 8 >> 2];
                z2 = +g[d2 + 12 >> 2];
                u2 = +g[d2 + 4 >> 2];
                M2 = +g[d2 + 8 >> 2];
                C2 = +g[d2 + 12 >> 2];
                x2 = +g[d2 + 36 >> 2];
                N2 = +g[d2 + 40 >> 2];
                D2 = +g[d2 + 44 >> 2];
                s2 = ~~((+(e[r2 + (A2 << 4) >> 1] | 0) / p2 + t2 - u2) * x2) & 65534;
                k2 = ~~((+(e[r2 + (A2 << 4) + 4 >> 1] | 0) / y2 + z2 - C2) * D2) & 65534;
                q2 = ~~((+(e[r2 + (A2 << 4) + 2 >> 1] | 0) / E2 + L2 - M2) * N2) & 65534;
                v2 = (~~((+(e[r2 + (A2 << 4) + 6 >> 1] | 0) / p2 + t2 - u2) * x2 + 1) & 65535 | 1) & 65535;
                n2 = (~~((+(e[r2 + (A2 << 4) + 10 >> 1] | 0) / y2 + z2 - C2) * D2 + 1) & 65535 | 1) & 65535;
                r2 = (~~((+(e[r2 + (A2 << 4) + 8 >> 1] | 0) / E2 + L2 - M2) * N2 + 1) & 65535 | 1) & 65535;
                w2 = c[d2 + 136 >> 2] | 0;
                if ((e[w2 + (F2 << 4) >> 1] | 0) > (s2 & 65535))
                  b[w2 + (F2 << 4) >> 1] = s2;
                if ((e[w2 + (F2 << 4) + 6 >> 1] | 0) < (v2 & 65535))
                  b[w2 + (F2 << 4) + 6 >> 1] = v2;
                if ((e[w2 + (F2 << 4) + 2 >> 1] | 0) > (q2 & 65535))
                  b[w2 + (F2 << 4) + 2 >> 1] = q2;
                if ((e[w2 + (F2 << 4) + 8 >> 1] | 0) < (r2 & 65535))
                  b[w2 + (F2 << 4) + 8 >> 1] = r2;
                if ((e[w2 + (F2 << 4) + 4 >> 1] | 0) > (k2 & 65535))
                  b[w2 + (F2 << 4) + 4 >> 1] = k2;
                if ((e[w2 + (F2 << 4) + 10 >> 1] | 0) < (n2 & 65535))
                  b[w2 + (F2 << 4) + 10 >> 1] = n2;
              }
              A2 = A2 + 1 | 0;
            } while ((A2 | 0) != (h2 | 0));
          }
          c[d2 + 56 >> 2] = F2 + 1;
          wc(d2, f2, j2);
          A2 = c[d2 + 56 >> 2] | 0;
          wc(d2, j2, h2);
          w2 = (c[d2 + 56 >> 2] | 0) - H2 | 0;
          j2 = a[d2 + 60 >> 0] | 0;
          if (j2 << 24 >> 24 != 0 & (w2 << 4 | 0) > 2048) {
            s2 = c[d2 + 136 >> 2] | 0;
            q2 = c[s2 + (F2 + 1 << 4) + 12 >> 2] | 0;
            q2 = (q2 | 0) > -1 ? 1 : 0 - q2 | 0;
            v2 = c[s2 + (A2 << 4) + 12 >> 2] | 0;
            v2 = (v2 | 0) > -1 ? 1 : 0 - v2 | 0;
            if ((q2 << 4 | 0) < 2049) {
              r2 = c[d2 + 152 >> 2] | 0;
              if ((r2 | 0) == (c[d2 + 156 >> 2] | 0) ? (I2 = r2 | 0 ? r2 << 1 : 1, (r2 | 0) < (I2 | 0)) : 0) {
                if (!I2) {
                  j2 = 0;
                  n2 = r2;
                } else {
                  c[6324] = (c[6324] | 0) + 1;
                  j2 = ic(I2 << 5 | 19) | 0;
                  if (!j2)
                    j2 = 0;
                  else {
                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                    j2 = j2 + 4 + 15 & -16;
                  }
                  n2 = c[d2 + 152 >> 2] | 0;
                }
                if ((n2 | 0) > 0) {
                  k2 = 0;
                  do {
                    H2 = j2 + (k2 << 5) | 0;
                    h2 = (c[d2 + 160 >> 2] | 0) + (k2 << 5) | 0;
                    c[H2 >> 2] = c[h2 >> 2];
                    c[H2 + 4 >> 2] = c[h2 + 4 >> 2];
                    c[H2 + 8 >> 2] = c[h2 + 8 >> 2];
                    c[H2 + 12 >> 2] = c[h2 + 12 >> 2];
                    c[H2 + 16 >> 2] = c[h2 + 16 >> 2];
                    c[H2 + 20 >> 2] = c[h2 + 20 >> 2];
                    c[H2 + 24 >> 2] = c[h2 + 24 >> 2];
                    c[H2 + 28 >> 2] = c[h2 + 28 >> 2];
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) != (n2 | 0));
                }
                k2 = c[d2 + 160 >> 2] | 0;
                if (k2 | 0) {
                  if (a[d2 + 164 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[k2 + -4 >> 2] | 0);
                  }
                  c[d2 + 160 >> 2] = 0;
                }
                a[d2 + 164 >> 0] = 1;
                c[d2 + 160 >> 2] = j2;
                c[d2 + 156 >> 2] = I2;
                j2 = c[d2 + 152 >> 2] | 0;
              } else
                j2 = r2;
              c[d2 + 152 >> 2] = j2 + 1;
              I2 = (c[d2 + 160 >> 2] | 0) + (r2 << 5) | 0;
              c[I2 >> 2] = c[K2 + 32 >> 2];
              c[I2 + 4 >> 2] = c[K2 + 32 + 4 >> 2];
              c[I2 + 8 >> 2] = c[K2 + 32 + 8 >> 2];
              c[I2 + 12 >> 2] = c[K2 + 32 + 12 >> 2];
              c[I2 + 16 >> 2] = c[K2 + 32 + 16 >> 2];
              c[I2 + 20 >> 2] = c[K2 + 32 + 20 >> 2];
              c[I2 + 24 >> 2] = c[K2 + 32 + 24 >> 2];
              c[I2 + 28 >> 2] = c[K2 + 32 + 28 >> 2];
              I2 = c[d2 + 160 >> 2] | 0;
              b[I2 + (r2 << 5) >> 1] = b[s2 + (F2 + 1 << 4) >> 1] | 0;
              b[I2 + (r2 << 5) + 2 >> 1] = b[s2 + (F2 + 1 << 4) + 2 >> 1] | 0;
              b[I2 + (r2 << 5) + 4 >> 1] = b[s2 + (F2 + 1 << 4) + 4 >> 1] | 0;
              b[I2 + (r2 << 5) + 6 >> 1] = b[s2 + (F2 + 1 << 4) + 6 >> 1] | 0;
              b[I2 + (r2 << 5) + 8 >> 1] = b[s2 + (F2 + 1 << 4) + 8 >> 1] | 0;
              b[I2 + (r2 << 5) + 10 >> 1] = b[s2 + (F2 + 1 << 4) + 10 >> 1] | 0;
              c[I2 + (r2 << 5) + 12 >> 2] = F2 + 1;
              c[I2 + (r2 << 5) + 16 >> 2] = q2;
            }
            if ((v2 << 4 | 0) < 2049) {
              q2 = c[d2 + 152 >> 2] | 0;
              if ((q2 | 0) == (c[d2 + 156 >> 2] | 0) ? (J2 = q2 | 0 ? q2 << 1 : 1, (q2 | 0) < (J2 | 0)) : 0) {
                if (!J2) {
                  j2 = 0;
                  n2 = q2;
                } else {
                  c[6324] = (c[6324] | 0) + 1;
                  j2 = ic(J2 << 5 | 19) | 0;
                  if (!j2)
                    j2 = 0;
                  else {
                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                    j2 = j2 + 4 + 15 & -16;
                  }
                  n2 = c[d2 + 152 >> 2] | 0;
                }
                if ((n2 | 0) > 0) {
                  k2 = 0;
                  do {
                    I2 = j2 + (k2 << 5) | 0;
                    H2 = (c[d2 + 160 >> 2] | 0) + (k2 << 5) | 0;
                    c[I2 >> 2] = c[H2 >> 2];
                    c[I2 + 4 >> 2] = c[H2 + 4 >> 2];
                    c[I2 + 8 >> 2] = c[H2 + 8 >> 2];
                    c[I2 + 12 >> 2] = c[H2 + 12 >> 2];
                    c[I2 + 16 >> 2] = c[H2 + 16 >> 2];
                    c[I2 + 20 >> 2] = c[H2 + 20 >> 2];
                    c[I2 + 24 >> 2] = c[H2 + 24 >> 2];
                    c[I2 + 28 >> 2] = c[H2 + 28 >> 2];
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) != (n2 | 0));
                }
                k2 = c[d2 + 160 >> 2] | 0;
                if (k2 | 0) {
                  if (a[d2 + 164 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[k2 + -4 >> 2] | 0);
                  }
                  c[d2 + 160 >> 2] = 0;
                }
                a[d2 + 164 >> 0] = 1;
                c[d2 + 160 >> 2] = j2;
                c[d2 + 156 >> 2] = J2;
                j2 = c[d2 + 152 >> 2] | 0;
              } else
                j2 = q2;
              c[d2 + 152 >> 2] = j2 + 1;
              j2 = (c[d2 + 160 >> 2] | 0) + (q2 << 5) | 0;
              c[j2 >> 2] = c[K2 + 32 >> 2];
              c[j2 + 4 >> 2] = c[K2 + 32 + 4 >> 2];
              c[j2 + 8 >> 2] = c[K2 + 32 + 8 >> 2];
              c[j2 + 12 >> 2] = c[K2 + 32 + 12 >> 2];
              c[j2 + 16 >> 2] = c[K2 + 32 + 16 >> 2];
              c[j2 + 20 >> 2] = c[K2 + 32 + 20 >> 2];
              c[j2 + 24 >> 2] = c[K2 + 32 + 24 >> 2];
              c[j2 + 28 >> 2] = c[K2 + 32 + 28 >> 2];
              j2 = c[d2 + 160 >> 2] | 0;
              b[j2 + (q2 << 5) >> 1] = b[s2 + (A2 << 4) >> 1] | 0;
              b[j2 + (q2 << 5) + 2 >> 1] = b[s2 + (A2 << 4) + 2 >> 1] | 0;
              b[j2 + (q2 << 5) + 4 >> 1] = b[s2 + (A2 << 4) + 4 >> 1] | 0;
              b[j2 + (q2 << 5) + 6 >> 1] = b[s2 + (A2 << 4) + 6 >> 1] | 0;
              b[j2 + (q2 << 5) + 8 >> 1] = b[s2 + (A2 << 4) + 8 >> 1] | 0;
              b[j2 + (q2 << 5) + 10 >> 1] = b[s2 + (A2 << 4) + 10 >> 1] | 0;
              c[j2 + (q2 << 5) + 12 >> 2] = A2;
              c[j2 + (q2 << 5) + 16 >> 2] = v2;
              j2 = d2 + 152 | 0;
            } else
              j2 = d2 + 152 | 0;
            c[d2 + 168 >> 2] = c[j2 >> 2];
            j2 = a[d2 + 60 >> 0] | 0;
          }
          if (!(j2 << 24 >> 24)) {
            c[(c[d2 + 96 >> 2] | 0) + (G2 << 6) + 32 >> 2] = w2;
            i = K2;
            return;
          } else {
            c[(c[d2 + 136 >> 2] | 0) + (G2 << 4) + 12 >> 2] = 0 - w2;
            i = K2;
            return;
          }
        }
        function xc(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0;
          ea2 = i;
          i = i + 176 | 0;
          ba2 = c[d2 + 4 >> 2] | 0;
          ca2 = c[e2 + 4 >> 2] | 0;
          r2 = c[ba2 + 68 >> 2] | 0;
          s2 = c[ca2 + 68 >> 2] | 0;
          if (!((r2 | 0) != 0 & (s2 | 0) != 0)) {
            Cc(b2, d2, e2, f2, h2);
            i = ea2;
            return;
          }
          if ((c[ba2 + 72 >> 2] | 0) == (c[b2 + 108 >> 2] | 0) ? (c[ca2 + 72 >> 2] | 0) == (c[b2 + 112 >> 2] | 0) : 0)
            aa2 = b2 + 84 | 0;
          else {
            j2 = c[b2 + 84 >> 2] | 0;
            l2 = c[j2 + 8 >> 2] | 0;
            if ((l2 | 0) > 0) {
              k2 = 0;
              do {
                m2 = c[(c[j2 + 16 >> 2] | 0) + (k2 * 12 | 0) + 8 >> 2] | 0;
                if (m2 | 0) {
                  kb[c[c[m2 >> 2] >> 2] & 255](m2);
                  aa2 = c[b2 + 4 >> 2] | 0;
                  mb[c[(c[aa2 >> 2] | 0) + 60 >> 2] & 127](aa2, m2);
                }
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) != (l2 | 0));
              j2 = c[b2 + 84 >> 2] | 0;
            }
            Qh(j2);
            c[b2 + 108 >> 2] = c[ba2 + 72 >> 2];
            c[b2 + 112 >> 2] = c[ca2 + 72 >> 2];
            aa2 = b2 + 84 | 0;
          }
          a[ea2 + 128 + 16 >> 0] = 1;
          q2 = ea2 + 128 + 12 | 0;
          c[q2 >> 2] = 0;
          c[ea2 + 128 + 4 >> 2] = 0;
          c[ea2 + 128 + 8 >> 2] = 0;
          p2 = c[aa2 >> 2] | 0;
          j2 = c[p2 + 8 >> 2] | 0;
          if ((j2 | 0) > 0) {
            o2 = 0;
            do {
              k2 = c[(c[p2 + 16 >> 2] | 0) + (o2 * 12 | 0) + 8 >> 2] | 0;
              if (k2) {
                mb[c[(c[k2 >> 2] | 0) + 16 >> 2] & 127](k2, ea2 + 128 | 0);
                j2 = c[ea2 + 128 + 4 >> 2] | 0;
                if ((j2 | 0) > 0) {
                  n2 = 0;
                  do {
                    m2 = c[(c[q2 >> 2] | 0) + (n2 << 2) >> 2] | 0;
                    if (c[m2 + 780 >> 2] | 0) {
                      c[h2 + 4 >> 2] = m2;
                      k2 = c[m2 + 772 >> 2] | 0;
                      l2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                      j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                      if ((k2 | 0) == (l2 | 0))
                        Te(m2, k2 + 4 | 0, j2 + 4 | 0);
                      else
                        Te(m2, j2 + 4 | 0, l2 + 4 | 0);
                      c[h2 + 4 >> 2] = 0;
                      j2 = c[ea2 + 128 + 4 >> 2] | 0;
                    }
                    n2 = n2 + 1 | 0;
                  } while ((n2 | 0) < (j2 | 0));
                }
                if ((j2 | 0) < 0) {
                  if ((c[ea2 + 128 + 8 >> 2] | 0) < 0) {
                    k2 = c[q2 >> 2] | 0;
                    if (k2 | 0) {
                      if (a[ea2 + 128 + 16 >> 0] | 0) {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[k2 + -4 >> 2] | 0);
                      }
                      c[q2 >> 2] = 0;
                    }
                    a[ea2 + 128 + 16 >> 0] = 1;
                    c[q2 >> 2] = 0;
                    c[ea2 + 128 + 8 >> 2] = 0;
                  }
                  do {
                    c[(c[q2 >> 2] | 0) + (j2 << 2) >> 2] = 0;
                    j2 = j2 + 1 | 0;
                  } while ((j2 | 0) != 0);
                }
                c[ea2 + 128 + 4 >> 2] = 0;
                j2 = c[p2 + 8 >> 2] | 0;
              }
              o2 = o2 + 1 | 0;
            } while ((o2 | 0) < (j2 | 0));
            j2 = c[q2 >> 2] | 0;
            if (j2 | 0) {
              if (a[ea2 + 128 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[j2 + -4 >> 2] | 0);
              }
              c[q2 >> 2] = 0;
            }
          }
          q2 = c[b2 + 4 >> 2] | 0;
          k2 = c[aa2 >> 2] | 0;
          l2 = c[b2 + 72 >> 2] | 0;
          c[ea2 + 128 >> 2] = 9136;
          c[ea2 + 128 + 4 >> 2] = 0;
          c[ea2 + 128 + 8 >> 2] = d2;
          c[ea2 + 128 + 12 >> 2] = e2;
          c[ea2 + 128 + 16 >> 2] = q2;
          c[ea2 + 128 + 20 >> 2] = f2;
          c[ea2 + 128 + 24 >> 2] = h2;
          c[ea2 + 128 + 28 >> 2] = k2;
          c[ea2 + 128 + 32 >> 2] = l2;
          l2 = c[d2 + 12 >> 2] | 0;
          C2 = +g[l2 >> 2];
          D2 = +g[l2 + 16 >> 2];
          E2 = +g[l2 + 32 >> 2];
          G2 = +g[l2 + 4 >> 2];
          H2 = +g[l2 + 20 >> 2];
          I2 = +g[l2 + 36 >> 2];
          J2 = +g[l2 + 8 >> 2];
          K2 = +g[l2 + 24 >> 2];
          L2 = +g[l2 + 40 >> 2];
          M2 = -+g[l2 + 48 >> 2];
          N2 = -+g[l2 + 52 >> 2];
          O2 = -+g[l2 + 56 >> 2];
          l2 = c[e2 + 12 >> 2] | 0;
          P2 = +g[l2 >> 2];
          Q2 = +g[l2 + 16 >> 2];
          R2 = +g[l2 + 32 >> 2];
          S2 = +g[l2 + 4 >> 2];
          T2 = +g[l2 + 20 >> 2];
          U2 = +g[l2 + 36 >> 2];
          V2 = +g[l2 + 8 >> 2];
          W2 = +g[l2 + 24 >> 2];
          X2 = +g[l2 + 40 >> 2];
          Y2 = +g[l2 + 48 >> 2];
          Z2 = +g[l2 + 52 >> 2];
          _2 = +g[l2 + 56 >> 2];
          l2 = c[r2 >> 2] | 0;
          k2 = c[s2 >> 2] | 0;
          if ((l2 | 0) != 0 & (k2 | 0) != 0) {
            c[6324] = (c[6324] | 0) + 1;
            j2 = ic(1043) | 0;
            if (!j2)
              j2 = 0;
            else {
              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
              j2 = j2 + 4 + 15 & -16;
            }
            c[j2 >> 2] = l2;
            c[j2 + 4 >> 2] = k2;
            t2 = +F(+(C2 * P2 + D2 * Q2 + E2 * R2));
            u2 = +F(+(C2 * S2 + D2 * T2 + E2 * U2));
            v2 = +F(+(C2 * V2 + D2 * W2 + E2 * X2));
            w2 = +F(+(G2 * P2 + H2 * Q2 + I2 * R2));
            x2 = +F(+(G2 * S2 + H2 * T2 + I2 * U2));
            y2 = +F(+(G2 * V2 + H2 * W2 + I2 * X2));
            z2 = +F(+(J2 * P2 + K2 * Q2 + L2 * R2));
            A2 = +F(+(J2 * S2 + K2 * T2 + L2 * U2));
            B2 = +F(+(J2 * V2 + K2 * W2 + L2 * X2));
            r2 = 1;
            m2 = 124;
            l2 = 128;
            o2 = 128;
            while (1) {
              h2 = r2 + -1 | 0;
              q2 = c[j2 + (h2 << 3) >> 2] | 0;
              f2 = c[j2 + (h2 << 3) + 4 >> 2] | 0;
              pa2 = +g[f2 + 16 >> 2];
              oa2 = +g[f2 >> 2];
              na2 = +g[f2 + 20 >> 2];
              ma2 = +g[f2 + 4 >> 2];
              la2 = +g[f2 + 24 >> 2];
              fa2 = +g[f2 + 8 >> 2];
              ka2 = C2 * M2 + D2 * N2 + E2 * O2 + (C2 * Y2 + D2 * Z2 + E2 * _2) + ((C2 * P2 + D2 * Q2 + E2 * R2) * (pa2 + oa2) * 0.5 + (C2 * S2 + D2 * T2 + E2 * U2) * (na2 + ma2) * 0.5 + (C2 * V2 + D2 * W2 + E2 * X2) * (la2 + fa2) * 0.5);
              ia2 = G2 * M2 + H2 * N2 + I2 * O2 + (G2 * Y2 + H2 * Z2 + I2 * _2) + ((G2 * P2 + H2 * Q2 + I2 * R2) * (pa2 + oa2) * 0.5 + (G2 * S2 + H2 * T2 + I2 * U2) * (na2 + ma2) * 0.5 + (G2 * V2 + H2 * W2 + I2 * X2) * (la2 + fa2) * 0.5);
              ga2 = J2 * M2 + K2 * N2 + L2 * O2 + (J2 * Y2 + K2 * Z2 + L2 * _2) + ((J2 * P2 + K2 * Q2 + L2 * R2) * (pa2 + oa2) * 0.5 + (J2 * S2 + K2 * T2 + L2 * U2) * (na2 + ma2) * 0.5 + (J2 * V2 + K2 * W2 + L2 * X2) * (la2 + fa2) * 0.5);
              ja2 = ((pa2 - oa2) * 0.5 + 0) * t2 + ((na2 - ma2) * 0.5 + 0) * u2 + ((la2 - fa2) * 0.5 + 0) * v2;
              ha2 = ((pa2 - oa2) * 0.5 + 0) * w2 + ((na2 - ma2) * 0.5 + 0) * x2 + ((la2 - fa2) * 0.5 + 0) * y2;
              fa2 = ((pa2 - oa2) * 0.5 + 0) * z2 + ((na2 - ma2) * 0.5 + 0) * A2 + ((la2 - fa2) * 0.5 + 0) * B2;
              do
                if (((((+g[q2 >> 2] <= ja2 + ka2 ? +g[q2 + 16 >> 2] >= ka2 - ja2 : 0) ? +g[q2 + 4 >> 2] <= ia2 + ha2 : 0) ? +g[q2 + 20 >> 2] >= ia2 - ha2 : 0) ? +g[q2 + 8 >> 2] <= ga2 + fa2 : 0) ? +g[q2 + 24 >> 2] >= ga2 - fa2 : 0) {
                  if ((h2 | 0) > (m2 | 0)) {
                    m2 = o2 << 1;
                    do
                      if ((o2 | 0) < (m2 | 0) & (l2 | 0) < (m2 | 0)) {
                        do
                          if (!o2) {
                            k2 = 0;
                            $2 = 54;
                          } else {
                            c[6324] = (c[6324] | 0) + 1;
                            k2 = ic((o2 << 4 | 3) + 16 | 0) | 0;
                            if (!k2)
                              k2 = 0;
                            else {
                              c[(k2 + 4 + 15 & -16) + -4 >> 2] = k2;
                              k2 = k2 + 4 + 15 & -16;
                            }
                            if ((o2 | 0) > 0)
                              l2 = 0;
                            else {
                              $2 = 54;
                              break;
                            }
                            do {
                              n2 = j2 + (l2 << 3) | 0;
                              p2 = c[n2 + 4 >> 2] | 0;
                              s2 = k2 + (l2 << 3) | 0;
                              c[s2 >> 2] = c[n2 >> 2];
                              c[s2 + 4 >> 2] = p2;
                              l2 = l2 + 1 | 0;
                            } while ((l2 | 0) != (o2 | 0));
                          }
                        while (0);
                        if (($2 | 0) == 54) {
                          $2 = 0;
                          if (!j2) {
                            l2 = m2;
                            j2 = k2;
                            break;
                          }
                        }
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[j2 + -4 >> 2] | 0);
                        l2 = m2;
                        j2 = k2;
                      }
                    while (0);
                    p2 = m2 + -4 | 0;
                    k2 = m2;
                  } else {
                    p2 = m2;
                    k2 = o2;
                  }
                  m2 = (c[f2 + 40 >> 2] | 0) != 0;
                  if (!(c[q2 + 40 >> 2] | 0))
                    if (m2) {
                      n2 = c[f2 + 36 >> 2] | 0;
                      c[j2 + (h2 << 3) >> 2] = q2;
                      c[j2 + (h2 << 3) + 4 >> 2] = n2;
                      n2 = c[f2 + 40 >> 2] | 0;
                      c[j2 + (r2 << 3) >> 2] = q2;
                      c[j2 + (r2 << 3) + 4 >> 2] = n2;
                      n2 = r2 + 1 | 0;
                      m2 = p2;
                      break;
                    } else {
                      Ub[c[(c[ea2 + 128 >> 2] | 0) + 8 >> 2] & 127](ea2 + 128 | 0, q2, f2);
                      n2 = h2;
                      m2 = p2;
                      break;
                    }
                  else {
                    n2 = j2 + (h2 << 3) | 0;
                    o2 = c[q2 + 36 >> 2] | 0;
                    if (m2) {
                      m2 = c[f2 + 36 >> 2] | 0;
                      c[n2 >> 2] = o2;
                      c[j2 + (h2 << 3) + 4 >> 2] = m2;
                      m2 = r2 + 1 | 0;
                      n2 = c[f2 + 36 >> 2] | 0;
                      c[j2 + (r2 << 3) >> 2] = c[q2 + 40 >> 2];
                      c[j2 + (r2 << 3) + 4 >> 2] = n2;
                      n2 = r2 + 2 | 0;
                      s2 = c[f2 + 40 >> 2] | 0;
                      c[j2 + (m2 << 3) >> 2] = c[q2 + 36 >> 2];
                      c[j2 + (m2 << 3) + 4 >> 2] = s2;
                      m2 = c[f2 + 40 >> 2] | 0;
                      c[j2 + (n2 << 3) >> 2] = c[q2 + 40 >> 2];
                      c[j2 + (n2 << 3) + 4 >> 2] = m2;
                      n2 = r2 + 3 | 0;
                      m2 = p2;
                      break;
                    } else {
                      c[n2 >> 2] = o2;
                      c[j2 + (h2 << 3) + 4 >> 2] = f2;
                      c[j2 + (r2 << 3) >> 2] = c[q2 + 40 >> 2];
                      c[j2 + (r2 << 3) + 4 >> 2] = f2;
                      n2 = r2 + 1 | 0;
                      m2 = p2;
                      break;
                    }
                  }
                } else {
                  n2 = h2;
                  k2 = o2;
                }
              while (0);
              if (!n2)
                break;
              else {
                r2 = n2;
                o2 = k2;
              }
            }
            if (j2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[j2 + -4 >> 2] | 0);
            }
          }
          p2 = c[aa2 >> 2] | 0;
          if ((c[p2 + 8 >> 2] | 0) > 0) {
            o2 = 0;
            do {
              j2 = c[p2 + 16 >> 2] | 0;
              k2 = c[j2 + (o2 * 12 | 0) + 8 >> 2] | 0;
              do
                if (k2 | 0) {
                  $2 = c[j2 + (o2 * 12 | 0) >> 2] | 0;
                  s2 = c[ba2 + 28 >> 2] | 0;
                  r2 = c[s2 + ($2 * 80 | 0) + 64 >> 2] | 0;
                  h2 = c[d2 + 12 >> 2] | 0;
                  pa2 = +g[h2 >> 2];
                  Q2 = +g[h2 + 4 >> 2];
                  P2 = +g[h2 + 8 >> 2];
                  ma2 = +g[h2 + 16 >> 2];
                  ka2 = +g[h2 + 20 >> 2];
                  ia2 = +g[h2 + 24 >> 2];
                  la2 = +g[h2 + 32 >> 2];
                  ha2 = +g[h2 + 36 >> 2];
                  V2 = +g[h2 + 40 >> 2];
                  ga2 = +g[s2 + ($2 * 80 | 0) >> 2];
                  fa2 = +g[s2 + ($2 * 80 | 0) + 16 >> 2];
                  _2 = +g[s2 + ($2 * 80 | 0) + 32 >> 2];
                  Z2 = +g[s2 + ($2 * 80 | 0) + 4 >> 2];
                  Y2 = +g[s2 + ($2 * 80 | 0) + 20 >> 2];
                  X2 = +g[s2 + ($2 * 80 | 0) + 36 >> 2];
                  ja2 = +g[s2 + ($2 * 80 | 0) + 8 >> 2];
                  W2 = +g[s2 + ($2 * 80 | 0) + 24 >> 2];
                  U2 = +g[s2 + ($2 * 80 | 0) + 40 >> 2];
                  oa2 = +g[s2 + ($2 * 80 | 0) + 48 >> 2];
                  na2 = +g[s2 + ($2 * 80 | 0) + 52 >> 2];
                  R2 = +g[s2 + ($2 * 80 | 0) + 56 >> 2];
                  T2 = +g[h2 + 48 >> 2] + (pa2 * oa2 + Q2 * na2 + P2 * R2);
                  S2 = +g[h2 + 52 >> 2] + (ma2 * oa2 + ka2 * na2 + ia2 * R2);
                  R2 = +g[h2 + 56 >> 2] + (la2 * oa2 + ha2 * na2 + V2 * R2);
                  g[ea2 >> 2] = pa2 * ga2 + Q2 * fa2 + P2 * _2;
                  g[ea2 + 4 >> 2] = pa2 * Z2 + Q2 * Y2 + P2 * X2;
                  g[ea2 + 8 >> 2] = pa2 * ja2 + Q2 * W2 + P2 * U2;
                  g[ea2 + 12 >> 2] = 0;
                  g[ea2 + 16 >> 2] = ma2 * ga2 + ka2 * fa2 + ia2 * _2;
                  g[ea2 + 20 >> 2] = ma2 * Z2 + ka2 * Y2 + ia2 * X2;
                  g[ea2 + 24 >> 2] = ma2 * ja2 + ka2 * W2 + ia2 * U2;
                  g[ea2 + 28 >> 2] = 0;
                  g[ea2 + 32 >> 2] = la2 * ga2 + ha2 * fa2 + V2 * _2;
                  g[ea2 + 36 >> 2] = la2 * Z2 + ha2 * Y2 + V2 * X2;
                  g[ea2 + 40 >> 2] = la2 * ja2 + ha2 * W2 + V2 * U2;
                  g[ea2 + 44 >> 2] = 0;
                  g[ea2 + 48 >> 2] = T2;
                  g[ea2 + 52 >> 2] = S2;
                  g[ea2 + 56 >> 2] = R2;
                  g[ea2 + 60 >> 2] = 0;
                  Yb[c[(c[r2 >> 2] | 0) + 8 >> 2] & 127](r2, ea2, ea2 + 112 | 0, ea2 + 96 | 0);
                  r2 = c[(c[p2 + 16 >> 2] | 0) + (o2 * 12 | 0) + 4 >> 2] | 0;
                  h2 = c[ca2 + 28 >> 2] | 0;
                  $2 = c[h2 + (r2 * 80 | 0) + 64 >> 2] | 0;
                  s2 = c[e2 + 12 >> 2] | 0;
                  R2 = +g[s2 >> 2];
                  S2 = +g[s2 + 4 >> 2];
                  T2 = +g[s2 + 8 >> 2];
                  U2 = +g[s2 + 16 >> 2];
                  V2 = +g[s2 + 20 >> 2];
                  W2 = +g[s2 + 24 >> 2];
                  ha2 = +g[s2 + 32 >> 2];
                  ja2 = +g[s2 + 36 >> 2];
                  la2 = +g[s2 + 40 >> 2];
                  X2 = +g[h2 + (r2 * 80 | 0) >> 2];
                  Y2 = +g[h2 + (r2 * 80 | 0) + 16 >> 2];
                  Z2 = +g[h2 + (r2 * 80 | 0) + 32 >> 2];
                  _2 = +g[h2 + (r2 * 80 | 0) + 4 >> 2];
                  fa2 = +g[h2 + (r2 * 80 | 0) + 20 >> 2];
                  ga2 = +g[h2 + (r2 * 80 | 0) + 36 >> 2];
                  ia2 = +g[h2 + (r2 * 80 | 0) + 8 >> 2];
                  ka2 = +g[h2 + (r2 * 80 | 0) + 24 >> 2];
                  ma2 = +g[h2 + (r2 * 80 | 0) + 40 >> 2];
                  P2 = +g[h2 + (r2 * 80 | 0) + 48 >> 2];
                  Q2 = +g[h2 + (r2 * 80 | 0) + 52 >> 2];
                  pa2 = +g[h2 + (r2 * 80 | 0) + 56 >> 2];
                  na2 = +g[s2 + 48 >> 2] + (R2 * P2 + S2 * Q2 + T2 * pa2);
                  oa2 = +g[s2 + 52 >> 2] + (U2 * P2 + V2 * Q2 + W2 * pa2);
                  pa2 = +g[s2 + 56 >> 2] + (ha2 * P2 + ja2 * Q2 + la2 * pa2);
                  g[ea2 >> 2] = R2 * X2 + S2 * Y2 + T2 * Z2;
                  g[ea2 + 4 >> 2] = R2 * _2 + S2 * fa2 + T2 * ga2;
                  g[ea2 + 8 >> 2] = R2 * ia2 + S2 * ka2 + T2 * ma2;
                  g[ea2 + 12 >> 2] = 0;
                  g[ea2 + 16 >> 2] = U2 * X2 + V2 * Y2 + W2 * Z2;
                  g[ea2 + 20 >> 2] = U2 * _2 + V2 * fa2 + W2 * ga2;
                  g[ea2 + 24 >> 2] = U2 * ia2 + V2 * ka2 + W2 * ma2;
                  g[ea2 + 28 >> 2] = 0;
                  g[ea2 + 32 >> 2] = ha2 * X2 + ja2 * Y2 + la2 * Z2;
                  g[ea2 + 36 >> 2] = ha2 * _2 + ja2 * fa2 + la2 * ga2;
                  g[ea2 + 40 >> 2] = ha2 * ia2 + ja2 * ka2 + la2 * ma2;
                  g[ea2 + 44 >> 2] = 0;
                  g[ea2 + 48 >> 2] = na2;
                  g[ea2 + 52 >> 2] = oa2;
                  g[ea2 + 56 >> 2] = pa2;
                  g[ea2 + 60 >> 2] = 0;
                  Yb[c[(c[$2 >> 2] | 0) + 8 >> 2] & 127]($2, ea2, ea2 + 80 | 0, ea2 + 64 | 0);
                  if (!(+g[ea2 + 112 >> 2] > +g[ea2 + 64 >> 2]) ? !(+g[ea2 + 96 >> 2] < +g[ea2 + 80 >> 2]) : 0)
                    j2 = 1;
                  else
                    j2 = 0;
                  if (!(!(+g[ea2 + 112 + 8 >> 2] > +g[ea2 + 64 + 8 >> 2]) ? !(+g[ea2 + 96 + 8 >> 2] < +g[ea2 + 80 + 8 >> 2]) : 0))
                    j2 = 0;
                  if (!(+g[ea2 + 112 + 4 >> 2] > +g[ea2 + 64 + 4 >> 2]) ? !(+g[ea2 + 96 + 4 >> 2] < +g[ea2 + 80 + 4 >> 2] | j2 ^ 1) : 0)
                    break;
                  kb[c[c[k2 >> 2] >> 2] & 255](k2);
                  n2 = c[b2 + 4 >> 2] | 0;
                  mb[c[(c[n2 >> 2] | 0) + 60 >> 2] & 127](n2, k2);
                  n2 = c[p2 + 16 >> 2] | 0;
                  m2 = c[n2 + (o2 * 12 | 0) >> 2] | 0;
                  n2 = c[n2 + (o2 * 12 | 0) + 4 >> 2] | 0;
                  k2 = c[b2 + 92 >> 2] | 0;
                  if ((k2 | 0) == (c[b2 + 96 >> 2] | 0) ? (da2 = k2 | 0 ? k2 << 1 : 1, (k2 | 0) < (da2 | 0)) : 0) {
                    if (!da2)
                      j2 = 0;
                    else {
                      c[6324] = (c[6324] | 0) + 1;
                      j2 = ic((da2 * 12 | 3) + 16 | 0) | 0;
                      if (!j2)
                        j2 = 0;
                      else {
                        c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                        j2 = j2 + 4 + 15 & -16;
                      }
                      k2 = c[b2 + 92 >> 2] | 0;
                    }
                    if ((k2 | 0) > 0) {
                      l2 = 0;
                      do {
                        $2 = j2 + (l2 * 12 | 0) | 0;
                        s2 = (c[b2 + 100 >> 2] | 0) + (l2 * 12 | 0) | 0;
                        c[$2 >> 2] = c[s2 >> 2];
                        c[$2 + 4 >> 2] = c[s2 + 4 >> 2];
                        c[$2 + 8 >> 2] = c[s2 + 8 >> 2];
                        l2 = l2 + 1 | 0;
                      } while ((l2 | 0) != (k2 | 0));
                    }
                    k2 = c[b2 + 100 >> 2] | 0;
                    if (k2 | 0) {
                      if (a[b2 + 104 >> 0] | 0) {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[k2 + -4 >> 2] | 0);
                      }
                      c[b2 + 100 >> 2] = 0;
                    }
                    a[b2 + 104 >> 0] = 1;
                    c[b2 + 100 >> 2] = j2;
                    c[b2 + 96 >> 2] = da2;
                    j2 = c[b2 + 92 >> 2] | 0;
                  } else
                    j2 = k2;
                  $2 = c[b2 + 100 >> 2] | 0;
                  c[$2 + (j2 * 12 | 0) >> 2] = m2;
                  c[$2 + (j2 * 12 | 0) + 4 >> 2] = n2;
                  c[$2 + (j2 * 12 | 0) + 8 >> 2] = 0;
                  c[b2 + 92 >> 2] = (c[b2 + 92 >> 2] | 0) + 1;
                }
              while (0);
              o2 = o2 + 1 | 0;
            } while ((o2 | 0) < (c[p2 + 8 >> 2] | 0));
            k2 = b2 + 100 | 0;
            l2 = b2 + 92 | 0;
          } else {
            k2 = b2 + 100 | 0;
            l2 = b2 + 92 | 0;
          }
          if ((c[l2 >> 2] | 0) > 0) {
            j2 = 0;
            do {
              e2 = c[aa2 >> 2] | 0;
              da2 = c[k2 >> 2] | 0;
              yb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 63](e2, c[da2 + (j2 * 12 | 0) >> 2] | 0, c[da2 + (j2 * 12 | 0) + 4 >> 2] | 0) | 0;
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) < (c[l2 >> 2] | 0));
          }
          j2 = c[k2 >> 2] | 0;
          if (j2 | 0) {
            if (a[b2 + 104 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[j2 + -4 >> 2] | 0);
            }
            c[k2 >> 2] = 0;
          }
          a[b2 + 104 >> 0] = 1;
          c[k2 >> 2] = 0;
          c[l2 >> 2] = 0;
          c[b2 + 96 >> 2] = 0;
          i = ea2;
          return;
        }
        function yc(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0;
          t2 = i;
          i = i + 48 | 0;
          z2 = 1 / +g[a2 + 112 >> 2];
          A2 = 1 / +g[a2 + 116 >> 2];
          B2 = 1 / +g[a2 + 120 >> 2];
          u2 = +g[a2 + 52 >> 2];
          v2 = z2 * +g[d2 >> 2] + u2;
          o2 = +g[a2 + 56 >> 2];
          j2 = A2 * +g[d2 + 4 >> 2] + o2;
          q2 = +g[a2 + 60 >> 2];
          p2 = B2 * +g[d2 + 8 >> 2] + q2;
          u2 = z2 * +g[e2 >> 2] + u2;
          o2 = A2 * +g[e2 + 4 >> 2] + o2;
          q2 = B2 * +g[e2 + 8 >> 2] + q2;
          B2 = +g[a2 + 20 >> 2];
          v2 = v2 < B2 ? B2 : v2;
          A2 = +g[a2 + 24 >> 2];
          j2 = j2 < A2 ? A2 : j2;
          z2 = +g[a2 + 28 >> 2];
          p2 = p2 < z2 ? z2 : p2;
          y2 = +g[a2 + 36 >> 2];
          v2 = y2 < v2 ? y2 : v2;
          x2 = +g[a2 + 40 >> 2];
          j2 = x2 < j2 ? x2 : j2;
          w2 = +g[a2 + 44 >> 2];
          p2 = w2 < p2 ? w2 : p2;
          u2 = u2 < B2 ? B2 : u2;
          o2 = o2 < A2 ? A2 : o2;
          q2 = q2 < z2 ? z2 : q2;
          u2 = y2 < u2 ? y2 : u2;
          o2 = x2 < o2 ? x2 : o2;
          q2 = w2 < q2 ? w2 : q2;
          m2 = ~~(v2 + (v2 < 0 ? -0.5 : 0.5)) + -1 | 0;
          h2 = ~~(u2 + (u2 < 0 ? -0.5 : 0.5)) + 1 | 0;
          n2 = ~~(j2 + (j2 < 0 ? -0.5 : 0.5)) + -1 | 0;
          k2 = ~~(o2 + (o2 < 0 ? -0.5 : 0.5)) + 1 | 0;
          f2 = ~~(p2 + (p2 < 0 ? -0.5 : 0.5)) + -1 | 0;
          d2 = ~~(q2 + (q2 < 0 ? -0.5 : 0.5)) + 1 | 0;
          l2 = (c[a2 + 68 >> 2] | 0) + -1 | 0;
          e2 = (c[a2 + 72 >> 2] | 0) + -1 | 0;
          switch (c[a2 + 108 >> 2] | 0) {
            case 0: {
              e2 = (d2 | 0) < (e2 | 0) ? d2 : e2;
              d2 = (f2 | 0) > 0 ? f2 : 0;
              l2 = (k2 | 0) < (l2 | 0) ? k2 : l2;
              n2 = (n2 | 0) > 0 ? n2 : 0;
              break;
            }
            case 1: {
              e2 = (d2 | 0) < (e2 | 0) ? d2 : e2;
              d2 = (f2 | 0) > 0 ? f2 : 0;
              l2 = (h2 | 0) < (l2 | 0) ? h2 : l2;
              n2 = (m2 | 0) > 0 ? m2 : 0;
              break;
            }
            case 2: {
              e2 = (k2 | 0) < (e2 | 0) ? k2 : e2;
              d2 = (n2 | 0) > 0 ? n2 : 0;
              l2 = (h2 | 0) < (l2 | 0) ? h2 : l2;
              n2 = (m2 | 0) > 0 ? m2 : 0;
              break;
            }
            default: {
              d2 = 0;
              n2 = 0;
            }
          }
          if ((d2 | 0) >= (e2 | 0)) {
            i = t2;
            return;
          }
          r2 = (n2 | 0) < (l2 | 0);
          do
            if (r2) {
              k2 = (d2 & 1 | 0) == 0;
              m2 = d2 + 1 | 0;
              q2 = +(d2 | 0);
              f2 = n2;
              while (1) {
                h2 = c[a2 + 104 >> 2] | 0;
                do
                  if (!((h2 & 255) << 24 >> 24)) {
                    if (h2 & 65280 | 0 ? (f2 + d2 & 1 | 0) == 0 : 0) {
                      s2 = 16;
                      break;
                    }
                    if (!(k2 & (h2 & 16711680 | 0) != 0)) {
                      j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, f2, d2);
                      switch (c[a2 + 108 >> 2] | 0) {
                        case 0: {
                          j2 = j2 - +g[a2 + 52 >> 2];
                          o2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 >> 2] = j2;
                          g[t2 + 4 >> 2] = o2;
                          g[t2 + 8 >> 2] = p2;
                          g[t2 + 12 >> 2] = 0;
                          break;
                        }
                        case 1: {
                          B2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = j2 - +g[a2 + 56 >> 2];
                          p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 >> 2] = B2;
                          g[t2 + 4 >> 2] = o2;
                          g[t2 + 8 >> 2] = p2;
                          g[t2 + 12 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        case 2: {
                          B2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                          p2 = j2 - +g[a2 + 60 >> 2];
                          g[t2 >> 2] = B2;
                          g[t2 + 4 >> 2] = o2;
                          g[t2 + 8 >> 2] = p2;
                          g[t2 + 12 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        default: {
                          j2 = +g[t2 >> 2];
                          o2 = +g[t2 + 4 >> 2];
                          p2 = +g[t2 + 8 >> 2];
                        }
                      }
                      g[t2 >> 2] = j2 * +g[a2 + 112 >> 2];
                      g[t2 + 4 >> 2] = o2 * +g[a2 + 116 >> 2];
                      g[t2 + 8 >> 2] = p2 * +g[a2 + 120 >> 2];
                      j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, f2, m2);
                      switch (c[a2 + 108 >> 2] | 0) {
                        case 0: {
                          j2 = j2 - +g[a2 + 52 >> 2];
                          o2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 + 16 >> 2] = j2;
                          g[t2 + 20 >> 2] = o2;
                          g[t2 + 24 >> 2] = p2;
                          g[t2 + 28 >> 2] = 0;
                          break;
                        }
                        case 1: {
                          B2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = j2 - +g[a2 + 56 >> 2];
                          p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 + 16 >> 2] = B2;
                          g[t2 + 20 >> 2] = o2;
                          g[t2 + 24 >> 2] = p2;
                          g[t2 + 28 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        case 2: {
                          B2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                          p2 = j2 - +g[a2 + 60 >> 2];
                          g[t2 + 16 >> 2] = B2;
                          g[t2 + 20 >> 2] = o2;
                          g[t2 + 24 >> 2] = p2;
                          g[t2 + 28 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        default: {
                          j2 = +g[t2 + 16 >> 2];
                          o2 = +g[t2 + 20 >> 2];
                          p2 = +g[t2 + 24 >> 2];
                        }
                      }
                      g[t2 + 16 >> 2] = j2 * +g[a2 + 112 >> 2];
                      g[t2 + 20 >> 2] = o2 * +g[a2 + 116 >> 2];
                      g[t2 + 24 >> 2] = p2 * +g[a2 + 120 >> 2];
                      h2 = f2 + 1 | 0;
                      j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, h2, d2);
                      switch (c[a2 + 108 >> 2] | 0) {
                        case 0: {
                          j2 = j2 - +g[a2 + 52 >> 2];
                          o2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 + 32 >> 2] = j2;
                          g[t2 + 36 >> 2] = o2;
                          g[t2 + 40 >> 2] = p2;
                          g[t2 + 44 >> 2] = 0;
                          break;
                        }
                        case 1: {
                          B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = j2 - +g[a2 + 56 >> 2];
                          p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 + 32 >> 2] = B2;
                          g[t2 + 36 >> 2] = o2;
                          g[t2 + 40 >> 2] = p2;
                          g[t2 + 44 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        case 2: {
                          B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                          p2 = j2 - +g[a2 + 60 >> 2];
                          g[t2 + 32 >> 2] = B2;
                          g[t2 + 36 >> 2] = o2;
                          g[t2 + 40 >> 2] = p2;
                          g[t2 + 44 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        default: {
                          j2 = +g[t2 + 32 >> 2];
                          o2 = +g[t2 + 36 >> 2];
                          p2 = +g[t2 + 40 >> 2];
                        }
                      }
                      g[t2 + 32 >> 2] = j2 * +g[a2 + 112 >> 2];
                      g[t2 + 36 >> 2] = o2 * +g[a2 + 116 >> 2];
                      g[t2 + 40 >> 2] = p2 * +g[a2 + 120 >> 2];
                      Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, t2, f2, d2);
                      j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, h2, d2);
                      switch (c[a2 + 108 >> 2] | 0) {
                        case 0: {
                          j2 = j2 - +g[a2 + 52 >> 2];
                          o2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 >> 2] = j2;
                          g[t2 + 4 >> 2] = o2;
                          g[t2 + 8 >> 2] = p2;
                          g[t2 + 12 >> 2] = 0;
                          break;
                        }
                        case 1: {
                          B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = j2 - +g[a2 + 56 >> 2];
                          p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 >> 2] = B2;
                          g[t2 + 4 >> 2] = o2;
                          g[t2 + 8 >> 2] = p2;
                          g[t2 + 12 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        case 2: {
                          B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                          p2 = j2 - +g[a2 + 60 >> 2];
                          g[t2 >> 2] = B2;
                          g[t2 + 4 >> 2] = o2;
                          g[t2 + 8 >> 2] = p2;
                          g[t2 + 12 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        default: {
                          j2 = +g[t2 >> 2];
                          o2 = +g[t2 + 4 >> 2];
                          p2 = +g[t2 + 8 >> 2];
                        }
                      }
                      g[t2 >> 2] = j2 * +g[a2 + 112 >> 2];
                      g[t2 + 4 >> 2] = o2 * +g[a2 + 116 >> 2];
                      g[t2 + 8 >> 2] = p2 * +g[a2 + 120 >> 2];
                      j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, h2, m2);
                      switch (c[a2 + 108 >> 2] | 0) {
                        case 0: {
                          j2 = j2 - +g[a2 + 52 >> 2];
                          o2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 + 32 >> 2] = j2;
                          g[t2 + 36 >> 2] = o2;
                          g[t2 + 40 >> 2] = p2;
                          g[t2 + 44 >> 2] = 0;
                          break;
                        }
                        case 1: {
                          B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = j2 - +g[a2 + 56 >> 2];
                          p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                          g[t2 + 32 >> 2] = B2;
                          g[t2 + 36 >> 2] = o2;
                          g[t2 + 40 >> 2] = p2;
                          g[t2 + 44 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        case 2: {
                          B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                          o2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                          p2 = j2 - +g[a2 + 60 >> 2];
                          g[t2 + 32 >> 2] = B2;
                          g[t2 + 36 >> 2] = o2;
                          g[t2 + 40 >> 2] = p2;
                          g[t2 + 44 >> 2] = 0;
                          j2 = B2;
                          break;
                        }
                        default: {
                          j2 = +g[t2 + 32 >> 2];
                          o2 = +g[t2 + 36 >> 2];
                          p2 = +g[t2 + 40 >> 2];
                        }
                      }
                      g[t2 + 32 >> 2] = j2 * +g[a2 + 112 >> 2];
                      g[t2 + 36 >> 2] = o2 * +g[a2 + 116 >> 2];
                      g[t2 + 40 >> 2] = p2 * +g[a2 + 120 >> 2];
                      Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, t2, f2, d2);
                      f2 = h2;
                    } else
                      s2 = 16;
                  } else
                    s2 = 16;
                while (0);
                if ((s2 | 0) == 16) {
                  s2 = 0;
                  j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, f2, d2);
                  switch (c[a2 + 108 >> 2] | 0) {
                    case 0: {
                      j2 = j2 - +g[a2 + 52 >> 2];
                      o2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 >> 2] = j2;
                      g[t2 + 4 >> 2] = o2;
                      g[t2 + 8 >> 2] = p2;
                      g[t2 + 12 >> 2] = 0;
                      break;
                    }
                    case 1: {
                      B2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = j2 - +g[a2 + 56 >> 2];
                      p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 >> 2] = B2;
                      g[t2 + 4 >> 2] = o2;
                      g[t2 + 8 >> 2] = p2;
                      g[t2 + 12 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    case 2: {
                      B2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                      p2 = j2 - +g[a2 + 60 >> 2];
                      g[t2 >> 2] = B2;
                      g[t2 + 4 >> 2] = o2;
                      g[t2 + 8 >> 2] = p2;
                      g[t2 + 12 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    default: {
                      j2 = +g[t2 >> 2];
                      o2 = +g[t2 + 4 >> 2];
                      p2 = +g[t2 + 8 >> 2];
                    }
                  }
                  g[t2 >> 2] = j2 * +g[a2 + 112 >> 2];
                  g[t2 + 4 >> 2] = o2 * +g[a2 + 116 >> 2];
                  g[t2 + 8 >> 2] = p2 * +g[a2 + 120 >> 2];
                  j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, f2, m2);
                  switch (c[a2 + 108 >> 2] | 0) {
                    case 0: {
                      j2 = j2 - +g[a2 + 52 >> 2];
                      o2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 + 16 >> 2] = j2;
                      g[t2 + 20 >> 2] = o2;
                      g[t2 + 24 >> 2] = p2;
                      g[t2 + 28 >> 2] = 0;
                      break;
                    }
                    case 1: {
                      B2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = j2 - +g[a2 + 56 >> 2];
                      p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 + 16 >> 2] = B2;
                      g[t2 + 20 >> 2] = o2;
                      g[t2 + 24 >> 2] = p2;
                      g[t2 + 28 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    case 2: {
                      B2 = +(f2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                      p2 = j2 - +g[a2 + 60 >> 2];
                      g[t2 + 16 >> 2] = B2;
                      g[t2 + 20 >> 2] = o2;
                      g[t2 + 24 >> 2] = p2;
                      g[t2 + 28 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    default: {
                      j2 = +g[t2 + 16 >> 2];
                      o2 = +g[t2 + 20 >> 2];
                      p2 = +g[t2 + 24 >> 2];
                    }
                  }
                  g[t2 + 16 >> 2] = j2 * +g[a2 + 112 >> 2];
                  g[t2 + 20 >> 2] = o2 * +g[a2 + 116 >> 2];
                  g[t2 + 24 >> 2] = p2 * +g[a2 + 120 >> 2];
                  h2 = f2 + 1 | 0;
                  j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, h2, m2);
                  switch (c[a2 + 108 >> 2] | 0) {
                    case 0: {
                      j2 = j2 - +g[a2 + 52 >> 2];
                      o2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 + 32 >> 2] = j2;
                      g[t2 + 36 >> 2] = o2;
                      g[t2 + 40 >> 2] = p2;
                      g[t2 + 44 >> 2] = 0;
                      break;
                    }
                    case 1: {
                      B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = j2 - +g[a2 + 56 >> 2];
                      p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 + 32 >> 2] = B2;
                      g[t2 + 36 >> 2] = o2;
                      g[t2 + 40 >> 2] = p2;
                      g[t2 + 44 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    case 2: {
                      B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                      p2 = j2 - +g[a2 + 60 >> 2];
                      g[t2 + 32 >> 2] = B2;
                      g[t2 + 36 >> 2] = o2;
                      g[t2 + 40 >> 2] = p2;
                      g[t2 + 44 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    default: {
                      j2 = +g[t2 + 32 >> 2];
                      o2 = +g[t2 + 36 >> 2];
                      p2 = +g[t2 + 40 >> 2];
                    }
                  }
                  g[t2 + 32 >> 2] = j2 * +g[a2 + 112 >> 2];
                  g[t2 + 36 >> 2] = o2 * +g[a2 + 116 >> 2];
                  g[t2 + 40 >> 2] = p2 * +g[a2 + 120 >> 2];
                  Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, t2, f2, d2);
                  j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, h2, m2);
                  switch (c[a2 + 108 >> 2] | 0) {
                    case 0: {
                      j2 = j2 - +g[a2 + 52 >> 2];
                      o2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 + 16 >> 2] = j2;
                      g[t2 + 20 >> 2] = o2;
                      g[t2 + 24 >> 2] = p2;
                      g[t2 + 28 >> 2] = 0;
                      break;
                    }
                    case 1: {
                      B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = j2 - +g[a2 + 56 >> 2];
                      p2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 + 16 >> 2] = B2;
                      g[t2 + 20 >> 2] = o2;
                      g[t2 + 24 >> 2] = p2;
                      g[t2 + 28 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    case 2: {
                      B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = +(m2 | 0) - +g[a2 + 88 >> 2] * 0.5;
                      p2 = j2 - +g[a2 + 60 >> 2];
                      g[t2 + 16 >> 2] = B2;
                      g[t2 + 20 >> 2] = o2;
                      g[t2 + 24 >> 2] = p2;
                      g[t2 + 28 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    default: {
                      j2 = +g[t2 + 16 >> 2];
                      o2 = +g[t2 + 20 >> 2];
                      p2 = +g[t2 + 24 >> 2];
                    }
                  }
                  g[t2 + 16 >> 2] = j2 * +g[a2 + 112 >> 2];
                  g[t2 + 20 >> 2] = o2 * +g[a2 + 116 >> 2];
                  g[t2 + 24 >> 2] = p2 * +g[a2 + 120 >> 2];
                  j2 = +Kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 15](a2, h2, d2);
                  switch (c[a2 + 108 >> 2] | 0) {
                    case 0: {
                      j2 = j2 - +g[a2 + 52 >> 2];
                      o2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 + 32 >> 2] = j2;
                      g[t2 + 36 >> 2] = o2;
                      g[t2 + 40 >> 2] = p2;
                      g[t2 + 44 >> 2] = 0;
                      break;
                    }
                    case 1: {
                      B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = j2 - +g[a2 + 56 >> 2];
                      p2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                      g[t2 + 32 >> 2] = B2;
                      g[t2 + 36 >> 2] = o2;
                      g[t2 + 40 >> 2] = p2;
                      g[t2 + 44 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    case 2: {
                      B2 = +(h2 | 0) - +g[a2 + 84 >> 2] * 0.5;
                      o2 = q2 - +g[a2 + 88 >> 2] * 0.5;
                      p2 = j2 - +g[a2 + 60 >> 2];
                      g[t2 + 32 >> 2] = B2;
                      g[t2 + 36 >> 2] = o2;
                      g[t2 + 40 >> 2] = p2;
                      g[t2 + 44 >> 2] = 0;
                      j2 = B2;
                      break;
                    }
                    default: {
                      j2 = +g[t2 + 32 >> 2];
                      o2 = +g[t2 + 36 >> 2];
                      p2 = +g[t2 + 40 >> 2];
                    }
                  }
                  g[t2 + 32 >> 2] = j2 * +g[a2 + 112 >> 2];
                  g[t2 + 36 >> 2] = o2 * +g[a2 + 116 >> 2];
                  g[t2 + 40 >> 2] = p2 * +g[a2 + 120 >> 2];
                  Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, t2, f2, d2);
                  f2 = h2;
                }
                if ((f2 | 0) == (l2 | 0)) {
                  d2 = m2;
                  break;
                }
              }
            } else
              d2 = d2 + 1 | 0;
          while ((d2 | 0) != (e2 | 0));
          i = t2;
          return;
        }
        function zc(b2, d2) {
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0;
          s2 = i;
          i = i + 96 | 0;
          o2 = c[b2 + 128 >> 2] | 0;
          if (!o2) {
            i = s2;
            return;
          }
          e2 = c[b2 + 8 >> 2] | 0;
          if ((e2 | 0) < (o2 | 0)) {
            if ((c[b2 + 12 >> 2] | 0) < (o2 | 0)) {
              c[6324] = (c[6324] | 0) + 1;
              h2 = ic((o2 << 4 | 3) + 16 | 0) | 0;
              if (!h2)
                k2 = 0;
              else {
                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                k2 = h2 + 4 + 15 & -16;
              }
              j2 = c[b2 + 8 >> 2] | 0;
              if ((j2 | 0) > 0) {
                h2 = 0;
                do {
                  p2 = k2 + (h2 << 4) | 0;
                  n2 = (c[b2 + 16 >> 2] | 0) + (h2 << 4) | 0;
                  c[p2 >> 2] = c[n2 >> 2];
                  c[p2 + 4 >> 2] = c[n2 + 4 >> 2];
                  c[p2 + 8 >> 2] = c[n2 + 8 >> 2];
                  c[p2 + 12 >> 2] = c[n2 + 12 >> 2];
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != (j2 | 0));
              }
              h2 = c[b2 + 16 >> 2] | 0;
              if (h2 | 0) {
                if (a[b2 + 20 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[h2 + -4 >> 2] | 0);
                }
                c[b2 + 16 >> 2] = 0;
              }
              a[b2 + 20 >> 0] = 1;
              c[b2 + 16 >> 2] = k2;
              c[b2 + 12 >> 2] = o2;
              h2 = b2 + 16 | 0;
            } else
              h2 = b2 + 16 | 0;
            do {
              p2 = (c[h2 >> 2] | 0) + (e2 << 4) | 0;
              c[p2 >> 2] = c[s2 + 48 >> 2];
              c[p2 + 4 >> 2] = c[s2 + 48 + 4 >> 2];
              c[p2 + 8 >> 2] = c[s2 + 48 + 8 >> 2];
              c[p2 + 12 >> 2] = c[s2 + 48 + 12 >> 2];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (o2 | 0));
          }
          c[b2 + 8 >> 2] = o2;
          e2 = c[b2 + 28 >> 2] | 0;
          if ((e2 | 0) < (o2 | 0)) {
            if ((c[b2 + 32 >> 2] | 0) < (o2 | 0)) {
              c[6324] = (c[6324] | 0) + 1;
              h2 = ic((o2 << 4 | 3) + 16 | 0) | 0;
              if (!h2)
                k2 = 0;
              else {
                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                k2 = h2 + 4 + 15 & -16;
              }
              j2 = c[b2 + 28 >> 2] | 0;
              if ((j2 | 0) > 0) {
                h2 = 0;
                do {
                  p2 = k2 + (h2 << 4) | 0;
                  n2 = (c[b2 + 36 >> 2] | 0) + (h2 << 4) | 0;
                  c[p2 >> 2] = c[n2 >> 2];
                  c[p2 + 4 >> 2] = c[n2 + 4 >> 2];
                  c[p2 + 8 >> 2] = c[n2 + 8 >> 2];
                  c[p2 + 12 >> 2] = c[n2 + 12 >> 2];
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != (j2 | 0));
              }
              h2 = c[b2 + 36 >> 2] | 0;
              if (h2 | 0) {
                if (a[b2 + 40 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[h2 + -4 >> 2] | 0);
                }
                c[b2 + 36 >> 2] = 0;
              }
              a[b2 + 40 >> 0] = 1;
              c[b2 + 36 >> 2] = k2;
              c[b2 + 32 >> 2] = o2;
              h2 = b2 + 36 | 0;
            } else
              h2 = b2 + 36 | 0;
            do {
              p2 = (c[h2 >> 2] | 0) + (e2 << 4) | 0;
              c[p2 >> 2] = c[s2 + 48 >> 2];
              c[p2 + 4 >> 2] = c[s2 + 48 + 4 >> 2];
              c[p2 + 8 >> 2] = c[s2 + 48 + 8 >> 2];
              c[p2 + 12 >> 2] = c[s2 + 48 + 12 >> 2];
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (o2 | 0));
          }
          c[b2 + 28 >> 2] = o2;
          n2 = c[b2 + 48 >> 2] | 0;
          if ((n2 | 0) < (o2 | 0)) {
            do
              if ((c[b2 + 52 >> 2] | 0) < (o2 | 0)) {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((o2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                j2 = c[b2 + 48 >> 2] | 0;
                k2 = c[b2 + 56 >> 2] | 0;
                if ((j2 | 0) <= 0) {
                  if (!k2) {
                    a[b2 + 60 >> 0] = 1;
                    c[b2 + 56 >> 2] = e2;
                    c[b2 + 52 >> 2] = o2;
                    h2 = o2 << 2;
                    break;
                  }
                } else {
                  h2 = 0;
                  do {
                    c[e2 + (h2 << 2) >> 2] = c[k2 + (h2 << 2) >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (j2 | 0));
                }
                if (a[b2 + 60 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[k2 + -4 >> 2] | 0);
                }
                a[b2 + 60 >> 0] = 1;
                c[b2 + 56 >> 2] = e2;
                c[b2 + 52 >> 2] = o2;
                h2 = o2 << 2;
              } else {
                h2 = o2 << 2;
                e2 = c[b2 + 56 >> 2] | 0;
              }
            while (0);
            yn(e2 + (n2 << 2) | 0, 0, h2 - (n2 << 2) | 0) | 0;
          }
          c[b2 + 48 >> 2] = o2;
          n2 = c[b2 + 68 >> 2] | 0;
          if ((n2 | 0) < (o2 | 0)) {
            do
              if ((c[b2 + 72 >> 2] | 0) < (o2 | 0)) {
                c[6324] = (c[6324] | 0) + 1;
                e2 = ic((o2 << 2 | 3) + 16 | 0) | 0;
                if (!e2)
                  e2 = 0;
                else {
                  c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                  e2 = e2 + 4 + 15 & -16;
                }
                j2 = c[b2 + 68 >> 2] | 0;
                k2 = c[b2 + 76 >> 2] | 0;
                if ((j2 | 0) <= 0) {
                  if (!k2) {
                    a[b2 + 80 >> 0] = 1;
                    c[b2 + 76 >> 2] = e2;
                    c[b2 + 72 >> 2] = o2;
                    h2 = o2 << 2;
                    break;
                  }
                } else {
                  h2 = 0;
                  do {
                    c[e2 + (h2 << 2) >> 2] = c[k2 + (h2 << 2) >> 2];
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (j2 | 0));
                }
                if (a[b2 + 80 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[k2 + -4 >> 2] | 0);
                }
                a[b2 + 80 >> 0] = 1;
                c[b2 + 76 >> 2] = e2;
                c[b2 + 72 >> 2] = o2;
                h2 = o2 << 2;
              } else {
                h2 = o2 << 2;
                e2 = c[b2 + 76 >> 2] | 0;
              }
            while (0);
            yn(e2 + (n2 << 2) | 0, 0, h2 - (n2 << 2) | 0) | 0;
          }
          c[b2 + 68 >> 2] = o2;
          e2 = c[b2 + 128 >> 2] | 0;
          if ((e2 | 0) <= 0) {
            i = s2;
            return;
          }
          j2 = c[b2 + 76 >> 2] | 0;
          k2 = c[b2 + 56 >> 2] | 0;
          h2 = 0;
          do {
            g[j2 + (h2 << 2) >> 2] = 0;
            g[k2 + (h2 << 2) >> 2] = 0;
            h2 = h2 + 1 | 0;
          } while ((h2 | 0) != (e2 | 0));
          k2 = 0;
          do {
            h2 = c[b2 + 136 >> 2] | 0;
            j2 = c[h2 + (k2 * 284 | 0) + 88 >> 2] | 0;
            if (j2) {
              e2 = h2 + (k2 * 284 | 0) + 92 | 0;
              c[s2 + 48 >> 2] = c[e2 >> 2];
              c[s2 + 48 + 4 >> 2] = c[e2 + 4 >> 2];
              c[s2 + 48 + 8 >> 2] = c[e2 + 8 >> 2];
              c[s2 + 48 + 12 >> 2] = c[e2 + 12 >> 2];
              e2 = h2 + (k2 * 284 | 0) + 108 | 0;
              c[s2 + 48 + 16 >> 2] = c[e2 >> 2];
              c[s2 + 48 + 16 + 4 >> 2] = c[e2 + 4 >> 2];
              c[s2 + 48 + 16 + 8 >> 2] = c[e2 + 8 >> 2];
              c[s2 + 48 + 16 + 12 >> 2] = c[e2 + 12 >> 2];
              e2 = h2 + (k2 * 284 | 0) + 124 | 0;
              c[s2 + 48 + 32 >> 2] = c[e2 >> 2];
              c[s2 + 48 + 32 + 4 >> 2] = c[e2 + 4 >> 2];
              c[s2 + 48 + 32 + 8 >> 2] = c[e2 + 8 >> 2];
              c[s2 + 48 + 32 + 12 >> 2] = c[e2 + 12 >> 2];
              e2 = c[b2 + 36 >> 2] | 0;
              x2 = c[b2 + 112 >> 2] | 0;
              o2 = c[s2 + 48 + 16 + (x2 << 2) >> 2] | 0;
              y2 = c[s2 + 48 + 32 + (x2 << 2) >> 2] | 0;
              c[e2 + (k2 << 4) >> 2] = c[s2 + 48 + (x2 << 2) >> 2];
              c[e2 + (k2 << 4) + 4 >> 2] = o2;
              c[e2 + (k2 << 4) + 8 >> 2] = y2;
              g[e2 + (k2 << 4) + 12 >> 2] = 0;
              e2 = c[b2 + 36 >> 2] | 0;
              y2 = e2 + (k2 << 4) | 0;
              z2 = +g[y2 >> 2];
              o2 = h2 + (k2 * 284 | 0) | 0;
              f2 = +g[o2 >> 2];
              x2 = e2 + (k2 << 4) + 4 | 0;
              w2 = +g[x2 >> 2];
              n2 = h2 + (k2 * 284 | 0) + 4 | 0;
              l2 = +g[n2 >> 2];
              e2 = e2 + (k2 << 4) + 8 | 0;
              t2 = +g[e2 >> 2];
              p2 = h2 + (k2 * 284 | 0) + 8 | 0;
              v2 = +g[p2 >> 2];
              m2 = z2 - f2 * (z2 * f2 + w2 * l2 + t2 * v2);
              u2 = w2 - l2 * (z2 * f2 + w2 * l2 + t2 * v2);
              v2 = t2 - v2 * (z2 * f2 + w2 * l2 + t2 * v2);
              t2 = 1 / +G(+(m2 * m2 + u2 * u2 + v2 * v2));
              g[y2 >> 2] = m2 * t2;
              g[x2 >> 2] = u2 * t2;
              g[e2 >> 2] = v2 * t2;
              e2 = c[b2 + 16 >> 2] | 0;
              l2 = +g[n2 >> 2];
              w2 = +g[p2 >> 2];
              f2 = +g[o2 >> 2];
              g[e2 + (k2 << 4) >> 2] = l2 * v2 * t2 - w2 * u2 * t2;
              g[e2 + (k2 << 4) + 4 >> 2] = w2 * m2 * t2 - v2 * t2 * f2;
              g[e2 + (k2 << 4) + 8 >> 2] = u2 * t2 * f2 - l2 * m2 * t2;
              g[e2 + (k2 << 4) + 12 >> 2] = 0;
              e2 = c[b2 + 16 >> 2] | 0;
              o2 = e2 + (k2 << 4) | 0;
              t2 = +g[o2 >> 2];
              p2 = e2 + (k2 << 4) + 4 | 0;
              m2 = +g[p2 >> 2];
              e2 = e2 + (k2 << 4) + 8 | 0;
              l2 = +g[e2 >> 2];
              f2 = 1 / +G(+(t2 * t2 + m2 * m2 + l2 * l2));
              g[o2 >> 2] = t2 * f2;
              g[p2 >> 2] = m2 * f2;
              g[e2 >> 2] = l2 * f2;
              e2 = c[b2 + 108 >> 2] | 0;
              p2 = c[b2 + 36 >> 2] | 0;
              f2 = +g[p2 + (k2 << 4) >> 2];
              l2 = +g[p2 + (k2 << 4) + 4 >> 2];
              m2 = +g[p2 + (k2 << 4) + 8 >> 2];
              if (f2 * f2 + l2 * l2 + m2 * m2 > 1.100000023841858)
                f2 = 0;
              else {
                C2 = +g[h2 + (k2 * 284 | 0) + 16 >> 2];
                H2 = C2 - +g[e2 + 52 >> 2];
                E2 = +g[h2 + (k2 * 284 | 0) + 20 >> 2];
                J2 = E2 - +g[e2 + 56 >> 2];
                K2 = +g[h2 + (k2 * 284 | 0) + 24 >> 2];
                M2 = K2 - +g[e2 + 60 >> 2];
                C2 = C2 - +g[j2 + 52 >> 2];
                E2 = E2 - +g[j2 + 56 >> 2];
                K2 = K2 - +g[j2 + 60 >> 2];
                F2 = +g[e2 + 372 >> 2];
                N2 = +g[e2 + 376 >> 2];
                I2 = +g[e2 + 368 >> 2];
                B2 = +g[j2 + 372 >> 2];
                L2 = +g[j2 + 376 >> 2];
                D2 = +g[j2 + 368 >> 2];
                A2 = (m2 * J2 - l2 * M2) * +g[e2 + 4 >> 2] + (f2 * M2 - m2 * H2) * +g[e2 + 20 >> 2] + (l2 * H2 - f2 * J2) * +g[e2 + 36 >> 2];
                t2 = (m2 * J2 - l2 * M2) * +g[e2 + 8 >> 2] + (f2 * M2 - m2 * H2) * +g[e2 + 24 >> 2] + (l2 * H2 - f2 * J2) * +g[e2 + 40 >> 2];
                u2 = (m2 * J2 - l2 * M2) * +g[e2 + 12 >> 2] + (f2 * M2 - m2 * H2) * +g[e2 + 28 >> 2] + (l2 * H2 - f2 * J2) * +g[e2 + 44 >> 2];
                v2 = (E2 * -m2 - K2 * -l2) * +g[j2 + 4 >> 2] + (K2 * -f2 - C2 * -m2) * +g[j2 + 20 >> 2] + (C2 * -l2 - E2 * -f2) * +g[j2 + 36 >> 2];
                w2 = (E2 * -m2 - K2 * -l2) * +g[j2 + 8 >> 2] + (K2 * -f2 - C2 * -m2) * +g[j2 + 24 >> 2] + (C2 * -l2 - E2 * -f2) * +g[j2 + 40 >> 2];
                z2 = (E2 * -m2 - K2 * -l2) * +g[j2 + 12 >> 2] + (K2 * -f2 - C2 * -m2) * +g[j2 + 28 >> 2] + (C2 * -l2 - E2 * -f2) * +g[j2 + 44 >> 2];
                f2 = (f2 * (M2 * F2 - J2 * N2 + +g[e2 + 352 >> 2] - (K2 * B2 - E2 * L2 + +g[j2 + 352 >> 2])) + l2 * (+g[e2 + 356 >> 2] + (H2 * N2 - M2 * I2) - (+g[j2 + 356 >> 2] + (C2 * L2 - K2 * D2))) + m2 * (J2 * I2 - H2 * F2 + +g[e2 + 360 >> 2] - (E2 * D2 - C2 * B2 + +g[j2 + 360 >> 2]))) * -0.20000000298023224 * (1 / (+g[j2 + 384 >> 2] + (+g[e2 + 384 >> 2] + (A2 * A2 * +g[e2 + 436 >> 2] + t2 * t2 * +g[e2 + 440 >> 2] + u2 * u2 * +g[e2 + 444 >> 2])) + (v2 * v2 * +g[j2 + 436 >> 2] + w2 * w2 * +g[j2 + 440 >> 2] + z2 * z2 * +g[j2 + 444 >> 2])));
              }
              g[(c[b2 + 76 >> 2] | 0) + (k2 << 2) >> 2] = f2;
              e2 = c[b2 + 128 >> 2] | 0;
            }
            k2 = k2 + 1 | 0;
          } while ((k2 | 0) < (e2 | 0));
          if ((e2 | 0) <= 0) {
            i = s2;
            return;
          }
          j2 = 0;
          o2 = 0;
          h2 = c[b2 + 136 >> 2] | 0;
          while (1) {
            e2 = c[h2 + (o2 * 284 | 0) + 88 >> 2] | 0;
            if (e2) {
              f2 = +g[h2 + (o2 * 284 | 0) + 252 >> 2];
              if (f2 != 0) {
                f2 = f2 * d2;
                p2 = h2;
              } else {
                N2 = +g[h2 + (o2 * 284 | 0) + 256 >> 2];
                N2 = N2 == 0 ? 0 : N2;
                p2 = c[b2 + 108 >> 2] | 0;
                y2 = c[b2 + 16 >> 2] | 0;
                H2 = +g[h2 + (o2 * 284 | 0) + 16 >> 2];
                E2 = +g[h2 + (o2 * 284 | 0) + 20 >> 2];
                A2 = +g[h2 + (o2 * 284 | 0) + 24 >> 2];
                w2 = +g[y2 + (o2 << 4) >> 2];
                D2 = +g[y2 + (o2 << 4) + 4 >> 2];
                f2 = +g[y2 + (o2 << 4) + 8 >> 2];
                P2 = H2 - +g[p2 + 52 >> 2];
                Q2 = E2 - +g[p2 + 56 >> 2];
                l2 = A2 - +g[p2 + 60 >> 2];
                m2 = +g[p2 + 304 >> 2] * (Q2 * f2 - l2 * D2) + +g[p2 + 320 >> 2] * (l2 * w2 - P2 * f2) + (P2 * D2 - Q2 * w2) * +g[p2 + 336 >> 2];
                R2 = (Q2 * f2 - l2 * D2) * +g[p2 + 308 >> 2] + (l2 * w2 - P2 * f2) * +g[p2 + 324 >> 2] + (P2 * D2 - Q2 * w2) * +g[p2 + 340 >> 2];
                O2 = (Q2 * f2 - l2 * D2) * +g[p2 + 312 >> 2] + (l2 * w2 - P2 * f2) * +g[p2 + 328 >> 2] + (P2 * D2 - Q2 * w2) * +g[p2 + 344 >> 2];
                L2 = H2 - +g[e2 + 52 >> 2];
                J2 = E2 - +g[e2 + 56 >> 2];
                C2 = A2 - +g[e2 + 60 >> 2];
                v2 = (D2 * L2 - w2 * J2) * +g[e2 + 336 >> 2] + (+g[e2 + 304 >> 2] * (f2 * J2 - D2 * C2) + +g[e2 + 320 >> 2] * (w2 * C2 - f2 * L2));
                t2 = (f2 * J2 - D2 * C2) * +g[e2 + 308 >> 2] + (w2 * C2 - f2 * L2) * +g[e2 + 324 >> 2] + (D2 * L2 - w2 * J2) * +g[e2 + 340 >> 2];
                u2 = (f2 * J2 - D2 * C2) * +g[e2 + 312 >> 2] + (w2 * C2 - f2 * L2) * +g[e2 + 328 >> 2] + (D2 * L2 - w2 * J2) * +g[e2 + 344 >> 2];
                H2 = H2 - +g[p2 + 52 >> 2];
                E2 = E2 - +g[p2 + 56 >> 2];
                A2 = A2 - +g[p2 + 60 >> 2];
                I2 = +g[p2 + 372 >> 2];
                z2 = +g[p2 + 376 >> 2];
                F2 = +g[p2 + 368 >> 2];
                M2 = +g[e2 + 372 >> 2];
                B2 = +g[e2 + 376 >> 2];
                K2 = +g[e2 + 368 >> 2];
                f2 = -(1 / (+g[p2 + 384 >> 2] + (f2 * (Q2 * m2 - P2 * R2) + (w2 * (l2 * R2 - Q2 * O2) + D2 * (P2 * O2 - l2 * m2))) + (+g[e2 + 384 >> 2] + (f2 * (J2 * v2 - L2 * t2) + (w2 * (C2 * t2 - J2 * u2) + D2 * (L2 * u2 - C2 * v2))))) * ((A2 * I2 - E2 * z2 + +g[p2 + 352 >> 2] - (C2 * M2 - J2 * B2 + +g[e2 + 352 >> 2])) * w2 + (+g[p2 + 356 >> 2] + (H2 * z2 - A2 * F2) - (+g[e2 + 356 >> 2] + (L2 * B2 - C2 * K2))) * D2 + (E2 * F2 - H2 * I2 + +g[p2 + 360 >> 2] - (J2 * K2 - L2 * M2 + +g[e2 + 360 >> 2])) * f2));
                f2 = N2 < f2 ? N2 : f2;
                f2 = f2 < -N2 ? -N2 : f2;
                p2 = c[b2 + 136 >> 2] | 0;
              }
              n2 = c[b2 + 56 >> 2] | 0;
              y2 = n2 + (o2 << 2) | 0;
              g[y2 >> 2] = 0;
              e2 = p2 + (o2 * 284 | 0) + 280 | 0;
              g[e2 >> 2] = 1;
              m2 = +g[h2 + (o2 * 284 | 0) + 276 >> 2] * d2 * +g[h2 + (o2 * 284 | 0) + 228 >> 2];
              g[y2 >> 2] = f2;
              f2 = f2 * 0.5;
              l2 = +g[(c[b2 + 76 >> 2] | 0) + (o2 << 2) >> 2];
              if (f2 * f2 + l2 * l2 > m2 * m2) {
                R2 = m2 / +G(+(f2 * f2 + l2 * l2));
                g[e2 >> 2] = R2 * +g[e2 >> 2];
                e2 = 1;
              } else
                e2 = j2;
            } else {
              n2 = c[b2 + 56 >> 2] | 0;
              g[n2 + (o2 << 2) >> 2] = 0;
              g[h2 + (o2 * 284 | 0) + 280 >> 2] = 1;
              e2 = j2;
              p2 = h2;
            }
            o2 = o2 + 1 | 0;
            k2 = c[b2 + 128 >> 2] | 0;
            if ((o2 | 0) >= (k2 | 0))
              break;
            else {
              j2 = e2;
              h2 = p2;
            }
          }
          if (e2) {
            if ((k2 | 0) <= 0) {
              i = s2;
              return;
            }
            h2 = c[b2 + 76 >> 2] | 0;
            e2 = 0;
            do {
              j2 = h2 + (e2 << 2) | 0;
              if (+g[j2 >> 2] != 0 ? (q2 = p2 + (e2 * 284 | 0) + 280 | 0, r2 = +g[q2 >> 2], r2 < 1) : 0) {
                y2 = n2 + (e2 << 2) | 0;
                g[y2 >> 2] = r2 * +g[y2 >> 2];
                g[j2 >> 2] = +g[q2 >> 2] * +g[j2 >> 2];
              }
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) != (k2 | 0));
          }
          if ((k2 | 0) <= 0) {
            i = s2;
            return;
          }
          e2 = 0;
          h2 = n2;
          while (1) {
            j2 = c[b2 + 108 >> 2] | 0;
            k2 = p2 + (e2 * 284 | 0) + 16 | 0;
            l2 = +g[k2 >> 2] - +g[j2 + 52 >> 2];
            n2 = p2 + (e2 * 284 | 0) + 20 | 0;
            m2 = +g[n2 >> 2] - +g[j2 + 56 >> 2];
            o2 = p2 + (e2 * 284 | 0) + 24 | 0;
            d2 = +g[o2 >> 2] - +g[j2 + 60 >> 2];
            g[s2 + 48 >> 2] = l2;
            g[s2 + 48 + 4 >> 2] = m2;
            g[s2 + 48 + 8 >> 2] = d2;
            g[s2 + 48 + 12 >> 2] = 0;
            f2 = +g[h2 + (e2 << 2) >> 2];
            if (f2 != 0) {
              y2 = c[b2 + 16 >> 2] | 0;
              Q2 = f2 * +g[y2 + (e2 << 4) + 4 >> 2];
              R2 = f2 * +g[y2 + (e2 << 4) + 8 >> 2];
              g[s2 + 32 >> 2] = +g[y2 + (e2 << 4) >> 2] * f2;
              g[s2 + 32 + 4 >> 2] = Q2;
              g[s2 + 32 + 8 >> 2] = R2;
              g[s2 + 32 + 12 >> 2] = 0;
              Xi(j2, s2 + 32 | 0, s2 + 48 | 0);
            }
            f2 = +g[(c[b2 + 76 >> 2] | 0) + (e2 << 2) >> 2];
            if (f2 != 0) {
              y2 = c[(c[b2 + 136 >> 2] | 0) + (e2 * 284 | 0) + 88 >> 2] | 0;
              Q2 = +g[n2 >> 2] - +g[y2 + 56 >> 2];
              P2 = +g[o2 >> 2] - +g[y2 + 60 >> 2];
              g[s2 + 32 >> 2] = +g[k2 >> 2] - +g[y2 + 52 >> 2];
              g[s2 + 32 + 4 >> 2] = Q2;
              g[s2 + 32 + 8 >> 2] = P2;
              g[s2 + 32 + 12 >> 2] = 0;
              x2 = c[b2 + 36 >> 2] | 0;
              P2 = +g[x2 + (e2 << 4) >> 2] * f2;
              Q2 = f2 * +g[x2 + (e2 << 4) + 4 >> 2];
              R2 = f2 * +g[x2 + (e2 << 4) + 8 >> 2];
              g[s2 + 16 >> 2] = P2;
              g[s2 + 16 + 4 >> 2] = Q2;
              g[s2 + 16 + 8 >> 2] = R2;
              g[s2 + 16 + 12 >> 2] = 0;
              x2 = c[b2 + 108 >> 2] | 0;
              q2 = c[b2 + 116 >> 2] | 0;
              L2 = +g[x2 + 4 + (q2 << 2) >> 2];
              M2 = +g[x2 + 20 + (q2 << 2) >> 2];
              N2 = +g[x2 + 36 + (q2 << 2) >> 2];
              O2 = (L2 * l2 + M2 * m2 + N2 * d2) * (1 - +g[p2 + (e2 * 284 | 0) + 244 >> 2]);
              g[s2 + 48 >> 2] = l2 - L2 * O2;
              g[s2 + 48 + 4 >> 2] = m2 - M2 * O2;
              g[s2 + 48 + 8 >> 2] = d2 - N2 * O2;
              Xi(x2, s2 + 16 | 0, s2 + 48 | 0);
              g[s2 >> 2] = -P2;
              g[s2 + 4 >> 2] = -Q2;
              g[s2 + 8 >> 2] = -R2;
              g[s2 + 12 >> 2] = 0;
              Xi(y2, s2, s2 + 32 | 0);
            }
            e2 = e2 + 1 | 0;
            if ((e2 | 0) >= (c[b2 + 128 >> 2] | 0))
              break;
            p2 = c[b2 + 136 >> 2] | 0;
            h2 = c[b2 + 56 >> 2] | 0;
          }
          i = s2;
          return;
        }
        function Ac(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0;
          P2 = i;
          i = i + 192 | 0;
          O2 = c[d2 + 36 >> 2] | 0;
          o2 = +g[(+g[O2 + 88 >> 2] > 0 ? b2 + 16 | 0 : b2 + 20 | 0) >> 2];
          if (a[O2 + 100 >> 0] & 1) {
            i = P2;
            return;
          }
          L2 = c[b2 + 8 >> 2] | 0;
          u2 = c[L2 + 4 >> 2] | 0;
          M2 = c[L2 + 12 >> 2] | 0;
          J2 = c[(c[b2 + 4 >> 2] | 0) + 724 >> 2] | 0;
          B2 = +g[O2 + 8 >> 2] - +g[M2 + 48 >> 2];
          r2 = +g[O2 + 12 >> 2] - +g[M2 + 52 >> 2];
          C2 = +g[O2 + 16 >> 2] - +g[M2 + 56 >> 2];
          z2 = 1 / +g[J2 + 76 >> 2];
          y2 = (B2 * +g[M2 >> 2] + r2 * +g[M2 + 16 >> 2] + C2 * +g[M2 + 32 >> 2]) * z2 / 3;
          F2 = y2 < 0 ? ~~(1 - y2) : 0;
          K2 = ~~((y2 + +(F2 | 0) - +(~~(y2 + +(F2 | 0)) | 0)) * 3);
          s2 = (y2 + +(F2 | 0) - +(~~(y2 + +(F2 | 0)) | 0)) * 3 - +(K2 | 0);
          F2 = ~~(y2 + +(F2 | 0)) - F2 | 0;
          y2 = z2 * (B2 * +g[M2 + 4 >> 2] + r2 * +g[M2 + 20 >> 2] + C2 * +g[M2 + 36 >> 2]) / 3;
          D2 = y2 < 0 ? ~~(1 - y2) : 0;
          H2 = ~~((y2 + +(D2 | 0) - +(~~(y2 + +(D2 | 0)) | 0)) * 3);
          n2 = (y2 + +(D2 | 0) - +(~~(y2 + +(D2 | 0)) | 0)) * 3 - +(H2 | 0);
          D2 = ~~(y2 + +(D2 | 0)) - D2 | 0;
          C2 = z2 * (B2 * +g[M2 + 8 >> 2] + r2 * +g[M2 + 24 >> 2] + C2 * +g[M2 + 40 >> 2]) / 3;
          E2 = C2 < 0 ? ~~(1 - C2) : 0;
          I2 = ~~((C2 + +(E2 | 0) - +(~~(C2 + +(E2 | 0)) | 0)) * 3);
          r2 = (C2 + +(E2 | 0) - +(~~(C2 + +(E2 | 0)) | 0)) * 3 - +(I2 | 0);
          E2 = ~~(C2 + +(E2 | 0)) - E2 | 0;
          t2 = (F2 >>> 16 << 11 ^ (F2 & 65535) + 16 ^ (F2 & 65535) + 16 << 16) + (D2 & 65535) + ((F2 >>> 16 << 11 ^ (F2 & 65535) + 16 ^ (F2 & 65535) + 16 << 16) >>> 11) | 0;
          t2 = (t2 ^ D2 >>> 16 << 11 ^ t2 << 16) + (E2 & 65535) + ((t2 ^ D2 >>> 16 << 11 ^ t2 << 16) >>> 11) | 0;
          t2 = (t2 ^ E2 >>> 16 << 11 ^ t2 << 16) + (u2 & 65535) + ((t2 ^ E2 >>> 16 << 11 ^ t2 << 16) >>> 11) | 0;
          t2 = ((t2 ^ u2 >>> 16 << 11 ^ t2 << 16) >>> 11) + (t2 ^ u2 >>> 16 << 11 ^ t2 << 16) | 0;
          t2 = ((t2 << 3 ^ t2) >>> 5) + (t2 << 3 ^ t2) << 4 ^ ((t2 << 3 ^ t2) >>> 5) + (t2 << 3 ^ t2);
          t2 = (((t2 >>> 17) + t2 << 25 ^ (t2 >>> 17) + t2) >>> 6) + ((t2 >>> 17) + t2 << 25 ^ (t2 >>> 17) + t2) | 0;
          p2 = c[J2 + 60 >> 2] | 0;
          q2 = c[J2 + 68 >> 2] | 0;
          d2 = c[q2 + (((t2 >>> 0) % (p2 >>> 0) | 0) << 2) >> 2] | 0;
          c[J2 + 96 >> 2] = (c[J2 + 96 >> 2] | 0) + 1;
          e2 = (c[J2 + 92 >> 2] | 0) + 1 | 0;
          c[J2 + 92 >> 2] = e2;
          a:
            do
              if (!d2)
                f2 = 9;
              else
                while (1) {
                  if (((((c[d2 + 272 >> 2] | 0) == (t2 | 0) ? (c[d2 + 256 >> 2] | 0) == (F2 | 0) : 0) ? (c[d2 + 260 >> 2] | 0) == (D2 | 0) : 0) ? (c[d2 + 264 >> 2] | 0) == (E2 | 0) : 0) ? (c[d2 + 276 >> 2] | 0) == (u2 | 0) : 0)
                    break a;
                  d2 = c[d2 + 280 >> 2] | 0;
                  e2 = e2 + 1 | 0;
                  c[J2 + 92 >> 2] = e2;
                  if (!d2) {
                    f2 = 9;
                    break;
                  }
                }
            while (0);
          b:
            do
              if ((f2 | 0) == 9) {
                A2 = c[J2 + 84 >> 2] | 0;
                c[J2 + 84 >> 2] = A2 + 1;
                if ((A2 | 0) >= (c[J2 + 88 >> 2] | 0)) {
                  c[5677] = (c[5677] | 0) + 1;
                  c:
                    do
                      if ((p2 | 0) > 0) {
                        d2 = 0;
                        e2 = q2;
                        while (1) {
                          A2 = e2 + (d2 << 2) | 0;
                          e2 = c[A2 >> 2] | 0;
                          c[A2 >> 2] = 0;
                          if (e2 | 0)
                            do {
                              A2 = e2;
                              e2 = c[e2 + 280 >> 2] | 0;
                              Rc(A2);
                            } while ((e2 | 0) != 0);
                          d2 = d2 + 1 | 0;
                          if ((d2 | 0) == (p2 | 0))
                            break c;
                          e2 = c[J2 + 68 >> 2] | 0;
                        }
                      }
                    while (0);
                  g[J2 + 76 >> 2] = 0.25;
                  c[J2 + 80 >> 2] = 0;
                  c[J2 + 84 >> 2] = 0;
                  c[J2 + 92 >> 2] = 1;
                  c[J2 + 96 >> 2] = 1;
                }
                while (1) {
                  d2 = ic(284) | 0;
                  if (d2 | 0)
                    break;
                  d2 = c[6453] | 0;
                  c[6453] = d2 + 0;
                  if (!d2) {
                    d2 = 0;
                    break;
                  }
                  Vb[d2 & 3]();
                }
                yn(d2 | 0, 0, 284) | 0;
                c[d2 + 280 >> 2] = c[q2 + (((t2 >>> 0) % (p2 >>> 0) | 0) << 2) >> 2];
                c[q2 + (((t2 >>> 0) % (p2 >>> 0) | 0) << 2) >> 2] = d2;
                A2 = d2 + 276 | 0;
                c[A2 >> 2] = u2;
                c[d2 + 272 >> 2] = t2;
                c[d2 + 256 >> 2] = F2;
                c[d2 + 260 >> 2] = D2;
                c[d2 + 264 >> 2] = E2;
                l2 = +g[J2 + 76 >> 2];
                q2 = P2 + 120 + 4 | 0;
                t2 = P2 + 120 + 24 | 0;
                u2 = P2 + 120 + 44 | 0;
                e2 = 0;
                h2 = l2;
                while (1) {
                  k2 = l2 * +(E2 | 0) * 3 + +(e2 | 0) * h2;
                  f2 = 0;
                  while (1) {
                    j2 = l2 * +(D2 | 0) * 3 + +(f2 | 0) * h2;
                    g[P2 + 48 >> 2] = +(F2 | 0) * 3 * l2 + h2 * 0;
                    g[P2 + 48 + 4 >> 2] = j2;
                    g[P2 + 48 + 8 >> 2] = k2;
                    g[P2 + 48 + 12 >> 2] = 0;
                    p2 = c[A2 >> 2] | 0;
                    c[P2 + 120 >> 2] = 1065353216;
                    c[q2 >> 2] = 0;
                    c[q2 + 4 >> 2] = 0;
                    c[q2 + 8 >> 2] = 0;
                    c[q2 + 12 >> 2] = 0;
                    c[P2 + 120 + 20 >> 2] = 1065353216;
                    c[t2 >> 2] = 0;
                    c[t2 + 4 >> 2] = 0;
                    c[t2 + 8 >> 2] = 0;
                    c[t2 + 12 >> 2] = 0;
                    c[P2 + 120 + 40 >> 2] = 1065353216;
                    c[u2 >> 2] = 0;
                    c[u2 + 4 >> 2] = 0;
                    c[u2 + 8 >> 2] = 0;
                    c[u2 + 12 >> 2] = 0;
                    c[u2 + 16 >> 2] = 0;
                    if ((c[p2 + 4 >> 2] | 0) < 20)
                      h2 = +Pc(P2 + 48 | 0, p2, P2 + 120 | 0, P2 + 64 | 0);
                    else
                      h2 = 0;
                    g[d2 + (f2 << 4) + (e2 << 2) >> 2] = h2;
                    g[P2 + 48 >> 2] = +(F2 | 0) * 3 * l2 + +g[J2 + 76 >> 2];
                    g[P2 + 48 + 4 >> 2] = j2;
                    g[P2 + 48 + 8 >> 2] = k2;
                    g[P2 + 48 + 12 >> 2] = 0;
                    p2 = c[A2 >> 2] | 0;
                    c[P2 + 120 >> 2] = 1065353216;
                    c[q2 >> 2] = 0;
                    c[q2 + 4 >> 2] = 0;
                    c[q2 + 8 >> 2] = 0;
                    c[q2 + 12 >> 2] = 0;
                    c[P2 + 120 + 20 >> 2] = 1065353216;
                    c[t2 >> 2] = 0;
                    c[t2 + 4 >> 2] = 0;
                    c[t2 + 8 >> 2] = 0;
                    c[t2 + 12 >> 2] = 0;
                    c[P2 + 120 + 40 >> 2] = 1065353216;
                    c[u2 >> 2] = 0;
                    c[u2 + 4 >> 2] = 0;
                    c[u2 + 8 >> 2] = 0;
                    c[u2 + 12 >> 2] = 0;
                    c[u2 + 16 >> 2] = 0;
                    if ((c[p2 + 4 >> 2] | 0) < 20)
                      h2 = +Pc(P2 + 48 | 0, p2, P2 + 120 | 0, P2 + 64 | 0);
                    else
                      h2 = 0;
                    g[d2 + 64 + (f2 << 4) + (e2 << 2) >> 2] = h2;
                    g[P2 + 48 >> 2] = +(F2 | 0) * 3 * l2 + +g[J2 + 76 >> 2] * 2;
                    g[P2 + 48 + 4 >> 2] = j2;
                    g[P2 + 48 + 8 >> 2] = k2;
                    g[P2 + 48 + 12 >> 2] = 0;
                    p2 = c[A2 >> 2] | 0;
                    c[P2 + 120 >> 2] = 1065353216;
                    c[q2 >> 2] = 0;
                    c[q2 + 4 >> 2] = 0;
                    c[q2 + 8 >> 2] = 0;
                    c[q2 + 12 >> 2] = 0;
                    c[P2 + 120 + 20 >> 2] = 1065353216;
                    c[t2 >> 2] = 0;
                    c[t2 + 4 >> 2] = 0;
                    c[t2 + 8 >> 2] = 0;
                    c[t2 + 12 >> 2] = 0;
                    c[P2 + 120 + 40 >> 2] = 1065353216;
                    c[u2 >> 2] = 0;
                    c[u2 + 4 >> 2] = 0;
                    c[u2 + 8 >> 2] = 0;
                    c[u2 + 12 >> 2] = 0;
                    c[u2 + 16 >> 2] = 0;
                    if ((c[p2 + 4 >> 2] | 0) < 20)
                      h2 = +Pc(P2 + 48 | 0, p2, P2 + 120 | 0, P2 + 64 | 0);
                    else
                      h2 = 0;
                    g[d2 + 128 + (f2 << 4) + (e2 << 2) >> 2] = h2;
                    g[P2 + 48 >> 2] = +(F2 | 0) * 3 * l2 + +g[J2 + 76 >> 2] * 3;
                    g[P2 + 48 + 4 >> 2] = j2;
                    g[P2 + 48 + 8 >> 2] = k2;
                    g[P2 + 48 + 12 >> 2] = 0;
                    p2 = c[A2 >> 2] | 0;
                    c[P2 + 120 >> 2] = 1065353216;
                    c[q2 >> 2] = 0;
                    c[q2 + 4 >> 2] = 0;
                    c[q2 + 8 >> 2] = 0;
                    c[q2 + 12 >> 2] = 0;
                    c[P2 + 120 + 20 >> 2] = 1065353216;
                    c[t2 >> 2] = 0;
                    c[t2 + 4 >> 2] = 0;
                    c[t2 + 8 >> 2] = 0;
                    c[t2 + 12 >> 2] = 0;
                    c[P2 + 120 + 40 >> 2] = 1065353216;
                    c[u2 >> 2] = 0;
                    c[u2 + 4 >> 2] = 0;
                    c[u2 + 8 >> 2] = 0;
                    c[u2 + 12 >> 2] = 0;
                    c[u2 + 16 >> 2] = 0;
                    if ((c[p2 + 4 >> 2] | 0) < 20)
                      h2 = +Pc(P2 + 48 | 0, p2, P2 + 120 | 0, P2 + 64 | 0);
                    else
                      h2 = 0;
                    g[d2 + 192 + (f2 << 4) + (e2 << 2) >> 2] = h2;
                    f2 = f2 + 1 | 0;
                    if ((f2 | 0) == 4)
                      break;
                    h2 = +g[J2 + 76 >> 2];
                  }
                  e2 = e2 + 1 | 0;
                  if ((e2 | 0) == 4)
                    break b;
                  h2 = +g[J2 + 76 >> 2];
                }
              }
            while (0);
          c[d2 + 268 >> 2] = c[J2 + 80 >> 2];
          h2 = +g[d2 + (K2 << 6) + (H2 << 4) + (I2 << 2) >> 2];
          x2 = +g[d2 + (K2 + 1 << 6) + (H2 << 4) + (I2 << 2) >> 2];
          v2 = +g[d2 + (K2 + 1 << 6) + (H2 + 1 << 4) + (I2 << 2) >> 2];
          w2 = +g[d2 + (K2 << 6) + (H2 + 1 << 4) + (I2 << 2) >> 2];
          C2 = +g[d2 + (K2 << 6) + (H2 << 4) + (I2 + 1 << 2) >> 2];
          B2 = +g[d2 + (K2 + 1 << 6) + (H2 << 4) + (I2 + 1 << 2) >> 2];
          y2 = +g[d2 + (K2 + 1 << 6) + (H2 + 1 << 4) + (I2 + 1 << 2) >> 2];
          z2 = +g[d2 + (K2 << 6) + (H2 + 1 << 4) + (I2 + 1 << 2) >> 2];
          j2 = x2 - h2 + n2 * (v2 - w2 - (x2 - h2)) + r2 * (B2 - C2 + n2 * (y2 - z2 - (B2 - C2)) - (x2 - h2 + n2 * (v2 - w2 - (x2 - h2))));
          k2 = w2 - h2 + s2 * (v2 - x2 - (w2 - h2)) + r2 * (z2 - C2 + s2 * (y2 - B2 - (z2 - C2)) - (w2 - h2 + s2 * (v2 - x2 - (w2 - h2))));
          l2 = C2 - h2 + s2 * (B2 - x2 - (C2 - h2)) + n2 * (z2 - w2 + s2 * (y2 - v2 - (z2 - w2)) - (C2 - h2 + s2 * (B2 - x2 - (C2 - h2))));
          m2 = 1 / +G(+(j2 * j2 + k2 * k2 + l2 * l2));
          h2 = h2 + s2 * (x2 - h2) + n2 * (w2 + s2 * (v2 - w2) - (h2 + s2 * (x2 - h2)));
          h2 = h2 + r2 * (C2 + s2 * (B2 - C2) + n2 * (z2 + s2 * (y2 - z2) - (C2 + s2 * (B2 - C2))) - h2) - o2;
          if (!(h2 < 0)) {
            i = P2;
            return;
          }
          t2 = c[L2 + 8 >> 2] | 0;
          B2 = +g[M2 >> 2] * j2 * m2 + +g[M2 + 4 >> 2] * k2 * m2 + +g[M2 + 8 >> 2] * l2 * m2;
          C2 = j2 * m2 * +g[M2 + 16 >> 2] + k2 * m2 * +g[M2 + 20 >> 2] + l2 * m2 * +g[M2 + 24 >> 2];
          z2 = j2 * m2 * +g[M2 + 32 >> 2] + k2 * m2 * +g[M2 + 36 >> 2] + l2 * m2 * +g[M2 + 40 >> 2];
          y2 = -(B2 * (+g[O2 + 8 >> 2] - h2 * B2) + C2 * (+g[O2 + 12 >> 2] - h2 * C2) + z2 * (+g[O2 + 16 >> 2] - h2 * z2));
          s2 = +g[O2 + 88 >> 2];
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2)
            r2 = 0;
          else
            r2 = +g[d2 + 384 >> 2];
          if (!(s2 + r2 > 0)) {
            i = P2;
            return;
          }
          if (!d2)
            d2 = c[(c[b2 + 8 >> 2] | 0) + 8 >> 2] | 0;
          if (!(a[22072] | 0)) {
            a[22072] = 1;
            e2 = 22712;
            f2 = e2 + 48 | 0;
            do {
              c[e2 >> 2] = 0;
              e2 = e2 + 4 | 0;
            } while ((e2 | 0) < (f2 | 0));
          }
          e2 = c[b2 + 12 >> 2] | 0;
          m2 = +g[O2 + 8 >> 2];
          w2 = m2 - +g[d2 + 52 >> 2];
          n2 = +g[O2 + 12 >> 2];
          x2 = n2 - +g[d2 + 56 >> 2];
          o2 = +g[O2 + 16 >> 2];
          v2 = o2 - +g[d2 + 60 >> 2];
          if (!e2) {
            M2 = c[b2 + 4 >> 2] | 0;
            h2 = 0;
            j2 = 0;
            k2 = 0;
            d2 = M2;
            l2 = +g[M2 + 492 >> 2];
          } else {
            k2 = +g[e2 + 372 >> 2];
            j2 = +g[e2 + 376 >> 2];
            Q2 = +g[e2 + 368 >> 2];
            d2 = c[b2 + 4 >> 2] | 0;
            l2 = +g[d2 + 492 >> 2];
            h2 = (k2 * v2 - j2 * x2 + +g[e2 + 352 >> 2]) * l2;
            j2 = (+g[e2 + 356 >> 2] + (j2 * w2 - v2 * Q2)) * l2;
            k2 = (x2 * Q2 - k2 * w2 + +g[e2 + 360 >> 2]) * l2;
          }
          m2 = m2 - +g[O2 + 24 >> 2] - h2;
          n2 = n2 - +g[O2 + 28 >> 2] - j2;
          Q2 = o2 - +g[O2 + 32 >> 2] - k2;
          j2 = +g[d2 + 356 >> 2] * +g[(c[(c[b2 + 8 >> 2] | 0) + 8 >> 2] | 0) + 224 >> 2];
          Df(P2 + 120 | 0, l2, s2, r2, (e2 | 0) == 0 ? 22712 : e2 + 304 | 0, w2, x2, v2);
          c[P2 + 32 >> 2] = c[P2 + 120 >> 2];
          c[P2 + 32 + 4 >> 2] = c[P2 + 120 + 4 >> 2];
          c[P2 + 32 + 8 >> 2] = c[P2 + 120 + 8 >> 2];
          c[P2 + 32 + 12 >> 2] = c[P2 + 120 + 12 >> 2];
          c[P2 + 16 >> 2] = c[P2 + 120 + 16 >> 2];
          c[P2 + 16 + 4 >> 2] = c[P2 + 120 + 16 + 4 >> 2];
          c[P2 + 16 + 8 >> 2] = c[P2 + 120 + 16 + 8 >> 2];
          c[P2 + 16 + 12 >> 2] = c[P2 + 120 + 16 + 12 >> 2];
          c[P2 >> 2] = c[P2 + 120 + 32 >> 2];
          c[P2 + 4 >> 2] = c[P2 + 120 + 32 + 4 >> 2];
          c[P2 + 8 >> 2] = c[P2 + 120 + 32 + 8 >> 2];
          c[P2 + 12 >> 2] = c[P2 + 120 + 32 + 12 >> 2];
          q2 = c[b2 + 4 >> 2] | 0;
          h2 = s2 * +g[q2 + 492 >> 2];
          j2 = (Q2 - z2 * (m2 * B2 + n2 * C2 + Q2 * z2)) * (Q2 - z2 * (m2 * B2 + n2 * C2 + Q2 * z2)) + ((m2 - B2 * (m2 * B2 + n2 * C2 + Q2 * z2)) * (m2 - B2 * (m2 * B2 + n2 * C2 + Q2 * z2)) + (n2 - C2 * (m2 * B2 + n2 * C2 + Q2 * z2)) * (n2 - C2 * (m2 * B2 + n2 * C2 + Q2 * z2))) < j2 * (m2 * B2 + n2 * C2 + Q2 * z2) * (m2 * B2 + n2 * C2 + Q2 * z2) * j2 ? 0 : 1 - j2;
          p2 = c[(c[(c[(c[b2 + 8 >> 2] | 0) + 8 >> 2] | 0) + 204 >> 2] & 3 | 0 ? q2 + 368 | 0 : q2 + 364 | 0) >> 2] | 0;
          d2 = c[q2 + 852 >> 2] | 0;
          if ((d2 | 0) == (c[q2 + 856 >> 2] | 0) ? (N2 = d2 | 0 ? d2 << 1 : 1, (d2 | 0) < (N2 | 0)) : 0) {
            if (!N2)
              f2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              d2 = ic((N2 * 104 | 3) + 16 | 0) | 0;
              if (!d2)
                d2 = 0;
              else {
                c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                d2 = d2 + 4 + 15 & -16;
              }
              f2 = d2;
              d2 = c[q2 + 852 >> 2] | 0;
            }
            if ((d2 | 0) > 0) {
              e2 = 0;
              do {
                M2 = f2 + (e2 * 104 | 0) | 0;
                L2 = c[q2 + 860 >> 2] | 0;
                K2 = L2 + (e2 * 104 | 0) | 0;
                c[M2 >> 2] = c[K2 >> 2];
                c[M2 + 4 >> 2] = c[K2 + 4 >> 2];
                c[M2 + 8 >> 2] = c[K2 + 8 >> 2];
                c[M2 + 12 >> 2] = c[K2 + 12 >> 2];
                c[M2 + 16 >> 2] = c[K2 + 16 >> 2];
                c[M2 + 20 >> 2] = c[K2 + 20 >> 2];
                c[M2 + 24 >> 2] = c[K2 + 24 >> 2];
                M2 = f2 + (e2 * 104 | 0) + 28 | 0;
                K2 = L2 + (e2 * 104 | 0) + 28 | 0;
                c[M2 >> 2] = c[K2 >> 2];
                c[M2 + 4 >> 2] = c[K2 + 4 >> 2];
                c[M2 + 8 >> 2] = c[K2 + 8 >> 2];
                c[M2 + 12 >> 2] = c[K2 + 12 >> 2];
                M2 = f2 + (e2 * 104 | 0) + 44 | 0;
                K2 = L2 + (e2 * 104 | 0) + 44 | 0;
                c[M2 >> 2] = c[K2 >> 2];
                c[M2 + 4 >> 2] = c[K2 + 4 >> 2];
                c[M2 + 8 >> 2] = c[K2 + 8 >> 2];
                c[M2 + 12 >> 2] = c[K2 + 12 >> 2];
                M2 = f2 + (e2 * 104 | 0) + 60 | 0;
                K2 = L2 + (e2 * 104 | 0) + 60 | 0;
                c[M2 >> 2] = c[K2 >> 2];
                c[M2 + 4 >> 2] = c[K2 + 4 >> 2];
                c[M2 + 8 >> 2] = c[K2 + 8 >> 2];
                c[M2 + 12 >> 2] = c[K2 + 12 >> 2];
                M2 = f2 + (e2 * 104 | 0) + 76 | 0;
                L2 = L2 + (e2 * 104 | 0) + 76 | 0;
                c[M2 >> 2] = c[L2 >> 2];
                c[M2 + 4 >> 2] = c[L2 + 4 >> 2];
                c[M2 + 8 >> 2] = c[L2 + 8 >> 2];
                c[M2 + 12 >> 2] = c[L2 + 12 >> 2];
                c[M2 + 16 >> 2] = c[L2 + 16 >> 2];
                c[M2 + 20 >> 2] = c[L2 + 20 >> 2];
                c[M2 + 24 >> 2] = c[L2 + 24 >> 2];
                e2 = e2 + 1 | 0;
              } while ((e2 | 0) != (d2 | 0));
            }
            d2 = c[q2 + 860 >> 2] | 0;
            if (d2 | 0) {
              if (a[q2 + 864 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[d2 + -4 >> 2] | 0);
              }
              c[q2 + 860 >> 2] = 0;
            }
            a[q2 + 864 >> 0] = 1;
            c[q2 + 860 >> 2] = f2;
            c[q2 + 856 >> 2] = N2;
            d2 = c[q2 + 852 >> 2] | 0;
          }
          N2 = c[q2 + 860 >> 2] | 0;
          c[N2 + (d2 * 104 | 0) >> 2] = t2;
          g[N2 + (d2 * 104 | 0) + 4 >> 2] = B2;
          g[N2 + (d2 * 104 | 0) + 8 >> 2] = C2;
          g[N2 + (d2 * 104 | 0) + 12 >> 2] = z2;
          g[N2 + (d2 * 104 | 0) + 16 >> 2] = 0;
          g[N2 + (d2 * 104 | 0) + 20 >> 2] = y2;
          c[N2 + (d2 * 104 | 0) + 24 >> 2] = O2;
          O2 = N2 + (d2 * 104 | 0) + 28 | 0;
          c[O2 >> 2] = c[P2 + 32 >> 2];
          c[O2 + 4 >> 2] = c[P2 + 32 + 4 >> 2];
          c[O2 + 8 >> 2] = c[P2 + 32 + 8 >> 2];
          c[O2 + 12 >> 2] = c[P2 + 32 + 12 >> 2];
          O2 = N2 + (d2 * 104 | 0) + 44 | 0;
          c[O2 >> 2] = c[P2 + 16 >> 2];
          c[O2 + 4 >> 2] = c[P2 + 16 + 4 >> 2];
          c[O2 + 8 >> 2] = c[P2 + 16 + 8 >> 2];
          c[O2 + 12 >> 2] = c[P2 + 16 + 12 >> 2];
          O2 = N2 + (d2 * 104 | 0) + 60 | 0;
          c[O2 >> 2] = c[P2 >> 2];
          c[O2 + 4 >> 2] = c[P2 + 4 >> 2];
          c[O2 + 8 >> 2] = c[P2 + 8 >> 2];
          c[O2 + 12 >> 2] = c[P2 + 12 >> 2];
          O2 = N2 + (d2 * 104 | 0) + 76 | 0;
          g[O2 >> 2] = w2;
          g[N2 + (d2 * 104 | 0) + 80 >> 2] = x2;
          g[N2 + (d2 * 104 | 0) + 84 >> 2] = v2;
          g[N2 + (d2 * 104 | 0) + 88 >> 2] = 0;
          g[O2 + 16 >> 2] = h2;
          g[O2 + 20 >> 2] = j2;
          c[O2 + 24 >> 2] = p2;
          c[q2 + 852 >> 2] = (c[q2 + 852 >> 2] | 0) + 1;
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2) {
            i = P2;
            return;
          }
          if (c[d2 + 204 >> 2] & 3 | 0) {
            i = P2;
            return;
          }
          if ((c[d2 + 216 >> 2] & -2 | 0) != 4)
            c[d2 + 216 >> 2] = 1;
          g[d2 + 220 >> 2] = 0;
          i = P2;
          return;
        }
        function Zb(d2, f2) {
          d2 = d2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0;
          fa2 = i;
          i = i + 192 | 0;
          j2 = c[d2 + 56 >> 2] | 0;
          if (j2 | 0 ? (kb[c[c[j2 >> 2] >> 2] & 255](j2), h2 = c[d2 + 56 >> 2] | 0, h2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[h2 + -4 >> 2] | 0);
          }
          c[6324] = (c[6324] | 0) + 1;
          h2 = ic(151) | 0;
          if (!h2)
            h2 = 0;
          else {
            c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
            h2 = h2 + 4 + 15 & -16;
          }
          c[h2 >> 2] = 9428;
          a[h2 + 20 >> 0] = 1;
          c[h2 + 16 >> 2] = 0;
          c[h2 + 8 >> 2] = 0;
          c[h2 + 12 >> 2] = 0;
          a[h2 + 40 >> 0] = 1;
          c[h2 + 36 >> 2] = 0;
          c[h2 + 28 >> 2] = 0;
          c[h2 + 32 >> 2] = 0;
          a[h2 + 60 >> 0] = 1;
          c[h2 + 56 >> 2] = 0;
          c[h2 + 48 >> 2] = 0;
          c[h2 + 52 >> 2] = 0;
          c[d2 + 56 >> 2] = h2;
          m2 = 0;
          n2 = 0;
          ea2 = 0;
          L2 = 0;
          while (1) {
            if ((m2 | 0) >= (ob[c[(c[d2 >> 2] | 0) + 96 >> 2] & 127](d2) | 0))
              break;
            do
              if ((L2 | 0) == (n2 | 0)) {
                k2 = n2 | 0 ? n2 << 1 : 1;
                if ((n2 | 0) < (k2 | 0)) {
                  if ((k2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, o2 = ic((k2 << 4 | 3) + 16 | 0) | 0, (o2 | 0) != 0) : 0) {
                    c[(o2 + 4 + 15 & -16) + -4 >> 2] = o2;
                    h2 = o2 + 4 + 15 & -16;
                  } else
                    h2 = 0;
                  if ((n2 | 0) <= 0) {
                    if (!ea2) {
                      j2 = n2;
                      break;
                    }
                  } else {
                    j2 = 0;
                    do {
                      da2 = h2 + (j2 << 4) | 0;
                      ca2 = ea2 + (j2 << 4) | 0;
                      c[da2 >> 2] = c[ca2 >> 2];
                      c[da2 + 4 >> 2] = c[ca2 + 4 >> 2];
                      c[da2 + 8 >> 2] = c[ca2 + 8 >> 2];
                      c[da2 + 12 >> 2] = c[ca2 + 12 >> 2];
                      j2 = j2 + 1 | 0;
                    } while ((j2 | 0) != (n2 | 0));
                  }
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[ea2 + -4 >> 2] | 0);
                  j2 = n2;
                } else {
                  k2 = n2;
                  h2 = ea2;
                  j2 = n2;
                }
              } else {
                k2 = n2;
                h2 = ea2;
                j2 = L2;
              }
            while (0);
            n2 = h2 + (L2 << 4) | 0;
            c[n2 >> 2] = c[fa2 + 136 >> 2];
            c[n2 + 4 >> 2] = c[fa2 + 136 + 4 >> 2];
            c[n2 + 8 >> 2] = c[fa2 + 136 + 8 >> 2];
            c[n2 + 12 >> 2] = c[fa2 + 136 + 12 >> 2];
            Ub[c[(c[d2 >> 2] | 0) + 108 >> 2] & 127](d2, m2, n2);
            m2 = m2 + 1 | 0;
            n2 = k2;
            ea2 = h2;
            L2 = j2 + 1 | 0;
          }
          a[fa2 + 76 + 16 >> 0] = 1;
          da2 = fa2 + 76 + 12 | 0;
          c[da2 >> 2] = 0;
          c[fa2 + 76 + 4 >> 2] = 0;
          c[fa2 + 76 + 8 >> 2] = 0;
          a[fa2 + 76 + 36 >> 0] = 1;
          ca2 = fa2 + 76 + 32 | 0;
          c[ca2 >> 2] = 0;
          c[fa2 + 76 + 24 >> 2] = 0;
          c[fa2 + 76 + 28 >> 2] = 0;
          a[fa2 + 76 + 56 >> 0] = 1;
          ba2 = fa2 + 76 + 52 | 0;
          c[ba2 >> 2] = 0;
          c[fa2 + 76 + 44 >> 2] = 0;
          c[fa2 + 76 + 48 >> 2] = 0;
          if (f2) {
            if ((L2 | 0) > 0) {
              J2 = 0;
              k2 = 0;
              j2 = 0;
              m2 = 0;
              while (1) {
                h2 = J2;
                J2 = J2 + 1 | 0;
                if ((J2 | 0) < (L2 | 0)) {
                  B2 = ea2 + (h2 << 4) | 0;
                  I2 = ea2 + (h2 << 4) + 4 | 0;
                  A2 = ea2 + (h2 << 4) + 8 | 0;
                  z2 = J2;
                  h2 = m2;
                  do {
                    m2 = z2;
                    z2 = z2 + 1 | 0;
                    if ((z2 | 0) < (L2 | 0)) {
                      x2 = ea2 + (m2 << 4) | 0;
                      y2 = ea2 + (m2 << 4) + 4 | 0;
                      w2 = ea2 + (m2 << 4) + 8 | 0;
                      p2 = z2;
                      do {
                        E2 = +g[B2 >> 2];
                        v2 = +g[x2 >> 2] - E2;
                        H2 = +g[I2 >> 2];
                        C2 = +g[y2 >> 2] - H2;
                        K2 = +g[A2 >> 2];
                        D2 = +g[w2 >> 2] - K2;
                        E2 = +g[ea2 + (p2 << 4) >> 2] - E2;
                        H2 = +g[ea2 + (p2 << 4) + 4 >> 2] - H2;
                        K2 = +g[ea2 + (p2 << 4) + 8 >> 2] - K2;
                        q2 = 1;
                        f2 = 0;
                        while (1) {
                          t2 = (C2 * K2 - D2 * H2) * q2;
                          u2 = (D2 * E2 - v2 * K2) * q2;
                          r2 = (v2 * H2 - C2 * E2) * q2;
                          a:
                            do
                              if (r2 * r2 + (t2 * t2 + u2 * u2) > 9999999747378752e-20) {
                                s2 = 1 / +G(+(r2 * r2 + (t2 * t2 + u2 * u2)));
                                if ((h2 | 0) > 0) {
                                  m2 = 0;
                                  do {
                                    if (t2 * s2 * +g[j2 + (m2 << 4) >> 2] + u2 * s2 * +g[j2 + (m2 << 4) + 4 >> 2] + r2 * s2 * +g[j2 + (m2 << 4) + 8 >> 2] > 0.9990000128746033)
                                      break a;
                                    m2 = m2 + 1 | 0;
                                  } while ((m2 | 0) < (h2 | 0));
                                }
                                q2 = t2 * s2 * +g[B2 >> 2] + u2 * s2 * +g[I2 >> 2] + r2 * s2 * +g[A2 >> 2];
                                m2 = 0;
                                do {
                                  if (t2 * s2 * +g[ea2 + (m2 << 4) >> 2] + u2 * s2 * +g[ea2 + (m2 << 4) + 4 >> 2] + r2 * s2 * +g[ea2 + (m2 << 4) + 8 >> 2] - q2 + -0.009999999776482582 > 0)
                                    break a;
                                  m2 = m2 + 1 | 0;
                                } while ((m2 | 0) < (L2 | 0));
                                do
                                  if ((h2 | 0) == (k2 | 0)) {
                                    o2 = k2 | 0 ? k2 << 1 : 1;
                                    if ((k2 | 0) < (o2 | 0)) {
                                      do
                                        if (!o2)
                                          n2 = 0;
                                        else {
                                          c[6324] = (c[6324] | 0) + 1;
                                          m2 = ic((o2 << 4 | 3) + 16 | 0) | 0;
                                          if (!m2) {
                                            n2 = 0;
                                            break;
                                          }
                                          c[(m2 + 4 + 15 & -16) + -4 >> 2] = m2;
                                          n2 = m2 + 4 + 15 & -16;
                                        }
                                      while (0);
                                      if ((k2 | 0) <= 0) {
                                        if (!j2) {
                                          m2 = o2;
                                          j2 = n2;
                                          break;
                                        }
                                      } else {
                                        m2 = 0;
                                        do {
                                          _2 = n2 + (m2 << 4) | 0;
                                          Z2 = j2 + (m2 << 4) | 0;
                                          c[_2 >> 2] = c[Z2 >> 2];
                                          c[_2 + 4 >> 2] = c[Z2 + 4 >> 2];
                                          c[_2 + 8 >> 2] = c[Z2 + 8 >> 2];
                                          c[_2 + 12 >> 2] = c[Z2 + 12 >> 2];
                                          m2 = m2 + 1 | 0;
                                        } while ((m2 | 0) != (k2 | 0));
                                      }
                                      c[6325] = (c[6325] | 0) + 1;
                                      Rc(c[j2 + -4 >> 2] | 0);
                                      m2 = o2;
                                      j2 = n2;
                                    } else
                                      m2 = k2;
                                  } else {
                                    m2 = k2;
                                    k2 = h2;
                                  }
                                while (0);
                                g[j2 + (k2 << 4) >> 2] = t2 * s2;
                                g[j2 + (k2 << 4) + 4 >> 2] = u2 * s2;
                                g[j2 + (k2 << 4) + 8 >> 2] = r2 * s2;
                                g[j2 + (k2 << 4) + 12 >> 2] = -q2;
                                k2 = m2;
                                h2 = h2 + 1 | 0;
                              }
                            while (0);
                          f2 = f2 + 1 | 0;
                          if ((f2 | 0) == 2)
                            break;
                          else
                            q2 = -1;
                        }
                        p2 = p2 + 1 | 0;
                      } while ((p2 | 0) != (L2 | 0));
                    }
                  } while ((z2 | 0) != (L2 | 0));
                } else
                  h2 = m2;
                if ((J2 | 0) == (L2 | 0)) {
                  p2 = h2;
                  break;
                } else
                  m2 = h2;
              }
              if ((p2 | 0) > 0) {
                h2 = 0;
                o2 = 0;
                f2 = 0;
                while (1) {
                  _2 = j2 + (f2 << 4) | 0;
                  c[fa2 + 136 >> 2] = c[_2 >> 2];
                  c[fa2 + 136 + 4 >> 2] = c[_2 + 4 >> 2];
                  c[fa2 + 136 + 8 >> 2] = c[_2 + 8 >> 2];
                  q2 = +g[j2 + (f2 << 4) + 12 >> 2];
                  q2 = q2 - +Cb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 15](d2);
                  do
                    if ((f2 | 0) == (h2 | 0)) {
                      n2 = h2 | 0 ? h2 << 1 : 1;
                      if ((h2 | 0) < (n2 | 0)) {
                        if ((n2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, M2 = ic((n2 << 4 | 3) + 16 | 0) | 0, (M2 | 0) != 0) : 0) {
                          c[(M2 + 4 + 15 & -16) + -4 >> 2] = M2;
                          k2 = M2 + 4 + 15 & -16;
                        } else
                          k2 = 0;
                        if ((h2 | 0) <= 0) {
                          if (!o2)
                            break;
                        } else {
                          m2 = 0;
                          do {
                            _2 = k2 + (m2 << 4) | 0;
                            Z2 = o2 + (m2 << 4) | 0;
                            c[_2 >> 2] = c[Z2 >> 2];
                            c[_2 + 4 >> 2] = c[Z2 + 4 >> 2];
                            c[_2 + 8 >> 2] = c[Z2 + 8 >> 2];
                            c[_2 + 12 >> 2] = c[Z2 + 12 >> 2];
                            m2 = m2 + 1 | 0;
                          } while ((m2 | 0) != (h2 | 0));
                        }
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[o2 + -4 >> 2] | 0);
                      } else {
                        n2 = h2;
                        k2 = o2;
                      }
                    } else {
                      n2 = h2;
                      k2 = o2;
                      h2 = f2;
                    }
                  while (0);
                  _2 = k2 + (h2 << 4) | 0;
                  c[_2 >> 2] = c[fa2 + 136 >> 2];
                  c[_2 + 4 >> 2] = c[fa2 + 136 + 4 >> 2];
                  c[_2 + 8 >> 2] = c[fa2 + 136 + 8 >> 2];
                  g[k2 + (h2 << 4) + 12 >> 2] = q2;
                  f2 = f2 + 1 | 0;
                  if ((f2 | 0) < (p2 | 0)) {
                    h2 = n2;
                    o2 = k2;
                  } else
                    break;
                }
                if ((f2 | 0) > 0) {
                  B2 = 0;
                  n2 = 0;
                  m2 = 0;
                  h2 = 0;
                  do {
                    z2 = B2;
                    B2 = B2 + 1 | 0;
                    if ((B2 | 0) < (f2 | 0)) {
                      A2 = B2;
                      do {
                        y2 = A2;
                        A2 = A2 + 1 | 0;
                        if ((A2 | 0) < (f2 | 0)) {
                          x2 = A2;
                          do {
                            t2 = +g[k2 + (y2 << 4) + 4 >> 2];
                            q2 = +g[k2 + (x2 << 4) + 8 >> 2];
                            r2 = +g[k2 + (y2 << 4) + 8 >> 2];
                            u2 = +g[k2 + (x2 << 4) + 4 >> 2];
                            v2 = +g[k2 + (x2 << 4) >> 2];
                            C2 = +g[k2 + (y2 << 4) >> 2];
                            s2 = +g[k2 + (z2 << 4) + 8 >> 2];
                            D2 = +g[k2 + (z2 << 4) + 4 >> 2];
                            E2 = +g[k2 + (z2 << 4) >> 2];
                            b:
                              do
                                if ((((u2 * C2 - t2 * v2) * (u2 * C2 - t2 * v2) + ((t2 * q2 - r2 * u2) * (t2 * q2 - r2 * u2) + (r2 * v2 - q2 * C2) * (r2 * v2 - q2 * C2)) > 9999999747378752e-20 ? (v2 * D2 - u2 * E2) * (v2 * D2 - u2 * E2) + ((u2 * s2 - q2 * D2) * (u2 * s2 - q2 * D2) + (q2 * E2 - v2 * s2) * (q2 * E2 - v2 * s2)) > 9999999747378752e-20 : 0) ? (t2 * E2 - C2 * D2) * (t2 * E2 - C2 * D2) + ((r2 * D2 - t2 * s2) * (r2 * D2 - t2 * s2) + (C2 * s2 - r2 * E2) * (C2 * s2 - r2 * E2)) > 9999999747378752e-20 : 0) ? (O2 = s2 * (u2 * C2 - t2 * v2) + (D2 * (r2 * v2 - q2 * C2) + (t2 * q2 - r2 * u2) * E2), +F(+O2) > 9999999974752427e-22) : 0) {
                                  K2 = +g[k2 + (z2 << 4) + 12 >> 2];
                                  P2 = +g[k2 + (y2 << 4) + 12 >> 2];
                                  ga2 = +g[k2 + (x2 << 4) + 12 >> 2];
                                  H2 = -1 / O2 * ((r2 * D2 - t2 * s2) * ga2 + ((t2 * q2 - r2 * u2) * K2 + (u2 * s2 - q2 * D2) * P2));
                                  r2 = -1 / O2 * ((C2 * s2 - r2 * E2) * ga2 + ((r2 * v2 - q2 * C2) * K2 + (q2 * E2 - v2 * s2) * P2));
                                  q2 = -1 / O2 * ((t2 * E2 - C2 * D2) * ga2 + ((u2 * C2 - t2 * v2) * K2 + (v2 * D2 - u2 * E2) * P2));
                                  o2 = 0;
                                  do {
                                    if (+g[k2 + (o2 << 4) + 12 >> 2] + (H2 * +g[k2 + (o2 << 4) >> 2] + r2 * +g[k2 + (o2 << 4) + 4 >> 2] + q2 * +g[k2 + (o2 << 4) + 8 >> 2]) + -0.009999999776482582 > 0)
                                      break b;
                                    o2 = o2 + 1 | 0;
                                  } while ((o2 | 0) < (f2 | 0));
                                  do
                                    if ((h2 | 0) == (n2 | 0)) {
                                      w2 = n2 | 0 ? n2 << 1 : 1;
                                      if ((n2 | 0) >= (w2 | 0)) {
                                        o2 = n2;
                                        break;
                                      }
                                      do
                                        if (!w2)
                                          p2 = 0;
                                        else {
                                          c[6324] = (c[6324] | 0) + 1;
                                          o2 = ic((w2 << 4 | 3) + 16 | 0) | 0;
                                          if (!o2) {
                                            p2 = 0;
                                            break;
                                          }
                                          c[(o2 + 4 + 15 & -16) + -4 >> 2] = o2;
                                          p2 = o2 + 4 + 15 & -16;
                                        }
                                      while (0);
                                      if ((n2 | 0) <= 0) {
                                        if (!m2) {
                                          o2 = w2;
                                          m2 = p2;
                                          break;
                                        }
                                      } else {
                                        o2 = 0;
                                        do {
                                          _2 = p2 + (o2 << 4) | 0;
                                          Z2 = m2 + (o2 << 4) | 0;
                                          c[_2 >> 2] = c[Z2 >> 2];
                                          c[_2 + 4 >> 2] = c[Z2 + 4 >> 2];
                                          c[_2 + 8 >> 2] = c[Z2 + 8 >> 2];
                                          c[_2 + 12 >> 2] = c[Z2 + 12 >> 2];
                                          o2 = o2 + 1 | 0;
                                        } while ((o2 | 0) != (n2 | 0));
                                      }
                                      c[6325] = (c[6325] | 0) + 1;
                                      Rc(c[m2 + -4 >> 2] | 0);
                                      o2 = w2;
                                      m2 = p2;
                                    } else {
                                      o2 = n2;
                                      n2 = h2;
                                    }
                                  while (0);
                                  g[m2 + (n2 << 4) >> 2] = H2;
                                  g[m2 + (n2 << 4) + 4 >> 2] = r2;
                                  g[m2 + (n2 << 4) + 8 >> 2] = q2;
                                  g[m2 + (n2 << 4) + 12 >> 2] = 0;
                                  n2 = o2;
                                  h2 = h2 + 1 | 0;
                                }
                              while (0);
                            x2 = x2 + 1 | 0;
                          } while ((x2 | 0) != (f2 | 0));
                        }
                      } while ((A2 | 0) != (f2 | 0));
                    }
                  } while ((B2 | 0) != (f2 | 0));
                } else {
                  m2 = 0;
                  h2 = 0;
                }
              } else {
                m2 = 0;
                k2 = 0;
                h2 = 0;
              }
            } else {
              m2 = 0;
              k2 = 0;
              j2 = 0;
              h2 = 0;
            }
            oc(fa2 + 76 | 0, m2, h2);
            if (m2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[m2 + -4 >> 2] | 0);
            }
            if (k2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[k2 + -4 >> 2] | 0);
            }
            if (j2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[j2 + -4 >> 2] | 0);
            }
          } else
            oc(fa2 + 76 | 0, ea2, L2);
          J2 = c[fa2 + 76 + 44 >> 2] | 0;
          if ((J2 | 0) > 0) {
            c[6324] = (c[6324] | 0) + 1;
            h2 = ic((J2 << 4 | 3) + 16 | 0) | 0;
            if (!h2)
              h2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              h2 = h2 + 4 + 15 & -16;
            }
            j2 = 0;
            do {
              _2 = h2 + (j2 << 4) | 0;
              c[_2 >> 2] = c[fa2 + 136 >> 2];
              c[_2 + 4 >> 2] = c[fa2 + 136 + 4 >> 2];
              c[_2 + 8 >> 2] = c[fa2 + 136 + 8 >> 2];
              c[_2 + 12 >> 2] = c[fa2 + 136 + 12 >> 2];
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != (J2 | 0));
          } else
            h2 = 0;
          a[fa2 + 56 + 16 >> 0] = 1;
          _2 = fa2 + 56 + 12 | 0;
          c[_2 >> 2] = 0;
          Z2 = fa2 + 56 + 4 | 0;
          c[Z2 >> 2] = 0;
          c[fa2 + 56 + 8 >> 2] = 0;
          m2 = fa2 + 136 | 0;
          o2 = m2 + 19 | 0;
          do {
            a[m2 >> 0] = 0;
            m2 = m2 + 1 | 0;
          } while ((m2 | 0) < (o2 | 0));
          if ((J2 | 0) < 0)
            Xa();
          if (J2 | 0) {
            vf(fa2 + 56 | 0, J2);
            k2 = c[_2 >> 2] | 0;
            j2 = 0;
            do {
              m2 = k2 + (j2 * 36 | 0) | 0;
              a[m2 + 16 >> 0] = 1;
              c[m2 + 4 >> 2] = 0;
              c[m2 + 4 + 4 >> 2] = 0;
              c[m2 + 4 + 8 >> 2] = 0;
              m2 = m2 + 20 | 0;
              n2 = fa2 + 136 + 3 | 0;
              o2 = m2 + 16 | 0;
              do {
                a[m2 >> 0] = a[n2 >> 0] | 0;
                m2 = m2 + 1 | 0;
                n2 = n2 + 1 | 0;
              } while ((m2 | 0) < (o2 | 0));
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != (J2 | 0));
          }
          c[Z2 >> 2] = J2;
          f2 = c[fa2 + 76 + 4 >> 2] | 0;
          o2 = c[d2 + 56 >> 2] | 0;
          n2 = c[o2 + 8 >> 2] | 0;
          if ((n2 | 0) < (f2 | 0)) {
            if ((c[o2 + 12 >> 2] | 0) < (f2 | 0)) {
              if (!f2) {
                j2 = 0;
                m2 = n2;
              } else {
                c[6324] = (c[6324] | 0) + 1;
                j2 = ic((f2 << 4 | 3) + 16 | 0) | 0;
                if (!j2)
                  j2 = 0;
                else {
                  c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                  j2 = j2 + 4 + 15 & -16;
                }
                m2 = c[o2 + 8 >> 2] | 0;
              }
              if ((m2 | 0) > 0) {
                k2 = 0;
                do {
                  Y2 = j2 + (k2 << 4) | 0;
                  X2 = (c[o2 + 16 >> 2] | 0) + (k2 << 4) | 0;
                  c[Y2 >> 2] = c[X2 >> 2];
                  c[Y2 + 4 >> 2] = c[X2 + 4 >> 2];
                  c[Y2 + 8 >> 2] = c[X2 + 8 >> 2];
                  c[Y2 + 12 >> 2] = c[X2 + 12 >> 2];
                  k2 = k2 + 1 | 0;
                } while ((k2 | 0) != (m2 | 0));
              }
              k2 = c[o2 + 16 >> 2] | 0;
              if (k2 | 0) {
                if (a[o2 + 20 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[k2 + -4 >> 2] | 0);
                }
                c[o2 + 16 >> 2] = 0;
              }
              a[o2 + 20 >> 0] = 1;
              c[o2 + 16 >> 2] = j2;
              c[o2 + 12 >> 2] = f2;
              k2 = o2 + 16 | 0;
            } else
              k2 = o2 + 16 | 0;
            j2 = n2;
            do {
              Y2 = (c[k2 >> 2] | 0) + (j2 << 4) | 0;
              c[Y2 >> 2] = c[fa2 + 136 >> 2];
              c[Y2 + 4 >> 2] = c[fa2 + 136 + 4 >> 2];
              c[Y2 + 8 >> 2] = c[fa2 + 136 + 8 >> 2];
              c[Y2 + 12 >> 2] = c[fa2 + 136 + 12 >> 2];
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != (f2 | 0));
          }
          c[o2 + 8 >> 2] = f2;
          if ((f2 | 0) > 0) {
            j2 = 0;
            do {
              Y2 = (c[(c[d2 + 56 >> 2] | 0) + 16 >> 2] | 0) + (j2 << 4) | 0;
              X2 = (c[da2 >> 2] | 0) + (j2 << 4) | 0;
              c[Y2 >> 2] = c[X2 >> 2];
              c[Y2 + 4 >> 2] = c[X2 + 4 >> 2];
              c[Y2 + 8 >> 2] = c[X2 + 8 >> 2];
              c[Y2 + 12 >> 2] = c[X2 + 12 >> 2];
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != (f2 | 0));
          }
          if ((J2 | 0) > 0) {
            I2 = 0;
            do {
              A2 = (c[ca2 >> 2] | 0) + ((c[(c[ba2 >> 2] | 0) + (I2 << 2) >> 2] | 0) * 12 | 0) | 0;
              z2 = A2;
              j2 = 0;
              do {
                B2 = z2 + 4 | 0;
                y2 = c[z2 + ((c[B2 >> 2] | 0) * 12 | 0) + 8 >> 2] | 0;
                w2 = c[_2 >> 2] | 0;
                x2 = w2 + (I2 * 36 | 0) + 4 | 0;
                k2 = c[x2 >> 2] | 0;
                p2 = w2 + (I2 * 36 | 0) + 8 | 0;
                if ((k2 | 0) == (c[p2 >> 2] | 0) ? (N2 = k2 | 0 ? k2 << 1 : 1, (k2 | 0) < (N2 | 0)) : 0) {
                  if (!N2)
                    f2 = 0;
                  else {
                    c[6324] = (c[6324] | 0) + 1;
                    k2 = ic((N2 << 2 | 3) + 16 | 0) | 0;
                    if (!k2)
                      k2 = 0;
                    else {
                      c[(k2 + 4 + 15 & -16) + -4 >> 2] = k2;
                      k2 = k2 + 4 + 15 & -16;
                    }
                    f2 = k2;
                    k2 = c[x2 >> 2] | 0;
                  }
                  o2 = w2 + (I2 * 36 | 0) + 12 | 0;
                  n2 = c[o2 >> 2] | 0;
                  if ((k2 | 0) <= 0)
                    if (!n2)
                      m2 = w2 + (I2 * 36 | 0) + 16 | 0;
                    else
                      $2 = 132;
                  else {
                    m2 = 0;
                    do {
                      c[f2 + (m2 << 2) >> 2] = c[n2 + (m2 << 2) >> 2];
                      m2 = m2 + 1 | 0;
                    } while ((m2 | 0) != (k2 | 0));
                    $2 = 132;
                  }
                  if (($2 | 0) == 132) {
                    $2 = 0;
                    k2 = w2 + (I2 * 36 | 0) + 16 | 0;
                    if (a[k2 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[n2 + -4 >> 2] | 0);
                    }
                    c[o2 >> 2] = 0;
                    m2 = k2;
                    k2 = c[x2 >> 2] | 0;
                  }
                  a[m2 >> 0] = 1;
                  c[o2 >> 2] = f2;
                  c[p2 >> 2] = N2;
                }
                c[(c[w2 + (I2 * 36 | 0) + 12 >> 2] | 0) + (k2 << 2) >> 2] = y2;
                c[x2 >> 2] = (c[x2 >> 2] | 0) + 1;
                X2 = c[z2 + 8 >> 2] | 0;
                Y2 = c[da2 >> 2] | 0;
                s2 = +g[Y2 + (X2 << 4) >> 2] - +g[Y2 + (y2 << 4) >> 2];
                t2 = +g[Y2 + (X2 << 4) + 4 >> 2] - +g[Y2 + (y2 << 4) + 4 >> 2];
                q2 = +g[Y2 + (X2 << 4) + 8 >> 2] - +g[Y2 + (y2 << 4) + 8 >> 2];
                r2 = 1 / +G(+(s2 * s2 + t2 * t2 + q2 * q2));
                if ((j2 | 0) < 2) {
                  g[fa2 + 136 + (j2 << 4) >> 2] = s2 * r2;
                  g[fa2 + 136 + (j2 << 4) + 4 >> 2] = t2 * r2;
                  g[fa2 + 136 + (j2 << 4) + 8 >> 2] = q2 * r2;
                  g[fa2 + 136 + (j2 << 4) + 12 >> 2] = 0;
                  j2 = j2 + 1 | 0;
                }
                Y2 = z2 + ((c[B2 >> 2] | 0) * 12 | 0) | 0;
                z2 = Y2 + ((c[Y2 >> 2] | 0) * 12 | 0) | 0;
              } while ((z2 | 0) != (A2 | 0));
              k2 = h2 + (I2 << 4) | 0;
              if ((j2 | 0) == 2) {
                H2 = +g[fa2 + 136 + 4 >> 2];
                K2 = +g[fa2 + 136 + 24 >> 2];
                O2 = +g[fa2 + 136 + 8 >> 2];
                P2 = +g[fa2 + 136 + 20 >> 2];
                E2 = +g[fa2 + 136 + 16 >> 2];
                D2 = +g[fa2 + 136 >> 2];
                X2 = h2 + (I2 << 4) + 4 | 0;
                Y2 = h2 + (I2 << 4) + 8 | 0;
                g[h2 + (I2 << 4) + 12 >> 2] = 0;
                ga2 = 1 / +G(+((H2 * K2 - O2 * P2) * (H2 * K2 - O2 * P2) + (O2 * E2 - K2 * D2) * (O2 * E2 - K2 * D2) + (P2 * D2 - H2 * E2) * (P2 * D2 - H2 * E2)));
                g[k2 >> 2] = (H2 * K2 - O2 * P2) * ga2;
                g[X2 >> 2] = (O2 * E2 - K2 * D2) * ga2;
                g[Y2 >> 2] = (P2 * D2 - H2 * E2) * ga2;
                o2 = c[_2 >> 2] | 0;
                g[o2 + (I2 * 36 | 0) + 20 >> 2] = (H2 * K2 - O2 * P2) * ga2;
                c[o2 + (I2 * 36 | 0) + 24 >> 2] = c[X2 >> 2];
                c[o2 + (I2 * 36 | 0) + 28 >> 2] = c[Y2 >> 2];
                g[o2 + (I2 * 36 | 0) + 32 >> 2] = 10000000150474662e14;
              } else {
                c[k2 >> 2] = 0;
                c[k2 + 4 >> 2] = 0;
                c[k2 + 8 >> 2] = 0;
                c[k2 + 12 >> 2] = 0;
                o2 = c[_2 >> 2] | 0;
              }
              m2 = c[o2 + (I2 * 36 | 0) + 4 >> 2] | 0;
              if ((m2 | 0) > 0) {
                n2 = c[(c[d2 + 56 >> 2] | 0) + 16 >> 2] | 0;
                r2 = +g[k2 >> 2];
                s2 = +g[h2 + (I2 << 4) + 4 >> 2];
                t2 = +g[h2 + (I2 << 4) + 8 >> 2];
                k2 = c[o2 + (I2 * 36 | 0) + 12 >> 2] | 0;
                j2 = 0;
                q2 = 10000000150474662e14;
                do {
                  Y2 = c[k2 + (j2 << 2) >> 2] | 0;
                  ga2 = +g[n2 + (Y2 << 4) >> 2] * r2 + +g[n2 + (Y2 << 4) + 4 >> 2] * s2 + +g[n2 + (Y2 << 4) + 8 >> 2] * t2;
                  q2 = q2 > ga2 ? ga2 : q2;
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (m2 | 0));
              } else
                q2 = 10000000150474662e14;
              g[o2 + (I2 * 36 | 0) + 32 >> 2] = -q2;
              I2 = I2 + 1 | 0;
            } while ((I2 | 0) != (J2 | 0));
          }
          if ((c[Z2 >> 2] | 0) > 0) {
            j2 = 0;
            n2 = 0;
            o2 = 0;
            while (1) {
              do
                if ((o2 | 0) == (j2 | 0)) {
                  j2 = o2 | 0 ? o2 << 1 : 1;
                  if ((o2 | 0) < (j2 | 0)) {
                    if ((j2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, Q2 = ic((j2 << 2 | 3) + 16 | 0) | 0, (Q2 | 0) != 0) : 0) {
                      c[(Q2 + 4 + 15 & -16) + -4 >> 2] = Q2;
                      m2 = Q2 + 4 + 15 & -16;
                    } else
                      m2 = 0;
                    if ((o2 | 0) <= 0) {
                      if (!n2)
                        break;
                    } else {
                      k2 = 0;
                      do {
                        c[m2 + (k2 << 2) >> 2] = c[n2 + (k2 << 2) >> 2];
                        k2 = k2 + 1 | 0;
                      } while ((k2 | 0) != (o2 | 0));
                    }
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[n2 + -4 >> 2] | 0);
                  } else {
                    j2 = o2;
                    m2 = n2;
                  }
                } else
                  m2 = n2;
              while (0);
              c[m2 + (o2 << 2) >> 2] = o2;
              o2 = o2 + 1 | 0;
              if ((o2 | 0) >= (c[Z2 >> 2] | 0))
                break;
              else
                n2 = m2;
            }
            M2 = fa2 + 36 + 12 | 0;
            N2 = fa2 + 36 + 4 | 0;
            Q2 = fa2 + 136 + 12 | 0;
            n2 = o2;
            while (1) {
              f2 = n2 + -1 | 0;
              k2 = c[m2 + (f2 << 2) >> 2] | 0;
              c[6324] = (c[6324] | 0) + 1;
              j2 = ic(23) | 0;
              if (!j2)
                j2 = 0;
              else {
                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                j2 = j2 + 4 + 15 & -16;
              }
              c[j2 >> 2] = k2;
              Y2 = c[_2 >> 2] | 0;
              r2 = +g[Y2 + (k2 * 36 | 0) + 20 >> 2];
              s2 = +g[Y2 + (k2 * 36 | 0) + 24 >> 2];
              q2 = +g[Y2 + (k2 * 36 | 0) + 28 >> 2];
              c:
                do
                  if ((n2 | 0) > 1) {
                    o2 = f2;
                    n2 = 1;
                    k2 = 1;
                    x2 = f2;
                    while (1) {
                      f2 = j2;
                      y2 = k2;
                      d:
                        while (1) {
                          j2 = c[_2 >> 2] | 0;
                          p2 = o2;
                          do {
                            Y2 = p2;
                            p2 = p2 + -1 | 0;
                            if ((Y2 | 0) <= 0) {
                              L2 = f2;
                              J2 = y2;
                              I2 = x2;
                              break c;
                            }
                            w2 = c[m2 + (p2 << 2) >> 2] | 0;
                          } while (!(r2 * +g[j2 + (w2 * 36 | 0) + 20 >> 2] + s2 * +g[j2 + (w2 * 36 | 0) + 24 >> 2] + q2 * +g[j2 + (w2 * 36 | 0) + 28 >> 2] > 0.9990000128746033));
                          do
                            if ((y2 | 0) == (n2 | 0)) {
                              n2 = y2 | 0 ? y2 << 1 : 1;
                              if ((y2 | 0) < (n2 | 0)) {
                                do
                                  if (!n2)
                                    k2 = 0;
                                  else {
                                    c[6324] = (c[6324] | 0) + 1;
                                    j2 = ic((n2 << 2 | 3) + 16 | 0) | 0;
                                    if (!j2) {
                                      k2 = 0;
                                      break;
                                    }
                                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                                    k2 = j2 + 4 + 15 & -16;
                                  }
                                while (0);
                                if ((y2 | 0) <= 0) {
                                  if (!f2)
                                    break;
                                } else {
                                  j2 = 0;
                                  do {
                                    c[k2 + (j2 << 2) >> 2] = c[f2 + (j2 << 2) >> 2];
                                    j2 = j2 + 1 | 0;
                                  } while ((j2 | 0) != (y2 | 0));
                                }
                                c[6325] = (c[6325] | 0) + 1;
                                Rc(c[f2 + -4 >> 2] | 0);
                              } else {
                                n2 = y2;
                                k2 = f2;
                              }
                            } else
                              k2 = f2;
                          while (0);
                          c[k2 + (y2 << 2) >> 2] = w2;
                          y2 = y2 + 1 | 0;
                          j2 = 0;
                          while (1) {
                            o2 = m2 + (j2 << 2) | 0;
                            if ((c[o2 >> 2] | 0) == (w2 | 0))
                              break;
                            j2 = j2 + 1 | 0;
                            if ((j2 | 0) >= (x2 | 0)) {
                              o2 = p2;
                              f2 = k2;
                              continue d;
                            }
                          }
                          if ((j2 | 0) < (x2 | 0))
                            break;
                          else {
                            o2 = p2;
                            f2 = k2;
                          }
                        }
                      f2 = x2 + -1 | 0;
                      Y2 = m2 + (f2 << 2) | 0;
                      c[o2 >> 2] = c[Y2 >> 2];
                      c[Y2 >> 2] = w2;
                      if ((x2 | 0) > 1) {
                        o2 = p2;
                        j2 = k2;
                        k2 = y2;
                        x2 = f2;
                      } else {
                        o2 = p2;
                        j2 = k2;
                        k2 = y2;
                        x2 = f2;
                        $2 = 161;
                        break;
                      }
                    }
                  } else {
                    o2 = f2;
                    n2 = 1;
                    k2 = 1;
                    x2 = f2;
                    $2 = 161;
                  }
                while (0);
              e:
                do
                  if (($2 | 0) == 161) {
                    $2 = 0;
                    p2 = j2;
                    w2 = k2;
                    while (1) {
                      j2 = c[_2 >> 2] | 0;
                      do {
                        Y2 = o2;
                        o2 = o2 + -1 | 0;
                        if ((Y2 | 0) <= 0) {
                          L2 = p2;
                          J2 = w2;
                          I2 = x2;
                          break e;
                        }
                        f2 = c[m2 + (o2 << 2) >> 2] | 0;
                      } while (!(r2 * +g[j2 + (f2 * 36 | 0) + 20 >> 2] + s2 * +g[j2 + (f2 * 36 | 0) + 24 >> 2] + q2 * +g[j2 + (f2 * 36 | 0) + 28 >> 2] > 0.9990000128746033));
                      do
                        if ((w2 | 0) == (n2 | 0)) {
                          n2 = w2 | 0 ? w2 << 1 : 1;
                          if ((w2 | 0) < (n2 | 0)) {
                            do
                              if (!n2)
                                k2 = 0;
                              else {
                                c[6324] = (c[6324] | 0) + 1;
                                j2 = ic((n2 << 2 | 3) + 16 | 0) | 0;
                                if (!j2) {
                                  k2 = 0;
                                  break;
                                }
                                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                                k2 = j2 + 4 + 15 & -16;
                              }
                            while (0);
                            if ((w2 | 0) <= 0) {
                              if (!p2) {
                                j2 = k2;
                                break;
                              }
                            } else {
                              j2 = 0;
                              do {
                                c[k2 + (j2 << 2) >> 2] = c[p2 + (j2 << 2) >> 2];
                                j2 = j2 + 1 | 0;
                              } while ((j2 | 0) != (w2 | 0));
                            }
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[p2 + -4 >> 2] | 0);
                            j2 = k2;
                          } else {
                            n2 = w2;
                            j2 = p2;
                          }
                        } else
                          j2 = p2;
                      while (0);
                      c[j2 + (w2 << 2) >> 2] = f2;
                      p2 = j2;
                      w2 = w2 + 1 | 0;
                    }
                  }
                while (0);
              if ((J2 | 0) > 1) {
                a[fa2 + 36 + 16 >> 0] = 1;
                c[M2 >> 2] = 0;
                c[N2 >> 2] = 0;
                c[fa2 + 36 + 8 >> 2] = 0;
                z2 = 0;
                q2 = 0;
                r2 = 0;
                s2 = 0;
                n2 = 0;
                do {
                  k2 = c[L2 + (z2 << 2) >> 2] | 0;
                  q2 = +g[j2 + (k2 * 36 | 0) + 20 >> 2] + q2;
                  r2 = +g[j2 + (k2 * 36 | 0) + 24 >> 2] + r2;
                  s2 = +g[j2 + (k2 * 36 | 0) + 28 >> 2] + s2;
                  y2 = j2 + (k2 * 36 | 0) + 4 | 0;
                  if ((c[y2 >> 2] | 0) > 0) {
                    x2 = j2 + (k2 * 36 | 0) + 12 | 0;
                    w2 = 0;
                    j2 = n2;
                    while (1) {
                      p2 = c[(c[x2 >> 2] | 0) + (w2 << 2) >> 2] | 0;
                      Y2 = (c[(c[d2 + 56 >> 2] | 0) + 16 >> 2] | 0) + (p2 << 4) | 0;
                      c[fa2 + 136 >> 2] = c[Y2 >> 2];
                      c[fa2 + 136 + 4 >> 2] = c[Y2 + 4 >> 2];
                      c[fa2 + 136 + 8 >> 2] = c[Y2 + 8 >> 2];
                      c[fa2 + 136 + 12 >> 2] = c[Y2 + 12 >> 2];
                      f:
                        do
                          if ((j2 | 0) > 0) {
                            n2 = c[M2 >> 2] | 0;
                            k2 = 0;
                            while (1) {
                              if ((c[n2 + (k2 * 24 | 0) + 20 >> 2] | 0) == (p2 | 0))
                                break f;
                              k2 = k2 + 1 | 0;
                              if ((k2 | 0) >= (j2 | 0)) {
                                $2 = 262;
                                break;
                              }
                            }
                          } else
                            $2 = 262;
                        while (0);
                      if (($2 | 0) == 262) {
                        $2 = 0;
                        c[fa2 >> 2] = c[fa2 + 136 >> 2];
                        c[fa2 + 4 >> 2] = c[fa2 + 136 + 4 >> 2];
                        c[fa2 + 8 >> 2] = c[fa2 + 136 + 8 >> 2];
                        c[fa2 + 12 >> 2] = c[fa2 + 136 + 12 >> 2];
                        do
                          if ((j2 | 0) == (c[fa2 + 36 + 8 >> 2] | 0)) {
                            f2 = j2 | 0 ? j2 << 1 : 1;
                            if ((j2 | 0) >= (f2 | 0))
                              break;
                            if (!f2)
                              o2 = 0;
                            else {
                              c[6324] = (c[6324] | 0) + 1;
                              j2 = ic((f2 * 24 | 3) + 16 | 0) | 0;
                              if (!j2)
                                j2 = 0;
                              else {
                                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                                j2 = j2 + 4 + 15 & -16;
                              }
                              o2 = j2;
                              j2 = c[N2 >> 2] | 0;
                            }
                            n2 = c[M2 >> 2] | 0;
                            if ((j2 | 0) <= 0) {
                              if (n2)
                                $2 = 271;
                            } else {
                              k2 = 0;
                              do {
                                $2 = o2 + (k2 * 24 | 0) | 0;
                                Y2 = n2 + (k2 * 24 | 0) | 0;
                                c[$2 >> 2] = c[Y2 >> 2];
                                c[$2 + 4 >> 2] = c[Y2 + 4 >> 2];
                                c[$2 + 8 >> 2] = c[Y2 + 8 >> 2];
                                c[$2 + 12 >> 2] = c[Y2 + 12 >> 2];
                                c[$2 + 16 >> 2] = c[Y2 + 16 >> 2];
                                c[$2 + 20 >> 2] = c[Y2 + 20 >> 2];
                                k2 = k2 + 1 | 0;
                              } while ((k2 | 0) != (j2 | 0));
                              $2 = 271;
                            }
                            if (($2 | 0) == 271) {
                              $2 = 0;
                              if (a[fa2 + 36 + 16 >> 0] | 0) {
                                c[6325] = (c[6325] | 0) + 1;
                                Rc(c[n2 + -4 >> 2] | 0);
                                j2 = c[N2 >> 2] | 0;
                              }
                              c[M2 >> 2] = 0;
                            }
                            a[fa2 + 36 + 16 >> 0] = 1;
                            c[M2 >> 2] = o2;
                            c[fa2 + 36 + 8 >> 2] = f2;
                          }
                        while (0);
                        Y2 = c[M2 >> 2] | 0;
                        X2 = Y2 + (j2 * 24 | 0) | 0;
                        c[X2 >> 2] = c[fa2 >> 2];
                        c[X2 + 4 >> 2] = c[fa2 + 4 >> 2];
                        c[X2 + 8 >> 2] = c[fa2 + 8 >> 2];
                        c[X2 + 12 >> 2] = c[fa2 + 12 >> 2];
                        c[X2 + 16 >> 2] = c[fa2 + 16 >> 2];
                        c[Y2 + (j2 * 24 | 0) + 20 >> 2] = p2;
                        j2 = (c[N2 >> 2] | 0) + 1 | 0;
                        c[N2 >> 2] = j2;
                      }
                      w2 = w2 + 1 | 0;
                      if ((w2 | 0) >= (c[y2 >> 2] | 0)) {
                        n2 = j2;
                        break;
                      }
                    }
                  }
                  z2 = z2 + 1 | 0;
                  j2 = c[_2 >> 2] | 0;
                } while ((z2 | 0) != (J2 | 0));
                a[fa2 + 16 >> 0] = 1;
                c[fa2 + 12 >> 2] = 0;
                c[fa2 + 4 >> 2] = 0;
                c[fa2 + 8 >> 2] = 0;
                Y2 = c[L2 >> 2] | 0;
                c[fa2 + 20 >> 2] = c[j2 + (Y2 * 36 | 0) + 20 >> 2];
                c[fa2 + 24 >> 2] = c[j2 + (Y2 * 36 | 0) + 24 >> 2];
                c[fa2 + 28 >> 2] = c[j2 + (Y2 * 36 | 0) + 28 >> 2];
                c[fa2 + 32 >> 2] = c[j2 + (Y2 * 36 | 0) + 32 >> 2];
                K2 = 1 / +G(+(q2 * q2 + r2 * r2 + s2 * s2));
                P2 = q2 * K2;
                O2 = r2 * K2;
                K2 = s2 * K2;
                if (+F(+K2) > 0.7071067690849304) {
                  H2 = 1 / +G(+(K2 * K2 + O2 * O2));
                  u2 = P2 * -(K2 * H2);
                  v2 = (K2 * K2 + O2 * O2) * H2;
                  C2 = 0;
                  D2 = O2 * H2;
                  E2 = -(P2 * O2 * H2);
                  H2 = -(K2 * H2);
                } else {
                  H2 = 1 / +G(+(P2 * P2 + O2 * O2));
                  u2 = (P2 * P2 + O2 * O2) * H2;
                  v2 = -(K2 * P2 * H2);
                  C2 = -(O2 * H2);
                  D2 = 0;
                  E2 = K2 * -(O2 * H2);
                  H2 = P2 * H2;
                }
                if ((n2 | 0) < 2)
                  if ((n2 | 0) == 1) {
                    n2 = 0;
                    o2 = 0;
                    p2 = 0;
                    k2 = 1;
                    while (1) {
                      w2 = c[M2 >> 2] | 0;
                      do
                        if ((n2 | 0) == (o2 | 0)) {
                          f2 = o2 | 0 ? o2 << 1 : 1;
                          if ((o2 | 0) >= (f2 | 0)) {
                            f2 = o2;
                            j2 = p2;
                            break;
                          }
                          do
                            if (!f2)
                              j2 = 0;
                            else {
                              c[6324] = (c[6324] | 0) + 1;
                              j2 = ic((f2 * 24 | 3) + 16 | 0) | 0;
                              if (!j2) {
                                j2 = 0;
                                o2 = n2;
                                break;
                              }
                              c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                              j2 = j2 + 4 + 15 & -16;
                              o2 = n2;
                            }
                          while (0);
                          if ((o2 | 0) <= 0) {
                            if (p2 | 0)
                              $2 = 209;
                          } else {
                            k2 = 0;
                            do {
                              $2 = j2 + (k2 * 24 | 0) | 0;
                              Y2 = p2 + (k2 * 24 | 0) | 0;
                              c[$2 >> 2] = c[Y2 >> 2];
                              c[$2 + 4 >> 2] = c[Y2 + 4 >> 2];
                              c[$2 + 8 >> 2] = c[Y2 + 8 >> 2];
                              c[$2 + 12 >> 2] = c[Y2 + 12 >> 2];
                              c[$2 + 16 >> 2] = c[Y2 + 16 >> 2];
                              c[$2 + 20 >> 2] = c[Y2 + 20 >> 2];
                              k2 = k2 + 1 | 0;
                            } while ((k2 | 0) != (o2 | 0));
                            $2 = 209;
                          }
                          if (($2 | 0) == 209) {
                            $2 = 0;
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[p2 + -4 >> 2] | 0);
                          }
                          o2 = n2;
                          k2 = c[N2 >> 2] | 0;
                        } else {
                          f2 = o2;
                          j2 = p2;
                          o2 = n2;
                        }
                      while (0);
                      Y2 = j2 + (o2 * 24 | 0) | 0;
                      c[Y2 >> 2] = c[w2 >> 2];
                      c[Y2 + 4 >> 2] = c[w2 + 4 >> 2];
                      c[Y2 + 8 >> 2] = c[w2 + 8 >> 2];
                      c[Y2 + 12 >> 2] = c[w2 + 12 >> 2];
                      c[Y2 + 16 >> 2] = c[w2 + 16 >> 2];
                      c[Y2 + 20 >> 2] = c[w2 + 20 >> 2];
                      n2 = n2 + 1 | 0;
                      if ((n2 | 0) < (k2 | 0)) {
                        o2 = f2;
                        p2 = j2;
                      } else {
                        $2 = 277;
                        break;
                      }
                    }
                  } else {
                    j2 = 0;
                    $2 = 315;
                  }
                else {
                  o2 = c[M2 >> 2] | 0;
                  k2 = 0;
                  j2 = n2;
                  do {
                    if (C2 * +g[o2 + (k2 * 24 | 0) >> 2] + H2 * +g[o2 + (k2 * 24 | 0) + 4 >> 2] + D2 * +g[o2 + (k2 * 24 | 0) + 8 >> 2] < C2 * +g[o2 >> 2] + H2 * +g[o2 + 4 >> 2] + D2 * +g[o2 + 8 >> 2]) {
                      c[fa2 + 136 >> 2] = c[o2 >> 2];
                      c[fa2 + 136 + 4 >> 2] = c[o2 + 4 >> 2];
                      c[fa2 + 136 + 8 >> 2] = c[o2 + 8 >> 2];
                      c[fa2 + 136 + 12 >> 2] = c[o2 + 12 >> 2];
                      c[fa2 + 136 + 16 >> 2] = c[o2 + 16 >> 2];
                      c[fa2 + 136 + 20 >> 2] = c[o2 + 20 >> 2];
                      j2 = o2 + (k2 * 24 | 0) | 0;
                      c[o2 >> 2] = c[j2 >> 2];
                      c[o2 + 4 >> 2] = c[j2 + 4 >> 2];
                      c[o2 + 8 >> 2] = c[j2 + 8 >> 2];
                      c[o2 + 12 >> 2] = c[j2 + 12 >> 2];
                      c[o2 + 16 >> 2] = c[j2 + 16 >> 2];
                      c[o2 + 20 >> 2] = c[j2 + 20 >> 2];
                      j2 = o2 + (k2 * 24 | 0) | 0;
                      c[j2 >> 2] = c[fa2 + 136 >> 2];
                      c[j2 + 4 >> 2] = c[fa2 + 136 + 4 >> 2];
                      c[j2 + 8 >> 2] = c[fa2 + 136 + 8 >> 2];
                      c[j2 + 12 >> 2] = c[fa2 + 136 + 12 >> 2];
                      c[j2 + 16 >> 2] = c[fa2 + 136 + 16 >> 2];
                      c[j2 + 20 >> 2] = c[fa2 + 136 + 20 >> 2];
                      j2 = n2;
                    }
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) < (j2 | 0));
                  g[o2 + 16 >> 2] = -10000000150474662e14;
                  if ((j2 | 0) > 1) {
                    s2 = +g[o2 + 4 >> 2];
                    k2 = 1;
                    do {
                      r2 = +g[o2 + (k2 * 24 | 0) >> 2] - +g[o2 >> 2];
                      ga2 = +g[o2 + (k2 * 24 | 0) + 4 >> 2] - s2;
                      q2 = +g[o2 + (k2 * 24 | 0) + 8 >> 2] - +g[o2 + 8 >> 2];
                      t2 = v2 * r2 + E2 * ga2 + u2 * q2;
                      q2 = C2 * r2 + H2 * ga2 + D2 * q2;
                      if (t2 * t2 + q2 * q2 < 11920928955078125e-23)
                        g[o2 + (k2 * 24 | 0) + 16 >> 2] = 0;
                      else {
                        r2 = +F(+t2);
                        if (!(q2 >= 0))
                          q2 = 2.356194496154785 - (q2 + r2) / (r2 - q2) * 0.7853981852531433;
                        else
                          q2 = 0.7853981852531433 - (q2 - r2) / (q2 + r2) * 0.7853981852531433;
                        g[o2 + (k2 * 24 | 0) + 16 >> 2] = t2 < 0 ? -q2 : q2;
                      }
                      k2 = k2 + 1 | 0;
                    } while ((k2 | 0) != (j2 | 0));
                  }
                  c[fa2 + 136 >> 2] = c[o2 >> 2];
                  c[fa2 + 136 + 4 >> 2] = c[o2 + 4 >> 2];
                  c[fa2 + 136 + 8 >> 2] = c[o2 + 8 >> 2];
                  c[fa2 + 136 + 12 >> 2] = c[o2 + 12 >> 2];
                  ff(fa2 + 36 | 0, fa2 + 136 | 0, 1, j2 + -1 | 0);
                  k2 = c[M2 >> 2] | 0;
                  c[6324] = (c[6324] | 0) + 1;
                  j2 = ic(43) | 0;
                  if (!j2)
                    n2 = 0;
                  else {
                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                    n2 = j2 + 4 + 15 & -16;
                  }
                  o2 = c[M2 >> 2] | 0;
                  c[n2 >> 2] = c[k2 >> 2];
                  c[n2 + 4 >> 2] = c[k2 + 4 >> 2];
                  c[n2 + 8 >> 2] = c[k2 + 8 >> 2];
                  c[n2 + 12 >> 2] = c[k2 + 12 >> 2];
                  c[n2 + 16 >> 2] = c[k2 + 16 >> 2];
                  c[n2 + 20 >> 2] = c[k2 + 20 >> 2];
                  c[6324] = (c[6324] | 0) + 1;
                  j2 = ic(67) | 0;
                  if (!j2)
                    j2 = 0;
                  else {
                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                    j2 = j2 + 4 + 15 & -16;
                  }
                  c[j2 >> 2] = c[n2 >> 2];
                  c[j2 + 4 >> 2] = c[n2 + 4 >> 2];
                  c[j2 + 8 >> 2] = c[n2 + 8 >> 2];
                  c[j2 + 12 >> 2] = c[n2 + 12 >> 2];
                  c[j2 + 16 >> 2] = c[n2 + 16 >> 2];
                  c[j2 + 20 >> 2] = c[n2 + 20 >> 2];
                  if (n2 | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[n2 + -4 >> 2] | 0);
                  }
                  $2 = j2 + 24 | 0;
                  c[$2 >> 2] = c[o2 + 24 >> 2];
                  c[$2 + 4 >> 2] = c[o2 + 24 + 4 >> 2];
                  c[$2 + 8 >> 2] = c[o2 + 24 + 8 >> 2];
                  c[$2 + 12 >> 2] = c[o2 + 24 + 12 >> 2];
                  c[$2 + 16 >> 2] = c[o2 + 24 + 16 >> 2];
                  c[$2 + 20 >> 2] = c[o2 + 24 + 20 >> 2];
                  if ((c[N2 >> 2] | 0) == 2) {
                    k2 = 2;
                    n2 = 2;
                  } else {
                    k2 = 2;
                    n2 = 2;
                    p2 = 2;
                    o2 = 2;
                    do {
                      g:
                        do
                          if ((o2 | 0) > 1) {
                            w2 = c[M2 >> 2] | 0;
                            x2 = w2 + (k2 * 24 | 0) | 0;
                            q2 = +g[x2 >> 2];
                            r2 = +g[w2 + (k2 * 24 | 0) + 4 >> 2];
                            s2 = +g[w2 + (k2 * 24 | 0) + 8 >> 2];
                            while (1) {
                              $2 = o2 + -2 | 0;
                              f2 = o2 + -1 | 0;
                              E2 = +g[j2 + ($2 * 24 | 0) >> 2];
                              H2 = E2 - +g[j2 + (f2 * 24 | 0) >> 2];
                              C2 = +g[j2 + ($2 * 24 | 0) + 4 >> 2];
                              v2 = C2 - +g[j2 + (f2 * 24 | 0) + 4 >> 2];
                              ga2 = +g[j2 + ($2 * 24 | 0) + 8 >> 2];
                              D2 = ga2 - +g[j2 + (f2 * 24 | 0) + 8 >> 2];
                              if ((H2 * (C2 - r2) - v2 * (E2 - q2)) * K2 + (P2 * (v2 * (ga2 - s2) - D2 * (C2 - r2)) + O2 * (D2 * (E2 - q2) - H2 * (ga2 - s2))) > 0)
                                break;
                              if ((f2 | 0) > 1) {
                                n2 = f2;
                                o2 = f2;
                              } else {
                                n2 = f2;
                                o2 = w2;
                                $2 = 241;
                                break g;
                              }
                            }
                            do
                              if ((o2 | 0) == (p2 | 0)) {
                                w2 = p2 << 1;
                                if ((p2 | 0) >= (w2 | 0)) {
                                  w2 = p2;
                                  o2 = p2;
                                  break;
                                }
                                c[6324] = (c[6324] | 0) + 1;
                                o2 = ic((p2 * 48 | 3) + 16 | 0) | 0;
                                if (!o2)
                                  f2 = 0;
                                else {
                                  c[(o2 + 4 + 15 & -16) + -4 >> 2] = o2;
                                  f2 = o2 + 4 + 15 & -16;
                                }
                                if ((n2 | 0) > 0) {
                                  o2 = 0;
                                  do {
                                    $2 = f2 + (o2 * 24 | 0) | 0;
                                    Y2 = j2 + (o2 * 24 | 0) | 0;
                                    c[$2 >> 2] = c[Y2 >> 2];
                                    c[$2 + 4 >> 2] = c[Y2 + 4 >> 2];
                                    c[$2 + 8 >> 2] = c[Y2 + 8 >> 2];
                                    c[$2 + 12 >> 2] = c[Y2 + 12 >> 2];
                                    c[$2 + 16 >> 2] = c[Y2 + 16 >> 2];
                                    c[$2 + 20 >> 2] = c[Y2 + 20 >> 2];
                                    o2 = o2 + 1 | 0;
                                  } while ((o2 | 0) != (n2 | 0));
                                }
                                c[6325] = (c[6325] | 0) + 1;
                                Rc(c[j2 + -4 >> 2] | 0);
                                j2 = f2;
                                o2 = n2;
                              } else
                                w2 = p2;
                            while (0);
                            o2 = j2 + (o2 * 24 | 0) | 0;
                            c[o2 >> 2] = c[x2 >> 2];
                            c[o2 + 4 >> 2] = c[x2 + 4 >> 2];
                            c[o2 + 8 >> 2] = c[x2 + 8 >> 2];
                            c[o2 + 12 >> 2] = c[x2 + 12 >> 2];
                            c[o2 + 16 >> 2] = c[x2 + 16 >> 2];
                            c[o2 + 20 >> 2] = c[x2 + 20 >> 2];
                            o2 = n2 + 1 | 0;
                            n2 = o2;
                            p2 = w2;
                            $2 = 239;
                          } else
                            $2 = 239;
                        while (0);
                      do
                        if (($2 | 0) == 239) {
                          $2 = 0;
                          if ((o2 | 0) != 1)
                            break;
                          o2 = c[M2 >> 2] | 0;
                          $2 = 241;
                        }
                      while (0);
                      if (($2 | 0) == 241) {
                        w2 = o2 + (k2 * 24 | 0) | 0;
                        do
                          if ((p2 | 0) == 1) {
                            c[6324] = (c[6324] | 0) + 1;
                            o2 = ic(67) | 0;
                            if (!o2)
                              f2 = 0;
                            else {
                              c[(o2 + 4 + 15 & -16) + -4 >> 2] = o2;
                              f2 = o2 + 4 + 15 & -16;
                            }
                            if ((n2 | 0) <= 0) {
                              if (!j2) {
                                p2 = 2;
                                j2 = f2;
                                o2 = n2;
                                break;
                              }
                            } else {
                              o2 = 0;
                              do {
                                $2 = f2 + (o2 * 24 | 0) | 0;
                                Y2 = j2 + (o2 * 24 | 0) | 0;
                                c[$2 >> 2] = c[Y2 >> 2];
                                c[$2 + 4 >> 2] = c[Y2 + 4 >> 2];
                                c[$2 + 8 >> 2] = c[Y2 + 8 >> 2];
                                c[$2 + 12 >> 2] = c[Y2 + 12 >> 2];
                                c[$2 + 16 >> 2] = c[Y2 + 16 >> 2];
                                c[$2 + 20 >> 2] = c[Y2 + 20 >> 2];
                                o2 = o2 + 1 | 0;
                              } while ((o2 | 0) != (n2 | 0));
                            }
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                            p2 = 2;
                            j2 = f2;
                            o2 = n2;
                          } else
                            o2 = 1;
                        while (0);
                        o2 = j2 + (o2 * 24 | 0) | 0;
                        c[o2 >> 2] = c[w2 >> 2];
                        c[o2 + 4 >> 2] = c[w2 + 4 >> 2];
                        c[o2 + 8 >> 2] = c[w2 + 8 >> 2];
                        c[o2 + 12 >> 2] = c[w2 + 12 >> 2];
                        c[o2 + 16 >> 2] = c[w2 + 16 >> 2];
                        c[o2 + 20 >> 2] = c[w2 + 20 >> 2];
                        o2 = n2 + 1 | 0;
                        n2 = o2;
                      }
                      k2 = k2 + 1 | 0;
                    } while ((k2 | 0) != (c[N2 >> 2] | 0));
                  }
                  $2 = 277;
                }
                h:
                  do
                    if (($2 | 0) == 277) {
                      $2 = 0;
                      if ((n2 | 0) > 0) {
                        A2 = 0;
                        o2 = c[fa2 + 4 >> 2] | 0;
                        k2 = c[fa2 + 8 >> 2] | 0;
                        while (1) {
                          z2 = j2 + (A2 * 24 | 0) + 20 | 0;
                          do
                            if ((o2 | 0) == (k2 | 0)) {
                              w2 = k2 | 0 ? k2 << 1 : 1;
                              if ((k2 | 0) >= (w2 | 0)) {
                                o2 = k2;
                                y2 = k2;
                                break;
                              }
                              do
                                if (!w2)
                                  p2 = 0;
                                else {
                                  c[6324] = (c[6324] | 0) + 1;
                                  o2 = ic((w2 << 2 | 3) + 16 | 0) | 0;
                                  if (!o2) {
                                    p2 = 0;
                                    break;
                                  }
                                  c[(o2 + 4 + 15 & -16) + -4 >> 2] = o2;
                                  p2 = o2 + 4 + 15 & -16;
                                }
                              while (0);
                              f2 = c[fa2 + 12 >> 2] | 0;
                              if ((k2 | 0) <= 0) {
                                if (f2)
                                  $2 = 305;
                              } else {
                                o2 = 0;
                                do {
                                  c[p2 + (o2 << 2) >> 2] = c[f2 + (o2 << 2) >> 2];
                                  o2 = o2 + 1 | 0;
                                } while ((o2 | 0) != (k2 | 0));
                                $2 = 305;
                              }
                              if (($2 | 0) == 305) {
                                $2 = 0;
                                if (a[fa2 + 16 >> 0] | 0) {
                                  c[6325] = (c[6325] | 0) + 1;
                                  Rc(c[f2 + -4 >> 2] | 0);
                                }
                                c[fa2 + 12 >> 2] = 0;
                                k2 = c[fa2 + 4 >> 2] | 0;
                              }
                              a[fa2 + 16 >> 0] = 1;
                              c[fa2 + 12 >> 2] = p2;
                              c[fa2 + 8 >> 2] = w2;
                              o2 = k2;
                              y2 = w2;
                            } else
                              y2 = k2;
                          while (0);
                          c[(c[fa2 + 12 >> 2] | 0) + (o2 << 2) >> 2] = c[z2 >> 2];
                          o2 = o2 + 1 | 0;
                          c[fa2 + 4 >> 2] = o2;
                          k2 = c[N2 >> 2] | 0;
                          i:
                            do
                              if ((k2 | 0) > 0) {
                                x2 = c[M2 >> 2] | 0;
                                p2 = c[z2 >> 2] | 0;
                                f2 = 0;
                                while (1) {
                                  w2 = x2 + (f2 * 24 | 0) + 20 | 0;
                                  f2 = f2 + 1 | 0;
                                  if ((c[w2 >> 2] | 0) == (p2 | 0))
                                    break;
                                  if ((f2 | 0) >= (k2 | 0))
                                    break i;
                                }
                                c[w2 >> 2] = -1;
                              }
                            while (0);
                          A2 = A2 + 1 | 0;
                          if ((A2 | 0) >= (n2 | 0))
                            break;
                          else
                            k2 = y2;
                        }
                      }
                      if ((k2 | 0) <= 0) {
                        $2 = 315;
                        break;
                      }
                      x2 = c[M2 >> 2] | 0;
                      y2 = c[Z2 >> 2] | 0;
                      z2 = c[_2 >> 2] | 0;
                      A2 = (J2 | 0) > 0;
                      if ((y2 | 0) > 0)
                        w2 = 0;
                      else {
                        $2 = 315;
                        break;
                      }
                      while (1) {
                        B2 = c[x2 + (w2 * 24 | 0) + 20 >> 2] | 0;
                        j:
                          do
                            if ((B2 | 0) != -1) {
                              if (A2)
                                p2 = 0;
                              else {
                                o2 = 0;
                                while (1) {
                                  f2 = c[z2 + (o2 * 36 | 0) + 4 >> 2] | 0;
                                  if ((f2 | 0) > 0) {
                                    p2 = c[z2 + (o2 * 36 | 0) + 12 >> 2] | 0;
                                    n2 = 0;
                                    do {
                                      if ((c[p2 + (n2 << 2) >> 2] | 0) == (B2 | 0)) {
                                        k2 = 1;
                                        break h;
                                      }
                                      n2 = n2 + 1 | 0;
                                    } while ((n2 | 0) < (f2 | 0));
                                  }
                                  o2 = o2 + 1 | 0;
                                  if ((o2 | 0) >= (y2 | 0))
                                    break j;
                                }
                              }
                              do {
                                n2 = 0;
                                while (1) {
                                  if ((c[L2 + (n2 << 2) >> 2] | 0) == (p2 | 0))
                                    break;
                                  n2 = n2 + 1 | 0;
                                  if ((n2 | 0) >= (J2 | 0)) {
                                    $2 = 291;
                                    break;
                                  }
                                }
                                do
                                  if (($2 | 0) == 291) {
                                    $2 = 0;
                                    o2 = c[z2 + (p2 * 36 | 0) + 4 >> 2] | 0;
                                    if ((o2 | 0) <= 0)
                                      break;
                                    f2 = c[z2 + (p2 * 36 | 0) + 12 >> 2] | 0;
                                    n2 = 0;
                                    do {
                                      if ((c[f2 + (n2 << 2) >> 2] | 0) == (B2 | 0)) {
                                        k2 = 1;
                                        break h;
                                      }
                                      n2 = n2 + 1 | 0;
                                    } while ((n2 | 0) < (o2 | 0));
                                  }
                                while (0);
                                p2 = p2 + 1 | 0;
                              } while ((p2 | 0) < (y2 | 0));
                            }
                          while (0);
                        w2 = w2 + 1 | 0;
                        if ((w2 | 0) >= (k2 | 0)) {
                          $2 = 315;
                          break;
                        }
                      }
                    }
                  while (0);
                if (($2 | 0) == 315) {
                  $2 = 0;
                  hh((c[d2 + 56 >> 2] | 0) + 24 | 0, fa2);
                  k2 = 0;
                }
                if (j2 | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[j2 + -4 >> 2] | 0);
                }
                j2 = c[fa2 + 12 >> 2] | 0;
                if (j2 | 0) {
                  if (a[fa2 + 16 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[j2 + -4 >> 2] | 0);
                  }
                  c[fa2 + 12 >> 2] = 0;
                }
                j2 = c[M2 >> 2] | 0;
                if (j2 | 0) {
                  if (a[fa2 + 36 + 16 >> 0] | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[j2 + -4 >> 2] | 0);
                  }
                  c[M2 >> 2] = 0;
                }
                if (k2 & (J2 | 0) > 0) {
                  f2 = 0;
                  $2 = 327;
                }
              } else if ((J2 | 0) == 1) {
                f2 = 0;
                $2 = 327;
              }
              if (($2 | 0) == 327)
                while (1) {
                  $2 = 0;
                  p2 = c[L2 + (f2 << 2) >> 2] | 0;
                  w2 = c[_2 >> 2] | 0;
                  a[fa2 + 136 + 16 >> 0] = 1;
                  c[Q2 >> 2] = 0;
                  c[fa2 + 136 + 4 >> 2] = 0;
                  c[fa2 + 136 + 8 >> 2] = 0;
                  o2 = c[w2 + (p2 * 36 | 0) + 4 >> 2] | 0;
                  if ((o2 | 0) > 0) {
                    c[6324] = (c[6324] | 0) + 1;
                    n2 = ic((o2 << 2 | 3) + 16 | 0) | 0;
                    do
                      if (!n2) {
                        k2 = 0;
                        j2 = 0;
                        $2 = 331;
                      } else {
                        c[(n2 + 4 + 15 & -16) + -4 >> 2] = n2;
                        j2 = c[Q2 >> 2] | 0;
                        if (!j2) {
                          k2 = n2 + 4 + 15 & -16;
                          j2 = n2 + 4 + 15 & -16;
                          $2 = 331;
                          break;
                        }
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[j2 + -4 >> 2] | 0);
                        a[fa2 + 136 + 16 >> 0] = 1;
                        c[Q2 >> 2] = n2 + 4 + 15 & -16;
                        c[fa2 + 136 + 8 >> 2] = o2;
                        yn(n2 + 4 + 15 & -16 | 0, 0, o2 << 2 | 0) | 0;
                        j2 = n2 + 4 + 15 & -16;
                      }
                    while (0);
                    if (($2 | 0) == 331) {
                      $2 = 0;
                      a[fa2 + 136 + 16 >> 0] = 1;
                      c[Q2 >> 2] = k2;
                      c[fa2 + 136 + 8 >> 2] = o2;
                      yn(k2 | 0, 0, o2 << 2 | 0) | 0;
                    }
                    c[fa2 + 136 + 4 >> 2] = o2;
                    n2 = c[w2 + (p2 * 36 | 0) + 12 >> 2] | 0;
                    k2 = 0;
                    do {
                      c[j2 + (k2 << 2) >> 2] = c[n2 + (k2 << 2) >> 2];
                      k2 = k2 + 1 | 0;
                    } while ((k2 | 0) != (o2 | 0));
                    j2 = c[Q2 >> 2] | 0;
                  } else {
                    c[fa2 + 136 + 4 >> 2] = o2;
                    j2 = 0;
                  }
                  c[fa2 + 136 + 20 >> 2] = c[w2 + (p2 * 36 | 0) + 20 >> 2];
                  c[fa2 + 136 + 20 + 4 >> 2] = c[w2 + (p2 * 36 | 0) + 20 + 4 >> 2];
                  c[fa2 + 136 + 20 + 8 >> 2] = c[w2 + (p2 * 36 | 0) + 20 + 8 >> 2];
                  c[fa2 + 136 + 20 + 12 >> 2] = c[w2 + (p2 * 36 | 0) + 20 + 12 >> 2];
                  hh((c[d2 + 56 >> 2] | 0) + 24 | 0, fa2 + 136 | 0);
                  if (j2 | 0) {
                    if (a[fa2 + 136 + 16 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[j2 + -4 >> 2] | 0);
                    }
                    c[Q2 >> 2] = 0;
                  }
                  f2 = f2 + 1 | 0;
                  if ((f2 | 0) >= (J2 | 0))
                    break;
                  else
                    $2 = 327;
                }
              if (L2 | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[L2 + -4 >> 2] | 0);
              }
              if (!I2)
                break;
              else
                n2 = I2;
            }
          } else
            m2 = 0;
          Y2 = c[d2 + 56 >> 2] | 0;
          c[Y2 + 64 >> 2] = 0;
          c[Y2 + 64 + 4 >> 2] = 0;
          c[Y2 + 64 + 8 >> 2] = 0;
          c[Y2 + 64 + 12 >> 2] = 0;
          j2 = c[Y2 + 28 >> 2] | 0;
          if ((j2 | 0) > 0) {
            X2 = 0;
            x2 = 0;
            k2 = 0;
            n2 = 0;
            J2 = 0;
            A2 = 0;
            y2 = 0;
            o2 = 0;
            B2 = 0;
            w2 = 0;
            f2 = 0;
            z2 = 0;
            p2 = 0;
            while (1) {
              I2 = c[Y2 + 36 >> 2] | 0;
              W2 = c[I2 + (X2 * 36 | 0) + 4 >> 2] | 0;
              if ((W2 | 0) > 0) {
                V2 = X2 & 65535;
                U2 = X2 | -65536;
                L2 = 0;
                S2 = A2;
                Q2 = w2;
                N2 = p2;
                j2 = I2;
                while (1) {
                  T2 = L2 + 1 | 0;
                  d2 = c[j2 + (X2 * 36 | 0) + 12 >> 2] | 0;
                  w2 = c[d2 + (L2 << 2) >> 2] & 65535;
                  L2 = c[d2 + (((T2 | 0) == (W2 | 0) ? 0 : T2) << 2) >> 2] & 65535;
                  d2 = L2 << 16 >> 16 > w2 << 16 >> 16 ? w2 : L2;
                  R2 = L2 << 16 >> 16 > w2 << 16 >> 16 ? L2 : w2;
                  p2 = L2 << 16 >> 16 > w2 << 16 >> 16 ? w2 : L2;
                  w2 = L2 << 16 >> 16 > w2 << 16 >> 16 ? L2 : w2;
                  L2 = Q2 + -1 | 0;
                  k:
                    do
                      if ((((p2 & 65535) << 16) + (w2 << 16 >> 16) & L2) >>> 0 < J2 >>> 0 ? (aa2 = c[n2 + ((((p2 & 65535) << 16) + (w2 << 16 >> 16) & L2) << 2) >> 2] | 0, (aa2 | 0) != -1) : 0) {
                        j2 = aa2;
                        while (1) {
                          if (w2 << 16 >> 16 == (b[k2 + (j2 << 2) >> 1] | 0) ? p2 << 16 >> 16 == (b[k2 + (j2 << 2) + 2 >> 1] | 0) : 0)
                            break;
                          j2 = c[o2 + (j2 << 2) >> 2] | 0;
                          if ((j2 | 0) == -1) {
                            I2 = 0;
                            break k;
                          }
                        }
                        I2 = f2 + (j2 << 2) | 0;
                      } else
                        I2 = 0;
                    while (0);
                  j2 = c[Y2 + 16 >> 2] | 0;
                  u2 = +g[j2 + (p2 << 16 >> 16 << 4) >> 2] - +g[j2 + (w2 << 16 >> 16 << 4) >> 2];
                  v2 = +g[j2 + (p2 << 16 >> 16 << 4) + 4 >> 2] - +g[j2 + (w2 << 16 >> 16 << 4) + 4 >> 2];
                  s2 = +g[j2 + (p2 << 16 >> 16 << 4) + 8 >> 2] - +g[j2 + (w2 << 16 >> 16 << 4) + 8 >> 2];
                  t2 = 1 / +G(+(u2 * u2 + v2 * v2 + s2 * s2));
                  j2 = c[Y2 + 48 >> 2] | 0;
                  l:
                    do
                      if ((j2 | 0) > 0) {
                        w2 = c[Y2 + 56 >> 2] | 0;
                        p2 = 0;
                        while (1) {
                          q2 = +g[w2 + (p2 << 4) >> 2];
                          r2 = +g[w2 + (p2 << 4) + 8 >> 2];
                          do
                            if (!(+F(+(q2 - u2 * t2)) > 1e-6)) {
                              if (+F(+(+g[w2 + (p2 << 4) + 4 >> 2] - v2 * t2)) > 1e-6)
                                break;
                              if (!(+F(+(r2 - s2 * t2)) > 1e-6))
                                break l;
                            }
                          while (0);
                          do
                            if (!(+F(+(u2 * t2 + q2)) > 1e-6)) {
                              if (+F(+(v2 * t2 + +g[w2 + (p2 << 4) + 4 >> 2])) > 1e-6)
                                break;
                              if (!(+F(+(s2 * t2 + r2)) > 1e-6))
                                break l;
                            }
                          while (0);
                          p2 = p2 + 1 | 0;
                          if ((p2 | 0) >= (j2 | 0)) {
                            $2 = 368;
                            break;
                          }
                        }
                      } else
                        $2 = 368;
                    while (0);
                  if (($2 | 0) == 368) {
                    $2 = 0;
                    do
                      if ((j2 | 0) == (c[Y2 + 52 >> 2] | 0)) {
                        A2 = j2 | 0 ? j2 << 1 : 1;
                        if ((j2 | 0) >= (A2 | 0))
                          break;
                        if (!A2)
                          w2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          j2 = ic((A2 << 4 | 3) + 16 | 0) | 0;
                          if (!j2)
                            j2 = 0;
                          else {
                            c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                            j2 = j2 + 4 + 15 & -16;
                          }
                          w2 = j2;
                          j2 = c[Y2 + 48 >> 2] | 0;
                        }
                        if ((j2 | 0) > 0) {
                          p2 = 0;
                          do {
                            M2 = w2 + (p2 << 4) | 0;
                            ha2 = (c[Y2 + 56 >> 2] | 0) + (p2 << 4) | 0;
                            c[M2 >> 2] = c[ha2 >> 2];
                            c[M2 + 4 >> 2] = c[ha2 + 4 >> 2];
                            c[M2 + 8 >> 2] = c[ha2 + 8 >> 2];
                            c[M2 + 12 >> 2] = c[ha2 + 12 >> 2];
                            p2 = p2 + 1 | 0;
                          } while ((p2 | 0) != (j2 | 0));
                        }
                        j2 = c[Y2 + 56 >> 2] | 0;
                        if (j2 | 0) {
                          if (a[Y2 + 60 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                          }
                          c[Y2 + 56 >> 2] = 0;
                        }
                        a[Y2 + 60 >> 0] = 1;
                        c[Y2 + 56 >> 2] = w2;
                        c[Y2 + 52 >> 2] = A2;
                        j2 = c[Y2 + 48 >> 2] | 0;
                      }
                    while (0);
                    ha2 = c[Y2 + 56 >> 2] | 0;
                    g[ha2 + (j2 << 4) >> 2] = u2 * t2;
                    g[ha2 + (j2 << 4) + 4 >> 2] = v2 * t2;
                    g[ha2 + (j2 << 4) + 8 >> 2] = s2 * t2;
                    g[ha2 + (j2 << 4) + 12 >> 2] = 0;
                    c[Y2 + 48 >> 2] = (c[Y2 + 48 >> 2] | 0) + 1;
                  }
                  m:
                    do
                      if (!I2) {
                        I2 = ((d2 & 65535) << 16) + (R2 << 16 >> 16) & L2;
                        n:
                          do
                            if (I2 >>> 0 < J2 >>> 0) {
                              j2 = c[n2 + (I2 << 2) >> 2] | 0;
                              if ((j2 | 0) == -1)
                                break;
                              while (1) {
                                if (R2 << 16 >> 16 == (b[k2 + (j2 << 2) >> 1] | 0) ? d2 << 16 >> 16 == (b[k2 + (j2 << 2) + 2 >> 1] | 0) : 0)
                                  break;
                                j2 = c[o2 + (j2 << 2) >> 2] | 0;
                                if ((j2 | 0) == -1)
                                  break n;
                              }
                              I2 = f2 + (j2 << 2) | 0;
                              b[I2 >> 1] = U2;
                              b[I2 + 2 >> 1] = U2 >>> 16;
                              I2 = J2;
                              A2 = S2;
                              w2 = Q2;
                              j2 = z2;
                              p2 = N2;
                              break m;
                            }
                          while (0);
                        do
                          if ((B2 | 0) == (Q2 | 0)) {
                            w2 = B2 | 0 ? B2 << 1 : 1;
                            if ((B2 | 0) >= (w2 | 0)) {
                              w2 = B2;
                              break;
                            }
                            do
                              if (!w2)
                                p2 = 0;
                              else {
                                c[6324] = (c[6324] | 0) + 1;
                                j2 = ic((w2 << 2 | 3) + 16 | 0) | 0;
                                if (!j2) {
                                  p2 = 0;
                                  break;
                                }
                                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                                p2 = j2 + 4 + 15 & -16;
                              }
                            while (0);
                            if ((B2 | 0) <= 0) {
                              if (!f2) {
                                f2 = p2;
                                break;
                              }
                            } else {
                              j2 = 0;
                              do {
                                ha2 = p2 + (j2 << 2) | 0;
                                M2 = f2 + (j2 << 2) | 0;
                                M2 = e[M2 >> 1] | e[M2 + 2 >> 1] << 16;
                                b[ha2 >> 1] = M2;
                                b[ha2 + 2 >> 1] = M2 >>> 16;
                                j2 = j2 + 1 | 0;
                              } while ((j2 | 0) != (B2 | 0));
                            }
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[f2 + -4 >> 2] | 0);
                            f2 = p2;
                          } else
                            w2 = Q2;
                        while (0);
                        M2 = f2 + (B2 << 2) | 0;
                        b[M2 >> 1] = U2;
                        b[M2 + 2 >> 1] = U2 >>> 16;
                        M2 = B2 + 1 | 0;
                        do
                          if ((N2 | 0) == (x2 | 0)) {
                            x2 = N2 | 0 ? N2 << 1 : 1;
                            if ((N2 | 0) >= (x2 | 0)) {
                              x2 = N2;
                              break;
                            }
                            do
                              if (!x2)
                                p2 = 0;
                              else {
                                c[6324] = (c[6324] | 0) + 1;
                                j2 = ic((x2 << 2 | 3) + 16 | 0) | 0;
                                if (!j2) {
                                  p2 = 0;
                                  break;
                                }
                                c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                                p2 = j2 + 4 + 15 & -16;
                              }
                            while (0);
                            if ((N2 | 0) <= 0) {
                              if (!k2) {
                                k2 = p2;
                                break;
                              }
                            } else {
                              j2 = 0;
                              do {
                                ha2 = p2 + (j2 << 2) | 0;
                                L2 = k2 + (j2 << 2) | 0;
                                L2 = e[L2 >> 1] | e[L2 + 2 >> 1] << 16;
                                b[ha2 >> 1] = L2;
                                b[ha2 + 2 >> 1] = L2 >>> 16;
                                j2 = j2 + 1 | 0;
                              } while ((j2 | 0) != (N2 | 0));
                            }
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[k2 + -4 >> 2] | 0);
                            k2 = p2;
                          }
                        while (0);
                        L2 = k2 + (N2 << 2) | 0;
                        b[L2 >> 1] = (d2 & 65535) << 16 | R2 & 65535;
                        b[L2 + 2 >> 1] = ((d2 & 65535) << 16 | R2 & 65535) >>> 16;
                        L2 = N2 + 1 | 0;
                        if ((Q2 | 0) < (w2 | 0)) {
                          do
                            if ((J2 | 0) < (w2 | 0)) {
                              do
                                if ((z2 | 0) < (w2 | 0)) {
                                  do
                                    if (!w2)
                                      j2 = 0;
                                    else {
                                      c[6324] = (c[6324] | 0) + 1;
                                      j2 = ic((w2 << 2 | 3) + 16 | 0) | 0;
                                      if (!j2) {
                                        j2 = 0;
                                        break;
                                      }
                                      c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                                      j2 = j2 + 4 + 15 & -16;
                                    }
                                  while (0);
                                  if ((J2 | 0) <= 0) {
                                    if (!n2) {
                                      n2 = j2;
                                      z2 = w2;
                                      break;
                                    }
                                  } else {
                                    p2 = 0;
                                    do {
                                      c[j2 + (p2 << 2) >> 2] = c[n2 + (p2 << 2) >> 2];
                                      p2 = p2 + 1 | 0;
                                    } while ((p2 | 0) != (J2 | 0));
                                  }
                                  c[6325] = (c[6325] | 0) + 1;
                                  Rc(c[n2 + -4 >> 2] | 0);
                                  n2 = j2;
                                  z2 = w2;
                                }
                              while (0);
                              A2 = w2 << 2;
                              yn(n2 + (J2 << 2) | 0, 0, A2 - (J2 << 2) | 0) | 0;
                              if ((S2 | 0) < (w2 | 0)) {
                                do
                                  if ((y2 | 0) < (w2 | 0)) {
                                    do
                                      if (!w2)
                                        p2 = 0;
                                      else {
                                        c[6324] = (c[6324] | 0) + 1;
                                        j2 = ic((A2 | 3) + 16 | 0) | 0;
                                        if (!j2) {
                                          p2 = 0;
                                          break;
                                        }
                                        c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                                        p2 = j2 + 4 + 15 & -16;
                                      }
                                    while (0);
                                    if ((S2 | 0) <= 0) {
                                      if (!o2) {
                                        j2 = w2;
                                        o2 = p2;
                                        break;
                                      }
                                    } else {
                                      j2 = 0;
                                      do {
                                        c[p2 + (j2 << 2) >> 2] = c[o2 + (j2 << 2) >> 2];
                                        j2 = j2 + 1 | 0;
                                      } while ((j2 | 0) != (S2 | 0));
                                    }
                                    c[6325] = (c[6325] | 0) + 1;
                                    Rc(c[o2 + -4 >> 2] | 0);
                                    j2 = w2;
                                    o2 = p2;
                                  } else
                                    j2 = y2;
                                while (0);
                                yn(o2 + (S2 << 2) | 0, 0, A2 - (S2 << 2) | 0) | 0;
                                y2 = j2;
                              }
                              if ((w2 | 0) > 0) {
                                yn(n2 | 0, -1, A2 | 0) | 0;
                                yn(o2 | 0, -1, A2 | 0) | 0;
                              }
                              if ((J2 | 0) <= 0) {
                                p2 = w2;
                                A2 = w2;
                                j2 = z2;
                                break;
                              }
                              p2 = w2 + -1 | 0;
                              j2 = 0;
                              do {
                                ha2 = n2 + (((e[k2 + (j2 << 2) + 2 >> 1] << 16) + (b[k2 + (j2 << 2) >> 1] | 0) & p2) << 2) | 0;
                                c[o2 + (j2 << 2) >> 2] = c[ha2 >> 2];
                                c[ha2 >> 2] = j2;
                                j2 = j2 + 1 | 0;
                              } while ((j2 | 0) != (J2 | 0));
                              p2 = w2;
                              A2 = w2;
                              j2 = z2;
                            } else {
                              p2 = J2;
                              A2 = S2;
                              j2 = z2;
                            }
                          while (0);
                          I2 = ((d2 & 65535) << 16) + (R2 << 16 >> 16) & w2 + -1;
                        } else {
                          p2 = J2;
                          A2 = S2;
                          j2 = z2;
                        }
                        I2 = n2 + (I2 << 2) | 0;
                        c[o2 + (B2 << 2) >> 2] = c[I2 >> 2];
                        c[I2 >> 2] = B2;
                        I2 = p2;
                        B2 = M2;
                        p2 = L2;
                      } else {
                        b[I2 + 2 >> 1] = V2;
                        I2 = J2;
                        A2 = S2;
                        w2 = Q2;
                        j2 = z2;
                        p2 = N2;
                      }
                    while (0);
                  if ((T2 | 0) >= (W2 | 0))
                    break;
                  L2 = T2;
                  J2 = I2;
                  S2 = A2;
                  Q2 = w2;
                  z2 = j2;
                  N2 = p2;
                  j2 = c[Y2 + 36 >> 2] | 0;
                }
                z2 = j2;
                j2 = c[Y2 + 28 >> 2] | 0;
              } else
                I2 = J2;
              X2 = X2 + 1 | 0;
              if ((X2 | 0) >= (j2 | 0))
                break;
              else
                J2 = I2;
            }
            if ((j2 | 0) > 0) {
              A2 = c[Y2 + 36 >> 2] | 0;
              B2 = c[Y2 + 16 >> 2] | 0;
              z2 = 0;
              q2 = 0;
              do {
                w2 = c[A2 + (z2 * 36 | 0) + 4 >> 2] | 0;
                x2 = c[A2 + (z2 * 36 | 0) + 12 >> 2] | 0;
                y2 = c[x2 >> 2] | 0;
                if ((w2 + -2 | 0) >= 1) {
                  p2 = 1;
                  r2 = +g[Y2 + 64 >> 2];
                  s2 = +g[Y2 + 68 >> 2];
                  t2 = +g[Y2 + 72 >> 2];
                  do {
                    aa2 = c[x2 + (p2 << 2) >> 2] | 0;
                    p2 = p2 + 1 | 0;
                    ha2 = c[x2 + (((p2 | 0) % (w2 | 0) | 0) << 2) >> 2] | 0;
                    u2 = +g[B2 + (y2 << 4) >> 2];
                    v2 = +g[B2 + (aa2 << 4) >> 2];
                    D2 = +g[B2 + (y2 << 4) + 4 >> 2];
                    E2 = +g[B2 + (aa2 << 4) + 4 >> 2];
                    K2 = +g[B2 + (y2 << 4) + 8 >> 2];
                    O2 = +g[B2 + (aa2 << 4) + 8 >> 2];
                    C2 = +g[B2 + (ha2 << 4) >> 2];
                    H2 = +g[B2 + (ha2 << 4) + 4 >> 2];
                    P2 = +g[B2 + (ha2 << 4) + 8 >> 2];
                    ga2 = +G(+(((u2 - v2) * (D2 - H2) - (D2 - E2) * (u2 - C2)) * ((u2 - v2) * (D2 - H2) - (D2 - E2) * (u2 - C2)) + (((D2 - E2) * (K2 - P2) - (K2 - O2) * (D2 - H2)) * ((D2 - E2) * (K2 - P2) - (K2 - O2) * (D2 - H2)) + ((K2 - O2) * (u2 - C2) - (u2 - v2) * (K2 - P2)) * ((K2 - O2) * (u2 - C2) - (u2 - v2) * (K2 - P2))))) * 0.5;
                    r2 = r2 + (u2 + v2 + C2) * 0.3333333432674408 * ga2;
                    g[Y2 + 64 >> 2] = r2;
                    s2 = (D2 + E2 + H2) * 0.3333333432674408 * ga2 + s2;
                    g[Y2 + 68 >> 2] = s2;
                    t2 = ga2 * (K2 + O2 + P2) * 0.3333333432674408 + t2;
                    g[Y2 + 72 >> 2] = t2;
                    q2 = q2 + ga2;
                  } while ((p2 | 0) != (w2 + -1 | 0));
                }
                z2 = z2 + 1 | 0;
              } while ((z2 | 0) != (j2 | 0));
              p2 = Y2 + 64 | 0;
              x2 = k2;
              w2 = n2;
              k2 = 1;
            } else
              $2 = 347;
          } else {
            k2 = 0;
            n2 = 0;
            o2 = 0;
            f2 = 0;
            $2 = 347;
          }
          if (($2 | 0) == 347) {
            q2 = 0;
            p2 = Y2 + 64 | 0;
            x2 = k2;
            w2 = n2;
            k2 = 0;
          }
          t2 = 1 / q2;
          u2 = t2 * +g[p2 >> 2];
          g[p2 >> 2] = u2;
          s2 = t2 * +g[Y2 + 68 >> 2];
          g[Y2 + 68 >> 2] = s2;
          t2 = t2 * +g[Y2 + 72 >> 2];
          g[Y2 + 72 >> 2] = t2;
          g[Y2 + 96 >> 2] = 34028234663852886e22;
          if (k2) {
            n2 = c[Y2 + 36 >> 2] | 0;
            k2 = 0;
            r2 = 34028234663852886e22;
            while (1) {
              q2 = +F(+(+g[n2 + (k2 * 36 | 0) + 32 >> 2] + (+g[n2 + (k2 * 36 | 0) + 20 >> 2] * u2 + +g[n2 + (k2 * 36 | 0) + 24 >> 2] * s2 + +g[n2 + (k2 * 36 | 0) + 28 >> 2] * t2)));
              if (q2 < r2)
                g[Y2 + 96 >> 2] = q2;
              else
                q2 = r2;
              k2 = k2 + 1 | 0;
              if ((k2 | 0) >= (j2 | 0)) {
                C2 = q2;
                break;
              } else
                r2 = q2;
            }
          } else
            C2 = 34028234663852886e22;
          k2 = c[Y2 + 8 >> 2] | 0;
          if ((k2 | 0) > 0) {
            n2 = c[Y2 + 16 >> 2] | 0;
            j2 = 0;
            u2 = -34028234663852886e22;
            v2 = -34028234663852886e22;
            t2 = -34028234663852886e22;
            s2 = 34028234663852886e22;
            r2 = 34028234663852886e22;
            q2 = 34028234663852886e22;
            do {
              ga2 = +g[n2 + (j2 << 4) >> 2];
              q2 = ga2 < q2 ? ga2 : q2;
              t2 = ga2 > t2 ? ga2 : t2;
              ga2 = +g[n2 + (j2 << 4) + 4 >> 2];
              r2 = ga2 < r2 ? ga2 : r2;
              v2 = ga2 > v2 ? ga2 : v2;
              ga2 = +g[n2 + (j2 << 4) + 8 >> 2];
              s2 = ga2 < s2 ? ga2 : s2;
              u2 = ga2 > u2 ? ga2 : u2;
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != (k2 | 0));
          } else {
            u2 = -34028234663852886e22;
            v2 = -34028234663852886e22;
            t2 = -34028234663852886e22;
            s2 = 34028234663852886e22;
            r2 = 34028234663852886e22;
            q2 = 34028234663852886e22;
          }
          g[Y2 + 100 >> 2] = q2 + t2;
          g[Y2 + 104 >> 2] = r2 + v2;
          g[Y2 + 108 >> 2] = s2 + u2;
          g[Y2 + 112 >> 2] = 0;
          ga2 = t2 - q2;
          r2 = v2 - r2;
          q2 = u2 - s2;
          g[Y2 + 116 >> 2] = ga2;
          g[Y2 + 120 >> 2] = r2;
          g[Y2 + 124 >> 2] = q2;
          g[Y2 + 128 >> 2] = 0;
          s2 = C2 / 1.7320507764816284;
          p2 = ga2 < r2 ? r2 < q2 ? 2 : 1 : ga2 < q2 ? 2 : 0;
          q2 = (+g[Y2 + 116 + (p2 << 2) >> 2] * 0.5 - s2) * 9765625e-10;
          g[Y2 + 88 >> 2] = s2;
          g[Y2 + 84 >> 2] = s2;
          g[Y2 + 80 >> 2] = s2;
          r2 = +g[Y2 + 116 + (p2 << 2) >> 2] * 0.5;
          g[Y2 + 80 + (p2 << 2) >> 2] = r2;
          j2 = 0;
          while (1) {
            if (Xg(Y2) | 0) {
              $2 = 453;
              break;
            }
            r2 = r2 - q2;
            g[Y2 + 80 + (p2 << 2) >> 2] = r2;
            j2 = j2 + 1 | 0;
            if ((j2 | 0) >= 1024) {
              $2 = 452;
              break;
            }
          }
          o:
            do
              if (($2 | 0) == 452) {
                g[Y2 + 88 >> 2] = s2;
                g[Y2 + 84 >> 2] = s2;
                g[Y2 + 80 >> 2] = s2;
              } else if (($2 | 0) == 453) {
                q2 = (+g[Y2 + 96 >> 2] - s2) * 9765625e-10;
                j2 = 0;
                n2 = c[Y2 + 80 + ((1 << (1 << p2 & 3) & 3) << 2) >> 2] | 0;
                while (1) {
                  k2 = c[Y2 + 80 + ((1 << p2 & 3) << 2) >> 2] | 0;
                  g[Y2 + 80 + ((1 << p2 & 3) << 2) >> 2] = q2 + (c[l >> 2] = k2, +g[l >> 2]);
                  r2 = q2 + +g[Y2 + 80 + ((1 << (1 << p2 & 3) & 3) << 2) >> 2];
                  g[Y2 + 80 + ((1 << (1 << p2 & 3) & 3) << 2) >> 2] = r2;
                  j2 = j2 + 1 | 0;
                  if (!(Xg(Y2) | 0))
                    break;
                  if ((j2 | 0) >= 1024)
                    break o;
                  else
                    n2 = (g[l >> 2] = r2, c[l >> 2] | 0);
                }
                c[Y2 + 80 + ((1 << p2 & 3) << 2) >> 2] = k2;
                c[Y2 + 80 + ((1 << (1 << p2 & 3) & 3) << 2) >> 2] = n2;
              }
            while (0);
          if (x2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[x2 + -4 >> 2] | 0);
          }
          if (f2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[f2 + -4 >> 2] | 0);
          }
          if (o2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[o2 + -4 >> 2] | 0);
          }
          if (w2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[w2 + -4 >> 2] | 0);
          }
          if (m2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[m2 + -4 >> 2] | 0);
          }
          f2 = c[Z2 >> 2] | 0;
          p2 = c[_2 >> 2] | 0;
          if ((f2 | 0) <= 0) {
            if (p2 | 0)
              $2 = 474;
          } else {
            j2 = 0;
            do {
              m2 = p2 + (j2 * 36 | 0) + 4 | 0;
              n2 = p2 + (j2 * 36 | 0) + 12 | 0;
              o2 = c[n2 >> 2] | 0;
              k2 = p2 + (j2 * 36 | 0) + 16 | 0;
              if (o2 | 0) {
                if (a[k2 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[o2 + -4 >> 2] | 0);
                }
                c[n2 >> 2] = 0;
              }
              a[k2 >> 0] = 1;
              c[n2 >> 2] = 0;
              c[m2 >> 2] = 0;
              c[p2 + (j2 * 36 | 0) + 8 >> 2] = 0;
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != (f2 | 0));
            $2 = 474;
          }
          if (($2 | 0) == 474) {
            if (a[fa2 + 56 + 16 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[p2 + -4 >> 2] | 0);
            }
            c[_2 >> 2] = 0;
          }
          if (h2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[h2 + -4 >> 2] | 0);
          }
          h2 = c[ba2 >> 2] | 0;
          if (h2 | 0) {
            if (a[fa2 + 76 + 56 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[h2 + -4 >> 2] | 0);
            }
            c[ba2 >> 2] = 0;
          }
          a[fa2 + 76 + 56 >> 0] = 1;
          c[ba2 >> 2] = 0;
          c[fa2 + 76 + 44 >> 2] = 0;
          c[fa2 + 76 + 48 >> 2] = 0;
          h2 = c[ca2 >> 2] | 0;
          if (h2 | 0) {
            if (a[fa2 + 76 + 36 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[h2 + -4 >> 2] | 0);
            }
            c[ca2 >> 2] = 0;
          }
          a[fa2 + 76 + 36 >> 0] = 1;
          c[ca2 >> 2] = 0;
          c[fa2 + 76 + 24 >> 2] = 0;
          c[fa2 + 76 + 28 >> 2] = 0;
          h2 = c[da2 >> 2] | 0;
          if (h2 | 0) {
            if (a[fa2 + 76 + 16 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[h2 + -4 >> 2] | 0);
            }
            c[da2 >> 2] = 0;
          }
          if (!ea2) {
            i = fa2;
            return 1;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[ea2 + -4 >> 2] | 0);
          i = fa2;
          return 1;
        }
        function _b(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0;
          ra2 = i;
          i = i + 704 | 0;
          k2 = c[b2 + 60 >> 2] | 0;
          if (!k2) {
            k2 = c[b2 + 4 >> 2] | 0;
            k2 = yb[c[(c[k2 >> 2] | 0) + 12 >> 2] & 63](k2, c[d2 + 8 >> 2] | 0, c[e2 + 8 >> 2] | 0) | 0;
            c[b2 + 60 >> 2] = k2;
            a[b2 + 56 >> 0] = 1;
          }
          c[h2 + 4 >> 2] = k2;
          oa2 = c[d2 + 4 >> 2] | 0;
          pa2 = c[e2 + 4 >> 2] | 0;
          j2 = c[oa2 + 4 >> 2] | 0;
          m2 = c[pa2 + 4 >> 2] | 0;
          if ((j2 | 0) == 10 & (m2 | 0) == 10) {
            P2 = +g[k2 + 784 >> 2];
            ja2 = c[oa2 + 56 >> 2] | 0;
            y2 = +g[oa2 + 32 + (ja2 << 2) >> 2];
            O2 = +g[oa2 + 32 + (((ja2 + 2 | 0) % 3 | 0) << 2) >> 2];
            qa2 = c[pa2 + 56 >> 2] | 0;
            r2 = +g[pa2 + 32 + (qa2 << 2) >> 2];
            N2 = +g[pa2 + 32 + (((qa2 + 2 | 0) % 3 | 0) << 2) >> 2];
            b2 = c[d2 + 12 >> 2] | 0;
            d2 = c[e2 + 12 >> 2] | 0;
            D2 = +g[b2 + (ja2 << 2) >> 2];
            H2 = +g[b2 + 16 + (ja2 << 2) >> 2];
            E2 = +g[b2 + 32 + (ja2 << 2) >> 2];
            q2 = +g[d2 + (qa2 << 2) >> 2];
            s2 = +g[d2 + 16 + (qa2 << 2) >> 2];
            u2 = +g[d2 + 32 + (qa2 << 2) >> 2];
            K2 = +g[d2 + 48 >> 2];
            L2 = +g[d2 + 52 >> 2];
            M2 = +g[d2 + 56 >> 2];
            A2 = K2 - +g[b2 + 48 >> 2];
            B2 = L2 - +g[b2 + 52 >> 2];
            C2 = M2 - +g[b2 + 56 >> 2];
            o2 = 1 - (D2 * q2 + H2 * s2 + E2 * u2) * (D2 * q2 + H2 * s2 + E2 * u2);
            if (!(o2 == 0)) {
              o2 = (D2 * A2 + H2 * B2 + E2 * C2 - (D2 * q2 + H2 * s2 + E2 * u2) * (q2 * A2 + s2 * B2 + u2 * C2)) / o2;
              if (!(o2 < -y2)) {
                if (o2 > y2)
                  o2 = y2;
              } else
                o2 = -y2;
            } else
              o2 = 0;
            p2 = (D2 * q2 + H2 * s2 + E2 * u2) * o2 - (q2 * A2 + s2 * B2 + u2 * C2);
            if (p2 < -r2) {
              o2 = (D2 * q2 + H2 * s2 + E2 * u2) * -r2 + (D2 * A2 + H2 * B2 + E2 * C2);
              if (!(o2 < -y2))
                if (o2 > y2) {
                  p2 = -r2;
                  o2 = y2;
                } else
                  p2 = -r2;
              else {
                p2 = -r2;
                o2 = -y2;
              }
            } else if (p2 > r2) {
              o2 = r2 * (D2 * q2 + H2 * s2 + E2 * u2) + (D2 * A2 + H2 * B2 + E2 * C2);
              if (!(o2 < -y2))
                if (o2 > y2) {
                  p2 = r2;
                  o2 = y2;
                } else
                  p2 = r2;
              else {
                p2 = r2;
                o2 = -y2;
              }
            }
            z2 = q2 * p2;
            y2 = s2 * p2;
            u2 = u2 * p2;
            p2 = z2 + (A2 - D2 * o2);
            r2 = y2 + (B2 - H2 * o2);
            o2 = u2 + (C2 - E2 * o2);
            s2 = +G(+(o2 * o2 + (p2 * p2 + r2 * r2)));
            if (!(s2 - O2 - N2 > P2)) {
              do
                if (o2 * o2 + (p2 * p2 + r2 * r2) <= 14210854715202004e-30)
                  if (+F(+E2) > 0.7071067690849304) {
                    o2 = 1 / +G(+(H2 * H2 + E2 * E2));
                    g[ra2 + 280 >> 2] = 0;
                    g[ra2 + 280 + 4 >> 2] = -(E2 * o2);
                    g[ra2 + 280 + 8 >> 2] = H2 * o2;
                    q2 = 0;
                    p2 = -(E2 * o2);
                    o2 = H2 * o2;
                    break;
                  } else {
                    p2 = 1 / +G(+(D2 * D2 + H2 * H2));
                    g[ra2 + 280 >> 2] = -(H2 * p2);
                    g[ra2 + 280 + 4 >> 2] = D2 * p2;
                    g[ra2 + 280 + 8 >> 2] = 0;
                    q2 = -(H2 * p2);
                    p2 = D2 * p2;
                    o2 = 0;
                    break;
                  }
                else {
                  g[ra2 + 280 >> 2] = p2 * -(1 / s2);
                  g[ra2 + 280 + 4 >> 2] = r2 * -(1 / s2);
                  g[ra2 + 280 + 8 >> 2] = o2 * -(1 / s2);
                  g[ra2 + 280 + 12 >> 2] = 0;
                  q2 = p2 * -(1 / s2);
                  p2 = r2 * -(1 / s2);
                  o2 = o2 * -(1 / s2);
                }
              while (0);
              g[ra2 + 264 >> 2] = N2 * q2 + (z2 + K2);
              g[ra2 + 264 + 4 >> 2] = N2 * p2 + (y2 + L2);
              g[ra2 + 264 + 8 >> 2] = N2 * o2 + (u2 + M2);
              g[ra2 + 264 + 12 >> 2] = 0;
            }
            if (s2 - O2 - N2 < P2) {
              Tb[c[(c[h2 >> 2] | 0) + 16 >> 2] & 15](h2, ra2 + 280 | 0, ra2 + 264 | 0, s2 - O2 - N2);
              k2 = c[h2 + 4 >> 2] | 0;
            }
            if (!(c[k2 + 780 >> 2] | 0)) {
              i = ra2;
              return;
            }
            m2 = c[k2 + 772 >> 2] | 0;
            n2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
            j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
            if ((m2 | 0) == (n2 | 0)) {
              Te(k2, m2 + 4 | 0, j2 + 4 | 0);
              i = ra2;
              return;
            } else {
              Te(k2, j2 + 4 | 0, n2 + 4 | 0);
              i = ra2;
              return;
            }
          }
          g[ra2 + 128 + 128 >> 2] = 999999984306749400;
          w2 = c[b2 + 8 >> 2] | 0;
          t2 = c[b2 + 12 >> 2] | 0;
          c[ra2 + 48 >> 2] = 8848;
          c[ra2 + 48 + 4 >> 2] = 0;
          c[ra2 + 48 + 8 >> 2] = 1065353216;
          c[ra2 + 48 + 12 >> 2] = 0;
          g[ra2 + 48 + 16 >> 2] = 0;
          c[ra2 + 48 + 20 >> 2] = t2;
          c[ra2 + 48 + 24 >> 2] = w2;
          c[ra2 + 48 + 28 >> 2] = oa2;
          c[ra2 + 48 + 32 >> 2] = pa2;
          c[ra2 + 48 + 36 >> 2] = j2;
          c[ra2 + 48 + 40 >> 2] = m2;
          g[ra2 + 48 + 44 >> 2] = +Cb[c[(c[oa2 >> 2] | 0) + 48 >> 2] & 15](oa2);
          g[ra2 + 48 + 48 >> 2] = +Cb[c[(c[pa2 >> 2] | 0) + 48 >> 2] & 15](pa2);
          a[ra2 + 48 + 52 >> 0] = 0;
          c[ra2 + 48 + 60 >> 2] = -1;
          c[ra2 + 48 + 72 >> 2] = 1;
          c[ra2 + 48 + 76 >> 2] = 1;
          c[ra2 + 48 + 28 >> 2] = oa2;
          c[ra2 + 48 + 32 >> 2] = pa2;
          ma2 = +Cb[c[(c[oa2 >> 2] | 0) + 48 >> 2] & 15](oa2);
          na2 = +Cb[c[(c[pa2 >> 2] | 0) + 48 >> 2] & 15](pa2);
          na2 = ma2 + na2 + +g[(c[b2 + 60 >> 2] | 0) + 784 >> 2];
          g[ra2 + 128 + 128 >> 2] = na2 * na2;
          w2 = c[d2 + 12 >> 2] | 0;
          c[ra2 + 128 >> 2] = c[w2 >> 2];
          c[ra2 + 128 + 4 >> 2] = c[w2 + 4 >> 2];
          c[ra2 + 128 + 8 >> 2] = c[w2 + 8 >> 2];
          c[ra2 + 128 + 12 >> 2] = c[w2 + 12 >> 2];
          m2 = ra2 + 128 + 16 | 0;
          c[m2 >> 2] = c[w2 + 16 >> 2];
          c[m2 + 4 >> 2] = c[w2 + 16 + 4 >> 2];
          c[m2 + 8 >> 2] = c[w2 + 16 + 8 >> 2];
          c[m2 + 12 >> 2] = c[w2 + 16 + 12 >> 2];
          t2 = ra2 + 128 + 32 | 0;
          c[t2 >> 2] = c[w2 + 32 >> 2];
          c[t2 + 4 >> 2] = c[w2 + 32 + 4 >> 2];
          c[t2 + 8 >> 2] = c[w2 + 32 + 8 >> 2];
          c[t2 + 12 >> 2] = c[w2 + 32 + 12 >> 2];
          v2 = ra2 + 128 + 48 | 0;
          c[v2 >> 2] = c[w2 + 48 >> 2];
          c[v2 + 4 >> 2] = c[w2 + 48 + 4 >> 2];
          c[v2 + 8 >> 2] = c[w2 + 48 + 8 >> 2];
          c[v2 + 12 >> 2] = c[w2 + 48 + 12 >> 2];
          w2 = ra2 + 128 + 64 | 0;
          j2 = c[e2 + 12 >> 2] | 0;
          c[w2 >> 2] = c[j2 >> 2];
          c[w2 + 4 >> 2] = c[j2 + 4 >> 2];
          c[w2 + 8 >> 2] = c[j2 + 8 >> 2];
          c[w2 + 12 >> 2] = c[j2 + 12 >> 2];
          x2 = ra2 + 128 + 80 | 0;
          c[x2 >> 2] = c[j2 + 16 >> 2];
          c[x2 + 4 >> 2] = c[j2 + 16 + 4 >> 2];
          c[x2 + 8 >> 2] = c[j2 + 16 + 8 >> 2];
          c[x2 + 12 >> 2] = c[j2 + 16 + 12 >> 2];
          Q2 = ra2 + 128 + 96 | 0;
          c[Q2 >> 2] = c[j2 + 32 >> 2];
          c[Q2 + 4 >> 2] = c[j2 + 32 + 4 >> 2];
          c[Q2 + 8 >> 2] = c[j2 + 32 + 8 >> 2];
          c[Q2 + 12 >> 2] = c[j2 + 32 + 12 >> 2];
          R2 = ra2 + 128 + 112 | 0;
          c[R2 >> 2] = c[j2 + 48 >> 2];
          c[R2 + 4 >> 2] = c[j2 + 48 + 4 >> 2];
          c[R2 + 8 >> 2] = c[j2 + 48 + 8 >> 2];
          c[R2 + 12 >> 2] = c[j2 + 48 + 12 >> 2];
          j2 = c[oa2 + 4 >> 2] | 0;
          if ((j2 | 0) < 7 ? (n2 = c[pa2 + 4 >> 2] | 0, (n2 | 0) < 7) : 0) {
            c[ra2 + 40 >> 2] = 9288;
            if (!j2) {
              j2 = n2;
              p2 = 0;
            } else {
              p2 = +Cb[c[(c[oa2 >> 2] | 0) + 48 >> 2] & 15](oa2);
              j2 = c[pa2 + 4 >> 2] | 0;
            }
            if (!j2)
              o2 = 0;
            else
              o2 = +Cb[c[(c[pa2 >> 2] | 0) + 48 >> 2] & 15](pa2);
            c[ra2 >> 2] = 9316;
            c[ra2 + 4 >> 2] = h2;
            g[ra2 + 24 >> 2] = p2;
            g[ra2 + 28 >> 2] = o2;
            a[ra2 + 36 >> 0] = 0;
            ha2 = c[oa2 + 56 >> 2] | 0;
            a:
              do
                if (ha2 | 0) {
                  ia2 = c[pa2 + 56 >> 2] | 0;
                  do
                    if (!ia2) {
                      if ((c[pa2 + 4 >> 2] | 0) != 1)
                        break a;
                      v2 = ra2 + 640 + 16 | 0;
                      a[v2 >> 0] = 1;
                      w2 = ra2 + 640 + 12 | 0;
                      c[w2 >> 2] = 0;
                      t2 = ra2 + 640 + 4 | 0;
                      c[t2 >> 2] = 0;
                      n2 = ra2 + 640 + 8 | 0;
                      c[n2 >> 2] = 0;
                      j2 = c[e2 + 12 >> 2] | 0;
                      ma2 = +g[pa2 + 60 >> 2];
                      na2 = +g[pa2 + 60 + 4 >> 2];
                      q2 = +g[pa2 + 60 + 8 >> 2];
                      o2 = ma2 * +g[j2 >> 2] + na2 * +g[j2 + 4 >> 2] + q2 * +g[j2 + 8 >> 2] + +g[j2 + 48 >> 2];
                      p2 = ma2 * +g[j2 + 16 >> 2] + na2 * +g[j2 + 20 >> 2] + q2 * +g[j2 + 24 >> 2] + +g[j2 + 52 >> 2];
                      q2 = ma2 * +g[j2 + 32 >> 2] + na2 * +g[j2 + 36 >> 2] + q2 * +g[j2 + 40 >> 2] + +g[j2 + 56 >> 2];
                      c[6324] = (c[6324] | 0) + 1;
                      j2 = ic(35) | 0;
                      if (!j2)
                        k2 = 0;
                      else {
                        c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                        k2 = j2 + 4 + 15 & -16;
                      }
                      j2 = c[w2 >> 2] | 0;
                      if (!j2)
                        j2 = 0;
                      else {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[j2 + -4 >> 2] | 0);
                        j2 = c[t2 >> 2] | 0;
                        c[w2 >> 2] = 0;
                      }
                      a[v2 >> 0] = 1;
                      c[w2 >> 2] = k2;
                      c[n2 >> 2] = 1;
                      g[k2 + (j2 << 4) >> 2] = o2;
                      g[k2 + (j2 << 4) + 4 >> 2] = p2;
                      g[k2 + (j2 << 4) + 8 >> 2] = q2;
                      g[k2 + (j2 << 4) + 12 >> 2] = 0;
                      j2 = (c[t2 >> 2] | 0) + 1 | 0;
                      c[t2 >> 2] = j2;
                      qa2 = c[e2 + 12 >> 2] | 0;
                      ma2 = +g[pa2 + 60 + 16 >> 2];
                      na2 = +g[pa2 + 60 + 20 >> 2];
                      q2 = +g[pa2 + 60 + 24 >> 2];
                      o2 = ma2 * +g[qa2 >> 2] + na2 * +g[qa2 + 4 >> 2] + q2 * +g[qa2 + 8 >> 2] + +g[qa2 + 48 >> 2];
                      p2 = ma2 * +g[qa2 + 16 >> 2] + na2 * +g[qa2 + 20 >> 2] + q2 * +g[qa2 + 24 >> 2] + +g[qa2 + 52 >> 2];
                      q2 = ma2 * +g[qa2 + 32 >> 2] + na2 * +g[qa2 + 36 >> 2] + q2 * +g[qa2 + 40 >> 2] + +g[qa2 + 56 >> 2];
                      if ((j2 | 0) == (c[n2 >> 2] | 0) ? (S2 = j2 | 0 ? j2 << 1 : 1, (j2 | 0) < (S2 | 0)) : 0) {
                        if (!S2)
                          m2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          j2 = ic((S2 << 4 | 3) + 16 | 0) | 0;
                          if (!j2)
                            j2 = 0;
                          else {
                            c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                            j2 = j2 + 4 + 15 & -16;
                          }
                          m2 = j2;
                          j2 = c[t2 >> 2] | 0;
                        }
                        if ((j2 | 0) > 0) {
                          k2 = 0;
                          do {
                            qa2 = m2 + (k2 << 4) | 0;
                            ja2 = (c[w2 >> 2] | 0) + (k2 << 4) | 0;
                            c[qa2 >> 2] = c[ja2 >> 2];
                            c[qa2 + 4 >> 2] = c[ja2 + 4 >> 2];
                            c[qa2 + 8 >> 2] = c[ja2 + 8 >> 2];
                            c[qa2 + 12 >> 2] = c[ja2 + 12 >> 2];
                            k2 = k2 + 1 | 0;
                          } while ((k2 | 0) != (j2 | 0));
                        }
                        j2 = c[w2 >> 2] | 0;
                        if (j2 | 0) {
                          if (a[v2 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                          }
                          c[w2 >> 2] = 0;
                        }
                        a[v2 >> 0] = 1;
                        c[w2 >> 2] = m2;
                        c[n2 >> 2] = S2;
                        j2 = c[t2 >> 2] | 0;
                      }
                      qa2 = c[w2 >> 2] | 0;
                      g[qa2 + (j2 << 4) >> 2] = o2;
                      g[qa2 + (j2 << 4) + 4 >> 2] = p2;
                      g[qa2 + (j2 << 4) + 8 >> 2] = q2;
                      g[qa2 + (j2 << 4) + 12 >> 2] = 0;
                      j2 = (c[t2 >> 2] | 0) + 1 | 0;
                      c[t2 >> 2] = j2;
                      e2 = c[e2 + 12 >> 2] | 0;
                      ma2 = +g[pa2 + 60 + 32 >> 2];
                      na2 = +g[pa2 + 60 + 36 >> 2];
                      q2 = +g[pa2 + 60 + 40 >> 2];
                      o2 = ma2 * +g[e2 >> 2] + na2 * +g[e2 + 4 >> 2] + q2 * +g[e2 + 8 >> 2] + +g[e2 + 48 >> 2];
                      p2 = ma2 * +g[e2 + 16 >> 2] + na2 * +g[e2 + 20 >> 2] + q2 * +g[e2 + 24 >> 2] + +g[e2 + 52 >> 2];
                      q2 = ma2 * +g[e2 + 32 >> 2] + na2 * +g[e2 + 36 >> 2] + q2 * +g[e2 + 40 >> 2] + +g[e2 + 56 >> 2];
                      if ((j2 | 0) == (c[n2 >> 2] | 0) ? (T2 = j2 | 0 ? j2 << 1 : 1, (j2 | 0) < (T2 | 0)) : 0) {
                        if (!T2)
                          m2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          j2 = ic((T2 << 4 | 3) + 16 | 0) | 0;
                          if (!j2)
                            j2 = 0;
                          else {
                            c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                            j2 = j2 + 4 + 15 & -16;
                          }
                          m2 = j2;
                          j2 = c[t2 >> 2] | 0;
                        }
                        if ((j2 | 0) > 0) {
                          k2 = 0;
                          do {
                            e2 = m2 + (k2 << 4) | 0;
                            qa2 = (c[w2 >> 2] | 0) + (k2 << 4) | 0;
                            c[e2 >> 2] = c[qa2 >> 2];
                            c[e2 + 4 >> 2] = c[qa2 + 4 >> 2];
                            c[e2 + 8 >> 2] = c[qa2 + 8 >> 2];
                            c[e2 + 12 >> 2] = c[qa2 + 12 >> 2];
                            k2 = k2 + 1 | 0;
                          } while ((k2 | 0) != (j2 | 0));
                        }
                        j2 = c[w2 >> 2] | 0;
                        if (j2 | 0) {
                          if (a[v2 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                          }
                          c[w2 >> 2] = 0;
                        }
                        a[v2 >> 0] = 1;
                        c[w2 >> 2] = m2;
                        c[n2 >> 2] = T2;
                        j2 = c[t2 >> 2] | 0;
                      }
                      e2 = c[w2 >> 2] | 0;
                      g[e2 + (j2 << 4) >> 2] = o2;
                      g[e2 + (j2 << 4) + 4 >> 2] = p2;
                      g[e2 + (j2 << 4) + 8 >> 2] = q2;
                      g[e2 + (j2 << 4) + 12 >> 2] = 0;
                      c[t2 >> 2] = (c[t2 >> 2] | 0) + 1;
                      r2 = +g[(c[b2 + 60 >> 2] | 0) + 784 >> 2];
                      uc(ra2 + 48 | 0, ra2 + 128 | 0, ra2 + 40 | 0, c[f2 + 20 >> 2] | 0, 0);
                      o2 = +g[ra2 + 48 + 4 >> 2];
                      p2 = +g[ra2 + 48 + 8 >> 2];
                      q2 = +g[ra2 + 48 + 12 >> 2];
                      if (o2 * o2 + p2 * p2 + q2 * q2 > 11920928955078125e-23) {
                        na2 = 1 / (o2 * o2 + p2 * p2 + q2 * q2);
                        g[ra2 + 400 >> 2] = o2 * na2;
                        g[ra2 + 400 + 4 >> 2] = p2 * na2;
                        g[ra2 + 400 + 8 >> 2] = q2 * na2;
                        g[ra2 + 400 + 12 >> 2] = 0;
                        na2 = +g[ra2 + 48 + 56 >> 2];
                        o2 = +Cb[c[(c[oa2 >> 2] | 0) + 48 >> 2] & 15](oa2);
                        o2 = na2 - o2 - +Cb[c[(c[pa2 >> 2] | 0) + 48 >> 2] & 15](pa2);
                        j2 = c[b2 + 40 >> 2] | 0;
                        if ((j2 | 0) < 0) {
                          if ((c[b2 + 44 >> 2] | 0) < 0) {
                            k2 = c[b2 + 48 >> 2] | 0;
                            if (k2 | 0) {
                              if (a[b2 + 52 >> 0] | 0) {
                                c[6325] = (c[6325] | 0) + 1;
                                Rc(c[k2 + -4 >> 2] | 0);
                              }
                              c[b2 + 48 >> 2] = 0;
                            }
                            a[b2 + 52 >> 0] = 1;
                            c[b2 + 48 >> 2] = 0;
                            c[b2 + 44 >> 2] = 0;
                          }
                          do {
                            e2 = (c[b2 + 48 >> 2] | 0) + (j2 << 4) | 0;
                            c[e2 >> 2] = c[ra2 + 384 >> 2];
                            c[e2 + 4 >> 2] = c[ra2 + 384 + 4 >> 2];
                            c[e2 + 8 >> 2] = c[ra2 + 384 + 8 >> 2];
                            c[e2 + 12 >> 2] = c[ra2 + 384 + 12 >> 2];
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) != 0);
                        }
                        c[b2 + 40 >> 2] = 0;
                        Fc(ra2 + 400 | 0, c[oa2 + 56 >> 2] | 0, c[d2 + 12 >> 2] | 0, ra2 + 640 | 0, b2 + 36 | 0, o2 - r2, r2, h2);
                      }
                      do
                        if (a[b2 + 56 >> 0] | 0 ? (U2 = c[h2 + 4 >> 2] | 0, c[U2 + 780 >> 2] | 0) : 0) {
                          k2 = c[U2 + 772 >> 2] | 0;
                          m2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                          j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                          if ((k2 | 0) == (m2 | 0)) {
                            Te(U2, k2 + 4 | 0, j2 + 4 | 0);
                            break;
                          } else {
                            Te(U2, j2 + 4 | 0, m2 + 4 | 0);
                            break;
                          }
                        }
                      while (0);
                      j2 = c[w2 >> 2] | 0;
                      if (j2 | 0) {
                        if (a[v2 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[j2 + -4 >> 2] | 0);
                        }
                        c[w2 >> 2] = 0;
                      }
                    } else {
                      na2 = +g[(c[b2 + 60 >> 2] | 0) + 784 >> 2];
                      b:
                        do
                          if (!(a[f2 + 24 >> 0] | 0)) {
                            uc(ra2 + 48 | 0, ra2 + 128 | 0, ra2, c[f2 + 20 >> 2] | 0, 0);
                            o2 = +g[ra2 + 32 >> 2];
                            if (o2 < 0 & (a[ra2 + 36 >> 0] | 0) != 0) {
                              p2 = +g[ra2 + 8 >> 2];
                              q2 = +g[ra2 + 12 >> 2];
                              r2 = +g[ra2 + 16 >> 2];
                              m2 = c[ra2 + 20 >> 2] | 0;
                              ja2 = 111;
                            }
                          } else {
                            fa2 = c[d2 + 12 >> 2] | 0;
                            ga2 = c[e2 + 12 >> 2] | 0;
                            c[6323] = (c[6323] | 0) + 1;
                            P2 = +g[ha2 + 64 >> 2];
                            $2 = +g[ha2 + 68 >> 2];
                            s2 = +g[fa2 + 4 >> 2];
                            ba2 = +g[ha2 + 72 >> 2];
                            u2 = +g[fa2 + 8 >> 2];
                            z2 = +g[fa2 + 16 >> 2];
                            B2 = +g[fa2 + 20 >> 2];
                            D2 = +g[fa2 + 24 >> 2];
                            E2 = +g[fa2 + 32 >> 2];
                            C2 = +g[fa2 + 36 >> 2];
                            A2 = +g[fa2 + 40 >> 2];
                            ca2 = +g[ia2 + 64 >> 2];
                            da2 = +g[ia2 + 68 >> 2];
                            ma2 = +g[ia2 + 72 >> 2];
                            ka2 = P2 * +g[fa2 >> 2] + $2 * s2 + ba2 * u2 + +g[fa2 + 48 >> 2] - (ca2 * +g[ga2 >> 2] + da2 * +g[ga2 + 4 >> 2] + ma2 * +g[ga2 + 8 >> 2] + +g[ga2 + 48 >> 2]);
                            la2 = P2 * z2 + $2 * B2 + ba2 * D2 + +g[fa2 + 52 >> 2] - (ca2 * +g[ga2 + 16 >> 2] + da2 * +g[ga2 + 20 >> 2] + ma2 * +g[ga2 + 24 >> 2] + +g[ga2 + 52 >> 2]);
                            ma2 = P2 * E2 + $2 * C2 + ba2 * A2 + +g[fa2 + 56 >> 2] - (ca2 * +g[ga2 + 32 >> 2] + da2 * +g[ga2 + 36 >> 2] + ma2 * +g[ga2 + 40 >> 2] + +g[ga2 + 56 >> 2]);
                            m2 = c[ha2 + 28 >> 2] | 0;
                            c:
                              do
                                if ((m2 | 0) > 0) {
                                  o2 = 34028234663852886e22;
                                  j2 = 0;
                                  y2 = 0;
                                  p2 = 0;
                                  q2 = 0;
                                  r2 = 0;
                                  H2 = z2;
                                  while (1) {
                                    ea2 = c[ha2 + 36 >> 2] | 0;
                                    ba2 = +g[ea2 + (j2 * 36 | 0) + 20 >> 2];
                                    ca2 = +g[ea2 + (j2 * 36 | 0) + 24 >> 2];
                                    da2 = +g[ea2 + (j2 * 36 | 0) + 28 >> 2];
                                    z2 = ba2 * +g[fa2 >> 2] + ca2 * s2 + da2 * u2;
                                    u2 = ba2 * H2 + ca2 * B2 + da2 * D2;
                                    s2 = ba2 * E2 + ca2 * C2 + da2 * A2;
                                    g[ra2 + 296 >> 2] = z2;
                                    g[ra2 + 296 + 4 >> 2] = u2;
                                    g[ra2 + 296 + 8 >> 2] = s2;
                                    g[ra2 + 296 + 12 >> 2] = 0;
                                    if (ka2 * z2 + la2 * u2 + ma2 * s2 < 0) {
                                      g[ra2 + 296 >> 2] = -z2;
                                      g[ra2 + 296 + 4 >> 2] = -u2;
                                      g[ra2 + 296 + 8 >> 2] = -s2;
                                      D2 = -z2;
                                      u2 = -u2;
                                      s2 = -s2;
                                    } else
                                      D2 = z2;
                                    c[6321] = (c[6321] | 0) + 1;
                                    if (Gi(fa2, ga2, ka2, la2, ma2, D2, u2, s2, ha2, ia2, o2) | 0) {
                                      c[6322] = (c[6322] | 0) + 1;
                                      Ug(ha2, fa2, ra2 + 296 | 0, ra2 + 640 | 0, ra2 + 400 | 0, ra2 + 360 | 0, ra2 + 344 | 0);
                                      Ug(ia2, ga2, ra2 + 296 | 0, ra2 + 384 | 0, ra2 + 376 | 0, ra2 + 328 | 0, ra2 + 312 | 0);
                                      z2 = +g[ra2 + 400 >> 2];
                                      A2 = +g[ra2 + 384 >> 2];
                                      do
                                        if (z2 < A2)
                                          k2 = 0;
                                        else {
                                          B2 = +g[ra2 + 376 >> 2];
                                          C2 = +g[ra2 + 640 >> 2];
                                          if (B2 < C2) {
                                            k2 = 0;
                                            break;
                                          }
                                          k2 = 1;
                                          y2 = z2 - A2 < B2 - C2 ? z2 - A2 : B2 - C2;
                                        }
                                      while (0);
                                      if (!k2)
                                        break;
                                      if (y2 < o2) {
                                        o2 = y2;
                                        p2 = D2;
                                        q2 = u2;
                                        r2 = s2;
                                      }
                                    }
                                    j2 = j2 + 1 | 0;
                                    if ((j2 | 0) >= (m2 | 0))
                                      break c;
                                    s2 = +g[fa2 + 4 >> 2];
                                    u2 = +g[fa2 + 8 >> 2];
                                    H2 = +g[fa2 + 16 >> 2];
                                    B2 = +g[fa2 + 20 >> 2];
                                    D2 = +g[fa2 + 24 >> 2];
                                    E2 = +g[fa2 + 32 >> 2];
                                    C2 = +g[fa2 + 36 >> 2];
                                    A2 = +g[fa2 + 40 >> 2];
                                  }
                                  break b;
                                } else {
                                  o2 = 34028234663852886e22;
                                  p2 = 0;
                                  q2 = 0;
                                  r2 = 0;
                                }
                              while (0);
                            m2 = c[ia2 + 28 >> 2] | 0;
                            d:
                              do
                                if ((m2 | 0) > 0) {
                                  k2 = 0;
                                  z2 = 0;
                                  while (1) {
                                    ea2 = c[ia2 + 36 >> 2] | 0;
                                    ca2 = +g[ea2 + (k2 * 36 | 0) + 20 >> 2];
                                    da2 = +g[ea2 + (k2 * 36 | 0) + 24 >> 2];
                                    y2 = +g[ea2 + (k2 * 36 | 0) + 28 >> 2];
                                    s2 = ca2 * +g[ga2 >> 2] + da2 * +g[ga2 + 4 >> 2] + y2 * +g[ga2 + 8 >> 2];
                                    u2 = ca2 * +g[ga2 + 16 >> 2] + da2 * +g[ga2 + 20 >> 2] + y2 * +g[ga2 + 24 >> 2];
                                    y2 = ca2 * +g[ga2 + 32 >> 2] + da2 * +g[ga2 + 36 >> 2] + y2 * +g[ga2 + 40 >> 2];
                                    g[ra2 + 296 >> 2] = s2;
                                    g[ra2 + 296 + 4 >> 2] = u2;
                                    g[ra2 + 296 + 8 >> 2] = y2;
                                    g[ra2 + 296 + 12 >> 2] = 0;
                                    if (ka2 * s2 + la2 * u2 + ma2 * y2 < 0) {
                                      g[ra2 + 296 >> 2] = -s2;
                                      g[ra2 + 296 + 4 >> 2] = -u2;
                                      g[ra2 + 296 + 8 >> 2] = -y2;
                                      s2 = -s2;
                                      u2 = -u2;
                                      y2 = -y2;
                                    }
                                    c[6321] = (c[6321] | 0) + 1;
                                    if (Gi(fa2, ga2, ka2, la2, ma2, s2, u2, y2, ha2, ia2, o2) | 0) {
                                      c[6322] = (c[6322] | 0) + 1;
                                      Ug(ha2, fa2, ra2 + 296 | 0, ra2 + 640 | 0, ra2 + 400 | 0, ra2 + 360 | 0, ra2 + 344 | 0);
                                      Ug(ia2, ga2, ra2 + 296 | 0, ra2 + 384 | 0, ra2 + 376 | 0, ra2 + 328 | 0, ra2 + 312 | 0);
                                      A2 = +g[ra2 + 400 >> 2];
                                      B2 = +g[ra2 + 384 >> 2];
                                      do
                                        if (A2 < B2)
                                          j2 = 0;
                                        else {
                                          C2 = +g[ra2 + 376 >> 2];
                                          D2 = +g[ra2 + 640 >> 2];
                                          if (C2 < D2) {
                                            j2 = 0;
                                            break;
                                          }
                                          j2 = 1;
                                          z2 = A2 - B2 < C2 - D2 ? A2 - B2 : C2 - D2;
                                        }
                                      while (0);
                                      if (!j2)
                                        break;
                                      if (z2 < o2) {
                                        o2 = z2;
                                        p2 = s2;
                                        q2 = u2;
                                        r2 = y2;
                                      }
                                    }
                                    k2 = k2 + 1 | 0;
                                    if ((k2 | 0) >= (m2 | 0))
                                      break d;
                                  }
                                  break b;
                                }
                              while (0);
                            Q2 = c[ha2 + 48 >> 2] | 0;
                            e:
                              do
                                if ((Q2 | 0) > 0) {
                                  ea2 = 0;
                                  x2 = -1;
                                  w2 = -1;
                                  s2 = 0;
                                  S2 = 0;
                                  f2 = 0;
                                  V2 = 0;
                                  R2 = 0;
                                  W2 = 0;
                                  U2 = 0;
                                  t2 = 0;
                                  v2 = 0;
                                  B2 = 0;
                                  O2 = 0;
                                  A2 = 0;
                                  N2 = 0;
                                  n2 = 0;
                                  k2 = 0;
                                  z2 = 0;
                                  M2 = 0;
                                  m2 = 0;
                                  j2 = 0;
                                  T2 = c[ia2 + 48 >> 2] | 0;
                                  f:
                                    while (1) {
                                      aa2 = c[ha2 + 56 >> 2] | 0;
                                      P2 = +g[aa2 + (ea2 << 4) >> 2];
                                      $2 = +g[aa2 + (ea2 << 4) + 4 >> 2];
                                      da2 = +g[aa2 + (ea2 << 4) + 8 >> 2];
                                      ba2 = P2 * +g[fa2 >> 2] + $2 * +g[fa2 + 4 >> 2] + da2 * +g[fa2 + 8 >> 2];
                                      ca2 = P2 * +g[fa2 + 16 >> 2] + $2 * +g[fa2 + 20 >> 2] + da2 * +g[fa2 + 24 >> 2];
                                      da2 = P2 * +g[fa2 + 32 >> 2] + $2 * +g[fa2 + 36 >> 2] + da2 * +g[fa2 + 40 >> 2];
                                      if ((T2 | 0) > 0) {
                                        aa2 = 0;
                                        P2 = s2;
                                        $2 = p2;
                                        T2 = W2;
                                        L2 = q2;
                                        K2 = r2;
                                        while (1) {
                                          _2 = c[ia2 + 56 >> 2] | 0;
                                          y2 = +g[_2 + (aa2 << 4) >> 2];
                                          C2 = +g[_2 + (aa2 << 4) + 4 >> 2];
                                          H2 = +g[_2 + (aa2 << 4) + 8 >> 2];
                                          D2 = y2 * +g[ga2 >> 2] + C2 * +g[ga2 + 4 >> 2] + H2 * +g[ga2 + 8 >> 2];
                                          E2 = y2 * +g[ga2 + 16 >> 2] + C2 * +g[ga2 + 20 >> 2] + H2 * +g[ga2 + 24 >> 2];
                                          H2 = y2 * +g[ga2 + 32 >> 2] + C2 * +g[ga2 + 36 >> 2] + H2 * +g[ga2 + 40 >> 2];
                                          g[ra2 + 296 >> 2] = ca2 * H2 - da2 * E2;
                                          g[ra2 + 296 + 4 >> 2] = da2 * D2 - ba2 * H2;
                                          g[ra2 + 296 + 8 >> 2] = ba2 * E2 - ca2 * D2;
                                          g[ra2 + 296 + 12 >> 2] = 0;
                                          do
                                            if (!(+F(+(ca2 * H2 - da2 * E2)) > 1e-6)) {
                                              if (+F(+(da2 * D2 - ba2 * H2)) > 1e-6) {
                                                ja2 = 75;
                                                break;
                                              }
                                              if (!(+F(+(ba2 * E2 - ca2 * D2)) > 1e-6)) {
                                                s2 = P2;
                                                p2 = $2;
                                                Q2 = S2;
                                                X2 = f2;
                                                Y2 = V2;
                                                Z2 = R2;
                                                W2 = T2;
                                                _2 = U2;
                                                q2 = L2;
                                                r2 = K2;
                                              } else
                                                ja2 = 75;
                                            } else
                                              ja2 = 75;
                                          while (0);
                                          do
                                            if ((ja2 | 0) == 75) {
                                              ja2 = 0;
                                              r2 = 1 / +G(+((ca2 * H2 - da2 * E2) * (ca2 * H2 - da2 * E2) + (da2 * D2 - ba2 * H2) * (da2 * D2 - ba2 * H2) + (ba2 * E2 - ca2 * D2) * (ba2 * E2 - ca2 * D2)));
                                              p2 = (ca2 * H2 - da2 * E2) * r2;
                                              g[ra2 + 296 >> 2] = p2;
                                              q2 = (da2 * D2 - ba2 * H2) * r2;
                                              g[ra2 + 296 + 4 >> 2] = q2;
                                              r2 = (ba2 * E2 - ca2 * D2) * r2;
                                              g[ra2 + 296 + 8 >> 2] = r2;
                                              if (p2 * ka2 + q2 * la2 + ma2 * r2 < 0) {
                                                g[ra2 + 296 >> 2] = -p2;
                                                g[ra2 + 296 + 4 >> 2] = -q2;
                                                g[ra2 + 296 + 8 >> 2] = -r2;
                                                p2 = -p2;
                                                q2 = -q2;
                                                r2 = -r2;
                                              }
                                              c[6321] = (c[6321] | 0) + 1;
                                              if (!(Gi(fa2, ga2, ka2, la2, ma2, p2, q2, r2, ha2, ia2, o2) | 0)) {
                                                s2 = P2;
                                                p2 = $2;
                                                Q2 = S2;
                                                X2 = f2;
                                                Y2 = V2;
                                                Z2 = R2;
                                                W2 = T2;
                                                _2 = U2;
                                                q2 = L2;
                                                r2 = K2;
                                                break;
                                              }
                                              c[6322] = (c[6322] | 0) + 1;
                                              Ug(ha2, fa2, ra2 + 296 | 0, ra2 + 640 | 0, ra2 + 400 | 0, ra2 + 360 | 0, ra2 + 344 | 0);
                                              Ug(ia2, ga2, ra2 + 296 | 0, ra2 + 384 | 0, ra2 + 376 | 0, ra2 + 328 | 0, ra2 + 312 | 0);
                                              s2 = +g[ra2 + 400 >> 2];
                                              u2 = +g[ra2 + 384 >> 2];
                                              do
                                                if (!(s2 < u2)) {
                                                  y2 = +g[ra2 + 376 >> 2];
                                                  C2 = +g[ra2 + 640 >> 2];
                                                  if (y2 < C2) {
                                                    Q2 = 0;
                                                    s2 = P2;
                                                    break;
                                                  }
                                                  if (s2 - u2 < y2 - C2) {
                                                    Q2 = 1;
                                                    s2 = s2 - u2;
                                                    S2 = c[ra2 + 328 >> 2] | 0;
                                                    f2 = c[ra2 + 328 + 4 >> 2] | 0;
                                                    V2 = c[ra2 + 328 + 8 >> 2] | 0;
                                                    R2 = c[ra2 + 344 >> 2] | 0;
                                                    T2 = c[ra2 + 344 + 4 >> 2] | 0;
                                                    U2 = c[ra2 + 344 + 8 >> 2] | 0;
                                                    break;
                                                  } else {
                                                    Q2 = 1;
                                                    s2 = y2 - C2;
                                                    S2 = c[ra2 + 312 >> 2] | 0;
                                                    f2 = c[ra2 + 312 + 4 >> 2] | 0;
                                                    V2 = c[ra2 + 312 + 8 >> 2] | 0;
                                                    R2 = c[ra2 + 360 >> 2] | 0;
                                                    T2 = c[ra2 + 360 + 4 >> 2] | 0;
                                                    U2 = c[ra2 + 360 + 8 >> 2] | 0;
                                                    break;
                                                  }
                                                } else {
                                                  Q2 = 0;
                                                  s2 = P2;
                                                }
                                              while (0);
                                              if (!Q2)
                                                break f;
                                              if (!(s2 < o2)) {
                                                p2 = $2;
                                                Q2 = S2;
                                                X2 = f2;
                                                Y2 = V2;
                                                Z2 = R2;
                                                W2 = T2;
                                                _2 = U2;
                                                q2 = L2;
                                                r2 = K2;
                                                break;
                                              }
                                              o2 = s2;
                                              x2 = aa2;
                                              w2 = ea2;
                                              Q2 = S2;
                                              X2 = f2;
                                              Y2 = V2;
                                              Z2 = R2;
                                              W2 = T2;
                                              _2 = U2;
                                              t2 = S2;
                                              v2 = R2;
                                              B2 = D2;
                                              O2 = ba2;
                                              A2 = E2;
                                              N2 = ca2;
                                              n2 = T2;
                                              k2 = f2;
                                              z2 = H2;
                                              M2 = da2;
                                              m2 = U2;
                                              j2 = V2;
                                            }
                                          while (0);
                                          aa2 = aa2 + 1 | 0;
                                          T2 = c[ia2 + 48 >> 2] | 0;
                                          if ((aa2 | 0) >= (T2 | 0))
                                            break;
                                          else {
                                            P2 = s2;
                                            $2 = p2;
                                            S2 = Q2;
                                            f2 = X2;
                                            V2 = Y2;
                                            R2 = Z2;
                                            T2 = W2;
                                            U2 = _2;
                                            L2 = q2;
                                            K2 = r2;
                                          }
                                        }
                                        S2 = Q2;
                                        f2 = X2;
                                        V2 = Y2;
                                        R2 = Z2;
                                        U2 = _2;
                                        Q2 = c[ha2 + 48 >> 2] | 0;
                                      }
                                      ea2 = ea2 + 1 | 0;
                                      if ((ea2 | 0) >= (Q2 | 0))
                                        break e;
                                    }
                                  break b;
                                } else {
                                  x2 = -1;
                                  w2 = -1;
                                  t2 = 0;
                                  v2 = 0;
                                  B2 = 0;
                                  O2 = 0;
                                  A2 = 0;
                                  N2 = 0;
                                  n2 = 0;
                                  k2 = 0;
                                  z2 = 0;
                                  M2 = 0;
                                  m2 = 0;
                                  j2 = 0;
                                }
                              while (0);
                            if ((x2 | w2 | 0) > -1) {
                              L2 = (c[l >> 2] = t2, +g[l >> 2]);
                              E2 = L2 - (c[l >> 2] = v2, +g[l >> 2]);
                              K2 = (c[l >> 2] = k2, +g[l >> 2]);
                              D2 = K2 - (c[l >> 2] = n2, +g[l >> 2]);
                              H2 = (c[l >> 2] = j2, +g[l >> 2]);
                              C2 = H2 - (c[l >> 2] = m2, +g[l >> 2]);
                              u2 = B2 * O2 + A2 * N2 + z2 * M2;
                              y2 = E2 * O2 + D2 * N2 + C2 * M2;
                              o2 = E2 * B2 + D2 * A2 + C2 * z2;
                              do
                                if (1 - u2 * u2 == 0)
                                  s2 = 0;
                                else {
                                  if ((y2 - o2 * u2) / (1 - u2 * u2) < -10000000150474662e14) {
                                    s2 = -10000000150474662e14;
                                    break;
                                  }
                                  if (!((y2 - o2 * u2) / (1 - u2 * u2) > 10000000150474662e14)) {
                                    s2 = (y2 - o2 * u2) / (1 - u2 * u2);
                                    break;
                                  }
                                  s2 = 10000000150474662e14;
                                }
                              while (0);
                              o2 = u2 * s2 - o2;
                              do
                                if (o2 < -10000000150474662e14) {
                                  if (y2 - u2 * 10000000150474662e14 < -10000000150474662e14) {
                                    o2 = -10000000150474662e14;
                                    s2 = -10000000150474662e14;
                                    break;
                                  }
                                  if (!(y2 - u2 * 10000000150474662e14 > 10000000150474662e14)) {
                                    o2 = -10000000150474662e14;
                                    s2 = y2 - u2 * 10000000150474662e14;
                                    break;
                                  }
                                  o2 = -10000000150474662e14;
                                  s2 = 10000000150474662e14;
                                } else {
                                  if (!(o2 > 10000000150474662e14))
                                    break;
                                  if (y2 + u2 * 10000000150474662e14 < -10000000150474662e14) {
                                    o2 = 10000000150474662e14;
                                    s2 = -10000000150474662e14;
                                    break;
                                  }
                                  if (!(y2 + u2 * 10000000150474662e14 > 10000000150474662e14)) {
                                    o2 = 10000000150474662e14;
                                    s2 = y2 + u2 * 10000000150474662e14;
                                    break;
                                  }
                                  o2 = 10000000150474662e14;
                                  s2 = 10000000150474662e14;
                                }
                              while (0);
                              B2 = B2 * o2;
                              A2 = A2 * o2;
                              z2 = z2 * o2;
                              y2 = B2 + (E2 - O2 * s2);
                              u2 = A2 + (D2 - N2 * s2);
                              o2 = z2 + (C2 - M2 * s2);
                              g[ra2 + 640 >> 2] = y2;
                              g[ra2 + 640 + 4 >> 2] = u2;
                              g[ra2 + 640 + 8 >> 2] = o2;
                              g[ra2 + 640 + 12 >> 2] = 0;
                              if (y2 * y2 + u2 * u2 + o2 * o2 > 11920928955078125e-23) {
                                s2 = +G(+(y2 * y2 + u2 * u2 + o2 * o2));
                                g[ra2 + 640 >> 2] = y2 * (1 / s2);
                                g[ra2 + 640 + 4 >> 2] = 1 / s2 * u2;
                                g[ra2 + 640 + 8 >> 2] = 1 / s2 * o2;
                                if (y2 * (1 / s2) * ka2 + 1 / s2 * u2 * la2 + 1 / s2 * o2 * ma2 < 0) {
                                  g[ra2 + 640 >> 2] = -(y2 * (1 / s2));
                                  g[ra2 + 640 + 4 >> 2] = -(1 / s2 * u2);
                                  g[ra2 + 640 + 8 >> 2] = -(1 / s2 * o2);
                                }
                                g[ra2 + 400 >> 2] = L2 + B2;
                                g[ra2 + 400 + 4 >> 2] = K2 + A2;
                                g[ra2 + 400 + 8 >> 2] = H2 + z2;
                                g[ra2 + 400 + 12 >> 2] = 0;
                                Tb[c[(c[h2 >> 2] | 0) + 16 >> 2] & 15](h2, ra2 + 640 | 0, ra2 + 400 | 0, -s2);
                              }
                            }
                            if (ka2 * p2 + la2 * q2 + ma2 * r2 < 0) {
                              o2 = -10000000150474662e14;
                              p2 = -p2;
                              q2 = -q2;
                              r2 = -r2;
                              m2 = 0;
                              ja2 = 111;
                            } else {
                              o2 = -10000000150474662e14;
                              m2 = 0;
                              ja2 = 111;
                            }
                          }
                        while (0);
                      if ((ja2 | 0) == 111) {
                        j2 = c[b2 + 20 >> 2] | 0;
                        if ((j2 | 0) < 0) {
                          if ((c[b2 + 24 >> 2] | 0) < 0) {
                            k2 = c[b2 + 28 >> 2] | 0;
                            if (k2 | 0) {
                              if (a[b2 + 32 >> 0] | 0) {
                                c[6325] = (c[6325] | 0) + 1;
                                Rc(c[k2 + -4 >> 2] | 0);
                              }
                              c[b2 + 28 >> 2] = 0;
                            }
                            a[b2 + 32 >> 0] = 1;
                            c[b2 + 28 >> 2] = 0;
                            c[b2 + 24 >> 2] = 0;
                          }
                          do {
                            ja2 = (c[b2 + 28 >> 2] | 0) + (j2 << 4) | 0;
                            c[ja2 >> 2] = c[ra2 + 640 >> 2];
                            c[ja2 + 4 >> 2] = c[ra2 + 640 + 4 >> 2];
                            c[ja2 + 8 >> 2] = c[ra2 + 640 + 8 >> 2];
                            c[ja2 + 12 >> 2] = c[ra2 + 640 + 12 >> 2];
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) != 0);
                        }
                        c[b2 + 20 >> 2] = 0;
                        T2 = c[oa2 + 56 >> 2] | 0;
                        S2 = c[pa2 + 56 >> 2] | 0;
                        R2 = c[d2 + 12 >> 2] | 0;
                        Q2 = c[e2 + 12 >> 2] | 0;
                        M2 = o2 - na2;
                        H2 = 1 / +G(+(p2 * p2 + q2 * q2 + r2 * r2));
                        L2 = p2 * H2;
                        K2 = q2 * H2;
                        H2 = r2 * H2;
                        g[ra2 + 640 >> 2] = L2;
                        g[ra2 + 640 + 4 >> 2] = K2;
                        g[ra2 + 640 + 8 >> 2] = H2;
                        c[ra2 + 640 + 12 >> 2] = m2;
                        k2 = c[S2 + 28 >> 2] | 0;
                        if ((k2 | 0) > 0) {
                          m2 = c[S2 + 36 >> 2] | 0;
                          p2 = +g[Q2 >> 2];
                          q2 = +g[Q2 + 4 >> 2];
                          r2 = +g[Q2 + 8 >> 2];
                          s2 = +g[Q2 + 16 >> 2];
                          u2 = +g[Q2 + 20 >> 2];
                          y2 = +g[Q2 + 24 >> 2];
                          z2 = +g[Q2 + 32 >> 2];
                          A2 = +g[Q2 + 36 >> 2];
                          B2 = +g[Q2 + 40 >> 2];
                          o2 = -34028234663852886e22;
                          j2 = 0;
                          w2 = -1;
                          while (1) {
                            C2 = +g[m2 + (j2 * 36 | 0) + 20 >> 2];
                            D2 = +g[m2 + (j2 * 36 | 0) + 24 >> 2];
                            E2 = +g[m2 + (j2 * 36 | 0) + 28 >> 2];
                            n2 = (C2 * p2 + D2 * q2 + E2 * r2) * L2 + (C2 * s2 + D2 * u2 + E2 * y2) * K2 + (C2 * z2 + D2 * A2 + E2 * B2) * H2 > o2;
                            w2 = n2 ? j2 : w2;
                            j2 = j2 + 1 | 0;
                            if ((j2 | 0) == (k2 | 0))
                              break;
                            else
                              o2 = n2 ? (C2 * p2 + D2 * q2 + E2 * r2) * L2 + (C2 * s2 + D2 * u2 + E2 * y2) * K2 + (C2 * z2 + D2 * A2 + E2 * B2) * H2 : o2;
                          }
                        } else
                          w2 = -1;
                        j2 = c[S2 + 36 >> 2] | 0;
                        c[b2 + 20 >> 2] = 0;
                        x2 = c[j2 + (w2 * 36 | 0) + 4 >> 2] | 0;
                        if ((x2 | 0) > 0) {
                          v2 = j2 + (w2 * 36 | 0) + 12 | 0;
                          t2 = 0;
                          j2 = 0;
                          do {
                            d2 = c[(c[v2 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                            e2 = c[S2 + 16 >> 2] | 0;
                            la2 = +g[e2 + (d2 << 4) >> 2];
                            ma2 = +g[e2 + (d2 << 4) + 4 >> 2];
                            q2 = +g[e2 + (d2 << 4) + 8 >> 2];
                            o2 = la2 * +g[Q2 >> 2] + ma2 * +g[Q2 + 4 >> 2] + q2 * +g[Q2 + 8 >> 2] + +g[Q2 + 48 >> 2];
                            p2 = la2 * +g[Q2 + 16 >> 2] + ma2 * +g[Q2 + 20 >> 2] + q2 * +g[Q2 + 24 >> 2] + +g[Q2 + 52 >> 2];
                            q2 = la2 * +g[Q2 + 32 >> 2] + ma2 * +g[Q2 + 36 >> 2] + q2 * +g[Q2 + 40 >> 2] + +g[Q2 + 56 >> 2];
                            do
                              if ((j2 | 0) == (c[b2 + 24 >> 2] | 0)) {
                                n2 = j2 | 0 ? j2 << 1 : 1;
                                if ((j2 | 0) >= (n2 | 0))
                                  break;
                                if (!n2)
                                  m2 = 0;
                                else {
                                  c[6324] = (c[6324] | 0) + 1;
                                  j2 = ic((n2 << 4 | 3) + 16 | 0) | 0;
                                  if (!j2)
                                    j2 = 0;
                                  else {
                                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                                    j2 = j2 + 4 + 15 & -16;
                                  }
                                  m2 = j2;
                                  j2 = c[b2 + 20 >> 2] | 0;
                                }
                                if ((j2 | 0) > 0) {
                                  k2 = 0;
                                  do {
                                    d2 = m2 + (k2 << 4) | 0;
                                    e2 = (c[b2 + 28 >> 2] | 0) + (k2 << 4) | 0;
                                    c[d2 >> 2] = c[e2 >> 2];
                                    c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
                                    c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
                                    c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
                                    k2 = k2 + 1 | 0;
                                  } while ((k2 | 0) != (j2 | 0));
                                }
                                j2 = c[b2 + 28 >> 2] | 0;
                                if (j2 | 0) {
                                  if (a[b2 + 32 >> 0] | 0) {
                                    c[6325] = (c[6325] | 0) + 1;
                                    Rc(c[j2 + -4 >> 2] | 0);
                                  }
                                  c[b2 + 28 >> 2] = 0;
                                }
                                a[b2 + 32 >> 0] = 1;
                                c[b2 + 28 >> 2] = m2;
                                c[b2 + 24 >> 2] = n2;
                                j2 = c[b2 + 20 >> 2] | 0;
                              }
                            while (0);
                            d2 = c[b2 + 28 >> 2] | 0;
                            g[d2 + (j2 << 4) >> 2] = o2;
                            g[d2 + (j2 << 4) + 4 >> 2] = p2;
                            g[d2 + (j2 << 4) + 8 >> 2] = q2;
                            g[d2 + (j2 << 4) + 12 >> 2] = 0;
                            j2 = (c[b2 + 20 >> 2] | 0) + 1 | 0;
                            c[b2 + 20 >> 2] = j2;
                            t2 = t2 + 1 | 0;
                          } while ((t2 | 0) != (x2 | 0));
                        }
                        if ((w2 | 0) > -1)
                          Fc(ra2 + 640 | 0, T2, R2, b2 + 16 | 0, b2 + 36 | 0, M2, na2, h2);
                      }
                      if (a[b2 + 56 >> 0] | 0 ? (qa2 = c[h2 + 4 >> 2] | 0, c[qa2 + 780 >> 2] | 0) : 0) {
                        k2 = c[qa2 + 772 >> 2] | 0;
                        m2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
                        j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
                        if ((k2 | 0) == (m2 | 0)) {
                          Te(qa2, k2 + 4 | 0, j2 + 4 | 0);
                          break;
                        } else {
                          Te(qa2, j2 + 4 | 0, m2 + 4 | 0);
                          break;
                        }
                      }
                    }
                  while (0);
                  i = ra2;
                  return;
                }
              while (0);
          }
          uc(ra2 + 48 | 0, ra2 + 128 | 0, h2, c[f2 + 20 >> 2] | 0, 0);
          if ((c[b2 + 68 >> 2] | 0 ? (c[(c[h2 + 4 >> 2] | 0) + 780 >> 2] | 0) < (c[b2 + 72 >> 2] | 0) : 0) ? (M2 = +g[ra2 + 48 + 4 >> 2], N2 = +g[ra2 + 48 + 8 >> 2], O2 = +g[ra2 + 48 + 12 >> 2], M2 * M2 + N2 * N2 + O2 * O2 > 11920928955078125e-23) : 0) {
            L2 = 1 / (M2 * M2 + N2 * N2 + O2 * O2);
            if (+F(+(O2 * L2)) > 0.7071067690849304) {
              K2 = 1 / +G(+(O2 * L2 * O2 * L2 + N2 * L2 * N2 * L2));
              E2 = 0;
              H2 = N2 * L2 * K2;
              K2 = -(O2 * L2 * K2);
            } else {
              K2 = 1 / +G(+(M2 * L2 * M2 * L2 + N2 * L2 * N2 * L2));
              E2 = -(N2 * L2 * K2);
              H2 = 0;
              K2 = M2 * L2 * K2;
            }
            D2 = +Cb[c[(c[oa2 >> 2] | 0) + 16 >> 2] & 15](oa2);
            B2 = +Cb[c[(c[pa2 >> 2] | 0) + 16 >> 2] & 15](pa2);
            o2 = 0.019999999552965164 / (D2 < B2 ? D2 : B2);
            if (D2 < B2) {
              c[ra2 + 640 >> 2] = c[ra2 + 128 >> 2];
              c[ra2 + 640 + 4 >> 2] = c[ra2 + 128 + 4 >> 2];
              c[ra2 + 640 + 8 >> 2] = c[ra2 + 128 + 8 >> 2];
              c[ra2 + 640 + 12 >> 2] = c[ra2 + 128 + 12 >> 2];
              c[ra2 + 640 + 16 >> 2] = c[m2 >> 2];
              c[ra2 + 640 + 16 + 4 >> 2] = c[m2 + 4 >> 2];
              c[ra2 + 640 + 16 + 8 >> 2] = c[m2 + 8 >> 2];
              c[ra2 + 640 + 16 + 12 >> 2] = c[m2 + 12 >> 2];
              c[ra2 + 640 + 32 >> 2] = c[t2 >> 2];
              c[ra2 + 640 + 32 + 4 >> 2] = c[t2 + 4 >> 2];
              c[ra2 + 640 + 32 + 8 >> 2] = c[t2 + 8 >> 2];
              c[ra2 + 640 + 32 + 12 >> 2] = c[t2 + 12 >> 2];
              c[ra2 + 640 + 48 >> 2] = c[v2 >> 2];
              c[ra2 + 640 + 48 + 4 >> 2] = c[v2 + 4 >> 2];
              c[ra2 + 640 + 48 + 8 >> 2] = c[v2 + 8 >> 2];
              c[ra2 + 640 + 48 + 12 >> 2] = c[v2 + 12 >> 2];
            } else {
              c[ra2 + 640 >> 2] = c[w2 >> 2];
              c[ra2 + 640 + 4 >> 2] = c[w2 + 4 >> 2];
              c[ra2 + 640 + 8 >> 2] = c[w2 + 8 >> 2];
              c[ra2 + 640 + 12 >> 2] = c[w2 + 12 >> 2];
              c[ra2 + 640 + 16 >> 2] = c[x2 >> 2];
              c[ra2 + 640 + 16 + 4 >> 2] = c[x2 + 4 >> 2];
              c[ra2 + 640 + 16 + 8 >> 2] = c[x2 + 8 >> 2];
              c[ra2 + 640 + 16 + 12 >> 2] = c[x2 + 12 >> 2];
              c[ra2 + 640 + 32 >> 2] = c[Q2 >> 2];
              c[ra2 + 640 + 32 + 4 >> 2] = c[Q2 + 4 >> 2];
              c[ra2 + 640 + 32 + 8 >> 2] = c[Q2 + 8 >> 2];
              c[ra2 + 640 + 32 + 12 >> 2] = c[Q2 + 12 >> 2];
              c[ra2 + 640 + 48 >> 2] = c[R2 >> 2];
              c[ra2 + 640 + 48 + 4 >> 2] = c[R2 + 4 >> 2];
              c[ra2 + 640 + 48 + 8 >> 2] = c[R2 + 8 >> 2];
              c[ra2 + 640 + 48 + 12 >> 2] = c[R2 + 12 >> 2];
            }
            j2 = c[b2 + 68 >> 2] | 0;
            if ((j2 | 0) > 0) {
              C2 = E2 * E2 + K2 * K2 + H2 * H2;
              A2 = (o2 > 0.39269909262657166 ? 0.39269909262657166 : o2) * 0.5;
              k2 = 0;
              do {
                if (C2 > 11920928955078125e-23) {
                  y2 = +J(+A2) / +G(+C2);
                  s2 = E2 * y2;
                  u2 = K2 * y2;
                  y2 = H2 * y2;
                  z2 = +I(+A2);
                  r2 = +(k2 | 0) * (6.2831854820251465 / +(j2 | 0)) * 0.5;
                  q2 = +J(+r2) / +G(+(O2 * L2 * O2 * L2 + (M2 * L2 * M2 * L2 + N2 * L2 * N2 * L2)));
                  o2 = M2 * L2 * q2;
                  p2 = N2 * L2 * q2;
                  q2 = O2 * L2 * q2;
                  r2 = +I(+r2);
                  if (D2 < B2) {
                    da2 = q2 * (s2 * -q2 + (u2 * r2 + z2 * -p2) - y2 * -o2) + (o2 * (z2 * r2 - s2 * -o2 - u2 * -p2 - y2 * -q2) + r2 * (y2 * -p2 + (s2 * r2 + z2 * -o2) - u2 * -q2)) - p2 * (u2 * -o2 + (y2 * r2 + z2 * -q2) - s2 * -p2);
                    la2 = o2 * (u2 * -o2 + (y2 * r2 + z2 * -q2) - s2 * -p2) + (r2 * (s2 * -q2 + (u2 * r2 + z2 * -p2) - y2 * -o2) + p2 * (z2 * r2 - s2 * -o2 - u2 * -p2 - y2 * -q2)) - q2 * (y2 * -p2 + (s2 * r2 + z2 * -o2) - u2 * -q2);
                    sa2 = p2 * (y2 * -p2 + (s2 * r2 + z2 * -o2) - u2 * -q2) + (q2 * (z2 * r2 - s2 * -o2 - u2 * -p2 - y2 * -q2) + r2 * (u2 * -o2 + (y2 * r2 + z2 * -q2) - s2 * -p2)) - o2 * (s2 * -q2 + (u2 * r2 + z2 * -p2) - y2 * -o2);
                    ba2 = r2 * (z2 * r2 - s2 * -o2 - u2 * -p2 - y2 * -q2) - o2 * (y2 * -p2 + (s2 * r2 + z2 * -o2) - u2 * -q2) - p2 * (s2 * -q2 + (u2 * r2 + z2 * -p2) - y2 * -o2) - q2 * (u2 * -o2 + (y2 * r2 + z2 * -q2) - s2 * -p2);
                    ka2 = da2 * (2 / (ba2 * ba2 + (sa2 * sa2 + (da2 * da2 + la2 * la2))));
                    ma2 = la2 * (2 / (ba2 * ba2 + (sa2 * sa2 + (da2 * da2 + la2 * la2))));
                    $2 = sa2 * (2 / (ba2 * ba2 + (sa2 * sa2 + (da2 * da2 + la2 * la2))));
                    qa2 = c[d2 + 12 >> 2] | 0;
                    q2 = +g[qa2 >> 2];
                    r2 = +g[qa2 + 16 >> 2];
                    s2 = +g[qa2 + 32 >> 2];
                    u2 = +g[qa2 + 4 >> 2];
                    y2 = +g[qa2 + 20 >> 2];
                    z2 = +g[qa2 + 36 >> 2];
                    P2 = +g[qa2 + 8 >> 2];
                    ca2 = +g[qa2 + 24 >> 2];
                    na2 = +g[qa2 + 40 >> 2];
                    g[ra2 + 128 >> 2] = (1 - (la2 * ma2 + sa2 * $2)) * q2 + (da2 * ma2 - ba2 * $2) * r2 + (da2 * $2 + ba2 * ma2) * s2;
                    g[ra2 + 128 + 4 >> 2] = (1 - (la2 * ma2 + sa2 * $2)) * u2 + (da2 * ma2 - ba2 * $2) * y2 + (da2 * $2 + ba2 * ma2) * z2;
                    g[ra2 + 128 + 8 >> 2] = (1 - (la2 * ma2 + sa2 * $2)) * P2 + (da2 * ma2 - ba2 * $2) * ca2 + (da2 * $2 + ba2 * ma2) * na2;
                    g[ra2 + 128 + 12 >> 2] = 0;
                    g[ra2 + 128 + 16 >> 2] = (da2 * ma2 + ba2 * $2) * q2 + (1 - (da2 * ka2 + sa2 * $2)) * r2 + (la2 * $2 - ba2 * ka2) * s2;
                    g[ra2 + 128 + 20 >> 2] = (da2 * ma2 + ba2 * $2) * u2 + (1 - (da2 * ka2 + sa2 * $2)) * y2 + (la2 * $2 - ba2 * ka2) * z2;
                    g[ra2 + 128 + 24 >> 2] = (da2 * ma2 + ba2 * $2) * P2 + (1 - (da2 * ka2 + sa2 * $2)) * ca2 + (la2 * $2 - ba2 * ka2) * na2;
                    g[ra2 + 128 + 28 >> 2] = 0;
                    g[ra2 + 128 + 32 >> 2] = (da2 * $2 - ba2 * ma2) * q2 + (la2 * $2 + ba2 * ka2) * r2 + (1 - (da2 * ka2 + la2 * ma2)) * s2;
                    g[ra2 + 128 + 36 >> 2] = (da2 * $2 - ba2 * ma2) * u2 + (la2 * $2 + ba2 * ka2) * y2 + (1 - (da2 * ka2 + la2 * ma2)) * z2;
                    g[ra2 + 128 + 40 >> 2] = (da2 * $2 - ba2 * ma2) * P2 + (la2 * $2 + ba2 * ka2) * ca2 + (1 - (da2 * ka2 + la2 * ma2)) * na2;
                    g[ra2 + 128 + 44 >> 2] = 0;
                    qa2 = c[e2 + 12 >> 2] | 0;
                    c[w2 >> 2] = c[qa2 >> 2];
                    c[w2 + 4 >> 2] = c[qa2 + 4 >> 2];
                    c[w2 + 8 >> 2] = c[qa2 + 8 >> 2];
                    c[w2 + 12 >> 2] = c[qa2 + 12 >> 2];
                    c[x2 >> 2] = c[qa2 + 16 >> 2];
                    c[x2 + 4 >> 2] = c[qa2 + 16 + 4 >> 2];
                    c[x2 + 8 >> 2] = c[qa2 + 16 + 8 >> 2];
                    c[x2 + 12 >> 2] = c[qa2 + 16 + 12 >> 2];
                    c[Q2 >> 2] = c[qa2 + 32 >> 2];
                    c[Q2 + 4 >> 2] = c[qa2 + 32 + 4 >> 2];
                    c[Q2 + 8 >> 2] = c[qa2 + 32 + 8 >> 2];
                    c[Q2 + 12 >> 2] = c[qa2 + 32 + 12 >> 2];
                    c[R2 >> 2] = c[qa2 + 48 >> 2];
                    c[R2 + 4 >> 2] = c[qa2 + 48 + 4 >> 2];
                    c[R2 + 8 >> 2] = c[qa2 + 48 + 8 >> 2];
                    c[R2 + 12 >> 2] = c[qa2 + 48 + 12 >> 2];
                  } else {
                    qa2 = c[d2 + 12 >> 2] | 0;
                    c[ra2 + 128 >> 2] = c[qa2 >> 2];
                    c[ra2 + 128 + 4 >> 2] = c[qa2 + 4 >> 2];
                    c[ra2 + 128 + 8 >> 2] = c[qa2 + 8 >> 2];
                    c[ra2 + 128 + 12 >> 2] = c[qa2 + 12 >> 2];
                    c[m2 >> 2] = c[qa2 + 16 >> 2];
                    c[m2 + 4 >> 2] = c[qa2 + 16 + 4 >> 2];
                    c[m2 + 8 >> 2] = c[qa2 + 16 + 8 >> 2];
                    c[m2 + 12 >> 2] = c[qa2 + 16 + 12 >> 2];
                    c[t2 >> 2] = c[qa2 + 32 >> 2];
                    c[t2 + 4 >> 2] = c[qa2 + 32 + 4 >> 2];
                    c[t2 + 8 >> 2] = c[qa2 + 32 + 8 >> 2];
                    c[t2 + 12 >> 2] = c[qa2 + 32 + 12 >> 2];
                    c[v2 >> 2] = c[qa2 + 48 >> 2];
                    c[v2 + 4 >> 2] = c[qa2 + 48 + 4 >> 2];
                    c[v2 + 8 >> 2] = c[qa2 + 48 + 8 >> 2];
                    c[v2 + 12 >> 2] = c[qa2 + 48 + 12 >> 2];
                    ka2 = q2 * (s2 * -q2 + (u2 * r2 + z2 * -p2) - y2 * -o2) + (o2 * (z2 * r2 - s2 * -o2 - u2 * -p2 - y2 * -q2) + r2 * (y2 * -p2 + (s2 * r2 + z2 * -o2) - u2 * -q2)) - p2 * (u2 * -o2 + (y2 * r2 + z2 * -q2) - s2 * -p2);
                    ma2 = o2 * (u2 * -o2 + (y2 * r2 + z2 * -q2) - s2 * -p2) + (r2 * (s2 * -q2 + (u2 * r2 + z2 * -p2) - y2 * -o2) + p2 * (z2 * r2 - s2 * -o2 - u2 * -p2 - y2 * -q2)) - q2 * (y2 * -p2 + (s2 * r2 + z2 * -o2) - u2 * -q2);
                    ta2 = p2 * (y2 * -p2 + (s2 * r2 + z2 * -o2) - u2 * -q2) + (q2 * (z2 * r2 - s2 * -o2 - u2 * -p2 - y2 * -q2) + r2 * (u2 * -o2 + (y2 * r2 + z2 * -q2) - s2 * -p2)) - o2 * (s2 * -q2 + (u2 * r2 + z2 * -p2) - y2 * -o2);
                    ca2 = r2 * (z2 * r2 - s2 * -o2 - u2 * -p2 - y2 * -q2) - o2 * (y2 * -p2 + (s2 * r2 + z2 * -o2) - u2 * -q2) - p2 * (s2 * -q2 + (u2 * r2 + z2 * -p2) - y2 * -o2) - q2 * (u2 * -o2 + (y2 * r2 + z2 * -q2) - s2 * -p2);
                    la2 = ka2 * (2 / (ca2 * ca2 + (ta2 * ta2 + (ka2 * ka2 + ma2 * ma2))));
                    na2 = ma2 * (2 / (ca2 * ca2 + (ta2 * ta2 + (ka2 * ka2 + ma2 * ma2))));
                    ba2 = ta2 * (2 / (ca2 * ca2 + (ta2 * ta2 + (ka2 * ka2 + ma2 * ma2))));
                    qa2 = c[e2 + 12 >> 2] | 0;
                    r2 = +g[qa2 >> 2];
                    s2 = +g[qa2 + 16 >> 2];
                    u2 = +g[qa2 + 32 >> 2];
                    y2 = +g[qa2 + 4 >> 2];
                    z2 = +g[qa2 + 20 >> 2];
                    P2 = +g[qa2 + 36 >> 2];
                    $2 = +g[qa2 + 8 >> 2];
                    da2 = +g[qa2 + 24 >> 2];
                    sa2 = +g[qa2 + 40 >> 2];
                    g[ra2 + 128 + 64 >> 2] = (1 - (ma2 * na2 + ta2 * ba2)) * r2 + (ka2 * na2 - ca2 * ba2) * s2 + (ka2 * ba2 + ca2 * na2) * u2;
                    g[ra2 + 128 + 68 >> 2] = (1 - (ma2 * na2 + ta2 * ba2)) * y2 + (ka2 * na2 - ca2 * ba2) * z2 + (ka2 * ba2 + ca2 * na2) * P2;
                    g[ra2 + 128 + 72 >> 2] = (1 - (ma2 * na2 + ta2 * ba2)) * $2 + (ka2 * na2 - ca2 * ba2) * da2 + (ka2 * ba2 + ca2 * na2) * sa2;
                    g[ra2 + 128 + 76 >> 2] = 0;
                    g[ra2 + 128 + 80 >> 2] = (ka2 * na2 + ca2 * ba2) * r2 + (1 - (ka2 * la2 + ta2 * ba2)) * s2 + (ma2 * ba2 - ca2 * la2) * u2;
                    g[ra2 + 128 + 84 >> 2] = (ka2 * na2 + ca2 * ba2) * y2 + (1 - (ka2 * la2 + ta2 * ba2)) * z2 + (ma2 * ba2 - ca2 * la2) * P2;
                    g[ra2 + 128 + 88 >> 2] = (ka2 * na2 + ca2 * ba2) * $2 + (1 - (ka2 * la2 + ta2 * ba2)) * da2 + (ma2 * ba2 - ca2 * la2) * sa2;
                    g[ra2 + 128 + 92 >> 2] = 0;
                    g[ra2 + 128 + 96 >> 2] = (ka2 * ba2 - ca2 * na2) * r2 + (ma2 * ba2 + ca2 * la2) * s2 + (1 - (ka2 * la2 + ma2 * na2)) * u2;
                    g[ra2 + 128 + 100 >> 2] = (ka2 * ba2 - ca2 * na2) * y2 + (ma2 * ba2 + ca2 * la2) * z2 + (1 - (ka2 * la2 + ma2 * na2)) * P2;
                    g[ra2 + 128 + 104 >> 2] = (ka2 * ba2 - ca2 * na2) * $2 + (ma2 * ba2 + ca2 * la2) * da2 + (1 - (ka2 * la2 + ma2 * na2)) * sa2;
                    g[ra2 + 128 + 108 >> 2] = 0;
                  }
                  j2 = c[f2 + 20 >> 2] | 0;
                  c[ra2 + 400 >> 2] = 9344;
                  c[ra2 + 400 + 32 >> 2] = h2;
                  c[ra2 + 400 + 36 >> 2] = c[ra2 + 128 >> 2];
                  c[ra2 + 400 + 36 + 4 >> 2] = c[ra2 + 128 + 4 >> 2];
                  c[ra2 + 400 + 36 + 8 >> 2] = c[ra2 + 128 + 8 >> 2];
                  c[ra2 + 400 + 36 + 12 >> 2] = c[ra2 + 128 + 12 >> 2];
                  c[ra2 + 400 + 52 >> 2] = c[m2 >> 2];
                  c[ra2 + 400 + 52 + 4 >> 2] = c[m2 + 4 >> 2];
                  c[ra2 + 400 + 52 + 8 >> 2] = c[m2 + 8 >> 2];
                  c[ra2 + 400 + 52 + 12 >> 2] = c[m2 + 12 >> 2];
                  c[ra2 + 400 + 68 >> 2] = c[t2 >> 2];
                  c[ra2 + 400 + 68 + 4 >> 2] = c[t2 + 4 >> 2];
                  c[ra2 + 400 + 68 + 8 >> 2] = c[t2 + 8 >> 2];
                  c[ra2 + 400 + 68 + 12 >> 2] = c[t2 + 12 >> 2];
                  c[ra2 + 400 + 84 >> 2] = c[v2 >> 2];
                  c[ra2 + 400 + 84 + 4 >> 2] = c[v2 + 4 >> 2];
                  c[ra2 + 400 + 84 + 8 >> 2] = c[v2 + 8 >> 2];
                  c[ra2 + 400 + 84 + 12 >> 2] = c[v2 + 12 >> 2];
                  c[ra2 + 400 + 100 >> 2] = c[w2 >> 2];
                  c[ra2 + 400 + 100 + 4 >> 2] = c[w2 + 4 >> 2];
                  c[ra2 + 400 + 100 + 8 >> 2] = c[w2 + 8 >> 2];
                  c[ra2 + 400 + 100 + 12 >> 2] = c[w2 + 12 >> 2];
                  c[ra2 + 400 + 116 >> 2] = c[x2 >> 2];
                  c[ra2 + 400 + 116 + 4 >> 2] = c[x2 + 4 >> 2];
                  c[ra2 + 400 + 116 + 8 >> 2] = c[x2 + 8 >> 2];
                  c[ra2 + 400 + 116 + 12 >> 2] = c[x2 + 12 >> 2];
                  c[ra2 + 400 + 132 >> 2] = c[Q2 >> 2];
                  c[ra2 + 400 + 132 + 4 >> 2] = c[Q2 + 4 >> 2];
                  c[ra2 + 400 + 132 + 8 >> 2] = c[Q2 + 8 >> 2];
                  c[ra2 + 400 + 132 + 12 >> 2] = c[Q2 + 12 >> 2];
                  c[ra2 + 400 + 148 >> 2] = c[R2 >> 2];
                  c[ra2 + 400 + 148 + 4 >> 2] = c[R2 + 4 >> 2];
                  c[ra2 + 400 + 148 + 8 >> 2] = c[R2 + 8 >> 2];
                  c[ra2 + 400 + 148 + 12 >> 2] = c[R2 + 12 >> 2];
                  c[ra2 + 400 + 164 >> 2] = c[ra2 + 640 >> 2];
                  c[ra2 + 400 + 164 + 4 >> 2] = c[ra2 + 640 + 4 >> 2];
                  c[ra2 + 400 + 164 + 8 >> 2] = c[ra2 + 640 + 8 >> 2];
                  c[ra2 + 400 + 164 + 12 >> 2] = c[ra2 + 640 + 12 >> 2];
                  c[ra2 + 400 + 180 >> 2] = c[ra2 + 640 + 16 >> 2];
                  c[ra2 + 400 + 180 + 4 >> 2] = c[ra2 + 640 + 16 + 4 >> 2];
                  c[ra2 + 400 + 180 + 8 >> 2] = c[ra2 + 640 + 16 + 8 >> 2];
                  c[ra2 + 400 + 180 + 12 >> 2] = c[ra2 + 640 + 16 + 12 >> 2];
                  c[ra2 + 400 + 196 >> 2] = c[ra2 + 640 + 32 >> 2];
                  c[ra2 + 400 + 196 + 4 >> 2] = c[ra2 + 640 + 32 + 4 >> 2];
                  c[ra2 + 400 + 196 + 8 >> 2] = c[ra2 + 640 + 32 + 8 >> 2];
                  c[ra2 + 400 + 196 + 12 >> 2] = c[ra2 + 640 + 32 + 12 >> 2];
                  c[ra2 + 400 + 212 >> 2] = c[ra2 + 640 + 48 >> 2];
                  c[ra2 + 400 + 212 + 4 >> 2] = c[ra2 + 640 + 48 + 4 >> 2];
                  c[ra2 + 400 + 212 + 8 >> 2] = c[ra2 + 640 + 48 + 8 >> 2];
                  c[ra2 + 400 + 212 + 12 >> 2] = c[ra2 + 640 + 48 + 12 >> 2];
                  a[ra2 + 400 + 228 >> 0] = D2 < B2 & 1;
                  c[ra2 + 400 + 232 >> 2] = j2;
                  uc(ra2 + 48 | 0, ra2 + 128 | 0, ra2 + 400 | 0, j2, 0);
                  j2 = c[b2 + 68 >> 2] | 0;
                }
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) < (j2 | 0));
            }
          }
          if (!(a[b2 + 56 >> 0] | 0)) {
            i = ra2;
            return;
          }
          k2 = c[h2 + 4 >> 2] | 0;
          if (!(c[k2 + 780 >> 2] | 0)) {
            i = ra2;
            return;
          }
          m2 = c[k2 + 772 >> 2] | 0;
          n2 = c[(c[h2 + 8 >> 2] | 0) + 8 >> 2] | 0;
          j2 = c[(c[h2 + 12 >> 2] | 0) + 8 >> 2] | 0;
          if ((m2 | 0) == (n2 | 0)) {
            Te(k2, m2 + 4 | 0, j2 + 4 | 0);
            i = ra2;
            return;
          } else {
            Te(k2, j2 + 4 | 0, n2 + 4 | 0);
            i = ra2;
            return;
          }
        }
        function $b(d2) {
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0;
          X2 = i;
          i = i + 176 | 0;
          di(d2);
          if (!(ob[c[(c[d2 >> 2] | 0) + 20 >> 2] & 127](d2) | 0)) {
            i = X2;
            return;
          }
          if ((c[d2 + 328 >> 2] | 0) <= 0) {
            i = X2;
            return;
          }
          R2 = X2 + 96 + 32 | 0;
          S2 = X2 + 96 + 52 | 0;
          O2 = 0;
          do {
            T2 = c[(c[d2 + 336 >> 2] | 0) + (O2 << 2) >> 2] | 0;
            if (ob[c[(c[d2 >> 2] | 0) + 20 >> 2] & 127](d2) | 0 ? (N2 = ob[c[(c[d2 >> 2] | 0) + 20 >> 2] & 127](d2) | 0, (ob[c[(c[N2 >> 2] | 0) + 56 >> 2] & 127](N2) | 0) & 1 | 0) : 0) {
              f2 = c[d2 + 72 >> 2] | 0;
              if (!(a[T2 + 513 >> 0] | 0))
                N2 = f2;
              else {
                c[X2 + 80 >> 2] = c[T2 + 560 >> 2];
                c[X2 + 80 + 4 >> 2] = c[T2 + 560 + 4 >> 2];
                c[X2 + 80 + 8 >> 2] = c[T2 + 560 + 8 >> 2];
                c[X2 + 80 + 12 >> 2] = c[T2 + 560 + 12 >> 2];
                k2 = +g[T2 + 624 >> 2];
                m2 = +g[T2 + 576 >> 2];
                n2 = +g[T2 + 640 >> 2];
                u2 = +g[T2 + 580 >> 2];
                v2 = +g[T2 + 656 >> 2];
                w2 = +g[T2 + 584 >> 2];
                x2 = +g[T2 + 628 >> 2];
                y2 = +g[T2 + 644 >> 2];
                z2 = +g[T2 + 660 >> 2];
                A2 = +g[T2 + 632 >> 2];
                B2 = +g[T2 + 648 >> 2];
                C2 = +g[T2 + 664 >> 2];
                E2 = +g[T2 + 592 >> 2];
                F2 = +g[T2 + 596 >> 2];
                H2 = +g[T2 + 600 >> 2];
                I2 = +g[T2 + 608 >> 2];
                J2 = +g[T2 + 612 >> 2];
                K2 = +g[T2 + 616 >> 2];
                ha2 = k2 * m2 + n2 * u2 + v2 * w2 + (m2 * x2 + u2 * y2 + w2 * z2) * 0 + (m2 * A2 + u2 * B2 + w2 * C2) * 0;
                fa2 = (A2 * E2 + B2 * F2 + C2 * H2) * 0 + (k2 * E2 + n2 * F2 + v2 * H2 + (x2 * E2 + y2 * F2 + z2 * H2) * 0);
                ea2 = (A2 * I2 + B2 * J2 + C2 * K2) * 0 + (k2 * I2 + n2 * J2 + v2 * K2 + (x2 * I2 + y2 * J2 + z2 * K2) * 0);
                ga2 = 1 / +G(+(ha2 * ha2 + fa2 * fa2 + ea2 * ea2));
                da2 = (k2 * m2 + n2 * u2 + v2 * w2) * 0 + (m2 * x2 + u2 * y2 + w2 * z2) + (m2 * A2 + u2 * B2 + w2 * C2) * 0;
                ba2 = (A2 * E2 + B2 * F2 + C2 * H2) * 0 + (x2 * E2 + y2 * F2 + z2 * H2 + (k2 * E2 + n2 * F2 + v2 * H2) * 0);
                aa2 = (A2 * I2 + B2 * J2 + C2 * K2) * 0 + (x2 * I2 + y2 * J2 + z2 * K2 + (k2 * I2 + n2 * J2 + v2 * K2) * 0);
                ca2 = 1 / +G(+(da2 * da2 + ba2 * ba2 + aa2 * aa2));
                $2 = (k2 * m2 + n2 * u2 + v2 * w2) * 0 + (m2 * x2 + u2 * y2 + w2 * z2) * 0 + (m2 * A2 + u2 * B2 + w2 * C2);
                Z2 = A2 * E2 + B2 * F2 + C2 * H2 + ((k2 * E2 + n2 * F2 + v2 * H2) * 0 + (x2 * E2 + y2 * F2 + z2 * H2) * 0);
                Y2 = A2 * I2 + B2 * J2 + C2 * K2 + ((k2 * I2 + n2 * J2 + v2 * K2) * 0 + (x2 * I2 + y2 * J2 + z2 * K2) * 0);
                _2 = 1 / +G(+($2 * $2 + Z2 * Z2 + Y2 * Y2));
                N2 = c[(c[f2 >> 2] | 0) + 16 >> 2] | 0;
                fa2 = fa2 * ga2 * 10 + +g[X2 + 80 + 4 >> 2];
                ea2 = ga2 * ea2 * 10 + +g[X2 + 80 + 8 >> 2];
                g[X2 + 160 >> 2] = ha2 * ga2 * 10 + +g[X2 + 80 >> 2];
                g[X2 + 160 + 4 >> 2] = fa2;
                g[X2 + 160 + 8 >> 2] = ea2;
                g[X2 + 160 + 12 >> 2] = 0;
                c[X2 + 96 >> 2] = 1065353216;
                c[X2 + 96 + 4 >> 2] = 0;
                c[X2 + 96 + 8 >> 2] = 0;
                g[X2 + 96 + 12 >> 2] = 0;
                Yb[N2 & 127](f2, X2 + 80 | 0, X2 + 160 | 0, X2 + 96 | 0);
                N2 = c[(c[f2 >> 2] | 0) + 16 >> 2] | 0;
                ba2 = ba2 * ca2 * 10 + +g[X2 + 80 + 4 >> 2];
                aa2 = ca2 * aa2 * 10 + +g[X2 + 80 + 8 >> 2];
                g[X2 + 160 >> 2] = da2 * ca2 * 10 + +g[X2 + 80 >> 2];
                g[X2 + 160 + 4 >> 2] = ba2;
                g[X2 + 160 + 8 >> 2] = aa2;
                g[X2 + 160 + 12 >> 2] = 0;
                c[X2 + 96 >> 2] = 0;
                c[X2 + 96 + 4 >> 2] = 1065353216;
                c[X2 + 96 + 8 >> 2] = 0;
                g[X2 + 96 + 12 >> 2] = 0;
                Yb[N2 & 127](f2, X2 + 80 | 0, X2 + 160 | 0, X2 + 96 | 0);
                N2 = c[(c[f2 >> 2] | 0) + 16 >> 2] | 0;
                Z2 = Z2 * _2 * 10 + +g[X2 + 80 + 4 >> 2];
                Y2 = _2 * Y2 * 10 + +g[X2 + 80 + 8 >> 2];
                g[X2 + 160 >> 2] = $2 * _2 * 10 + +g[X2 + 80 >> 2];
                g[X2 + 160 + 4 >> 2] = Z2;
                g[X2 + 160 + 8 >> 2] = Y2;
                g[X2 + 160 + 12 >> 2] = 0;
                c[X2 + 96 >> 2] = 0;
                c[X2 + 96 + 4 >> 2] = 0;
                c[X2 + 96 + 8 >> 2] = 1065353216;
                g[X2 + 96 + 12 >> 2] = 0;
                Yb[N2 & 127](f2, X2 + 80 | 0, X2 + 160 | 0, X2 + 96 | 0);
                if ((c[T2 + 524 >> 2] | 0) > 0) {
                  e2 = 0;
                  do {
                    N2 = c[T2 + 532 >> 2] | 0;
                    da2 = +g[N2 + (e2 << 4) >> 2];
                    ea2 = +g[N2 + (e2 << 4) + 4 >> 2];
                    ha2 = +g[N2 + (e2 << 4) + 8 >> 2];
                    fa2 = +g[X2 + 80 >> 2] + ((k2 * m2 + n2 * u2 + v2 * w2) * da2 + (m2 * x2 + u2 * y2 + w2 * z2) * ea2 + (m2 * A2 + u2 * B2 + w2 * C2) * ha2);
                    ga2 = +g[X2 + 80 + 4 >> 2] + ((k2 * E2 + n2 * F2 + v2 * H2) * da2 + (x2 * E2 + y2 * F2 + z2 * H2) * ea2 + (A2 * E2 + B2 * F2 + C2 * H2) * ha2);
                    ha2 = (k2 * I2 + n2 * J2 + v2 * K2) * da2 + (x2 * I2 + y2 * J2 + z2 * K2) * ea2 + (A2 * I2 + B2 * J2 + C2 * K2) * ha2 + +g[X2 + 80 + 8 >> 2];
                    c[X2 + 64 >> 2] = 1065353216;
                    c[X2 + 64 + 4 >> 2] = 0;
                    c[X2 + 64 + 8 >> 2] = 1065353216;
                    g[X2 + 64 + 12 >> 2] = 0;
                    N2 = c[(c[f2 >> 2] | 0) + 16 >> 2] | 0;
                    g[X2 + 160 >> 2] = fa2 + -0.10000000149011612;
                    g[X2 + 160 + 4 >> 2] = ga2;
                    g[X2 + 160 + 8 >> 2] = ha2;
                    g[X2 + 160 + 12 >> 2] = 0;
                    g[X2 + 96 >> 2] = fa2 + 0.10000000149011612;
                    g[X2 + 96 + 4 >> 2] = ga2 + 0;
                    g[X2 + 96 + 8 >> 2] = ha2 + 0;
                    g[X2 + 96 + 12 >> 2] = 0;
                    Yb[N2 & 127](f2, X2 + 160 | 0, X2 + 96 | 0, X2 + 64 | 0);
                    N2 = c[(c[f2 >> 2] | 0) + 16 >> 2] | 0;
                    g[X2 + 160 >> 2] = fa2;
                    g[X2 + 160 + 4 >> 2] = ga2 + -0.10000000149011612;
                    g[X2 + 160 + 8 >> 2] = ha2;
                    g[X2 + 160 + 12 >> 2] = 0;
                    g[X2 + 96 >> 2] = fa2 + 0;
                    g[X2 + 96 + 4 >> 2] = ga2 + 0.10000000149011612;
                    g[X2 + 96 + 8 >> 2] = ha2 + 0;
                    g[X2 + 96 + 12 >> 2] = 0;
                    Yb[N2 & 127](f2, X2 + 160 | 0, X2 + 96 | 0, X2 + 64 | 0);
                    N2 = c[(c[f2 >> 2] | 0) + 16 >> 2] | 0;
                    g[X2 + 160 >> 2] = fa2;
                    g[X2 + 160 + 4 >> 2] = ga2;
                    g[X2 + 160 + 8 >> 2] = ha2 + -0.10000000149011612;
                    g[X2 + 160 + 12 >> 2] = 0;
                    g[X2 + 96 >> 2] = fa2 + 0;
                    g[X2 + 96 + 4 >> 2] = ga2 + 0;
                    g[X2 + 96 + 8 >> 2] = ha2 + 0.10000000149011612;
                    g[X2 + 96 + 12 >> 2] = 0;
                    Yb[N2 & 127](f2, X2 + 160 | 0, X2 + 96 | 0, X2 + 64 | 0);
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) < (c[T2 + 524 >> 2] | 0));
                }
                N2 = c[d2 + 72 >> 2] | 0;
              }
              M2 = c[d2 + 344 >> 2] | 0;
              c[X2 + 80 >> 2] = 0;
              c[X2 + 80 + 4 >> 2] = 0;
              c[X2 + 80 + 8 >> 2] = 0;
              c[X2 + 80 + 12 >> 2] = 0;
              c[X2 + 64 >> 2] = 1065353216;
              c[X2 + 64 + 4 >> 2] = 1065353216;
              c[X2 + 64 + 8 >> 2] = 1065353216;
              g[X2 + 64 + 12 >> 2] = 0;
              c[X2 + 48 >> 2] = 1065353216;
              c[X2 + 48 + 4 >> 2] = 0;
              c[X2 + 48 + 8 >> 2] = 0;
              g[X2 + 48 + 12 >> 2] = 0;
              if (!(M2 & 256)) {
                if (M2 & 1 | 0 ? (U2 = c[T2 + 752 >> 2] | 0, (U2 | 0) > 0) : 0) {
                  h2 = 0;
                  e2 = U2;
                  do {
                    f2 = c[T2 + 760 >> 2] | 0;
                    if (c[(c[f2 + (h2 * 104 | 0) + 4 >> 2] | 0) + 16 >> 2] & 1) {
                      e2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      L2 = f2 + (h2 * 104 | 0) + 8 | 0;
                      s2 = f2 + (h2 * 104 | 0) + 12 | 0;
                      q2 = c[s2 >> 2] | 0;
                      t2 = f2 + (h2 * 104 | 0) + 16 | 0;
                      r2 = c[t2 >> 2] | 0;
                      g[X2 + 160 >> 2] = +g[L2 >> 2] + -0.10000000149011612;
                      c[X2 + 160 + 4 >> 2] = q2;
                      c[X2 + 160 + 8 >> 2] = r2;
                      g[X2 + 160 + 12 >> 2] = 0;
                      ga2 = +g[s2 >> 2] + 0;
                      ha2 = +g[t2 >> 2] + 0;
                      g[X2 + 96 >> 2] = +g[L2 >> 2] + 0.10000000149011612;
                      g[X2 + 96 + 4 >> 2] = ga2;
                      g[X2 + 96 + 8 >> 2] = ha2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      c[X2 + 32 >> 2] = 1065353216;
                      c[X2 + 32 + 4 >> 2] = 0;
                      c[X2 + 32 + 8 >> 2] = 0;
                      g[X2 + 32 + 12 >> 2] = 0;
                      Yb[e2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 32 | 0);
                      e2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      ha2 = +g[s2 >> 2] + -0.10000000149011612;
                      r2 = c[t2 >> 2] | 0;
                      c[X2 + 160 >> 2] = c[L2 >> 2];
                      g[X2 + 160 + 4 >> 2] = ha2;
                      c[X2 + 160 + 8 >> 2] = r2;
                      g[X2 + 160 + 12 >> 2] = 0;
                      ha2 = +g[s2 >> 2] + 0.10000000149011612;
                      ga2 = +g[t2 >> 2] + 0;
                      g[X2 + 96 >> 2] = +g[L2 >> 2] + 0;
                      g[X2 + 96 + 4 >> 2] = ha2;
                      g[X2 + 96 + 8 >> 2] = ga2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      c[X2 + 32 >> 2] = 0;
                      c[X2 + 32 + 4 >> 2] = 1065353216;
                      c[X2 + 32 + 8 >> 2] = 0;
                      g[X2 + 32 + 12 >> 2] = 0;
                      Yb[e2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 32 | 0);
                      e2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      r2 = c[s2 >> 2] | 0;
                      ga2 = +g[t2 >> 2] + -0.10000000149011612;
                      c[X2 + 160 >> 2] = c[L2 >> 2];
                      c[X2 + 160 + 4 >> 2] = r2;
                      g[X2 + 160 + 8 >> 2] = ga2;
                      g[X2 + 160 + 12 >> 2] = 0;
                      ga2 = +g[s2 >> 2] + 0;
                      ha2 = +g[t2 >> 2] + 0.10000000149011612;
                      g[X2 + 96 >> 2] = +g[L2 >> 2] + 0;
                      g[X2 + 96 + 4 >> 2] = ga2;
                      g[X2 + 96 + 8 >> 2] = ha2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      c[X2 + 32 >> 2] = 0;
                      c[X2 + 32 + 4 >> 2] = 0;
                      c[X2 + 32 + 8 >> 2] = 1065353216;
                      g[X2 + 32 + 12 >> 2] = 0;
                      Yb[e2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 32 | 0);
                      e2 = c[T2 + 752 >> 2] | 0;
                    }
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) < (e2 | 0));
                }
                if (M2 & 2 | 0 ? (V2 = c[T2 + 772 >> 2] | 0, (V2 | 0) > 0) : 0) {
                  h2 = 0;
                  e2 = V2;
                  do {
                    f2 = c[T2 + 780 >> 2] | 0;
                    if (c[(c[f2 + (h2 * 52 | 0) + 4 >> 2] | 0) + 16 >> 2] & 1) {
                      Yb[c[(c[N2 >> 2] | 0) + 16 >> 2] & 127](N2, (c[f2 + (h2 * 52 | 0) + 8 >> 2] | 0) + 8 | 0, (c[f2 + (h2 * 52 | 0) + 12 >> 2] | 0) + 8 | 0, X2 + 80 | 0);
                      e2 = c[T2 + 772 >> 2] | 0;
                    }
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) < (e2 | 0));
                }
                if (M2 & 16 | 0 ? (W2 = c[T2 + 752 >> 2] | 0, (W2 | 0) > 0) : 0) {
                  h2 = 0;
                  e2 = W2;
                  do {
                    f2 = c[T2 + 760 >> 2] | 0;
                    if (c[(c[f2 + (h2 * 104 | 0) + 4 >> 2] | 0) + 16 >> 2] & 1) {
                      fa2 = +g[f2 + (h2 * 104 | 0) + 72 >> 2] * 0.5;
                      ha2 = +g[f2 + (h2 * 104 | 0) + 76 >> 2] * 0.5;
                      ga2 = +g[f2 + (h2 * 104 | 0) + 80 >> 2] * 0.5;
                      L2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      e2 = f2 + (h2 * 104 | 0) + 8 | 0;
                      s2 = f2 + (h2 * 104 | 0) + 12 | 0;
                      da2 = ha2 + +g[s2 >> 2];
                      t2 = f2 + (h2 * 104 | 0) + 16 | 0;
                      ea2 = ga2 + +g[t2 >> 2];
                      g[X2 + 160 >> 2] = fa2 + +g[e2 >> 2];
                      g[X2 + 160 + 4 >> 2] = da2;
                      g[X2 + 160 + 8 >> 2] = ea2;
                      g[X2 + 160 + 12 >> 2] = 0;
                      Yb[L2 & 127](N2, e2, X2 + 160 | 0, X2 + 64 | 0);
                      L2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      ha2 = +g[s2 >> 2] - ha2;
                      ga2 = +g[t2 >> 2] - ga2;
                      g[X2 + 160 >> 2] = +g[e2 >> 2] - fa2;
                      g[X2 + 160 + 4 >> 2] = ha2;
                      g[X2 + 160 + 8 >> 2] = ga2;
                      g[X2 + 160 + 12 >> 2] = 0;
                      ga2 = +g[X2 + 64 + 4 >> 2] * 0.5;
                      ha2 = +g[X2 + 64 + 8 >> 2] * 0.5;
                      g[X2 + 96 >> 2] = +g[X2 + 64 >> 2] * 0.5;
                      g[X2 + 96 + 4 >> 2] = ga2;
                      g[X2 + 96 + 8 >> 2] = ha2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      Yb[L2 & 127](N2, e2, X2 + 160 | 0, X2 + 96 | 0);
                      e2 = c[T2 + 752 >> 2] | 0;
                    }
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) < (e2 | 0));
                }
                if (M2 & 32 | 0) {
                  if (!(a[22080] | 0)) {
                    a[22080] = 1;
                    c[5691] = 1065353216;
                    c[5692] = 0;
                    c[5693] = 0;
                    c[5694] = 0;
                    c[5695] = 0;
                    c[5696] = 1065353216;
                    c[5697] = 0;
                    c[5698] = 0;
                    c[5699] = 0;
                    c[5700] = 0;
                    c[5701] = 1065353216;
                    g[5702] = 0;
                  }
                  if ((c[T2 + 852 >> 2] | 0) > 0) {
                    e2 = 0;
                    do {
                      L2 = c[T2 + 860 >> 2] | 0;
                      s2 = c[L2 + (e2 * 104 | 0) + 24 >> 2] | 0;
                      E2 = +g[s2 + 8 >> 2];
                      t2 = L2 + (e2 * 104 | 0) + 4 | 0;
                      F2 = +g[t2 >> 2];
                      J2 = +g[s2 + 12 >> 2];
                      r2 = L2 + (e2 * 104 | 0) + 8 | 0;
                      K2 = +g[r2 >> 2];
                      ga2 = +g[s2 + 16 >> 2];
                      s2 = L2 + (e2 * 104 | 0) + 12 | 0;
                      ea2 = +g[s2 >> 2];
                      ca2 = +g[L2 + (e2 * 104 | 0) + 20 >> 2] + (E2 * F2 + J2 * K2 + ga2 * ea2);
                      g[X2 + 160 >> 2] = E2 - F2 * ca2;
                      g[X2 + 160 + 4 >> 2] = J2 - K2 * ca2;
                      g[X2 + 160 + 8 >> 2] = ga2 - ea2 * ca2;
                      g[X2 + 160 + 12 >> 2] = 0;
                      Y2 = +g[t2 >> 2];
                      _2 = +g[r2 >> 2];
                      H2 = +g[s2 >> 2];
                      L2 = Y2 < _2 ? Y2 < H2 ? 0 : 2 : _2 < H2 ? 1 : 2;
                      I2 = +g[22764 + (L2 << 4) + 8 >> 2];
                      Z2 = +g[22764 + (L2 << 4) + 4 >> 2];
                      $2 = +g[22764 + (L2 << 4) >> 2];
                      aa2 = 1 / +G(+((Y2 * Z2 - _2 * $2) * (Y2 * Z2 - _2 * $2) + ((_2 * I2 - H2 * Z2) * (_2 * I2 - H2 * Z2) + (H2 * $2 - Y2 * I2) * (H2 * $2 - Y2 * I2))));
                      ba2 = H2 * (H2 * $2 - Y2 * I2) * aa2 - _2 * (Y2 * Z2 - _2 * $2) * aa2;
                      da2 = Y2 * (Y2 * Z2 - _2 * $2) * aa2 - H2 * (_2 * I2 - H2 * Z2) * aa2;
                      ha2 = _2 * (_2 * I2 - H2 * Z2) * aa2 - Y2 * (H2 * $2 - Y2 * I2) * aa2;
                      fa2 = 1 / +G(+(ha2 * ha2 + (ba2 * ba2 + da2 * da2)));
                      L2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      g[X2 + 96 >> 2] = E2 - F2 * ca2 - (_2 * I2 - H2 * Z2) * aa2 * 0.5;
                      g[X2 + 96 + 4 >> 2] = J2 - K2 * ca2 - (H2 * $2 - Y2 * I2) * aa2 * 0.5;
                      g[X2 + 96 + 8 >> 2] = ga2 - ea2 * ca2 - (Y2 * Z2 - _2 * $2) * aa2 * 0.5;
                      g[X2 + 96 + 12 >> 2] = 0;
                      g[X2 + 32 >> 2] = (_2 * I2 - H2 * Z2) * aa2 * 0.5 + (E2 - F2 * ca2);
                      g[X2 + 32 + 4 >> 2] = (H2 * $2 - Y2 * I2) * aa2 * 0.5 + (J2 - K2 * ca2);
                      g[X2 + 32 + 8 >> 2] = (Y2 * Z2 - _2 * $2) * aa2 * 0.5 + (ga2 - ea2 * ca2);
                      g[X2 + 32 + 12 >> 2] = 0;
                      Yb[L2 & 127](N2, X2 + 96 | 0, X2 + 32 | 0, X2 + 48 | 0);
                      L2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      ca2 = +g[X2 + 160 >> 2];
                      ea2 = +g[X2 + 160 + 4 >> 2];
                      ga2 = +g[X2 + 160 + 8 >> 2];
                      g[X2 + 96 >> 2] = ca2 - fa2 * ba2 * 0.5;
                      g[X2 + 96 + 4 >> 2] = ea2 - fa2 * da2 * 0.5;
                      g[X2 + 96 + 8 >> 2] = ga2 - fa2 * ha2 * 0.5;
                      g[X2 + 96 + 12 >> 2] = 0;
                      g[X2 + 32 >> 2] = fa2 * ba2 * 0.5 + ca2;
                      g[X2 + 32 + 4 >> 2] = fa2 * da2 * 0.5 + ea2;
                      g[X2 + 32 + 8 >> 2] = fa2 * ha2 * 0.5 + ga2;
                      g[X2 + 32 + 12 >> 2] = 0;
                      Yb[L2 & 127](N2, X2 + 96 | 0, X2 + 32 | 0, X2 + 48 | 0);
                      L2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      ga2 = +g[r2 >> 2] * 0.5 * 3 + +g[X2 + 160 + 4 >> 2];
                      ha2 = +g[s2 >> 2] * 0.5 * 3 + +g[X2 + 160 + 8 >> 2];
                      g[X2 + 96 >> 2] = +g[t2 >> 2] * 0.5 * 3 + +g[X2 + 160 >> 2];
                      g[X2 + 96 + 4 >> 2] = ga2;
                      g[X2 + 96 + 8 >> 2] = ha2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      c[X2 + 32 >> 2] = 1065353216;
                      c[X2 + 32 + 4 >> 2] = 1065353216;
                      c[X2 + 32 + 8 >> 2] = 0;
                      g[X2 + 32 + 12 >> 2] = 0;
                      Yb[L2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 32 | 0);
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) < (c[T2 + 852 >> 2] | 0));
                  }
                }
                if (M2 & 4 | 0 ? (c[X2 + 160 >> 2] = 0, c[X2 + 160 + 4 >> 2] = 1060320051, c[X2 + 160 + 8 >> 2] = 0, g[X2 + 160 + 12 >> 2] = 0, P2 = c[T2 + 792 >> 2] | 0, (P2 | 0) > 0) : 0) {
                  h2 = 0;
                  e2 = P2;
                  do {
                    f2 = c[T2 + 800 >> 2] | 0;
                    if (c[(c[f2 + (h2 * 44 | 0) + 4 >> 2] | 0) + 16 >> 2] & 1) {
                      e2 = c[f2 + (h2 * 44 | 0) + 8 >> 2] | 0;
                      $2 = +g[e2 + 8 >> 2];
                      ca2 = +g[e2 + 12 >> 2];
                      fa2 = +g[e2 + 16 >> 2];
                      e2 = c[f2 + (h2 * 44 | 0) + 12 >> 2] | 0;
                      aa2 = +g[e2 + 8 >> 2];
                      da2 = +g[e2 + 12 >> 2];
                      ga2 = +g[e2 + 16 >> 2];
                      e2 = c[f2 + (h2 * 44 | 0) + 16 >> 2] | 0;
                      ba2 = +g[e2 + 8 >> 2];
                      ea2 = +g[e2 + 12 >> 2];
                      ha2 = +g[e2 + 16 >> 2];
                      e2 = c[(c[N2 >> 2] | 0) + 36 >> 2] | 0;
                      g[X2 + 96 >> 2] = ($2 + aa2 + ba2) * 0.3333333432674408 + ($2 - ($2 + aa2 + ba2) * 0.3333333432674408) * 0.800000011920929;
                      g[X2 + 96 + 4 >> 2] = (ca2 + da2 + ea2) * 0.3333333432674408 + (ca2 - (ca2 + da2 + ea2) * 0.3333333432674408) * 0.800000011920929;
                      g[X2 + 96 + 8 >> 2] = (fa2 + ga2 + ha2) * 0.3333333432674408 + (fa2 - (fa2 + ga2 + ha2) * 0.3333333432674408) * 0.800000011920929;
                      g[X2 + 96 + 12 >> 2] = 0;
                      g[X2 + 32 >> 2] = ($2 + aa2 + ba2) * 0.3333333432674408 + (aa2 - ($2 + aa2 + ba2) * 0.3333333432674408) * 0.800000011920929;
                      g[X2 + 32 + 4 >> 2] = (ca2 + da2 + ea2) * 0.3333333432674408 + (da2 - (ca2 + da2 + ea2) * 0.3333333432674408) * 0.800000011920929;
                      g[X2 + 32 + 8 >> 2] = (fa2 + ga2 + ha2) * 0.3333333432674408 + (ga2 - (fa2 + ga2 + ha2) * 0.3333333432674408) * 0.800000011920929;
                      g[X2 + 32 + 12 >> 2] = 0;
                      g[X2 + 16 >> 2] = ($2 + aa2 + ba2) * 0.3333333432674408 + (ba2 - ($2 + aa2 + ba2) * 0.3333333432674408) * 0.800000011920929;
                      g[X2 + 16 + 4 >> 2] = (ca2 + da2 + ea2) * 0.3333333432674408 + (ea2 - (ca2 + da2 + ea2) * 0.3333333432674408) * 0.800000011920929;
                      g[X2 + 16 + 8 >> 2] = (fa2 + ga2 + ha2) * 0.3333333432674408 + (ha2 - (fa2 + ga2 + ha2) * 0.3333333432674408) * 0.800000011920929;
                      g[X2 + 16 + 12 >> 2] = 0;
                      zb[e2 & 0](N2, X2 + 96 | 0, X2 + 32 | 0, X2 + 16 | 0, X2 + 160 | 0, 1);
                      e2 = c[T2 + 792 >> 2] | 0;
                    }
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) < (e2 | 0));
                }
                if (M2 & 8 | 0 ? (c[X2 + 160 >> 2] = 1050253722, c[X2 + 160 + 4 >> 2] = 1050253722, c[X2 + 160 + 8 >> 2] = 1060320051, g[X2 + 160 + 12 >> 2] = 0, Q2 = c[T2 + 812 >> 2] | 0, (Q2 | 0) > 0) : 0) {
                  h2 = 0;
                  e2 = Q2;
                  do {
                    f2 = c[T2 + 820 >> 2] | 0;
                    if (c[(c[f2 + (h2 * 104 | 0) + 4 >> 2] | 0) + 16 >> 2] & 1) {
                      e2 = c[f2 + (h2 * 104 | 0) + 8 >> 2] | 0;
                      A2 = +g[e2 + 8 >> 2];
                      E2 = +g[e2 + 12 >> 2];
                      I2 = +g[e2 + 16 >> 2];
                      e2 = c[f2 + (h2 * 104 | 0) + 12 >> 2] | 0;
                      B2 = +g[e2 + 8 >> 2];
                      F2 = +g[e2 + 12 >> 2];
                      J2 = +g[e2 + 16 >> 2];
                      e2 = c[f2 + (h2 * 104 | 0) + 16 >> 2] | 0;
                      C2 = +g[e2 + 8 >> 2];
                      H2 = +g[e2 + 12 >> 2];
                      K2 = +g[e2 + 16 >> 2];
                      e2 = c[f2 + (h2 * 104 | 0) + 20 >> 2] | 0;
                      fa2 = +g[e2 + 8 >> 2];
                      ga2 = +g[e2 + 12 >> 2];
                      ha2 = +g[e2 + 16 >> 2];
                      e2 = c[(c[N2 >> 2] | 0) + 36 >> 2] | 0;
                      ca2 = (A2 + B2 + C2 + fa2) * 0.25 + (A2 - (A2 + B2 + C2 + fa2) * 0.25) * 0.800000011920929;
                      da2 = (E2 + F2 + H2 + ga2) * 0.25 + (E2 - (E2 + F2 + H2 + ga2) * 0.25) * 0.800000011920929;
                      ea2 = (I2 + J2 + K2 + ha2) * 0.25 + (I2 - (I2 + J2 + K2 + ha2) * 0.25) * 0.800000011920929;
                      g[X2 + 96 >> 2] = ca2;
                      g[X2 + 96 + 4 >> 2] = da2;
                      g[X2 + 96 + 8 >> 2] = ea2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      Y2 = (A2 + B2 + C2 + fa2) * 0.25 + (B2 - (A2 + B2 + C2 + fa2) * 0.25) * 0.800000011920929;
                      Z2 = (E2 + F2 + H2 + ga2) * 0.25 + (F2 - (E2 + F2 + H2 + ga2) * 0.25) * 0.800000011920929;
                      _2 = (I2 + J2 + K2 + ha2) * 0.25 + (J2 - (I2 + J2 + K2 + ha2) * 0.25) * 0.800000011920929;
                      g[X2 + 32 >> 2] = Y2;
                      g[X2 + 32 + 4 >> 2] = Z2;
                      g[X2 + 32 + 8 >> 2] = _2;
                      g[X2 + 32 + 12 >> 2] = 0;
                      $2 = (A2 + B2 + C2 + fa2) * 0.25 + (C2 - (A2 + B2 + C2 + fa2) * 0.25) * 0.800000011920929;
                      aa2 = (E2 + F2 + H2 + ga2) * 0.25 + (H2 - (E2 + F2 + H2 + ga2) * 0.25) * 0.800000011920929;
                      ba2 = (I2 + J2 + K2 + ha2) * 0.25 + (K2 - (I2 + J2 + K2 + ha2) * 0.25) * 0.800000011920929;
                      g[X2 + 16 >> 2] = $2;
                      g[X2 + 16 + 4 >> 2] = aa2;
                      g[X2 + 16 + 8 >> 2] = ba2;
                      g[X2 + 16 + 12 >> 2] = 0;
                      zb[e2 & 0](N2, X2 + 96 | 0, X2 + 32 | 0, X2 + 16 | 0, X2 + 160 | 0, 1);
                      e2 = c[(c[N2 >> 2] | 0) + 36 >> 2] | 0;
                      g[X2 + 96 >> 2] = ca2;
                      g[X2 + 96 + 4 >> 2] = da2;
                      g[X2 + 96 + 8 >> 2] = ea2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      g[X2 + 32 >> 2] = Y2;
                      g[X2 + 32 + 4 >> 2] = Z2;
                      g[X2 + 32 + 8 >> 2] = _2;
                      g[X2 + 32 + 12 >> 2] = 0;
                      fa2 = (A2 + B2 + C2 + fa2) * 0.25 + (fa2 - (A2 + B2 + C2 + fa2) * 0.25) * 0.800000011920929;
                      ga2 = (E2 + F2 + H2 + ga2) * 0.25 + (ga2 - (E2 + F2 + H2 + ga2) * 0.25) * 0.800000011920929;
                      ha2 = (I2 + J2 + K2 + ha2) * 0.25 + (ha2 - (I2 + J2 + K2 + ha2) * 0.25) * 0.800000011920929;
                      g[X2 + 16 >> 2] = fa2;
                      g[X2 + 16 + 4 >> 2] = ga2;
                      g[X2 + 16 + 8 >> 2] = ha2;
                      g[X2 + 16 + 12 >> 2] = 0;
                      zb[e2 & 0](N2, X2 + 96 | 0, X2 + 32 | 0, X2 + 16 | 0, X2 + 160 | 0, 1);
                      e2 = c[(c[N2 >> 2] | 0) + 36 >> 2] | 0;
                      g[X2 + 96 >> 2] = Y2;
                      g[X2 + 96 + 4 >> 2] = Z2;
                      g[X2 + 96 + 8 >> 2] = _2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      g[X2 + 32 >> 2] = $2;
                      g[X2 + 32 + 4 >> 2] = aa2;
                      g[X2 + 32 + 8 >> 2] = ba2;
                      g[X2 + 32 + 12 >> 2] = 0;
                      g[X2 + 16 >> 2] = fa2;
                      g[X2 + 16 + 4 >> 2] = ga2;
                      g[X2 + 16 + 8 >> 2] = ha2;
                      g[X2 + 16 + 12 >> 2] = 0;
                      zb[e2 & 0](N2, X2 + 96 | 0, X2 + 32 | 0, X2 + 16 | 0, X2 + 160 | 0, 1);
                      e2 = c[(c[N2 >> 2] | 0) + 36 >> 2] | 0;
                      g[X2 + 96 >> 2] = $2;
                      g[X2 + 96 + 4 >> 2] = aa2;
                      g[X2 + 96 + 8 >> 2] = ba2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      g[X2 + 32 >> 2] = ca2;
                      g[X2 + 32 + 4 >> 2] = da2;
                      g[X2 + 32 + 8 >> 2] = ea2;
                      g[X2 + 32 + 12 >> 2] = 0;
                      g[X2 + 16 >> 2] = fa2;
                      g[X2 + 16 + 4 >> 2] = ga2;
                      g[X2 + 16 + 8 >> 2] = ha2;
                      g[X2 + 16 + 12 >> 2] = 0;
                      zb[e2 & 0](N2, X2 + 96 | 0, X2 + 32 | 0, X2 + 16 | 0, X2 + 160 | 0, 1);
                      e2 = c[T2 + 812 >> 2] | 0;
                    }
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) < (e2 | 0));
                }
              } else {
                c[5530] = 1805;
                c[5531] = 0;
                e2 = c[T2 + 1152 >> 2] | 0;
                if ((e2 | 0) > 0) {
                  L2 = 0;
                  do {
                    f2 = (c[T2 + 1160 >> 2] | 0) + (L2 << 2) | 0;
                    if (a[(c[f2 >> 2] | 0) + 377 >> 0] | 0) {
                      r2 = rr(c[5530] | 0, c[5531] | 0, 1284865837, 1481765933) | 0;
                      r2 = Ct(r2 | 0, D | 0, 1, 0) | 0;
                      h2 = D;
                      s2 = ps(r2 | 0, h2 | 0, 33) | 0;
                      h2 = rr(r2 | 0, h2 | 0, 1284865837, 1481765933) | 0;
                      h2 = Ct(h2 | 0, D | 0, 1, 0) | 0;
                      r2 = D;
                      t2 = ps(h2 | 0, r2 | 0, 33) | 0;
                      r2 = rr(h2 | 0, r2 | 0, 1284865837, 1481765933) | 0;
                      r2 = Ct(r2 | 0, D | 0, 1, 0) | 0;
                      h2 = D;
                      c[5530] = r2;
                      c[5531] = h2;
                      h2 = ps(r2 | 0, h2 | 0, 33) | 0;
                      ha2 = 1 / +G(+(+(h2 | 0) * 4656612873077393e-25 * +(h2 | 0) * 4656612873077393e-25 + (+(s2 | 0) * 4656612873077393e-25 * +(s2 | 0) * 4656612873077393e-25 + +(t2 | 0) * 4656612873077393e-25 * +(t2 | 0) * 4656612873077393e-25)));
                      g[X2 + 160 >> 2] = +(s2 | 0) * 4656612873077393e-25 * ha2 * 0.75;
                      g[X2 + 160 + 4 >> 2] = +(t2 | 0) * 4656612873077393e-25 * ha2 * 0.75;
                      g[X2 + 160 + 8 >> 2] = +(h2 | 0) * 4656612873077393e-25 * ha2 * 0.75;
                      g[X2 + 160 + 12 >> 2] = 0;
                      h2 = c[(c[f2 >> 2] | 0) + 24 >> 2] | 0;
                      if ((h2 | 0) > 0) {
                        c[6324] = (c[6324] | 0) + 1;
                        e2 = ic((h2 << 4 | 3) + 16 | 0) | 0;
                        if (!e2)
                          f2 = 0;
                        else {
                          c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                          f2 = e2 + 4 + 15 & -16;
                        }
                        e2 = 0;
                        do {
                          t2 = f2 + (e2 << 4) | 0;
                          c[t2 >> 2] = c[X2 + 96 >> 2];
                          c[t2 + 4 >> 2] = c[X2 + 96 + 4 >> 2];
                          c[t2 + 8 >> 2] = c[X2 + 96 + 8 >> 2];
                          c[t2 + 12 >> 2] = c[X2 + 96 + 12 >> 2];
                          e2 = e2 + 1 | 0;
                        } while ((e2 | 0) != (h2 | 0));
                        e2 = 0;
                        do {
                          t2 = f2 + (e2 << 4) | 0;
                          s2 = (c[(c[(c[(c[T2 + 1160 >> 2] | 0) + (L2 << 2) >> 2] | 0) + 32 >> 2] | 0) + (e2 << 2) >> 2] | 0) + 8 | 0;
                          c[t2 >> 2] = c[s2 >> 2];
                          c[t2 + 4 >> 2] = c[s2 + 4 >> 2];
                          c[t2 + 8 >> 2] = c[s2 + 8 >> 2];
                          c[t2 + 12 >> 2] = c[s2 + 12 >> 2];
                          e2 = e2 + 1 | 0;
                        } while ((e2 | 0) != (h2 | 0));
                      } else
                        f2 = 0;
                      a[X2 + 96 + 16 >> 0] = 1;
                      c[X2 + 96 + 12 >> 2] = 0;
                      c[X2 + 96 + 4 >> 2] = 0;
                      c[X2 + 96 + 8 >> 2] = 0;
                      a[X2 + 96 + 36 >> 0] = 1;
                      c[R2 >> 2] = 0;
                      c[X2 + 96 + 24 >> 2] = 0;
                      c[X2 + 96 + 28 >> 2] = 0;
                      a[X2 + 96 + 56 >> 0] = 1;
                      c[S2 >> 2] = 0;
                      c[X2 + 96 + 44 >> 2] = 0;
                      c[X2 + 96 + 48 >> 2] = 0;
                      oc(X2 + 96 | 0, f2, h2);
                      s2 = c[X2 + 96 + 44 >> 2] | 0;
                      if ((s2 | 0) > 0) {
                        q2 = c[R2 >> 2] | 0;
                        p2 = 0;
                        do {
                          t2 = c[(c[S2 >> 2] | 0) + (p2 << 2) >> 2] | 0;
                          h2 = c[q2 + (t2 * 12 | 0) + 4 >> 2] | 0;
                          e2 = q2 + (t2 * 12 | 0) + (h2 * 12 | 0) + ((c[q2 + (t2 * 12 | 0) + (h2 * 12 | 0) >> 2] | 0) * 12 | 0) | 0;
                          if ((e2 | 0) != (q2 + (t2 * 12 | 0) | 0)) {
                            r2 = c[X2 + 96 + 12 >> 2] | 0;
                            h2 = c[q2 + (t2 * 12 | 0) + (h2 * 12 | 0) + 8 >> 2] | 0;
                            j2 = c[q2 + (t2 * 12 | 0) + 8 >> 2] | 0;
                            while (1) {
                              o2 = c[e2 + 8 >> 2] | 0;
                              zb[c[(c[N2 >> 2] | 0) + 36 >> 2] & 0](N2, r2 + (h2 << 4) | 0, r2 + (j2 << 4) | 0, r2 + (o2 << 4) | 0, X2 + 160 | 0, 1);
                              h2 = e2 + ((c[e2 + 4 >> 2] | 0) * 12 | 0) | 0;
                              e2 = h2 + ((c[h2 >> 2] | 0) * 12 | 0) | 0;
                              if ((e2 | 0) == (q2 + (t2 * 12 | 0) | 0))
                                break;
                              else {
                                h2 = j2;
                                j2 = o2;
                              }
                            }
                          }
                          p2 = p2 + 1 | 0;
                        } while ((p2 | 0) < (s2 | 0));
                      }
                      e2 = c[S2 >> 2] | 0;
                      if (e2 | 0) {
                        if (a[X2 + 96 + 56 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[e2 + -4 >> 2] | 0);
                        }
                        c[S2 >> 2] = 0;
                      }
                      a[X2 + 96 + 56 >> 0] = 1;
                      c[S2 >> 2] = 0;
                      c[X2 + 96 + 44 >> 2] = 0;
                      c[X2 + 96 + 48 >> 2] = 0;
                      e2 = c[R2 >> 2] | 0;
                      if (e2 | 0) {
                        if (a[X2 + 96 + 36 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[e2 + -4 >> 2] | 0);
                        }
                        c[R2 >> 2] = 0;
                      }
                      a[X2 + 96 + 36 >> 0] = 1;
                      c[R2 >> 2] = 0;
                      c[X2 + 96 + 24 >> 2] = 0;
                      c[X2 + 96 + 28 >> 2] = 0;
                      e2 = c[X2 + 96 + 12 >> 2] | 0;
                      if (e2 | 0) {
                        if (a[X2 + 96 + 16 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[e2 + -4 >> 2] | 0);
                        }
                        c[X2 + 96 + 12 >> 2] = 0;
                      }
                      if (f2 | 0) {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[f2 + -4 >> 2] | 0);
                      }
                      e2 = c[T2 + 1152 >> 2] | 0;
                    }
                    L2 = L2 + 1 | 0;
                  } while ((L2 | 0) < (e2 | 0));
                }
              }
              if (M2 & 64 | 0) {
                if ((c[T2 + 832 >> 2] | 0) > 0) {
                  e2 = 0;
                  do {
                    L2 = c[T2 + 840 >> 2] | 0;
                    q2 = c[L2 + (e2 * 96 | 0) + 20 >> 2] | 0;
                    da2 = +g[L2 + (e2 * 96 | 0) + 4 >> 2];
                    ea2 = +g[L2 + (e2 * 96 | 0) + 8 >> 2];
                    fa2 = +g[L2 + (e2 * 96 | 0) + 12 >> 2];
                    ga2 = da2 * +g[q2 + 20 >> 2] + ea2 * +g[q2 + 24 >> 2] + fa2 * +g[q2 + 28 >> 2] + +g[q2 + 56 >> 2];
                    ha2 = da2 * +g[q2 + 36 >> 2] + ea2 * +g[q2 + 40 >> 2] + fa2 * +g[q2 + 44 >> 2] + +g[q2 + 60 >> 2];
                    g[X2 + 32 >> 2] = da2 * +g[q2 + 4 >> 2] + ea2 * +g[q2 + 8 >> 2] + fa2 * +g[q2 + 12 >> 2] + +g[q2 + 52 >> 2];
                    g[X2 + 32 + 4 >> 2] = ga2;
                    g[X2 + 32 + 8 >> 2] = ha2;
                    g[X2 + 32 + 12 >> 2] = 0;
                    L2 = L2 + (e2 * 96 | 0) | 0;
                    q2 = c[L2 >> 2] | 0;
                    c[X2 + 16 >> 2] = 1065353216;
                    c[X2 + 16 + 4 >> 2] = 0;
                    c[X2 + 16 + 8 >> 2] = 0;
                    g[X2 + 16 + 12 >> 2] = 0;
                    t2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                    ha2 = +g[q2 + 8 >> 2];
                    s2 = c[q2 + 12 >> 2] | 0;
                    r2 = c[q2 + 16 >> 2] | 0;
                    g[X2 + 160 >> 2] = ha2 + -0.25;
                    c[X2 + 160 + 4 >> 2] = s2;
                    c[X2 + 160 + 8 >> 2] = r2;
                    g[X2 + 160 + 12 >> 2] = 0;
                    ga2 = (c[l >> 2] = s2, +g[l >> 2]) + 0;
                    fa2 = (c[l >> 2] = r2, +g[l >> 2]) + 0;
                    g[X2 + 96 >> 2] = ha2 + 0.25;
                    g[X2 + 96 + 4 >> 2] = ga2;
                    g[X2 + 96 + 8 >> 2] = fa2;
                    g[X2 + 96 + 12 >> 2] = 0;
                    Yb[t2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 16 | 0);
                    t2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                    r2 = c[q2 + 8 >> 2] | 0;
                    fa2 = +g[q2 + 12 >> 2];
                    s2 = c[q2 + 16 >> 2] | 0;
                    c[X2 + 160 >> 2] = r2;
                    g[X2 + 160 + 4 >> 2] = fa2 + -0.25;
                    c[X2 + 160 + 8 >> 2] = s2;
                    g[X2 + 160 + 12 >> 2] = 0;
                    ga2 = (c[l >> 2] = r2, +g[l >> 2]) + 0;
                    ha2 = (c[l >> 2] = s2, +g[l >> 2]) + 0;
                    g[X2 + 96 >> 2] = ga2;
                    g[X2 + 96 + 4 >> 2] = fa2 + 0.25;
                    g[X2 + 96 + 8 >> 2] = ha2;
                    g[X2 + 96 + 12 >> 2] = 0;
                    Yb[t2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 16 | 0);
                    t2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                    s2 = c[q2 + 8 >> 2] | 0;
                    r2 = c[q2 + 12 >> 2] | 0;
                    ha2 = +g[q2 + 16 >> 2];
                    c[X2 + 160 >> 2] = s2;
                    c[X2 + 160 + 4 >> 2] = r2;
                    g[X2 + 160 + 8 >> 2] = ha2 + -0.25;
                    g[X2 + 160 + 12 >> 2] = 0;
                    fa2 = (c[l >> 2] = s2, +g[l >> 2]) + 0;
                    ga2 = (c[l >> 2] = r2, +g[l >> 2]) + 0;
                    g[X2 + 96 >> 2] = fa2;
                    g[X2 + 96 + 4 >> 2] = ga2;
                    g[X2 + 96 + 8 >> 2] = ha2 + 0.25;
                    g[X2 + 96 + 12 >> 2] = 0;
                    Yb[t2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 16 | 0);
                    c[X2 + 16 >> 2] = 0;
                    c[X2 + 16 + 4 >> 2] = 1065353216;
                    c[X2 + 16 + 8 >> 2] = 0;
                    g[X2 + 16 + 12 >> 2] = 0;
                    t2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                    ha2 = +g[X2 + 32 >> 2];
                    r2 = c[X2 + 32 + 4 >> 2] | 0;
                    s2 = c[X2 + 32 + 8 >> 2] | 0;
                    g[X2 + 160 >> 2] = ha2 + -0.25;
                    c[X2 + 160 + 4 >> 2] = r2;
                    c[X2 + 160 + 8 >> 2] = s2;
                    g[X2 + 160 + 12 >> 2] = 0;
                    ga2 = (c[l >> 2] = r2, +g[l >> 2]) + 0;
                    fa2 = (c[l >> 2] = s2, +g[l >> 2]) + 0;
                    g[X2 + 96 >> 2] = ha2 + 0.25;
                    g[X2 + 96 + 4 >> 2] = ga2;
                    g[X2 + 96 + 8 >> 2] = fa2;
                    g[X2 + 96 + 12 >> 2] = 0;
                    Yb[t2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 16 | 0);
                    t2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                    s2 = c[X2 + 32 >> 2] | 0;
                    fa2 = +g[X2 + 32 + 4 >> 2];
                    r2 = c[X2 + 32 + 8 >> 2] | 0;
                    c[X2 + 160 >> 2] = s2;
                    g[X2 + 160 + 4 >> 2] = fa2 + -0.25;
                    c[X2 + 160 + 8 >> 2] = r2;
                    g[X2 + 160 + 12 >> 2] = 0;
                    ga2 = (c[l >> 2] = s2, +g[l >> 2]) + 0;
                    ha2 = (c[l >> 2] = r2, +g[l >> 2]) + 0;
                    g[X2 + 96 >> 2] = ga2;
                    g[X2 + 96 + 4 >> 2] = fa2 + 0.25;
                    g[X2 + 96 + 8 >> 2] = ha2;
                    g[X2 + 96 + 12 >> 2] = 0;
                    Yb[t2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 16 | 0);
                    t2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                    r2 = c[X2 + 32 >> 2] | 0;
                    s2 = c[X2 + 32 + 4 >> 2] | 0;
                    ha2 = +g[X2 + 32 + 8 >> 2];
                    c[X2 + 160 >> 2] = r2;
                    c[X2 + 160 + 4 >> 2] = s2;
                    g[X2 + 160 + 8 >> 2] = ha2 + -0.25;
                    g[X2 + 160 + 12 >> 2] = 0;
                    fa2 = (c[l >> 2] = r2, +g[l >> 2]) + 0;
                    ga2 = (c[l >> 2] = s2, +g[l >> 2]) + 0;
                    g[X2 + 96 >> 2] = fa2;
                    g[X2 + 96 + 4 >> 2] = ga2;
                    g[X2 + 96 + 8 >> 2] = ha2 + 0.25;
                    g[X2 + 96 + 12 >> 2] = 0;
                    Yb[t2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 16 | 0);
                    t2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                    L2 = (c[L2 >> 2] | 0) + 8 | 0;
                    c[X2 + 160 >> 2] = 1065353216;
                    c[X2 + 160 + 4 >> 2] = 1065353216;
                    c[X2 + 160 + 8 >> 2] = 1065353216;
                    g[X2 + 160 + 12 >> 2] = 0;
                    Yb[t2 & 127](N2, L2, X2 + 32 | 0, X2 + 160 | 0);
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) < (c[T2 + 832 >> 2] | 0));
                }
                e2 = c[T2 + 752 >> 2] | 0;
                if ((e2 | 0) > 0) {
                  h2 = 0;
                  do {
                    f2 = c[T2 + 760 >> 2] | 0;
                    if ((c[(c[f2 + (h2 * 104 | 0) + 4 >> 2] | 0) + 16 >> 2] & 1 | 0) != 0 ? +g[f2 + (h2 * 104 | 0) + 88 >> 2] <= 0 : 0) {
                      t2 = f2 + (h2 * 104 | 0) + 8 | 0;
                      c[X2 + 32 >> 2] = 1065353216;
                      c[X2 + 32 + 4 >> 2] = 0;
                      c[X2 + 32 + 8 >> 2] = 0;
                      g[X2 + 32 + 12 >> 2] = 0;
                      e2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      ha2 = +g[t2 >> 2];
                      L2 = f2 + (h2 * 104 | 0) + 12 | 0;
                      r2 = c[L2 >> 2] | 0;
                      s2 = f2 + (h2 * 104 | 0) + 16 | 0;
                      q2 = c[s2 >> 2] | 0;
                      g[X2 + 160 >> 2] = ha2 + -0.25;
                      c[X2 + 160 + 4 >> 2] = r2;
                      c[X2 + 160 + 8 >> 2] = q2;
                      g[X2 + 160 + 12 >> 2] = 0;
                      ga2 = (c[l >> 2] = r2, +g[l >> 2]) + 0;
                      fa2 = (c[l >> 2] = q2, +g[l >> 2]) + 0;
                      g[X2 + 96 >> 2] = ha2 + 0.25;
                      g[X2 + 96 + 4 >> 2] = ga2;
                      g[X2 + 96 + 8 >> 2] = fa2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      Yb[e2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 32 | 0);
                      e2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      q2 = c[t2 >> 2] | 0;
                      fa2 = +g[L2 >> 2];
                      r2 = c[s2 >> 2] | 0;
                      c[X2 + 160 >> 2] = q2;
                      g[X2 + 160 + 4 >> 2] = fa2 + -0.25;
                      c[X2 + 160 + 8 >> 2] = r2;
                      g[X2 + 160 + 12 >> 2] = 0;
                      ga2 = (c[l >> 2] = q2, +g[l >> 2]) + 0;
                      ha2 = (c[l >> 2] = r2, +g[l >> 2]) + 0;
                      g[X2 + 96 >> 2] = ga2;
                      g[X2 + 96 + 4 >> 2] = fa2 + 0.25;
                      g[X2 + 96 + 8 >> 2] = ha2;
                      g[X2 + 96 + 12 >> 2] = 0;
                      Yb[e2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 32 | 0);
                      e2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                      t2 = c[t2 >> 2] | 0;
                      L2 = c[L2 >> 2] | 0;
                      ha2 = +g[s2 >> 2];
                      c[X2 + 160 >> 2] = t2;
                      c[X2 + 160 + 4 >> 2] = L2;
                      g[X2 + 160 + 8 >> 2] = ha2 + -0.25;
                      g[X2 + 160 + 12 >> 2] = 0;
                      fa2 = (c[l >> 2] = t2, +g[l >> 2]) + 0;
                      ga2 = (c[l >> 2] = L2, +g[l >> 2]) + 0;
                      g[X2 + 96 >> 2] = fa2;
                      g[X2 + 96 + 4 >> 2] = ga2;
                      g[X2 + 96 + 8 >> 2] = ha2 + 0.25;
                      g[X2 + 96 + 12 >> 2] = 0;
                      Yb[e2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2 + 32 | 0);
                      e2 = c[T2 + 752 >> 2] | 0;
                    }
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) < (e2 | 0));
                }
              }
              if (M2 & 128 | 0 ? (c[T2 + 732 >> 2] | 0) > 0 : 0) {
                f2 = 0;
                do {
                  h2 = c[T2 + 740 >> 2] | 0;
                  j2 = h2 + (f2 * 60 | 0) + 8 | 0;
                  c[X2 + 160 >> 2] = c[j2 >> 2];
                  c[X2 + 160 + 4 >> 2] = c[j2 + 4 >> 2];
                  c[X2 + 160 + 8 >> 2] = c[j2 + 8 >> 2];
                  c[X2 + 160 + 12 >> 2] = c[j2 + 12 >> 2];
                  j2 = c[h2 + (f2 * 60 | 0) + 24 >> 2] | 0;
                  if ((j2 | 0) > 0) {
                    e2 = 0;
                    k2 = +g[X2 + 160 >> 2];
                    m2 = +g[X2 + 160 + 4 >> 2];
                    n2 = +g[X2 + 160 + 8 >> 2];
                    do {
                      L2 = c[h2 + (f2 * 60 | 0) + 28 + (e2 << 2) >> 2] | 0;
                      ha2 = +g[h2 + (f2 * 60 | 0) + 44 + (e2 << 2) >> 2];
                      k2 = +g[L2 + 8 >> 2] * ha2 + k2;
                      m2 = ha2 * +g[L2 + 12 >> 2] + m2;
                      n2 = ha2 * +g[L2 + 16 >> 2] + n2;
                      g[X2 + 160 + 8 >> 2] = n2;
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (j2 | 0));
                    g[X2 + 160 >> 2] = k2;
                    g[X2 + 160 + 4 >> 2] = m2;
                  }
                  Ub[c[(c[N2 >> 2] | 0) + 48 >> 2] & 127](N2, X2 + 160 | 0, c[h2 + (f2 * 60 | 0) + 4 >> 2] | 0);
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) < (c[T2 + 732 >> 2] | 0));
              }
              if (M2 & 512 | 0) {
                L2 = c[T2 + 968 >> 2] | 0;
                c[X2 + 160 >> 2] = 1065353216;
                c[X2 + 160 + 4 >> 2] = 0;
                c[X2 + 160 + 8 >> 2] = 1065353216;
                g[X2 + 160 + 12 >> 2] = 0;
                c[X2 + 96 >> 2] = 1065353216;
                c[X2 + 96 + 4 >> 2] = 1065353216;
                c[X2 + 96 + 8 >> 2] = 1065353216;
                g[X2 + 96 + 12 >> 2] = 0;
                Bf(N2, L2, 0, X2 + 160 | 0, X2 + 96 | 0);
              }
              if (M2 & 1024 | 0) {
                L2 = c[T2 + 1028 >> 2] | 0;
                c[X2 + 160 >> 2] = 0;
                c[X2 + 160 + 4 >> 2] = 1065353216;
                c[X2 + 160 + 8 >> 2] = 0;
                g[X2 + 160 + 12 >> 2] = 0;
                c[X2 + 96 >> 2] = 1065353216;
                c[X2 + 96 + 4 >> 2] = 0;
                c[X2 + 96 + 8 >> 2] = 0;
                g[X2 + 96 + 12 >> 2] = 0;
                Bf(N2, L2, 0, X2 + 160 | 0, X2 + 96 | 0);
              }
              if (M2 & 2048 | 0) {
                L2 = c[T2 + 1088 >> 2] | 0;
                c[X2 + 160 >> 2] = 0;
                c[X2 + 160 + 4 >> 2] = 1065353216;
                c[X2 + 160 + 8 >> 2] = 1065353216;
                g[X2 + 160 + 12 >> 2] = 0;
                c[X2 + 96 >> 2] = 1065353216;
                c[X2 + 96 + 4 >> 2] = 0;
                c[X2 + 96 + 8 >> 2] = 0;
                g[X2 + 96 + 12 >> 2] = 0;
                Bf(N2, L2, 0, X2 + 160 | 0, X2 + 96 | 0);
              }
              a:
                do
                  if (M2 & 4096 | 0 ? (c[T2 + 892 >> 2] | 0) > 0 : 0) {
                    e2 = 0;
                    while (1) {
                      f2 = c[(c[T2 + 900 >> 2] | 0) + (e2 << 2) >> 2] | 0;
                      switch (ob[c[(c[f2 >> 2] | 0) + 20 >> 2] & 127](f2) | 0) {
                        case 0: {
                          M2 = zi(f2 + 4 | 0) | 0;
                          ha2 = +g[f2 + 28 >> 2];
                          ga2 = +g[f2 + 32 >> 2];
                          fa2 = +g[f2 + 36 >> 2];
                          ea2 = ha2 * +g[M2 + 16 >> 2] + ga2 * +g[M2 + 20 >> 2] + fa2 * +g[M2 + 24 >> 2] + +g[M2 + 52 >> 2];
                          da2 = ha2 * +g[M2 + 32 >> 2] + ga2 * +g[M2 + 36 >> 2] + fa2 * +g[M2 + 40 >> 2] + +g[M2 + 56 >> 2];
                          g[X2 + 32 >> 2] = ha2 * +g[M2 >> 2] + ga2 * +g[M2 + 4 >> 2] + fa2 * +g[M2 + 8 >> 2] + +g[M2 + 48 >> 2];
                          g[X2 + 32 + 4 >> 2] = ea2;
                          g[X2 + 32 + 8 >> 2] = da2;
                          g[X2 + 32 + 12 >> 2] = 0;
                          M2 = zi(f2 + 16 | 0) | 0;
                          da2 = +g[f2 + 44 >> 2];
                          ea2 = +g[f2 + 48 >> 2];
                          fa2 = +g[f2 + 52 >> 2];
                          ga2 = da2 * +g[M2 + 16 >> 2] + ea2 * +g[M2 + 20 >> 2] + fa2 * +g[M2 + 24 >> 2] + +g[M2 + 52 >> 2];
                          ha2 = da2 * +g[M2 + 32 >> 2] + ea2 * +g[M2 + 36 >> 2] + fa2 * +g[M2 + 40 >> 2] + +g[M2 + 56 >> 2];
                          g[X2 + 16 >> 2] = da2 * +g[M2 >> 2] + ea2 * +g[M2 + 4 >> 2] + fa2 * +g[M2 + 8 >> 2] + +g[M2 + 48 >> 2];
                          g[X2 + 16 + 4 >> 2] = ga2;
                          g[X2 + 16 + 8 >> 2] = ha2;
                          g[X2 + 16 + 12 >> 2] = 0;
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          L2 = (zi(f2 + 4 | 0) | 0) + 48 | 0;
                          c[X2 + 160 >> 2] = 1065353216;
                          c[X2 + 160 + 4 >> 2] = 1065353216;
                          c[X2 + 160 + 8 >> 2] = 0;
                          g[X2 + 160 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, L2, X2 + 32 | 0, X2 + 160 | 0);
                          L2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          M2 = (zi(f2 + 16 | 0) | 0) + 48 | 0;
                          c[X2 + 160 >> 2] = 0;
                          c[X2 + 160 + 4 >> 2] = 1065353216;
                          c[X2 + 160 + 8 >> 2] = 1065353216;
                          g[X2 + 160 + 12 >> 2] = 0;
                          Yb[L2 & 127](N2, M2, X2 + 16 | 0, X2 + 160 | 0);
                          c[X2 >> 2] = 1065353216;
                          c[X2 + 4 >> 2] = 1065353216;
                          c[X2 + 8 >> 2] = 0;
                          g[X2 + 12 >> 2] = 0;
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          ha2 = +g[X2 + 32 >> 2];
                          L2 = c[X2 + 32 + 4 >> 2] | 0;
                          t2 = c[X2 + 32 + 8 >> 2] | 0;
                          g[X2 + 160 >> 2] = ha2 + -0.25;
                          c[X2 + 160 + 4 >> 2] = L2;
                          c[X2 + 160 + 8 >> 2] = t2;
                          g[X2 + 160 + 12 >> 2] = 0;
                          ga2 = (c[l >> 2] = L2, +g[l >> 2]) + 0;
                          fa2 = (c[l >> 2] = t2, +g[l >> 2]) + 0;
                          g[X2 + 96 >> 2] = ha2 + 0.25;
                          g[X2 + 96 + 4 >> 2] = ga2;
                          g[X2 + 96 + 8 >> 2] = fa2;
                          g[X2 + 96 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2);
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          t2 = c[X2 + 32 >> 2] | 0;
                          fa2 = +g[X2 + 32 + 4 >> 2];
                          L2 = c[X2 + 32 + 8 >> 2] | 0;
                          c[X2 + 160 >> 2] = t2;
                          g[X2 + 160 + 4 >> 2] = fa2 + -0.25;
                          c[X2 + 160 + 8 >> 2] = L2;
                          g[X2 + 160 + 12 >> 2] = 0;
                          ga2 = (c[l >> 2] = t2, +g[l >> 2]) + 0;
                          ha2 = (c[l >> 2] = L2, +g[l >> 2]) + 0;
                          g[X2 + 96 >> 2] = ga2;
                          g[X2 + 96 + 4 >> 2] = fa2 + 0.25;
                          g[X2 + 96 + 8 >> 2] = ha2;
                          g[X2 + 96 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2);
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          L2 = c[X2 + 32 >> 2] | 0;
                          t2 = c[X2 + 32 + 4 >> 2] | 0;
                          ha2 = +g[X2 + 32 + 8 >> 2];
                          c[X2 + 160 >> 2] = L2;
                          c[X2 + 160 + 4 >> 2] = t2;
                          g[X2 + 160 + 8 >> 2] = ha2 + -0.25;
                          g[X2 + 160 + 12 >> 2] = 0;
                          fa2 = (c[l >> 2] = L2, +g[l >> 2]) + 0;
                          ga2 = (c[l >> 2] = t2, +g[l >> 2]) + 0;
                          g[X2 + 96 >> 2] = fa2;
                          g[X2 + 96 + 4 >> 2] = ga2;
                          g[X2 + 96 + 8 >> 2] = ha2 + 0.25;
                          g[X2 + 96 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2);
                          c[X2 >> 2] = 0;
                          c[X2 + 4 >> 2] = 1065353216;
                          c[X2 + 8 >> 2] = 1065353216;
                          g[X2 + 12 >> 2] = 0;
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          ha2 = +g[X2 + 16 >> 2];
                          t2 = c[X2 + 16 + 4 >> 2] | 0;
                          L2 = c[X2 + 16 + 8 >> 2] | 0;
                          g[X2 + 160 >> 2] = ha2 + -0.25;
                          c[X2 + 160 + 4 >> 2] = t2;
                          c[X2 + 160 + 8 >> 2] = L2;
                          g[X2 + 160 + 12 >> 2] = 0;
                          ga2 = (c[l >> 2] = t2, +g[l >> 2]) + 0;
                          fa2 = (c[l >> 2] = L2, +g[l >> 2]) + 0;
                          g[X2 + 96 >> 2] = ha2 + 0.25;
                          g[X2 + 96 + 4 >> 2] = ga2;
                          g[X2 + 96 + 8 >> 2] = fa2;
                          g[X2 + 96 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2);
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          L2 = c[X2 + 16 >> 2] | 0;
                          fa2 = +g[X2 + 16 + 4 >> 2];
                          t2 = c[X2 + 16 + 8 >> 2] | 0;
                          c[X2 + 160 >> 2] = L2;
                          g[X2 + 160 + 4 >> 2] = fa2 + -0.25;
                          c[X2 + 160 + 8 >> 2] = t2;
                          g[X2 + 160 + 12 >> 2] = 0;
                          ga2 = (c[l >> 2] = L2, +g[l >> 2]) + 0;
                          ha2 = (c[l >> 2] = t2, +g[l >> 2]) + 0;
                          g[X2 + 96 >> 2] = ga2;
                          g[X2 + 96 + 4 >> 2] = fa2 + 0.25;
                          g[X2 + 96 + 8 >> 2] = ha2;
                          g[X2 + 96 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2);
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          t2 = c[X2 + 16 >> 2] | 0;
                          L2 = c[X2 + 16 + 4 >> 2] | 0;
                          ha2 = +g[X2 + 16 + 8 >> 2];
                          c[X2 + 160 >> 2] = t2;
                          c[X2 + 160 + 4 >> 2] = L2;
                          g[X2 + 160 + 8 >> 2] = ha2 + -0.25;
                          g[X2 + 160 + 12 >> 2] = 0;
                          fa2 = (c[l >> 2] = t2, +g[l >> 2]) + 0;
                          ga2 = (c[l >> 2] = L2, +g[l >> 2]) + 0;
                          g[X2 + 96 >> 2] = fa2;
                          g[X2 + 96 + 4 >> 2] = ga2;
                          g[X2 + 96 + 8 >> 2] = ha2 + 0.25;
                          g[X2 + 96 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 160 | 0, X2 + 96 | 0, X2);
                          break;
                        }
                        case 1: {
                          M2 = (zi(f2 + 4 | 0) | 0) + 48 | 0;
                          c[X2 + 160 >> 2] = c[M2 >> 2];
                          c[X2 + 160 + 4 >> 2] = c[M2 + 4 >> 2];
                          c[X2 + 160 + 8 >> 2] = c[M2 + 8 >> 2];
                          c[X2 + 160 + 12 >> 2] = c[M2 + 12 >> 2];
                          M2 = (zi(f2 + 16 | 0) | 0) + 48 | 0;
                          c[X2 + 96 >> 2] = c[M2 >> 2];
                          c[X2 + 96 + 4 >> 2] = c[M2 + 4 >> 2];
                          c[X2 + 96 + 8 >> 2] = c[M2 + 8 >> 2];
                          c[X2 + 96 + 12 >> 2] = c[M2 + 12 >> 2];
                          M2 = zi(f2 + 4 | 0) | 0;
                          ba2 = +g[f2 + 28 >> 2];
                          aa2 = +g[f2 + 32 >> 2];
                          ea2 = +g[f2 + 36 >> 2];
                          ca2 = +g[M2 >> 2] * ba2 + +g[M2 + 4 >> 2] * aa2 + +g[M2 + 8 >> 2] * ea2;
                          da2 = ba2 * +g[M2 + 16 >> 2] + aa2 * +g[M2 + 20 >> 2] + ea2 * +g[M2 + 24 >> 2];
                          ea2 = ba2 * +g[M2 + 32 >> 2] + aa2 * +g[M2 + 36 >> 2] + ea2 * +g[M2 + 40 >> 2];
                          M2 = zi(f2 + 16 | 0) | 0;
                          aa2 = +g[f2 + 44 >> 2];
                          ba2 = +g[f2 + 48 >> 2];
                          ha2 = +g[f2 + 52 >> 2];
                          fa2 = +g[M2 >> 2] * aa2 + +g[M2 + 4 >> 2] * ba2 + +g[M2 + 8 >> 2] * ha2;
                          ga2 = aa2 * +g[M2 + 16 >> 2] + ba2 * +g[M2 + 20 >> 2] + ha2 * +g[M2 + 24 >> 2];
                          ha2 = aa2 * +g[M2 + 32 >> 2] + ba2 * +g[M2 + 36 >> 2] + ha2 * +g[M2 + 40 >> 2];
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          ba2 = da2 * 10 + +g[X2 + 160 + 4 >> 2];
                          aa2 = ea2 * 10 + +g[X2 + 160 + 8 >> 2];
                          g[X2 + 32 >> 2] = ca2 * 10 + +g[X2 + 160 >> 2];
                          g[X2 + 32 + 4 >> 2] = ba2;
                          g[X2 + 32 + 8 >> 2] = aa2;
                          g[X2 + 32 + 12 >> 2] = 0;
                          c[X2 + 16 >> 2] = 1065353216;
                          c[X2 + 16 + 4 >> 2] = 1065353216;
                          c[X2 + 16 + 8 >> 2] = 0;
                          g[X2 + 16 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 160 | 0, X2 + 32 | 0, X2 + 16 | 0);
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          aa2 = ga2 * 10 + +g[X2 + 160 + 4 >> 2];
                          ba2 = ha2 * 10 + +g[X2 + 160 + 8 >> 2];
                          g[X2 + 32 >> 2] = fa2 * 10 + +g[X2 + 160 >> 2];
                          g[X2 + 32 + 4 >> 2] = aa2;
                          g[X2 + 32 + 8 >> 2] = ba2;
                          g[X2 + 32 + 12 >> 2] = 0;
                          c[X2 + 16 >> 2] = 1065353216;
                          c[X2 + 16 + 4 >> 2] = 1065353216;
                          c[X2 + 16 + 8 >> 2] = 0;
                          g[X2 + 16 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 160 | 0, X2 + 32 | 0, X2 + 16 | 0);
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          da2 = da2 * 10 + +g[X2 + 96 + 4 >> 2];
                          ea2 = ea2 * 10 + +g[X2 + 96 + 8 >> 2];
                          g[X2 + 32 >> 2] = ca2 * 10 + +g[X2 + 96 >> 2];
                          g[X2 + 32 + 4 >> 2] = da2;
                          g[X2 + 32 + 8 >> 2] = ea2;
                          g[X2 + 32 + 12 >> 2] = 0;
                          c[X2 + 16 >> 2] = 0;
                          c[X2 + 16 + 4 >> 2] = 1065353216;
                          c[X2 + 16 + 8 >> 2] = 1065353216;
                          g[X2 + 16 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 96 | 0, X2 + 32 | 0, X2 + 16 | 0);
                          M2 = c[(c[N2 >> 2] | 0) + 16 >> 2] | 0;
                          ga2 = ga2 * 10 + +g[X2 + 96 + 4 >> 2];
                          ha2 = ha2 * 10 + +g[X2 + 96 + 8 >> 2];
                          g[X2 + 32 >> 2] = fa2 * 10 + +g[X2 + 96 >> 2];
                          g[X2 + 32 + 4 >> 2] = ga2;
                          g[X2 + 32 + 8 >> 2] = ha2;
                          g[X2 + 32 + 12 >> 2] = 0;
                          c[X2 + 16 >> 2] = 0;
                          c[X2 + 16 + 4 >> 2] = 1065353216;
                          c[X2 + 16 + 8 >> 2] = 1065353216;
                          g[X2 + 16 + 12 >> 2] = 0;
                          Yb[M2 & 127](N2, X2 + 96 | 0, X2 + 32 | 0, X2 + 16 | 0);
                          break;
                        }
                        default: {
                        }
                      }
                      e2 = e2 + 1 | 0;
                      if ((e2 | 0) >= (c[T2 + 892 >> 2] | 0))
                        break a;
                    }
                  }
                while (0);
            }
            e2 = c[d2 + 72 >> 2] | 0;
            if (e2 | 0 ? (ob[c[(c[e2 >> 2] | 0) + 56 >> 2] & 127](e2) | 0) & 2 | 0 : 0) {
              e2 = b[d2 + 348 >> 1] | 0;
              if (!((e2 & 255) << 24 >> 24))
                e2 = (e2 & 65535) >>> 8 & 255;
              else {
                N2 = c[d2 + 72 >> 2] | 0;
                e2 = c[T2 + 968 >> 2] | 0;
                c[X2 + 160 >> 2] = 1065353216;
                c[X2 + 160 + 4 >> 2] = 0;
                c[X2 + 160 + 8 >> 2] = 1065353216;
                g[X2 + 160 + 12 >> 2] = 0;
                c[X2 + 96 >> 2] = 1065353216;
                c[X2 + 96 + 4 >> 2] = 1065353216;
                c[X2 + 96 + 8 >> 2] = 1065353216;
                g[X2 + 96 + 12 >> 2] = 0;
                Bf(N2, e2, 0, X2 + 160 | 0, X2 + 96 | 0);
                e2 = a[d2 + 349 >> 0] | 0;
              }
              if (e2 << 24 >> 24) {
                M2 = c[d2 + 72 >> 2] | 0;
                N2 = c[T2 + 1028 >> 2] | 0;
                c[X2 + 160 >> 2] = 0;
                c[X2 + 160 + 4 >> 2] = 1065353216;
                c[X2 + 160 + 8 >> 2] = 0;
                g[X2 + 160 + 12 >> 2] = 0;
                c[X2 + 96 >> 2] = 1065353216;
                c[X2 + 96 + 4 >> 2] = 0;
                c[X2 + 96 + 8 >> 2] = 0;
                g[X2 + 96 + 12 >> 2] = 0;
                Bf(M2, N2, 0, X2 + 160 | 0, X2 + 96 | 0);
              }
              if (a[d2 + 350 >> 0] | 0) {
                N2 = c[d2 + 72 >> 2] | 0;
                T2 = c[T2 + 1088 >> 2] | 0;
                c[X2 + 160 >> 2] = 0;
                c[X2 + 160 + 4 >> 2] = 1065353216;
                c[X2 + 160 + 8 >> 2] = 1065353216;
                g[X2 + 160 + 12 >> 2] = 0;
                c[X2 + 96 >> 2] = 1065353216;
                c[X2 + 96 + 4 >> 2] = 0;
                c[X2 + 96 + 8 >> 2] = 0;
                g[X2 + 96 + 12 >> 2] = 0;
                Bf(N2, T2, 0, X2 + 160 | 0, X2 + 96 | 0);
              }
            }
            O2 = O2 + 1 | 0;
          } while ((O2 | 0) < (c[d2 + 328 >> 2] | 0));
          i = X2;
          return;
        }
        function ac(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0;
          N2 = i;
          i = i + 176 | 0;
          C2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
          C2 = (ob[c[(c[C2 >> 2] | 0) + 56 >> 2] & 127](C2) | 0) >>> 11;
          L2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
          L2 = (ob[c[(c[L2 >> 2] | 0) + 56 >> 2] & 127](L2) | 0) >>> 12;
          M2 = +g[d2 + 40 >> 2];
          if (M2 <= 0) {
            i = N2;
            return;
          }
          switch (c[d2 + 4 >> 2] | 0) {
            case 3: {
              c[N2 + 112 >> 2] = 1065353216;
              c[N2 + 112 + 4 >> 2] = 0;
              c[N2 + 112 + 4 + 4 >> 2] = 0;
              c[N2 + 112 + 4 + 8 >> 2] = 0;
              c[N2 + 112 + 4 + 12 >> 2] = 0;
              c[N2 + 112 + 20 >> 2] = 1065353216;
              c[N2 + 112 + 24 >> 2] = 0;
              c[N2 + 112 + 24 + 4 >> 2] = 0;
              c[N2 + 112 + 24 + 8 >> 2] = 0;
              c[N2 + 112 + 24 + 12 >> 2] = 0;
              c[N2 + 112 + 40 >> 2] = 1065353216;
              L2 = N2 + 112 + 44 | 0;
              c[L2 >> 2] = 0;
              c[L2 + 4 >> 2] = 0;
              c[L2 + 8 >> 2] = 0;
              c[L2 + 12 >> 2] = 0;
              c[L2 + 16 >> 2] = 0;
              B2 = +g[d2 + 300 >> 2];
              A2 = +g[d2 + 304 >> 2];
              z2 = +g[d2 + 308 >> 2];
              L2 = c[d2 + 28 >> 2] | 0;
              y2 = B2 * +g[L2 + 20 >> 2] + A2 * +g[L2 + 24 >> 2] + z2 * +g[L2 + 28 >> 2] + +g[L2 + 56 >> 2];
              x2 = B2 * +g[L2 + 36 >> 2] + A2 * +g[L2 + 40 >> 2] + z2 * +g[L2 + 44 >> 2] + +g[L2 + 60 >> 2];
              g[N2 + 112 + 48 >> 2] = B2 * +g[L2 + 4 >> 2] + A2 * +g[L2 + 8 >> 2] + z2 * +g[L2 + 12 >> 2] + +g[L2 + 52 >> 2];
              g[N2 + 112 + 52 >> 2] = y2;
              g[N2 + 112 + 56 >> 2] = x2;
              g[N2 + 112 + 60 >> 2] = 0;
              L2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
              Wb[c[(c[L2 >> 2] | 0) + 64 >> 2] & 7](L2, N2 + 112 | 0, M2);
              x2 = +g[d2 + 316 >> 2];
              y2 = +g[d2 + 320 >> 2];
              z2 = +g[d2 + 324 >> 2];
              d2 = c[d2 + 32 >> 2] | 0;
              A2 = x2 * +g[d2 + 20 >> 2] + y2 * +g[d2 + 24 >> 2] + z2 * +g[d2 + 28 >> 2] + +g[d2 + 56 >> 2];
              B2 = x2 * +g[d2 + 36 >> 2] + y2 * +g[d2 + 40 >> 2] + z2 * +g[d2 + 44 >> 2] + +g[d2 + 60 >> 2];
              g[N2 + 112 + 48 >> 2] = x2 * +g[d2 + 4 >> 2] + y2 * +g[d2 + 8 >> 2] + z2 * +g[d2 + 12 >> 2] + +g[d2 + 52 >> 2];
              g[N2 + 112 + 52 >> 2] = A2;
              g[N2 + 112 + 56 >> 2] = B2;
              g[N2 + 112 + 60 >> 2] = 0;
              if (C2 & 1 | 0) {
                b2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[b2 >> 2] | 0) + 64 >> 2] & 7](b2, N2 + 112 | 0, M2);
              }
              i = N2;
              return;
            }
            case 4: {
              K2 = c[d2 + 28 >> 2] | 0;
              O2 = +g[d2 + 552 >> 2];
              U2 = +g[K2 + 4 >> 2];
              e2 = +g[d2 + 552 + 16 >> 2];
              T2 = +g[K2 + 8 >> 2];
              f2 = +g[d2 + 552 + 32 >> 2];
              S2 = +g[K2 + 12 >> 2];
              m2 = +g[d2 + 552 + 4 >> 2];
              n2 = +g[d2 + 552 + 20 >> 2];
              s2 = +g[d2 + 552 + 36 >> 2];
              t2 = +g[d2 + 552 + 8 >> 2];
              v2 = +g[d2 + 552 + 24 >> 2];
              x2 = +g[d2 + 552 + 40 >> 2];
              R2 = +g[K2 + 20 >> 2];
              Q2 = +g[K2 + 24 >> 2];
              P2 = +g[K2 + 28 >> 2];
              u2 = +g[K2 + 36 >> 2];
              w2 = +g[K2 + 40 >> 2];
              y2 = +g[K2 + 44 >> 2];
              W2 = +g[d2 + 552 + 48 >> 2];
              V2 = +g[d2 + 552 + 52 >> 2];
              B2 = +g[d2 + 552 + 56 >> 2];
              z2 = +g[K2 + 52 >> 2] + (U2 * W2 + T2 * V2 + S2 * B2);
              A2 = R2 * W2 + Q2 * V2 + P2 * B2 + +g[K2 + 56 >> 2];
              B2 = u2 * W2 + w2 * V2 + y2 * B2 + +g[K2 + 60 >> 2];
              g[N2 + 112 >> 2] = O2 * U2 + e2 * T2 + f2 * S2;
              g[N2 + 112 + 4 >> 2] = U2 * m2 + T2 * n2 + S2 * s2;
              g[N2 + 112 + 8 >> 2] = U2 * t2 + T2 * v2 + S2 * x2;
              g[N2 + 112 + 12 >> 2] = 0;
              g[N2 + 112 + 16 >> 2] = O2 * R2 + e2 * Q2 + f2 * P2;
              g[N2 + 112 + 20 >> 2] = m2 * R2 + n2 * Q2 + s2 * P2;
              g[N2 + 112 + 24 >> 2] = t2 * R2 + v2 * Q2 + x2 * P2;
              g[N2 + 112 + 28 >> 2] = 0;
              g[N2 + 112 + 32 >> 2] = O2 * u2 + e2 * w2 + f2 * y2;
              g[N2 + 112 + 36 >> 2] = m2 * u2 + n2 * w2 + s2 * y2;
              g[N2 + 112 + 40 >> 2] = t2 * u2 + v2 * w2 + x2 * y2;
              g[N2 + 112 + 44 >> 2] = 0;
              g[N2 + 112 + 48 >> 2] = z2;
              g[N2 + 112 + 52 >> 2] = A2;
              g[N2 + 112 + 56 >> 2] = B2;
              g[N2 + 112 + 60 >> 2] = 0;
              if (!(C2 & 1)) {
                K2 = c[d2 + 32 >> 2] | 0;
                w2 = +g[d2 + 616 >> 2];
                m2 = +g[K2 + 4 >> 2];
                x2 = +g[d2 + 616 + 16 >> 2];
                n2 = +g[K2 + 8 >> 2];
                y2 = +g[d2 + 616 + 32 >> 2];
                s2 = +g[K2 + 12 >> 2];
                z2 = +g[d2 + 616 + 4 >> 2];
                A2 = +g[d2 + 616 + 20 >> 2];
                B2 = +g[d2 + 616 + 36 >> 2];
                O2 = +g[d2 + 616 + 8 >> 2];
                Q2 = +g[d2 + 616 + 24 >> 2];
                S2 = +g[d2 + 616 + 40 >> 2];
                t2 = +g[K2 + 20 >> 2];
                u2 = +g[K2 + 24 >> 2];
                v2 = +g[K2 + 28 >> 2];
                P2 = +g[K2 + 36 >> 2];
                R2 = +g[K2 + 40 >> 2];
                T2 = +g[K2 + 44 >> 2];
                e2 = +g[d2 + 616 + 48 >> 2];
                f2 = +g[d2 + 616 + 52 >> 2];
                W2 = +g[d2 + 616 + 56 >> 2];
                U2 = +g[K2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
                V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[K2 + 56 >> 2];
                W2 = P2 * e2 + R2 * f2 + T2 * W2 + +g[K2 + 60 >> 2];
                g[N2 + 112 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
                g[N2 + 112 + 4 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
                g[N2 + 112 + 8 >> 2] = m2 * O2 + n2 * Q2 + s2 * S2;
                g[N2 + 112 + 12 >> 2] = 0;
                g[N2 + 112 + 16 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
                g[N2 + 112 + 20 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
                g[N2 + 112 + 24 >> 2] = O2 * t2 + Q2 * u2 + S2 * v2;
                g[N2 + 112 + 28 >> 2] = 0;
                g[N2 + 112 + 32 >> 2] = w2 * P2 + x2 * R2 + y2 * T2;
                g[N2 + 112 + 36 >> 2] = z2 * P2 + A2 * R2 + B2 * T2;
                g[N2 + 112 + 40 >> 2] = O2 * P2 + Q2 * R2 + S2 * T2;
                g[N2 + 112 + 44 >> 2] = 0;
                g[N2 + 112 + 48 >> 2] = U2;
                g[N2 + 112 + 52 >> 2] = V2;
                g[N2 + 112 + 56 >> 2] = W2;
                g[N2 + 112 + 60 >> 2] = 0;
              } else {
                K2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[K2 >> 2] | 0) + 64 >> 2] & 7](K2, N2 + 112 | 0, M2);
                K2 = c[d2 + 32 >> 2] | 0;
                w2 = +g[d2 + 616 >> 2];
                m2 = +g[K2 + 4 >> 2];
                x2 = +g[d2 + 616 + 16 >> 2];
                n2 = +g[K2 + 8 >> 2];
                y2 = +g[d2 + 616 + 32 >> 2];
                s2 = +g[K2 + 12 >> 2];
                z2 = +g[d2 + 616 + 4 >> 2];
                A2 = +g[d2 + 616 + 20 >> 2];
                B2 = +g[d2 + 616 + 36 >> 2];
                O2 = +g[d2 + 616 + 8 >> 2];
                Q2 = +g[d2 + 616 + 24 >> 2];
                S2 = +g[d2 + 616 + 40 >> 2];
                t2 = +g[K2 + 20 >> 2];
                u2 = +g[K2 + 24 >> 2];
                v2 = +g[K2 + 28 >> 2];
                P2 = +g[K2 + 36 >> 2];
                R2 = +g[K2 + 40 >> 2];
                T2 = +g[K2 + 44 >> 2];
                e2 = +g[d2 + 616 + 48 >> 2];
                f2 = +g[d2 + 616 + 52 >> 2];
                W2 = +g[d2 + 616 + 56 >> 2];
                U2 = +g[K2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
                V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[K2 + 56 >> 2];
                W2 = P2 * e2 + R2 * f2 + T2 * W2 + +g[K2 + 60 >> 2];
                g[N2 + 112 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
                g[N2 + 112 + 4 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
                g[N2 + 112 + 8 >> 2] = m2 * O2 + n2 * Q2 + s2 * S2;
                g[N2 + 112 + 12 >> 2] = 0;
                g[N2 + 112 + 16 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
                g[N2 + 112 + 20 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
                g[N2 + 112 + 24 >> 2] = O2 * t2 + Q2 * u2 + S2 * v2;
                g[N2 + 112 + 28 >> 2] = 0;
                g[N2 + 112 + 32 >> 2] = w2 * P2 + x2 * R2 + y2 * T2;
                g[N2 + 112 + 36 >> 2] = z2 * P2 + A2 * R2 + B2 * T2;
                g[N2 + 112 + 40 >> 2] = O2 * P2 + Q2 * R2 + S2 * T2;
                g[N2 + 112 + 44 >> 2] = 0;
                g[N2 + 112 + 48 >> 2] = U2;
                g[N2 + 112 + 52 >> 2] = V2;
                g[N2 + 112 + 56 >> 2] = W2;
                g[N2 + 112 + 60 >> 2] = 0;
                K2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[K2 >> 2] | 0) + 64 >> 2] & 7](K2, N2 + 112 | 0, M2);
              }
              m2 = +g[d2 + 688 >> 2];
              n2 = +g[d2 + 688 + 4 >> 2];
              e2 = +jh(m2 - n2, 6.2831854820251465);
              if (!(e2 < -3.1415927410125732))
                if (e2 > 3.1415927410125732)
                  f2 = e2 + -6.2831854820251465;
                else
                  f2 = e2;
              else
                f2 = e2 + 6.2831854820251465;
              e2 = +jh(m2 + n2, 6.2831854820251465);
              if (!(e2 < -3.1415927410125732)) {
                if (e2 > 3.1415927410125732)
                  e2 = e2 + -6.2831854820251465;
              } else
                e2 = e2 + 6.2831854820251465;
              if (!(f2 == e2) ? L2 & 1 | 0 : 0) {
                c[N2 + 96 >> 2] = c[N2 + 112 + 8 >> 2];
                c[N2 + 96 + 4 >> 2] = c[N2 + 112 + 24 >> 2];
                c[N2 + 96 + 8 >> 2] = c[N2 + 112 + 40 >> 2];
                g[N2 + 96 + 12 >> 2] = 0;
                c[N2 + 80 >> 2] = c[N2 + 112 >> 2];
                c[N2 + 80 + 4 >> 2] = c[N2 + 112 + 16 >> 2];
                c[N2 + 80 + 8 >> 2] = c[N2 + 112 + 32 >> 2];
                g[N2 + 80 + 12 >> 2] = 0;
                b2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                d2 = c[(c[b2 >> 2] | 0) + 68 >> 2] | 0;
                c[N2 + 64 >> 2] = 0;
                c[N2 + 64 + 4 >> 2] = 0;
                c[N2 + 64 + 8 >> 2] = 0;
                c[N2 + 64 + 12 >> 2] = 0;
                vb[d2 & 0](b2, N2 + 112 + 48 | 0, N2 + 96 | 0, N2 + 80 | 0, M2, M2, n2 > 0 ? f2 : 0, n2 > 0 ? e2 : 6.2831854820251465, N2 + 64 | 0, n2 > 0, 10);
              }
              i = N2;
              return;
            }
            case 5: {
              E2 = c[d2 + 28 >> 2] | 0;
              w2 = +g[d2 + 300 >> 2];
              m2 = +g[E2 + 4 >> 2];
              x2 = +g[d2 + 300 + 16 >> 2];
              n2 = +g[E2 + 8 >> 2];
              y2 = +g[d2 + 300 + 32 >> 2];
              s2 = +g[E2 + 12 >> 2];
              z2 = +g[d2 + 300 + 4 >> 2];
              A2 = +g[d2 + 300 + 20 >> 2];
              B2 = +g[d2 + 300 + 36 >> 2];
              O2 = +g[d2 + 300 + 8 >> 2];
              Q2 = +g[d2 + 300 + 24 >> 2];
              S2 = +g[d2 + 300 + 40 >> 2];
              t2 = +g[E2 + 20 >> 2];
              u2 = +g[E2 + 24 >> 2];
              v2 = +g[E2 + 28 >> 2];
              P2 = +g[E2 + 36 >> 2];
              R2 = +g[E2 + 40 >> 2];
              T2 = +g[E2 + 44 >> 2];
              e2 = +g[d2 + 300 + 48 >> 2];
              f2 = +g[d2 + 300 + 52 >> 2];
              W2 = +g[d2 + 300 + 56 >> 2];
              U2 = +g[E2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
              V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[E2 + 56 >> 2];
              W2 = P2 * e2 + R2 * f2 + T2 * W2 + +g[E2 + 60 >> 2];
              g[N2 + 112 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
              E2 = N2 + 112 + 4 | 0;
              g[E2 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
              G2 = N2 + 112 + 8 | 0;
              g[G2 >> 2] = m2 * O2 + n2 * Q2 + s2 * S2;
              g[N2 + 112 + 12 >> 2] = 0;
              H2 = N2 + 112 + 16 | 0;
              g[H2 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
              K2 = N2 + 112 + 20 | 0;
              g[K2 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
              o2 = N2 + 112 + 24 | 0;
              g[o2 >> 2] = O2 * t2 + Q2 * u2 + S2 * v2;
              g[N2 + 112 + 28 >> 2] = 0;
              p2 = N2 + 112 + 32 | 0;
              g[p2 >> 2] = w2 * P2 + x2 * R2 + y2 * T2;
              q2 = N2 + 112 + 36 | 0;
              g[q2 >> 2] = z2 * P2 + A2 * R2 + B2 * T2;
              r2 = N2 + 112 + 40 | 0;
              g[r2 >> 2] = O2 * P2 + Q2 * R2 + S2 * T2;
              g[N2 + 112 + 44 >> 2] = 0;
              k2 = N2 + 112 + 48 | 0;
              g[k2 >> 2] = U2;
              D2 = N2 + 112 + 52 | 0;
              g[D2 >> 2] = V2;
              F2 = N2 + 112 + 56 | 0;
              g[F2 >> 2] = W2;
              g[N2 + 112 + 60 >> 2] = 0;
              if (!(C2 & 1)) {
                C2 = c[d2 + 32 >> 2] | 0;
                w2 = +g[d2 + 364 >> 2];
                m2 = +g[C2 + 4 >> 2];
                x2 = +g[d2 + 364 + 16 >> 2];
                n2 = +g[C2 + 8 >> 2];
                y2 = +g[d2 + 364 + 32 >> 2];
                s2 = +g[C2 + 12 >> 2];
                z2 = +g[d2 + 364 + 4 >> 2];
                A2 = +g[d2 + 364 + 20 >> 2];
                B2 = +g[d2 + 364 + 36 >> 2];
                O2 = +g[d2 + 364 + 8 >> 2];
                Q2 = +g[d2 + 364 + 24 >> 2];
                S2 = +g[d2 + 364 + 40 >> 2];
                t2 = +g[C2 + 20 >> 2];
                u2 = +g[C2 + 24 >> 2];
                v2 = +g[C2 + 28 >> 2];
                P2 = +g[C2 + 36 >> 2];
                R2 = +g[C2 + 40 >> 2];
                T2 = +g[C2 + 44 >> 2];
                e2 = +g[d2 + 364 + 48 >> 2];
                f2 = +g[d2 + 364 + 52 >> 2];
                W2 = +g[d2 + 364 + 56 >> 2];
                U2 = +g[C2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
                V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[C2 + 56 >> 2];
                W2 = P2 * e2 + R2 * f2 + T2 * W2 + +g[C2 + 60 >> 2];
                g[N2 + 112 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
                g[E2 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
                g[G2 >> 2] = m2 * O2 + n2 * Q2 + s2 * S2;
                g[N2 + 112 + 12 >> 2] = 0;
                g[H2 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
                g[K2 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
                g[o2 >> 2] = O2 * t2 + Q2 * u2 + S2 * v2;
                g[N2 + 112 + 28 >> 2] = 0;
                g[p2 >> 2] = w2 * P2 + x2 * R2 + y2 * T2;
                g[q2 >> 2] = z2 * P2 + A2 * R2 + B2 * T2;
                g[r2 >> 2] = O2 * P2 + Q2 * R2 + S2 * T2;
                g[N2 + 112 + 44 >> 2] = 0;
                g[k2 >> 2] = U2;
                g[D2 >> 2] = V2;
                g[F2 >> 2] = W2;
                g[N2 + 112 + 60 >> 2] = 0;
              } else {
                C2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[C2 >> 2] | 0) + 64 >> 2] & 7](C2, N2 + 112 | 0, M2);
                C2 = c[d2 + 32 >> 2] | 0;
                w2 = +g[d2 + 364 >> 2];
                m2 = +g[C2 + 4 >> 2];
                x2 = +g[d2 + 364 + 16 >> 2];
                n2 = +g[C2 + 8 >> 2];
                y2 = +g[d2 + 364 + 32 >> 2];
                s2 = +g[C2 + 12 >> 2];
                z2 = +g[d2 + 364 + 4 >> 2];
                A2 = +g[d2 + 364 + 20 >> 2];
                B2 = +g[d2 + 364 + 36 >> 2];
                O2 = +g[d2 + 364 + 8 >> 2];
                Q2 = +g[d2 + 364 + 24 >> 2];
                S2 = +g[d2 + 364 + 40 >> 2];
                t2 = +g[C2 + 20 >> 2];
                u2 = +g[C2 + 24 >> 2];
                v2 = +g[C2 + 28 >> 2];
                P2 = +g[C2 + 36 >> 2];
                R2 = +g[C2 + 40 >> 2];
                T2 = +g[C2 + 44 >> 2];
                e2 = +g[d2 + 364 + 48 >> 2];
                f2 = +g[d2 + 364 + 52 >> 2];
                W2 = +g[d2 + 364 + 56 >> 2];
                U2 = +g[C2 + 52 >> 2] + (m2 * e2 + n2 * f2 + s2 * W2);
                V2 = t2 * e2 + u2 * f2 + v2 * W2 + +g[C2 + 56 >> 2];
                W2 = P2 * e2 + R2 * f2 + T2 * W2 + +g[C2 + 60 >> 2];
                g[N2 + 112 >> 2] = w2 * m2 + x2 * n2 + y2 * s2;
                g[E2 >> 2] = m2 * z2 + n2 * A2 + s2 * B2;
                g[G2 >> 2] = m2 * O2 + n2 * Q2 + s2 * S2;
                g[N2 + 112 + 12 >> 2] = 0;
                g[H2 >> 2] = w2 * t2 + x2 * u2 + y2 * v2;
                g[K2 >> 2] = z2 * t2 + A2 * u2 + B2 * v2;
                g[o2 >> 2] = O2 * t2 + Q2 * u2 + S2 * v2;
                g[N2 + 112 + 28 >> 2] = 0;
                g[p2 >> 2] = w2 * P2 + x2 * R2 + y2 * T2;
                g[q2 >> 2] = z2 * P2 + A2 * R2 + B2 * T2;
                g[r2 >> 2] = O2 * P2 + Q2 * R2 + S2 * T2;
                g[N2 + 112 + 44 >> 2] = 0;
                g[k2 >> 2] = U2;
                g[D2 >> 2] = V2;
                g[F2 >> 2] = W2;
                g[N2 + 112 + 60 >> 2] = 0;
                C2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[C2 >> 2] | 0) + 64 >> 2] & 7](C2, N2 + 112 | 0, M2);
              }
              if (L2 & 1 | 0) {
                tj(N2 + 96 | 0, d2, 6.0868353843688965, M2);
                S2 = +g[N2 + 96 >> 2];
                T2 = +g[N2 + 96 + 4 >> 2];
                U2 = +g[N2 + 96 + 8 >> 2];
                V2 = S2 * +g[H2 >> 2] + T2 * +g[K2 >> 2] + U2 * +g[o2 >> 2] + +g[D2 >> 2];
                W2 = S2 * +g[p2 >> 2] + T2 * +g[q2 >> 2] + U2 * +g[r2 >> 2] + +g[F2 >> 2];
                g[N2 + 96 >> 2] = S2 * +g[N2 + 112 >> 2] + T2 * +g[E2 >> 2] + U2 * +g[G2 >> 2] + +g[k2 >> 2];
                g[N2 + 96 + 4 >> 2] = V2;
                g[N2 + 96 + 8 >> 2] = W2;
                g[N2 + 96 + 12 >> 2] = 0;
                j2 = N2 + 112 + 48 | 0;
                h2 = 0;
                do {
                  tj(N2 + 80 | 0, d2, +(h2 | 0) * 6.283185005187988 * 0.03125, M2);
                  S2 = +g[N2 + 80 >> 2];
                  T2 = +g[N2 + 80 + 4 >> 2];
                  U2 = +g[N2 + 80 + 8 >> 2];
                  V2 = S2 * +g[H2 >> 2] + T2 * +g[K2 >> 2] + U2 * +g[o2 >> 2] + +g[D2 >> 2];
                  W2 = S2 * +g[p2 >> 2] + T2 * +g[q2 >> 2] + U2 * +g[r2 >> 2] + +g[F2 >> 2];
                  g[N2 + 80 >> 2] = S2 * +g[N2 + 112 >> 2] + T2 * +g[E2 >> 2] + U2 * +g[G2 >> 2] + +g[k2 >> 2];
                  g[N2 + 80 + 4 >> 2] = V2;
                  g[N2 + 80 + 8 >> 2] = W2;
                  g[N2 + 80 + 12 >> 2] = 0;
                  L2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  C2 = c[(c[L2 >> 2] | 0) + 16 >> 2] | 0;
                  c[N2 + 64 >> 2] = 0;
                  c[N2 + 64 + 4 >> 2] = 0;
                  c[N2 + 64 + 8 >> 2] = 0;
                  c[N2 + 64 + 12 >> 2] = 0;
                  Yb[C2 & 127](L2, N2 + 96 | 0, N2 + 80 | 0, N2 + 64 | 0);
                  if (!(h2 & 3)) {
                    L2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                    C2 = c[(c[L2 >> 2] | 0) + 16 >> 2] | 0;
                    c[N2 + 64 >> 2] = 0;
                    c[N2 + 64 + 4 >> 2] = 0;
                    c[N2 + 64 + 8 >> 2] = 0;
                    c[N2 + 64 + 12 >> 2] = 0;
                    Yb[C2 & 127](L2, j2, N2 + 80 | 0, N2 + 64 | 0);
                  }
                  c[N2 + 96 >> 2] = c[N2 + 80 >> 2];
                  c[N2 + 96 + 4 >> 2] = c[N2 + 80 + 4 >> 2];
                  c[N2 + 96 + 8 >> 2] = c[N2 + 80 + 8 >> 2];
                  c[N2 + 96 + 12 >> 2] = c[N2 + 80 + 12 >> 2];
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) != 32);
                A2 = +g[d2 + 452 >> 2];
                B2 = +g[d2 + 512 >> 2];
                h2 = c[d2 + 32 >> 2] | 0;
                if (+g[h2 + 384 >> 2] > 0) {
                  S2 = +g[d2 + 364 >> 2];
                  T2 = +g[h2 + 4 >> 2];
                  U2 = +g[d2 + 364 + 16 >> 2];
                  V2 = +g[h2 + 8 >> 2];
                  W2 = +g[d2 + 364 + 32 >> 2];
                  x2 = +g[h2 + 12 >> 2];
                  Q2 = +g[d2 + 364 + 4 >> 2];
                  R2 = +g[d2 + 364 + 20 >> 2];
                  w2 = +g[d2 + 364 + 36 >> 2];
                  O2 = +g[d2 + 364 + 8 >> 2];
                  P2 = +g[d2 + 364 + 24 >> 2];
                  v2 = +g[d2 + 364 + 40 >> 2];
                  Y2 = +g[h2 + 20 >> 2];
                  X2 = +g[h2 + 24 >> 2];
                  u2 = +g[h2 + 28 >> 2];
                  t2 = +g[h2 + 36 >> 2];
                  s2 = +g[h2 + 40 >> 2];
                  n2 = +g[h2 + 44 >> 2];
                  m2 = +g[d2 + 364 + 48 >> 2];
                  f2 = +g[d2 + 364 + 52 >> 2];
                  e2 = +g[d2 + 364 + 56 >> 2];
                  y2 = t2 * m2 + s2 * f2 + n2 * e2 + +g[h2 + 60 >> 2];
                  z2 = Y2 * m2 + X2 * f2 + u2 * e2 + +g[h2 + 56 >> 2];
                  e2 = +g[h2 + 52 >> 2] + (T2 * m2 + V2 * f2 + x2 * e2);
                  f2 = O2 * t2 + P2 * s2 + v2 * n2;
                  m2 = Q2 * t2 + R2 * s2 + w2 * n2;
                  n2 = S2 * t2 + U2 * s2 + W2 * n2;
                  s2 = O2 * Y2 + P2 * X2 + v2 * u2;
                  t2 = Q2 * Y2 + R2 * X2 + w2 * u2;
                  u2 = S2 * Y2 + U2 * X2 + W2 * u2;
                  v2 = T2 * O2 + V2 * P2 + x2 * v2;
                  w2 = T2 * Q2 + V2 * R2 + x2 * w2;
                  x2 = S2 * T2 + U2 * V2 + W2 * x2;
                } else {
                  L2 = c[d2 + 28 >> 2] | 0;
                  U2 = +g[d2 + 300 >> 2];
                  V2 = +g[L2 + 4 >> 2];
                  W2 = +g[d2 + 300 + 16 >> 2];
                  X2 = +g[L2 + 8 >> 2];
                  Y2 = +g[d2 + 300 + 32 >> 2];
                  x2 = +g[L2 + 12 >> 2];
                  S2 = +g[d2 + 300 + 4 >> 2];
                  T2 = +g[d2 + 300 + 20 >> 2];
                  w2 = +g[d2 + 300 + 36 >> 2];
                  Q2 = +g[d2 + 300 + 8 >> 2];
                  R2 = +g[d2 + 300 + 24 >> 2];
                  v2 = +g[d2 + 300 + 40 >> 2];
                  O2 = +g[L2 + 20 >> 2];
                  P2 = +g[L2 + 24 >> 2];
                  u2 = +g[L2 + 28 >> 2];
                  t2 = +g[L2 + 36 >> 2];
                  s2 = +g[L2 + 40 >> 2];
                  n2 = +g[L2 + 44 >> 2];
                  m2 = +g[d2 + 300 + 48 >> 2];
                  f2 = +g[d2 + 300 + 52 >> 2];
                  e2 = +g[d2 + 300 + 56 >> 2];
                  y2 = t2 * m2 + s2 * f2 + n2 * e2 + +g[L2 + 60 >> 2];
                  z2 = O2 * m2 + P2 * f2 + u2 * e2 + +g[L2 + 56 >> 2];
                  e2 = +g[L2 + 52 >> 2] + (V2 * m2 + X2 * f2 + x2 * e2);
                  f2 = Q2 * t2 + R2 * s2 + v2 * n2;
                  m2 = S2 * t2 + T2 * s2 + w2 * n2;
                  n2 = U2 * t2 + W2 * s2 + Y2 * n2;
                  s2 = Q2 * O2 + R2 * P2 + v2 * u2;
                  t2 = S2 * O2 + T2 * P2 + w2 * u2;
                  u2 = U2 * O2 + W2 * P2 + Y2 * u2;
                  v2 = V2 * Q2 + X2 * R2 + x2 * v2;
                  w2 = V2 * S2 + X2 * T2 + x2 * w2;
                  x2 = U2 * V2 + W2 * X2 + Y2 * x2;
                }
                g[N2 + 112 >> 2] = x2;
                g[E2 >> 2] = w2;
                g[G2 >> 2] = v2;
                g[N2 + 112 + 12 >> 2] = 0;
                g[H2 >> 2] = u2;
                g[K2 >> 2] = t2;
                g[o2 >> 2] = s2;
                g[N2 + 112 + 28 >> 2] = 0;
                g[p2 >> 2] = n2;
                g[q2 >> 2] = m2;
                g[r2 >> 2] = f2;
                g[N2 + 112 + 44 >> 2] = 0;
                g[k2 >> 2] = e2;
                g[D2 >> 2] = z2;
                g[F2 >> 2] = y2;
                g[N2 + 112 + 60 >> 2] = 0;
                c[N2 + 80 >> 2] = c[j2 >> 2];
                c[N2 + 80 + 4 >> 2] = c[j2 + 4 >> 2];
                c[N2 + 80 + 8 >> 2] = c[j2 + 8 >> 2];
                c[N2 + 80 + 12 >> 2] = c[j2 + 12 >> 2];
                g[N2 + 64 >> 2] = x2;
                g[N2 + 64 + 4 >> 2] = u2;
                g[N2 + 64 + 8 >> 2] = n2;
                g[N2 + 64 + 12 >> 2] = 0;
                g[N2 + 48 >> 2] = w2;
                g[N2 + 48 + 4 >> 2] = t2;
                g[N2 + 48 + 8 >> 2] = m2;
                g[N2 + 48 + 12 >> 2] = 0;
                b2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                d2 = c[(c[b2 >> 2] | 0) + 68 >> 2] | 0;
                c[N2 + 32 >> 2] = 0;
                c[N2 + 32 + 4 >> 2] = 0;
                c[N2 + 32 + 8 >> 2] = 0;
                c[N2 + 32 + 12 >> 2] = 0;
                vb[d2 & 0](b2, N2 + 80 | 0, N2 + 64 | 0, N2 + 48 | 0, M2, M2, -B2 - A2, A2 - B2, N2 + 32 | 0, 1, 10);
              }
              i = N2;
              return;
            }
            case 6:
            case 9: {
              c[N2 + 112 >> 2] = c[d2 + 1064 >> 2];
              c[N2 + 112 + 4 >> 2] = c[d2 + 1064 + 4 >> 2];
              c[N2 + 112 + 8 >> 2] = c[d2 + 1064 + 8 >> 2];
              c[N2 + 112 + 12 >> 2] = c[d2 + 1064 + 12 >> 2];
              j2 = N2 + 112 + 16 | 0;
              k2 = d2 + 1064 + 16 | 0;
              c[j2 >> 2] = c[k2 >> 2];
              c[j2 + 4 >> 2] = c[k2 + 4 >> 2];
              c[j2 + 8 >> 2] = c[k2 + 8 >> 2];
              c[j2 + 12 >> 2] = c[k2 + 12 >> 2];
              o2 = N2 + 112 + 32 | 0;
              p2 = d2 + 1064 + 32 | 0;
              c[o2 >> 2] = c[p2 >> 2];
              c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
              c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
              c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
              q2 = N2 + 112 + 48 | 0;
              r2 = d2 + 1064 + 48 | 0;
              c[q2 >> 2] = c[r2 >> 2];
              c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
              c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
              c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
              if (!(C2 & 1)) {
                c[N2 + 112 >> 2] = c[d2 + 1128 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1128 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1128 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1128 + 12 >> 2];
                c[j2 >> 2] = c[d2 + 1128 + 16 >> 2];
                c[j2 + 4 >> 2] = c[d2 + 1128 + 16 + 4 >> 2];
                c[j2 + 8 >> 2] = c[d2 + 1128 + 16 + 8 >> 2];
                c[j2 + 12 >> 2] = c[d2 + 1128 + 16 + 12 >> 2];
                c[o2 >> 2] = c[d2 + 1128 + 32 >> 2];
                c[o2 + 4 >> 2] = c[d2 + 1128 + 32 + 4 >> 2];
                c[o2 + 8 >> 2] = c[d2 + 1128 + 32 + 8 >> 2];
                c[o2 + 12 >> 2] = c[d2 + 1128 + 32 + 12 >> 2];
                c[q2 >> 2] = c[d2 + 1128 + 48 >> 2];
                c[q2 + 4 >> 2] = c[d2 + 1128 + 48 + 4 >> 2];
                c[q2 + 8 >> 2] = c[d2 + 1128 + 48 + 8 >> 2];
                c[q2 + 12 >> 2] = c[d2 + 1128 + 48 + 12 >> 2];
              } else {
                K2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[K2 >> 2] | 0) + 64 >> 2] & 7](K2, N2 + 112 | 0, M2);
                c[N2 + 112 >> 2] = c[d2 + 1128 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1128 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1128 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1128 + 12 >> 2];
                c[j2 >> 2] = c[d2 + 1128 + 16 >> 2];
                c[j2 + 4 >> 2] = c[d2 + 1128 + 16 + 4 >> 2];
                c[j2 + 8 >> 2] = c[d2 + 1128 + 16 + 8 >> 2];
                c[j2 + 12 >> 2] = c[d2 + 1128 + 16 + 12 >> 2];
                c[o2 >> 2] = c[d2 + 1128 + 32 >> 2];
                c[o2 + 4 >> 2] = c[d2 + 1128 + 32 + 4 >> 2];
                c[o2 + 8 >> 2] = c[d2 + 1128 + 32 + 8 >> 2];
                c[o2 + 12 >> 2] = c[d2 + 1128 + 32 + 12 >> 2];
                c[q2 >> 2] = c[d2 + 1128 + 48 >> 2];
                c[q2 + 4 >> 2] = c[d2 + 1128 + 48 + 4 >> 2];
                c[q2 + 8 >> 2] = c[d2 + 1128 + 48 + 8 >> 2];
                c[q2 + 12 >> 2] = c[d2 + 1128 + 48 + 12 >> 2];
                K2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[K2 >> 2] | 0) + 64 >> 2] & 7](K2, N2 + 112 | 0, M2);
              }
              if (L2 & 1 | 0) {
                c[N2 + 112 >> 2] = c[d2 + 1064 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1064 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1064 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1064 + 12 >> 2];
                c[j2 >> 2] = c[k2 >> 2];
                c[j2 + 4 >> 2] = c[k2 + 4 >> 2];
                c[j2 + 8 >> 2] = c[k2 + 8 >> 2];
                c[j2 + 12 >> 2] = c[k2 + 12 >> 2];
                c[o2 >> 2] = c[p2 >> 2];
                c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                c[q2 >> 2] = c[r2 >> 2];
                c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                h2 = d2 + 1128 + 48 | 0;
                c[N2 + 96 >> 2] = c[N2 + 112 + 8 >> 2];
                c[N2 + 96 + 4 >> 2] = c[N2 + 112 + 24 >> 2];
                c[N2 + 96 + 8 >> 2] = c[N2 + 112 + 40 >> 2];
                g[N2 + 96 + 12 >> 2] = 0;
                c[N2 + 80 >> 2] = c[N2 + 112 >> 2];
                c[N2 + 80 + 4 >> 2] = c[N2 + 112 + 16 >> 2];
                c[N2 + 80 + 8 >> 2] = c[N2 + 112 + 32 >> 2];
                g[N2 + 80 + 12 >> 2] = 0;
                U2 = +g[d2 + 932 >> 2];
                e2 = +g[d2 + 932 + 4 >> 2];
                X2 = +g[d2 + 996 >> 2];
                W2 = +g[d2 + 996 + 4 >> 2];
                H2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                K2 = c[(c[H2 >> 2] | 0) + 72 >> 2] | 0;
                c[N2 + 64 >> 2] = 0;
                c[N2 + 64 + 4 >> 2] = 0;
                c[N2 + 64 + 8 >> 2] = 0;
                c[N2 + 64 + 12 >> 2] = 0;
                Pb[K2 & 0](H2, h2, N2 + 96 | 0, N2 + 80 | 0, M2 * 0.8999999761581421, U2, e2, X2, W2, N2 + 64 | 0, 10, 1);
                H2 = c[N2 + 112 + 4 >> 2] | 0;
                K2 = c[N2 + 112 + 20 >> 2] | 0;
                L2 = c[N2 + 112 + 36 >> 2] | 0;
                c[N2 + 80 >> 2] = H2;
                c[N2 + 80 + 4 >> 2] = K2;
                c[N2 + 80 + 8 >> 2] = L2;
                g[N2 + 80 + 12 >> 2] = 0;
                W2 = +g[d2 + 1196 >> 2];
                X2 = +g[d2 + 1200 >> 2];
                e2 = +I(+W2);
                W2 = +J(+W2);
                U2 = +I(+X2);
                X2 = +J(+X2);
                V2 = (c[l >> 2] = H2, +g[l >> 2]);
                Y2 = (c[l >> 2] = K2, +g[l >> 2]);
                f2 = (c[l >> 2] = L2, +g[l >> 2]);
                g[N2 + 64 >> 2] = e2 * U2 * V2 + e2 * X2 * Y2 - W2 * f2;
                g[N2 + 64 + 4 >> 2] = U2 * Y2 - X2 * V2;
                g[N2 + 64 + 8 >> 2] = W2 * U2 * V2 + W2 * X2 * Y2 + e2 * f2;
                c[N2 + 112 >> 2] = c[d2 + 1128 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1128 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1128 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1128 + 12 >> 2];
                c[j2 >> 2] = c[d2 + 1128 + 16 >> 2];
                c[j2 + 4 >> 2] = c[d2 + 1128 + 16 + 4 >> 2];
                c[j2 + 8 >> 2] = c[d2 + 1128 + 16 + 8 >> 2];
                c[j2 + 12 >> 2] = c[d2 + 1128 + 16 + 12 >> 2];
                c[o2 >> 2] = c[d2 + 1128 + 32 >> 2];
                c[o2 + 4 >> 2] = c[d2 + 1128 + 32 + 4 >> 2];
                c[o2 + 8 >> 2] = c[d2 + 1128 + 32 + 8 >> 2];
                c[o2 + 12 >> 2] = c[d2 + 1128 + 32 + 12 >> 2];
                c[q2 >> 2] = c[h2 >> 2];
                c[q2 + 4 >> 2] = c[h2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[h2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[h2 + 12 >> 2];
                f2 = -+g[N2 + 112 + 16 >> 2];
                e2 = -+g[N2 + 112 + 32 >> 2];
                g[N2 + 48 >> 2] = -+g[N2 + 112 >> 2];
                g[N2 + 48 + 4 >> 2] = f2;
                g[N2 + 48 + 8 >> 2] = e2;
                g[N2 + 48 + 12 >> 2] = 0;
                e2 = +g[d2 + 868 >> 2];
                f2 = +g[d2 + 868 + 4 >> 2];
                if (!(e2 > f2)) {
                  if (e2 < f2) {
                    L2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                    K2 = c[(c[L2 >> 2] | 0) + 68 >> 2] | 0;
                    c[N2 + 32 >> 2] = 0;
                    c[N2 + 32 + 4 >> 2] = 0;
                    c[N2 + 32 + 8 >> 2] = 0;
                    c[N2 + 32 + 12 >> 2] = 0;
                    vb[K2 & 0](L2, h2, N2 + 48 | 0, N2 + 64 | 0, M2, M2, e2, f2, N2 + 32 | 0, 1, 10);
                  }
                } else {
                  L2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  K2 = c[(c[L2 >> 2] | 0) + 68 >> 2] | 0;
                  c[N2 + 32 >> 2] = 0;
                  c[N2 + 32 + 4 >> 2] = 0;
                  c[N2 + 32 + 8 >> 2] = 0;
                  c[N2 + 32 + 12 >> 2] = 0;
                  vb[K2 & 0](L2, h2, N2 + 48 | 0, N2 + 64 | 0, M2, M2, -3.1415927410125732, 3.1415927410125732, N2 + 32 | 0, 0, 10);
                }
                c[N2 + 112 >> 2] = c[d2 + 1064 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1064 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1064 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1064 + 12 >> 2];
                c[j2 >> 2] = c[k2 >> 2];
                c[j2 + 4 >> 2] = c[k2 + 4 >> 2];
                c[j2 + 8 >> 2] = c[k2 + 8 >> 2];
                c[j2 + 12 >> 2] = c[k2 + 12 >> 2];
                c[o2 >> 2] = c[p2 >> 2];
                c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                c[q2 >> 2] = c[r2 >> 2];
                c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                c[N2 + 32 >> 2] = c[d2 + 680 >> 2];
                c[N2 + 32 + 4 >> 2] = c[d2 + 680 + 4 >> 2];
                c[N2 + 32 + 8 >> 2] = c[d2 + 680 + 8 >> 2];
                c[N2 + 32 + 12 >> 2] = c[d2 + 680 + 12 >> 2];
                c[N2 + 16 >> 2] = c[d2 + 680 + 16 >> 2];
                c[N2 + 16 + 4 >> 2] = c[d2 + 680 + 16 + 4 >> 2];
                c[N2 + 16 + 8 >> 2] = c[d2 + 680 + 16 + 8 >> 2];
                c[N2 + 16 + 12 >> 2] = c[d2 + 680 + 16 + 12 >> 2];
                b2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                d2 = c[(c[b2 >> 2] | 0) + 80 >> 2] | 0;
                c[N2 >> 2] = 0;
                c[N2 + 4 >> 2] = 0;
                c[N2 + 8 >> 2] = 0;
                c[N2 + 12 >> 2] = 0;
                ib[d2 & 31](b2, N2 + 32 | 0, N2 + 16 | 0, N2 + 112 | 0, N2);
              }
              i = N2;
              return;
            }
            case 12: {
              c[N2 + 112 >> 2] = c[d2 + 1236 >> 2];
              c[N2 + 112 + 4 >> 2] = c[d2 + 1236 + 4 >> 2];
              c[N2 + 112 + 8 >> 2] = c[d2 + 1236 + 8 >> 2];
              c[N2 + 112 + 12 >> 2] = c[d2 + 1236 + 12 >> 2];
              j2 = N2 + 112 + 16 | 0;
              k2 = d2 + 1236 + 16 | 0;
              c[j2 >> 2] = c[k2 >> 2];
              c[j2 + 4 >> 2] = c[k2 + 4 >> 2];
              c[j2 + 8 >> 2] = c[k2 + 8 >> 2];
              c[j2 + 12 >> 2] = c[k2 + 12 >> 2];
              o2 = N2 + 112 + 32 | 0;
              p2 = d2 + 1236 + 32 | 0;
              c[o2 >> 2] = c[p2 >> 2];
              c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
              c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
              c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
              q2 = N2 + 112 + 48 | 0;
              r2 = d2 + 1236 + 48 | 0;
              c[q2 >> 2] = c[r2 >> 2];
              c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
              c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
              c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
              if (!(C2 & 1)) {
                c[N2 + 112 >> 2] = c[d2 + 1300 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1300 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1300 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1300 + 12 >> 2];
                c[j2 >> 2] = c[d2 + 1300 + 16 >> 2];
                c[j2 + 4 >> 2] = c[d2 + 1300 + 16 + 4 >> 2];
                c[j2 + 8 >> 2] = c[d2 + 1300 + 16 + 8 >> 2];
                c[j2 + 12 >> 2] = c[d2 + 1300 + 16 + 12 >> 2];
                c[o2 >> 2] = c[d2 + 1300 + 32 >> 2];
                c[o2 + 4 >> 2] = c[d2 + 1300 + 32 + 4 >> 2];
                c[o2 + 8 >> 2] = c[d2 + 1300 + 32 + 8 >> 2];
                c[o2 + 12 >> 2] = c[d2 + 1300 + 32 + 12 >> 2];
                c[q2 >> 2] = c[d2 + 1300 + 48 >> 2];
                c[q2 + 4 >> 2] = c[d2 + 1300 + 48 + 4 >> 2];
                c[q2 + 8 >> 2] = c[d2 + 1300 + 48 + 8 >> 2];
                c[q2 + 12 >> 2] = c[d2 + 1300 + 48 + 12 >> 2];
              } else {
                K2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[K2 >> 2] | 0) + 64 >> 2] & 7](K2, N2 + 112 | 0, M2);
                c[N2 + 112 >> 2] = c[d2 + 1300 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1300 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1300 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1300 + 12 >> 2];
                c[j2 >> 2] = c[d2 + 1300 + 16 >> 2];
                c[j2 + 4 >> 2] = c[d2 + 1300 + 16 + 4 >> 2];
                c[j2 + 8 >> 2] = c[d2 + 1300 + 16 + 8 >> 2];
                c[j2 + 12 >> 2] = c[d2 + 1300 + 16 + 12 >> 2];
                c[o2 >> 2] = c[d2 + 1300 + 32 >> 2];
                c[o2 + 4 >> 2] = c[d2 + 1300 + 32 + 4 >> 2];
                c[o2 + 8 >> 2] = c[d2 + 1300 + 32 + 8 >> 2];
                c[o2 + 12 >> 2] = c[d2 + 1300 + 32 + 12 >> 2];
                c[q2 >> 2] = c[d2 + 1300 + 48 >> 2];
                c[q2 + 4 >> 2] = c[d2 + 1300 + 48 + 4 >> 2];
                c[q2 + 8 >> 2] = c[d2 + 1300 + 48 + 8 >> 2];
                c[q2 + 12 >> 2] = c[d2 + 1300 + 48 + 12 >> 2];
                K2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[K2 >> 2] | 0) + 64 >> 2] & 7](K2, N2 + 112 | 0, M2);
              }
              if (L2 & 1 | 0) {
                c[N2 + 112 >> 2] = c[d2 + 1236 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1236 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1236 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1236 + 12 >> 2];
                c[j2 >> 2] = c[k2 >> 2];
                c[j2 + 4 >> 2] = c[k2 + 4 >> 2];
                c[j2 + 8 >> 2] = c[k2 + 8 >> 2];
                c[j2 + 12 >> 2] = c[k2 + 12 >> 2];
                c[o2 >> 2] = c[p2 >> 2];
                c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                c[q2 >> 2] = c[r2 >> 2];
                c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                h2 = d2 + 1300 + 48 | 0;
                c[N2 + 96 >> 2] = c[N2 + 112 + 8 >> 2];
                c[N2 + 96 + 4 >> 2] = c[N2 + 112 + 24 >> 2];
                c[N2 + 96 + 8 >> 2] = c[N2 + 112 + 40 >> 2];
                g[N2 + 96 + 12 >> 2] = 0;
                c[N2 + 80 >> 2] = c[N2 + 112 >> 2];
                c[N2 + 80 + 4 >> 2] = c[N2 + 112 + 16 >> 2];
                c[N2 + 80 + 8 >> 2] = c[N2 + 112 + 32 >> 2];
                g[N2 + 80 + 12 >> 2] = 0;
                U2 = +g[d2 + 1056 >> 2];
                e2 = +g[d2 + 1060 >> 2];
                X2 = +g[d2 + 1144 >> 2];
                W2 = +g[d2 + 1144 + 4 >> 2];
                H2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                K2 = c[(c[H2 >> 2] | 0) + 72 >> 2] | 0;
                c[N2 + 64 >> 2] = 0;
                c[N2 + 64 + 4 >> 2] = 0;
                c[N2 + 64 + 8 >> 2] = 0;
                c[N2 + 64 + 12 >> 2] = 0;
                Pb[K2 & 0](H2, h2, N2 + 96 | 0, N2 + 80 | 0, M2 * 0.8999999761581421, U2, e2, X2, W2, N2 + 64 | 0, 10, 1);
                H2 = c[N2 + 112 + 4 >> 2] | 0;
                K2 = c[N2 + 112 + 20 >> 2] | 0;
                L2 = c[N2 + 112 + 36 >> 2] | 0;
                c[N2 + 80 >> 2] = H2;
                c[N2 + 80 + 4 >> 2] = K2;
                c[N2 + 80 + 8 >> 2] = L2;
                g[N2 + 80 + 12 >> 2] = 0;
                W2 = +g[d2 + 1368 >> 2];
                X2 = +g[d2 + 1372 >> 2];
                e2 = +I(+W2);
                W2 = +J(+W2);
                U2 = +I(+X2);
                X2 = +J(+X2);
                V2 = (c[l >> 2] = H2, +g[l >> 2]);
                Y2 = (c[l >> 2] = K2, +g[l >> 2]);
                f2 = (c[l >> 2] = L2, +g[l >> 2]);
                g[N2 + 64 >> 2] = e2 * U2 * V2 + e2 * X2 * Y2 - W2 * f2;
                g[N2 + 64 + 4 >> 2] = U2 * Y2 - X2 * V2;
                g[N2 + 64 + 8 >> 2] = W2 * U2 * V2 + W2 * X2 * Y2 + e2 * f2;
                c[N2 + 112 >> 2] = c[d2 + 1300 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1300 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1300 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1300 + 12 >> 2];
                c[j2 >> 2] = c[d2 + 1300 + 16 >> 2];
                c[j2 + 4 >> 2] = c[d2 + 1300 + 16 + 4 >> 2];
                c[j2 + 8 >> 2] = c[d2 + 1300 + 16 + 8 >> 2];
                c[j2 + 12 >> 2] = c[d2 + 1300 + 16 + 12 >> 2];
                c[o2 >> 2] = c[d2 + 1300 + 32 >> 2];
                c[o2 + 4 >> 2] = c[d2 + 1300 + 32 + 4 >> 2];
                c[o2 + 8 >> 2] = c[d2 + 1300 + 32 + 8 >> 2];
                c[o2 + 12 >> 2] = c[d2 + 1300 + 32 + 12 >> 2];
                c[q2 >> 2] = c[h2 >> 2];
                c[q2 + 4 >> 2] = c[h2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[h2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[h2 + 12 >> 2];
                f2 = -+g[N2 + 112 + 16 >> 2];
                e2 = -+g[N2 + 112 + 32 >> 2];
                g[N2 + 48 >> 2] = -+g[N2 + 112 >> 2];
                g[N2 + 48 + 4 >> 2] = f2;
                g[N2 + 48 + 8 >> 2] = e2;
                g[N2 + 48 + 12 >> 2] = 0;
                e2 = +g[d2 + 968 >> 2];
                f2 = +g[d2 + 968 + 4 >> 2];
                if (!(e2 > f2)) {
                  if (e2 < f2) {
                    L2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                    K2 = c[(c[L2 >> 2] | 0) + 68 >> 2] | 0;
                    c[N2 + 32 >> 2] = 0;
                    c[N2 + 32 + 4 >> 2] = 0;
                    c[N2 + 32 + 8 >> 2] = 0;
                    c[N2 + 32 + 12 >> 2] = 0;
                    vb[K2 & 0](L2, h2, N2 + 48 | 0, N2 + 64 | 0, M2, M2, e2, f2, N2 + 32 | 0, 1, 10);
                  }
                } else {
                  L2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                  K2 = c[(c[L2 >> 2] | 0) + 68 >> 2] | 0;
                  c[N2 + 32 >> 2] = 0;
                  c[N2 + 32 + 4 >> 2] = 0;
                  c[N2 + 32 + 8 >> 2] = 0;
                  c[N2 + 32 + 12 >> 2] = 0;
                  vb[K2 & 0](L2, h2, N2 + 48 | 0, N2 + 64 | 0, M2, M2, -3.1415927410125732, 3.1415927410125732, N2 + 32 | 0, 0, 10);
                }
                c[N2 + 112 >> 2] = c[d2 + 1236 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 1236 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 1236 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 1236 + 12 >> 2];
                c[j2 >> 2] = c[k2 >> 2];
                c[j2 + 4 >> 2] = c[k2 + 4 >> 2];
                c[j2 + 8 >> 2] = c[k2 + 8 >> 2];
                c[j2 + 12 >> 2] = c[k2 + 12 >> 2];
                c[o2 >> 2] = c[p2 >> 2];
                c[o2 + 4 >> 2] = c[p2 + 4 >> 2];
                c[o2 + 8 >> 2] = c[p2 + 8 >> 2];
                c[o2 + 12 >> 2] = c[p2 + 12 >> 2];
                c[q2 >> 2] = c[r2 >> 2];
                c[q2 + 4 >> 2] = c[r2 + 4 >> 2];
                c[q2 + 8 >> 2] = c[r2 + 8 >> 2];
                c[q2 + 12 >> 2] = c[r2 + 12 >> 2];
                c[N2 + 32 >> 2] = c[d2 + 680 >> 2];
                c[N2 + 32 + 4 >> 2] = c[d2 + 680 + 4 >> 2];
                c[N2 + 32 + 8 >> 2] = c[d2 + 680 + 8 >> 2];
                c[N2 + 32 + 12 >> 2] = c[d2 + 680 + 12 >> 2];
                c[N2 + 16 >> 2] = c[d2 + 680 + 16 >> 2];
                c[N2 + 16 + 4 >> 2] = c[d2 + 680 + 16 + 4 >> 2];
                c[N2 + 16 + 8 >> 2] = c[d2 + 680 + 16 + 8 >> 2];
                c[N2 + 16 + 12 >> 2] = c[d2 + 680 + 16 + 12 >> 2];
                b2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                d2 = c[(c[b2 >> 2] | 0) + 80 >> 2] | 0;
                c[N2 >> 2] = 0;
                c[N2 + 4 >> 2] = 0;
                c[N2 + 8 >> 2] = 0;
                c[N2 + 12 >> 2] = 0;
                ib[d2 & 31](b2, N2 + 32 | 0, N2 + 16 | 0, N2 + 112 | 0, N2);
              }
              i = N2;
              return;
            }
            case 7: {
              c[N2 + 112 >> 2] = c[d2 + 824 >> 2];
              c[N2 + 112 + 4 >> 2] = c[d2 + 824 + 4 >> 2];
              c[N2 + 112 + 8 >> 2] = c[d2 + 824 + 8 >> 2];
              c[N2 + 112 + 12 >> 2] = c[d2 + 824 + 12 >> 2];
              h2 = N2 + 112 + 16 | 0;
              c[h2 >> 2] = c[d2 + 824 + 16 >> 2];
              c[h2 + 4 >> 2] = c[d2 + 824 + 16 + 4 >> 2];
              c[h2 + 8 >> 2] = c[d2 + 824 + 16 + 8 >> 2];
              c[h2 + 12 >> 2] = c[d2 + 824 + 16 + 12 >> 2];
              j2 = N2 + 112 + 32 | 0;
              c[j2 >> 2] = c[d2 + 824 + 32 >> 2];
              c[j2 + 4 >> 2] = c[d2 + 824 + 32 + 4 >> 2];
              c[j2 + 8 >> 2] = c[d2 + 824 + 32 + 8 >> 2];
              c[j2 + 12 >> 2] = c[d2 + 824 + 32 + 12 >> 2];
              k2 = N2 + 112 + 48 | 0;
              c[k2 >> 2] = c[d2 + 824 + 48 >> 2];
              c[k2 + 4 >> 2] = c[d2 + 824 + 48 + 4 >> 2];
              c[k2 + 8 >> 2] = c[d2 + 824 + 48 + 8 >> 2];
              c[k2 + 12 >> 2] = c[d2 + 824 + 48 + 12 >> 2];
              if (!(C2 & 1)) {
                c[N2 + 112 >> 2] = c[d2 + 888 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 888 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 888 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 888 + 12 >> 2];
                c[h2 >> 2] = c[d2 + 888 + 16 >> 2];
                c[h2 + 4 >> 2] = c[d2 + 888 + 16 + 4 >> 2];
                c[h2 + 8 >> 2] = c[d2 + 888 + 16 + 8 >> 2];
                c[h2 + 12 >> 2] = c[d2 + 888 + 16 + 12 >> 2];
                c[j2 >> 2] = c[d2 + 888 + 32 >> 2];
                c[j2 + 4 >> 2] = c[d2 + 888 + 32 + 4 >> 2];
                c[j2 + 8 >> 2] = c[d2 + 888 + 32 + 8 >> 2];
                c[j2 + 12 >> 2] = c[d2 + 888 + 32 + 12 >> 2];
                c[k2 >> 2] = c[d2 + 888 + 48 >> 2];
                c[k2 + 4 >> 2] = c[d2 + 888 + 48 + 4 >> 2];
                c[k2 + 8 >> 2] = c[d2 + 888 + 48 + 8 >> 2];
                c[k2 + 12 >> 2] = c[d2 + 888 + 48 + 12 >> 2];
              } else {
                K2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[K2 >> 2] | 0) + 64 >> 2] & 7](K2, N2 + 112 | 0, M2);
                c[N2 + 112 >> 2] = c[d2 + 888 >> 2];
                c[N2 + 112 + 4 >> 2] = c[d2 + 888 + 4 >> 2];
                c[N2 + 112 + 8 >> 2] = c[d2 + 888 + 8 >> 2];
                c[N2 + 112 + 12 >> 2] = c[d2 + 888 + 12 >> 2];
                c[h2 >> 2] = c[d2 + 888 + 16 >> 2];
                c[h2 + 4 >> 2] = c[d2 + 888 + 16 + 4 >> 2];
                c[h2 + 8 >> 2] = c[d2 + 888 + 16 + 8 >> 2];
                c[h2 + 12 >> 2] = c[d2 + 888 + 16 + 12 >> 2];
                c[j2 >> 2] = c[d2 + 888 + 32 >> 2];
                c[j2 + 4 >> 2] = c[d2 + 888 + 32 + 4 >> 2];
                c[j2 + 8 >> 2] = c[d2 + 888 + 32 + 8 >> 2];
                c[j2 + 12 >> 2] = c[d2 + 888 + 32 + 12 >> 2];
                c[k2 >> 2] = c[d2 + 888 + 48 >> 2];
                c[k2 + 4 >> 2] = c[d2 + 888 + 48 + 4 >> 2];
                c[k2 + 8 >> 2] = c[d2 + 888 + 48 + 8 >> 2];
                c[k2 + 12 >> 2] = c[d2 + 888 + 48 + 12 >> 2];
                K2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                Wb[c[(c[K2 >> 2] | 0) + 64 >> 2] & 7](K2, N2 + 112 | 0, M2);
              }
              if (L2 & 1 | 0) {
                D2 = a[d2 + 180 >> 0] | 0 ? d2 + 824 | 0 : d2 + 888 | 0;
                E2 = c[D2 >> 2] | 0;
                H2 = c[D2 + 4 >> 2] | 0;
                F2 = c[D2 + 16 >> 2] | 0;
                K2 = c[D2 + 20 >> 2] | 0;
                G2 = c[D2 + 32 >> 2] | 0;
                L2 = c[D2 + 36 >> 2] | 0;
                A2 = +g[D2 + 48 >> 2];
                Q2 = +g[D2 + 52 >> 2];
                U2 = +g[D2 + 56 >> 2];
                X2 = +g[d2 + 184 >> 2];
                P2 = (c[l >> 2] = E2, +g[l >> 2]);
                O2 = (c[l >> 2] = H2, +g[l >> 2]) * 0;
                B2 = +g[D2 + 8 >> 2] * 0;
                T2 = (c[l >> 2] = F2, +g[l >> 2]);
                S2 = (c[l >> 2] = K2, +g[l >> 2]) * 0;
                R2 = +g[D2 + 24 >> 2] * 0;
                Y2 = (c[l >> 2] = G2, +g[l >> 2]);
                W2 = (c[l >> 2] = L2, +g[l >> 2]) * 0;
                V2 = +g[D2 + 40 >> 2] * 0;
                g[N2 + 96 >> 2] = A2 + (B2 + (O2 + P2 * X2));
                g[N2 + 96 + 4 >> 2] = Q2 + (R2 + (S2 + T2 * X2));
                g[N2 + 96 + 8 >> 2] = U2 + (V2 + (W2 + Y2 * X2));
                g[N2 + 96 + 12 >> 2] = 0;
                X2 = +g[d2 + 188 >> 2];
                g[N2 + 80 >> 2] = A2 + (B2 + (O2 + P2 * X2));
                g[N2 + 80 + 4 >> 2] = Q2 + (R2 + (S2 + T2 * X2));
                g[N2 + 80 + 8 >> 2] = U2 + (V2 + (W2 + Y2 * X2));
                g[N2 + 80 + 12 >> 2] = 0;
                D2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                C2 = c[(c[D2 >> 2] | 0) + 16 >> 2] | 0;
                c[N2 + 64 >> 2] = 0;
                c[N2 + 64 + 4 >> 2] = 0;
                c[N2 + 64 + 8 >> 2] = 0;
                c[N2 + 64 + 12 >> 2] = 0;
                Yb[C2 & 127](D2, N2 + 96 | 0, N2 + 80 | 0, N2 + 64 | 0);
                c[N2 + 64 >> 2] = E2;
                c[N2 + 64 + 4 >> 2] = F2;
                c[N2 + 64 + 8 >> 2] = G2;
                g[N2 + 64 + 12 >> 2] = 0;
                c[N2 + 48 >> 2] = H2;
                c[N2 + 48 + 4 >> 2] = K2;
                c[N2 + 48 + 8 >> 2] = L2;
                g[N2 + 48 + 12 >> 2] = 0;
                X2 = +g[d2 + 192 >> 2];
                Y2 = +g[d2 + 196 >> 2];
                b2 = ob[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2) | 0;
                L2 = c[(c[b2 >> 2] | 0) + 68 >> 2] | 0;
                c[N2 + 32 >> 2] = 0;
                c[N2 + 32 + 4 >> 2] = 0;
                c[N2 + 32 + 8 >> 2] = 0;
                c[N2 + 32 + 12 >> 2] = 0;
                vb[L2 & 0](b2, d2 + 888 + 48 | 0, N2 + 64 | 0, N2 + 48 | 0, M2, M2, X2, Y2, N2 + 32 | 0, 1, 10);
              }
              i = N2;
              return;
            }
            default: {
              i = N2;
              return;
            }
          }
        }
        function bc(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0;
          Y2 = i;
          i = i + 112 | 0;
          c[Y2 + 40 >> 2] = 0;
          a[Y2 + 16 >> 0] = 1;
          c[Y2 + 12 >> 2] = 0;
          c[Y2 + 4 >> 2] = 0;
          c[Y2 + 8 >> 2] = 0;
          a[Y2 + 36 >> 0] = 1;
          c[Y2 + 32 >> 2] = 0;
          c[Y2 + 24 >> 2] = 0;
          c[Y2 + 28 >> 2] = 0;
          k2 = e2 >>> 0 < 8 ? 8 : e2;
          if ((k2 | 0) > 0) {
            c[6324] = (c[6324] | 0) + 1;
            h2 = ic((k2 << 4 | 3) + 16 | 0) | 0;
            if (!h2)
              h2 = 0;
            else {
              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
              h2 = h2 + 4 + 15 & -16;
            }
            j2 = 0;
            do {
              X2 = h2 + (j2 << 4) | 0;
              c[X2 >> 2] = c[Y2 + 48 >> 2];
              c[X2 + 4 >> 2] = c[Y2 + 48 + 4 >> 2];
              c[X2 + 8 >> 2] = c[Y2 + 48 + 8 >> 2];
              c[X2 + 12 >> 2] = c[Y2 + 48 + 12 >> 2];
              j2 = j2 + 1 | 0;
            } while ((j2 | 0) != (k2 | 0));
            X2 = h2;
          } else
            X2 = 0;
          do
            if (!e2) {
              s2 = 0;
              j2 = 0;
              h2 = 0;
              n2 = 0;
              o2 = 0;
            } else {
              j2 = c[Y2 + 24 >> 2] | 0;
              if ((j2 | 0) < 0) {
                h2 = c[Y2 + 32 >> 2] | 0;
                do
                  if ((c[Y2 + 28 >> 2] | 0) < 0) {
                    if (!h2) {
                      a[Y2 + 36 >> 0] = 1;
                      c[Y2 + 32 >> 2] = 0;
                      c[Y2 + 28 >> 2] = 0;
                      h2 = 0;
                      break;
                    }
                    if (a[Y2 + 36 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[h2 + -4 >> 2] | 0);
                    }
                    a[Y2 + 36 >> 0] = 1;
                    c[Y2 + 32 >> 2] = 0;
                    c[Y2 + 28 >> 2] = 0;
                    h2 = 0;
                  }
                while (0);
                yn(h2 + (j2 << 2) | 0, 0, S(j2, -4) | 0) | 0;
              }
              c[Y2 + 24 >> 2] = 0;
              h2 = d2;
              j2 = 0;
              v2 = 34028234663852886e22;
              p2 = -34028234663852886e22;
              w2 = 34028234663852886e22;
              q2 = -34028234663852886e22;
              x2 = 34028234663852886e22;
              r2 = -34028234663852886e22;
              while (1) {
                P2 = +g[h2 >> 2];
                v2 = P2 < v2 ? P2 : v2;
                p2 = P2 > p2 ? P2 : p2;
                P2 = +g[h2 + 4 >> 2];
                w2 = P2 < w2 ? P2 : w2;
                q2 = P2 > q2 ? P2 : q2;
                P2 = +g[h2 + 8 >> 2];
                x2 = P2 < x2 ? P2 : x2;
                r2 = P2 > r2 ? P2 : r2;
                j2 = j2 + 1 | 0;
                if ((j2 | 0) == (e2 | 0))
                  break;
                else
                  h2 = h2 + 16 | 0;
              }
              O2 = p2 - v2;
              P2 = q2 - w2;
              r2 = r2 - x2;
              B2 = v2 + O2 * 0.5;
              A2 = w2 + P2 * 0.5;
              z2 = x2 + r2 * 0.5;
              do
                if (e2 >>> 0 < 3 | (O2 < 9999999974752427e-22 | P2 < 9999999974752427e-22 | r2 < 9999999974752427e-22)) {
                  v2 = O2 > 9999999974752427e-22 & O2 < 34028234663852886e22 ? O2 : 34028234663852886e22;
                  v2 = P2 > 9999999974752427e-22 & P2 < v2 ? P2 : v2;
                  v2 = r2 > 9999999974752427e-22 & r2 < v2 ? r2 : v2;
                  if (!(v2 == 34028234663852886e22)) {
                    q2 = O2 < 9999999974752427e-22 ? v2 * 0.05000000074505806 : O2;
                    p2 = P2 < 9999999974752427e-22 ? v2 * 0.05000000074505806 : P2;
                    if (r2 < 9999999974752427e-22)
                      r2 = v2 * 0.05000000074505806;
                  } else {
                    r2 = 0.009999999776482582;
                    q2 = 0.009999999776482582;
                    p2 = 0.009999999776482582;
                  }
                  P2 = B2 - q2;
                  O2 = B2 + q2;
                  K2 = A2 - p2;
                  q2 = A2 + p2;
                  p2 = z2 - r2;
                  v2 = z2 + r2;
                  g[X2 >> 2] = P2;
                  g[X2 + 4 >> 2] = K2;
                  g[X2 + 8 >> 2] = p2;
                  g[X2 + 16 >> 2] = O2;
                  g[X2 + 20 >> 2] = K2;
                  g[X2 + 24 >> 2] = p2;
                  g[X2 + 32 >> 2] = O2;
                  g[X2 + 36 >> 2] = q2;
                  g[X2 + 40 >> 2] = p2;
                  g[X2 + 48 >> 2] = P2;
                  g[X2 + 52 >> 2] = q2;
                  g[X2 + 56 >> 2] = p2;
                  g[X2 + 64 >> 2] = P2;
                  g[X2 + 68 >> 2] = K2;
                  g[X2 + 72 >> 2] = v2;
                  g[X2 + 80 >> 2] = O2;
                  g[X2 + 84 >> 2] = K2;
                  g[X2 + 88 >> 2] = v2;
                  g[X2 + 96 >> 2] = O2;
                  g[X2 + 100 >> 2] = q2;
                  g[X2 + 104 >> 2] = v2;
                  g[X2 + 112 >> 2] = P2;
                  g[X2 + 116 >> 2] = q2;
                  g[X2 + 120 >> 2] = v2;
                  v2 = 1;
                  q2 = 1;
                  p2 = 1;
                  U2 = 8;
                  W2 = 53;
                } else {
                  h2 = 0;
                  s2 = 0;
                  o2 = d2;
                  j2 = 0;
                  do {
                    w2 = 1 / O2 * +g[o2 >> 2];
                    x2 = 1 / P2 * +g[o2 + 4 >> 2];
                    y2 = 1 / r2 * +g[o2 + 8 >> 2];
                    o2 = o2 + 16 | 0;
                    a:
                      do
                        if (h2) {
                          k2 = 0;
                          while (1) {
                            d2 = X2 + (k2 << 4) | 0;
                            p2 = +g[d2 >> 2];
                            m2 = X2 + (k2 << 4) + 4 | 0;
                            q2 = +g[m2 >> 2];
                            n2 = X2 + (k2 << 4) + 8 | 0;
                            v2 = +g[n2 >> 2];
                            if (+F(+(p2 - w2)) < 0.0010000000474974513 & +F(+(q2 - x2)) < 0.0010000000474974513 & +F(+(v2 - y2)) < 0.0010000000474974513)
                              break;
                            k2 = k2 + 1 | 0;
                            if (k2 >>> 0 >= h2 >>> 0) {
                              n2 = k2;
                              break a;
                            }
                          }
                          if ((w2 - 1 / O2 * B2) * (w2 - 1 / O2 * B2) + (x2 - 1 / P2 * A2) * (x2 - 1 / P2 * A2) + (y2 - 1 / r2 * z2) * (y2 - 1 / r2 * z2) > (p2 - 1 / O2 * B2) * (p2 - 1 / O2 * B2) + (q2 - 1 / P2 * A2) * (q2 - 1 / P2 * A2) + (v2 - 1 / r2 * z2) * (v2 - 1 / r2 * z2)) {
                            g[d2 >> 2] = w2;
                            g[m2 >> 2] = x2;
                            g[n2 >> 2] = y2;
                            n2 = k2;
                          } else
                            n2 = k2;
                        } else
                          n2 = 0;
                      while (0);
                    if ((n2 | 0) == (h2 | 0)) {
                      g[X2 + (h2 << 4) >> 2] = w2;
                      g[X2 + (h2 << 4) + 4 >> 2] = x2;
                      g[X2 + (h2 << 4) + 8 >> 2] = y2;
                      h2 = h2 + 1 | 0;
                    }
                    if ((j2 | 0) == (c[Y2 + 28 >> 2] | 0) ? (t2 = j2 | 0 ? j2 << 1 : 1, (j2 | 0) < (t2 | 0)) : 0) {
                      if ((t2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, u2 = ic((t2 << 2 | 3) + 16 | 0) | 0, (u2 | 0) != 0) : 0) {
                        c[(u2 + 4 + 15 & -16) + -4 >> 2] = u2;
                        m2 = u2 + 4 + 15 & -16;
                      } else
                        m2 = 0;
                      d2 = c[Y2 + 32 >> 2] | 0;
                      if ((j2 | 0) <= 0) {
                        if (d2)
                          W2 = 39;
                      } else {
                        k2 = 0;
                        do {
                          c[m2 + (k2 << 2) >> 2] = c[d2 + (k2 << 2) >> 2];
                          k2 = k2 + 1 | 0;
                        } while ((k2 | 0) != (j2 | 0));
                        W2 = 39;
                      }
                      if ((W2 | 0) == 39) {
                        W2 = 0;
                        if (a[Y2 + 36 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[d2 + -4 >> 2] | 0);
                        }
                        c[Y2 + 32 >> 2] = 0;
                        j2 = c[Y2 + 24 >> 2] | 0;
                      }
                      a[Y2 + 36 >> 0] = 1;
                      c[Y2 + 32 >> 2] = m2;
                      c[Y2 + 28 >> 2] = t2;
                    }
                    c[(c[Y2 + 32 >> 2] | 0) + (j2 << 2) >> 2] = n2;
                    j2 = (c[Y2 + 24 >> 2] | 0) + 1 | 0;
                    c[Y2 + 24 >> 2] = j2;
                    s2 = s2 + 1 | 0;
                  } while ((s2 | 0) != (e2 | 0));
                  if (!h2) {
                    j2 = 1;
                    y2 = 34028234663852886e22;
                    v2 = -34028234663852886e22;
                    x2 = 34028234663852886e22;
                    q2 = -34028234663852886e22;
                    w2 = 34028234663852886e22;
                    p2 = -34028234663852886e22;
                  } else {
                    j2 = 0;
                    A2 = 34028234663852886e22;
                    y2 = 34028234663852886e22;
                    B2 = -34028234663852886e22;
                    v2 = -34028234663852886e22;
                    E2 = 34028234663852886e22;
                    x2 = 34028234663852886e22;
                    H2 = -34028234663852886e22;
                    q2 = -34028234663852886e22;
                    J2 = 34028234663852886e22;
                    w2 = 34028234663852886e22;
                    K2 = -34028234663852886e22;
                    p2 = -34028234663852886e22;
                    while (1) {
                      z2 = +g[X2 + (j2 << 4) >> 2];
                      k2 = z2 < A2;
                      y2 = k2 ? z2 : y2;
                      d2 = z2 > B2;
                      v2 = d2 ? z2 : v2;
                      C2 = +g[X2 + (j2 << 4) + 4 >> 2];
                      m2 = C2 < E2;
                      x2 = m2 ? C2 : x2;
                      n2 = C2 > H2;
                      q2 = n2 ? C2 : q2;
                      I2 = +g[X2 + (j2 << 4) + 8 >> 2];
                      o2 = I2 < J2;
                      w2 = o2 ? I2 : w2;
                      s2 = I2 > K2;
                      p2 = s2 ? I2 : p2;
                      j2 = j2 + 1 | 0;
                      if ((j2 | 0) == (h2 | 0))
                        break;
                      else {
                        A2 = k2 ? z2 : A2;
                        B2 = d2 ? z2 : B2;
                        E2 = m2 ? C2 : E2;
                        H2 = n2 ? C2 : H2;
                        J2 = o2 ? I2 : J2;
                        K2 = s2 ? I2 : K2;
                      }
                    }
                    j2 = h2 >>> 0 < 3;
                  }
                  A2 = v2 - y2;
                  q2 = q2 - x2;
                  v2 = p2 - w2;
                  if (!(j2 | (A2 < 9999999974752427e-22 | q2 < 9999999974752427e-22 | v2 < 9999999974752427e-22))) {
                    if (h2 | 0) {
                      v2 = O2;
                      q2 = P2;
                      p2 = r2;
                      U2 = h2;
                      W2 = 53;
                      break;
                    }
                    break;
                  }
                  z2 = y2 + A2 * 0.5;
                  y2 = x2 + q2 * 0.5;
                  x2 = w2 + v2 * 0.5;
                  w2 = A2 >= 9999999974752427e-22 & A2 < 34028234663852886e22 ? A2 : 34028234663852886e22;
                  w2 = q2 >= 9999999974752427e-22 & q2 < w2 ? q2 : w2;
                  w2 = v2 >= 9999999974752427e-22 & v2 < w2 ? v2 : w2;
                  if (!(w2 == 34028234663852886e22)) {
                    p2 = A2 < 9999999974752427e-22 ? w2 * 0.05000000074505806 : A2;
                    q2 = q2 < 9999999974752427e-22 ? w2 * 0.05000000074505806 : q2;
                    if (v2 < 9999999974752427e-22)
                      v2 = w2 * 0.05000000074505806;
                  } else {
                    v2 = 0.009999999776482582;
                    q2 = 0.009999999776482582;
                    p2 = 0.009999999776482582;
                  }
                  K2 = z2 - p2;
                  p2 = z2 + p2;
                  J2 = y2 - q2;
                  q2 = y2 + q2;
                  I2 = x2 - v2;
                  v2 = x2 + v2;
                  g[X2 >> 2] = K2;
                  g[X2 + 4 >> 2] = J2;
                  g[X2 + 8 >> 2] = I2;
                  g[X2 + 16 >> 2] = p2;
                  g[X2 + 20 >> 2] = J2;
                  g[X2 + 24 >> 2] = I2;
                  g[X2 + 32 >> 2] = p2;
                  g[X2 + 36 >> 2] = q2;
                  g[X2 + 40 >> 2] = I2;
                  g[X2 + 48 >> 2] = K2;
                  g[X2 + 52 >> 2] = q2;
                  g[X2 + 56 >> 2] = I2;
                  g[X2 + 64 >> 2] = K2;
                  g[X2 + 68 >> 2] = J2;
                  g[X2 + 72 >> 2] = v2;
                  g[X2 + 80 >> 2] = p2;
                  g[X2 + 84 >> 2] = J2;
                  g[X2 + 88 >> 2] = v2;
                  g[X2 + 96 >> 2] = p2;
                  g[X2 + 100 >> 2] = q2;
                  g[X2 + 104 >> 2] = v2;
                  g[X2 + 112 >> 2] = K2;
                  g[X2 + 116 >> 2] = q2;
                  g[X2 + 120 >> 2] = v2;
                  v2 = O2;
                  q2 = P2;
                  p2 = r2;
                  U2 = 8;
                  W2 = 53;
                }
              while (0);
              if ((W2 | 0) == 53) {
                h2 = 0;
                do {
                  V2 = X2 + (h2 << 4) | 0;
                  g[V2 >> 2] = v2 * +g[V2 >> 2];
                  V2 = X2 + (h2 << 4) + 4 | 0;
                  g[V2 >> 2] = q2 * +g[V2 >> 2];
                  V2 = X2 + (h2 << 4) + 8 | 0;
                  g[V2 >> 2] = p2 * +g[V2 >> 2];
                  h2 = h2 + 1 | 0;
                } while (h2 >>> 0 < U2 >>> 0);
                if ((U2 | 0) >= 4) {
                  p2 = +g[X2 >> 2];
                  r2 = +g[X2 + 4 >> 2];
                  q2 = +g[X2 + 8 >> 2];
                  V2 = U2 << 2;
                  c[6324] = (c[6324] | 0) + 1;
                  h2 = ic((V2 | 3) + 16 | 0) | 0;
                  if (!h2)
                    k2 = 0;
                  else {
                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                    k2 = h2 + 4 + 15 & -16;
                  }
                  c[Y2 + 48 >> 2] = 0;
                  c[6324] = (c[6324] | 0) + 1;
                  j2 = ic((V2 | 3) + 16 | 0) | 0;
                  if (j2) {
                    c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                    h2 = c[Y2 + 48 >> 2] | 0;
                    if (!h2) {
                      h2 = j2 + 4 + 15 & -16;
                      W2 = 59;
                    } else {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[h2 + -4 >> 2] | 0);
                      c[Y2 + 48 >> 2] = j2 + 4 + 15 & -16;
                    }
                  } else {
                    h2 = 0;
                    W2 = 59;
                  }
                  if ((W2 | 0) == 59)
                    c[Y2 + 48 >> 2] = h2;
                  y2 = p2;
                  w2 = p2;
                  x2 = q2;
                  v2 = q2;
                  m2 = U2;
                  o2 = 0;
                  q2 = r2;
                  p2 = r2;
                  h2 = U2;
                  while (1) {
                    if ((o2 | 0) == (h2 | 0) ? (D2 = o2 | 0 ? o2 << 1 : 1, (o2 | 0) < (D2 | 0)) : 0) {
                      if ((D2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, L2 = ic((D2 << 2 | 3) + 16 | 0) | 0, (L2 | 0) != 0) : 0) {
                        c[(L2 + 4 + 15 & -16) + -4 >> 2] = L2;
                        j2 = L2 + 4 + 15 & -16;
                      } else
                        j2 = 0;
                      d2 = c[Y2 + 48 >> 2] | 0;
                      if ((o2 | 0) <= 0) {
                        if (d2 | 0)
                          W2 = 70;
                      } else {
                        h2 = 0;
                        do {
                          c[j2 + (h2 << 2) >> 2] = c[d2 + (h2 << 2) >> 2];
                          h2 = h2 + 1 | 0;
                        } while ((h2 | 0) != (o2 | 0));
                        W2 = 70;
                      }
                      if ((W2 | 0) == 70) {
                        W2 = 0;
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[d2 + -4 >> 2] | 0);
                        c[Y2 + 48 >> 2] = 0;
                      }
                      c[Y2 + 48 >> 2] = j2;
                      h2 = D2;
                    }
                    c[(c[Y2 + 48 >> 2] | 0) + (o2 << 2) >> 2] = 1;
                    n2 = o2;
                    o2 = o2 + 1 | 0;
                    do
                      if ((n2 | 0) == (m2 | 0)) {
                        d2 = n2 | 0 ? n2 << 1 : 1;
                        if ((n2 | 0) < (d2 | 0)) {
                          if ((d2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, M2 = ic((d2 << 2 | 3) + 16 | 0) | 0, (M2 | 0) != 0) : 0) {
                            c[(M2 + 4 + 15 & -16) + -4 >> 2] = M2;
                            m2 = M2 + 4 + 15 & -16;
                          } else
                            m2 = 0;
                          if ((n2 | 0) <= 0) {
                            if (!k2) {
                              j2 = d2;
                              Q2 = m2;
                              break;
                            }
                          } else {
                            j2 = 0;
                            do {
                              c[m2 + (j2 << 2) >> 2] = c[k2 + (j2 << 2) >> 2];
                              j2 = j2 + 1 | 0;
                            } while ((j2 | 0) != (n2 | 0));
                          }
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[k2 + -4 >> 2] | 0);
                          j2 = d2;
                          Q2 = m2;
                        } else {
                          j2 = n2;
                          Q2 = k2;
                        }
                      } else {
                        j2 = m2;
                        Q2 = k2;
                      }
                    while (0);
                    c[Q2 + (n2 << 2) >> 2] = 0;
                    K2 = +g[X2 + (n2 << 4) >> 2];
                    w2 = K2 < w2 ? K2 : w2;
                    O2 = +g[X2 + (n2 << 4) + 4 >> 2];
                    p2 = O2 < p2 ? O2 : p2;
                    P2 = +g[X2 + (n2 << 4) + 8 >> 2];
                    v2 = P2 < v2 ? P2 : v2;
                    y2 = y2 < K2 ? K2 : y2;
                    q2 = q2 < O2 ? O2 : q2;
                    x2 = x2 < P2 ? P2 : x2;
                    if ((o2 | 0) >= (U2 | 0))
                      break;
                    else {
                      m2 = j2;
                      k2 = Q2;
                    }
                  }
                  y2 = y2 - w2;
                  w2 = q2 - p2;
                  J2 = x2 - v2;
                  J2 = +G(+(y2 * y2 + w2 * w2 + J2 * J2)) * 0.0010000000474974513;
                  M2 = Ce(X2, U2, 0.009999999776482582, 0.019999999552965164, 1, c[Y2 + 48 >> 2] | 0) | 0;
                  n2 = c[Y2 + 48 >> 2] | 0;
                  N2 = Ce(X2, U2, -0.009999999776482582, -0.019999999552965164, -1, n2) | 0;
                  o2 = X2 + (M2 << 4) | 0;
                  s2 = X2 + (N2 << 4) | 0;
                  w2 = +g[o2 >> 2] - +g[s2 >> 2];
                  t2 = X2 + (M2 << 4) + 4 | 0;
                  u2 = X2 + (N2 << 4) + 4 | 0;
                  x2 = +g[t2 >> 2] - +g[u2 >> 2];
                  D2 = X2 + (M2 << 4) + 8 | 0;
                  L2 = X2 + (N2 << 4) + 8 | 0;
                  y2 = +g[D2 >> 2] - +g[L2 >> 2];
                  b:
                    do
                      if ((M2 | 0) != (N2 | 0) ? !(y2 == 0 & x2 == 0 & w2 == 0) : 0) {
                        p2 = +G(+((y2 * 0.019999999552965164 - x2 * 0) * (y2 * 0.019999999552965164 - x2 * 0) + (w2 * 0 - y2) * (w2 * 0 - y2) + (x2 - w2 * 0.019999999552965164) * (x2 - w2 * 0.019999999552965164)));
                        q2 = +G(+((y2 - x2 * 0) * (y2 - x2 * 0) + (y2 * 0.019999999552965164 + w2 * 0) * (y2 * 0.019999999552965164 + w2 * 0) + (x2 * -0.019999999552965164 - w2) * (x2 * -0.019999999552965164 - w2)));
                        if (p2 > q2) {
                          r2 = (y2 * 0.019999999552965164 - x2 * 0) * (1 / p2);
                          v2 = (w2 * 0 - y2) * (1 / p2);
                          p2 = (x2 - w2 * 0.019999999552965164) * (1 / p2);
                        } else {
                          r2 = (y2 - x2 * 0) * (1 / q2);
                          v2 = (y2 * 0.019999999552965164 + w2 * 0) * (1 / q2);
                          p2 = (x2 * -0.019999999552965164 - w2) * (1 / q2);
                        }
                        h2 = Ce(X2, U2, r2, v2, p2, n2) | 0;
                        if ((h2 | 0) == (M2 | 0) | (h2 | 0) == (N2 | 0))
                          j2 = Ce(X2, U2, -r2, -v2, -p2, n2) | 0;
                        else
                          j2 = h2;
                        if (!((j2 | 0) == (M2 | 0) | (j2 | 0) == (N2 | 0))) {
                          k2 = X2 + (j2 << 4) | 0;
                          p2 = +g[k2 >> 2] - +g[o2 >> 2];
                          d2 = X2 + (j2 << 4) + 4 | 0;
                          q2 = +g[d2 >> 2] - +g[t2 >> 2];
                          m2 = X2 + (j2 << 4) + 8 | 0;
                          r2 = +g[m2 >> 2] - +g[D2 >> 2];
                          v2 = 1 / +G(+((x2 * p2 - q2 * w2) * (x2 * p2 - q2 * w2) + ((q2 * y2 - r2 * x2) * (q2 * y2 - r2 * x2) + (r2 * w2 - y2 * p2) * (r2 * w2 - y2 * p2))));
                          h2 = Ce(X2, U2, (q2 * y2 - r2 * x2) * v2, (r2 * w2 - y2 * p2) * v2, (x2 * p2 - q2 * w2) * v2, n2) | 0;
                          if ((h2 | 0) == (j2 | 0) | ((h2 | 0) == (M2 | 0) | (h2 | 0) == (N2 | 0)))
                            h2 = Ce(X2, U2, -((q2 * y2 - r2 * x2) * v2), -((r2 * w2 - y2 * p2) * v2), -((x2 * p2 - q2 * w2) * v2), n2) | 0;
                          if (!((h2 | 0) == (j2 | 0) | ((h2 | 0) == (M2 | 0) | (h2 | 0) == (N2 | 0))) ? (B2 = +g[o2 >> 2], H2 = +g[t2 >> 2], A2 = +g[D2 >> 2], O2 = +g[s2 >> 2] - B2, C2 = +g[u2 >> 2] - H2, I2 = +g[L2 >> 2] - A2, K2 = +g[k2 >> 2] - B2, E2 = +g[d2 >> 2] - H2, P2 = +g[m2 >> 2] - A2, R2 = (+g[X2 + (h2 << 4) + 8 >> 2] - A2) * (O2 * E2 - C2 * K2) + ((+g[X2 + (h2 << 4) >> 2] - B2) * (C2 * P2 - I2 * E2) + (+g[X2 + (h2 << 4) + 4 >> 2] - H2) * (I2 * K2 - O2 * P2)) < 0, T2 = R2 ? j2 : h2, R2 = R2 ? h2 : j2, (M2 | 0) != -1) : 0) {
                            E2 = (+g[X2 + (M2 << 4) >> 2] + +g[X2 + (N2 << 4) >> 2] + +g[X2 + (R2 << 4) >> 2] + +g[X2 + (T2 << 4) >> 2]) * 0.25;
                            H2 = (+g[X2 + (M2 << 4) + 4 >> 2] + +g[X2 + (N2 << 4) + 4 >> 2] + +g[X2 + (R2 << 4) + 4 >> 2] + +g[X2 + (T2 << 4) + 4 >> 2]) * 0.25;
                            I2 = (+g[X2 + (M2 << 4) + 8 >> 2] + +g[X2 + (N2 << 4) + 8 >> 2] + +g[X2 + (R2 << 4) + 8 >> 2] + +g[X2 + (T2 << 4) + 8 >> 2]) * 0.25;
                            h2 = Kh(Y2, R2, T2, N2) | 0;
                            c[h2 + 12 >> 2] = 2;
                            c[h2 + 16 >> 2] = 3;
                            c[h2 + 20 >> 2] = 1;
                            h2 = Kh(Y2, T2, R2, M2) | 0;
                            c[h2 + 12 >> 2] = 3;
                            c[h2 + 16 >> 2] = 2;
                            c[h2 + 20 >> 2] = 0;
                            h2 = Kh(Y2, M2, N2, T2) | 0;
                            c[h2 + 12 >> 2] = 0;
                            c[h2 + 16 >> 2] = 1;
                            c[h2 + 20 >> 2] = 3;
                            h2 = Kh(Y2, N2, M2, R2) | 0;
                            c[h2 + 12 >> 2] = 1;
                            c[h2 + 16 >> 2] = 0;
                            c[h2 + 20 >> 2] = 2;
                            c[Q2 + (T2 << 2) >> 2] = 1;
                            c[Q2 + (R2 << 2) >> 2] = 1;
                            c[Q2 + (N2 << 2) >> 2] = 1;
                            c[Q2 + (M2 << 2) >> 2] = 1;
                            h2 = c[Y2 + 4 >> 2] | 0;
                            if ((h2 | 0) > 0) {
                              n2 = c[Y2 + 12 >> 2] | 0;
                              m2 = 0;
                              do {
                                d2 = c[n2 + (m2 << 2) >> 2] | 0;
                                R2 = c[d2 >> 2] | 0;
                                N2 = c[d2 + 4 >> 2] | 0;
                                T2 = c[d2 + 8 >> 2] | 0;
                                w2 = +g[X2 + (N2 << 4) >> 2];
                                r2 = w2 - +g[X2 + (R2 << 4) >> 2];
                                x2 = +g[X2 + (N2 << 4) + 4 >> 2];
                                v2 = x2 - +g[X2 + (R2 << 4) + 4 >> 2];
                                q2 = +g[X2 + (N2 << 4) + 8 >> 2];
                                p2 = q2 - +g[X2 + (R2 << 4) + 8 >> 2];
                                w2 = +g[X2 + (T2 << 4) >> 2] - w2;
                                x2 = +g[X2 + (T2 << 4) + 4 >> 2] - x2;
                                q2 = +g[X2 + (T2 << 4) + 8 >> 2] - q2;
                                y2 = +G(+((r2 * x2 - v2 * w2) * (r2 * x2 - v2 * w2) + ((v2 * q2 - p2 * x2) * (v2 * q2 - p2 * x2) + (p2 * w2 - r2 * q2) * (p2 * w2 - r2 * q2))));
                                if (y2 == 0) {
                                  k2 = 1065353216;
                                  h2 = 0;
                                  j2 = 0;
                                } else {
                                  k2 = (g[l >> 2] = 1 / y2 * (v2 * q2 - p2 * x2), c[l >> 2] | 0);
                                  j2 = (g[l >> 2] = 1 / y2 * (p2 * w2 - r2 * q2), c[l >> 2] | 0);
                                  h2 = (g[l >> 2] = 1 / y2 * (r2 * x2 - v2 * w2), c[l >> 2] | 0);
                                }
                                K2 = (c[l >> 2] = k2, +g[l >> 2]);
                                O2 = (c[l >> 2] = j2, +g[l >> 2]);
                                P2 = (c[l >> 2] = h2, +g[l >> 2]);
                                T2 = Ce(X2, U2, K2, O2, P2, c[Y2 + 48 >> 2] | 0) | 0;
                                c[d2 + 28 >> 2] = T2;
                                h2 = c[d2 >> 2] | 0;
                                g[d2 + 32 >> 2] = (+g[X2 + (T2 << 4) >> 2] - +g[X2 + (h2 << 4) >> 2]) * K2 + (+g[X2 + (T2 << 4) + 4 >> 2] - +g[X2 + (h2 << 4) + 4 >> 2]) * O2 + (+g[X2 + (T2 << 4) + 8 >> 2] - +g[X2 + (h2 << 4) + 8 >> 2]) * P2;
                                m2 = m2 + 1 | 0;
                                h2 = c[Y2 + 4 >> 2] | 0;
                              } while ((m2 | 0) < (h2 | 0));
                            }
                            if ((e2 + -4 | 0) > 0) {
                              s2 = e2 + -4 | 0;
                              while (1) {
                                m2 = c[Y2 + 12 >> 2] | 0;
                                d2 = 0;
                                j2 = 0;
                                do {
                                  k2 = c[m2 + (d2 << 2) >> 2] | 0;
                                  do
                                    if (j2) {
                                      if (!k2)
                                        break;
                                      if (+g[j2 + 32 >> 2] < +g[k2 + 32 >> 2])
                                        W2 = 105;
                                    } else
                                      W2 = 105;
                                  while (0);
                                  if ((W2 | 0) == 105) {
                                    W2 = 0;
                                    j2 = k2;
                                  }
                                  d2 = d2 + 1 | 0;
                                } while ((d2 | 0) < (h2 | 0));
                                if ((j2 | 0) == 0 ? 1 : !(+g[j2 + 32 >> 2] > J2)) {
                                  h2 = 1;
                                  break b;
                                }
                                o2 = c[j2 + 28 >> 2] | 0;
                                c[Q2 + (o2 << 2) >> 2] = 1;
                                h2 = c[Y2 + 4 >> 2] | 0;
                                c:
                                  do
                                    if (h2 | 0) {
                                      k2 = X2 + (o2 << 4) | 0;
                                      d2 = X2 + (o2 << 4) + 4 | 0;
                                      n2 = X2 + (o2 << 4) + 8 | 0;
                                      j2 = m2;
                                      while (1) {
                                        h2 = h2 + -1 | 0;
                                        j2 = c[j2 + (h2 << 2) >> 2] | 0;
                                        do
                                          if (j2 | 0) {
                                            T2 = c[j2 >> 2] | 0;
                                            R2 = c[j2 + 4 >> 2] | 0;
                                            e2 = c[j2 + 8 >> 2] | 0;
                                            r2 = +g[X2 + (R2 << 4) >> 2];
                                            A2 = +g[X2 + (T2 << 4) >> 2];
                                            v2 = +g[X2 + (R2 << 4) + 4 >> 2];
                                            B2 = +g[X2 + (T2 << 4) + 4 >> 2];
                                            p2 = +g[X2 + (R2 << 4) + 8 >> 2];
                                            C2 = +g[X2 + (T2 << 4) + 8 >> 2];
                                            w2 = +g[X2 + (e2 << 4) >> 2] - r2;
                                            x2 = +g[X2 + (e2 << 4) + 4 >> 2] - v2;
                                            q2 = +g[X2 + (e2 << 4) + 8 >> 2] - p2;
                                            y2 = +G(+(((r2 - A2) * x2 - (v2 - B2) * w2) * ((r2 - A2) * x2 - (v2 - B2) * w2) + (((v2 - B2) * q2 - (p2 - C2) * x2) * ((v2 - B2) * q2 - (p2 - C2) * x2) + ((p2 - C2) * w2 - (r2 - A2) * q2) * ((p2 - C2) * w2 - (r2 - A2) * q2))));
                                            if (y2 == 0) {
                                              z2 = 1;
                                              q2 = 0;
                                              p2 = 0;
                                            } else {
                                              z2 = 1 / y2 * ((v2 - B2) * q2 - (p2 - C2) * x2);
                                              q2 = 1 / y2 * ((p2 - C2) * w2 - (r2 - A2) * q2);
                                              p2 = 1 / y2 * ((r2 - A2) * x2 - (v2 - B2) * w2);
                                            }
                                            if (!(z2 * (+g[k2 >> 2] - A2) + q2 * (+g[d2 >> 2] - B2) + p2 * (+g[n2 >> 2] - C2) > J2 * 0.009999999776482582))
                                              break;
                                            ee(Y2, j2, o2);
                                          }
                                        while (0);
                                        if (!h2)
                                          break;
                                        j2 = c[Y2 + 12 >> 2] | 0;
                                      }
                                      h2 = c[Y2 + 4 >> 2] | 0;
                                      if (!h2)
                                        break;
                                      else
                                        j2 = h2;
                                      d:
                                        do {
                                          j2 = j2 + -1 | 0;
                                          m2 = c[Y2 + 12 >> 2] | 0;
                                          n2 = c[m2 + (j2 << 2) >> 2] | 0;
                                          do
                                            if (n2) {
                                              d2 = c[n2 >> 2] | 0;
                                              do
                                                if ((d2 | 0) != (o2 | 0)) {
                                                  k2 = c[n2 + 4 >> 2] | 0;
                                                  if ((k2 | 0) == (o2 | 0)) {
                                                    k2 = o2;
                                                    break;
                                                  }
                                                  if ((c[n2 + 8 >> 2] | 0) != (o2 | 0))
                                                    break d;
                                                } else
                                                  k2 = c[n2 + 4 >> 2] | 0;
                                              while (0);
                                              e2 = c[n2 + 8 >> 2] | 0;
                                              z2 = +g[X2 + (k2 << 4) >> 2];
                                              B2 = +g[X2 + (d2 << 4) >> 2];
                                              A2 = +g[X2 + (k2 << 4) + 4 >> 2];
                                              C2 = +g[X2 + (d2 << 4) + 4 >> 2];
                                              q2 = +g[X2 + (k2 << 4) + 8 >> 2];
                                              x2 = +g[X2 + (d2 << 4) + 8 >> 2];
                                              r2 = +g[X2 + (e2 << 4) >> 2] - z2;
                                              v2 = +g[X2 + (e2 << 4) + 4 >> 2] - A2;
                                              p2 = +g[X2 + (e2 << 4) + 8 >> 2] - q2;
                                              y2 = +G(+(((z2 - B2) * v2 - (A2 - C2) * r2) * ((z2 - B2) * v2 - (A2 - C2) * r2) + (((A2 - C2) * p2 - (q2 - x2) * v2) * ((A2 - C2) * p2 - (q2 - x2) * v2) + ((q2 - x2) * r2 - (z2 - B2) * p2) * ((q2 - x2) * r2 - (z2 - B2) * p2))));
                                              if (y2 == 0) {
                                                w2 = 1;
                                                q2 = 0;
                                                p2 = 0;
                                              } else {
                                                w2 = 1 / y2 * ((A2 - C2) * p2 - (q2 - x2) * v2);
                                                q2 = 1 / y2 * ((q2 - x2) * r2 - (z2 - B2) * p2);
                                                p2 = 1 / y2 * ((z2 - B2) * v2 - (A2 - C2) * r2);
                                              }
                                              if (!(y2 < J2 * J2 * 0.10000000149011612 ? 1 : (E2 - B2) * w2 + (H2 - C2) * q2 + (I2 - x2) * p2 > J2 * 0.009999999776482582))
                                                break;
                                              ee(Y2, c[m2 + (c[n2 + 12 >> 2] << 2) >> 2] | 0, o2);
                                              h2 = c[Y2 + 4 >> 2] | 0;
                                              j2 = h2;
                                            }
                                          while (0);
                                        } while ((j2 | 0) != 0);
                                      if (!h2)
                                        break;
                                      n2 = c[Y2 + 12 >> 2] | 0;
                                      do {
                                        h2 = h2 + -1 | 0;
                                        m2 = c[n2 + (h2 << 2) >> 2] | 0;
                                        do
                                          if (m2 | 0) {
                                            if ((c[m2 + 28 >> 2] | 0) > -1)
                                              break c;
                                            T2 = c[m2 >> 2] | 0;
                                            R2 = c[m2 + 4 >> 2] | 0;
                                            e2 = c[m2 + 8 >> 2] | 0;
                                            w2 = +g[X2 + (R2 << 4) >> 2];
                                            r2 = w2 - +g[X2 + (T2 << 4) >> 2];
                                            x2 = +g[X2 + (R2 << 4) + 4 >> 2];
                                            v2 = x2 - +g[X2 + (T2 << 4) + 4 >> 2];
                                            q2 = +g[X2 + (R2 << 4) + 8 >> 2];
                                            p2 = q2 - +g[X2 + (T2 << 4) + 8 >> 2];
                                            w2 = +g[X2 + (e2 << 4) >> 2] - w2;
                                            x2 = +g[X2 + (e2 << 4) + 4 >> 2] - x2;
                                            q2 = +g[X2 + (e2 << 4) + 8 >> 2] - q2;
                                            y2 = +G(+((r2 * x2 - v2 * w2) * (r2 * x2 - v2 * w2) + ((v2 * q2 - p2 * x2) * (v2 * q2 - p2 * x2) + (p2 * w2 - r2 * q2) * (p2 * w2 - r2 * q2))));
                                            if (y2 == 0) {
                                              d2 = 1065353216;
                                              k2 = 0;
                                              j2 = 0;
                                            } else {
                                              d2 = (g[l >> 2] = 1 / y2 * (v2 * q2 - p2 * x2), c[l >> 2] | 0);
                                              j2 = (g[l >> 2] = 1 / y2 * (p2 * w2 - r2 * q2), c[l >> 2] | 0);
                                              k2 = (g[l >> 2] = 1 / y2 * (r2 * x2 - v2 * w2), c[l >> 2] | 0);
                                            }
                                            r2 = (c[l >> 2] = d2, +g[l >> 2]);
                                            q2 = (c[l >> 2] = j2, +g[l >> 2]);
                                            p2 = (c[l >> 2] = k2, +g[l >> 2]);
                                            j2 = Ce(X2, U2, r2, q2, p2, c[Y2 + 48 >> 2] | 0) | 0;
                                            c[m2 + 28 >> 2] = j2;
                                            if (!(c[Q2 + (j2 << 2) >> 2] | 0)) {
                                              e2 = c[m2 >> 2] | 0;
                                              g[m2 + 32 >> 2] = (+g[X2 + (j2 << 4) >> 2] - +g[X2 + (e2 << 4) >> 2]) * r2 + (+g[X2 + (j2 << 4) + 4 >> 2] - +g[X2 + (e2 << 4) + 4 >> 2]) * q2 + (+g[X2 + (j2 << 4) + 8 >> 2] - +g[X2 + (e2 << 4) + 8 >> 2]) * p2;
                                              break;
                                            } else {
                                              c[m2 + 28 >> 2] = -1;
                                              break;
                                            }
                                          }
                                        while (0);
                                      } while ((h2 | 0) != 0);
                                    }
                                  while (0);
                                if ((s2 | 0) <= 1) {
                                  h2 = 1;
                                  break b;
                                }
                                s2 = s2 + -1 | 0;
                                h2 = c[Y2 + 4 >> 2] | 0;
                              }
                            } else
                              h2 = 1;
                          } else
                            h2 = 0;
                        } else
                          h2 = 0;
                      } else
                        h2 = 0;
                    while (0);
                  j2 = c[Y2 + 48 >> 2] | 0;
                  if (j2 | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[j2 + -4 >> 2] | 0);
                    c[Y2 + 48 >> 2] = 0;
                  }
                  if (Q2 | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[Q2 + -4 >> 2] | 0);
                  }
                  if (h2) {
                    h2 = c[Y2 + 4 >> 2] | 0;
                    if ((h2 | 0) > 0) {
                      t2 = 0;
                      o2 = 0;
                      k2 = 0;
                      d2 = 0;
                      j2 = c[Y2 + 12 >> 2] | 0;
                      while (1) {
                        n2 = c[j2 + (t2 << 2) >> 2] | 0;
                        if (!n2)
                          m2 = o2;
                        else {
                          do
                            if ((d2 | 0) == (o2 | 0)) {
                              m2 = o2 | 0 ? o2 << 1 : 1;
                              if ((o2 | 0) >= (m2 | 0)) {
                                m2 = o2;
                                break;
                              }
                              do
                                if (!m2)
                                  j2 = 0;
                                else {
                                  c[6324] = (c[6324] | 0) + 1;
                                  h2 = ic((m2 << 2 | 3) + 16 | 0) | 0;
                                  if (!h2) {
                                    j2 = 0;
                                    break;
                                  }
                                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                  j2 = h2 + 4 + 15 & -16;
                                }
                              while (0);
                              if ((o2 | 0) <= 0) {
                                if (!k2) {
                                  k2 = j2;
                                  break;
                                }
                              } else {
                                h2 = 0;
                                do {
                                  c[j2 + (h2 << 2) >> 2] = c[k2 + (h2 << 2) >> 2];
                                  h2 = h2 + 1 | 0;
                                } while ((h2 | 0) != (o2 | 0));
                              }
                              c[6325] = (c[6325] | 0) + 1;
                              Rc(c[k2 + -4 >> 2] | 0);
                              k2 = j2;
                            } else
                              m2 = o2;
                          while (0);
                          c[k2 + (d2 << 2) >> 2] = c[n2 >> 2];
                          o2 = d2 + 1 | 0;
                          s2 = (c[(c[Y2 + 12 >> 2] | 0) + (t2 << 2) >> 2] | 0) + 4 | 0;
                          do
                            if ((o2 | 0) == (m2 | 0)) {
                              n2 = m2 | 0 ? m2 << 1 : 1;
                              if ((m2 | 0) >= (n2 | 0))
                                break;
                              do
                                if (!n2)
                                  j2 = 0;
                                else {
                                  c[6324] = (c[6324] | 0) + 1;
                                  h2 = ic((n2 << 2 | 3) + 16 | 0) | 0;
                                  if (!h2) {
                                    j2 = 0;
                                    break;
                                  }
                                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                  j2 = h2 + 4 + 15 & -16;
                                }
                              while (0);
                              if ((m2 | 0) <= 0) {
                                if (!k2) {
                                  m2 = n2;
                                  k2 = j2;
                                  break;
                                }
                              } else {
                                h2 = 0;
                                do {
                                  c[j2 + (h2 << 2) >> 2] = c[k2 + (h2 << 2) >> 2];
                                  h2 = h2 + 1 | 0;
                                } while ((h2 | 0) != (m2 | 0));
                              }
                              c[6325] = (c[6325] | 0) + 1;
                              Rc(c[k2 + -4 >> 2] | 0);
                              m2 = n2;
                              k2 = j2;
                            }
                          while (0);
                          c[k2 + (o2 << 2) >> 2] = c[s2 >> 2];
                          o2 = d2 + 2 | 0;
                          s2 = (c[(c[Y2 + 12 >> 2] | 0) + (t2 << 2) >> 2] | 0) + 8 | 0;
                          do
                            if ((o2 | 0) == (m2 | 0)) {
                              n2 = m2 | 0 ? m2 << 1 : 1;
                              if ((m2 | 0) >= (n2 | 0))
                                break;
                              do
                                if (!n2)
                                  j2 = 0;
                                else {
                                  c[6324] = (c[6324] | 0) + 1;
                                  h2 = ic((n2 << 2 | 3) + 16 | 0) | 0;
                                  if (!h2) {
                                    j2 = 0;
                                    break;
                                  }
                                  c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                  j2 = h2 + 4 + 15 & -16;
                                }
                              while (0);
                              if ((m2 | 0) <= 0) {
                                if (!k2) {
                                  m2 = n2;
                                  k2 = j2;
                                  break;
                                }
                              } else {
                                h2 = 0;
                                do {
                                  c[j2 + (h2 << 2) >> 2] = c[k2 + (h2 << 2) >> 2];
                                  h2 = h2 + 1 | 0;
                                } while ((h2 | 0) != (m2 | 0));
                              }
                              c[6325] = (c[6325] | 0) + 1;
                              Rc(c[k2 + -4 >> 2] | 0);
                              m2 = n2;
                              k2 = j2;
                            }
                          while (0);
                          c[k2 + (o2 << 2) >> 2] = c[s2 >> 2];
                          j2 = c[Y2 + 12 >> 2] | 0;
                          h2 = c[j2 + (t2 << 2) >> 2] | 0;
                          c[j2 + (c[h2 + 24 >> 2] << 2) >> 2] = 0;
                          if (h2 | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[h2 + -4 >> 2] | 0);
                          }
                          d2 = d2 + 3 | 0;
                          h2 = c[Y2 + 4 >> 2] | 0;
                        }
                        t2 = t2 + 1 | 0;
                        if ((t2 | 0) >= (h2 | 0))
                          break;
                        else
                          o2 = m2;
                      }
                      c[Y2 + 44 >> 2] = (d2 | 0) / 3 | 0;
                      if ((d2 | 0) > 0) {
                        c[6324] = (c[6324] | 0) + 1;
                        h2 = ic((d2 << 2 | 3) + 16 | 0) | 0;
                        if (!h2)
                          h2 = 0;
                        else {
                          c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                          h2 = h2 + 4 + 15 & -16;
                        }
                        yn(h2 | 0, 0, d2 << 2 | 0) | 0;
                        j2 = 0;
                        do {
                          c[h2 + (j2 << 2) >> 2] = c[k2 + (j2 << 2) >> 2];
                          j2 = j2 + 1 | 0;
                        } while ((j2 | 0) != (d2 | 0));
                        m2 = k2;
                        L2 = d2;
                      } else {
                        m2 = k2;
                        h2 = 0;
                        L2 = d2;
                      }
                    } else {
                      c[Y2 + 44 >> 2] = 0;
                      m2 = 0;
                      h2 = 0;
                      L2 = 0;
                    }
                    j2 = c[Y2 + 4 >> 2] | 0;
                    if ((j2 | 0) < 0) {
                      if ((c[Y2 + 8 >> 2] | 0) < 0) {
                        k2 = c[Y2 + 12 >> 2] | 0;
                        if (k2 | 0) {
                          if (a[Y2 + 16 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[k2 + -4 >> 2] | 0);
                          }
                          c[Y2 + 12 >> 2] = 0;
                        }
                        a[Y2 + 16 >> 0] = 1;
                        c[Y2 + 12 >> 2] = 0;
                        c[Y2 + 8 >> 2] = 0;
                      }
                      do {
                        c[(c[Y2 + 12 >> 2] | 0) + (j2 << 2) >> 2] = 0;
                        j2 = j2 + 1 | 0;
                      } while ((j2 | 0) != 0);
                    }
                    c[Y2 + 4 >> 2] = 0;
                    if (m2 | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[m2 + -4 >> 2] | 0);
                    }
                    M2 = c[Y2 + 44 >> 2] | 0;
                    m2 = (U2 | 0) > 0;
                    if (m2) {
                      c[6324] = (c[6324] | 0) + 1;
                      j2 = ic((U2 << 4 | 3) + 16 | 0) | 0;
                      if (!j2)
                        j2 = 0;
                      else {
                        c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                        j2 = j2 + 4 + 15 & -16;
                      }
                      k2 = 0;
                      do {
                        e2 = j2 + (k2 << 4) | 0;
                        c[e2 >> 2] = c[Y2 + 48 >> 2];
                        c[e2 + 4 >> 2] = c[Y2 + 48 + 4 >> 2];
                        c[e2 + 8 >> 2] = c[Y2 + 48 + 8 >> 2];
                        c[e2 + 12 >> 2] = c[Y2 + 48 + 12 >> 2];
                        k2 = k2 + 1 | 0;
                      } while ((k2 | 0) != (U2 | 0));
                      D2 = j2;
                    } else
                      D2 = 0;
                    k2 = c[Y2 + 24 >> 2] | 0;
                    do
                      if ((k2 | 0) > 0) {
                        c[6324] = (c[6324] | 0) + 1;
                        j2 = ic((k2 << 2 | 3) + 16 | 0) | 0;
                        if (!j2)
                          d2 = 0;
                        else {
                          c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                          d2 = j2 + 4 + 15 & -16;
                        }
                        yn(d2 | 0, 0, k2 << 2 | 0) | 0;
                        if ((c[Y2 + 24 >> 2] | 0) <= 0)
                          break;
                        k2 = c[Y2 + 32 >> 2] | 0;
                        j2 = 0;
                        do {
                          c[d2 + (j2 << 2) >> 2] = c[k2 + (j2 << 2) >> 2];
                          j2 = j2 + 1 | 0;
                        } while ((j2 | 0) < (c[Y2 + 24 >> 2] | 0));
                      } else
                        d2 = 0;
                    while (0);
                    if (m2) {
                      c[6324] = (c[6324] | 0) + 1;
                      j2 = ic((V2 | 3) + 16 | 0) | 0;
                      if (!j2)
                        j2 = 0;
                      else {
                        c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                        j2 = j2 + 4 + 15 & -16;
                      }
                      yn(j2 | 0, 0, V2 | 0) | 0;
                    } else
                      j2 = 0;
                    yn(j2 | 0, 0, V2 | 0) | 0;
                    if ((M2 | 0) <= 0)
                      if (!j2)
                        s2 = 0;
                      else {
                        k2 = 0;
                        W2 = 223;
                      }
                    else {
                      u2 = c[Y2 + 32 >> 2] | 0;
                      t2 = 0;
                      k2 = 0;
                      do {
                        m2 = h2 + (t2 << 2) | 0;
                        o2 = c[m2 >> 2] | 0;
                        s2 = j2 + (o2 << 2) | 0;
                        n2 = c[s2 >> 2] | 0;
                        if (!n2) {
                          c[m2 >> 2] = k2;
                          c[D2 + (k2 << 4) >> 2] = c[X2 + (o2 << 4) >> 2];
                          c[D2 + (k2 << 4) + 4 >> 2] = c[X2 + (o2 << 4) + 4 >> 2];
                          c[D2 + (k2 << 4) + 8 >> 2] = c[X2 + (o2 << 4) + 8 >> 2];
                          n2 = c[Y2 + 24 >> 2] | 0;
                          if ((n2 | 0) > 0) {
                            m2 = 0;
                            do {
                              if ((c[d2 + (m2 << 2) >> 2] | 0) == (o2 | 0))
                                c[u2 + (m2 << 2) >> 2] = k2;
                              m2 = m2 + 1 | 0;
                            } while ((m2 | 0) != (n2 | 0));
                          }
                          k2 = k2 + 1 | 0;
                          c[s2 >> 2] = k2;
                        } else
                          c[m2 >> 2] = n2 + -1;
                        t2 = t2 + 1 | 0;
                      } while ((t2 | 0) != (M2 * 3 | 0));
                      W2 = 223;
                    }
                    if ((W2 | 0) == 223) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[j2 + -4 >> 2] | 0);
                      s2 = k2;
                    }
                    if (d2 | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[d2 + -4 >> 2] | 0);
                    }
                    if ((s2 | 0) > 0) {
                      c[6324] = (c[6324] | 0) + 1;
                      j2 = ic((s2 << 4 | 3) + 16 | 0) | 0;
                      if (!j2)
                        j2 = 0;
                      else {
                        c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                        j2 = j2 + 4 + 15 & -16;
                      }
                      k2 = 0;
                      do {
                        W2 = j2 + (k2 << 4) | 0;
                        c[W2 >> 2] = c[Y2 + 48 >> 2];
                        c[W2 + 4 >> 2] = c[Y2 + 48 + 4 >> 2];
                        c[W2 + 8 >> 2] = c[Y2 + 48 + 8 >> 2];
                        c[W2 + 12 >> 2] = c[Y2 + 48 + 12 >> 2];
                        k2 = k2 + 1 | 0;
                      } while ((k2 | 0) != (s2 | 0));
                    } else
                      j2 = 0;
                    if ((M2 | 0) > 0) {
                      c[6324] = (c[6324] | 0) + 1;
                      k2 = ic((M2 * 12 | 3) + 16 | 0) | 0;
                      if (!k2)
                        k2 = 0;
                      else {
                        c[(k2 + 4 + 15 & -16) + -4 >> 2] = k2;
                        k2 = k2 + 4 + 15 & -16;
                      }
                      d2 = c[Y2 + 40 >> 2] | 0;
                      if (!d2)
                        c[Y2 + 40 >> 2] = k2;
                      else {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[d2 + -4 >> 2] | 0);
                        c[Y2 + 40 >> 2] = k2;
                      }
                      yn(k2 | 0, 0, M2 * 12 | 0) | 0;
                    }
                    Lm(j2 | 0, D2 | 0, s2 << 4 | 0) | 0;
                    Lm(c[Y2 + 40 >> 2] | 0, h2 | 0, M2 * 12 | 0) | 0;
                    do
                      if (L2) {
                        if (!h2) {
                          h2 = 0;
                          break;
                        }
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[h2 + -4 >> 2] | 0);
                        h2 = 0;
                      }
                    while (0);
                    if (!D2) {
                      n2 = M2;
                      o2 = M2 * 3 | 0;
                      break;
                    }
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[D2 + -4 >> 2] | 0);
                    n2 = M2;
                    o2 = M2 * 3 | 0;
                    break;
                  }
                }
              }
              s2 = 0;
              j2 = 0;
              h2 = 0;
              n2 = 0;
              o2 = 0;
            }
          while (0);
          if (X2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[X2 + -4 >> 2] | 0);
          }
          if (h2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[h2 + -4 >> 2] | 0);
          }
          c[6324] = (c[6324] | 0) + 1;
          h2 = ic(1311) | 0;
          if (!h2)
            D2 = 0;
          else {
            c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
            D2 = h2 + 4 + 15 & -16;
          }
          tc(D2, b2, s2, j2, 0);
          if ((n2 | 0) > 0) {
            h2 = 0;
            do {
              m2 = h2 * 3 | 0;
              b2 = c[Y2 + 40 >> 2] | 0;
              k2 = c[b2 + (m2 << 2) >> 2] | 0;
              d2 = c[b2 + (m2 + 1 << 2) >> 2] | 0;
              m2 = c[b2 + (m2 + 2 << 2) >> 2] | 0;
              if ((k2 | 0) < (d2 | 0))
                Gf(D2, k2, d2, 0, 0);
              if ((d2 | 0) < (m2 | 0))
                Gf(D2, d2, m2, 0, 0);
              if ((m2 | 0) < (k2 | 0))
                Gf(D2, m2, k2, 0, 0);
              Pf(D2, k2, d2, m2, 0);
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != (n2 | 0));
          }
          if (s2)
            if (!j2)
              j2 = 0;
            else {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[j2 + -4 >> 2] | 0);
              j2 = 0;
            }
          if (o2 | 0) {
            h2 = c[Y2 + 40 >> 2] | 0;
            if (h2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[h2 + -4 >> 2] | 0);
              c[Y2 + 40 >> 2] = 0;
            }
            c[Y2 + 40 >> 2] = 0;
          }
          if (f2) {
            d2 = c[D2 + 772 >> 2] | 0;
            if ((d2 | 0) > 0) {
              m2 = D2 + 780 | 0;
              h2 = 243703;
              k2 = 0;
              do {
                n2 = c[m2 >> 2] | 0;
                o2 = n2 + (k2 * 52 | 0) | 0;
                h2 = (S(h2, 1664525) | 0) + 1013904223 | 0;
                s2 = Y2 + 48 | 0;
                t2 = o2;
                u2 = s2 + 52 | 0;
                do {
                  c[s2 >> 2] = c[t2 >> 2];
                  s2 = s2 + 4 | 0;
                  t2 = t2 + 4 | 0;
                } while ((s2 | 0) < (u2 | 0));
                s2 = o2;
                t2 = n2 + (((h2 >>> 0) % (d2 >>> 0) | 0) * 52 | 0) | 0;
                u2 = s2 + 52 | 0;
                do {
                  c[s2 >> 2] = c[t2 >> 2];
                  s2 = s2 + 4 | 0;
                  t2 = t2 + 4 | 0;
                } while ((s2 | 0) < (u2 | 0));
                s2 = n2 + (((h2 >>> 0) % (d2 >>> 0) | 0) * 52 | 0) | 0;
                t2 = Y2 + 48 | 0;
                u2 = s2 + 52 | 0;
                do {
                  c[s2 >> 2] = c[t2 >> 2];
                  s2 = s2 + 4 | 0;
                  t2 = t2 + 4 | 0;
                } while ((s2 | 0) < (u2 | 0));
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) != (d2 | 0));
            } else
              h2 = 243703;
            n2 = c[D2 + 792 >> 2] | 0;
            if ((n2 | 0) > 0) {
              o2 = D2 + 800 | 0;
              k2 = 0;
              do {
                m2 = c[o2 >> 2] | 0;
                d2 = m2 + (k2 * 44 | 0) | 0;
                h2 = (S(h2, 1664525) | 0) + 1013904223 | 0;
                m2 = m2 + (((h2 >>> 0) % (n2 >>> 0) | 0) * 44 | 0) | 0;
                s2 = Y2 + 48 | 0;
                t2 = d2;
                u2 = s2 + 44 | 0;
                do {
                  c[s2 >> 2] = c[t2 >> 2];
                  s2 = s2 + 4 | 0;
                  t2 = t2 + 4 | 0;
                } while ((s2 | 0) < (u2 | 0));
                s2 = d2;
                t2 = m2;
                u2 = s2 + 44 | 0;
                do {
                  c[s2 >> 2] = c[t2 >> 2];
                  s2 = s2 + 4 | 0;
                  t2 = t2 + 4 | 0;
                } while ((s2 | 0) < (u2 | 0));
                s2 = m2;
                t2 = Y2 + 48 | 0;
                u2 = s2 + 44 | 0;
                do {
                  c[s2 >> 2] = c[t2 >> 2];
                  s2 = s2 + 4 | 0;
                  t2 = t2 + 4 | 0;
                } while ((s2 | 0) < (u2 | 0));
                k2 = k2 + 1 | 0;
              } while ((k2 | 0) != (n2 | 0));
            }
          }
          h2 = c[Y2 + 32 >> 2] | 0;
          if (h2 | 0) {
            if (a[Y2 + 36 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[h2 + -4 >> 2] | 0);
            }
            c[Y2 + 32 >> 2] = 0;
          }
          a[Y2 + 36 >> 0] = 1;
          c[Y2 + 32 >> 2] = 0;
          c[Y2 + 24 >> 2] = 0;
          c[Y2 + 28 >> 2] = 0;
          h2 = c[Y2 + 12 >> 2] | 0;
          if (h2 | 0) {
            if (a[Y2 + 16 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[h2 + -4 >> 2] | 0);
            }
            c[Y2 + 12 >> 2] = 0;
          }
          h2 = c[Y2 + 40 >> 2] | 0;
          if (h2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[h2 + -4 >> 2] | 0);
            c[Y2 + 40 >> 2] = 0;
          }
          c[Y2 + 40 >> 2] = 0;
          if (!j2) {
            i = Y2;
            return D2 | 0;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[j2 + -4 >> 2] | 0);
          i = Y2;
          return D2 | 0;
        }
        function cc(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0;
          J2 = i;
          i = i + 16 | 0;
          f2 = c[b2 + 1152 >> 2] | 0;
          a:
            do
              if ((f2 | 0) > 0)
                while (1) {
                  q2 = c[c[b2 + 1160 >> 2] >> 2] | 0;
                  f2 = c[q2 + 348 >> 2] | 0;
                  if (f2 | 0) {
                    Wg(b2 + 1088 | 0, f2) | 0;
                    h2 = c[b2 + 1092 >> 2] | 0;
                    if (h2 | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[h2 + -4 >> 2] | 0);
                    }
                    c[b2 + 1092 >> 2] = f2;
                    c[b2 + 1100 >> 2] = (c[b2 + 1100 >> 2] | 0) + -1;
                  }
                  qk(q2);
                  if (q2 | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[q2 + -4 >> 2] | 0);
                  }
                  f2 = c[b2 + 1152 >> 2] | 0;
                  if ((f2 | 0) <= 0) {
                    h2 = f2;
                    break a;
                  }
                  k2 = c[b2 + 1160 >> 2] | 0;
                  h2 = 0;
                  do {
                    j2 = k2 + (h2 << 2) | 0;
                    if ((c[j2 >> 2] | 0) == (q2 | 0)) {
                      I2 = 14;
                      break;
                    }
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) < (f2 | 0));
                  if ((I2 | 0) == 14) {
                    I2 = 0;
                    if ((h2 | 0) < (f2 | 0)) {
                      c[j2 >> 2] = c[k2 + (f2 + -1 << 2) >> 2];
                      c[(c[b2 + 1160 >> 2] | 0) + (f2 + -1 << 2) >> 2] = q2;
                      c[b2 + 1152 >> 2] = f2 + -1;
                      f2 = f2 + -1 | 0;
                    }
                  }
                  if ((f2 | 0) <= 0) {
                    h2 = f2;
                    break;
                  }
                }
              else
                h2 = f2;
            while (0);
          f2 = c[b2 + 752 >> 2] | 0;
          f2 = (f2 | 0) > (d2 | 0) ? d2 : f2;
          if ((h2 | 0) < (f2 | 0)) {
            if ((c[b2 + 1156 >> 2] | 0) < (f2 | 0)) {
              if (f2) {
                c[6324] = (c[6324] | 0) + 1;
                j2 = ic((f2 << 2 | 3) + 16 | 0) | 0;
                if (!j2)
                  j2 = 0;
                else {
                  c[(j2 + 4 + 15 & -16) + -4 >> 2] = j2;
                  j2 = j2 + 4 + 15 & -16;
                }
                q2 = c[b2 + 1152 >> 2] | 0;
                if ((q2 | 0) > 0) {
                  k2 = 0;
                  do {
                    c[j2 + (k2 << 2) >> 2] = c[(c[b2 + 1160 >> 2] | 0) + (k2 << 2) >> 2];
                    k2 = k2 + 1 | 0;
                  } while ((k2 | 0) != (q2 | 0));
                  k2 = j2;
                  j2 = b2 + 1160 | 0;
                } else {
                  k2 = j2;
                  j2 = b2 + 1160 | 0;
                }
              } else {
                k2 = 0;
                j2 = b2 + 1160 | 0;
              }
              q2 = c[j2 >> 2] | 0;
              if (q2 | 0) {
                if (a[b2 + 1164 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[q2 + -4 >> 2] | 0);
                }
                c[j2 >> 2] = 0;
              }
              a[b2 + 1164 >> 0] = 1;
              c[j2 >> 2] = k2;
              c[b2 + 1156 >> 2] = f2;
            } else
              j2 = b2 + 1160 | 0;
            do {
              c[(c[j2 >> 2] | 0) + (h2 << 2) >> 2] = 0;
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) != (f2 | 0));
          }
          c[b2 + 1152 >> 2] = f2;
          if ((f2 | 0) > 0) {
            h2 = 0;
            do {
              c[6324] = (c[6324] | 0) + 1;
              f2 = ic(403) | 0;
              if (!f2)
                f2 = 0;
              else {
                c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                f2 = f2 + 4 + 15 & -16;
              }
              a[f2 + 16 >> 0] = 1;
              c[f2 + 12 >> 2] = 0;
              c[f2 + 4 >> 2] = 0;
              c[f2 + 8 >> 2] = 0;
              a[f2 + 36 >> 0] = 1;
              c[f2 + 32 >> 2] = 0;
              c[f2 + 24 >> 2] = 0;
              c[f2 + 28 >> 2] = 0;
              a[f2 + 56 >> 0] = 1;
              c[f2 + 52 >> 2] = 0;
              c[f2 + 44 >> 2] = 0;
              c[f2 + 48 >> 2] = 0;
              r2 = f2 + 348 | 0;
              c[r2 >> 2] = 0;
              c[r2 + 4 >> 2] = 0;
              c[r2 + 8 >> 2] = 0;
              c[r2 + 12 >> 2] = 0;
              c[r2 + 16 >> 2] = 0;
              g[f2 + 368 >> 2] = 100;
              g[f2 + 372 >> 2] = 0.009999999776482582;
              a[f2 + 376 >> 0] = 0;
              c[(c[b2 + 1160 >> 2] | 0) + (h2 << 2) >> 2] = f2;
              r2 = c[b2 + 1160 >> 2] | 0;
              a[(c[r2 + (h2 << 2) >> 2] | 0) + 377 >> 0] = 1;
              h2 = h2 + 1 | 0;
              f2 = c[b2 + 1152 >> 2] | 0;
            } while ((h2 | 0) < (f2 | 0));
            if ((f2 | 0) > 0) {
              d2 = c[b2 + 752 >> 2] | 0;
              b:
                do
                  if ((d2 | 0) > 0) {
                    k2 = 0;
                    j2 = 0;
                    q2 = 0;
                    h2 = 0;
                    s2 = f2;
                    while (1) {
                      u2 = c[b2 + 760 >> 2] | 0;
                      j2 = (g[l >> 2] = (c[l >> 2] = j2, +g[l >> 2]) + +g[u2 + (k2 * 104 | 0) + 8 >> 2], c[l >> 2] | 0);
                      h2 = (g[l >> 2] = (c[l >> 2] = h2, +g[l >> 2]) + +g[u2 + (k2 * 104 | 0) + 12 >> 2], c[l >> 2] | 0);
                      q2 = (g[l >> 2] = (c[l >> 2] = q2, +g[l >> 2]) + +g[u2 + (k2 * 104 | 0) + 16 >> 2], c[l >> 2] | 0);
                      t2 = c[r2 + (((k2 * 29873 | 0) % (s2 | 0) | 0) << 2) >> 2] | 0;
                      u2 = u2 + (k2 * 104 | 0) | 0;
                      r2 = c[t2 + 24 >> 2] | 0;
                      if ((r2 | 0) == (c[t2 + 28 >> 2] | 0) ? (v2 = r2 | 0 ? r2 << 1 : 1, (r2 | 0) < (v2 | 0)) : 0) {
                        if (!v2)
                          d2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          d2 = ic((v2 << 2 | 3) + 16 | 0) | 0;
                          if (!d2)
                            d2 = 0;
                          else {
                            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
                            d2 = d2 + 4 + 15 & -16;
                          }
                          r2 = c[t2 + 24 >> 2] | 0;
                        }
                        if ((r2 | 0) > 0) {
                          s2 = 0;
                          do {
                            c[d2 + (s2 << 2) >> 2] = c[(c[t2 + 32 >> 2] | 0) + (s2 << 2) >> 2];
                            s2 = s2 + 1 | 0;
                          } while ((s2 | 0) != (r2 | 0));
                        }
                        s2 = c[t2 + 32 >> 2] | 0;
                        if (s2) {
                          if (a[t2 + 36 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[s2 + -4 >> 2] | 0);
                            r2 = c[t2 + 24 >> 2] | 0;
                          }
                          c[t2 + 32 >> 2] = 0;
                        }
                        a[t2 + 36 >> 0] = 1;
                        c[t2 + 32 >> 2] = d2;
                        c[t2 + 28 >> 2] = v2;
                        d2 = c[b2 + 752 >> 2] | 0;
                      }
                      c[(c[t2 + 32 >> 2] | 0) + (r2 << 2) >> 2] = u2;
                      c[t2 + 24 >> 2] = r2 + 1;
                      k2 = k2 + 1 | 0;
                      if ((k2 | 0) >= (d2 | 0)) {
                        k2 = d2;
                        break b;
                      }
                      s2 = c[b2 + 1152 >> 2] | 0;
                      r2 = c[b2 + 1160 >> 2] | 0;
                    }
                  } else {
                    k2 = d2;
                    j2 = 0;
                    q2 = 0;
                    h2 = 0;
                  }
                while (0);
              m2 = 1 / +(k2 | 0);
              o2 = (c[l >> 2] = j2, +g[l >> 2]) * m2;
              n2 = (c[l >> 2] = h2, +g[l >> 2]) * m2;
              m2 = (c[l >> 2] = q2, +g[l >> 2]) * m2;
              if ((f2 | 0) < 0)
                E2 = 0;
              else {
                if ((f2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, w2 = ic((f2 << 4 | 3) + 16 | 0) | 0, (w2 | 0) != 0) : 0) {
                  c[(w2 + 4 + 15 & -16) + -4 >> 2] = w2;
                  h2 = w2 + 4 + 15 & -16;
                } else
                  h2 = 0;
                j2 = 0;
                do {
                  g[h2 + (j2 << 4) >> 2] = o2;
                  g[h2 + (j2 << 4) + 4 >> 2] = n2;
                  g[h2 + (j2 << 4) + 8 >> 2] = m2;
                  g[h2 + (j2 << 4) + 12 >> 2] = 0;
                  j2 = j2 + 1 | 0;
                } while ((j2 | 0) != (f2 | 0));
                E2 = h2;
              }
              v2 = E2 + 4 | 0;
              w2 = E2 + 8 | 0;
              u2 = 0;
              do {
                z2 = +(u2 | 0) * 0.0625;
                z2 = 2 - (z2 > 1 ? 1 : z2);
                s2 = 0;
                t2 = 0;
                do {
                  h2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                  r2 = c[h2 + 24 >> 2] | 0;
                  if ((r2 | 0) > 0) {
                    d2 = c[h2 + 32 >> 2] | 0;
                    q2 = 0;
                    h2 = 0;
                    j2 = 0;
                    k2 = 0;
                    do {
                      K2 = c[d2 + (q2 << 2) >> 2] | 0;
                      h2 = (g[l >> 2] = (c[l >> 2] = h2, +g[l >> 2]) + +g[K2 + 8 >> 2], c[l >> 2] | 0);
                      j2 = (g[l >> 2] = (c[l >> 2] = j2, +g[l >> 2]) + +g[K2 + 12 >> 2], c[l >> 2] | 0);
                      k2 = (g[l >> 2] = (c[l >> 2] = k2, +g[l >> 2]) + +g[K2 + 16 >> 2], c[l >> 2] | 0);
                      q2 = q2 + 1 | 0;
                    } while ((q2 | 0) != (r2 | 0));
                  } else {
                    h2 = 0;
                    j2 = 0;
                    k2 = 0;
                  }
                  if (r2) {
                    y2 = (c[l >> 2] = h2, +g[l >> 2]) * (1 / +(r2 | 0));
                    n2 = (c[l >> 2] = j2, +g[l >> 2]) * (1 / +(r2 | 0));
                    d2 = E2 + (t2 << 4) | 0;
                    o2 = +g[d2 >> 2];
                    K2 = E2 + (t2 << 4) + 4 | 0;
                    p2 = +g[K2 >> 2];
                    h2 = E2 + (t2 << 4) + 8 | 0;
                    x2 = +g[h2 >> 2];
                    m2 = x2 + z2 * ((c[l >> 2] = k2, +g[l >> 2]) * (1 / +(r2 | 0)) - x2);
                    g[d2 >> 2] = o2 + z2 * (y2 - o2);
                    g[K2 >> 2] = p2 + z2 * (n2 - p2);
                    g[h2 >> 2] = m2;
                    g[E2 + (t2 << 4) + 12 >> 2] = 0;
                    k2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                    h2 = c[k2 + 24 >> 2] | 0;
                    if ((h2 | 0) < 0) {
                      if ((c[k2 + 28 >> 2] | 0) < 0) {
                        j2 = c[k2 + 32 >> 2] | 0;
                        if (j2 | 0) {
                          if (a[k2 + 36 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                          }
                          c[k2 + 32 >> 2] = 0;
                        }
                        a[k2 + 36 >> 0] = 1;
                        c[k2 + 32 >> 2] = 0;
                        c[k2 + 28 >> 2] = 0;
                      }
                      do {
                        c[(c[k2 + 32 >> 2] | 0) + (h2 << 2) >> 2] = 0;
                        h2 = h2 + 1 | 0;
                      } while ((h2 | 0) != 0);
                    }
                    c[k2 + 24 >> 2] = 0;
                    s2 = s2 | (o2 + z2 * (y2 - o2) - o2) * (o2 + z2 * (y2 - o2) - o2) + (p2 + z2 * (n2 - p2) - p2) * (p2 + z2 * (n2 - p2) - p2) + (m2 - x2) * (m2 - x2) > 11920928955078125e-23;
                  }
                  t2 = t2 + 1 | 0;
                } while ((t2 | 0) < (f2 | 0));
                u2 = u2 + 1 | 0;
                h2 = c[b2 + 752 >> 2] | 0;
                c:
                  do
                    if ((h2 | 0) > 0) {
                      if ((f2 | 0) > 1)
                        t2 = 0;
                      else {
                        r2 = 0;
                        while (1) {
                          q2 = c[c[b2 + 1160 >> 2] >> 2] | 0;
                          d2 = (c[b2 + 760 >> 2] | 0) + (r2 * 104 | 0) | 0;
                          j2 = c[q2 + 24 >> 2] | 0;
                          if ((j2 | 0) == (c[q2 + 28 >> 2] | 0) ? (D2 = j2 | 0 ? j2 << 1 : 1, (j2 | 0) < (D2 | 0)) : 0) {
                            if (!D2)
                              h2 = 0;
                            else {
                              c[6324] = (c[6324] | 0) + 1;
                              h2 = ic((D2 << 2 | 3) + 16 | 0) | 0;
                              if (!h2)
                                h2 = 0;
                              else {
                                c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                h2 = h2 + 4 + 15 & -16;
                              }
                              j2 = c[q2 + 24 >> 2] | 0;
                            }
                            if ((j2 | 0) > 0) {
                              k2 = 0;
                              do {
                                c[h2 + (k2 << 2) >> 2] = c[(c[q2 + 32 >> 2] | 0) + (k2 << 2) >> 2];
                                k2 = k2 + 1 | 0;
                              } while ((k2 | 0) != (j2 | 0));
                            }
                            k2 = c[q2 + 32 >> 2] | 0;
                            if (k2) {
                              if (a[q2 + 36 >> 0] | 0) {
                                c[6325] = (c[6325] | 0) + 1;
                                Rc(c[k2 + -4 >> 2] | 0);
                                j2 = c[q2 + 24 >> 2] | 0;
                              }
                              c[q2 + 32 >> 2] = 0;
                            }
                            a[q2 + 36 >> 0] = 1;
                            c[q2 + 32 >> 2] = h2;
                            c[q2 + 28 >> 2] = D2;
                            h2 = c[b2 + 752 >> 2] | 0;
                          }
                          c[(c[q2 + 32 >> 2] | 0) + (j2 << 2) >> 2] = d2;
                          c[q2 + 24 >> 2] = j2 + 1;
                          r2 = r2 + 1 | 0;
                          if ((r2 | 0) >= (h2 | 0))
                            break c;
                        }
                      }
                      do {
                        d2 = c[b2 + 760 >> 2] | 0;
                        n2 = +g[d2 + (t2 * 104 | 0) + 8 >> 2];
                        o2 = +g[d2 + (t2 * 104 | 0) + 12 >> 2];
                        p2 = +g[d2 + (t2 * 104 | 0) + 16 >> 2];
                        j2 = 1;
                        m2 = +F(+(+g[E2 >> 2] - n2)) + +F(+(+g[v2 >> 2] - o2)) + +F(+(+g[w2 >> 2] - p2));
                        k2 = 0;
                        while (1) {
                          x2 = +F(+(+g[E2 + (j2 << 4) >> 2] - n2)) + +F(+(+g[E2 + (j2 << 4) + 4 >> 2] - o2)) + +F(+(+g[E2 + (j2 << 4) + 8 >> 2] - p2));
                          q2 = x2 < m2;
                          k2 = q2 ? j2 : k2;
                          j2 = j2 + 1 | 0;
                          if ((j2 | 0) == (f2 | 0))
                            break;
                          else
                            m2 = q2 ? x2 : m2;
                        }
                        r2 = c[(c[b2 + 1160 >> 2] | 0) + (k2 << 2) >> 2] | 0;
                        q2 = d2 + (t2 * 104 | 0) | 0;
                        j2 = c[r2 + 24 >> 2] | 0;
                        if ((j2 | 0) == (c[r2 + 28 >> 2] | 0) ? (C2 = j2 | 0 ? j2 << 1 : 1, (j2 | 0) < (C2 | 0)) : 0) {
                          if (!C2)
                            h2 = 0;
                          else {
                            c[6324] = (c[6324] | 0) + 1;
                            h2 = ic((C2 << 2 | 3) + 16 | 0) | 0;
                            if (!h2)
                              h2 = 0;
                            else {
                              c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                              h2 = h2 + 4 + 15 & -16;
                            }
                            j2 = c[r2 + 24 >> 2] | 0;
                          }
                          if ((j2 | 0) > 0) {
                            k2 = 0;
                            do {
                              c[h2 + (k2 << 2) >> 2] = c[(c[r2 + 32 >> 2] | 0) + (k2 << 2) >> 2];
                              k2 = k2 + 1 | 0;
                            } while ((k2 | 0) != (j2 | 0));
                          }
                          k2 = c[r2 + 32 >> 2] | 0;
                          if (k2) {
                            if (a[r2 + 36 >> 0] | 0) {
                              c[6325] = (c[6325] | 0) + 1;
                              Rc(c[k2 + -4 >> 2] | 0);
                              j2 = c[r2 + 24 >> 2] | 0;
                            }
                            c[r2 + 32 >> 2] = 0;
                          }
                          a[r2 + 36 >> 0] = 1;
                          c[r2 + 32 >> 2] = h2;
                          c[r2 + 28 >> 2] = C2;
                          h2 = c[b2 + 752 >> 2] | 0;
                        }
                        c[(c[r2 + 32 >> 2] | 0) + (j2 << 2) >> 2] = q2;
                        c[r2 + 24 >> 2] = j2 + 1;
                        t2 = t2 + 1 | 0;
                      } while ((t2 | 0) < (h2 | 0));
                    }
                  while (0);
              } while ((u2 | 0) < (e2 | 0) & s2);
              if ((h2 | 0) > 0) {
                h2 = h2 << 2;
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic((h2 | 3) + 16 | 0) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                yn(f2 | 0, -1, h2 | 0) | 0;
                w2 = f2;
              } else
                w2 = 0;
              f2 = c[b2 + 1152 >> 2] | 0;
              if ((f2 | 0) > 0) {
                d2 = c[b2 + 1160 >> 2] | 0;
                q2 = 0;
                do {
                  k2 = c[d2 + (q2 << 2) >> 2] | 0;
                  if ((c[k2 + 24 >> 2] | 0) > 0) {
                    j2 = c[b2 + 760 >> 2] | 0;
                    h2 = c[k2 + 32 >> 2] | 0;
                    f2 = 0;
                    do {
                      c[w2 + ((((c[h2 + (f2 << 2) >> 2] | 0) - j2 | 0) / 104 | 0) << 2) >> 2] = q2;
                      f2 = f2 + 1 | 0;
                    } while ((f2 | 0) < (c[k2 + 24 >> 2] | 0));
                    f2 = c[b2 + 1152 >> 2] | 0;
                  }
                  q2 = q2 + 1 | 0;
                } while ((q2 | 0) < (f2 | 0));
              }
              if ((c[b2 + 792 >> 2] | 0) > 0) {
                t2 = 0;
                do {
                  K2 = c[b2 + 800 >> 2] | 0;
                  s2 = c[b2 + 760 >> 2] | 0;
                  f2 = ((c[K2 + (t2 * 44 | 0) + 8 >> 2] | 0) - s2 | 0) / 104 | 0;
                  c[J2 >> 2] = f2;
                  c[J2 + 4 >> 2] = ((c[K2 + (t2 * 44 | 0) + 12 >> 2] | 0) - s2 | 0) / 104 | 0;
                  c[J2 + 8 >> 2] = ((c[K2 + (t2 * 44 | 0) + 16 >> 2] | 0) - s2 | 0) / 104 | 0;
                  s2 = 0;
                  while (1) {
                    d2 = c[w2 + (f2 << 2) >> 2] | 0;
                    q2 = 1;
                    do {
                      f2 = c[J2 + (((q2 + s2 | 0) % 3 | 0) << 2) >> 2] | 0;
                      d:
                        do
                          if ((c[w2 + (f2 << 2) >> 2] | 0) != (d2 | 0)) {
                            r2 = c[(c[b2 + 1160 >> 2] | 0) + (d2 << 2) >> 2] | 0;
                            k2 = (c[b2 + 760 >> 2] | 0) + (f2 * 104 | 0) | 0;
                            h2 = c[r2 + 24 >> 2] | 0;
                            e:
                              do
                                if ((h2 | 0) > 0) {
                                  j2 = c[r2 + 32 >> 2] | 0;
                                  f2 = 0;
                                  while (1) {
                                    if ((c[j2 + (f2 << 2) >> 2] | 0) == (k2 | 0))
                                      break;
                                    f2 = f2 + 1 | 0;
                                    if ((f2 | 0) >= (h2 | 0))
                                      break e;
                                  }
                                  if ((f2 | 0) != (h2 | 0))
                                    break d;
                                }
                              while (0);
                            if ((h2 | 0) == (c[r2 + 28 >> 2] | 0) ? (G2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (G2 | 0)) : 0) {
                              if (!G2)
                                f2 = 0;
                              else {
                                c[6324] = (c[6324] | 0) + 1;
                                f2 = ic((G2 << 2 | 3) + 16 | 0) | 0;
                                if (!f2)
                                  f2 = 0;
                                else {
                                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                                  f2 = f2 + 4 + 15 & -16;
                                }
                                h2 = c[r2 + 24 >> 2] | 0;
                              }
                              if ((h2 | 0) > 0) {
                                j2 = 0;
                                do {
                                  c[f2 + (j2 << 2) >> 2] = c[(c[r2 + 32 >> 2] | 0) + (j2 << 2) >> 2];
                                  j2 = j2 + 1 | 0;
                                } while ((j2 | 0) != (h2 | 0));
                              }
                              j2 = c[r2 + 32 >> 2] | 0;
                              if (j2) {
                                if (a[r2 + 36 >> 0] | 0) {
                                  c[6325] = (c[6325] | 0) + 1;
                                  Rc(c[j2 + -4 >> 2] | 0);
                                  h2 = c[r2 + 24 >> 2] | 0;
                                }
                                c[r2 + 32 >> 2] = 0;
                              }
                              a[r2 + 36 >> 0] = 1;
                              c[r2 + 32 >> 2] = f2;
                              c[r2 + 28 >> 2] = G2;
                              f2 = h2;
                            } else
                              f2 = h2;
                            c[(c[r2 + 32 >> 2] | 0) + (f2 << 2) >> 2] = k2;
                            c[r2 + 24 >> 2] = f2 + 1;
                          }
                        while (0);
                      q2 = q2 + 1 | 0;
                    } while ((q2 | 0) != 3);
                    f2 = s2 + 1 | 0;
                    if ((f2 | 0) >= 3)
                      break;
                    s2 = f2;
                    f2 = c[J2 + (f2 << 2) >> 2] | 0;
                  }
                  t2 = t2 + 1 | 0;
                } while ((t2 | 0) < (c[b2 + 792 >> 2] | 0));
                f2 = c[b2 + 1152 >> 2] | 0;
              }
              if ((f2 | 0) > 1) {
                c[6324] = (c[6324] | 0) + 1;
                f2 = ic(403) | 0;
                if (!f2)
                  f2 = 0;
                else {
                  c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                  f2 = f2 + 4 + 15 & -16;
                }
                a[f2 + 16 >> 0] = 1;
                c[f2 + 12 >> 2] = 0;
                c[f2 + 4 >> 2] = 0;
                c[f2 + 8 >> 2] = 0;
                r2 = f2 + 36 | 0;
                a[r2 >> 0] = 1;
                s2 = f2 + 32 | 0;
                c[s2 >> 2] = 0;
                t2 = f2 + 24 | 0;
                c[t2 >> 2] = 0;
                u2 = f2 + 28 | 0;
                c[u2 >> 2] = 0;
                a[f2 + 56 >> 0] = 1;
                c[f2 + 52 >> 2] = 0;
                c[f2 + 44 >> 2] = 0;
                c[f2 + 48 >> 2] = 0;
                v2 = f2 + 348 | 0;
                c[v2 >> 2] = 0;
                c[v2 + 4 >> 2] = 0;
                c[v2 + 8 >> 2] = 0;
                c[v2 + 12 >> 2] = 0;
                c[v2 + 16 >> 2] = 0;
                g[f2 + 368 >> 2] = 100;
                g[f2 + 372 >> 2] = 0.009999999776482582;
                a[f2 + 376 >> 0] = 0;
                v2 = f2;
                a[f2 + 377 >> 0] = 0;
                k2 = c[b2 + 752 >> 2] | 0;
                if ((k2 | 0) > 0) {
                  c[6324] = (c[6324] | 0) + 1;
                  f2 = ic((k2 << 2 | 3) + 16 | 0) | 0;
                  if (!f2)
                    j2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    j2 = f2 + 4 + 15 & -16;
                  }
                  h2 = c[t2 >> 2] | 0;
                  if ((h2 | 0) > 0) {
                    f2 = 0;
                    do {
                      c[j2 + (f2 << 2) >> 2] = c[(c[s2 >> 2] | 0) + (f2 << 2) >> 2];
                      f2 = f2 + 1 | 0;
                    } while ((f2 | 0) != (h2 | 0));
                  }
                  f2 = c[s2 >> 2] | 0;
                  if (f2 | 0) {
                    if (a[r2 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[f2 + -4 >> 2] | 0);
                    }
                    c[s2 >> 2] = 0;
                  }
                  a[r2 >> 0] = 1;
                  c[s2 >> 2] = j2;
                  c[u2 >> 2] = k2;
                  f2 = c[b2 + 752 >> 2] | 0;
                  if ((f2 | 0) > 0) {
                    d2 = 0;
                    j2 = c[t2 >> 2] | 0;
                    h2 = k2;
                    while (1) {
                      q2 = (c[b2 + 760 >> 2] | 0) + (d2 * 104 | 0) | 0;
                      do
                        if ((j2 | 0) == (h2 | 0)) {
                          k2 = h2 | 0 ? h2 << 1 : 1;
                          if ((h2 | 0) >= (k2 | 0)) {
                            k2 = h2;
                            break;
                          }
                          if (!k2)
                            f2 = 0;
                          else {
                            c[6324] = (c[6324] | 0) + 1;
                            f2 = ic((k2 << 2 | 3) + 16 | 0) | 0;
                            if (!f2)
                              f2 = 0;
                            else {
                              c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                              f2 = f2 + 4 + 15 & -16;
                            }
                            h2 = c[t2 >> 2] | 0;
                          }
                          if ((h2 | 0) > 0) {
                            j2 = 0;
                            do {
                              c[f2 + (j2 << 2) >> 2] = c[(c[s2 >> 2] | 0) + (j2 << 2) >> 2];
                              j2 = j2 + 1 | 0;
                            } while ((j2 | 0) != (h2 | 0));
                          }
                          j2 = c[s2 >> 2] | 0;
                          if (j2) {
                            if (a[r2 >> 0] | 0) {
                              c[6325] = (c[6325] | 0) + 1;
                              Rc(c[j2 + -4 >> 2] | 0);
                              h2 = c[t2 >> 2] | 0;
                            }
                            c[s2 >> 2] = 0;
                          }
                          a[r2 >> 0] = 1;
                          c[s2 >> 2] = f2;
                          c[u2 >> 2] = k2;
                          f2 = c[b2 + 752 >> 2] | 0;
                        } else {
                          k2 = h2;
                          h2 = j2;
                        }
                      while (0);
                      c[(c[s2 >> 2] | 0) + (h2 << 2) >> 2] = q2;
                      j2 = h2 + 1 | 0;
                      c[t2 >> 2] = j2;
                      d2 = d2 + 1 | 0;
                      if ((d2 | 0) >= (f2 | 0))
                        break;
                      else
                        h2 = k2;
                    }
                  }
                }
                f2 = c[b2 + 1152 >> 2] | 0;
                if ((f2 | 0) == (c[b2 + 1156 >> 2] | 0) ? (H2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (H2 | 0)) : 0) {
                  if (!H2)
                    j2 = 0;
                  else {
                    c[6324] = (c[6324] | 0) + 1;
                    f2 = ic((H2 << 2 | 3) + 16 | 0) | 0;
                    if (!f2)
                      f2 = 0;
                    else {
                      c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                      f2 = f2 + 4 + 15 & -16;
                    }
                    j2 = f2;
                    f2 = c[b2 + 1152 >> 2] | 0;
                  }
                  if ((f2 | 0) > 0) {
                    h2 = 0;
                    do {
                      c[j2 + (h2 << 2) >> 2] = c[(c[b2 + 1160 >> 2] | 0) + (h2 << 2) >> 2];
                      h2 = h2 + 1 | 0;
                    } while ((h2 | 0) != (f2 | 0));
                  }
                  h2 = c[b2 + 1160 >> 2] | 0;
                  if (h2) {
                    if (a[b2 + 1164 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[h2 + -4 >> 2] | 0);
                      f2 = c[b2 + 1152 >> 2] | 0;
                    }
                    c[b2 + 1160 >> 2] = 0;
                  }
                  a[b2 + 1164 >> 0] = 1;
                  c[b2 + 1160 >> 2] = j2;
                  c[b2 + 1156 >> 2] = H2;
                }
                c[(c[b2 + 1160 >> 2] | 0) + (f2 << 2) >> 2] = v2;
                K2 = f2 + 1 | 0;
                c[b2 + 1152 >> 2] = K2;
                G2 = c[b2 + 1160 >> 2] | 0;
                f2 = G2 + (f2 << 2) | 0;
                H2 = c[G2 >> 2] | 0;
                c[G2 >> 2] = c[f2 >> 2];
                c[f2 >> 2] = H2;
                f2 = K2;
              }
              if ((f2 | 0) > 0) {
                h2 = 0;
                do {
                  d2 = c[(c[b2 + 1160 >> 2] | 0) + (h2 << 2) >> 2] | 0;
                  f:
                    do
                      if (!(c[d2 + 24 >> 2] | 0)) {
                        h2 = h2 + -1 | 0;
                        f2 = c[d2 + 348 >> 2] | 0;
                        if (f2 | 0) {
                          Wg(b2 + 1088 | 0, f2) | 0;
                          j2 = c[b2 + 1092 >> 2] | 0;
                          if (j2 | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                          }
                          c[b2 + 1092 >> 2] = f2;
                          c[b2 + 1100 >> 2] = (c[b2 + 1100 >> 2] | 0) + -1;
                        }
                        qk(d2);
                        if (d2 | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[d2 + -4 >> 2] | 0);
                        }
                        f2 = c[b2 + 1152 >> 2] | 0;
                        if ((f2 | 0) > 0) {
                          q2 = c[b2 + 1160 >> 2] | 0;
                          j2 = 0;
                          while (1) {
                            k2 = q2 + (j2 << 2) | 0;
                            if ((c[k2 >> 2] | 0) == (d2 | 0))
                              break;
                            j2 = j2 + 1 | 0;
                            if ((j2 | 0) >= (f2 | 0))
                              break f;
                          }
                          if ((j2 | 0) < (f2 | 0)) {
                            c[k2 >> 2] = c[q2 + (f2 + -1 << 2) >> 2];
                            c[(c[b2 + 1160 >> 2] | 0) + (f2 + -1 << 2) >> 2] = d2;
                            c[b2 + 1152 >> 2] = f2 + -1;
                            f2 = f2 + -1 | 0;
                          }
                        }
                      }
                    while (0);
                  h2 = h2 + 1 | 0;
                } while ((h2 | 0) < (f2 | 0));
              }
              if (w2 | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[w2 + -4 >> 2] | 0);
              }
              if (E2 | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[E2 + -4 >> 2] | 0);
              }
            } else
              I2 = 212;
          } else
            I2 = 212;
          g:
            do
              if ((I2 | 0) == 212) {
                q2 = c[b2 + 812 >> 2] | 0;
                if (q2 | 0) {
                  if ((f2 | 0) < (q2 | 0)) {
                    if ((c[b2 + 1156 >> 2] | 0) < (q2 | 0)) {
                      c[6324] = (c[6324] | 0) + 1;
                      h2 = ic((q2 << 2 | 3) + 16 | 0) | 0;
                      if (!h2)
                        k2 = 0;
                      else {
                        c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                        k2 = h2 + 4 + 15 & -16;
                      }
                      j2 = c[b2 + 1152 >> 2] | 0;
                      if ((j2 | 0) > 0) {
                        h2 = 0;
                        do {
                          c[k2 + (h2 << 2) >> 2] = c[(c[b2 + 1160 >> 2] | 0) + (h2 << 2) >> 2];
                          h2 = h2 + 1 | 0;
                        } while ((h2 | 0) != (j2 | 0));
                      }
                      h2 = c[b2 + 1160 >> 2] | 0;
                      if (h2 | 0) {
                        if (a[b2 + 1164 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[h2 + -4 >> 2] | 0);
                        }
                        c[b2 + 1160 >> 2] = 0;
                      }
                      a[b2 + 1164 >> 0] = 1;
                      c[b2 + 1160 >> 2] = k2;
                      c[b2 + 1156 >> 2] = q2;
                      h2 = b2 + 1160 | 0;
                    } else
                      h2 = b2 + 1160 | 0;
                    do {
                      c[(c[h2 >> 2] | 0) + (f2 << 2) >> 2] = 0;
                      f2 = f2 + 1 | 0;
                    } while ((f2 | 0) != (q2 | 0));
                  }
                  c[b2 + 1152 >> 2] = q2;
                  if ((q2 | 0) > 0) {
                    h2 = 0;
                    do {
                      c[6324] = (c[6324] | 0) + 1;
                      f2 = ic(403) | 0;
                      if (!f2)
                        f2 = 0;
                      else {
                        c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                        f2 = f2 + 4 + 15 & -16;
                      }
                      a[f2 + 16 >> 0] = 1;
                      c[f2 + 12 >> 2] = 0;
                      c[f2 + 4 >> 2] = 0;
                      c[f2 + 8 >> 2] = 0;
                      a[f2 + 36 >> 0] = 1;
                      c[f2 + 32 >> 2] = 0;
                      c[f2 + 24 >> 2] = 0;
                      c[f2 + 28 >> 2] = 0;
                      a[f2 + 56 >> 0] = 1;
                      c[f2 + 52 >> 2] = 0;
                      c[f2 + 44 >> 2] = 0;
                      c[f2 + 48 >> 2] = 0;
                      K2 = f2 + 348 | 0;
                      c[K2 >> 2] = 0;
                      c[K2 + 4 >> 2] = 0;
                      c[K2 + 8 >> 2] = 0;
                      c[K2 + 12 >> 2] = 0;
                      c[K2 + 16 >> 2] = 0;
                      g[f2 + 368 >> 2] = 100;
                      g[f2 + 372 >> 2] = 0.009999999776482582;
                      a[f2 + 376 >> 0] = 0;
                      c[(c[b2 + 1160 >> 2] | 0) + (h2 << 2) >> 2] = f2;
                      a[(c[(c[b2 + 1160 >> 2] | 0) + (h2 << 2) >> 2] | 0) + 377 >> 0] = 1;
                      h2 = h2 + 1 | 0;
                    } while ((h2 | 0) < (c[b2 + 1152 >> 2] | 0));
                  }
                  if ((c[b2 + 812 >> 2] | 0) <= 0)
                    break;
                  q2 = 0;
                  while (1) {
                    k2 = 0;
                    do {
                      d2 = c[(c[b2 + 1160 >> 2] | 0) + (q2 << 2) >> 2] | 0;
                      r2 = (c[b2 + 820 >> 2] | 0) + (q2 * 104 | 0) + 8 + (k2 << 2) | 0;
                      h2 = c[d2 + 24 >> 2] | 0;
                      if ((h2 | 0) == (c[d2 + 28 >> 2] | 0) ? (s2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (s2 | 0)) : 0) {
                        if (!s2)
                          f2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          f2 = ic((s2 << 2 | 3) + 16 | 0) | 0;
                          if (!f2)
                            f2 = 0;
                          else {
                            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                            f2 = f2 + 4 + 15 & -16;
                          }
                          h2 = c[d2 + 24 >> 2] | 0;
                        }
                        if ((h2 | 0) > 0) {
                          j2 = 0;
                          do {
                            c[f2 + (j2 << 2) >> 2] = c[(c[d2 + 32 >> 2] | 0) + (j2 << 2) >> 2];
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) != (h2 | 0));
                        }
                        j2 = c[d2 + 32 >> 2] | 0;
                        if (j2) {
                          if (a[d2 + 36 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                            h2 = c[d2 + 24 >> 2] | 0;
                          }
                          c[d2 + 32 >> 2] = 0;
                        }
                        a[d2 + 36 >> 0] = 1;
                        c[d2 + 32 >> 2] = f2;
                        c[d2 + 28 >> 2] = s2;
                        f2 = h2;
                      } else
                        f2 = h2;
                      c[(c[d2 + 32 >> 2] | 0) + (f2 << 2) >> 2] = c[r2 >> 2];
                      c[d2 + 24 >> 2] = f2 + 1;
                      k2 = k2 + 1 | 0;
                    } while ((k2 | 0) != 4);
                    q2 = q2 + 1 | 0;
                    if ((q2 | 0) >= (c[b2 + 812 >> 2] | 0))
                      break g;
                  }
                }
                q2 = c[b2 + 792 >> 2] | 0;
                if ((f2 | 0) < (q2 | 0)) {
                  if ((c[b2 + 1156 >> 2] | 0) < (q2 | 0)) {
                    if (q2) {
                      c[6324] = (c[6324] | 0) + 1;
                      h2 = ic((q2 << 2 | 3) + 16 | 0) | 0;
                      if (!h2)
                        h2 = 0;
                      else {
                        c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                        h2 = h2 + 4 + 15 & -16;
                      }
                      k2 = c[b2 + 1152 >> 2] | 0;
                      if ((k2 | 0) > 0) {
                        j2 = 0;
                        do {
                          c[h2 + (j2 << 2) >> 2] = c[(c[b2 + 1160 >> 2] | 0) + (j2 << 2) >> 2];
                          j2 = j2 + 1 | 0;
                        } while ((j2 | 0) != (k2 | 0));
                        k2 = b2 + 1160 | 0;
                      } else
                        k2 = b2 + 1160 | 0;
                    } else {
                      h2 = 0;
                      k2 = b2 + 1160 | 0;
                    }
                    j2 = c[k2 >> 2] | 0;
                    if (j2 | 0) {
                      if (a[b2 + 1164 >> 0] | 0) {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[j2 + -4 >> 2] | 0);
                      }
                      c[k2 >> 2] = 0;
                    }
                    a[b2 + 1164 >> 0] = 1;
                    c[k2 >> 2] = h2;
                    c[b2 + 1156 >> 2] = q2;
                  }
                  do {
                    c[(c[b2 + 1160 >> 2] | 0) + (f2 << 2) >> 2] = 0;
                    f2 = f2 + 1 | 0;
                  } while ((f2 | 0) != (q2 | 0));
                }
                c[b2 + 1152 >> 2] = q2;
                if ((q2 | 0) > 0) {
                  h2 = 0;
                  do {
                    c[6324] = (c[6324] | 0) + 1;
                    f2 = ic(403) | 0;
                    if (!f2)
                      f2 = 0;
                    else {
                      c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                      f2 = f2 + 4 + 15 & -16;
                    }
                    a[f2 + 16 >> 0] = 1;
                    c[f2 + 12 >> 2] = 0;
                    c[f2 + 4 >> 2] = 0;
                    c[f2 + 8 >> 2] = 0;
                    a[f2 + 36 >> 0] = 1;
                    c[f2 + 32 >> 2] = 0;
                    c[f2 + 24 >> 2] = 0;
                    c[f2 + 28 >> 2] = 0;
                    a[f2 + 56 >> 0] = 1;
                    c[f2 + 52 >> 2] = 0;
                    c[f2 + 44 >> 2] = 0;
                    c[f2 + 48 >> 2] = 0;
                    K2 = f2 + 348 | 0;
                    c[K2 >> 2] = 0;
                    c[K2 + 4 >> 2] = 0;
                    c[K2 + 8 >> 2] = 0;
                    c[K2 + 12 >> 2] = 0;
                    c[K2 + 16 >> 2] = 0;
                    g[f2 + 368 >> 2] = 100;
                    g[f2 + 372 >> 2] = 0.009999999776482582;
                    a[f2 + 376 >> 0] = 0;
                    c[(c[b2 + 1160 >> 2] | 0) + (h2 << 2) >> 2] = f2;
                    a[(c[(c[b2 + 1160 >> 2] | 0) + (h2 << 2) >> 2] | 0) + 377 >> 0] = 1;
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) < (c[b2 + 1152 >> 2] | 0));
                }
                if ((c[b2 + 792 >> 2] | 0) > 0) {
                  q2 = 0;
                  do {
                    k2 = 0;
                    do {
                      d2 = c[(c[b2 + 1160 >> 2] | 0) + (q2 << 2) >> 2] | 0;
                      r2 = (c[b2 + 800 >> 2] | 0) + (q2 * 44 | 0) + 8 + (k2 << 2) | 0;
                      h2 = c[d2 + 24 >> 2] | 0;
                      if ((h2 | 0) == (c[d2 + 28 >> 2] | 0) ? (t2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (t2 | 0)) : 0) {
                        if (!t2)
                          f2 = 0;
                        else {
                          c[6324] = (c[6324] | 0) + 1;
                          f2 = ic((t2 << 2 | 3) + 16 | 0) | 0;
                          if (!f2)
                            f2 = 0;
                          else {
                            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                            f2 = f2 + 4 + 15 & -16;
                          }
                          h2 = c[d2 + 24 >> 2] | 0;
                        }
                        if ((h2 | 0) > 0) {
                          j2 = 0;
                          do {
                            c[f2 + (j2 << 2) >> 2] = c[(c[d2 + 32 >> 2] | 0) + (j2 << 2) >> 2];
                            j2 = j2 + 1 | 0;
                          } while ((j2 | 0) != (h2 | 0));
                        }
                        j2 = c[d2 + 32 >> 2] | 0;
                        if (j2) {
                          if (a[d2 + 36 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                            h2 = c[d2 + 24 >> 2] | 0;
                          }
                          c[d2 + 32 >> 2] = 0;
                        }
                        a[d2 + 36 >> 0] = 1;
                        c[d2 + 32 >> 2] = f2;
                        c[d2 + 28 >> 2] = t2;
                        f2 = h2;
                      } else
                        f2 = h2;
                      c[(c[d2 + 32 >> 2] | 0) + (f2 << 2) >> 2] = c[r2 >> 2];
                      c[d2 + 24 >> 2] = f2 + 1;
                      k2 = k2 + 1 | 0;
                    } while ((k2 | 0) != 3);
                    q2 = q2 + 1 | 0;
                  } while ((q2 | 0) < (c[b2 + 792 >> 2] | 0));
                }
              }
            while (0);
          f2 = c[b2 + 1152 >> 2] | 0;
          if (!f2) {
            K2 = 0;
            i = J2;
            return K2 | 0;
          }
          if ((f2 | 0) > 0) {
            s2 = 0;
            do {
              t2 = c[(c[b2 + 1160 >> 2] | 0) + (s2 << 2) >> 2] | 0;
              g[t2 + 128 >> 2] = 0;
              d2 = c[t2 + 24 >> 2] | 0;
              q2 = c[t2 + 4 >> 2] | 0;
              if ((d2 | 0) > (q2 | 0)) {
                do
                  if ((c[t2 + 8 >> 2] | 0) < (d2 | 0)) {
                    if (!d2) {
                      f2 = 0;
                      j2 = q2;
                    } else {
                      c[6324] = (c[6324] | 0) + 1;
                      f2 = ic((d2 << 2 | 3) + 16 | 0) | 0;
                      if (!f2)
                        f2 = 0;
                      else {
                        c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                        f2 = f2 + 4 + 15 & -16;
                      }
                      j2 = c[t2 + 4 >> 2] | 0;
                    }
                    k2 = c[t2 + 12 >> 2] | 0;
                    if ((j2 | 0) <= 0) {
                      if (!k2) {
                        a[t2 + 16 >> 0] = 1;
                        c[t2 + 12 >> 2] = f2;
                        c[t2 + 8 >> 2] = d2;
                        break;
                      }
                    } else {
                      h2 = 0;
                      do {
                        c[f2 + (h2 << 2) >> 2] = c[k2 + (h2 << 2) >> 2];
                        h2 = h2 + 1 | 0;
                      } while ((h2 | 0) != (j2 | 0));
                    }
                    if (a[t2 + 16 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[k2 + -4 >> 2] | 0);
                    }
                    a[t2 + 16 >> 0] = 1;
                    c[t2 + 12 >> 2] = f2;
                    c[t2 + 8 >> 2] = d2;
                  } else
                    f2 = c[t2 + 12 >> 2] | 0;
                while (0);
                yn(f2 + (q2 << 2) | 0, 0, d2 - q2 << 2 | 0) | 0;
                k2 = c[t2 + 24 >> 2] | 0;
              } else
                k2 = d2;
              c[t2 + 4 >> 2] = d2;
              if ((k2 | 0) > 0) {
                h2 = c[t2 + 32 >> 2] | 0;
                j2 = c[t2 + 12 >> 2] | 0;
                f2 = 0;
                do {
                  m2 = +g[(c[h2 + (f2 << 2) >> 2] | 0) + 88 >> 2];
                  if (m2 == 0) {
                    a[t2 + 376 >> 0] = 1;
                    m2 = 999999984306749400;
                  } else
                    m2 = 1 / m2;
                  g[j2 + (f2 << 2) >> 2] = m2;
                  n2 = m2 + +g[t2 + 128 >> 2];
                  g[t2 + 128 >> 2] = n2;
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (k2 | 0));
                g[t2 + 128 >> 2] = 1 / n2;
                h2 = c[t2 + 32 >> 2] | 0;
                j2 = c[t2 + 12 >> 2] | 0;
                f2 = 0;
                o2 = 0;
                p2 = 0;
                m2 = 0;
                do {
                  K2 = c[h2 + (f2 << 2) >> 2] | 0;
                  B2 = +g[j2 + (f2 << 2) >> 2];
                  o2 = o2 + +g[K2 + 8 >> 2] * B2;
                  m2 = m2 + B2 * +g[K2 + 12 >> 2];
                  p2 = p2 + B2 * +g[K2 + 16 >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (k2 | 0));
                n2 = 1 / n2;
              } else {
                n2 = 1 / +g[t2 + 128 >> 2];
                g[t2 + 128 >> 2] = n2;
                o2 = 0;
                p2 = 0;
                m2 = 0;
              }
              z2 = o2 * n2;
              x2 = m2 * n2;
              o2 = p2 * n2;
              g[t2 + 228 >> 2] = z2;
              g[t2 + 232 >> 2] = x2;
              g[t2 + 236 >> 2] = o2;
              g[t2 + 240 >> 2] = 0;
              f2 = t2 + 316 | 0;
              h2 = f2 + 36 | 0;
              do {
                c[f2 >> 2] = 0;
                f2 = f2 + 4 | 0;
              } while ((f2 | 0) < (h2 | 0));
              f2 = t2 + 132 | 0;
              h2 = f2 + 48 | 0;
              do {
                c[f2 >> 2] = 0;
                f2 = f2 + 4 | 0;
              } while ((f2 | 0) < (h2 | 0));
              h2 = c[t2 + 24 >> 2] | 0;
              if ((h2 | 0) > 0) {
                j2 = c[t2 + 32 >> 2] | 0;
                k2 = c[t2 + 12 >> 2] | 0;
                f2 = 0;
                B2 = +g[t2 + 132 >> 2];
                A2 = +g[t2 + 152 >> 2];
                y2 = 0;
                n2 = +g[t2 + 136 >> 2];
                m2 = +g[t2 + 140 >> 2];
                p2 = +g[t2 + 156 >> 2];
                do {
                  K2 = c[j2 + (f2 << 2) >> 2] | 0;
                  O2 = +g[K2 + 8 >> 2] - z2;
                  M2 = +g[K2 + 12 >> 2] - x2;
                  N2 = +g[K2 + 16 >> 2] - o2;
                  L2 = +g[k2 + (f2 << 2) >> 2];
                  B2 = B2 + L2 * (M2 * M2 + N2 * N2);
                  g[t2 + 132 >> 2] = B2;
                  A2 = L2 * (O2 * O2 + N2 * N2) + A2;
                  g[t2 + 152 >> 2] = A2;
                  y2 = (O2 * O2 + M2 * M2) * L2 + y2;
                  g[t2 + 172 >> 2] = y2;
                  n2 = n2 - M2 * O2 * L2;
                  g[t2 + 136 >> 2] = n2;
                  m2 = m2 - N2 * O2 * L2;
                  g[t2 + 140 >> 2] = m2;
                  p2 = p2 - N2 * M2 * L2;
                  g[t2 + 156 >> 2] = p2;
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (h2 | 0));
                j2 = (g[l >> 2] = p2, c[l >> 2] | 0);
                f2 = (g[l >> 2] = m2, c[l >> 2] | 0);
                k2 = t2 + 136 | 0;
                q2 = t2 + 140 | 0;
                d2 = t2 + 156 | 0;
                r2 = t2 + 152 | 0;
                x2 = A2;
                h2 = (g[l >> 2] = n2, c[l >> 2] | 0);
                o2 = B2;
              } else {
                h2 = c[t2 + 136 >> 2] | 0;
                K2 = c[t2 + 140 >> 2] | 0;
                j2 = c[t2 + 156 >> 2] | 0;
                p2 = (c[l >> 2] = j2, +g[l >> 2]);
                n2 = (c[l >> 2] = h2, +g[l >> 2]);
                k2 = t2 + 136 | 0;
                q2 = t2 + 140 | 0;
                d2 = t2 + 156 | 0;
                r2 = t2 + 152 | 0;
                y2 = 0;
                x2 = +g[t2 + 152 >> 2];
                f2 = K2;
                o2 = +g[t2 + 132 >> 2];
                m2 = (c[l >> 2] = K2, +g[l >> 2]);
              }
              M2 = (c[l >> 2] = j2, +g[l >> 2]);
              z2 = x2 * y2 - p2 * M2;
              L2 = (c[l >> 2] = f2, +g[l >> 2]);
              N2 = (c[l >> 2] = h2, +g[l >> 2]);
              A2 = p2 * L2 - y2 * N2;
              B2 = M2 * N2 - x2 * L2;
              O2 = 1 / (z2 * o2 + n2 * A2 + B2 * m2);
              g[t2 + 132 >> 2] = z2 * O2;
              g[k2 >> 2] = (M2 * m2 - y2 * n2) * O2;
              g[q2 >> 2] = (p2 * n2 - x2 * m2) * O2;
              g[t2 + 144 >> 2] = 0;
              g[t2 + 148 >> 2] = A2 * O2;
              g[r2 >> 2] = (y2 * o2 - L2 * m2) * O2;
              g[d2 >> 2] = (N2 * m2 - p2 * o2) * O2;
              g[t2 + 160 >> 2] = 0;
              g[t2 + 164 >> 2] = B2 * O2;
              g[t2 + 168 >> 2] = (L2 * n2 - M2 * o2) * O2;
              g[t2 + 172 >> 2] = (x2 * o2 - N2 * n2) * O2;
              g[t2 + 176 >> 2] = 0;
              c[t2 + 60 >> 2] = 1065353216;
              c[t2 + 64 >> 2] = 0;
              c[t2 + 64 + 4 >> 2] = 0;
              c[t2 + 64 + 8 >> 2] = 0;
              c[t2 + 64 + 12 >> 2] = 0;
              c[t2 + 80 >> 2] = 1065353216;
              c[t2 + 84 >> 2] = 0;
              c[t2 + 84 + 4 >> 2] = 0;
              c[t2 + 84 + 8 >> 2] = 0;
              c[t2 + 84 + 12 >> 2] = 0;
              c[t2 + 100 >> 2] = 1065353216;
              c[t2 + 104 >> 2] = 0;
              c[t2 + 104 + 4 >> 2] = 0;
              c[t2 + 104 + 8 >> 2] = 0;
              c[t2 + 104 + 12 >> 2] = 0;
              c[t2 + 104 + 16 >> 2] = 0;
              c[t2 + 108 >> 2] = c[t2 + 228 >> 2];
              c[t2 + 108 + 4 >> 2] = c[t2 + 228 + 4 >> 2];
              c[t2 + 108 + 8 >> 2] = c[t2 + 228 + 8 >> 2];
              c[t2 + 108 + 12 >> 2] = c[t2 + 228 + 12 >> 2];
              q2 = c[t2 + 24 >> 2] | 0;
              k2 = c[t2 + 44 >> 2] | 0;
              if ((k2 | 0) < (q2 | 0)) {
                if ((c[t2 + 48 >> 2] | 0) < (q2 | 0)) {
                  if (!q2) {
                    f2 = 0;
                    j2 = k2;
                  } else {
                    c[6324] = (c[6324] | 0) + 1;
                    f2 = ic((q2 << 4 | 3) + 16 | 0) | 0;
                    if (!f2)
                      f2 = 0;
                    else {
                      c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                      f2 = f2 + 4 + 15 & -16;
                    }
                    j2 = c[t2 + 44 >> 2] | 0;
                  }
                  if ((j2 | 0) > 0) {
                    h2 = 0;
                    do {
                      K2 = f2 + (h2 << 4) | 0;
                      I2 = (c[t2 + 52 >> 2] | 0) + (h2 << 4) | 0;
                      c[K2 >> 2] = c[I2 >> 2];
                      c[K2 + 4 >> 2] = c[I2 + 4 >> 2];
                      c[K2 + 8 >> 2] = c[I2 + 8 >> 2];
                      c[K2 + 12 >> 2] = c[I2 + 12 >> 2];
                      h2 = h2 + 1 | 0;
                    } while ((h2 | 0) != (j2 | 0));
                  }
                  h2 = c[t2 + 52 >> 2] | 0;
                  if (h2 | 0) {
                    if (a[t2 + 56 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[h2 + -4 >> 2] | 0);
                    }
                    c[t2 + 52 >> 2] = 0;
                  }
                  a[t2 + 56 >> 0] = 1;
                  c[t2 + 52 >> 2] = f2;
                  c[t2 + 48 >> 2] = q2;
                  h2 = t2 + 52 | 0;
                } else
                  h2 = t2 + 52 | 0;
                f2 = k2;
                do {
                  K2 = (c[h2 >> 2] | 0) + (f2 << 4) | 0;
                  c[K2 >> 2] = c[J2 >> 2];
                  c[K2 + 4 >> 2] = c[J2 + 4 >> 2];
                  c[K2 + 8 >> 2] = c[J2 + 8 >> 2];
                  c[K2 + 12 >> 2] = c[J2 + 12 >> 2];
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) != (q2 | 0));
              }
              c[t2 + 44 >> 2] = q2;
              if ((q2 | 0) > 0) {
                f2 = 0;
                do {
                  K2 = c[t2 + 52 >> 2] | 0;
                  I2 = c[(c[t2 + 32 >> 2] | 0) + (f2 << 2) >> 2] | 0;
                  N2 = +g[I2 + 12 >> 2] - +g[t2 + 232 >> 2];
                  O2 = +g[I2 + 16 >> 2] - +g[t2 + 236 >> 2];
                  g[K2 + (f2 << 4) >> 2] = +g[I2 + 8 >> 2] - +g[t2 + 228 >> 2];
                  g[K2 + (f2 << 4) + 4 >> 2] = N2;
                  g[K2 + (f2 << 4) + 8 >> 2] = O2;
                  g[K2 + (f2 << 4) + 12 >> 2] = 0;
                  f2 = f2 + 1 | 0;
                } while ((f2 | 0) < (c[t2 + 44 >> 2] | 0));
              }
              s2 = s2 + 1 | 0;
            } while ((s2 | 0) < (c[b2 + 1152 >> 2] | 0));
          }
          Mc(b2);
          f2 = c[b2 + 1152 >> 2] | 0;
          d2 = S(f2, f2) | 0;
          q2 = c[b2 + 1172 >> 2] | 0;
          if ((d2 | 0) > (q2 | 0)) {
            do
              if ((c[b2 + 1176 >> 2] | 0) < (d2 | 0)) {
                if (!d2) {
                  f2 = 0;
                  j2 = q2;
                } else {
                  c[6324] = (c[6324] | 0) + 1;
                  f2 = ic(d2 + 19 | 0) | 0;
                  if (!f2)
                    f2 = 0;
                  else {
                    c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
                    f2 = f2 + 4 + 15 & -16;
                  }
                  j2 = c[b2 + 1172 >> 2] | 0;
                }
                k2 = c[b2 + 1180 >> 2] | 0;
                if ((j2 | 0) <= 0) {
                  if (!k2) {
                    a[b2 + 1184 >> 0] = 1;
                    c[b2 + 1180 >> 2] = f2;
                    c[b2 + 1176 >> 2] = d2;
                    break;
                  }
                } else {
                  h2 = 0;
                  do {
                    a[f2 + h2 >> 0] = a[k2 + h2 >> 0] | 0;
                    h2 = h2 + 1 | 0;
                  } while ((h2 | 0) != (j2 | 0));
                }
                if (a[b2 + 1184 >> 0] | 0) {
                  c[6325] = (c[6325] | 0) + 1;
                  Rc(c[k2 + -4 >> 2] | 0);
                }
                a[b2 + 1184 >> 0] = 1;
                c[b2 + 1180 >> 2] = f2;
                c[b2 + 1176 >> 2] = d2;
              } else
                f2 = c[b2 + 1180 >> 2] | 0;
            while (0);
            yn(f2 + q2 | 0, 0, d2 - q2 | 0) | 0;
            f2 = c[b2 + 1152 >> 2] | 0;
          }
          c[b2 + 1172 >> 2] = d2;
          if ((f2 | 0) <= 0) {
            K2 = f2;
            i = J2;
            return K2 | 0;
          }
          e2 = c[b2 + 1160 >> 2] | 0;
          u2 = c[b2 + 1180 >> 2] | 0;
          t2 = 0;
          do {
            v2 = c[e2 + (t2 << 2) >> 2] | 0;
            c[v2 + 380 >> 2] = t2;
            w2 = c[v2 + 24 >> 2] | 0;
            s2 = 0;
            do {
              k2 = c[e2 + (s2 << 2) >> 2] | 0;
              h:
                do
                  if ((w2 | 0) > 0) {
                    q2 = c[k2 + 24 >> 2] | 0;
                    h2 = 0;
                    while (1) {
                      if ((q2 | 0) > 0) {
                        r2 = c[(c[v2 + 32 >> 2] | 0) + (h2 << 2) >> 2] | 0;
                        d2 = c[k2 + 32 >> 2] | 0;
                        j2 = 0;
                        do {
                          if ((r2 | 0) == (c[d2 + (j2 << 2) >> 2] | 0)) {
                            h2 = 1;
                            break h;
                          }
                          j2 = j2 + 1 | 0;
                        } while ((j2 | 0) < (q2 | 0));
                      }
                      h2 = h2 + 1 | 0;
                      if ((h2 | 0) >= (w2 | 0)) {
                        h2 = 0;
                        break;
                      }
                    }
                  } else
                    h2 = 0;
                while (0);
              a[u2 + ((S(f2, s2) | 0) + t2) >> 0] = h2;
              s2 = s2 + 1 | 0;
            } while ((s2 | 0) != (f2 | 0));
            t2 = t2 + 1 | 0;
          } while ((t2 | 0) != (f2 | 0));
          i = J2;
          return f2 | 0;
        }
        function dc(b2, e2, f2) {
          b2 = b2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0;
          A2 = i;
          i = i + 80 | 0;
          Ue(b2, e2, f2) | 0;
          a[A2 + 16 >> 0] = 1;
          c[A2 + 12 >> 2] = 0;
          c[A2 + 4 >> 2] = 0;
          c[A2 + 8 >> 2] = 0;
          a[A2 + 36 >> 0] = 1;
          c[A2 + 32 >> 2] = 0;
          c[A2 + 24 >> 2] = 0;
          c[A2 + 28 >> 2] = 0;
          a[A2 + 56 >> 0] = 1;
          c[A2 + 52 >> 2] = 0;
          c[A2 + 44 >> 2] = 0;
          c[A2 + 48 >> 2] = 0;
          a[A2 + 76 >> 0] = 1;
          c[A2 + 72 >> 2] = 0;
          c[A2 + 64 >> 2] = 0;
          c[A2 + 68 >> 2] = 0;
          y2 = c[b2 + 912 >> 2] | 0;
          c[e2 + 300 >> 2] = y2;
          if (y2) {
            y2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, b2 + 908 | 0) | 0;
            c[e2 + 268 >> 2] = y2;
            if (y2 | 0) {
              k2 = c[e2 + 300 >> 2] | 0;
              n2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 4, k2) | 0;
              if ((k2 | 0) > 0) {
                g2 = c[n2 + 8 >> 2] | 0;
                h2 = 0;
                while (1) {
                  l2 = c[(c[b2 + 920 >> 2] | 0) + (h2 << 2) >> 2] | 0;
                  if (!l2) {
                    j2 = 0;
                    m2 = 0;
                  } else {
                    j2 = l2;
                    m2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, l2) | 0;
                  }
                  c[g2 >> 2] = m2;
                  if (!(Jb[c[(c[f2 >> 2] | 0) + 24 >> 2] & 31](f2, j2) | 0)) {
                    y2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 16, 1) | 0;
                    t2 = c[y2 + 8 >> 2] | 0;
                    c[t2 + 12 >> 2] = c[l2 + 16 >> 2];
                    c[t2 + 4 >> 2] = c[l2 + 8 >> 2];
                    c[t2 >> 2] = c[l2 + 4 >> 2];
                    c[t2 + 8 >> 2] = c[l2 + 12 >> 2];
                    ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, y2, 10406, 1414349395, j2);
                  }
                  h2 = h2 + 1 | 0;
                  if ((h2 | 0) >= (k2 | 0)) {
                    g2 = f2;
                    break;
                  } else
                    g2 = g2 + 4 | 0;
                }
              } else
                g2 = f2;
              ib[c[(c[g2 >> 2] | 0) + 20 >> 2] & 31](f2, n2, 10406, 1497453121, b2 + 908 | 0);
            }
          } else
            c[e2 + 268 >> 2] = 0;
          y2 = c[b2 + 752 >> 2] | 0;
          c[e2 + 304 >> 2] = y2;
          if (y2) {
            y2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, b2 + 748 | 0) | 0;
            c[e2 + 272 >> 2] = y2;
            if (y2 | 0) {
              s2 = c[e2 + 304 >> 2] | 0;
              t2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 100, s2) | 0;
              if ((s2 | 0) > 0) {
                q2 = 0;
                r2 = c[t2 + 8 >> 2] | 0;
                while (1) {
                  h2 = c[b2 + 760 >> 2] | 0;
                  c[r2 + 52 >> 2] = c[h2 + (q2 * 104 | 0) + 56 >> 2];
                  c[r2 + 56 >> 2] = c[h2 + (q2 * 104 | 0) + 60 >> 2];
                  c[r2 + 60 >> 2] = c[h2 + (q2 * 104 | 0) + 64 >> 2];
                  c[r2 + 64 >> 2] = c[h2 + (q2 * 104 | 0) + 68 >> 2];
                  c[r2 + 88 >> 2] = c[h2 + (q2 * 104 | 0) + 92 >> 2];
                  c[r2 + 92 >> 2] = (a[h2 + (q2 * 104 | 0) + 100 >> 0] << 7 & 255) << 24 >> 24 >> 7 << 24 >> 24;
                  c[r2 + 84 >> 2] = c[h2 + (q2 * 104 | 0) + 88 >> 2];
                  g2 = c[h2 + (q2 * 104 | 0) + 4 >> 2] | 0;
                  if (!g2) {
                    j2 = 0;
                    g2 = h2;
                  } else {
                    j2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, g2) | 0;
                    g2 = c[b2 + 760 >> 2] | 0;
                  }
                  c[r2 >> 2] = j2;
                  c[r2 + 68 >> 2] = c[g2 + (q2 * 104 | 0) + 72 >> 2];
                  c[r2 + 72 >> 2] = c[g2 + (q2 * 104 | 0) + 76 >> 2];
                  c[r2 + 76 >> 2] = c[g2 + (q2 * 104 | 0) + 80 >> 2];
                  c[r2 + 80 >> 2] = c[g2 + (q2 * 104 | 0) + 84 >> 2];
                  c[r2 + 4 >> 2] = c[g2 + (q2 * 104 | 0) + 8 >> 2];
                  c[r2 + 8 >> 2] = c[g2 + (q2 * 104 | 0) + 12 >> 2];
                  c[r2 + 12 >> 2] = c[g2 + (q2 * 104 | 0) + 16 >> 2];
                  c[r2 + 16 >> 2] = c[g2 + (q2 * 104 | 0) + 20 >> 2];
                  c[r2 + 20 >> 2] = c[g2 + (q2 * 104 | 0) + 24 >> 2];
                  c[r2 + 24 >> 2] = c[g2 + (q2 * 104 | 0) + 28 >> 2];
                  c[r2 + 28 >> 2] = c[g2 + (q2 * 104 | 0) + 32 >> 2];
                  c[r2 + 32 >> 2] = c[g2 + (q2 * 104 | 0) + 36 >> 2];
                  c[r2 + 36 >> 2] = c[g2 + (q2 * 104 | 0) + 40 >> 2];
                  c[r2 + 40 >> 2] = c[g2 + (q2 * 104 | 0) + 44 >> 2];
                  c[r2 + 44 >> 2] = c[g2 + (q2 * 104 | 0) + 48 >> 2];
                  c[r2 + 48 >> 2] = c[g2 + (q2 * 104 | 0) + 52 >> 2];
                  l2 = (c[b2 + 760 >> 2] | 0) + (q2 * 104 | 0) | 0;
                  p2 = (l2 + ~(l2 << 15) >> 10 ^ l2 + ~(l2 << 15)) * 9 | 0;
                  p2 = (p2 >> 6 ^ p2) + ~((p2 >> 6 ^ p2) << 11) >> 16 ^ (p2 >> 6 ^ p2) + ~((p2 >> 6 ^ p2) << 11);
                  m2 = c[A2 + 48 >> 2] | 0;
                  a:
                    do
                      if ((p2 & m2 + -1) >>> 0 < (c[A2 + 4 >> 2] | 0) >>> 0 ? (u2 = c[(c[A2 + 12 >> 2] | 0) + ((p2 & m2 + -1) << 2) >> 2] | 0, (u2 | 0) != -1) : 0) {
                        h2 = c[A2 + 72 >> 2] | 0;
                        j2 = c[A2 + 32 >> 2] | 0;
                        g2 = u2;
                        while (1) {
                          if ((l2 | 0) == (c[h2 + (g2 << 3) >> 2] | 0))
                            break;
                          g2 = c[j2 + (g2 << 2) >> 2] | 0;
                          if ((g2 | 0) == -1) {
                            z2 = 27;
                            break a;
                          }
                        }
                        c[(c[A2 + 52 >> 2] | 0) + (g2 << 2) >> 2] = q2;
                      } else
                        z2 = 27;
                    while (0);
                  if ((z2 | 0) == 27) {
                    z2 = 0;
                    o2 = c[A2 + 44 >> 2] | 0;
                    if ((o2 | 0) == (m2 | 0)) {
                      g2 = m2 | 0 ? m2 << 1 : 1;
                      if ((m2 | 0) < (g2 | 0)) {
                        if ((g2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, v2 = ic((g2 << 2 | 3) + 16 | 0) | 0, (v2 | 0) != 0) : 0) {
                          c[(v2 + 4 + 15 & -16) + -4 >> 2] = v2;
                          k2 = v2 + 4 + 15 & -16;
                        } else
                          k2 = 0;
                        j2 = c[A2 + 52 >> 2] | 0;
                        if ((m2 | 0) <= 0)
                          if (!j2)
                            h2 = m2;
                          else
                            z2 = 35;
                        else {
                          h2 = 0;
                          do {
                            c[k2 + (h2 << 2) >> 2] = c[j2 + (h2 << 2) >> 2];
                            h2 = h2 + 1 | 0;
                          } while ((h2 | 0) != (m2 | 0));
                          z2 = 35;
                        }
                        if ((z2 | 0) == 35) {
                          z2 = 0;
                          if (a[A2 + 56 >> 0] | 0) {
                            c[6325] = (c[6325] | 0) + 1;
                            Rc(c[j2 + -4 >> 2] | 0);
                          }
                          c[A2 + 52 >> 2] = 0;
                          h2 = c[A2 + 44 >> 2] | 0;
                        }
                        a[A2 + 56 >> 0] = 1;
                        c[A2 + 52 >> 2] = k2;
                        c[A2 + 48 >> 2] = g2;
                      } else {
                        g2 = m2;
                        h2 = m2;
                      }
                    } else {
                      g2 = m2;
                      h2 = o2;
                    }
                    c[(c[A2 + 52 >> 2] | 0) + (h2 << 2) >> 2] = q2;
                    c[A2 + 44 >> 2] = h2 + 1;
                    h2 = c[A2 + 64 >> 2] | 0;
                    if ((h2 | 0) == (c[A2 + 68 >> 2] | 0) ? (w2 = h2 | 0 ? h2 << 1 : 1, (h2 | 0) < (w2 | 0)) : 0) {
                      if ((w2 | 0) != 0 ? (c[6324] = (c[6324] | 0) + 1, x2 = ic((w2 << 3 | 3) + 16 | 0) | 0, (x2 | 0) != 0) : 0) {
                        c[(x2 + 4 + 15 & -16) + -4 >> 2] = x2;
                        j2 = x2 + 4 + 15 & -16;
                      } else
                        j2 = 0;
                      if ((h2 | 0) > 0) {
                        g2 = 0;
                        do {
                          k2 = (c[A2 + 72 >> 2] | 0) + (g2 << 3) | 0;
                          n2 = c[k2 + 4 >> 2] | 0;
                          y2 = j2 + (g2 << 3) | 0;
                          c[y2 >> 2] = c[k2 >> 2];
                          c[y2 + 4 >> 2] = n2;
                          g2 = g2 + 1 | 0;
                        } while ((g2 | 0) != (h2 | 0));
                      }
                      g2 = c[A2 + 72 >> 2] | 0;
                      if (g2 | 0) {
                        if (a[A2 + 76 >> 0] | 0) {
                          c[6325] = (c[6325] | 0) + 1;
                          Rc(c[g2 + -4 >> 2] | 0);
                        }
                        c[A2 + 72 >> 2] = 0;
                      }
                      a[A2 + 76 >> 0] = 1;
                      c[A2 + 72 >> 2] = j2;
                      c[A2 + 68 >> 2] = w2;
                      h2 = c[A2 + 64 >> 2] | 0;
                      g2 = c[A2 + 48 >> 2] | 0;
                    }
                    c[(c[A2 + 72 >> 2] | 0) + (h2 << 3) >> 2] = l2;
                    c[A2 + 64 >> 2] = h2 + 1;
                    if ((m2 | 0) < (g2 | 0)) {
                      n2 = c[A2 + 4 >> 2] | 0;
                      do
                        if ((n2 | 0) < (g2 | 0)) {
                          b:
                            do
                              if ((c[A2 + 8 >> 2] | 0) < (g2 | 0)) {
                                do
                                  if (!g2)
                                    h2 = 0;
                                  else {
                                    c[6324] = (c[6324] | 0) + 1;
                                    h2 = ic((g2 << 2 | 3) + 16 | 0) | 0;
                                    if (!h2) {
                                      h2 = 0;
                                      break;
                                    }
                                    c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                    h2 = h2 + 4 + 15 & -16;
                                  }
                                while (0);
                                k2 = c[A2 + 12 >> 2] | 0;
                                do
                                  if ((n2 | 0) > 0) {
                                    j2 = 0;
                                    do {
                                      c[h2 + (j2 << 2) >> 2] = c[k2 + (j2 << 2) >> 2];
                                      j2 = j2 + 1 | 0;
                                    } while ((j2 | 0) != (n2 | 0));
                                  } else {
                                    if (k2 | 0)
                                      break;
                                    a[A2 + 16 >> 0] = 1;
                                    c[A2 + 12 >> 2] = h2;
                                    c[A2 + 8 >> 2] = g2;
                                    break b;
                                  }
                                while (0);
                                if (a[A2 + 16 >> 0] | 0) {
                                  c[6325] = (c[6325] | 0) + 1;
                                  Rc(c[k2 + -4 >> 2] | 0);
                                }
                                a[A2 + 16 >> 0] = 1;
                                c[A2 + 12 >> 2] = h2;
                                c[A2 + 8 >> 2] = g2;
                              } else
                                h2 = c[A2 + 12 >> 2] | 0;
                            while (0);
                          m2 = g2 << 2;
                          yn(h2 + (n2 << 2) | 0, 0, m2 - (n2 << 2) | 0) | 0;
                          c[A2 + 4 >> 2] = g2;
                          l2 = c[A2 + 24 >> 2] | 0;
                          if ((l2 | 0) < (g2 | 0)) {
                            c:
                              do
                                if ((c[A2 + 28 >> 2] | 0) < (g2 | 0)) {
                                  do
                                    if (!g2)
                                      h2 = 0;
                                    else {
                                      c[6324] = (c[6324] | 0) + 1;
                                      h2 = ic((m2 | 3) + 16 | 0) | 0;
                                      if (!h2) {
                                        h2 = 0;
                                        break;
                                      }
                                      c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                                      h2 = h2 + 4 + 15 & -16;
                                    }
                                  while (0);
                                  k2 = c[A2 + 32 >> 2] | 0;
                                  do
                                    if ((l2 | 0) > 0) {
                                      j2 = 0;
                                      do {
                                        c[h2 + (j2 << 2) >> 2] = c[k2 + (j2 << 2) >> 2];
                                        j2 = j2 + 1 | 0;
                                      } while ((j2 | 0) != (l2 | 0));
                                    } else {
                                      if (k2 | 0)
                                        break;
                                      a[A2 + 36 >> 0] = 1;
                                      c[A2 + 32 >> 2] = h2;
                                      c[A2 + 28 >> 2] = g2;
                                      break c;
                                    }
                                  while (0);
                                  if (a[A2 + 36 >> 0] | 0) {
                                    c[6325] = (c[6325] | 0) + 1;
                                    Rc(c[k2 + -4 >> 2] | 0);
                                  }
                                  a[A2 + 36 >> 0] = 1;
                                  c[A2 + 32 >> 2] = h2;
                                  c[A2 + 28 >> 2] = g2;
                                } else
                                  h2 = c[A2 + 32 >> 2] | 0;
                              while (0);
                            yn(h2 + (l2 << 2) | 0, 0, m2 - (l2 << 2) | 0) | 0;
                          }
                          c[A2 + 24 >> 2] = g2;
                          if ((g2 | 0) > 0) {
                            yn(c[A2 + 12 >> 2] | 0, -1, m2 | 0) | 0;
                            yn(c[A2 + 32 >> 2] | 0, -1, m2 | 0) | 0;
                          }
                          if ((n2 | 0) <= 0) {
                            g2 = c[A2 + 48 >> 2] | 0;
                            break;
                          }
                          j2 = c[A2 + 72 >> 2] | 0;
                          k2 = c[A2 + 12 >> 2] | 0;
                          l2 = c[A2 + 32 >> 2] | 0;
                          g2 = c[A2 + 48 >> 2] | 0;
                          h2 = 0;
                          do {
                            y2 = c[j2 + (h2 << 3) >> 2] | 0;
                            y2 = (y2 + ~(y2 << 15) >> 10 ^ y2 + ~(y2 << 15)) * 9 | 0;
                            y2 = k2 + ((((y2 >> 6 ^ y2) + ~((y2 >> 6 ^ y2) << 11) >> 16 ^ (y2 >> 6 ^ y2) + ~((y2 >> 6 ^ y2) << 11)) & g2 + -1) << 2) | 0;
                            c[l2 + (h2 << 2) >> 2] = c[y2 >> 2];
                            c[y2 >> 2] = h2;
                            h2 = h2 + 1 | 0;
                          } while ((h2 | 0) != (n2 | 0));
                        }
                      while (0);
                      g2 = p2 & g2 + -1;
                    } else
                      g2 = p2 & m2 + -1;
                    y2 = (c[A2 + 12 >> 2] | 0) + (g2 << 2) | 0;
                    c[(c[A2 + 32 >> 2] | 0) + (o2 << 2) >> 2] = c[y2 >> 2];
                    c[y2 >> 2] = o2;
                  }
                  q2 = q2 + 1 | 0;
                  if ((q2 | 0) >= (s2 | 0))
                    break;
                  else
                    r2 = r2 + 100 | 0;
                }
              }
              ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, t2, 10427, 1145979475, b2 + 748 | 0);
            }
          } else
            c[e2 + 272 >> 2] = 0;
          y2 = c[b2 + 772 >> 2] | 0;
          c[e2 + 308 >> 2] = y2;
          if (y2) {
            y2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[b2 + 780 >> 2] | 0) | 0;
            c[e2 + 276 >> 2] = y2;
            if (y2 | 0) {
              m2 = c[e2 + 308 >> 2] | 0;
              n2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 20, m2) | 0;
              if ((m2 | 0) > 0) {
                j2 = c[b2 + 780 >> 2] | 0;
                k2 = c[n2 + 8 >> 2] | 0;
                l2 = 0;
                g2 = j2;
                while (1) {
                  c[k2 + 16 >> 2] = (a[j2 + (l2 * 52 | 0) + 20 >> 0] << 7 & 255) << 24 >> 24 >> 7 << 24 >> 24;
                  h2 = c[j2 + (l2 * 52 | 0) + 4 >> 2] | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    h2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, h2) | 0;
                    j2 = c[b2 + 780 >> 2] | 0;
                    g2 = j2;
                  }
                  c[k2 >> 2] = h2;
                  h2 = c[j2 + (l2 * 52 | 0) + 8 >> 2] | 0;
                  if (!h2)
                    h2 = -1;
                  else
                    h2 = (h2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[k2 + 4 >> 2] = h2;
                  h2 = c[j2 + (l2 * 52 | 0) + 12 >> 2] | 0;
                  if (!h2)
                    h2 = -1;
                  else
                    h2 = (h2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[k2 + 8 >> 2] = h2;
                  c[k2 + 12 >> 2] = c[j2 + (l2 * 52 | 0) + 16 >> 2];
                  l2 = l2 + 1 | 0;
                  if ((l2 | 0) >= (m2 | 0))
                    break;
                  else
                    k2 = k2 + 20 | 0;
                }
              } else
                g2 = c[b2 + 780 >> 2] | 0;
              ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, n2, 10444, 1497453121, g2);
            }
          } else
            c[e2 + 276 >> 2] = 0;
          y2 = c[b2 + 792 >> 2] | 0;
          c[e2 + 312 >> 2] = y2;
          if (y2) {
            y2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[b2 + 800 >> 2] | 0) | 0;
            c[e2 + 280 >> 2] = y2;
            if (y2 | 0) {
              m2 = c[e2 + 312 >> 2] | 0;
              n2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 36, m2) | 0;
              if ((m2 | 0) > 0) {
                j2 = c[b2 + 800 >> 2] | 0;
                k2 = c[n2 + 8 >> 2] | 0;
                l2 = 0;
                g2 = j2;
                while (1) {
                  h2 = c[j2 + (l2 * 44 | 0) + 4 >> 2] | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    h2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, h2) | 0;
                    j2 = c[b2 + 800 >> 2] | 0;
                    g2 = j2;
                  }
                  c[k2 + 16 >> 2] = h2;
                  c[k2 >> 2] = c[j2 + (l2 * 44 | 0) + 20 >> 2];
                  c[k2 + 4 >> 2] = c[j2 + (l2 * 44 | 0) + 24 >> 2];
                  c[k2 + 8 >> 2] = c[j2 + (l2 * 44 | 0) + 28 >> 2];
                  c[k2 + 12 >> 2] = c[j2 + (l2 * 44 | 0) + 32 >> 2];
                  h2 = c[j2 + (l2 * 44 | 0) + 8 >> 2] | 0;
                  if (!h2)
                    h2 = -1;
                  else
                    h2 = (h2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[k2 + 20 >> 2] = h2;
                  h2 = c[j2 + (l2 * 44 | 0) + 12 >> 2] | 0;
                  if (!h2)
                    h2 = -1;
                  else
                    h2 = (h2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[k2 + 24 >> 2] = h2;
                  h2 = c[j2 + (l2 * 44 | 0) + 16 >> 2] | 0;
                  if (!h2)
                    h2 = -1;
                  else
                    h2 = (h2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[k2 + 28 >> 2] = h2;
                  c[k2 + 32 >> 2] = c[j2 + (l2 * 44 | 0) + 36 >> 2];
                  l2 = l2 + 1 | 0;
                  if ((l2 | 0) >= (m2 | 0))
                    break;
                  else
                    k2 = k2 + 36 | 0;
                }
              } else
                g2 = c[b2 + 800 >> 2] | 0;
              ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, n2, 10461, 1497453121, g2);
            }
          } else
            c[e2 + 280 >> 2] = 0;
          y2 = c[b2 + 812 >> 2] | 0;
          c[e2 + 316 >> 2] = y2;
          if (y2) {
            y2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[b2 + 820 >> 2] | 0) | 0;
            c[e2 + 284 >> 2] = y2;
            if (y2 | 0) {
              m2 = c[e2 + 316 >> 2] | 0;
              n2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 100, m2) | 0;
              if ((m2 | 0) > 0) {
                j2 = c[b2 + 820 >> 2] | 0;
                k2 = c[n2 + 8 >> 2] | 0;
                l2 = 0;
                g2 = j2;
                while (1) {
                  c[k2 >> 2] = c[j2 + (l2 * 104 | 0) + 32 >> 2];
                  c[k2 + 4 >> 2] = c[j2 + (l2 * 104 | 0) + 36 >> 2];
                  c[k2 + 8 >> 2] = c[j2 + (l2 * 104 | 0) + 40 >> 2];
                  c[k2 + 12 >> 2] = c[j2 + (l2 * 104 | 0) + 44 >> 2];
                  h2 = c[j2 + 8 >> 2] | 0;
                  if (!h2)
                    h2 = -1;
                  else
                    h2 = (h2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[k2 + 68 >> 2] = h2;
                  c[k2 + 16 >> 2] = c[j2 + (l2 * 104 | 0) + 48 >> 2];
                  c[k2 + 20 >> 2] = c[j2 + (l2 * 104 | 0) + 52 >> 2];
                  c[k2 + 24 >> 2] = c[j2 + (l2 * 104 | 0) + 56 >> 2];
                  c[k2 + 28 >> 2] = c[j2 + (l2 * 104 | 0) + 60 >> 2];
                  h2 = c[j2 + 116 >> 2] | 0;
                  if (!h2)
                    h2 = -1;
                  else
                    h2 = (h2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[k2 + 72 >> 2] = h2;
                  c[k2 + 32 >> 2] = c[j2 + (l2 * 104 | 0) + 64 >> 2];
                  c[k2 + 36 >> 2] = c[j2 + (l2 * 104 | 0) + 68 >> 2];
                  c[k2 + 40 >> 2] = c[j2 + (l2 * 104 | 0) + 72 >> 2];
                  c[k2 + 44 >> 2] = c[j2 + (l2 * 104 | 0) + 76 >> 2];
                  h2 = c[j2 + 224 >> 2] | 0;
                  if (!h2)
                    h2 = -1;
                  else
                    h2 = (h2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[k2 + 76 >> 2] = h2;
                  c[k2 + 48 >> 2] = c[j2 + (l2 * 104 | 0) + 80 >> 2];
                  c[k2 + 52 >> 2] = c[j2 + (l2 * 104 | 0) + 84 >> 2];
                  c[k2 + 56 >> 2] = c[j2 + (l2 * 104 | 0) + 88 >> 2];
                  c[k2 + 60 >> 2] = c[j2 + (l2 * 104 | 0) + 92 >> 2];
                  h2 = c[j2 + 332 >> 2] | 0;
                  if (!h2)
                    h2 = -1;
                  else
                    h2 = (h2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[k2 + 80 >> 2] = h2;
                  c[k2 + 88 >> 2] = c[j2 + (l2 * 104 | 0) + 96 >> 2];
                  c[k2 + 92 >> 2] = c[j2 + (l2 * 104 | 0) + 100 >> 2];
                  h2 = c[j2 + (l2 * 104 | 0) + 4 >> 2] | 0;
                  if (!h2)
                    h2 = 0;
                  else {
                    h2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, h2) | 0;
                    j2 = c[b2 + 820 >> 2] | 0;
                    g2 = j2;
                  }
                  c[k2 + 64 >> 2] = h2;
                  c[k2 + 84 >> 2] = c[j2 + (l2 * 104 | 0) + 24 >> 2];
                  l2 = l2 + 1 | 0;
                  if ((l2 | 0) >= (m2 | 0))
                    break;
                  else
                    k2 = k2 + 100 | 0;
                }
              } else
                g2 = c[b2 + 820 >> 2] | 0;
              ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, n2, 10478, 1497453121, g2);
            }
          } else
            c[e2 + 284 >> 2] = 0;
          y2 = c[b2 + 832 >> 2] | 0;
          c[e2 + 320 >> 2] = y2;
          if (y2) {
            y2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, c[b2 + 840 >> 2] | 0) | 0;
            c[e2 + 288 >> 2] = y2;
            if (!y2)
              y2 = f2;
            else {
              l2 = c[e2 + 320 >> 2] | 0;
              m2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 92, l2) | 0;
              if ((l2 | 0) > 0) {
                j2 = c[m2 + 8 >> 2] | 0;
                k2 = 0;
                while (1) {
                  h2 = c[b2 + 840 >> 2] | 0;
                  c[j2 >> 2] = c[h2 + (k2 * 96 | 0) + 28 >> 2];
                  c[j2 + 4 >> 2] = c[h2 + (k2 * 96 | 0) + 32 >> 2];
                  c[j2 + 8 >> 2] = c[h2 + (k2 * 96 | 0) + 36 >> 2];
                  c[j2 + 12 >> 2] = c[h2 + (k2 * 96 | 0) + 40 >> 2];
                  c[j2 + 16 >> 2] = c[h2 + (k2 * 96 | 0) + 44 >> 2];
                  c[j2 + 20 >> 2] = c[h2 + (k2 * 96 | 0) + 48 >> 2];
                  c[j2 + 24 >> 2] = c[h2 + (k2 * 96 | 0) + 52 >> 2];
                  c[j2 + 28 >> 2] = c[h2 + (k2 * 96 | 0) + 56 >> 2];
                  c[j2 + 32 >> 2] = c[h2 + (k2 * 96 | 0) + 60 >> 2];
                  c[j2 + 36 >> 2] = c[h2 + (k2 * 96 | 0) + 64 >> 2];
                  c[j2 + 40 >> 2] = c[h2 + (k2 * 96 | 0) + 68 >> 2];
                  c[j2 + 44 >> 2] = c[h2 + (k2 * 96 | 0) + 72 >> 2];
                  c[j2 + 48 >> 2] = c[h2 + (k2 * 96 | 0) + 76 >> 2];
                  c[j2 + 52 >> 2] = c[h2 + (k2 * 96 | 0) + 80 >> 2];
                  c[j2 + 56 >> 2] = c[h2 + (k2 * 96 | 0) + 84 >> 2];
                  c[j2 + 60 >> 2] = c[h2 + (k2 * 96 | 0) + 88 >> 2];
                  c[j2 + 88 >> 2] = c[h2 + (k2 * 96 | 0) + 92 >> 2];
                  h2 = c[b2 + 840 >> 2] | 0;
                  c[j2 + 64 >> 2] = c[h2 + (k2 * 96 | 0) + 4 >> 2];
                  c[j2 + 68 >> 2] = c[h2 + (k2 * 96 | 0) + 8 >> 2];
                  c[j2 + 72 >> 2] = c[h2 + (k2 * 96 | 0) + 12 >> 2];
                  c[j2 + 76 >> 2] = c[h2 + (k2 * 96 | 0) + 16 >> 2];
                  g2 = c[h2 + (k2 * 96 | 0) >> 2] | 0;
                  if (!g2)
                    g2 = -1;
                  else
                    g2 = (g2 - (c[b2 + 760 >> 2] | 0) | 0) / 104 | 0;
                  c[j2 + 84 >> 2] = g2;
                  g2 = c[h2 + (k2 * 96 | 0) + 20 >> 2] | 0;
                  if (!g2)
                    g2 = 0;
                  else
                    g2 = Jb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 31](f2, g2) | 0;
                  c[j2 + 80 >> 2] = g2;
                  k2 = k2 + 1 | 0;
                  if ((k2 | 0) >= (l2 | 0))
                    break;
                  else
                    j2 = j2 + 92 | 0;
                }
              }
              ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, m2, 10496, 1497453121, c[b2 + 840 >> 2] | 0);
              y2 = f2;
            }
          } else {
            c[e2 + 288 >> 2] = 0;
            y2 = f2;
          }
          c[e2 + 360 >> 2] = c[b2 + 356 >> 2];
          c[e2 + 336 >> 2] = c[b2 + 332 >> 2];
          c[e2 + 352 >> 2] = c[b2 + 348 >> 2];
          c[e2 + 332 >> 2] = c[b2 + 328 >> 2];
          c[e2 + 348 >> 2] = c[b2 + 344 >> 2];
          c[e2 + 344 >> 2] = c[b2 + 340 >> 2];
          c[e2 + 420 >> 2] = c[b2 + 416 >> 2];
          c[e2 + 424 >> 2] = c[b2 + 420 >> 2];
          c[e2 + 428 >> 2] = c[b2 + 424 >> 2];
          c[e2 + 416 >> 2] = c[b2 + 412 >> 2];
          n2 = c[b2 + 404 >> 2] | 0;
          c[e2 + 340 >> 2] = c[b2 + 336 >> 2];
          c[e2 + 364 >> 2] = c[b2 + 360 >> 2];
          c[e2 + 432 >> 2] = c[b2 + 428 >> 2];
          c[e2 + 356 >> 2] = c[b2 + 352 >> 2];
          c[e2 + 368 >> 2] = c[b2 + 364 >> 2];
          c[e2 + 372 >> 2] = c[b2 + 368 >> 2];
          c[e2 + 376 >> 2] = c[b2 + 372 >> 2];
          c[e2 + 380 >> 2] = c[b2 + 376 >> 2];
          c[e2 + 412 >> 2] = c[b2 + 408 >> 2];
          c[e2 + 408 >> 2] = n2;
          c[e2 + 384 >> 2] = c[b2 + 380 >> 2];
          c[e2 + 388 >> 2] = c[b2 + 384 >> 2];
          c[e2 + 392 >> 2] = c[b2 + 388 >> 2];
          c[e2 + 396 >> 2] = c[b2 + 392 >> 2];
          c[e2 + 400 >> 2] = c[b2 + 396 >> 2];
          c[e2 + 404 >> 2] = c[b2 + 400 >> 2];
          c[e2 + 264 >> 2] = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, b2 + 512 | 0) | 0;
          n2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 192, 1) | 0;
          m2 = c[n2 + 8 >> 2] | 0;
          c[m2 + 96 >> 2] = c[b2 + 672 >> 2];
          c[m2 + 100 >> 2] = c[b2 + 676 >> 2];
          c[m2 + 104 >> 2] = c[b2 + 680 >> 2];
          c[m2 + 108 >> 2] = c[b2 + 684 >> 2];
          c[m2 + 112 >> 2] = c[b2 + 688 >> 2];
          c[m2 + 116 >> 2] = c[b2 + 692 >> 2];
          c[m2 + 120 >> 2] = c[b2 + 696 >> 2];
          c[m2 + 124 >> 2] = c[b2 + 700 >> 2];
          c[m2 + 128 >> 2] = c[b2 + 704 >> 2];
          c[m2 + 132 >> 2] = c[b2 + 708 >> 2];
          c[m2 + 136 >> 2] = c[b2 + 712 >> 2];
          c[m2 + 140 >> 2] = c[b2 + 716 >> 2];
          c[m2 + 180 >> 2] = d[b2 + 513 >> 0];
          c[m2 + 176 >> 2] = d[b2 + 512 >> 0];
          c[m2 + 144 >> 2] = c[b2 + 560 >> 2];
          c[m2 + 148 >> 2] = c[b2 + 564 >> 2];
          c[m2 + 152 >> 2] = c[b2 + 568 >> 2];
          c[m2 + 156 >> 2] = c[b2 + 572 >> 2];
          x2 = c[b2 + 524 >> 2] | 0;
          c[m2 + 168 >> 2] = x2;
          if (x2) {
            x2 = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, c[b2 + 532 >> 2] | 0) | 0;
            k2 = c[m2 + 168 >> 2] | 0;
            c[m2 + 160 >> 2] = x2;
            if (k2 | 0) {
              l2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 16, k2) | 0;
              if ((k2 | 0) > 0) {
                g2 = c[b2 + 532 >> 2] | 0;
                h2 = c[l2 + 8 >> 2] | 0;
                j2 = 0;
                while (1) {
                  c[h2 >> 2] = c[g2 + (j2 << 4) >> 2];
                  c[h2 + 4 >> 2] = c[g2 + (j2 << 4) + 4 >> 2];
                  c[h2 + 8 >> 2] = c[g2 + (j2 << 4) + 8 >> 2];
                  c[h2 + 12 >> 2] = c[g2 + (j2 << 4) + 12 >> 2];
                  j2 = j2 + 1 | 0;
                  if ((j2 | 0) == (k2 | 0))
                    break;
                  else
                    h2 = h2 + 16 | 0;
                }
              } else
                g2 = c[b2 + 532 >> 2] | 0;
              ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, l2, 18816, 1497453121, g2);
            }
          } else
            c[m2 + 160 >> 2] = 0;
          c[m2 + 184 >> 2] = c[b2 + 516 >> 2];
          c[m2 >> 2] = c[b2 + 576 >> 2];
          c[m2 + 4 >> 2] = c[b2 + 580 >> 2];
          c[m2 + 8 >> 2] = c[b2 + 584 >> 2];
          c[m2 + 12 >> 2] = c[b2 + 588 >> 2];
          c[m2 + 16 >> 2] = c[b2 + 592 >> 2];
          c[m2 + 20 >> 2] = c[b2 + 596 >> 2];
          c[m2 + 24 >> 2] = c[b2 + 600 >> 2];
          c[m2 + 28 >> 2] = c[b2 + 604 >> 2];
          c[m2 + 32 >> 2] = c[b2 + 608 >> 2];
          c[m2 + 36 >> 2] = c[b2 + 612 >> 2];
          c[m2 + 40 >> 2] = c[b2 + 616 >> 2];
          c[m2 + 44 >> 2] = c[b2 + 620 >> 2];
          c[m2 + 48 >> 2] = c[b2 + 624 >> 2];
          c[m2 + 52 >> 2] = c[b2 + 628 >> 2];
          c[m2 + 56 >> 2] = c[b2 + 632 >> 2];
          c[m2 + 60 >> 2] = c[b2 + 636 >> 2];
          c[m2 + 64 >> 2] = c[b2 + 640 >> 2];
          c[m2 + 68 >> 2] = c[b2 + 644 >> 2];
          c[m2 + 72 >> 2] = c[b2 + 648 >> 2];
          c[m2 + 76 >> 2] = c[b2 + 652 >> 2];
          c[m2 + 80 >> 2] = c[b2 + 656 >> 2];
          c[m2 + 84 >> 2] = c[b2 + 660 >> 2];
          c[m2 + 88 >> 2] = c[b2 + 664 >> 2];
          c[m2 + 92 >> 2] = c[b2 + 668 >> 2];
          x2 = c[b2 + 544 >> 2] | 0;
          c[m2 + 172 >> 2] = x2;
          if (x2) {
            x2 = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, c[b2 + 552 >> 2] | 0) | 0;
            k2 = c[m2 + 172 >> 2] | 0;
            c[m2 + 164 >> 2] = x2;
            if (!k2)
              z2 = 149;
            else {
              l2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 4, k2) | 0;
              if ((k2 | 0) > 0) {
                g2 = c[b2 + 552 >> 2] | 0;
                h2 = 0;
                j2 = c[l2 + 8 >> 2] | 0;
                while (1) {
                  c[j2 >> 2] = c[g2 + (h2 << 2) >> 2];
                  h2 = h2 + 1 | 0;
                  if ((h2 | 0) == (k2 | 0))
                    break;
                  else
                    j2 = j2 + 4 | 0;
                }
              } else
                g2 = c[b2 + 552 >> 2] | 0;
              ib[c[(c[f2 >> 2] | 0) + 20 >> 2] & 31](f2, l2, 10516, 1497453121, g2);
              x2 = f2;
            }
          } else {
            c[m2 + 164 >> 2] = 0;
            z2 = 149;
          }
          if ((z2 | 0) == 149)
            x2 = f2;
          ib[c[(c[x2 >> 2] | 0) + 20 >> 2] & 31](f2, n2, 10522, 1497453121, b2 + 512 | 0);
          z2 = c[b2 + 1152 >> 2] | 0;
          c[e2 + 324 >> 2] = z2;
          if (z2) {
            z2 = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, c[c[b2 + 1160 >> 2] >> 2] | 0) | 0;
            v2 = c[e2 + 324 >> 2] | 0;
            c[e2 + 292 >> 2] = z2;
            if (v2 | 0) {
              w2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 348, v2) | 0;
              if ((v2 | 0) > 0) {
                t2 = 0;
                u2 = c[w2 + 8 >> 2] | 0;
                while (1) {
                  h2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                  z2 = u2 + 320 | 0;
                  c[z2 >> 2] = c[h2 + 360 >> 2];
                  c[u2 + 256 >> 2] = c[h2 + 332 >> 2];
                  c[u2 + 260 >> 2] = c[h2 + 336 >> 2];
                  c[u2 + 264 >> 2] = c[h2 + 340 >> 2];
                  c[u2 + 268 >> 2] = c[h2 + 344 >> 2];
                  c[u2 + 344 >> 2] = c[h2 + 380 >> 2];
                  c[u2 + 340 >> 2] = d[h2 + 377 >> 0];
                  c[u2 + 160 >> 2] = c[h2 + 228 >> 2];
                  c[u2 + 164 >> 2] = c[h2 + 232 >> 2];
                  c[u2 + 168 >> 2] = c[h2 + 236 >> 2];
                  c[u2 + 172 >> 2] = c[h2 + 240 >> 2];
                  c[u2 + 336 >> 2] = d[h2 + 376 >> 0];
                  c[u2 + 208 >> 2] = c[h2 + 276 >> 2];
                  c[u2 + 212 >> 2] = c[h2 + 280 >> 2];
                  c[u2 + 216 >> 2] = c[h2 + 284 >> 2];
                  c[u2 + 220 >> 2] = c[h2 + 288 >> 2];
                  c[u2 + 224 >> 2] = c[h2 + 292 >> 2];
                  c[u2 + 228 >> 2] = c[h2 + 296 >> 2];
                  c[u2 + 232 >> 2] = c[h2 + 300 >> 2];
                  c[u2 + 236 >> 2] = c[h2 + 304 >> 2];
                  h2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                  c[u2 >> 2] = c[h2 + 60 >> 2];
                  c[u2 + 4 >> 2] = c[h2 + 64 >> 2];
                  c[u2 + 8 >> 2] = c[h2 + 68 >> 2];
                  c[u2 + 12 >> 2] = c[h2 + 72 >> 2];
                  c[u2 + 16 >> 2] = c[h2 + 76 >> 2];
                  c[u2 + 20 >> 2] = c[h2 + 80 >> 2];
                  c[u2 + 24 >> 2] = c[h2 + 84 >> 2];
                  c[u2 + 28 >> 2] = c[h2 + 88 >> 2];
                  c[u2 + 32 >> 2] = c[h2 + 92 >> 2];
                  c[u2 + 36 >> 2] = c[h2 + 96 >> 2];
                  c[u2 + 40 >> 2] = c[h2 + 100 >> 2];
                  c[u2 + 44 >> 2] = c[h2 + 104 >> 2];
                  c[u2 + 48 >> 2] = c[h2 + 108 >> 2];
                  c[u2 + 52 >> 2] = c[h2 + 112 >> 2];
                  c[u2 + 56 >> 2] = c[h2 + 116 >> 2];
                  c[u2 + 60 >> 2] = c[h2 + 120 >> 2];
                  c[u2 + 296 >> 2] = c[h2 + 124 >> 2];
                  h2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                  c[u2 + 300 >> 2] = c[h2 + 128 >> 2];
                  c[u2 + 112 >> 2] = c[h2 + 180 >> 2];
                  c[u2 + 116 >> 2] = c[h2 + 184 >> 2];
                  c[u2 + 120 >> 2] = c[h2 + 188 >> 2];
                  c[u2 + 124 >> 2] = c[h2 + 192 >> 2];
                  c[u2 + 128 >> 2] = c[h2 + 196 >> 2];
                  c[u2 + 132 >> 2] = c[h2 + 200 >> 2];
                  c[u2 + 136 >> 2] = c[h2 + 204 >> 2];
                  c[u2 + 140 >> 2] = c[h2 + 208 >> 2];
                  c[u2 + 144 >> 2] = c[h2 + 212 >> 2];
                  c[u2 + 148 >> 2] = c[h2 + 216 >> 2];
                  c[u2 + 152 >> 2] = c[h2 + 220 >> 2];
                  c[u2 + 156 >> 2] = c[h2 + 224 >> 2];
                  g2 = u2 + 316 | 0;
                  c[g2 >> 2] = c[h2 + 356 >> 2];
                  c[u2 + 64 >> 2] = c[h2 + 132 >> 2];
                  c[u2 + 68 >> 2] = c[h2 + 136 >> 2];
                  c[u2 + 72 >> 2] = c[h2 + 140 >> 2];
                  c[u2 + 76 >> 2] = c[h2 + 144 >> 2];
                  c[u2 + 80 >> 2] = c[h2 + 148 >> 2];
                  c[u2 + 84 >> 2] = c[h2 + 152 >> 2];
                  c[u2 + 88 >> 2] = c[h2 + 156 >> 2];
                  c[u2 + 92 >> 2] = c[h2 + 160 >> 2];
                  c[u2 + 96 >> 2] = c[h2 + 164 >> 2];
                  c[u2 + 100 >> 2] = c[h2 + 168 >> 2];
                  c[u2 + 104 >> 2] = c[h2 + 172 >> 2];
                  c[u2 + 108 >> 2] = c[h2 + 176 >> 2];
                  h2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                  c[u2 + 240 >> 2] = c[h2 + 316 >> 2];
                  c[u2 + 244 >> 2] = c[h2 + 320 >> 2];
                  c[u2 + 248 >> 2] = c[h2 + 324 >> 2];
                  c[u2 + 252 >> 2] = c[h2 + 328 >> 2];
                  c[u2 + 324 >> 2] = c[h2 + 364 >> 2];
                  c[u2 + 328 >> 2] = c[h2 + 368 >> 2];
                  c[u2 + 312 >> 2] = c[h2 + 352 >> 2];
                  c[g2 >> 2] = c[h2 + 356 >> 2];
                  c[z2 >> 2] = c[h2 + 360 >> 2];
                  c[u2 + 332 >> 2] = c[h2 + 372 >> 2];
                  z2 = c[h2 + 44 >> 2] | 0;
                  g2 = u2 + 284 | 0;
                  c[g2 >> 2] = z2;
                  n2 = u2 + 292 | 0;
                  c[n2 >> 2] = c[h2 + 4 >> 2];
                  o2 = u2 + 288 | 0;
                  c[o2 >> 2] = c[h2 + 24 >> 2];
                  c[u2 + 304 >> 2] = c[h2 + 308 >> 2];
                  c[u2 + 176 >> 2] = c[h2 + 244 >> 2];
                  c[u2 + 180 >> 2] = c[h2 + 248 >> 2];
                  c[u2 + 184 >> 2] = c[h2 + 252 >> 2];
                  c[u2 + 188 >> 2] = c[h2 + 256 >> 2];
                  c[u2 + 192 >> 2] = c[h2 + 260 >> 2];
                  c[u2 + 196 >> 2] = c[h2 + 264 >> 2];
                  c[u2 + 200 >> 2] = c[h2 + 268 >> 2];
                  c[u2 + 204 >> 2] = c[h2 + 272 >> 2];
                  h2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                  c[u2 + 308 >> 2] = c[h2 + 312 >> 2];
                  if (z2) {
                    z2 = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, c[h2 + 52 >> 2] | 0) | 0;
                    c[u2 + 272 >> 2] = z2;
                    if (z2 | 0) {
                      k2 = c[g2 >> 2] | 0;
                      m2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 16, k2) | 0;
                      if ((k2 | 0) > 0) {
                        g2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                        l2 = c[g2 + 52 >> 2] | 0;
                        h2 = 0;
                        j2 = c[m2 + 8 >> 2] | 0;
                        while (1) {
                          c[j2 >> 2] = c[l2 + (h2 << 4) >> 2];
                          c[j2 + 4 >> 2] = c[l2 + (h2 << 4) + 4 >> 2];
                          c[j2 + 8 >> 2] = c[l2 + (h2 << 4) + 8 >> 2];
                          c[j2 + 12 >> 2] = c[l2 + (h2 << 4) + 12 >> 2];
                          h2 = h2 + 1 | 0;
                          if ((h2 | 0) == (k2 | 0))
                            break;
                          else
                            j2 = j2 + 16 | 0;
                        }
                      } else
                        g2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                      ib[c[(c[x2 >> 2] | 0) + 20 >> 2] & 31](f2, m2, 18816, 1497453121, c[g2 + 52 >> 2] | 0);
                    }
                  } else
                    c[u2 + 272 >> 2] = 0;
                  if (c[n2 >> 2] | 0) {
                    z2 = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, c[(c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0) + 12 >> 2] | 0) | 0;
                    c[u2 + 280 >> 2] = z2;
                    if (z2 | 0) {
                      k2 = c[n2 >> 2] | 0;
                      m2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 4, k2) | 0;
                      if ((k2 | 0) > 0) {
                        g2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                        l2 = c[g2 + 12 >> 2] | 0;
                        h2 = 0;
                        j2 = c[m2 + 8 >> 2] | 0;
                        while (1) {
                          c[j2 >> 2] = c[l2 + (h2 << 2) >> 2];
                          h2 = h2 + 1 | 0;
                          if ((h2 | 0) == (k2 | 0))
                            break;
                          else
                            j2 = j2 + 4 | 0;
                        }
                      } else
                        g2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                      ib[c[(c[x2 >> 2] | 0) + 20 >> 2] & 31](f2, m2, 10516, 1497453121, c[g2 + 12 >> 2] | 0);
                    }
                  } else
                    c[u2 + 280 >> 2] = 0;
                  if (c[o2 >> 2] | 0) {
                    z2 = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, (c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0) + 20 | 0) | 0;
                    c[u2 + 276 >> 2] = z2;
                    if (z2 | 0) {
                      m2 = c[n2 >> 2] | 0;
                      s2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 4, m2) | 0;
                      if ((m2 | 0) > 0) {
                        g2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                        n2 = c[g2 + 32 >> 2] | 0;
                        o2 = c[A2 + 12 >> 2] | 0;
                        p2 = c[A2 + 72 >> 2] | 0;
                        q2 = c[A2 + 52 >> 2] | 0;
                        r2 = c[A2 + 32 >> 2] | 0;
                        k2 = 0;
                        l2 = c[s2 + 8 >> 2] | 0;
                        while (1) {
                          j2 = c[n2 + (k2 << 2) >> 2] | 0;
                          h2 = (j2 + ~(j2 << 15) >> 10 ^ j2 + ~(j2 << 15)) * 9 | 0;
                          h2 = c[o2 + ((((h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11) >> 16 ^ (h2 >> 6 ^ h2) + ~((h2 >> 6 ^ h2) << 11)) & (c[A2 + 48 >> 2] | 0) + -1) << 2) >> 2] | 0;
                          if ((j2 | 0) != (c[p2 + (h2 << 3) >> 2] | 0))
                            do
                              h2 = c[r2 + (h2 << 2) >> 2] | 0;
                            while ((j2 | 0) != (c[p2 + (h2 << 3) >> 2] | 0));
                          c[l2 >> 2] = c[q2 + (h2 << 2) >> 2];
                          k2 = k2 + 1 | 0;
                          if ((k2 | 0) == (m2 | 0))
                            break;
                          else
                            l2 = l2 + 4 | 0;
                        }
                      } else
                        g2 = c[(c[b2 + 1160 >> 2] | 0) + (t2 << 2) >> 2] | 0;
                      ib[c[(c[x2 >> 2] | 0) + 20 >> 2] & 31](f2, s2, 10559, 1497453121, g2 + 20 | 0);
                    }
                  } else
                    c[u2 + 276 >> 2] = 0;
                  t2 = t2 + 1 | 0;
                  if ((t2 | 0) >= (v2 | 0))
                    break;
                  else
                    u2 = u2 + 348 | 0;
                }
              }
              ib[c[(c[x2 >> 2] | 0) + 20 >> 2] & 31](f2, w2, 10539, 1497453121, c[c[b2 + 1160 >> 2] >> 2] | 0);
            }
          } else
            c[e2 + 292 >> 2] = 0;
          z2 = c[b2 + 892 >> 2] | 0;
          c[e2 + 328 >> 2] = z2;
          if (!z2) {
            c[e2 + 296 >> 2] = 0;
            dj(A2);
            i = A2;
            return 10583;
          }
          z2 = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, c[b2 + 900 >> 2] | 0) | 0;
          c[e2 + 296 >> 2] = z2;
          if (!z2) {
            dj(A2);
            i = A2;
            return 10583;
          }
          l2 = c[b2 + 892 >> 2] | 0;
          m2 = yb[c[(c[f2 >> 2] | 0) + 16 >> 2] & 63](f2, 104, l2) | 0;
          if ((l2 | 0) > 0) {
            j2 = 0;
            k2 = c[m2 + 8 >> 2] | 0;
            while (1) {
              g2 = c[(c[b2 + 900 >> 2] | 0) + (j2 << 2) >> 2] | 0;
              c[k2 + 96 >> 2] = ob[c[(c[g2 >> 2] | 0) + 20 >> 2] & 127](g2) | 0;
              g2 = (c[b2 + 900 >> 2] | 0) + (j2 << 2) | 0;
              h2 = c[g2 >> 2] | 0;
              c[k2 + 8 >> 2] = c[h2 + 28 >> 2];
              c[k2 + 12 >> 2] = c[h2 + 32 >> 2];
              c[k2 + 16 >> 2] = c[h2 + 36 >> 2];
              c[k2 + 20 >> 2] = c[h2 + 40 >> 2];
              c[k2 + 24 >> 2] = c[h2 + 44 >> 2];
              c[k2 + 28 >> 2] = c[h2 + 48 >> 2];
              c[k2 + 32 >> 2] = c[h2 + 52 >> 2];
              c[k2 + 36 >> 2] = c[h2 + 56 >> 2];
              c[k2 + 40 >> 2] = c[h2 + 60 >> 2];
              c[k2 + 44 >> 2] = c[h2 + 64 >> 2];
              c[k2 + 48 >> 2] = c[h2 + 68 >> 2];
              c[k2 + 52 >> 2] = d[h2 + 152 >> 0];
              h2 = k2 + 56 | 0;
              c[k2 >> 2] = 0;
              n2 = k2 + 4 | 0;
              c[n2 >> 2] = 0;
              c[h2 >> 2] = 0;
              c[h2 + 4 >> 2] = 0;
              c[h2 + 8 >> 2] = 0;
              c[h2 + 12 >> 2] = 0;
              c[h2 + 16 >> 2] = 0;
              c[h2 + 20 >> 2] = 0;
              c[h2 + 24 >> 2] = 0;
              c[h2 + 28 >> 2] = 0;
              g2 = c[g2 >> 2] | 0;
              h2 = c[g2 + 4 >> 2] | 0;
              if (h2) {
                c[k2 + 88 >> 2] = 1;
                c[k2 >> 2] = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, h2) | 0;
                g2 = c[(c[b2 + 900 >> 2] | 0) + (j2 << 2) >> 2] | 0;
              }
              if (c[g2 + 12 >> 2] | 0) {
                c[k2 + 88 >> 2] = 3;
                c[k2 >> 2] = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, c[(c[(c[b2 + 900 >> 2] | 0) + (j2 << 2) >> 2] | 0) + 12 >> 2] | 0) | 0;
              }
              g2 = c[(c[b2 + 900 >> 2] | 0) + (j2 << 2) >> 2] | 0;
              h2 = c[g2 + 8 >> 2] | 0;
              if (h2) {
                c[k2 + 88 >> 2] = 2;
                c[k2 >> 2] = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, h2) | 0;
                g2 = c[(c[b2 + 900 >> 2] | 0) + (j2 << 2) >> 2] | 0;
              }
              h2 = c[g2 + 16 >> 2] | 0;
              if (h2) {
                c[k2 + 92 >> 2] = 1;
                c[n2 >> 2] = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, h2) | 0;
                g2 = c[(c[b2 + 900 >> 2] | 0) + (j2 << 2) >> 2] | 0;
              }
              h2 = c[g2 + 24 >> 2] | 0;
              if (h2) {
                c[k2 + 92 >> 2] = 3;
                c[n2 >> 2] = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, h2) | 0;
                g2 = c[(c[b2 + 900 >> 2] | 0) + (j2 << 2) >> 2] | 0;
              }
              g2 = c[g2 + 20 >> 2] | 0;
              if (g2 | 0) {
                c[k2 + 92 >> 2] = 2;
                c[n2 >> 2] = Jb[c[(c[y2 >> 2] | 0) + 28 >> 2] & 31](f2, g2) | 0;
              }
              j2 = j2 + 1 | 0;
              if ((j2 | 0) >= (l2 | 0))
                break;
              else
                k2 = k2 + 104 | 0;
            }
          }
          ib[c[(c[x2 >> 2] | 0) + 20 >> 2] & 31](f2, m2, 10563, 1497453121, c[b2 + 900 >> 2] | 0);
          dj(A2);
          i = A2;
          return 10583;
        }
        function ec(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, E2 = 0, F2 = 0, G2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0;
          K2 = i;
          i = i + 144 | 0;
          a:
            do
              switch (d2 - b2 | 0) {
                case 0: {
                  c[e2 >> 2] = 0;
                  c[e2 + 4 >> 2] = 0;
                  c[e2 + 8 >> 2] = 0;
                  c[e2 + 12 >> 2] = 0;
                  i = K2;
                  return;
                }
                case 2: {
                  f2 = c[(c[a2 + 92 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                  j2 = c[f2 + 88 >> 2] | 0;
                  k2 = c[f2 + 200 >> 2] | 0;
                  h2 = c[f2 + 92 >> 2] | 0;
                  g2 = c[f2 + 204 >> 2] | 0;
                  if ((j2 | 0) == (k2 | 0) & (h2 | 0) == (g2 | 0))
                    if ((c[f2 + 96 >> 2] | 0) == (c[f2 + 208 >> 2] | 0))
                      break a;
                    else
                      g2 = h2;
                  g2 = h2 - g2 | 0;
                  do
                    if (g2 | j2 - k2) {
                      c[f2 >> 2] = f2 + 112;
                      c[f2 + 4 >> 2] = f2 + 112;
                      c[f2 + 112 >> 2] = f2;
                      c[f2 + 116 >> 2] = f2;
                      J2 = (j2 - k2 | 0) < 0 | (j2 - k2 | 0) == 0 & (g2 | 0) < 0;
                      c[e2 >> 2] = J2 ? f2 : f2 + 112 | 0;
                      c[e2 + 4 >> 2] = J2 ? f2 + 112 | 0 : f2;
                      if ((g2 | 0) < 0 | (j2 - k2 | 0) < 0 & (g2 | 0) == 0) {
                        c[e2 + 8 >> 2] = f2;
                        c[e2 + 12 >> 2] = f2 + 112;
                        g2 = f2;
                        f2 = f2 + 112 | 0;
                        break;
                      } else {
                        c[e2 + 8 >> 2] = f2 + 112;
                        c[e2 + 12 >> 2] = f2;
                        g2 = f2;
                        f2 = f2 + 112 | 0;
                        break;
                      }
                    } else {
                      J2 = (c[f2 + 96 >> 2] | 0) > (c[f2 + 208 >> 2] | 0);
                      g2 = J2 ? f2 + 112 | 0 : f2;
                      c[g2 >> 2] = g2;
                      c[g2 + 4 >> 2] = g2;
                      c[e2 >> 2] = g2;
                      c[e2 + 4 >> 2] = g2;
                      c[e2 + 8 >> 2] = g2;
                      c[e2 + 12 >> 2] = g2;
                      f2 = J2 ? f2 : f2 + 112 | 0;
                    }
                  while (0);
                  a2 = Wf(a2, g2, f2) | 0;
                  c[a2 >> 2] = a2;
                  c[a2 + 4 >> 2] = a2;
                  c[g2 + 8 >> 2] = a2;
                  a2 = c[a2 + 8 >> 2] | 0;
                  c[a2 >> 2] = a2;
                  c[a2 + 4 >> 2] = a2;
                  c[f2 + 8 >> 2] = a2;
                  i = K2;
                  return;
                }
                case 1: {
                  f2 = c[(c[a2 + 92 >> 2] | 0) + (b2 << 2) >> 2] | 0;
                  break;
                }
                default: {
                  n2 = ((d2 - b2 | 0) / 2 | 0) + b2 | 0;
                  m2 = c[a2 + 92 >> 2] | 0;
                  l2 = c[m2 + (n2 + -1 << 2) >> 2] | 0;
                  j2 = c[l2 + 88 >> 2] | 0;
                  k2 = c[l2 + 92 >> 2] | 0;
                  l2 = c[l2 + 96 >> 2] | 0;
                  b:
                    do
                      if ((n2 | 0) < (d2 | 0)) {
                        f2 = n2;
                        do {
                          g2 = c[m2 + (f2 << 2) >> 2] | 0;
                          if ((c[g2 + 88 >> 2] | 0) != (j2 | 0))
                            break b;
                          if ((c[g2 + 92 >> 2] | 0) != (k2 | 0))
                            break b;
                          if ((c[g2 + 96 >> 2] | 0) != (l2 | 0))
                            break b;
                          f2 = f2 + 1 | 0;
                        } while ((f2 | 0) < (d2 | 0));
                      } else
                        f2 = n2;
                    while (0);
                  ec(a2, b2, n2, e2);
                  c[K2 + 96 >> 2] = 0;
                  c[K2 + 96 + 4 >> 2] = 0;
                  c[K2 + 96 + 8 >> 2] = 0;
                  c[K2 + 96 + 12 >> 2] = 0;
                  ec(a2, f2, d2, K2 + 96 | 0);
                  k2 = c[K2 + 96 + 4 >> 2] | 0;
                  c:
                    do
                      if (k2 | 0) {
                        A2 = c[e2 + 4 >> 2] | 0;
                        if (!A2) {
                          c[e2 >> 2] = c[K2 + 96 >> 2];
                          c[e2 + 4 >> 2] = c[K2 + 96 + 4 >> 2];
                          c[e2 + 8 >> 2] = c[K2 + 96 + 8 >> 2];
                          c[e2 + 12 >> 2] = c[K2 + 96 + 12 >> 2];
                          break;
                        }
                        c[a2 + 100 >> 2] = (c[a2 + 100 >> 2] | 0) + -1;
                        m2 = c[e2 + 12 >> 2] | 0;
                        j2 = c[K2 + 96 + 8 >> 2] | 0;
                        g2 = c[m2 + 88 >> 2] | 0;
                        d:
                          do
                            if ((g2 | 0) == (c[j2 + 88 >> 2] | 0) ? (h2 = c[m2 + 92 >> 2] | 0, (h2 | 0) == (c[j2 + 92 >> 2] | 0)) : 0) {
                              l2 = c[j2 + 4 >> 2] | 0;
                              if ((l2 | 0) == (j2 | 0)) {
                                f2 = c[j2 + 8 >> 2] | 0;
                                if (!f2)
                                  f2 = g2;
                                else {
                                  j2 = c[f2 + 12 >> 2] | 0;
                                  f2 = c[j2 + 88 >> 2] | 0;
                                  h2 = c[j2 + 92 >> 2] | 0;
                                }
                                n2 = j2;
                                o2 = f2 + 1 | 0;
                                g2 = m2;
                                p2 = c[j2 + 96 >> 2] | 0;
                                q2 = h2;
                                h2 = m2;
                                break;
                              }
                              h2 = c[j2 >> 2] | 0;
                              c[l2 >> 2] = h2;
                              c[h2 + 4 >> 2] = l2;
                              e:
                                do
                                  if ((j2 | 0) == (c[K2 + 96 >> 2] | 0)) {
                                    f2 = c[h2 + 88 >> 2] | 0;
                                    g2 = c[l2 + 88 >> 2] | 0;
                                    do
                                      if ((f2 | 0) >= (g2 | 0)) {
                                        if ((f2 | 0) == (g2 | 0) ? (c[h2 + 92 >> 2] | 0) < (c[l2 + 92 >> 2] | 0) : 0)
                                          break;
                                        c[K2 + 96 >> 2] = l2;
                                        break e;
                                      }
                                    while (0);
                                    c[K2 + 96 >> 2] = h2;
                                  }
                                while (0);
                              if ((j2 | 0) == (k2 | 0)) {
                                f2 = c[h2 + 88 >> 2] | 0;
                                g2 = c[l2 + 88 >> 2] | 0;
                                do
                                  if ((f2 | 0) <= (g2 | 0)) {
                                    if ((f2 | 0) == (g2 | 0) ? (c[h2 + 92 >> 2] | 0) > (c[l2 + 92 >> 2] | 0) : 0)
                                      break;
                                    c[K2 + 96 + 4 >> 2] = l2;
                                    k2 = l2;
                                    H2 = 38;
                                    break d;
                                  }
                                while (0);
                                c[K2 + 96 + 4 >> 2] = h2;
                                k2 = h2;
                                H2 = 38;
                              } else
                                H2 = 38;
                            } else
                              H2 = 38;
                          while (0);
                        if ((H2 | 0) == 38) {
                          y2 = c[e2 >> 2] | 0;
                          z2 = c[K2 + 96 >> 2] | 0;
                          d2 = A2;
                          h2 = 0;
                          j2 = 0;
                          w2 = 1;
                          x2 = 0;
                          o2 = k2;
                          while (1) {
                            m2 = c[o2 + 88 >> 2] | 0;
                            n2 = c[d2 + 88 >> 2] | 0;
                            g2 = S(m2 - n2 | 0, w2) | 0;
                            f:
                              do
                                if ((g2 | 0) <= 0) {
                                  if ((g2 | 0) < 0) {
                                    v2 = (x2 | 0) != 0;
                                    l2 = d2;
                                    f2 = o2;
                                    b2 = c[d2 + 92 >> 2] | 0;
                                    u2 = c[o2 + 92 >> 2] | 0;
                                    while (1) {
                                      r2 = c[(v2 ? f2 + 4 | 0 : f2) >> 2] | 0;
                                      s2 = (r2 | 0) == (f2 | 0);
                                      t2 = f2 + 88 | 0;
                                      while (1) {
                                        d2 = l2 + 88 | 0;
                                        p2 = u2 - b2 | 0;
                                        if (!s2 ? (B2 = c[r2 + 88 >> 2] | 0, C2 = S(B2 - m2 | 0, w2) | 0, E2 = c[r2 + 92 >> 2] | 0, F2 = E2 - u2 | 0, (F2 | 0) > -1) : 0) {
                                          if (!C2)
                                            break;
                                          if ((C2 | 0) < 0 ? (S(F2, g2) | 0) <= (S(C2, p2) | 0) : 0)
                                            break;
                                        }
                                        q2 = c[(v2 ? l2 + 4 | 0 : l2) >> 2] | 0;
                                        if ((q2 | 0) == (l2 | 0))
                                          break f;
                                        G2 = c[q2 + 88 >> 2] | 0;
                                        n2 = S(G2 - (c[d2 >> 2] | 0) | 0, w2) | 0;
                                        o2 = c[q2 + 92 >> 2] | 0;
                                        d2 = o2 - b2 | 0;
                                        m2 = c[t2 >> 2] | 0;
                                        b2 = g2;
                                        g2 = S(m2 - G2 | 0, w2) | 0;
                                        if (!((d2 | 0) > 0 & (g2 | 0) < 0))
                                          break f;
                                        if (!n2) {
                                          l2 = q2;
                                          b2 = o2;
                                          continue;
                                        }
                                        if ((n2 | 0) >= 0)
                                          break f;
                                        if ((S(d2, b2) | 0) >= (S(n2, p2) | 0))
                                          break f;
                                        else {
                                          l2 = q2;
                                          b2 = o2;
                                        }
                                      }
                                      f2 = r2;
                                      g2 = S(B2 - (c[d2 >> 2] | 0) | 0, w2) | 0;
                                      u2 = E2;
                                      m2 = B2;
                                    }
                                  }
                                  f2 = c[d2 + 92 >> 2] | 0;
                                  b2 = (x2 | 0) != 0;
                                  g:
                                    do
                                      if (b2) {
                                        l2 = d2;
                                        while (1) {
                                          g2 = c[l2 >> 2] | 0;
                                          if ((g2 | 0) == (d2 | 0)) {
                                            m2 = l2;
                                            break g;
                                          }
                                          if ((c[g2 + 88 >> 2] | 0) != (n2 | 0)) {
                                            m2 = l2;
                                            break g;
                                          }
                                          G2 = f2;
                                          f2 = c[g2 + 92 >> 2] | 0;
                                          if ((f2 | 0) > (G2 | 0)) {
                                            m2 = l2;
                                            break;
                                          } else
                                            l2 = g2;
                                        }
                                      } else {
                                        l2 = d2;
                                        while (1) {
                                          g2 = c[l2 + 4 >> 2] | 0;
                                          if ((g2 | 0) == (d2 | 0)) {
                                            m2 = l2;
                                            break g;
                                          }
                                          if ((c[g2 + 88 >> 2] | 0) != (n2 | 0)) {
                                            m2 = l2;
                                            break g;
                                          }
                                          G2 = f2;
                                          f2 = c[g2 + 92 >> 2] | 0;
                                          if ((f2 | 0) > (G2 | 0)) {
                                            m2 = l2;
                                            break;
                                          } else
                                            l2 = g2;
                                        }
                                      }
                                    while (0);
                                  g2 = c[o2 + 92 >> 2] | 0;
                                  if (b2) {
                                    f2 = o2;
                                    while (1) {
                                      l2 = c[f2 + 4 >> 2] | 0;
                                      if ((l2 | 0) == (o2 | 0)) {
                                        l2 = m2;
                                        break f;
                                      }
                                      if ((c[l2 + 88 >> 2] | 0) != (n2 | 0)) {
                                        l2 = m2;
                                        break f;
                                      }
                                      G2 = g2;
                                      g2 = c[l2 + 92 >> 2] | 0;
                                      if ((g2 | 0) < (G2 | 0)) {
                                        l2 = m2;
                                        break;
                                      } else
                                        f2 = l2;
                                    }
                                  } else {
                                    f2 = o2;
                                    while (1) {
                                      l2 = c[f2 >> 2] | 0;
                                      if ((l2 | 0) == (o2 | 0)) {
                                        l2 = m2;
                                        break f;
                                      }
                                      if ((c[l2 + 88 >> 2] | 0) != (n2 | 0)) {
                                        l2 = m2;
                                        break f;
                                      }
                                      G2 = g2;
                                      g2 = c[l2 + 92 >> 2] | 0;
                                      if ((g2 | 0) < (G2 | 0)) {
                                        l2 = m2;
                                        break;
                                      } else
                                        f2 = l2;
                                    }
                                  }
                                } else {
                                  u2 = (x2 | 0) != 0;
                                  l2 = d2;
                                  f2 = o2;
                                  t2 = n2;
                                  s2 = c[o2 + 92 >> 2] | 0;
                                  while (1) {
                                    r2 = f2 + 88 | 0;
                                    b2 = c[l2 + 92 >> 2] | 0;
                                    d2 = s2 - b2 | 0;
                                    m2 = c[(u2 ? l2 : l2 + 4 | 0) >> 2] | 0;
                                    h:
                                      do
                                        if ((m2 | 0) != (l2 | 0))
                                          if (u2) {
                                            p2 = g2;
                                            q2 = m2;
                                            o2 = t2;
                                            n2 = b2;
                                            while (1) {
                                              m2 = o2;
                                              o2 = c[q2 + 88 >> 2] | 0;
                                              m2 = S(o2 - m2 | 0, w2) | 0;
                                              b2 = n2;
                                              n2 = c[q2 + 92 >> 2] | 0;
                                              b2 = n2 - b2 | 0;
                                              if ((b2 | 0) >= 1)
                                                break h;
                                              if (m2 | 0) {
                                                if ((m2 | 0) >= 0)
                                                  break h;
                                                if ((S(b2, p2) | 0) > (S(m2, d2) | 0))
                                                  break h;
                                              }
                                              l2 = S((c[r2 >> 2] | 0) - o2 | 0, w2) | 0;
                                              d2 = s2 - n2 | 0;
                                              m2 = c[q2 >> 2] | 0;
                                              if ((m2 | 0) == (q2 | 0)) {
                                                p2 = l2;
                                                l2 = q2;
                                                break;
                                              } else {
                                                G2 = q2;
                                                p2 = l2;
                                                q2 = m2;
                                                l2 = G2;
                                              }
                                            }
                                          } else {
                                            p2 = g2;
                                            q2 = m2;
                                            o2 = t2;
                                            n2 = b2;
                                            while (1) {
                                              m2 = o2;
                                              o2 = c[q2 + 88 >> 2] | 0;
                                              m2 = S(o2 - m2 | 0, w2) | 0;
                                              b2 = n2;
                                              n2 = c[q2 + 92 >> 2] | 0;
                                              b2 = n2 - b2 | 0;
                                              if ((b2 | 0) >= 1)
                                                break h;
                                              if (m2 | 0) {
                                                if ((m2 | 0) >= 0)
                                                  break h;
                                                if ((S(b2, p2) | 0) > (S(m2, d2) | 0))
                                                  break h;
                                              }
                                              l2 = S((c[r2 >> 2] | 0) - o2 | 0, w2) | 0;
                                              d2 = s2 - n2 | 0;
                                              m2 = c[q2 + 4 >> 2] | 0;
                                              if ((m2 | 0) == (q2 | 0)) {
                                                p2 = l2;
                                                l2 = q2;
                                                break;
                                              } else {
                                                G2 = q2;
                                                p2 = l2;
                                                q2 = m2;
                                                l2 = G2;
                                              }
                                            }
                                          }
                                        else
                                          p2 = g2;
                                      while (0);
                                    n2 = c[(u2 ? f2 : f2 + 4 | 0) >> 2] | 0;
                                    if ((n2 | 0) == (f2 | 0))
                                      break f;
                                    g2 = c[n2 + 88 >> 2] | 0;
                                    m2 = S(g2 - (c[r2 >> 2] | 0) | 0, w2) | 0;
                                    b2 = s2;
                                    s2 = c[n2 + 92 >> 2] | 0;
                                    b2 = s2 - b2 | 0;
                                    t2 = c[l2 + 88 >> 2] | 0;
                                    g2 = S(g2 - t2 | 0, w2) | 0;
                                    if (!((b2 | 0) < 0 & (g2 | 0) > 0))
                                      break f;
                                    if (!m2) {
                                      f2 = n2;
                                      continue;
                                    }
                                    if ((m2 | 0) >= 0)
                                      break f;
                                    if ((S(b2, p2) | 0) >= (S(m2, d2) | 0))
                                      break;
                                    else
                                      f2 = n2;
                                  }
                                }
                              while (0);
                            g2 = (x2 | 0) == 0;
                            j2 = g2 ? f2 : j2;
                            h2 = g2 ? l2 : h2;
                            o2 = g2 ? z2 : f2;
                            d2 = g2 ? y2 : l2;
                            x2 = x2 + 1 | 0;
                            if ((x2 | 0) == 2)
                              break;
                            else
                              w2 = g2 ? -1 : w2;
                          }
                          c[d2 + 4 >> 2] = o2;
                          c[o2 >> 2] = d2;
                          c[h2 >> 2] = j2;
                          c[j2 + 4 >> 2] = h2;
                          if ((c[z2 + 88 >> 2] | 0) < (c[y2 + 88 >> 2] | 0))
                            c[e2 >> 2] = z2;
                          if ((c[k2 + 88 >> 2] | 0) >= (c[A2 + 88 >> 2] | 0))
                            c[e2 + 4 >> 2] = k2;
                          c[e2 + 12 >> 2] = c[K2 + 96 + 12 >> 2];
                          g2 = h2;
                          F2 = j2;
                          s2 = c[j2 + 88 >> 2] | 0;
                          n2 = c[h2 + 88 >> 2] | 0;
                          t2 = c[j2 + 92 >> 2] | 0;
                          u2 = c[h2 + 92 >> 2] | 0;
                          v2 = c[j2 + 96 >> 2] | 0;
                          o2 = c[h2 + 96 >> 2] | 0;
                          w2 = ((t2 - u2 | 0) < 0) << 31 >> 31;
                          x2 = 0 - (s2 - n2) | 0;
                          y2 = Ds(0, 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          y2 = rr(v2 - o2 | 0, ((v2 - o2 | 0) < 0) << 31 >> 31 | 0, y2 | 0, D | 0) | 0;
                          z2 = D;
                          A2 = rr(v2 - o2 | 0, ((v2 - o2 | 0) < 0) << 31 >> 31 | 0, t2 - u2 | 0, w2 | 0) | 0;
                          B2 = D;
                          p2 = rr(s2 - n2 | 0, ((s2 - n2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          E2 = D;
                          C2 = rr(t2 - u2 | 0, w2 | 0, t2 - u2 | 0, w2 | 0) | 0;
                          C2 = Ds(p2 | 0, E2 | 0, C2 | 0, D | 0) | 0;
                          E2 = D;
                          p2 = c[h2 + 8 >> 2] | 0;
                          c[K2 + 120 >> 2] = 0;
                          if (!p2)
                            p2 = 0;
                          else {
                            q2 = Ds(0, 0, t2 - u2 | 0, w2 | 0) | 0;
                            r2 = D;
                            d2 = p2;
                            f2 = 0;
                            while (1) {
                              m2 = c[d2 + 12 >> 2] | 0;
                              k2 = c[m2 + 88 >> 2] | 0;
                              l2 = c[m2 + 92 >> 2] | 0;
                              m2 = c[m2 + 96 >> 2] | 0;
                              b2 = rr(l2 - u2 | 0, ((l2 - u2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                              G2 = D;
                              e2 = rr(k2 - n2 | 0, ((k2 - n2 | 0) < 0) << 31 >> 31 | 0, q2 | 0, r2 | 0) | 0;
                              i:
                                do
                                  if ((b2 | 0) == (e2 | 0) & (G2 | 0) == (D | 0) ? (e2 = rr(k2 - n2 | 0, ((k2 - n2 | 0) < 0) << 31 >> 31 | 0, y2 | 0, z2 | 0) | 0, b2 = D, G2 = rr(l2 - u2 | 0, ((l2 - u2 | 0) < 0) << 31 >> 31 | 0, A2 | 0, B2 | 0) | 0, b2 = Ct(G2 | 0, D | 0, e2 | 0, b2 | 0) | 0, e2 = D, G2 = rr(m2 - o2 | 0, ((m2 - o2 | 0) < 0) << 31 >> 31 | 0, C2 | 0, E2 | 0) | 0, G2 = Ct(b2 | 0, e2 | 0, G2 | 0, D | 0) | 0, e2 = D, (e2 | 0) > 0 | (e2 | 0) == 0 & G2 >>> 0 > 0) : 0) {
                                    do
                                      if (f2 | 0) {
                                        b2 = (c[f2 + 4 >> 2] | 0) == (d2 | 0);
                                        if ((c[f2 >> 2] | 0) != (d2 | 0))
                                          if (b2)
                                            break;
                                          else
                                            break i;
                                        if (!b2)
                                          break i;
                                        e2 = c[f2 + 12 >> 2] | 0;
                                        L2 = c[(c[d2 + 8 >> 2] | 0) + 12 >> 2] | 0;
                                        G2 = c[L2 + 88 >> 2] | 0;
                                        b2 = c[L2 + 92 >> 2] | 0;
                                        L2 = c[L2 + 96 >> 2] | 0;
                                        M2 = (c[e2 + 96 >> 2] | 0) - L2 | 0;
                                        b2 = (S(m2 - L2 | 0, (c[e2 + 92 >> 2] | 0) - b2 | 0) | 0) - (S(M2, l2 - b2 | 0) | 0) | 0;
                                        G2 = (S(M2, k2 - G2 | 0) | 0) - (S(m2 - L2 | 0, (c[e2 + 88 >> 2] | 0) - G2 | 0) | 0) | 0;
                                        b2 = rr(b2 | 0, ((b2 | 0) < 0) << 31 >> 31 | 0, t2 - u2 | 0, w2 | 0) | 0;
                                        e2 = D;
                                        G2 = rr(G2 | 0, ((G2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                                        G2 = Ct(b2 | 0, e2 | 0, G2 | 0, D | 0) | 0;
                                        e2 = D;
                                        if ((e2 | 0) > 0 | (e2 | 0) == 0 & G2 >>> 0 > 0)
                                          break i;
                                      }
                                    while (0);
                                    c[K2 + 120 >> 2] = d2;
                                    f2 = d2;
                                  }
                                while (0);
                              d2 = c[d2 >> 2] | 0;
                              if ((d2 | 0) == (p2 | 0)) {
                                p2 = f2;
                                break;
                              }
                            }
                          }
                          d2 = c[j2 + 8 >> 2] | 0;
                          c[K2 + 72 >> 2] = 0;
                          if (!d2)
                            f2 = 0;
                          else {
                            n2 = Ds(0, 0, t2 - u2 | 0, w2 | 0) | 0;
                            o2 = D;
                            b2 = d2;
                            f2 = 0;
                            do {
                              m2 = c[b2 + 12 >> 2] | 0;
                              k2 = c[m2 + 88 >> 2] | 0;
                              l2 = c[m2 + 92 >> 2] | 0;
                              m2 = c[m2 + 96 >> 2] | 0;
                              G2 = rr(l2 - t2 | 0, ((l2 - t2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0;
                              M2 = D;
                              L2 = rr(k2 - s2 | 0, ((k2 - s2 | 0) < 0) << 31 >> 31 | 0, n2 | 0, o2 | 0) | 0;
                              do
                                if ((G2 | 0) == (L2 | 0) & (M2 | 0) == (D | 0) ? (L2 = rr(k2 - s2 | 0, ((k2 - s2 | 0) < 0) << 31 >> 31 | 0, y2 | 0, z2 | 0) | 0, G2 = D, M2 = rr(l2 - t2 | 0, ((l2 - t2 | 0) < 0) << 31 >> 31 | 0, A2 | 0, B2 | 0) | 0, G2 = Ct(M2 | 0, D | 0, L2 | 0, G2 | 0) | 0, L2 = D, M2 = rr(m2 - v2 | 0, ((m2 - v2 | 0) < 0) << 31 >> 31 | 0, C2 | 0, E2 | 0) | 0, M2 = Ct(G2 | 0, L2 | 0, M2 | 0, D | 0) | 0, L2 = D, (L2 | 0) > 0 | (L2 | 0) == 0 & M2 >>> 0 > 0) : 0) {
                                  if (f2 | 0) {
                                    if ((c[f2 >> 2] | 0) != (b2 | 0))
                                      break;
                                    if ((c[f2 + 4 >> 2] | 0) == (b2 | 0) ? (L2 = c[f2 + 12 >> 2] | 0, e2 = c[(c[b2 + 8 >> 2] | 0) + 12 >> 2] | 0, M2 = c[e2 + 88 >> 2] | 0, G2 = c[e2 + 92 >> 2] | 0, e2 = c[e2 + 96 >> 2] | 0, r2 = (c[L2 + 96 >> 2] | 0) - e2 | 0, G2 = (S(m2 - e2 | 0, (c[L2 + 92 >> 2] | 0) - G2 | 0) | 0) - (S(r2, l2 - G2 | 0) | 0) | 0, M2 = (S(r2, k2 - M2 | 0) | 0) - (S(m2 - e2 | 0, (c[L2 + 88 >> 2] | 0) - M2 | 0) | 0) | 0, G2 = rr(G2 | 0, ((G2 | 0) < 0) << 31 >> 31 | 0, t2 - u2 | 0, w2 | 0) | 0, L2 = D, M2 = rr(M2 | 0, ((M2 | 0) < 0) << 31 >> 31 | 0, x2 | 0, ((x2 | 0) < 0) << 31 >> 31 | 0) | 0, M2 = Ct(G2 | 0, L2 | 0, M2 | 0, D | 0) | 0, L2 = D, !((L2 | 0) > 0 | (L2 | 0) == 0 & M2 >>> 0 > 0)) : 0)
                                      break;
                                  }
                                  c[K2 + 72 >> 2] = b2;
                                  f2 = b2;
                                }
                              while (0);
                              b2 = c[b2 >> 2] | 0;
                            } while ((b2 | 0) != (d2 | 0));
                          }
                          if ((p2 | 0) != 0 | (f2 | 0) != 0) {
                            mc(a2, h2, j2, K2 + 120 | 0, K2 + 72 | 0);
                            f2 = c[K2 + 120 >> 2] | 0;
                            if (f2) {
                              h2 = c[f2 + 12 >> 2] | 0;
                              g2 = h2;
                            }
                            f2 = c[K2 + 72 >> 2] | 0;
                            if (!f2)
                              f2 = F2;
                            else {
                              j2 = c[f2 + 12 >> 2] | 0;
                              f2 = j2;
                            }
                          } else
                            f2 = F2;
                          n2 = f2;
                          o2 = c[j2 + 88 >> 2] | 0;
                          p2 = (c[j2 + 96 >> 2] | 0) + 1 | 0;
                          q2 = c[j2 + 92 >> 2] | 0;
                        }
                        l2 = 0;
                        f2 = 0;
                        k2 = 0;
                        A2 = 0;
                        G2 = 1;
                        b2 = 0;
                        F2 = 0;
                        d2 = 0;
                        C2 = 0;
                        E2 = p2;
                        z2 = j2;
                        y2 = h2;
                        while (1) {
                          B2 = c[y2 + 88 >> 2] | 0;
                          w2 = (c[z2 + 88 >> 2] | 0) - B2 | 0;
                          M2 = c[y2 + 92 >> 2] | 0;
                          e2 = (c[z2 + 92 >> 2] | 0) - M2 | 0;
                          v2 = c[y2 + 96 >> 2] | 0;
                          t2 = (c[z2 + 96 >> 2] | 0) - v2 | 0;
                          c[K2 + 120 >> 2] = w2;
                          c[K2 + 120 + 4 >> 2] = e2;
                          c[K2 + 120 + 8 >> 2] = t2;
                          c[K2 + 120 + 12 >> 2] = -1;
                          B2 = o2 - B2 | 0;
                          M2 = q2 - M2 | 0;
                          v2 = E2 - v2 | 0;
                          u2 = (S(t2, M2) | 0) - (S(e2, v2) | 0) | 0;
                          v2 = (S(w2, v2) | 0) - (S(t2, B2) | 0) | 0;
                          M2 = (S(e2, B2) | 0) - (S(w2, M2) | 0) | 0;
                          c[K2 + 72 >> 2] = u2;
                          c[K2 + 72 + 4 >> 2] = ((u2 | 0) < 0) << 31 >> 31;
                          c[K2 + 72 + 8 >> 2] = v2;
                          c[K2 + 72 + 8 + 4 >> 2] = ((v2 | 0) < 0) << 31 >> 31;
                          c[K2 + 72 + 16 >> 2] = M2;
                          c[K2 + 72 + 16 + 4 >> 2] = ((M2 | 0) < 0) << 31 >> 31;
                          B2 = rr(e2 | 0, ((e2 | 0) < 0) << 31 >> 31 | 0, M2 | 0, ((M2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          L2 = D;
                          x2 = rr(t2 | 0, ((t2 | 0) < 0) << 31 >> 31 | 0, v2 | 0, ((v2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          x2 = Ds(B2 | 0, L2 | 0, x2 | 0, D | 0) | 0;
                          L2 = D;
                          t2 = rr(u2 | 0, ((u2 | 0) < 0) << 31 >> 31 | 0, t2 | 0, ((t2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          B2 = D;
                          M2 = rr(w2 | 0, ((w2 | 0) < 0) << 31 >> 31 | 0, M2 | 0, ((M2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          M2 = Ds(t2 | 0, B2 | 0, M2 | 0, D | 0) | 0;
                          B2 = D;
                          v2 = rr(w2 | 0, ((w2 | 0) < 0) << 31 >> 31 | 0, v2 | 0, ((v2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          w2 = D;
                          e2 = rr(u2 | 0, ((u2 | 0) < 0) << 31 >> 31 | 0, e2 | 0, ((e2 | 0) < 0) << 31 >> 31 | 0) | 0;
                          e2 = Ds(v2 | 0, w2 | 0, e2 | 0, D | 0) | 0;
                          c[K2 + 48 >> 2] = x2;
                          c[K2 + 48 + 4 >> 2] = L2;
                          c[K2 + 48 + 8 >> 2] = M2;
                          c[K2 + 48 + 8 + 4 >> 2] = B2;
                          c[K2 + 48 + 16 >> 2] = e2;
                          c[K2 + 48 + 16 + 4 >> 2] = D;
                          c[K2 + 24 >> 2] = 0;
                          c[K2 + 24 + 4 >> 2] = 0;
                          c[K2 + 24 + 8 >> 2] = 0;
                          c[K2 + 24 + 12 >> 2] = 0;
                          c[K2 + 24 + 16 >> 2] = 0;
                          e2 = rd(a2, 0, y2, K2 + 120 | 0, K2 + 72 | 0, K2 + 48 | 0, K2 + 24 | 0) | 0;
                          c[K2 >> 2] = 0;
                          c[K2 + 4 >> 2] = 0;
                          c[K2 + 8 >> 2] = 0;
                          c[K2 + 12 >> 2] = 0;
                          c[K2 + 16 >> 2] = 0;
                          B2 = rd(a2, 1, z2, K2 + 120 | 0, K2 + 72 | 0, K2 + 48 | 0, K2) | 0;
                          do
                            if ((e2 | 0) != 0 | (B2 | 0) != 0) {
                              m2 = e2 | 0 ? -1 : 1;
                              do
                                if ((e2 | 0) != 0 & (B2 | 0) != 0) {
                                  x2 = c[K2 + 24 + 16 >> 2] | 0;
                                  m2 = c[K2 + 16 >> 2] | 0;
                                  if ((x2 | 0) != (m2 | 0)) {
                                    w2 = x2 - m2 | 0;
                                    break;
                                  }
                                  if (!x2)
                                    w2 = 0;
                                  else {
                                    M2 = c[K2 + 24 >> 2] | 0;
                                    v2 = c[K2 + 24 + 4 >> 2] | 0;
                                    r2 = c[K2 + 8 >> 2] | 0;
                                    N2 = c[K2 + 8 + 4 >> 2] | 0;
                                    p2 = rr(r2 | 0, 0, M2 | 0, 0) | 0;
                                    m2 = D;
                                    M2 = rr(N2 | 0, 0, M2 | 0, 0) | 0;
                                    L2 = D;
                                    r2 = rr(r2 | 0, 0, v2 | 0, 0) | 0;
                                    s2 = D;
                                    v2 = rr(N2 | 0, 0, v2 | 0, 0) | 0;
                                    N2 = D;
                                    r2 = Ct(M2 | 0, 0, r2 | 0, 0) | 0;
                                    M2 = D;
                                    N2 = Ct(L2 | 0, 0, v2 | 0, N2 | 0) | 0;
                                    s2 = Ct(N2 | 0, D | 0, s2 | 0, 0) | 0;
                                    M2 = Ct(s2 | 0, D | 0, M2 | 0, 0) | 0;
                                    s2 = D;
                                    m2 = Ct(0, r2 | 0, p2 | 0, m2 | 0) | 0;
                                    p2 = D;
                                    r2 = Ct(M2 | 0, s2 | 0, (p2 >>> 0 < r2 >>> 0 | (p2 | 0) == (r2 | 0) & m2 >>> 0 < 0) & 1 | 0, 0) | 0;
                                    s2 = D;
                                    M2 = c[K2 + 24 + 8 >> 2] | 0;
                                    N2 = c[K2 + 24 + 8 + 4 >> 2] | 0;
                                    v2 = c[K2 >> 2] | 0;
                                    L2 = c[K2 + 4 >> 2] | 0;
                                    u2 = rr(v2 | 0, 0, M2 | 0, 0) | 0;
                                    t2 = D;
                                    M2 = rr(L2 | 0, 0, M2 | 0, 0) | 0;
                                    O2 = D;
                                    v2 = rr(v2 | 0, 0, N2 | 0, 0) | 0;
                                    w2 = D;
                                    N2 = rr(L2 | 0, 0, N2 | 0, 0) | 0;
                                    L2 = D;
                                    v2 = Ct(M2 | 0, 0, v2 | 0, 0) | 0;
                                    M2 = D;
                                    L2 = Ct(O2 | 0, 0, N2 | 0, L2 | 0) | 0;
                                    w2 = Ct(L2 | 0, D | 0, w2 | 0, 0) | 0;
                                    M2 = Ct(w2 | 0, D | 0, M2 | 0, 0) | 0;
                                    w2 = D;
                                    t2 = Ct(0, v2 | 0, u2 | 0, t2 | 0) | 0;
                                    u2 = D;
                                    v2 = Ct(M2 | 0, w2 | 0, (u2 >>> 0 < v2 >>> 0 | (u2 | 0) == (v2 | 0) & t2 >>> 0 < 0) & 1 | 0, 0) | 0;
                                    w2 = D;
                                    if (!(s2 >>> 0 < w2 >>> 0 | (s2 | 0) == (w2 | 0) & r2 >>> 0 < v2 >>> 0))
                                      if (!(s2 >>> 0 > w2 >>> 0 | (s2 | 0) == (w2 | 0) & r2 >>> 0 > v2 >>> 0))
                                        if (p2 >>> 0 < u2 >>> 0 | (p2 | 0) == (u2 | 0) & m2 >>> 0 < t2 >>> 0)
                                          m2 = -1;
                                        else
                                          m2 = (p2 >>> 0 > u2 >>> 0 | (p2 | 0) == (u2 | 0) & m2 >>> 0 > t2 >>> 0) & 1;
                                      else
                                        m2 = 1;
                                    else
                                      m2 = -1;
                                    w2 = S(m2, x2) | 0;
                                  }
                                } else
                                  w2 = m2;
                              while (0);
                              do
                                if (!G2)
                                  if ((w2 | 0) > -1)
                                    if ((c[K2 + 16 >> 2] | 0) < 0 & ((c[K2 + 8 >> 2] | 0) == 0 ? (c[K2 + 8 + 4 >> 2] | 0) == 0 : 0)) {
                                      p2 = A2;
                                      u2 = C2;
                                      x2 = k2;
                                      t2 = d2;
                                      break;
                                    } else {
                                      H2 = 135;
                                      break;
                                    }
                                  else if ((c[K2 + 24 + 16 >> 2] | 0) < 0 & ((c[K2 + 24 + 8 >> 2] | 0) == 0 ? (c[K2 + 24 + 8 + 4 >> 2] | 0) == 0 : 0)) {
                                    p2 = A2;
                                    u2 = C2;
                                    x2 = k2;
                                    t2 = d2;
                                    break;
                                  } else {
                                    H2 = 135;
                                    break;
                                  }
                                else
                                  H2 = 135;
                              while (0);
                              if ((H2 | 0) == 135) {
                                H2 = 0;
                                p2 = Wf(a2, y2, z2) | 0;
                                if (!A2)
                                  k2 = p2;
                                else
                                  c[A2 + 4 >> 2] = p2;
                                c[p2 >> 2] = A2;
                                m2 = c[p2 + 8 >> 2] | 0;
                                if (!C2)
                                  d2 = m2;
                                else
                                  c[C2 >> 2] = m2;
                                c[m2 + 4 >> 2] = C2;
                                u2 = m2;
                                x2 = k2;
                                t2 = d2;
                              }
                              c[K2 + 116 >> 2] = e2;
                              c[K2 + 112 >> 2] = B2;
                              if (!w2) {
                                mc(a2, g2, n2, K2 + 116 | 0, K2 + 112 | 0);
                                d2 = c[K2 + 112 >> 2] | 0;
                              } else
                                d2 = B2;
                              if ((w2 | 0) > -1 & (d2 | 0) != 0) {
                                r2 = (b2 | 0) != 0;
                                if (r2 ? (I2 = c[b2 >> 2] | 0, (I2 | 0) != (B2 | 0)) : 0) {
                                  o2 = I2;
                                  do {
                                    q2 = o2;
                                    o2 = c[o2 >> 2] | 0;
                                    s2 = c[q2 + 8 >> 2] | 0;
                                    m2 = c[s2 + 12 >> 2] | 0;
                                    if ((o2 | 0) == (q2 | 0))
                                      k2 = 0;
                                    else {
                                      c[o2 + 4 >> 2] = c[q2 + 4 >> 2];
                                      c[c[q2 + 4 >> 2] >> 2] = o2;
                                      k2 = o2;
                                    }
                                    c[m2 + 8 >> 2] = k2;
                                    k2 = c[s2 >> 2] | 0;
                                    m2 = c[q2 + 12 >> 2] | 0;
                                    if ((k2 | 0) == (s2 | 0))
                                      k2 = 0;
                                    else {
                                      c[k2 + 4 >> 2] = c[s2 + 4 >> 2];
                                      c[c[s2 + 4 >> 2] >> 2] = k2;
                                    }
                                    c[m2 + 8 >> 2] = k2;
                                    c[q2 + 4 >> 2] = 0;
                                    c[q2 + 4 + 4 >> 2] = 0;
                                    c[q2 + 4 + 8 >> 2] = 0;
                                    c[q2 + 4 + 12 >> 2] = 0;
                                    c[q2 >> 2] = c[a2 + 56 >> 2];
                                    c[a2 + 56 >> 2] = q2;
                                    c[s2 + 4 >> 2] = 0;
                                    c[s2 + 4 + 4 >> 2] = 0;
                                    c[s2 + 4 + 8 >> 2] = 0;
                                    c[s2 + 4 + 12 >> 2] = 0;
                                    c[s2 >> 2] = c[a2 + 56 >> 2];
                                    c[a2 + 56 >> 2] = s2;
                                    c[a2 + 116 >> 2] = (c[a2 + 116 >> 2] | 0) + -1;
                                  } while ((o2 | 0) != (B2 | 0));
                                }
                                if (!u2) {
                                  k2 = r2 ? F2 : B2;
                                  m2 = t2;
                                } else {
                                  if (r2) {
                                    c[b2 >> 2] = t2;
                                    k2 = F2;
                                    m2 = B2 + 4 | 0;
                                  } else {
                                    b2 = c[B2 + 4 >> 2] | 0;
                                    c[b2 >> 2] = t2;
                                    k2 = t2;
                                    m2 = B2 + 4 | 0;
                                  }
                                  c[t2 + 4 >> 2] = b2;
                                  c[u2 >> 2] = B2;
                                  c[m2 >> 2] = u2;
                                  m2 = 0;
                                  d2 = c[K2 + 112 >> 2] | 0;
                                }
                                q2 = n2;
                                b2 = c[d2 + 8 >> 2] | 0;
                                v2 = k2;
                                u2 = 0;
                                B2 = m2;
                                A2 = c[d2 + 12 >> 2] | 0;
                                o2 = c[q2 + 88 >> 2] | 0;
                                d2 = c[q2 + 96 >> 2] | 0;
                                q2 = c[q2 + 92 >> 2] | 0;
                              } else {
                                v2 = F2;
                                B2 = t2;
                                A2 = n2;
                                d2 = E2;
                              }
                              m2 = c[K2 + 116 >> 2] | 0;
                              if ((w2 | 0) < 1 & (m2 | 0) != 0) {
                                q2 = (l2 | 0) != 0;
                                if (q2 ? (J2 = c[l2 + 4 >> 2] | 0, (J2 | 0) != (e2 | 0)) : 0) {
                                  n2 = J2;
                                  do {
                                    r2 = n2 + 4 | 0;
                                    o2 = n2;
                                    n2 = c[r2 >> 2] | 0;
                                    k2 = c[o2 >> 2] | 0;
                                    s2 = c[o2 + 8 >> 2] | 0;
                                    d2 = c[s2 + 12 >> 2] | 0;
                                    if ((k2 | 0) == (o2 | 0))
                                      k2 = 0;
                                    else {
                                      c[k2 + 4 >> 2] = n2;
                                      c[c[r2 >> 2] >> 2] = k2;
                                    }
                                    c[d2 + 8 >> 2] = k2;
                                    k2 = c[s2 >> 2] | 0;
                                    d2 = c[o2 + 12 >> 2] | 0;
                                    if ((k2 | 0) == (s2 | 0))
                                      k2 = 0;
                                    else {
                                      c[k2 + 4 >> 2] = c[s2 + 4 >> 2];
                                      c[c[s2 + 4 >> 2] >> 2] = k2;
                                    }
                                    c[d2 + 8 >> 2] = k2;
                                    c[r2 >> 2] = 0;
                                    c[r2 + 4 >> 2] = 0;
                                    c[r2 + 8 >> 2] = 0;
                                    c[r2 + 12 >> 2] = 0;
                                    c[o2 >> 2] = c[a2 + 56 >> 2];
                                    c[a2 + 56 >> 2] = o2;
                                    c[s2 + 4 >> 2] = 0;
                                    c[s2 + 4 + 4 >> 2] = 0;
                                    c[s2 + 4 + 8 >> 2] = 0;
                                    c[s2 + 4 + 12 >> 2] = 0;
                                    c[s2 >> 2] = c[a2 + 56 >> 2];
                                    c[a2 + 56 >> 2] = s2;
                                    c[a2 + 116 >> 2] = (c[a2 + 116 >> 2] | 0) + -1;
                                  } while ((n2 | 0) != (e2 | 0));
                                }
                                if (!p2) {
                                  f2 = q2 ? f2 : e2;
                                  k2 = x2;
                                } else {
                                  if (q2) {
                                    c[l2 + 4 >> 2] = x2;
                                    k2 = e2;
                                  } else {
                                    l2 = c[e2 >> 2] | 0;
                                    c[l2 + 4 >> 2] = x2;
                                    f2 = x2;
                                    k2 = e2;
                                  }
                                  c[x2 >> 2] = l2;
                                  c[k2 >> 2] = p2;
                                  c[p2 + 4 >> 2] = e2;
                                  k2 = 0;
                                  m2 = c[K2 + 116 >> 2] | 0;
                                }
                                z2 = g2;
                                l2 = c[m2 + 8 >> 2] | 0;
                                p2 = 0;
                                o2 = c[z2 + 88 >> 2] | 0;
                                g2 = c[m2 + 12 >> 2] | 0;
                                y2 = c[z2 + 96 >> 2] | 0;
                                z2 = c[z2 + 92 >> 2] | 0;
                              } else {
                                k2 = x2;
                                y2 = d2;
                                z2 = q2;
                              }
                              if ((g2 | 0) == (h2 | 0) & (A2 | 0) == (j2 | 0)) {
                                if (l2) {
                                  t2 = l2 + 4 | 0;
                                  m2 = c[t2 >> 2] | 0;
                                  if ((m2 | 0) != (f2 | 0))
                                    do {
                                      r2 = m2 + 4 | 0;
                                      q2 = m2;
                                      m2 = c[r2 >> 2] | 0;
                                      d2 = c[q2 >> 2] | 0;
                                      s2 = c[q2 + 8 >> 2] | 0;
                                      n2 = c[s2 + 12 >> 2] | 0;
                                      if ((d2 | 0) == (q2 | 0))
                                        d2 = 0;
                                      else {
                                        c[d2 + 4 >> 2] = m2;
                                        c[c[r2 >> 2] >> 2] = d2;
                                      }
                                      c[n2 + 8 >> 2] = d2;
                                      d2 = c[s2 >> 2] | 0;
                                      n2 = c[q2 + 12 >> 2] | 0;
                                      if ((d2 | 0) == (s2 | 0))
                                        d2 = 0;
                                      else {
                                        c[d2 + 4 >> 2] = c[s2 + 4 >> 2];
                                        c[c[s2 + 4 >> 2] >> 2] = d2;
                                      }
                                      c[n2 + 8 >> 2] = d2;
                                      c[r2 >> 2] = 0;
                                      c[r2 + 4 >> 2] = 0;
                                      c[r2 + 8 >> 2] = 0;
                                      c[r2 + 12 >> 2] = 0;
                                      c[q2 >> 2] = c[a2 + 56 >> 2];
                                      c[a2 + 56 >> 2] = q2;
                                      c[s2 + 4 >> 2] = 0;
                                      c[s2 + 4 + 4 >> 2] = 0;
                                      c[s2 + 4 + 8 >> 2] = 0;
                                      c[s2 + 4 + 12 >> 2] = 0;
                                      c[s2 >> 2] = c[a2 + 56 >> 2];
                                      c[a2 + 56 >> 2] = s2;
                                      c[a2 + 116 >> 2] = (c[a2 + 116 >> 2] | 0) + -1;
                                    } while ((m2 | 0) != (f2 | 0));
                                  if (p2 | 0) {
                                    c[k2 >> 2] = l2;
                                    c[t2 >> 2] = k2;
                                    c[f2 >> 2] = p2;
                                    c[p2 + 4 >> 2] = f2;
                                  }
                                } else {
                                  c[k2 >> 2] = p2;
                                  c[p2 + 4 >> 2] = k2;
                                  c[g2 + 8 >> 2] = p2;
                                }
                                if (!b2) {
                                  c[u2 >> 2] = B2;
                                  c[B2 + 4 >> 2] = u2;
                                  c[j2 + 8 >> 2] = u2;
                                  x2 = 0;
                                  w2 = G2;
                                  b2 = 0;
                                  t2 = u2;
                                  d2 = B2;
                                  s2 = A2;
                                  r2 = g2;
                                  m2 = y2;
                                  q2 = z2;
                                  break;
                                }
                                m2 = c[b2 >> 2] | 0;
                                if ((m2 | 0) != (v2 | 0))
                                  do {
                                    q2 = m2;
                                    m2 = c[m2 >> 2] | 0;
                                    r2 = c[q2 + 8 >> 2] | 0;
                                    n2 = c[r2 + 12 >> 2] | 0;
                                    if ((m2 | 0) == (q2 | 0))
                                      d2 = 0;
                                    else {
                                      c[m2 + 4 >> 2] = c[q2 + 4 >> 2];
                                      c[c[q2 + 4 >> 2] >> 2] = m2;
                                      d2 = m2;
                                    }
                                    c[n2 + 8 >> 2] = d2;
                                    d2 = c[r2 >> 2] | 0;
                                    n2 = c[q2 + 12 >> 2] | 0;
                                    if ((d2 | 0) == (r2 | 0))
                                      d2 = 0;
                                    else {
                                      c[d2 + 4 >> 2] = c[r2 + 4 >> 2];
                                      c[c[r2 + 4 >> 2] >> 2] = d2;
                                    }
                                    c[n2 + 8 >> 2] = d2;
                                    c[q2 + 4 >> 2] = 0;
                                    c[q2 + 4 + 4 >> 2] = 0;
                                    c[q2 + 4 + 8 >> 2] = 0;
                                    c[q2 + 4 + 12 >> 2] = 0;
                                    c[q2 >> 2] = c[a2 + 56 >> 2];
                                    c[a2 + 56 >> 2] = q2;
                                    c[r2 + 4 >> 2] = 0;
                                    c[r2 + 4 + 4 >> 2] = 0;
                                    c[r2 + 4 + 8 >> 2] = 0;
                                    c[r2 + 4 + 12 >> 2] = 0;
                                    c[r2 >> 2] = c[a2 + 56 >> 2];
                                    c[a2 + 56 >> 2] = r2;
                                    c[a2 + 116 >> 2] = (c[a2 + 116 >> 2] | 0) + -1;
                                  } while ((m2 | 0) != (v2 | 0));
                                if (!u2) {
                                  x2 = 0;
                                  w2 = G2;
                                  t2 = 0;
                                  d2 = B2;
                                  s2 = A2;
                                  r2 = g2;
                                  m2 = y2;
                                  q2 = z2;
                                } else {
                                  c[b2 >> 2] = B2;
                                  c[B2 + 4 >> 2] = b2;
                                  c[u2 >> 2] = v2;
                                  c[v2 + 4 >> 2] = u2;
                                  x2 = 0;
                                  w2 = G2;
                                  t2 = u2;
                                  d2 = B2;
                                  s2 = A2;
                                  r2 = g2;
                                  m2 = y2;
                                  q2 = z2;
                                }
                              } else {
                                x2 = 1;
                                w2 = 0;
                                t2 = u2;
                                d2 = B2;
                                s2 = A2;
                                r2 = g2;
                                m2 = y2;
                                q2 = z2;
                              }
                            } else {
                              x2 = Wf(a2, y2, z2) | 0;
                              c[x2 >> 2] = x2;
                              c[x2 + 4 >> 2] = x2;
                              c[y2 + 8 >> 2] = x2;
                              x2 = c[x2 + 8 >> 2] | 0;
                              c[x2 >> 2] = x2;
                              c[x2 + 4 >> 2] = x2;
                              c[z2 + 8 >> 2] = x2;
                              x2 = 0;
                              w2 = G2;
                              p2 = A2;
                              v2 = F2;
                              t2 = C2;
                              s2 = n2;
                              r2 = g2;
                              m2 = E2;
                            }
                          while (0);
                          if (!x2)
                            break c;
                          A2 = p2;
                          G2 = w2;
                          F2 = v2;
                          C2 = t2;
                          n2 = s2;
                          g2 = r2;
                          E2 = m2;
                          z2 = s2;
                          y2 = r2;
                        }
                      }
                    while (0);
                  i = K2;
                  return;
                }
              }
            while (0);
          c[f2 + 8 >> 2] = 0;
          c[f2 >> 2] = f2;
          c[f2 + 4 >> 2] = f2;
          c[e2 >> 2] = f2;
          c[e2 + 4 >> 2] = f2;
          c[e2 + 8 >> 2] = f2;
          c[e2 + 12 >> 2] = f2;
          i = K2;
          return;
        }
        function fc(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0;
          ja2 = i;
          i = i + 64 | 0;
          if ((e2 | 0) <= 0) {
            i = ja2;
            return;
          }
          $2 = ja2 + 16 + 4 | 0;
          aa2 = ja2 + 16 + 8 | 0;
          Y2 = 0;
          do {
            ba2 = c[d2 + (Y2 << 2) >> 2] | 0;
            ca2 = c[ba2 + 772 >> 2] | 0;
            da2 = c[ba2 + 776 >> 2] | 0;
            ea2 = Oj(b2, ca2, +g[f2 + 12 >> 2]) | 0;
            fa2 = Oj(b2, da2, +g[f2 + 12 >> 2]) | 0;
            ga2 = c[b2 + 16 >> 2] | 0;
            O2 = +g[ga2 + (ea2 * 244 | 0) + 128 >> 2];
            S2 = +g[ga2 + (ea2 * 244 | 0) + 132 >> 2];
            T2 = +g[ga2 + (ea2 * 244 | 0) + 136 >> 2];
            if (!(O2 * O2 + S2 * S2 + T2 * T2 < 14210854715202004e-30 ? (O2 = +g[ga2 + (fa2 * 244 | 0) + 128 >> 2], S2 = +g[ga2 + (fa2 * 244 | 0) + 132 >> 2], T2 = +g[ga2 + (fa2 * 244 | 0) + 136 >> 2], O2 * O2 + S2 * S2 + T2 * T2 < 14210854715202004e-30) : 0))
              ia2 = 5;
            if ((ia2 | 0) == 5 ? (ia2 = 0, ha2 = c[ba2 + 780 >> 2] | 0, (ha2 | 0) > 0) : 0) {
              Z2 = 0;
              h2 = ha2;
              do {
                W2 = ba2 + 4 + (Z2 * 192 | 0) | 0;
                E2 = ba2 + 4 + (Z2 * 192 | 0) + 80 | 0;
                if (+g[E2 >> 2] <= +g[ba2 + 788 >> 2]) {
                  X2 = c[b2 + 28 >> 2] | 0;
                  if ((X2 | 0) == (c[b2 + 32 >> 2] | 0) ? (_2 = X2 | 0 ? X2 << 1 : 1, (X2 | 0) < (_2 | 0)) : 0) {
                    if (!_2) {
                      h2 = 0;
                      n2 = X2;
                    } else {
                      c[6324] = (c[6324] | 0) + 1;
                      h2 = ic((_2 * 152 | 3) + 16 | 0) | 0;
                      if (!h2)
                        h2 = 0;
                      else {
                        c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
                        h2 = h2 + 4 + 15 & -16;
                      }
                      n2 = c[b2 + 28 >> 2] | 0;
                    }
                    if ((n2 | 0) > 0) {
                      m2 = 0;
                      do {
                        Lm(h2 + (m2 * 152 | 0) | 0, (c[b2 + 36 >> 2] | 0) + (m2 * 152 | 0) | 0, 152) | 0;
                        m2 = m2 + 1 | 0;
                      } while ((m2 | 0) != (n2 | 0));
                    }
                    m2 = c[b2 + 36 >> 2] | 0;
                    if (m2 | 0) {
                      if (a[b2 + 40 >> 0] | 0) {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[m2 + -4 >> 2] | 0);
                      }
                      c[b2 + 36 >> 2] = 0;
                    }
                    a[b2 + 40 >> 0] = 1;
                    c[b2 + 36 >> 2] = h2;
                    c[b2 + 32 >> 2] = _2;
                    h2 = c[b2 + 28 >> 2] | 0;
                  } else
                    h2 = X2;
                  c[b2 + 28 >> 2] = h2 + 1;
                  V2 = c[b2 + 36 >> 2] | 0;
                  c[V2 + (X2 * 152 | 0) + 144 >> 2] = ea2;
                  c[V2 + (X2 * 152 | 0) + 148 >> 2] = fa2;
                  c[V2 + (X2 * 152 | 0) + 132 >> 2] = W2;
                  y2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 48 >> 2] - +g[ca2 + 52 >> 2];
                  z2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 52 >> 2] - +g[ca2 + 56 >> 2];
                  x2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 56 >> 2] - +g[ca2 + 60 >> 2];
                  g[ja2 + 48 >> 2] = y2;
                  g[ja2 + 48 + 4 >> 2] = z2;
                  g[ja2 + 48 + 8 >> 2] = x2;
                  g[ja2 + 48 + 12 >> 2] = 0;
                  B2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 32 >> 2] - +g[da2 + 52 >> 2];
                  D2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 36 >> 2] - +g[da2 + 56 >> 2];
                  A2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 40 >> 2] - +g[da2 + 60 >> 2];
                  g[ja2 + 32 >> 2] = B2;
                  g[ja2 + 32 + 4 >> 2] = D2;
                  g[ja2 + 32 + 8 >> 2] = A2;
                  g[ja2 + 32 + 12 >> 2] = 0;
                  if (!(c[ga2 + (ea2 * 244 | 0) + 240 >> 2] | 0)) {
                    m2 = 0;
                    p2 = 0;
                    r2 = 0;
                  } else {
                    S2 = +g[ga2 + (ea2 * 244 | 0) + 192 >> 2] + +g[ga2 + (ea2 * 244 | 0) + 224 >> 2];
                    T2 = +g[ga2 + (ea2 * 244 | 0) + 196 >> 2] + +g[ga2 + (ea2 * 244 | 0) + 228 >> 2];
                    O2 = +g[ga2 + (ea2 * 244 | 0) + 200 >> 2] + +g[ga2 + (ea2 * 244 | 0) + 232 >> 2];
                    m2 = (g[l >> 2] = +g[ga2 + (ea2 * 244 | 0) + 176 >> 2] + +g[ga2 + (ea2 * 244 | 0) + 208 >> 2] + (T2 * x2 - O2 * z2), c[l >> 2] | 0);
                    p2 = (g[l >> 2] = +g[ga2 + (ea2 * 244 | 0) + 180 >> 2] + +g[ga2 + (ea2 * 244 | 0) + 212 >> 2] + (O2 * y2 - S2 * x2), c[l >> 2] | 0);
                    r2 = (g[l >> 2] = +g[ga2 + (ea2 * 244 | 0) + 184 >> 2] + +g[ga2 + (ea2 * 244 | 0) + 216 >> 2] + (S2 * z2 - T2 * y2), c[l >> 2] | 0);
                  }
                  if (!(c[ga2 + (fa2 * 244 | 0) + 240 >> 2] | 0)) {
                    h2 = 0;
                    n2 = 0;
                    q2 = 0;
                  } else {
                    S2 = +g[ga2 + (fa2 * 244 | 0) + 192 >> 2] + +g[ga2 + (fa2 * 244 | 0) + 224 >> 2];
                    T2 = +g[ga2 + (fa2 * 244 | 0) + 196 >> 2] + +g[ga2 + (fa2 * 244 | 0) + 228 >> 2];
                    O2 = +g[ga2 + (fa2 * 244 | 0) + 200 >> 2] + +g[ga2 + (fa2 * 244 | 0) + 232 >> 2];
                    h2 = (g[l >> 2] = +g[ga2 + (fa2 * 244 | 0) + 176 >> 2] + +g[ga2 + (fa2 * 244 | 0) + 208 >> 2] + (T2 * A2 - O2 * D2), c[l >> 2] | 0);
                    n2 = (g[l >> 2] = +g[ga2 + (fa2 * 244 | 0) + 180 >> 2] + +g[ga2 + (fa2 * 244 | 0) + 212 >> 2] + (O2 * B2 - S2 * A2), c[l >> 2] | 0);
                    q2 = (g[l >> 2] = +g[ga2 + (fa2 * 244 | 0) + 184 >> 2] + +g[ga2 + (fa2 * 244 | 0) + 216 >> 2] + (S2 * D2 - T2 * B2), c[l >> 2] | 0);
                  }
                  S2 = (c[l >> 2] = m2, +g[l >> 2]);
                  S2 = S2 - (c[l >> 2] = h2, +g[l >> 2]);
                  O2 = (c[l >> 2] = p2, +g[l >> 2]);
                  O2 = O2 - (c[l >> 2] = n2, +g[l >> 2]);
                  K2 = (c[l >> 2] = r2, +g[l >> 2]);
                  K2 = K2 - (c[l >> 2] = q2, +g[l >> 2]);
                  P2 = ba2 + 4 + (Z2 * 192 | 0) + 64 | 0;
                  L2 = +g[P2 >> 2];
                  Q2 = ba2 + 4 + (Z2 * 192 | 0) + 68 | 0;
                  M2 = +g[Q2 >> 2];
                  R2 = ba2 + 4 + (Z2 * 192 | 0) + 72 | 0;
                  N2 = +g[R2 >> 2];
                  r2 = c[b2 + 16 >> 2] | 0;
                  p2 = c[r2 + (ea2 * 244 | 0) + 240 >> 2] | 0;
                  q2 = c[r2 + (fa2 * 244 | 0) + 240 >> 2] | 0;
                  T2 = +g[f2 + 28 >> 2];
                  J2 = +g[f2 + 12 >> 2];
                  j2 = +g[f2 + 40 >> 2];
                  k2 = +g[f2 + 36 >> 2];
                  U2 = ba2 + 4 + (Z2 * 192 | 0) + 120 | 0;
                  h2 = c[U2 >> 2] | 0;
                  if (!(h2 & 6))
                    if (!(h2 & 8))
                      H2 = k2;
                    else {
                      H2 = J2 * +g[ba2 + 4 + (Z2 * 192 | 0) + 144 >> 2];
                      j2 = H2 + +g[ba2 + 4 + (Z2 * 192 | 0) + 148 >> 2];
                      j2 = j2 < 11920928955078125e-23 ? 11920928955078125e-23 : j2;
                      H2 = H2 / j2;
                      j2 = 1 / j2;
                    }
                  else {
                    j2 = (h2 & 2 | 0) == 0 ? j2 : +g[ba2 + 4 + (Z2 * 192 | 0) + 144 >> 2];
                    if (!(h2 & 4))
                      H2 = k2;
                    else
                      H2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 148 >> 2];
                  }
                  I2 = 1 / J2 * j2;
                  if (p2 | 0) {
                    n2 = (g[l >> 2] = ((z2 * N2 - x2 * M2) * +g[p2 + 304 >> 2] + (x2 * L2 - N2 * y2) * +g[p2 + 308 >> 2] + (M2 * y2 - z2 * L2) * +g[p2 + 312 >> 2]) * +g[p2 + 584 >> 2], c[l >> 2] | 0);
                    h2 = (g[l >> 2] = ((z2 * N2 - x2 * M2) * +g[p2 + 320 >> 2] + (x2 * L2 - N2 * y2) * +g[p2 + 324 >> 2] + (M2 * y2 - z2 * L2) * +g[p2 + 328 >> 2]) * +g[p2 + 588 >> 2], c[l >> 2] | 0);
                    m2 = (g[l >> 2] = ((z2 * N2 - x2 * M2) * +g[p2 + 336 >> 2] + (x2 * L2 - N2 * y2) * +g[p2 + 340 >> 2] + (M2 * y2 - z2 * L2) * +g[p2 + 344 >> 2]) * +g[p2 + 592 >> 2], c[l >> 2] | 0);
                  } else {
                    n2 = 0;
                    h2 = 0;
                    m2 = 0;
                  }
                  c[V2 + (X2 * 152 | 0) + 64 >> 2] = n2;
                  c[V2 + (X2 * 152 | 0) + 68 >> 2] = h2;
                  c[V2 + (X2 * 152 | 0) + 72 >> 2] = m2;
                  g[V2 + (X2 * 152 | 0) + 76 >> 2] = 0;
                  u2 = +g[R2 >> 2];
                  v2 = +g[Q2 >> 2];
                  w2 = +g[P2 >> 2];
                  t2 = (c[l >> 2] = h2, +g[l >> 2]);
                  s2 = (c[l >> 2] = m2, +g[l >> 2]);
                  k2 = (c[l >> 2] = n2, +g[l >> 2]);
                  if (q2 | 0) {
                    h2 = (g[l >> 2] = (+g[q2 + 304 >> 2] * -(D2 * u2 - A2 * v2) + +g[q2 + 308 >> 2] * -(A2 * w2 - u2 * B2) + +g[q2 + 312 >> 2] * -(v2 * B2 - D2 * w2)) * +g[q2 + 584 >> 2], c[l >> 2] | 0);
                    m2 = (g[l >> 2] = (+g[q2 + 320 >> 2] * -(D2 * u2 - A2 * v2) + +g[q2 + 324 >> 2] * -(A2 * w2 - u2 * B2) + +g[q2 + 328 >> 2] * -(v2 * B2 - D2 * w2)) * +g[q2 + 588 >> 2], c[l >> 2] | 0);
                    n2 = (g[l >> 2] = (+g[q2 + 336 >> 2] * -(D2 * u2 - A2 * v2) + +g[q2 + 340 >> 2] * -(A2 * w2 - u2 * B2) + +g[q2 + 344 >> 2] * -(v2 * B2 - D2 * w2)) * +g[q2 + 592 >> 2], c[l >> 2] | 0);
                  } else {
                    h2 = 0;
                    m2 = 0;
                    n2 = 0;
                  }
                  c[V2 + (X2 * 152 | 0) + 80 >> 2] = h2;
                  c[V2 + (X2 * 152 | 0) + 84 >> 2] = m2;
                  c[V2 + (X2 * 152 | 0) + 88 >> 2] = n2;
                  g[V2 + (X2 * 152 | 0) + 92 >> 2] = 0;
                  o2 = (c[l >> 2] = h2, +g[l >> 2]);
                  j2 = (c[l >> 2] = m2, +g[l >> 2]);
                  if (p2 | 0)
                    k2 = +g[p2 + 384 >> 2] + ((t2 * x2 - s2 * z2) * +g[P2 >> 2] + (s2 * y2 - x2 * k2) * +g[Q2 >> 2] + (z2 * k2 - t2 * y2) * +g[R2 >> 2]);
                  else
                    k2 = 0;
                  if (q2 | 0) {
                    C2 = -(c[l >> 2] = n2, +g[l >> 2]);
                    j2 = +g[q2 + 384 >> 2] + ((A2 * -j2 - D2 * C2) * +g[P2 >> 2] + (B2 * C2 - A2 * -o2) * +g[Q2 >> 2] + (D2 * -o2 - B2 * -j2) * +g[R2 >> 2]);
                  } else
                    j2 = 0;
                  g[V2 + (X2 * 152 | 0) + 108 >> 2] = T2 / (I2 + (k2 + j2));
                  if (p2 | 0) {
                    c[V2 + (X2 * 152 | 0) + 16 >> 2] = c[P2 >> 2];
                    c[V2 + (X2 * 152 | 0) + 16 + 4 >> 2] = c[P2 + 4 >> 2];
                    c[V2 + (X2 * 152 | 0) + 16 + 8 >> 2] = c[P2 + 8 >> 2];
                    c[V2 + (X2 * 152 | 0) + 16 + 12 >> 2] = c[P2 + 12 >> 2];
                    g[V2 + (X2 * 152 | 0) >> 2] = z2 * N2 - x2 * M2;
                    g[V2 + (X2 * 152 | 0) + 4 >> 2] = x2 * L2 - N2 * y2;
                    g[V2 + (X2 * 152 | 0) + 8 >> 2] = M2 * y2 - z2 * L2;
                    g[V2 + (X2 * 152 | 0) + 12 >> 2] = 0;
                  } else {
                    c[V2 + (X2 * 152 | 0) >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 4 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 8 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 12 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 16 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 20 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 24 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 28 >> 2] = 0;
                  }
                  if (q2 | 0) {
                    t2 = -+g[Q2 >> 2];
                    C2 = -+g[R2 >> 2];
                    g[V2 + (X2 * 152 | 0) + 48 >> 2] = -+g[P2 >> 2];
                    g[V2 + (X2 * 152 | 0) + 52 >> 2] = t2;
                    g[V2 + (X2 * 152 | 0) + 56 >> 2] = C2;
                    g[V2 + (X2 * 152 | 0) + 60 >> 2] = 0;
                    g[V2 + (X2 * 152 | 0) + 32 >> 2] = -(D2 * u2 - A2 * v2);
                    g[V2 + (X2 * 152 | 0) + 36 >> 2] = -(A2 * w2 - u2 * B2);
                    g[V2 + (X2 * 152 | 0) + 40 >> 2] = -(v2 * B2 - D2 * w2);
                    g[V2 + (X2 * 152 | 0) + 44 >> 2] = 0;
                  } else {
                    c[V2 + (X2 * 152 | 0) + 32 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 32 + 4 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 32 + 8 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 32 + 12 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 32 + 16 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 32 + 20 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 32 + 24 >> 2] = 0;
                    c[V2 + (X2 * 152 | 0) + 32 + 28 >> 2] = 0;
                  }
                  C2 = +g[E2 >> 2] + +g[f2 + 56 >> 2];
                  if (p2 | 0) {
                    s2 = +g[p2 + 372 >> 2];
                    t2 = +g[p2 + 376 >> 2];
                    w2 = +g[p2 + 368 >> 2];
                    u2 = s2 * x2 - t2 * z2 + +g[p2 + 352 >> 2];
                    t2 = +g[p2 + 356 >> 2] + (t2 * y2 - x2 * w2);
                    s2 = z2 * w2 - s2 * y2 + +g[p2 + 360 >> 2];
                  } else {
                    u2 = 0;
                    t2 = 0;
                    s2 = 0;
                  }
                  if (q2 | 0) {
                    j2 = +g[q2 + 372 >> 2];
                    k2 = +g[q2 + 376 >> 2];
                    z2 = +g[q2 + 368 >> 2];
                    o2 = j2 * A2 - k2 * D2 + +g[q2 + 352 >> 2];
                    k2 = +g[q2 + 356 >> 2] + (k2 * B2 - A2 * z2);
                    j2 = D2 * z2 - j2 * B2 + +g[q2 + 360 >> 2];
                  } else {
                    o2 = 0;
                    k2 = 0;
                    j2 = 0;
                  }
                  B2 = (u2 - o2) * +g[P2 >> 2] + (t2 - k2) * +g[Q2 >> 2] + (s2 - j2) * +g[R2 >> 2];
                  c[V2 + (X2 * 152 | 0) + 104 >> 2] = c[ba2 + 4 + (Z2 * 192 | 0) + 84 >> 2];
                  B2 = -(B2 * +g[ba2 + 4 + (Z2 * 192 | 0) + 96 >> 2]);
                  B2 = B2 <= 0 ? 0 : B2;
                  h2 = c[f2 + 64 >> 2] | 0;
                  do
                    if (!(h2 & 4))
                      g[V2 + (X2 * 152 | 0) + 100 >> 2] = 0;
                    else {
                      j2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 124 >> 2] * +g[f2 + 60 >> 2];
                      g[V2 + (X2 * 152 | 0) + 100 >> 2] = j2;
                      do
                        if (p2 | 0) {
                          if (!(c[r2 + (ea2 * 244 | 0) + 240 >> 2] | 0))
                            break;
                          D2 = j2 * +g[V2 + (X2 * 152 | 0) + 20 >> 2] * +g[r2 + (ea2 * 244 | 0) + 132 >> 2] * +g[p2 + 392 >> 2] * +g[r2 + (ea2 * 244 | 0) + 116 >> 2];
                          A2 = j2 * +g[V2 + (X2 * 152 | 0) + 24 >> 2] * +g[r2 + (ea2 * 244 | 0) + 136 >> 2] * +g[p2 + 396 >> 2] * +g[r2 + (ea2 * 244 | 0) + 120 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 64 >> 2] = +g[r2 + (ea2 * 244 | 0) + 112 >> 2] * j2 * +g[V2 + (X2 * 152 | 0) + 16 >> 2] * +g[r2 + (ea2 * 244 | 0) + 128 >> 2] * +g[p2 + 388 >> 2] + +g[r2 + (ea2 * 244 | 0) + 64 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 68 >> 2] = D2 + +g[r2 + (ea2 * 244 | 0) + 68 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 72 >> 2] = A2 + +g[r2 + (ea2 * 244 | 0) + 72 >> 2];
                          A2 = j2 * +g[r2 + (ea2 * 244 | 0) + 100 >> 2] * +g[V2 + (X2 * 152 | 0) + 68 >> 2];
                          D2 = j2 * +g[r2 + (ea2 * 244 | 0) + 104 >> 2] * +g[V2 + (X2 * 152 | 0) + 72 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 80 >> 2] = j2 * +g[r2 + (ea2 * 244 | 0) + 96 >> 2] * +g[V2 + (X2 * 152 | 0) + 64 >> 2] + +g[r2 + (ea2 * 244 | 0) + 80 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 84 >> 2] = A2 + +g[r2 + (ea2 * 244 | 0) + 84 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 88 >> 2] = D2 + +g[r2 + (ea2 * 244 | 0) + 88 >> 2];
                        }
                      while (0);
                      if (!q2)
                        break;
                      j2 = +g[V2 + (X2 * 152 | 0) + 100 >> 2];
                      if (!(c[r2 + (fa2 * 244 | 0) + 240 >> 2] | 0))
                        break;
                      D2 = +g[V2 + (X2 * 152 | 0) + 88 >> 2];
                      A2 = +g[V2 + (X2 * 152 | 0) + 84 >> 2];
                      z2 = +g[V2 + (X2 * 152 | 0) + 80 >> 2];
                      x2 = j2 * +g[V2 + (X2 * 152 | 0) + 52 >> 2] * +g[r2 + (fa2 * 244 | 0) + 132 >> 2] * +g[q2 + 392 >> 2] * +g[r2 + (fa2 * 244 | 0) + 116 >> 2];
                      y2 = j2 * +g[V2 + (X2 * 152 | 0) + 56 >> 2] * +g[r2 + (fa2 * 244 | 0) + 136 >> 2] * +g[q2 + 396 >> 2] * +g[r2 + (fa2 * 244 | 0) + 120 >> 2];
                      g[r2 + (fa2 * 244 | 0) + 64 >> 2] = +g[r2 + (fa2 * 244 | 0) + 112 >> 2] * j2 * +g[V2 + (X2 * 152 | 0) + 48 >> 2] * +g[r2 + (fa2 * 244 | 0) + 128 >> 2] * +g[q2 + 388 >> 2] + +g[r2 + (fa2 * 244 | 0) + 64 >> 2];
                      g[r2 + (fa2 * 244 | 0) + 68 >> 2] = x2 + +g[r2 + (fa2 * 244 | 0) + 68 >> 2];
                      g[r2 + (fa2 * 244 | 0) + 72 >> 2] = y2 + +g[r2 + (fa2 * 244 | 0) + 72 >> 2];
                      A2 = A2 * +g[r2 + (fa2 * 244 | 0) + 100 >> 2] * -j2;
                      D2 = D2 * +g[r2 + (fa2 * 244 | 0) + 104 >> 2] * -j2;
                      g[r2 + (fa2 * 244 | 0) + 80 >> 2] = +g[r2 + (fa2 * 244 | 0) + 80 >> 2] - z2 * +g[r2 + (fa2 * 244 | 0) + 96 >> 2] * -j2;
                      g[r2 + (fa2 * 244 | 0) + 84 >> 2] = +g[r2 + (fa2 * 244 | 0) + 84 >> 2] - A2;
                      g[r2 + (fa2 * 244 | 0) + 88 >> 2] = +g[r2 + (fa2 * 244 | 0) + 88 >> 2] - D2;
                    }
                  while (0);
                  g[V2 + (X2 * 152 | 0) + 96 >> 2] = 0;
                  if (!(c[r2 + (ea2 * 244 | 0) + 240 >> 2] | 0)) {
                    o2 = 0;
                    s2 = 0;
                    v2 = 0;
                    w2 = 0;
                    z2 = 0;
                    A2 = 0;
                  } else {
                    o2 = +g[r2 + (ea2 * 244 | 0) + 224 >> 2];
                    s2 = +g[r2 + (ea2 * 244 | 0) + 208 >> 2];
                    v2 = +g[r2 + (ea2 * 244 | 0) + 228 >> 2];
                    w2 = +g[r2 + (ea2 * 244 | 0) + 212 >> 2];
                    z2 = +g[r2 + (ea2 * 244 | 0) + 232 >> 2];
                    A2 = +g[r2 + (ea2 * 244 | 0) + 216 >> 2];
                  }
                  if (!(c[r2 + (fa2 * 244 | 0) + 240 >> 2] | 0)) {
                    j2 = 0;
                    k2 = 0;
                    t2 = 0;
                    u2 = 0;
                    x2 = 0;
                    y2 = 0;
                  } else {
                    j2 = +g[r2 + (fa2 * 244 | 0) + 224 >> 2];
                    k2 = +g[r2 + (fa2 * 244 | 0) + 208 >> 2];
                    t2 = +g[r2 + (fa2 * 244 | 0) + 228 >> 2];
                    u2 = +g[r2 + (fa2 * 244 | 0) + 212 >> 2];
                    x2 = +g[r2 + (fa2 * 244 | 0) + 232 >> 2];
                    y2 = +g[r2 + (fa2 * 244 | 0) + 216 >> 2];
                  }
                  j2 = B2 - ((s2 + +g[r2 + (ea2 * 244 | 0) + 176 >> 2]) * +g[V2 + (X2 * 152 | 0) + 16 >> 2] + (w2 + +g[r2 + (ea2 * 244 | 0) + 180 >> 2]) * +g[V2 + (X2 * 152 | 0) + 20 >> 2] + (A2 + +g[r2 + (ea2 * 244 | 0) + 184 >> 2]) * +g[V2 + (X2 * 152 | 0) + 24 >> 2] + ((o2 + +g[r2 + (ea2 * 244 | 0) + 192 >> 2]) * +g[V2 + (X2 * 152 | 0) >> 2] + (v2 + +g[r2 + (ea2 * 244 | 0) + 196 >> 2]) * +g[V2 + (X2 * 152 | 0) + 4 >> 2] + (z2 + +g[r2 + (ea2 * 244 | 0) + 200 >> 2]) * +g[V2 + (X2 * 152 | 0) + 8 >> 2]) + ((k2 + +g[r2 + (fa2 * 244 | 0) + 176 >> 2]) * +g[V2 + (X2 * 152 | 0) + 48 >> 2] + (u2 + +g[r2 + (fa2 * 244 | 0) + 180 >> 2]) * +g[V2 + (X2 * 152 | 0) + 52 >> 2] + (y2 + +g[r2 + (fa2 * 244 | 0) + 184 >> 2]) * +g[V2 + (X2 * 152 | 0) + 56 >> 2] + ((j2 + +g[r2 + (fa2 * 244 | 0) + 192 >> 2]) * +g[V2 + (X2 * 152 | 0) + 32 >> 2] + (t2 + +g[r2 + (fa2 * 244 | 0) + 196 >> 2]) * +g[V2 + (X2 * 152 | 0) + 36 >> 2] + (x2 + +g[r2 + (fa2 * 244 | 0) + 200 >> 2]) * +g[V2 + (X2 * 152 | 0) + 40 >> 2])));
                  if (C2 > 0) {
                    s2 = j2 - 1 / J2 * C2;
                    j2 = 0;
                  } else {
                    s2 = j2;
                    j2 = -(1 / J2 * H2 * C2);
                  }
                  o2 = +g[V2 + (X2 * 152 | 0) + 108 >> 2];
                  k2 = j2 * o2;
                  j2 = s2 * o2;
                  if ((c[f2 + 44 >> 2] | 0) == 0 ? 1 : C2 > +g[f2 + 48 >> 2]) {
                    g[V2 + (X2 * 152 | 0) + 112 >> 2] = k2 + j2;
                    g[V2 + (X2 * 152 | 0) + 128 >> 2] = 0;
                  } else {
                    g[V2 + (X2 * 152 | 0) + 112 >> 2] = j2;
                    g[V2 + (X2 * 152 | 0) + 128 >> 2] = k2;
                  }
                  g[V2 + (X2 * 152 | 0) + 116 >> 2] = I2 * o2;
                  g[V2 + (X2 * 152 | 0) + 120 >> 2] = 0;
                  g[V2 + (X2 * 152 | 0) + 124 >> 2] = 1e10;
                  c[V2 + (X2 * 152 | 0) + 140 >> 2] = c[b2 + 68 >> 2];
                  n2 = ba2 + 4 + (Z2 * 192 | 0) + 88 | 0;
                  if (+g[n2 >> 2] > 0) {
                    Ad(b2, P2, ea2, fa2, X2, +g[ba2 + 4 + (Z2 * 192 | 0) + 92 >> 2]);
                    j2 = +g[R2 >> 2];
                    if (+F(+j2) > 0.7071067690849304) {
                      I2 = +g[Q2 >> 2];
                      H2 = 1 / +G(+(j2 * j2 + I2 * I2));
                      g[ja2 + 16 >> 2] = 0;
                      g[$2 >> 2] = -(H2 * j2);
                      g[aa2 >> 2] = H2 * I2;
                      g[ja2 >> 2] = (j2 * j2 + I2 * I2) * H2;
                      J2 = +g[P2 >> 2];
                      g[ja2 + 4 >> 2] = -(H2 * I2 * J2);
                      v2 = J2 * -(H2 * j2);
                      k2 = 0;
                      o2 = -(H2 * j2);
                      s2 = H2 * I2;
                      t2 = (j2 * j2 + I2 * I2) * H2;
                      j2 = -(H2 * I2 * J2);
                    } else {
                      t2 = +g[P2 >> 2];
                      I2 = +g[Q2 >> 2];
                      J2 = 1 / +G(+(t2 * t2 + I2 * I2));
                      g[ja2 + 16 >> 2] = -(I2 * J2);
                      g[$2 >> 2] = J2 * t2;
                      g[aa2 >> 2] = 0;
                      g[ja2 >> 2] = -(J2 * t2 * j2);
                      g[ja2 + 4 >> 2] = j2 * -(I2 * J2);
                      v2 = (t2 * t2 + I2 * I2) * J2;
                      k2 = -(I2 * J2);
                      o2 = J2 * t2;
                      s2 = 0;
                      t2 = -(J2 * t2 * j2);
                      j2 = j2 * -(I2 * J2);
                    }
                    u2 = 1 / +G(+(k2 * k2 + o2 * o2 + s2 * s2));
                    w2 = k2 * u2;
                    g[ja2 + 16 >> 2] = w2;
                    x2 = o2 * u2;
                    g[$2 >> 2] = x2;
                    u2 = s2 * u2;
                    g[aa2 >> 2] = u2;
                    J2 = 1 / +G(+(t2 * t2 + j2 * j2 + v2 * v2));
                    o2 = t2 * J2;
                    g[ja2 >> 2] = o2;
                    k2 = j2 * J2;
                    g[ja2 + 4 >> 2] = k2;
                    j2 = v2 * J2;
                    g[ja2 + 8 >> 2] = j2;
                    h2 = (c[ca2 + 180 >> 2] & 2 | 0) == 0;
                    if (h2) {
                      s2 = w2;
                      t2 = x2;
                    } else {
                      y2 = +g[ca2 + 4 >> 2];
                      A2 = +g[ca2 + 20 >> 2];
                      C2 = +g[ca2 + 36 >> 2];
                      z2 = +g[ca2 + 8 >> 2];
                      B2 = +g[ca2 + 24 >> 2];
                      H2 = +g[ca2 + 40 >> 2];
                      s2 = +g[ca2 + 12 >> 2];
                      t2 = +g[ca2 + 28 >> 2];
                      J2 = +g[ca2 + 44 >> 2];
                      D2 = (y2 * w2 + A2 * x2 + C2 * u2) * +g[ca2 + 164 >> 2];
                      I2 = (w2 * z2 + x2 * B2 + u2 * H2) * +g[ca2 + 168 >> 2];
                      u2 = (w2 * s2 + x2 * t2 + u2 * J2) * +g[ca2 + 172 >> 2];
                      g[ja2 + 16 >> 2] = y2 * D2 + z2 * I2 + s2 * u2;
                      g[$2 >> 2] = A2 * D2 + B2 * I2 + t2 * u2;
                      g[aa2 >> 2] = C2 * D2 + H2 * I2 + J2 * u2;
                      g[ja2 + 16 + 12 >> 2] = 0;
                      s2 = y2 * D2 + z2 * I2 + s2 * u2;
                      t2 = A2 * D2 + B2 * I2 + t2 * u2;
                      u2 = C2 * D2 + H2 * I2 + J2 * u2;
                    }
                    m2 = (c[da2 + 180 >> 2] & 2 | 0) == 0;
                    if (!m2) {
                      w2 = +g[da2 + 4 >> 2];
                      z2 = +g[da2 + 20 >> 2];
                      C2 = +g[da2 + 36 >> 2];
                      x2 = +g[da2 + 8 >> 2];
                      A2 = +g[da2 + 24 >> 2];
                      H2 = +g[da2 + 40 >> 2];
                      y2 = +g[da2 + 12 >> 2];
                      B2 = +g[da2 + 28 >> 2];
                      J2 = +g[da2 + 44 >> 2];
                      D2 = (w2 * s2 + z2 * t2 + C2 * u2) * +g[da2 + 164 >> 2];
                      I2 = (s2 * x2 + t2 * A2 + u2 * H2) * +g[da2 + 168 >> 2];
                      u2 = (s2 * y2 + t2 * B2 + u2 * J2) * +g[da2 + 172 >> 2];
                      g[ja2 + 16 >> 2] = w2 * D2 + x2 * I2 + y2 * u2;
                      g[$2 >> 2] = z2 * D2 + A2 * I2 + B2 * u2;
                      g[aa2 >> 2] = C2 * D2 + H2 * I2 + J2 * u2;
                      g[ja2 + 16 + 12 >> 2] = 0;
                      s2 = w2 * D2 + x2 * I2 + y2 * u2;
                      t2 = z2 * D2 + A2 * I2 + B2 * u2;
                      u2 = C2 * D2 + H2 * I2 + J2 * u2;
                    }
                    if (!((ca2 | 0) == 0 | h2)) {
                      w2 = +g[ca2 + 4 >> 2];
                      z2 = +g[ca2 + 20 >> 2];
                      C2 = +g[ca2 + 36 >> 2];
                      x2 = +g[ca2 + 8 >> 2];
                      A2 = +g[ca2 + 24 >> 2];
                      H2 = +g[ca2 + 40 >> 2];
                      y2 = +g[ca2 + 12 >> 2];
                      B2 = +g[ca2 + 28 >> 2];
                      J2 = +g[ca2 + 44 >> 2];
                      D2 = (w2 * o2 + z2 * k2 + C2 * j2) * +g[ca2 + 164 >> 2];
                      I2 = (o2 * x2 + k2 * A2 + j2 * H2) * +g[ca2 + 168 >> 2];
                      j2 = (o2 * y2 + k2 * B2 + j2 * J2) * +g[ca2 + 172 >> 2];
                      g[ja2 >> 2] = w2 * D2 + x2 * I2 + y2 * j2;
                      g[ja2 + 4 >> 2] = z2 * D2 + A2 * I2 + B2 * j2;
                      g[ja2 + 8 >> 2] = C2 * D2 + H2 * I2 + J2 * j2;
                      g[ja2 + 12 >> 2] = 0;
                      o2 = w2 * D2 + x2 * I2 + y2 * j2;
                      k2 = z2 * D2 + A2 * I2 + B2 * j2;
                      j2 = C2 * D2 + H2 * I2 + J2 * j2;
                    }
                    if (!((da2 | 0) == 0 | m2)) {
                      w2 = +g[da2 + 4 >> 2];
                      z2 = +g[da2 + 20 >> 2];
                      C2 = +g[da2 + 36 >> 2];
                      x2 = +g[da2 + 8 >> 2];
                      A2 = +g[da2 + 24 >> 2];
                      H2 = +g[da2 + 40 >> 2];
                      y2 = +g[da2 + 12 >> 2];
                      B2 = +g[da2 + 28 >> 2];
                      J2 = +g[da2 + 44 >> 2];
                      D2 = (w2 * o2 + z2 * k2 + C2 * j2) * +g[da2 + 164 >> 2];
                      I2 = (o2 * x2 + k2 * A2 + j2 * H2) * +g[da2 + 168 >> 2];
                      j2 = (o2 * y2 + k2 * B2 + j2 * J2) * +g[da2 + 172 >> 2];
                      g[ja2 >> 2] = w2 * D2 + x2 * I2 + y2 * j2;
                      g[ja2 + 4 >> 2] = z2 * D2 + A2 * I2 + B2 * j2;
                      g[ja2 + 8 >> 2] = C2 * D2 + H2 * I2 + J2 * j2;
                      g[ja2 + 12 >> 2] = 0;
                      o2 = w2 * D2 + x2 * I2 + y2 * j2;
                      k2 = z2 * D2 + A2 * I2 + B2 * j2;
                      j2 = C2 * D2 + H2 * I2 + J2 * j2;
                    }
                    if (+G(+(s2 * s2 + t2 * t2 + u2 * u2)) > 1e-3)
                      Ad(b2, ja2 + 16 | 0, ea2, fa2, X2, +g[n2 >> 2]);
                    if (+G(+(o2 * o2 + k2 * k2 + j2 * j2)) > 1e-3)
                      Ad(b2, ja2, ea2, fa2, X2, +g[n2 >> 2]);
                    h2 = c[f2 + 64 >> 2] | 0;
                  }
                  do
                    if (!(h2 & 32))
                      ia2 = 85;
                    else {
                      if (!(c[U2 >> 2] & 1)) {
                        ia2 = 85;
                        break;
                      }
                      h2 = ba2 + 4 + (Z2 * 192 | 0) + 152 | 0;
                      $c(b2, ba2 + 4 + (Z2 * 192 | 0) + 160 | 0, ea2, fa2, X2, W2, ja2 + 48 | 0, ja2 + 32 | 0, T2, +g[ba2 + 4 + (Z2 * 192 | 0) + 136 >> 2], +g[h2 >> 2]);
                      if (!(c[f2 + 64 >> 2] & 16))
                        break;
                      $c(b2, ba2 + 4 + (Z2 * 192 | 0) + 176 | 0, ea2, fa2, X2, W2, ja2 + 48 | 0, ja2 + 32 | 0, T2, +g[ba2 + 4 + (Z2 * 192 | 0) + 140 >> 2], +g[h2 >> 2]);
                    }
                  while (0);
                  do
                    if ((ia2 | 0) == 85) {
                      ia2 = 0;
                      p2 = ba2 + 4 + (Z2 * 192 | 0) + 160 | 0;
                      s2 = +g[P2 >> 2];
                      t2 = +g[Q2 >> 2];
                      u2 = +g[R2 >> 2];
                      k2 = S2 - (S2 * L2 + O2 * M2 + K2 * N2) * s2;
                      o2 = O2 - (S2 * L2 + O2 * M2 + K2 * N2) * t2;
                      j2 = K2 - (S2 * L2 + O2 * M2 + K2 * N2) * u2;
                      g[ba2 + 4 + (Z2 * 192 | 0) + 160 >> 2] = k2;
                      h2 = ba2 + 4 + (Z2 * 192 | 0) + 164 | 0;
                      g[h2 >> 2] = o2;
                      n2 = ba2 + 4 + (Z2 * 192 | 0) + 168 | 0;
                      g[n2 >> 2] = j2;
                      g[ba2 + 4 + (Z2 * 192 | 0) + 172 >> 2] = 0;
                      if ((c[f2 + 64 >> 2] & 64 | 0) == 0 ? k2 * k2 + o2 * o2 + j2 * j2 > 11920928955078125e-23 : 0) {
                        S2 = 1 / +G(+(k2 * k2 + o2 * o2 + j2 * j2));
                        g[p2 >> 2] = k2 * S2;
                        g[h2 >> 2] = S2 * o2;
                        g[n2 >> 2] = S2 * j2;
                        ok(ca2, p2);
                        ok(da2, p2);
                        $c(b2, p2, ea2, fa2, X2, W2, ja2 + 48 | 0, ja2 + 32 | 0, T2, 0, 0);
                        if (!(c[f2 + 64 >> 2] & 16))
                          break;
                        U2 = ba2 + 4 + (Z2 * 192 | 0) + 176 | 0;
                        N2 = +g[h2 >> 2];
                        K2 = +g[R2 >> 2];
                        J2 = +g[n2 >> 2];
                        L2 = +g[Q2 >> 2];
                        O2 = +g[P2 >> 2];
                        M2 = +g[p2 >> 2];
                        g[ba2 + 4 + (Z2 * 192 | 0) + 176 >> 2] = N2 * K2 - J2 * L2;
                        g[ba2 + 4 + (Z2 * 192 | 0) + 188 >> 2] = 0;
                        S2 = 1 / +G(+((N2 * K2 - J2 * L2) * (N2 * K2 - J2 * L2) + (J2 * O2 - K2 * M2) * (J2 * O2 - K2 * M2) + (L2 * M2 - N2 * O2) * (L2 * M2 - N2 * O2)));
                        g[U2 >> 2] = (N2 * K2 - J2 * L2) * S2;
                        g[ba2 + 4 + (Z2 * 192 | 0) + 180 >> 2] = (J2 * O2 - K2 * M2) * S2;
                        g[ba2 + 4 + (Z2 * 192 | 0) + 184 >> 2] = (L2 * M2 - N2 * O2) * S2;
                        ok(ca2, U2);
                        ok(da2, U2);
                        $c(b2, U2, ea2, fa2, X2, W2, ja2 + 48 | 0, ja2 + 32 | 0, T2, 0, 0);
                        break;
                      }
                      m2 = ba2 + 4 + (Z2 * 192 | 0) + 176 | 0;
                      if (+F(+u2) > 0.7071067690849304) {
                        j2 = 1 / +G(+(u2 * u2 + t2 * t2));
                        g[p2 >> 2] = 0;
                        g[h2 >> 2] = -(j2 * u2);
                        g[n2 >> 2] = j2 * t2;
                        k2 = -(j2 * t2 * s2);
                        o2 = s2 * -(j2 * u2);
                        j2 = (u2 * u2 + t2 * t2) * j2;
                      } else {
                        j2 = 1 / +G(+(s2 * s2 + t2 * t2));
                        g[p2 >> 2] = -(t2 * j2);
                        g[h2 >> 2] = j2 * s2;
                        g[n2 >> 2] = 0;
                        k2 = u2 * -(t2 * j2);
                        o2 = (s2 * s2 + t2 * t2) * j2;
                        j2 = -(j2 * s2 * u2);
                      }
                      g[m2 >> 2] = j2;
                      g[ba2 + 4 + (Z2 * 192 | 0) + 180 >> 2] = k2;
                      g[ba2 + 4 + (Z2 * 192 | 0) + 184 >> 2] = o2;
                      ok(ca2, p2);
                      ok(da2, p2);
                      $c(b2, p2, ea2, fa2, X2, W2, ja2 + 48 | 0, ja2 + 32 | 0, T2, 0, 0);
                      h2 = c[f2 + 64 >> 2] | 0;
                      if (h2 & 16) {
                        ok(ca2, m2);
                        ok(da2, m2);
                        $c(b2, m2, ea2, fa2, X2, W2, ja2 + 48 | 0, ja2 + 32 | 0, T2, 0, 0);
                        h2 = c[f2 + 64 >> 2] | 0;
                      }
                      if ((h2 & 80 | 0) != 80)
                        break;
                      c[U2 >> 2] = c[U2 >> 2] | 1;
                    }
                  while (0);
                  r2 = c[b2 + 16 >> 2] | 0;
                  m2 = c[r2 + (ea2 * 244 | 0) + 240 >> 2] | 0;
                  n2 = c[r2 + (fa2 * 244 | 0) + 240 >> 2] | 0;
                  p2 = c[V2 + (X2 * 152 | 0) + 140 >> 2] | 0;
                  q2 = c[b2 + 76 >> 2] | 0;
                  h2 = c[f2 + 64 >> 2] | 0;
                  do
                    if (!(h2 & 4))
                      g[q2 + (p2 * 152 | 0) + 100 >> 2] = 0;
                    else {
                      j2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 128 >> 2] * +g[f2 + 60 >> 2];
                      g[q2 + (p2 * 152 | 0) + 100 >> 2] = j2;
                      if (m2 | 0) {
                        O2 = +g[m2 + 384 >> 2];
                        T2 = j2 * O2 * +g[q2 + (p2 * 152 | 0) + 20 >> 2] * +g[m2 + 392 >> 2] * +g[r2 + (ea2 * 244 | 0) + 116 >> 2];
                        S2 = j2 * O2 * +g[q2 + (p2 * 152 | 0) + 24 >> 2] * +g[m2 + 396 >> 2] * +g[r2 + (ea2 * 244 | 0) + 120 >> 2];
                        g[r2 + (ea2 * 244 | 0) + 64 >> 2] = +g[r2 + (ea2 * 244 | 0) + 112 >> 2] * j2 * O2 * +g[q2 + (p2 * 152 | 0) + 16 >> 2] * +g[m2 + 388 >> 2] + +g[r2 + (ea2 * 244 | 0) + 64 >> 2];
                        g[r2 + (ea2 * 244 | 0) + 68 >> 2] = T2 + +g[r2 + (ea2 * 244 | 0) + 68 >> 2];
                        g[r2 + (ea2 * 244 | 0) + 72 >> 2] = S2 + +g[r2 + (ea2 * 244 | 0) + 72 >> 2];
                        S2 = j2 * +g[r2 + (ea2 * 244 | 0) + 100 >> 2] * +g[q2 + (p2 * 152 | 0) + 68 >> 2];
                        T2 = j2 * +g[r2 + (ea2 * 244 | 0) + 104 >> 2] * +g[q2 + (p2 * 152 | 0) + 72 >> 2];
                        g[r2 + (ea2 * 244 | 0) + 80 >> 2] = j2 * +g[r2 + (ea2 * 244 | 0) + 96 >> 2] * +g[q2 + (p2 * 152 | 0) + 64 >> 2] + +g[r2 + (ea2 * 244 | 0) + 80 >> 2];
                        g[r2 + (ea2 * 244 | 0) + 84 >> 2] = S2 + +g[r2 + (ea2 * 244 | 0) + 84 >> 2];
                        g[r2 + (ea2 * 244 | 0) + 88 >> 2] = T2 + +g[r2 + (ea2 * 244 | 0) + 88 >> 2];
                      }
                      if (!n2)
                        break;
                      j2 = +g[n2 + 384 >> 2];
                      k2 = +g[q2 + (p2 * 152 | 0) + 100 >> 2];
                      if (!(c[r2 + (fa2 * 244 | 0) + 240 >> 2] | 0))
                        break;
                      T2 = +g[q2 + (p2 * 152 | 0) + 88 >> 2];
                      S2 = +g[q2 + (p2 * 152 | 0) + 84 >> 2];
                      O2 = +g[q2 + (p2 * 152 | 0) + 80 >> 2];
                      M2 = k2 * j2 * +g[q2 + (p2 * 152 | 0) + 52 >> 2] * +g[n2 + 392 >> 2] * +g[r2 + (fa2 * 244 | 0) + 116 >> 2];
                      N2 = k2 * j2 * +g[q2 + (p2 * 152 | 0) + 56 >> 2] * +g[n2 + 396 >> 2] * +g[r2 + (fa2 * 244 | 0) + 120 >> 2];
                      g[r2 + (fa2 * 244 | 0) + 64 >> 2] = +g[r2 + (fa2 * 244 | 0) + 112 >> 2] * k2 * j2 * +g[q2 + (p2 * 152 | 0) + 48 >> 2] * +g[n2 + 388 >> 2] + +g[r2 + (fa2 * 244 | 0) + 64 >> 2];
                      g[r2 + (fa2 * 244 | 0) + 68 >> 2] = M2 + +g[r2 + (fa2 * 244 | 0) + 68 >> 2];
                      g[r2 + (fa2 * 244 | 0) + 72 >> 2] = N2 + +g[r2 + (fa2 * 244 | 0) + 72 >> 2];
                      S2 = S2 * +g[r2 + (fa2 * 244 | 0) + 100 >> 2] * -k2;
                      T2 = T2 * +g[r2 + (fa2 * 244 | 0) + 104 >> 2] * -k2;
                      g[r2 + (fa2 * 244 | 0) + 80 >> 2] = +g[r2 + (fa2 * 244 | 0) + 80 >> 2] - O2 * +g[r2 + (fa2 * 244 | 0) + 96 >> 2] * -k2;
                      g[r2 + (fa2 * 244 | 0) + 84 >> 2] = +g[r2 + (fa2 * 244 | 0) + 84 >> 2] - S2;
                      g[r2 + (fa2 * 244 | 0) + 88 >> 2] = +g[r2 + (fa2 * 244 | 0) + 88 >> 2] - T2;
                    }
                  while (0);
                  do
                    if (h2 & 16 | 0) {
                      if (!(h2 & 4)) {
                        g[q2 + ((p2 + 1 | 0) * 152 | 0) + 100 >> 2] = 0;
                        break;
                      }
                      k2 = +g[ba2 + 4 + (Z2 * 192 | 0) + 132 >> 2] * +g[f2 + 60 >> 2];
                      g[q2 + ((p2 + 1 | 0) * 152 | 0) + 100 >> 2] = k2;
                      do
                        if (m2 | 0) {
                          j2 = +g[m2 + 384 >> 2];
                          if (!(c[r2 + (ea2 * 244 | 0) + 240 >> 2] | 0))
                            break;
                          T2 = k2 * j2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 20 >> 2] * +g[r2 + (ea2 * 244 | 0) + 116 >> 2];
                          S2 = k2 * j2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 24 >> 2] * +g[r2 + (ea2 * 244 | 0) + 120 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 64 >> 2] = +g[r2 + (ea2 * 244 | 0) + 112 >> 2] * k2 * j2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 16 >> 2] + +g[r2 + (ea2 * 244 | 0) + 64 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 68 >> 2] = T2 + +g[r2 + (ea2 * 244 | 0) + 68 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 72 >> 2] = S2 + +g[r2 + (ea2 * 244 | 0) + 72 >> 2];
                          S2 = k2 * +g[r2 + (ea2 * 244 | 0) + 100 >> 2] * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 68 >> 2];
                          T2 = k2 * +g[r2 + (ea2 * 244 | 0) + 104 >> 2] * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 72 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 80 >> 2] = k2 * +g[r2 + (ea2 * 244 | 0) + 96 >> 2] * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 64 >> 2] + +g[r2 + (ea2 * 244 | 0) + 80 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 84 >> 2] = S2 + +g[r2 + (ea2 * 244 | 0) + 84 >> 2];
                          g[r2 + (ea2 * 244 | 0) + 88 >> 2] = T2 + +g[r2 + (ea2 * 244 | 0) + 88 >> 2];
                        }
                      while (0);
                      if (!n2)
                        break;
                      j2 = +g[n2 + 384 >> 2];
                      k2 = +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 100 >> 2];
                      if (!(c[r2 + (fa2 * 244 | 0) + 240 >> 2] | 0))
                        break;
                      T2 = +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 88 >> 2];
                      S2 = +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 84 >> 2];
                      O2 = +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 80 >> 2];
                      M2 = k2 * j2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 52 >> 2] * +g[r2 + (fa2 * 244 | 0) + 116 >> 2];
                      N2 = k2 * j2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 56 >> 2] * +g[r2 + (fa2 * 244 | 0) + 120 >> 2];
                      g[r2 + (fa2 * 244 | 0) + 64 >> 2] = +g[r2 + (fa2 * 244 | 0) + 112 >> 2] * k2 * j2 * +g[q2 + ((p2 + 1 | 0) * 152 | 0) + 48 >> 2] + +g[r2 + (fa2 * 244 | 0) + 64 >> 2];
                      g[r2 + (fa2 * 244 | 0) + 68 >> 2] = M2 + +g[r2 + (fa2 * 244 | 0) + 68 >> 2];
                      g[r2 + (fa2 * 244 | 0) + 72 >> 2] = N2 + +g[r2 + (fa2 * 244 | 0) + 72 >> 2];
                      S2 = S2 * +g[r2 + (fa2 * 244 | 0) + 100 >> 2] * -k2;
                      T2 = T2 * +g[r2 + (fa2 * 244 | 0) + 104 >> 2] * -k2;
                      g[r2 + (fa2 * 244 | 0) + 80 >> 2] = +g[r2 + (fa2 * 244 | 0) + 80 >> 2] - O2 * +g[r2 + (fa2 * 244 | 0) + 96 >> 2] * -k2;
                      g[r2 + (fa2 * 244 | 0) + 84 >> 2] = +g[r2 + (fa2 * 244 | 0) + 84 >> 2] - S2;
                      g[r2 + (fa2 * 244 | 0) + 88 >> 2] = +g[r2 + (fa2 * 244 | 0) + 88 >> 2] - T2;
                    }
                  while (0);
                  h2 = c[ba2 + 780 >> 2] | 0;
                }
                Z2 = Z2 + 1 | 0;
              } while ((Z2 | 0) < (h2 | 0));
            }
            Y2 = Y2 + 1 | 0;
          } while ((Y2 | 0) != (e2 | 0));
          i = ja2;
          return;
        }
        function gc(b2, d2) {
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0, v2 = 0, w2 = 0, x2 = 0, y2 = 0, z2 = 0, A2 = 0, B2 = 0, C2 = 0, D2 = 0, E2 = 0, H2 = 0, I2 = 0, J2 = 0, K2 = 0, L2 = 0, M2 = 0, N2 = 0, O2 = 0, P2 = 0, Q2 = 0, R2 = 0, S2 = 0, T2 = 0, U2 = 0, V2 = 0, W2 = 0, X2 = 0, Y2 = 0, Z2 = 0, _2 = 0, $2 = 0, aa2 = 0, ba2 = 0, ca2 = 0, da2 = 0, ea2 = 0, fa2 = 0, ga2 = 0, ha2 = 0, ia2 = 0, ja2 = 0, ka2 = 0, la2 = 0, ma2 = 0, na2 = 0, oa2 = 0, pa2 = 0, qa2 = 0, ra2 = 0, sa2 = 0, ta2 = 0;
          ia2 = i;
          i = i + 240 | 0;
          e2 = c[b2 + 24 >> 2] | 0;
          if ((e2 | 0) <= 0) {
            i = ia2;
            return;
          }
          O2 = ia2 + 128 + 76 | 0;
          P2 = ia2 + 80 + 16 | 0;
          Q2 = ia2 + 80 + 32 | 0;
          N2 = 0;
          do {
            M2 = c[(c[b2 + 32 >> 2] | 0) + (N2 << 2) >> 2] | 0;
            switch (c[M2 + 216 >> 2] | 0) {
              case 2:
              case 5:
                break;
              default: {
                if (a[M2 + 964 >> 0] | 0) {
                  a[M2 + 964 >> 0] = 0;
                  f2 = c[M2 + 772 >> 2] | 0;
                  if ((f2 | 0) > 0) {
                    h2 = c[M2 + 780 >> 2] | 0;
                    e2 = 0;
                    do {
                      K2 = c[h2 + (e2 * 52 | 0) + 8 >> 2] | 0;
                      L2 = c[h2 + (e2 * 52 | 0) + 12 >> 2] | 0;
                      D2 = +g[K2 + 8 >> 2] - +g[L2 + 8 >> 2];
                      E2 = +g[K2 + 12 >> 2] - +g[L2 + 12 >> 2];
                      H2 = +g[K2 + 16 >> 2] - +g[L2 + 16 >> 2];
                      H2 = +G(+(D2 * D2 + E2 * E2 + H2 * H2));
                      g[h2 + (e2 * 52 | 0) + 16 >> 2] = H2;
                      g[h2 + (e2 * 52 | 0) + 28 >> 2] = H2 * H2;
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (f2 | 0));
                    e2 = 0;
                    do {
                      g[h2 + (e2 * 52 | 0) + 24 >> 2] = (+g[(c[h2 + (e2 * 52 | 0) + 8 >> 2] | 0) + 88 >> 2] + +g[(c[h2 + (e2 * 52 | 0) + 12 >> 2] | 0) + 88 >> 2]) / +g[(c[h2 + (e2 * 52 | 0) + 4 >> 2] | 0) + 4 >> 2];
                      e2 = e2 + 1 | 0;
                    } while ((e2 | 0) != (f2 | 0));
                  }
                  Vf(M2);
                  e2 = c[M2 + 1028 >> 2] | 0;
                  if (e2 | 0)
                    hn(M2 + 1028 | 0, e2);
                  e2 = c[M2 + 1032 >> 2] | 0;
                  if (e2 | 0) {
                    c[6325] = (c[6325] | 0) + 1;
                    Rc(c[e2 + -4 >> 2] | 0);
                  }
                  c[M2 + 1032 >> 2] = 0;
                  c[M2 + 1036 >> 2] = -1;
                  e2 = c[M2 + 1060 >> 2] | 0;
                  if (e2 | 0) {
                    if (a[M2 + 1064 >> 0] | 0) {
                      c[6325] = (c[6325] | 0) + 1;
                      Rc(c[e2 + -4 >> 2] | 0);
                    }
                    c[M2 + 1060 >> 2] = 0;
                  }
                  a[M2 + 1064 >> 0] = 1;
                  c[M2 + 1060 >> 2] = 0;
                  c[M2 + 1052 >> 2] = 0;
                  c[M2 + 1056 >> 2] = 0;
                  c[M2 + 1044 >> 2] = 0;
                  if (c[M2 + 428 >> 2] & 16 | 0)
                    Uf(M2);
                }
                m2 = +g[M2 + 408 >> 2] * d2;
                g[M2 + 492 >> 2] = m2;
                g[M2 + 496 >> 2] = 1 / m2;
                g[M2 + 500 >> 2] = m2 * 3;
                K2 = c[M2 + 192 >> 2] | 0;
                m2 = +Cb[c[(c[K2 >> 2] | 0) + 48 >> 2] & 15](K2);
                g[M2 + 504 >> 2] = m2;
                g[M2 + 508 >> 2] = m2 * 0.25;
                K2 = c[M2 + 724 >> 2] | 0;
                m2 = +g[M2 + 492 >> 2];
                j2 = +g[K2 + 40 >> 2] * m2;
                k2 = m2 * +g[K2 + 44 >> 2];
                m2 = m2 * +g[K2 + 48 >> 2];
                L2 = c[M2 + 752 >> 2] | 0;
                if ((L2 | 0) > 0) {
                  f2 = c[M2 + 760 >> 2] | 0;
                  e2 = 0;
                  do {
                    if (+g[f2 + (e2 * 104 | 0) + 88 >> 2] > 0) {
                      J2 = f2 + (e2 * 104 | 0) + 40 | 0;
                      g[J2 >> 2] = j2 + +g[J2 >> 2];
                      J2 = f2 + (e2 * 104 | 0) + 44 | 0;
                      g[J2 >> 2] = k2 + +g[J2 >> 2];
                      J2 = f2 + (e2 * 104 | 0) + 48 | 0;
                      g[J2 >> 2] = m2 + +g[J2 >> 2];
                    }
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != (L2 | 0));
                }
                E2 = +g[M2 + 348 >> 2];
                H2 = +g[M2 + 352 >> 2];
                n2 = +g[M2 + 344 >> 2] > 0 ? 1 : +g[M2 + 340 >> 2] > 0;
                if (E2 != 0 | H2 > 0) {
                  if ((L2 | 0) > 0) {
                    f2 = c[M2 + 760 >> 2] | 0;
                    k2 = +g[f2 + 8 >> 2];
                    m2 = +g[f2 + 12 >> 2];
                    o2 = +g[f2 + 16 >> 2];
                    f2 = c[M2 + 792 >> 2] | 0;
                    if ((f2 | 0) > 0) {
                      h2 = c[M2 + 800 >> 2] | 0;
                      e2 = 0;
                      j2 = 0;
                      do {
                        J2 = c[h2 + (e2 * 44 | 0) + 8 >> 2] | 0;
                        I2 = c[h2 + (e2 * 44 | 0) + 12 >> 2] | 0;
                        C2 = +g[I2 + 8 >> 2] - k2;
                        x2 = +g[I2 + 12 >> 2] - m2;
                        A2 = +g[I2 + 16 >> 2] - o2;
                        I2 = c[h2 + (e2 * 44 | 0) + 16 >> 2] | 0;
                        B2 = +g[I2 + 8 >> 2] - k2;
                        z2 = +g[I2 + 12 >> 2] - m2;
                        D2 = +g[I2 + 16 >> 2] - o2;
                        j2 = j2 + ((+g[J2 + 16 >> 2] - o2) * (C2 * z2 - x2 * B2) + ((+g[J2 + 8 >> 2] - k2) * (x2 * D2 - A2 * z2) + (+g[J2 + 12 >> 2] - m2) * (A2 * B2 - C2 * D2)));
                        e2 = e2 + 1 | 0;
                      } while ((e2 | 0) != (f2 | 0));
                    } else
                      j2 = 0;
                    j2 = j2 / 6;
                  } else
                    j2 = 0;
                  D2 = E2 * (1 / +F(+j2));
                  C2 = H2 * (+g[M2 + 516 >> 2] - j2);
                } else {
                  C2 = 0;
                  D2 = 0;
                }
                a:
                  do
                    if ((L2 | 0) > 0) {
                      if (!n2) {
                        f2 = c[M2 + 760 >> 2] | 0;
                        e2 = 0;
                        while (1) {
                          if (+g[f2 + (e2 * 104 | 0) + 88 >> 2] > 0) {
                            if (E2 != 0) {
                              z2 = D2 * +g[f2 + (e2 * 104 | 0) + 92 >> 2];
                              A2 = z2 * +g[f2 + (e2 * 104 | 0) + 76 >> 2];
                              B2 = z2 * +g[f2 + (e2 * 104 | 0) + 80 >> 2];
                              J2 = f2 + (e2 * 104 | 0) + 56 | 0;
                              g[J2 >> 2] = +g[f2 + (e2 * 104 | 0) + 72 >> 2] * z2 + +g[J2 >> 2];
                              J2 = f2 + (e2 * 104 | 0) + 60 | 0;
                              g[J2 >> 2] = A2 + +g[J2 >> 2];
                              J2 = f2 + (e2 * 104 | 0) + 64 | 0;
                              g[J2 >> 2] = B2 + +g[J2 >> 2];
                            }
                            if (H2 > 0) {
                              z2 = C2 * +g[f2 + (e2 * 104 | 0) + 92 >> 2];
                              A2 = z2 * +g[f2 + (e2 * 104 | 0) + 76 >> 2];
                              B2 = z2 * +g[f2 + (e2 * 104 | 0) + 80 >> 2];
                              J2 = f2 + (e2 * 104 | 0) + 56 | 0;
                              g[J2 >> 2] = +g[f2 + (e2 * 104 | 0) + 72 >> 2] * z2 + +g[J2 >> 2];
                              J2 = f2 + (e2 * 104 | 0) + 60 | 0;
                              g[J2 >> 2] = A2 + +g[J2 >> 2];
                              J2 = f2 + (e2 * 104 | 0) + 64 | 0;
                              g[J2 >> 2] = B2 + +g[J2 >> 2];
                            }
                          }
                          e2 = e2 + 1 | 0;
                          if ((e2 | 0) == (L2 | 0))
                            break a;
                        }
                      }
                      h2 = c[M2 + 760 >> 2] | 0;
                      f2 = 0;
                      do {
                        x2 = +g[h2 + (f2 * 104 | 0) + 88 >> 2];
                        if (x2 > 0) {
                          z2 = +g[M2 + 492 >> 2];
                          p2 = +g[M2 + 344 >> 2];
                          o2 = +g[M2 + 340 >> 2];
                          b:
                            do
                              if ((p2 > 0 | o2 > 0 ? (R2 = c[K2 >> 2] | 0, (c[M2 + 328 >> 2] | 0) < 4) : 0) ? (S2 = +g[h2 + (f2 * 104 | 0) + 40 >> 2], T2 = S2 - +g[M2 + 1252 >> 2], U2 = +g[h2 + (f2 * 104 | 0) + 44 >> 2], V2 = U2 - +g[M2 + 1256 >> 2], W2 = +g[h2 + (f2 * 104 | 0) + 48 >> 2], X2 = W2 - +g[M2 + 1260 >> 2], Y2 = +G(+(T2 * T2 + V2 * V2 + X2 * X2)), T2 * T2 + V2 * V2 + X2 * X2 > 11920928955078125e-23) : 0) {
                                v2 = T2 * (1 / Y2);
                                A2 = V2 * (1 / Y2);
                                B2 = X2 * (1 / Y2);
                                s2 = +g[h2 + (f2 * 104 | 0) + 72 >> 2];
                                t2 = +g[h2 + (f2 * 104 | 0) + 76 >> 2];
                                u2 = +g[h2 + (f2 * 104 | 0) + 80 >> 2];
                                switch (c[M2 + 328 >> 2] | 0) {
                                  case 2:
                                    break;
                                  case 1:
                                  case 3:
                                  case 0: {
                                    j2 = T2 * s2 + V2 * t2 + X2 * u2 < 0 ? -1 : 1;
                                    if (!(X2 * u2 * j2 + (T2 * s2 * j2 + V2 * t2 * j2) > 0))
                                      break b;
                                    w2 = -((c[l >> 2] = R2, +g[l >> 2]) * (T2 * T2 + V2 * V2 + X2 * X2) * (X2 * u2 * j2 + (T2 * s2 * j2 + V2 * t2 * j2)) * +g[h2 + (f2 * 104 | 0) + 92 >> 2] * 0.5);
                                    m2 = v2 * o2 * w2 + (s2 * j2 * p2 * w2 + 0);
                                    k2 = A2 * o2 * w2 + (t2 * j2 * p2 * w2 + 0);
                                    j2 = B2 * o2 * w2 + (u2 * j2 * p2 * w2 + 0);
                                    e2 = h2 + (f2 * 104 | 0) + 56 | 0;
                                    if (z2 * x2 * j2 * z2 * x2 * j2 + (z2 * x2 * m2 * z2 * x2 * m2 + z2 * x2 * k2 * z2 * x2 * k2) > S2 * S2 + U2 * U2 + W2 * W2) {
                                      B2 = 1 / +G(+(j2 * j2 + (m2 * m2 + k2 * k2)));
                                      g[e2 >> 2] = +g[e2 >> 2] - 1 / (z2 * x2) * m2 * B2 * (W2 * j2 * B2 + (S2 * m2 * B2 + U2 * k2 * B2));
                                      J2 = h2 + (f2 * 104 | 0) + 60 | 0;
                                      g[J2 >> 2] = +g[J2 >> 2] - 1 / (z2 * x2) * k2 * B2 * (W2 * j2 * B2 + (S2 * m2 * B2 + U2 * k2 * B2));
                                      J2 = h2 + (f2 * 104 | 0) + 64 | 0;
                                      g[J2 >> 2] = +g[J2 >> 2] - 1 / (z2 * x2) * j2 * B2 * (W2 * j2 * B2 + (S2 * m2 * B2 + U2 * k2 * B2));
                                      break b;
                                    } else {
                                      g[e2 >> 2] = m2 + +g[e2 >> 2];
                                      J2 = h2 + (f2 * 104 | 0) + 60 | 0;
                                      g[J2 >> 2] = k2 + +g[J2 >> 2];
                                      J2 = h2 + (f2 * 104 | 0) + 64 | 0;
                                      g[J2 >> 2] = j2 + +g[J2 >> 2];
                                      break b;
                                    }
                                  }
                                  default:
                                    break b;
                                }
                                r2 = T2 * s2 + V2 * t2 + X2 * u2 < 0 ? -1 : 1;
                                j2 = B2 * u2 * r2 + (v2 * s2 * r2 + A2 * t2 * r2);
                                k2 = +g[h2 + (f2 * 104 | 0) + 92 >> 2] * 0.5;
                                m2 = (c[l >> 2] = R2, +g[l >> 2]);
                                w2 = j2 * o2 * 0.5 * m2 * (T2 * T2 + V2 * V2 + X2 * X2) * k2;
                                if (j2 > 0 & j2 < 0.9847999811172485) {
                                  o2 = p2 * 0.5 * m2 * Y2 * k2 * +G(+(1 - j2 * j2));
                                  p2 = (B2 * (v2 * u2 * r2 - B2 * s2 * r2) - A2 * (A2 * s2 * r2 - v2 * t2 * r2)) * o2;
                                  q2 = (v2 * (A2 * s2 * r2 - v2 * t2 * r2) - B2 * (B2 * t2 * r2 - A2 * u2 * r2)) * o2;
                                  o2 = (A2 * (B2 * t2 * r2 - A2 * u2 * r2) - v2 * (v2 * u2 * r2 - B2 * s2 * r2)) * o2;
                                } else {
                                  p2 = 0;
                                  q2 = 0;
                                  o2 = 0;
                                }
                                j2 = z2 * x2 * -(B2 * w2) * z2 * x2 * -(B2 * w2) + (x2 * -(v2 * w2) * z2 * x2 * -(v2 * w2) * z2 + z2 * x2 * -(A2 * w2) * z2 * x2 * -(A2 * w2));
                                if (j2 > 0 ? j2 >= S2 * S2 + U2 * U2 + W2 * W2 : 0) {
                                  j2 = +G(+(S2 * S2 + U2 * U2 + W2 * W2)) / +G(+j2) * 0.800000011920929;
                                  m2 = j2 * -(v2 * w2);
                                  k2 = j2 * -(B2 * w2);
                                  j2 = j2 * -(A2 * w2);
                                } else {
                                  m2 = -(v2 * w2);
                                  k2 = -(B2 * w2);
                                  j2 = -(A2 * w2);
                                }
                                y2 = h2 + (f2 * 104 | 0) + 56 | 0;
                                I2 = h2 + (f2 * 104 | 0) + 60 | 0;
                                A2 = j2 + +g[I2 >> 2];
                                J2 = h2 + (f2 * 104 | 0) + 64 | 0;
                                B2 = k2 + +g[J2 >> 2];
                                g[y2 >> 2] = p2 + (m2 + +g[y2 >> 2]);
                                g[I2 >> 2] = q2 + A2;
                                g[J2 >> 2] = o2 + B2;
                              }
                            while (0);
                          if (E2 != 0) {
                            z2 = D2 * +g[h2 + (f2 * 104 | 0) + 92 >> 2];
                            A2 = z2 * +g[h2 + (f2 * 104 | 0) + 76 >> 2];
                            B2 = z2 * +g[h2 + (f2 * 104 | 0) + 80 >> 2];
                            J2 = h2 + (f2 * 104 | 0) + 56 | 0;
                            g[J2 >> 2] = +g[h2 + (f2 * 104 | 0) + 72 >> 2] * z2 + +g[J2 >> 2];
                            J2 = h2 + (f2 * 104 | 0) + 60 | 0;
                            g[J2 >> 2] = A2 + +g[J2 >> 2];
                            J2 = h2 + (f2 * 104 | 0) + 64 | 0;
                            g[J2 >> 2] = B2 + +g[J2 >> 2];
                          }
                          if (H2 > 0) {
                            z2 = C2 * +g[h2 + (f2 * 104 | 0) + 92 >> 2];
                            A2 = z2 * +g[h2 + (f2 * 104 | 0) + 76 >> 2];
                            B2 = z2 * +g[h2 + (f2 * 104 | 0) + 80 >> 2];
                            J2 = h2 + (f2 * 104 | 0) + 56 | 0;
                            g[J2 >> 2] = +g[h2 + (f2 * 104 | 0) + 72 >> 2] * z2 + +g[J2 >> 2];
                            J2 = h2 + (f2 * 104 | 0) + 60 | 0;
                            g[J2 >> 2] = A2 + +g[J2 >> 2];
                            J2 = h2 + (f2 * 104 | 0) + 64 | 0;
                            g[J2 >> 2] = B2 + +g[J2 >> 2];
                          }
                        }
                        f2 = f2 + 1 | 0;
                      } while ((f2 | 0) != (L2 | 0));
                    }
                  while (0);
                J2 = c[M2 + 792 >> 2] | 0;
                if ((J2 | 0) > 0) {
                  I2 = 0;
                  do {
                    w2 = +g[M2 + 492 >> 2];
                    r2 = +g[M2 + 344 >> 2];
                    p2 = +g[M2 + 340 >> 2];
                    c:
                      do
                        if ((r2 > 0 | p2 > 0 ? (Z2 = c[M2 + 328 >> 2] | 0, (Z2 | 0) > 3) : 0) ? (_2 = c[M2 + 800 >> 2] | 0, $2 = c[_2 + (I2 * 44 | 0) + 8 >> 2] | 0, n2 = c[_2 + (I2 * 44 | 0) + 12 >> 2] | 0, aa2 = +g[$2 + 40 >> 2], ba2 = +g[$2 + 44 >> 2], ca2 = +g[$2 + 48 >> 2], y2 = c[_2 + (I2 * 44 | 0) + 16 >> 2] | 0, da2 = c[K2 >> 2] | 0, ea2 = (aa2 + +g[n2 + 40 >> 2] + +g[y2 + 40 >> 2]) * 0.3333333432674408 - +g[M2 + 1252 >> 2], fa2 = (ba2 + +g[n2 + 44 >> 2] + +g[y2 + 44 >> 2]) * 0.3333333432674408 - +g[M2 + 1256 >> 2], ga2 = (ca2 + +g[n2 + 48 >> 2] + +g[y2 + 48 >> 2]) * 0.3333333432674408 - +g[M2 + 1260 >> 2], ha2 = +G(+(ea2 * ea2 + fa2 * fa2 + ga2 * ga2)), ea2 * ea2 + fa2 * fa2 + ga2 * ga2 > 11920928955078125e-23) : 0) {
                          t2 = ea2 * (1 / ha2);
                          v2 = fa2 * (1 / ha2);
                          x2 = ga2 * (1 / ha2);
                          q2 = +g[_2 + (I2 * 44 | 0) + 20 >> 2];
                          s2 = +g[_2 + (I2 * 44 | 0) + 24 >> 2];
                          u2 = +g[_2 + (I2 * 44 | 0) + 28 >> 2];
                          switch (Z2 | 0) {
                            case 5:
                              break;
                            case 4:
                            case 6: {
                              j2 = ea2 * q2 + fa2 * s2 + ga2 * u2 < 0 ? -1 : 1;
                              if (!(ga2 * u2 * j2 + (ea2 * q2 * j2 + fa2 * s2 * j2) > 0))
                                break c;
                              k2 = -((c[l >> 2] = da2, +g[l >> 2]) * (ea2 * ea2 + fa2 * fa2 + ga2 * ga2) * (ga2 * u2 * j2 + (ea2 * q2 * j2 + fa2 * s2 * j2)) * +g[_2 + (I2 * 44 | 0) + 36 >> 2]);
                              t2 = (t2 * p2 * k2 + (q2 * j2 * r2 * k2 + 0)) * 0.3333333432674408;
                              q2 = (v2 * p2 * k2 + (s2 * j2 * r2 * k2 + 0)) * 0.3333333432674408;
                              p2 = (x2 * p2 * k2 + (u2 * j2 * r2 * k2 + 0)) * 0.3333333432674408;
                              e2 = 0;
                              f2 = $2;
                              k2 = aa2;
                              m2 = ba2;
                              o2 = ca2;
                              while (1) {
                                j2 = w2 * +g[f2 + 88 >> 2];
                                h2 = f2 + 56 | 0;
                                if (p2 * j2 * p2 * j2 + (t2 * j2 * t2 * j2 + q2 * j2 * q2 * j2) > k2 * k2 + m2 * m2 + o2 * o2) {
                                  E2 = 1 / +G(+(p2 * p2 + (t2 * t2 + q2 * q2)));
                                  H2 = o2 * p2 * E2 + (k2 * t2 * E2 + m2 * q2 * E2);
                                  g[h2 >> 2] = +g[h2 >> 2] - 1 / j2 * t2 * E2 * H2;
                                  y2 = f2 + 60 | 0;
                                  g[y2 >> 2] = +g[y2 >> 2] - 1 / j2 * q2 * E2 * H2;
                                  y2 = f2 + 64 | 0;
                                  g[y2 >> 2] = +g[y2 >> 2] - 1 / j2 * p2 * E2 * H2;
                                } else {
                                  g[h2 >> 2] = t2 + +g[h2 >> 2];
                                  y2 = f2 + 60 | 0;
                                  g[y2 >> 2] = q2 + +g[y2 >> 2];
                                  y2 = f2 + 64 | 0;
                                  g[y2 >> 2] = p2 + +g[y2 >> 2];
                                }
                                e2 = e2 + 1 | 0;
                                if ((e2 | 0) == 3)
                                  break c;
                                y2 = c[_2 + (I2 * 44 | 0) + 8 + (e2 << 2) >> 2] | 0;
                                f2 = y2;
                                k2 = +g[y2 + 40 >> 2];
                                m2 = +g[y2 + 44 >> 2];
                                o2 = +g[y2 + 48 >> 2];
                              }
                            }
                            default:
                              break c;
                          }
                          o2 = ea2 * q2 + fa2 * s2 + ga2 * u2 < 0 ? -1 : 1;
                          j2 = x2 * u2 * o2 + (t2 * q2 * o2 + v2 * s2 * o2);
                          k2 = +g[_2 + (I2 * 44 | 0) + 36 >> 2] * 0.5;
                          m2 = (c[l >> 2] = da2, +g[l >> 2]);
                          p2 = j2 * (ea2 * ea2 + fa2 * fa2 + ga2 * ga2) * p2 * 0.5 * m2 * k2;
                          if (j2 > 0 & j2 < 0.9847999811172485) {
                            H2 = ha2 * r2 * 0.5 * m2 * k2 * +G(+(1 - j2 * j2));
                            w2 = (x2 * (t2 * u2 * o2 - x2 * q2 * o2) - v2 * (v2 * q2 * o2 - t2 * s2 * o2)) * H2 * 0.3333333432674408;
                            z2 = (v2 * (x2 * s2 * o2 - v2 * u2 * o2) - t2 * (t2 * u2 * o2 - x2 * q2 * o2)) * H2 * 0.3333333432674408;
                            s2 = (t2 * (v2 * q2 * o2 - t2 * s2 * o2) - x2 * (x2 * s2 * o2 - v2 * u2 * o2)) * H2 * 0.3333333432674408;
                          } else {
                            w2 = 0;
                            z2 = 0;
                            s2 = 0;
                          }
                          f2 = (g[l >> 2] = t2 * p2 * -0.3333333432674408, c[l >> 2] | 0);
                          h2 = (g[l >> 2] = v2 * p2 * -0.3333333432674408, c[l >> 2] | 0);
                          y2 = 0;
                          e2 = (g[l >> 2] = x2 * p2 * -0.3333333432674408, c[l >> 2] | 0);
                          n2 = $2;
                          while (1) {
                            j2 = +g[n2 + 88 >> 2];
                            if (j2 > 0) {
                              p2 = (c[l >> 2] = f2, +g[l >> 2]);
                              q2 = (c[l >> 2] = h2, +g[l >> 2]);
                              r2 = (c[l >> 2] = e2, +g[l >> 2]);
                              k2 = +g[M2 + 492 >> 2];
                              j2 = r2 * j2 * k2 * r2 * j2 * k2 + (p2 * j2 * k2 * p2 * j2 * k2 + q2 * j2 * k2 * q2 * j2 * k2);
                              k2 = +g[n2 + 40 >> 2];
                              m2 = +g[n2 + 44 >> 2];
                              o2 = +g[n2 + 48 >> 2];
                              if (j2 > 0 ? j2 >= k2 * k2 + m2 * m2 + o2 * o2 : 0) {
                                H2 = +G(+(k2 * k2 + m2 * m2 + o2 * o2)) / +G(+j2) * 0.800000011920929;
                                f2 = (g[l >> 2] = p2 * H2, c[l >> 2] | 0);
                                h2 = (g[l >> 2] = q2 * H2, c[l >> 2] | 0);
                                e2 = (g[l >> 2] = r2 * H2, c[l >> 2] | 0);
                              }
                              ka2 = n2 + 56 | 0;
                              D2 = (c[l >> 2] = f2, +g[l >> 2]) + +g[ka2 >> 2];
                              ja2 = n2 + 60 | 0;
                              E2 = (c[l >> 2] = h2, +g[l >> 2]) + +g[ja2 >> 2];
                              n2 = n2 + 64 | 0;
                              H2 = (c[l >> 2] = e2, +g[l >> 2]) + +g[n2 >> 2];
                              g[ka2 >> 2] = w2 + D2;
                              g[ja2 >> 2] = s2 + E2;
                              g[n2 >> 2] = z2 + H2;
                            }
                            n2 = y2 + 1 | 0;
                            if ((n2 | 0) == 3)
                              break c;
                            y2 = n2;
                            n2 = c[_2 + (I2 * 44 | 0) + 8 + (n2 << 2) >> 2] | 0;
                          }
                        }
                      while (0);
                    I2 = I2 + 1 | 0;
                  } while ((I2 | 0) != (J2 | 0));
                }
                if ((L2 | 0) > 0) {
                  e2 = 0;
                  do {
                    ja2 = c[M2 + 760 >> 2] | 0;
                    ka2 = ja2 + (e2 * 104 | 0) + 24 | 0;
                    K2 = ja2 + (e2 * 104 | 0) + 8 | 0;
                    c[ka2 >> 2] = c[K2 >> 2];
                    c[ka2 + 4 >> 2] = c[K2 + 4 >> 2];
                    c[ka2 + 8 >> 2] = c[K2 + 8 >> 2];
                    c[ka2 + 12 >> 2] = c[K2 + 12 >> 2];
                    ka2 = ja2 + (e2 * 104 | 0) + 56 | 0;
                    E2 = +g[ja2 + (e2 * 104 | 0) + 88 >> 2];
                    H2 = +g[M2 + 492 >> 2];
                    C2 = +g[ka2 >> 2] * E2 * H2;
                    D2 = E2 * +g[ja2 + (e2 * 104 | 0) + 60 >> 2] * H2;
                    E2 = H2 * E2 * +g[ja2 + (e2 * 104 | 0) + 64 >> 2];
                    H2 = +g[(c[M2 + 724 >> 2] | 0) + 12 >> 2] / H2;
                    C2 = C2 > H2 ? H2 : C2;
                    D2 = D2 > H2 ? H2 : D2;
                    E2 = E2 > H2 ? H2 : E2;
                    J2 = ja2 + (e2 * 104 | 0) + 40 | 0;
                    C2 = (C2 < -H2 ? -H2 : C2) + +g[J2 >> 2];
                    g[J2 >> 2] = C2;
                    J2 = ja2 + (e2 * 104 | 0) + 44 | 0;
                    D2 = (D2 < -H2 ? -H2 : D2) + +g[J2 >> 2];
                    g[J2 >> 2] = D2;
                    J2 = ja2 + (e2 * 104 | 0) + 48 | 0;
                    E2 = (E2 < -H2 ? -H2 : E2) + +g[J2 >> 2];
                    g[J2 >> 2] = E2;
                    H2 = +g[M2 + 492 >> 2];
                    g[K2 >> 2] = C2 * H2 + +g[K2 >> 2];
                    K2 = ja2 + (e2 * 104 | 0) + 12 | 0;
                    g[K2 >> 2] = H2 * D2 + +g[K2 >> 2];
                    ja2 = ja2 + (e2 * 104 | 0) + 16 | 0;
                    g[ja2 >> 2] = E2 * H2 + +g[ja2 >> 2];
                    c[ka2 >> 2] = 0;
                    c[ka2 + 4 >> 2] = 0;
                    c[ka2 + 8 >> 2] = 0;
                    c[ka2 + 12 >> 2] = 0;
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != (L2 | 0));
                }
                Mc(M2);
                e2 = c[M2 + 968 >> 2] | 0;
                if (e2) {
                  ka2 = c[M2 + 192 >> 2] | 0;
                  D2 = +Cb[c[(c[ka2 >> 2] | 0) + 48 >> 2] & 15](ka2);
                  H2 = +g[e2 + 4 >> 2] - D2;
                  E2 = +g[e2 + 8 >> 2] - D2;
                  g[M2 + 932 >> 2] = +g[e2 >> 2] - D2;
                  g[M2 + 936 >> 2] = H2;
                  g[M2 + 940 >> 2] = E2;
                  g[M2 + 944 >> 2] = 0;
                  E2 = D2 + +g[e2 + 20 >> 2];
                  H2 = D2 + +g[e2 + 24 >> 2];
                  g[M2 + 948 >> 2] = D2 + +g[e2 + 16 >> 2];
                  g[M2 + 952 >> 2] = E2;
                  g[M2 + 956 >> 2] = H2;
                  g[M2 + 960 >> 2] = 0;
                  e2 = c[M2 + 188 >> 2] | 0;
                  if (e2 | 0) {
                    ka2 = c[M2 + 724 >> 2] | 0;
                    ja2 = c[ka2 + 32 >> 2] | 0;
                    ib[c[(c[ja2 >> 2] | 0) + 16 >> 2] & 31](ja2, e2, M2 + 932 | 0, M2 + 948 | 0, c[ka2 + 36 >> 2] | 0);
                  }
                } else {
                  c[M2 + 932 >> 2] = 0;
                  c[M2 + 932 + 4 >> 2] = 0;
                  c[M2 + 932 + 8 >> 2] = 0;
                  c[M2 + 932 + 12 >> 2] = 0;
                  c[M2 + 932 + 16 >> 2] = 0;
                  c[M2 + 932 + 20 >> 2] = 0;
                  c[M2 + 932 + 24 >> 2] = 0;
                  c[M2 + 932 + 28 >> 2] = 0;
                }
                f2 = c[M2 + 752 >> 2] | 0;
                if ((f2 | 0) > 0) {
                  e2 = 0;
                  do {
                    ja2 = c[M2 + 760 >> 2] | 0;
                    E2 = +g[M2 + 504 >> 2];
                    C2 = +g[ja2 + (e2 * 104 | 0) + 8 >> 2];
                    H2 = +g[ja2 + (e2 * 104 | 0) + 12 >> 2];
                    D2 = +g[ja2 + (e2 * 104 | 0) + 16 >> 2];
                    g[ia2 >> 2] = C2 - E2;
                    g[ia2 + 4 >> 2] = H2 - E2;
                    g[ia2 + 8 >> 2] = D2 - E2;
                    g[ia2 + 12 >> 2] = 0;
                    g[ia2 + 16 >> 2] = E2 + C2;
                    g[ia2 + 20 >> 2] = E2 + H2;
                    g[ia2 + 24 >> 2] = E2 + D2;
                    g[ia2 + 28 >> 2] = 0;
                    ka2 = c[ja2 + (e2 * 104 | 0) + 96 >> 2] | 0;
                    D2 = +g[M2 + 500 >> 2];
                    E2 = D2 * +g[ja2 + (e2 * 104 | 0) + 44 >> 2];
                    H2 = D2 * +g[ja2 + (e2 * 104 | 0) + 48 >> 2];
                    g[ia2 + 128 >> 2] = +g[ja2 + (e2 * 104 | 0) + 40 >> 2] * D2;
                    g[ia2 + 128 + 4 >> 2] = E2;
                    g[ia2 + 128 + 8 >> 2] = H2;
                    g[ia2 + 128 + 12 >> 2] = 0;
                    Yg(M2 + 968 | 0, ka2, ia2, ia2 + 128 | 0, +g[M2 + 508 >> 2]) | 0;
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != (f2 | 0));
                }
                if (c[M2 + 1028 >> 2] | 0 ? (c[M2 + 792 >> 2] | 0) > 0 : 0) {
                  e2 = 0;
                  do {
                    ka2 = c[M2 + 800 >> 2] | 0;
                    K2 = c[ka2 + (e2 * 44 | 0) + 8 >> 2] | 0;
                    L2 = c[ka2 + (e2 * 44 | 0) + 12 >> 2] | 0;
                    ja2 = c[ka2 + (e2 * 44 | 0) + 16 >> 2] | 0;
                    C2 = (+g[K2 + 40 >> 2] + +g[L2 + 40 >> 2] + +g[ja2 + 40 >> 2]) * 0.3333333432674408;
                    D2 = (+g[K2 + 44 >> 2] + +g[L2 + 44 >> 2] + +g[ja2 + 44 >> 2]) * 0.3333333432674408;
                    E2 = (+g[K2 + 48 >> 2] + +g[L2 + 48 >> 2] + +g[ja2 + 48 >> 2]) * 0.3333333432674408;
                    x2 = +g[M2 + 504 >> 2];
                    u2 = +g[K2 + 8 >> 2];
                    w2 = +g[K2 + 12 >> 2];
                    A2 = +g[K2 + 16 >> 2];
                    H2 = +g[K2 + 20 >> 2];
                    B2 = +g[L2 + 8 >> 2];
                    p2 = B2 < u2 ? B2 : u2;
                    z2 = +g[L2 + 12 >> 2];
                    q2 = z2 < w2 ? z2 : w2;
                    v2 = +g[L2 + 16 >> 2];
                    r2 = v2 < A2 ? v2 : A2;
                    t2 = +g[L2 + 20 >> 2];
                    s2 = t2 < H2 ? t2 : H2;
                    u2 = u2 < B2 ? B2 : u2;
                    w2 = w2 < z2 ? z2 : w2;
                    A2 = A2 < v2 ? v2 : A2;
                    H2 = H2 < t2 ? t2 : H2;
                    t2 = +g[ja2 + 8 >> 2];
                    v2 = +g[ja2 + 12 >> 2];
                    z2 = +g[ja2 + 16 >> 2];
                    B2 = +g[ja2 + 20 >> 2];
                    g[ia2 >> 2] = (t2 < p2 ? t2 : p2) - x2;
                    g[ia2 + 4 >> 2] = (v2 < q2 ? v2 : q2) - x2;
                    g[ia2 + 8 >> 2] = (z2 < r2 ? z2 : r2) - x2;
                    g[ia2 + 12 >> 2] = B2 < s2 ? B2 : s2;
                    g[ia2 + 16 >> 2] = x2 + (u2 < t2 ? t2 : u2);
                    g[ia2 + 20 >> 2] = x2 + (w2 < v2 ? v2 : w2);
                    g[ia2 + 24 >> 2] = x2 + (A2 < z2 ? z2 : A2);
                    g[ia2 + 28 >> 2] = H2 < B2 ? B2 : H2;
                    ka2 = c[ka2 + (e2 * 44 | 0) + 40 >> 2] | 0;
                    H2 = +g[M2 + 500 >> 2];
                    g[ia2 + 128 >> 2] = C2 * H2;
                    g[ia2 + 128 + 4 >> 2] = D2 * H2;
                    g[ia2 + 128 + 8 >> 2] = E2 * H2;
                    g[ia2 + 128 + 12 >> 2] = 0;
                    Yg(M2 + 1028 | 0, ka2, ia2, ia2 + 128 | 0, +g[M2 + 508 >> 2]) | 0;
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) < (c[M2 + 792 >> 2] | 0));
                }
                do
                  if (a[M2 + 513 >> 0] | 0) {
                    y2 = c[M2 + 752 >> 2] | 0;
                    if ((y2 | 0) > 0) {
                      f2 = c[M2 + 760 >> 2] | 0;
                      h2 = c[M2 + 552 >> 2] | 0;
                      e2 = 0;
                      j2 = 0;
                      k2 = 0;
                      m2 = 0;
                      do {
                        H2 = +g[h2 + (e2 << 2) >> 2];
                        j2 = j2 + +g[f2 + (e2 * 104 | 0) + 8 >> 2] * H2;
                        k2 = k2 + H2 * +g[f2 + (e2 * 104 | 0) + 12 >> 2];
                        m2 = m2 + H2 * +g[f2 + (e2 * 104 | 0) + 16 >> 2];
                        e2 = e2 + 1 | 0;
                      } while ((e2 | 0) != (y2 | 0));
                    } else {
                      j2 = 0;
                      k2 = 0;
                      m2 = 0;
                    }
                    g[M2 + 560 >> 2] = j2;
                    g[M2 + 564 >> 2] = k2;
                    g[M2 + 568 >> 2] = m2;
                    g[M2 + 572 >> 2] = 0;
                    h2 = ia2 + 128 + 4 | 0;
                    n2 = h2 + 44 | 0;
                    do {
                      c[h2 >> 2] = 0;
                      h2 = h2 + 4 | 0;
                    } while ((h2 | 0) < (n2 | 0));
                    g[ia2 + 128 >> 2] = 11920928955078125e-23;
                    g[ia2 + 128 + 20 >> 2] = 2384185791015625e-22;
                    g[ia2 + 128 + 40 >> 2] = 35762786865234375e-23;
                    if ((y2 | 0) > 0) {
                      f2 = c[M2 + 552 >> 2] | 0;
                      h2 = c[M2 + 760 >> 2] | 0;
                      n2 = c[M2 + 532 >> 2] | 0;
                      e2 = 0;
                      o2 = 11920928955078125e-23;
                      p2 = +g[ia2 + 128 + 4 >> 2];
                      q2 = +g[ia2 + 128 + 8 >> 2];
                      r2 = +g[ia2 + 128 + 16 >> 2];
                      s2 = 2384185791015625e-22;
                      t2 = +g[ia2 + 128 + 24 >> 2];
                      u2 = 0;
                      v2 = 0;
                      w2 = 35762786865234375e-23;
                      do {
                        E2 = +g[f2 + (e2 << 2) >> 2];
                        A2 = (+g[h2 + (e2 * 104 | 0) + 8 >> 2] - j2) * E2;
                        B2 = (+g[h2 + (e2 * 104 | 0) + 12 >> 2] - k2) * E2;
                        E2 = E2 * (+g[h2 + (e2 * 104 | 0) + 16 >> 2] - m2);
                        C2 = +g[n2 + (e2 << 4) >> 2];
                        D2 = +g[n2 + (e2 << 4) + 4 >> 2];
                        H2 = +g[n2 + (e2 << 4) + 8 >> 2];
                        o2 = A2 * C2 + o2;
                        p2 = A2 * D2 + p2;
                        q2 = A2 * H2 + q2;
                        r2 = B2 * C2 + r2;
                        s2 = B2 * D2 + s2;
                        t2 = B2 * H2 + t2;
                        u2 = E2 * C2 + u2;
                        v2 = E2 * D2 + v2;
                        w2 = E2 * H2 + w2;
                        e2 = e2 + 1 | 0;
                      } while ((e2 | 0) != (y2 | 0));
                      g[ia2 + 128 >> 2] = o2;
                      g[ia2 + 128 + 4 >> 2] = p2;
                      g[ia2 + 128 + 8 >> 2] = q2;
                      g[ia2 + 128 + 16 >> 2] = r2;
                      g[ia2 + 128 + 20 >> 2] = s2;
                      g[ia2 + 128 + 24 >> 2] = t2;
                      g[ia2 + 128 + 32 >> 2] = u2;
                      g[ia2 + 128 + 36 >> 2] = v2;
                      g[ia2 + 128 + 40 >> 2] = w2;
                    }
                    if (!(a[22064] | 0)) {
                      a[22064] = 1;
                      g[5675] = 9999999747378752e-20;
                      c[5676] = 16;
                    }
                    Xc(ia2 + 128 | 0, ia2 + 80 | 0, ia2 + 32 | 0);
                    c[M2 + 576 >> 2] = c[ia2 + 80 >> 2];
                    c[M2 + 576 + 4 >> 2] = c[ia2 + 80 + 4 >> 2];
                    c[M2 + 576 + 8 >> 2] = c[ia2 + 80 + 8 >> 2];
                    c[M2 + 576 + 12 >> 2] = c[ia2 + 80 + 12 >> 2];
                    c[M2 + 592 >> 2] = c[P2 >> 2];
                    c[M2 + 592 + 4 >> 2] = c[P2 + 4 >> 2];
                    c[M2 + 592 + 8 >> 2] = c[P2 + 8 >> 2];
                    c[M2 + 592 + 12 >> 2] = c[P2 + 12 >> 2];
                    c[M2 + 608 >> 2] = c[Q2 >> 2];
                    c[M2 + 608 + 4 >> 2] = c[Q2 + 4 >> 2];
                    c[M2 + 608 + 8 >> 2] = c[Q2 + 8 >> 2];
                    c[M2 + 608 + 12 >> 2] = c[Q2 + 12 >> 2];
                    na2 = +g[ia2 + 80 >> 2];
                    w2 = +g[P2 >> 2];
                    B2 = +g[Q2 >> 2];
                    ma2 = +g[ia2 + 80 + 4 >> 2];
                    x2 = +g[ia2 + 80 + 20 >> 2];
                    D2 = +g[ia2 + 80 + 36 >> 2];
                    la2 = +g[ia2 + 80 + 8 >> 2];
                    z2 = +g[ia2 + 80 + 24 >> 2];
                    H2 = +g[ia2 + 80 + 40 >> 2];
                    p2 = +g[M2 + 672 >> 2];
                    o2 = +g[M2 + 676 >> 2];
                    m2 = +g[M2 + 680 >> 2];
                    ta2 = +g[M2 + 688 >> 2];
                    sa2 = +g[M2 + 692 >> 2];
                    q2 = +g[M2 + 696 >> 2];
                    C2 = +g[M2 + 704 >> 2];
                    E2 = +g[M2 + 708 >> 2];
                    u2 = +g[M2 + 712 >> 2];
                    ra2 = +g[ia2 + 128 >> 2];
                    qa2 = +g[ia2 + 128 + 16 >> 2];
                    r2 = +g[ia2 + 128 + 32 >> 2];
                    j2 = (na2 * p2 + ma2 * o2 + la2 * m2) * ra2 + (w2 * p2 + x2 * o2 + z2 * m2) * qa2 + (B2 * p2 + D2 * o2 + H2 * m2) * r2;
                    pa2 = +g[ia2 + 128 + 4 >> 2];
                    oa2 = +g[ia2 + 128 + 20 >> 2];
                    s2 = +g[ia2 + 128 + 36 >> 2];
                    k2 = (na2 * p2 + ma2 * o2 + la2 * m2) * pa2 + (w2 * p2 + x2 * o2 + z2 * m2) * oa2 + (B2 * p2 + D2 * o2 + H2 * m2) * s2;
                    v2 = +g[ia2 + 128 + 8 >> 2];
                    A2 = +g[ia2 + 128 + 24 >> 2];
                    t2 = +g[ia2 + 128 + 40 >> 2];
                    m2 = (na2 * p2 + ma2 * o2 + la2 * m2) * v2 + (w2 * p2 + x2 * o2 + z2 * m2) * A2 + (B2 * p2 + D2 * o2 + H2 * m2) * t2;
                    o2 = (na2 * ta2 + ma2 * sa2 + la2 * q2) * ra2 + (w2 * ta2 + x2 * sa2 + z2 * q2) * qa2 + (B2 * ta2 + D2 * sa2 + H2 * q2) * r2;
                    p2 = (na2 * ta2 + ma2 * sa2 + la2 * q2) * pa2 + (w2 * ta2 + x2 * sa2 + z2 * q2) * oa2 + (B2 * ta2 + D2 * sa2 + H2 * q2) * s2;
                    q2 = (na2 * ta2 + ma2 * sa2 + la2 * q2) * v2 + (w2 * ta2 + x2 * sa2 + z2 * q2) * A2 + (B2 * ta2 + D2 * sa2 + H2 * q2) * t2;
                    r2 = ra2 * (na2 * C2 + ma2 * E2 + la2 * u2) + qa2 * (w2 * C2 + x2 * E2 + z2 * u2) + (B2 * C2 + D2 * E2 + H2 * u2) * r2;
                    s2 = (na2 * C2 + ma2 * E2 + la2 * u2) * pa2 + (w2 * C2 + x2 * E2 + z2 * u2) * oa2 + (B2 * C2 + D2 * E2 + H2 * u2) * s2;
                    t2 = (na2 * C2 + ma2 * E2 + la2 * u2) * v2 + (w2 * C2 + x2 * E2 + z2 * u2) * A2 + (B2 * C2 + D2 * E2 + H2 * u2) * t2;
                    g[M2 + 624 >> 2] = j2;
                    g[M2 + 628 >> 2] = k2;
                    g[M2 + 632 >> 2] = m2;
                    g[M2 + 636 >> 2] = 0;
                    g[M2 + 640 >> 2] = o2;
                    g[M2 + 644 >> 2] = p2;
                    g[M2 + 648 >> 2] = q2;
                    g[M2 + 652 >> 2] = 0;
                    g[M2 + 656 >> 2] = r2;
                    g[M2 + 660 >> 2] = s2;
                    g[M2 + 664 >> 2] = t2;
                    g[M2 + 668 >> 2] = 0;
                    u2 = +g[M2 + 404 >> 2];
                    if (u2 > 1) {
                      ta2 = 1 / (m2 * (s2 * o2 - p2 * r2) + (j2 * (p2 * t2 - q2 * s2) + k2 * (q2 * r2 - t2 * o2))) < 1 ? 1 : u2 < 1 / (m2 * (s2 * o2 - p2 * r2) + (j2 * (p2 * t2 - q2 * s2) + k2 * (q2 * r2 - t2 * o2))) ? u2 : 1 / (m2 * (s2 * o2 - p2 * r2) + (j2 * (p2 * t2 - q2 * s2) + k2 * (q2 * r2 - t2 * o2)));
                      g[M2 + 624 >> 2] = j2 * ta2;
                      g[M2 + 628 >> 2] = k2 * ta2;
                      g[M2 + 632 >> 2] = m2 * ta2;
                      g[M2 + 636 >> 2] = 0;
                      g[M2 + 640 >> 2] = o2 * ta2;
                      g[M2 + 644 >> 2] = p2 * ta2;
                      g[M2 + 648 >> 2] = q2 * ta2;
                      g[M2 + 652 >> 2] = 0;
                      g[M2 + 656 >> 2] = r2 * ta2;
                      g[M2 + 660 >> 2] = s2 * ta2;
                      g[M2 + 664 >> 2] = ta2 * t2;
                      g[M2 + 668 >> 2] = 0;
                    }
                    if (a[M2 + 513 >> 0] | 0 ? +g[M2 + 360 >> 2] > 0 : 0) {
                      j2 = +g[M2 + 576 >> 2];
                      p2 = +g[M2 + 580 >> 2];
                      q2 = +g[M2 + 584 >> 2];
                      r2 = +g[M2 + 592 >> 2];
                      s2 = +g[M2 + 596 >> 2];
                      t2 = +g[M2 + 600 >> 2];
                      k2 = +g[M2 + 608 >> 2];
                      m2 = +g[M2 + 612 >> 2];
                      o2 = +g[M2 + 616 >> 2];
                      f2 = c[M2 + 752 >> 2] | 0;
                      if ((f2 | 0) <= 0)
                        break;
                      e2 = 0;
                      do {
                        h2 = c[M2 + 760 >> 2] | 0;
                        if (+g[h2 + (e2 * 104 | 0) + 88 >> 2] > 0) {
                          L2 = c[M2 + 532 >> 2] | 0;
                          oa2 = +g[L2 + (e2 << 4) >> 2];
                          pa2 = +g[L2 + (e2 << 4) + 4 >> 2];
                          qa2 = +g[L2 + (e2 << 4) + 8 >> 2];
                          na2 = +g[M2 + 360 >> 2];
                          L2 = h2 + (e2 * 104 | 0) + 8 | 0;
                          ra2 = +g[L2 >> 2];
                          ja2 = h2 + (e2 * 104 | 0) + 12 | 0;
                          sa2 = +g[ja2 >> 2];
                          ka2 = h2 + (e2 * 104 | 0) + 16 | 0;
                          ta2 = +g[ka2 >> 2];
                          sa2 = sa2 + na2 * (r2 * oa2 + s2 * pa2 + t2 * qa2 + +g[M2 + 564 >> 2] - sa2);
                          ta2 = ta2 + na2 * (k2 * oa2 + m2 * pa2 + o2 * qa2 + +g[M2 + 568 >> 2] - ta2);
                          g[L2 >> 2] = ra2 + na2 * (+g[M2 + 560 >> 2] + (j2 * oa2 + p2 * pa2 + q2 * qa2) - ra2);
                          g[ja2 >> 2] = sa2;
                          g[ka2 >> 2] = ta2;
                          g[h2 + (e2 * 104 | 0) + 20 >> 2] = 0;
                        }
                        e2 = e2 + 1 | 0;
                      } while ((e2 | 0) != (f2 | 0));
                    }
                  }
                while (0);
                h2 = ia2 + 128 | 0;
                n2 = h2 + 104 | 0;
                do {
                  c[h2 >> 2] = 0;
                  h2 = h2 + 4 | 0;
                } while ((h2 | 0) < (n2 | 0));
                e2 = c[M2 + 852 >> 2] | 0;
                if ((e2 | 0) < 0) {
                  if ((c[M2 + 856 >> 2] | 0) < 0) {
                    f2 = c[M2 + 860 >> 2] | 0;
                    if (f2 | 0) {
                      if (a[M2 + 864 >> 0] | 0) {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[f2 + -4 >> 2] | 0);
                      }
                      c[M2 + 860 >> 2] = 0;
                    }
                    a[M2 + 864 >> 0] = 1;
                    c[M2 + 860 >> 2] = 0;
                    c[M2 + 856 >> 2] = 0;
                  }
                  do {
                    ka2 = c[M2 + 860 >> 2] | 0;
                    ja2 = ka2 + (e2 * 104 | 0) | 0;
                    c[ja2 >> 2] = c[ia2 + 128 >> 2];
                    c[ja2 + 4 >> 2] = c[ia2 + 128 + 4 >> 2];
                    c[ja2 + 8 >> 2] = c[ia2 + 128 + 8 >> 2];
                    c[ja2 + 12 >> 2] = c[ia2 + 128 + 12 >> 2];
                    c[ja2 + 16 >> 2] = c[ia2 + 128 + 16 >> 2];
                    c[ja2 + 20 >> 2] = c[ia2 + 128 + 20 >> 2];
                    c[ja2 + 24 >> 2] = c[ia2 + 128 + 24 >> 2];
                    ja2 = ka2 + (e2 * 104 | 0) + 28 | 0;
                    c[ja2 >> 2] = c[ia2 + 128 + 28 >> 2];
                    c[ja2 + 4 >> 2] = c[ia2 + 128 + 28 + 4 >> 2];
                    c[ja2 + 8 >> 2] = c[ia2 + 128 + 28 + 8 >> 2];
                    c[ja2 + 12 >> 2] = c[ia2 + 128 + 28 + 12 >> 2];
                    ja2 = ka2 + (e2 * 104 | 0) + 44 | 0;
                    c[ja2 >> 2] = c[ia2 + 128 + 44 >> 2];
                    c[ja2 + 4 >> 2] = c[ia2 + 128 + 44 + 4 >> 2];
                    c[ja2 + 8 >> 2] = c[ia2 + 128 + 44 + 8 >> 2];
                    c[ja2 + 12 >> 2] = c[ia2 + 128 + 44 + 12 >> 2];
                    ja2 = ka2 + (e2 * 104 | 0) + 60 | 0;
                    c[ja2 >> 2] = c[ia2 + 128 + 60 >> 2];
                    c[ja2 + 4 >> 2] = c[ia2 + 128 + 60 + 4 >> 2];
                    c[ja2 + 8 >> 2] = c[ia2 + 128 + 60 + 8 >> 2];
                    c[ja2 + 12 >> 2] = c[ia2 + 128 + 60 + 12 >> 2];
                    ka2 = ka2 + (e2 * 104 | 0) + 76 | 0;
                    c[ka2 >> 2] = c[O2 >> 2];
                    c[ka2 + 4 >> 2] = c[O2 + 4 >> 2];
                    c[ka2 + 8 >> 2] = c[O2 + 8 >> 2];
                    c[ka2 + 12 >> 2] = c[O2 + 12 >> 2];
                    c[ka2 + 16 >> 2] = c[O2 + 16 >> 2];
                    c[ka2 + 20 >> 2] = c[O2 + 20 >> 2];
                    c[ka2 + 24 >> 2] = c[O2 + 24 >> 2];
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != 0);
                }
                c[M2 + 852 >> 2] = 0;
                h2 = ia2 + 128 | 0;
                n2 = h2 + 56 | 0;
                do {
                  c[h2 >> 2] = 0;
                  h2 = h2 + 4 | 0;
                } while ((h2 | 0) < (n2 | 0));
                e2 = c[M2 + 872 >> 2] | 0;
                if ((e2 | 0) < 0) {
                  if ((c[M2 + 876 >> 2] | 0) < 0) {
                    f2 = c[M2 + 880 >> 2] | 0;
                    if (f2 | 0) {
                      if (a[M2 + 884 >> 0] | 0) {
                        c[6325] = (c[6325] | 0) + 1;
                        Rc(c[f2 + -4 >> 2] | 0);
                      }
                      c[M2 + 880 >> 2] = 0;
                    }
                    a[M2 + 884 >> 0] = 1;
                    c[M2 + 880 >> 2] = 0;
                    c[M2 + 876 >> 2] = 0;
                  }
                  do {
                    h2 = (c[M2 + 880 >> 2] | 0) + (e2 * 56 | 0) | 0;
                    f2 = ia2 + 128 | 0;
                    n2 = h2 + 56 | 0;
                    do {
                      c[h2 >> 2] = c[f2 >> 2];
                      h2 = h2 + 4 | 0;
                      f2 = f2 + 4 | 0;
                    } while ((h2 | 0) < (n2 | 0));
                    e2 = e2 + 1 | 0;
                  } while ((e2 | 0) != 0);
                }
                c[M2 + 872 >> 2] = 0;
                Yf(M2 + 968 | 0, 1);
                Yf(M2 + 1028 | 0, 1);
                Yf(M2 + 1088 | 0, 1);
                e2 = c[b2 + 24 >> 2] | 0;
              }
            }
            N2 = N2 + 1 | 0;
          } while ((N2 | 0) < (e2 | 0));
          i = ia2;
          return;
        }
        function mj() {
          var b2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(223) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          c[b2 >> 2] = 4564;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          a[b2 + 60 >> 0] = 1;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          a[b2 + 80 >> 0] = 1;
          c[b2 + 76 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 72 >> 2] = 0;
          a[b2 + 100 >> 0] = 1;
          c[b2 + 96 >> 2] = 0;
          c[b2 + 88 >> 2] = 0;
          c[b2 + 92 >> 2] = 0;
          a[b2 + 120 >> 0] = 1;
          c[b2 + 116 >> 2] = 0;
          c[b2 + 108 >> 2] = 0;
          c[b2 + 112 >> 2] = 0;
          a[b2 + 140 >> 0] = 1;
          c[b2 + 136 >> 2] = 0;
          c[b2 + 128 >> 2] = 0;
          c[b2 + 132 >> 2] = 0;
          a[b2 + 160 >> 0] = 1;
          c[b2 + 156 >> 2] = 0;
          c[b2 + 148 >> 2] = 0;
          c[b2 + 152 >> 2] = 0;
          a[b2 + 180 >> 0] = 1;
          c[b2 + 176 >> 2] = 0;
          c[b2 + 168 >> 2] = 0;
          c[b2 + 172 >> 2] = 0;
          c[b2 + 192 >> 2] = 13;
          c[b2 + 196 >> 2] = 14;
          c[b2 + 200 >> 2] = 0;
          return b2 | 0;
        }
        function nj(a2, b2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          e2 = e2 | 0;
          Zg(a2, b2, e2) | 0;
          c[b2 + 276 >> 2] = c[a2 + 1316 >> 2];
          c[b2 + 324 >> 2] = c[a2 + 1364 >> 2];
          c[b2 + 252 >> 2] = d[a2 + 1309 >> 0];
          c[b2 + 300 >> 2] = c[a2 + 1340 >> 2];
          c[b2 + 280 >> 2] = c[a2 + 1320 >> 2];
          c[b2 + 328 >> 2] = c[a2 + 1368 >> 2];
          c[b2 + 256 >> 2] = d[a2 + 1310 >> 0];
          c[b2 + 304 >> 2] = c[a2 + 1344 >> 2];
          c[b2 + 284 >> 2] = c[a2 + 1324 >> 2];
          c[b2 + 332 >> 2] = c[a2 + 1372 >> 2];
          c[b2 + 260 >> 2] = d[a2 + 1311 >> 0];
          c[b2 + 308 >> 2] = c[a2 + 1348 >> 2];
          c[b2 + 288 >> 2] = c[a2 + 1328 >> 2];
          c[b2 + 336 >> 2] = c[a2 + 1376 >> 2];
          c[b2 + 264 >> 2] = d[a2 + 1312 >> 0];
          c[b2 + 312 >> 2] = c[a2 + 1352 >> 2];
          c[b2 + 292 >> 2] = c[a2 + 1332 >> 2];
          c[b2 + 340 >> 2] = c[a2 + 1380 >> 2];
          c[b2 + 268 >> 2] = d[a2 + 1313 >> 0];
          c[b2 + 316 >> 2] = c[a2 + 1356 >> 2];
          c[b2 + 296 >> 2] = c[a2 + 1336 >> 2];
          c[b2 + 344 >> 2] = c[a2 + 1384 >> 2];
          c[b2 + 272 >> 2] = d[a2 + 1314 >> 0];
          c[b2 + 320 >> 2] = c[a2 + 1360 >> 2];
          return 12055;
        }
        function oj(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0, s2 = 0, t2 = 0, u2 = 0;
          i2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          m2 = i2 + +g[a2 + 32 >> 2];
          k2 = i2 + +g[a2 + 36 >> 2];
          i2 = i2 + +g[a2 + 40 >> 2];
          u2 = +F(+ +g[b2 >> 2]);
          t2 = +F(+ +g[b2 + 4 >> 2]);
          s2 = +F(+ +g[b2 + 8 >> 2]);
          q2 = +F(+ +g[b2 + 16 >> 2]);
          p2 = +F(+ +g[b2 + 20 >> 2]);
          o2 = +F(+ +g[b2 + 24 >> 2]);
          l2 = +F(+ +g[b2 + 32 >> 2]);
          j2 = +F(+ +g[b2 + 36 >> 2]);
          h2 = +F(+ +g[b2 + 40 >> 2]);
          r2 = +g[b2 + 48 >> 2];
          n2 = +g[b2 + 52 >> 2];
          f2 = +g[b2 + 56 >> 2];
          g[d2 >> 2] = r2 - (m2 * u2 + k2 * t2 + i2 * s2);
          g[d2 + 4 >> 2] = n2 - (m2 * q2 + k2 * p2 + i2 * o2);
          g[d2 + 8 >> 2] = f2 - (m2 * l2 + k2 * j2 + i2 * h2);
          g[d2 + 12 >> 2] = 0;
          g[e2 >> 2] = m2 * u2 + k2 * t2 + i2 * s2 + r2;
          g[e2 + 4 >> 2] = m2 * q2 + k2 * p2 + i2 * o2 + n2;
          g[e2 + 8 >> 2] = m2 * l2 + k2 * j2 + i2 * h2 + f2;
          g[e2 + 12 >> 2] = 0;
          return;
        }
        function pj(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 5072;
          if (c[b2 + 108 >> 2] | 0) {
            d2 = c[b2 + 112 >> 2] | 0;
            kb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 112 >> 2] | 0;
            if (d2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            d2 = c[b2 + 108 >> 2] | 0;
            kb[c[c[d2 >> 2] >> 2] & 255](d2);
            d2 = c[b2 + 108 >> 2] | 0;
            if (d2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
          }
          d2 = c[b2 + 88 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 84 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 80 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 60 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          if (!(a[b2 + 100 >> 0] | 0))
            return;
          d2 = c[b2 + 92 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 92 >> 2] | 0;
          if (!d2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          return;
        }
        function qj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          while (1) {
            i2 = c[a2 + 12 >> 2] | 0;
            k2 = c[i2 + (((b2 + d2 | 0) / 2 | 0) << 3) >> 2] | 0;
            f2 = d2;
            e2 = b2;
            while (1) {
              while (1) {
                j2 = e2 + 1 | 0;
                if ((c[i2 + (e2 << 3) >> 2] | 0) < (k2 | 0))
                  e2 = j2;
                else
                  break;
              }
              while (1) {
                g2 = i2 + (f2 << 3) | 0;
                h2 = f2 + -1 | 0;
                if ((k2 | 0) < (c[g2 >> 2] | 0))
                  f2 = h2;
                else
                  break;
              }
              if ((e2 | 0) <= (f2 | 0)) {
                l2 = i2 + (e2 << 3) | 0;
                i2 = c[l2 >> 2] | 0;
                e2 = c[l2 + 4 >> 2] | 0;
                m2 = c[g2 + 4 >> 2] | 0;
                c[l2 >> 2] = c[g2 >> 2];
                c[l2 + 4 >> 2] = m2;
                f2 = (c[a2 + 12 >> 2] | 0) + (f2 << 3) | 0;
                c[f2 >> 2] = i2;
                c[f2 + 4 >> 2] = e2;
                f2 = h2;
                e2 = j2;
              }
              if ((e2 | 0) > (f2 | 0))
                break;
              i2 = c[a2 + 12 >> 2] | 0;
            }
            if ((f2 | 0) > (b2 | 0))
              qj(a2, b2, f2);
            if ((e2 | 0) < (d2 | 0))
              b2 = e2;
            else
              break;
          }
          return;
        }
        function rj(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          e2 = c[b2 + 72 >> 2] | 0;
          if (!e2)
            return;
          f2 = c[d2 + 4 >> 2] | 0;
          if ((f2 | 0) == (c[d2 + 8 >> 2] | 0) ? (h2 = f2 | 0 ? f2 << 1 : 1, (f2 | 0) < (h2 | 0)) : 0) {
            if (!h2)
              e2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              e2 = ic((h2 << 2 | 3) + 16 | 0) | 0;
              if (!e2)
                e2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                e2 = e2 + 4 + 15 & -16;
              }
              f2 = c[d2 + 4 >> 2] | 0;
            }
            if ((f2 | 0) > 0) {
              g2 = 0;
              do {
                c[e2 + (g2 << 2) >> 2] = c[(c[d2 + 12 >> 2] | 0) + (g2 << 2) >> 2];
                g2 = g2 + 1 | 0;
              } while ((g2 | 0) != (f2 | 0));
            }
            g2 = c[d2 + 12 >> 2] | 0;
            if (g2) {
              if (a[d2 + 16 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[g2 + -4 >> 2] | 0);
                f2 = c[d2 + 4 >> 2] | 0;
              }
              c[d2 + 12 >> 2] = 0;
            }
            a[d2 + 16 >> 0] = 1;
            c[d2 + 12 >> 2] = e2;
            c[d2 + 8 >> 2] = h2;
            e2 = c[b2 + 72 >> 2] | 0;
          }
          c[(c[d2 + 12 >> 2] | 0) + (f2 << 2) >> 2] = e2;
          c[d2 + 4 >> 2] = f2 + 1;
          return;
        }
        function sj(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(379) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          Fj(e2, 3, b2);
          c[e2 >> 2] = 4508;
          l2 = e2 + 300 | 0;
          c[l2 >> 2] = c[d2 >> 2];
          c[l2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[l2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[l2 + 12 >> 2] = c[d2 + 12 >> 2];
          k2 = +g[d2 >> 2];
          j2 = +g[d2 + 4 >> 2];
          i2 = +g[d2 + 8 >> 2];
          h2 = k2 * +g[b2 + 20 >> 2] + j2 * +g[b2 + 24 >> 2] + i2 * +g[b2 + 28 >> 2] + +g[b2 + 56 >> 2];
          f2 = k2 * +g[b2 + 36 >> 2] + j2 * +g[b2 + 40 >> 2] + i2 * +g[b2 + 44 >> 2] + +g[b2 + 60 >> 2];
          g[e2 + 316 >> 2] = k2 * +g[b2 + 4 >> 2] + j2 * +g[b2 + 8 >> 2] + i2 * +g[b2 + 12 >> 2] + +g[b2 + 52 >> 2];
          g[e2 + 320 >> 2] = h2;
          g[e2 + 324 >> 2] = f2;
          g[e2 + 328 >> 2] = 0;
          c[e2 + 332 >> 2] = 0;
          a[e2 + 344 >> 0] = 0;
          g[e2 + 348 >> 2] = 0.30000001192092896;
          g[e2 + 352 >> 2] = 1;
          g[e2 + 356 >> 2] = 0;
          return e2 | 0;
        }
        function tj(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          e2 = +e2;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
          j2 = +I(+d2);
          i2 = +J(+d2);
          f2 = c[b2 + 444 >> 2] | 0;
          k2 = +F(+j2) > 11920928955078125e-23;
          d2 = (c[l >> 2] = f2, +g[l >> 2]);
          if (k2) {
            m2 = +g[b2 + 448 >> 2];
            m2 = +G(+((i2 * i2 / (j2 * j2) + 1) / (1 / (m2 * m2) + i2 * i2 / (j2 * j2) / (d2 * d2))));
            d2 = i2 * i2;
            h2 = j2 * j2;
            f2 = (g[l >> 2] = m2, c[l >> 2] | 0);
          } else {
            d2 = i2 * i2;
            h2 = j2 * j2;
          }
          m2 = +G(+(h2 + 0 + d2));
          n2 = (c[l >> 2] = f2, +g[l >> 2]) * 0.5;
          m2 = +J(+n2) / m2;
          n2 = +I(+n2);
          o2 = n2 * e2 + j2 * m2 * 0 - i2 * m2 * -0;
          h2 = n2 * 0 - i2 * m2 * e2 - m2 * 0 * 0;
          d2 = n2 * 0 + m2 * 0 * 0 - j2 * m2 * e2;
          e2 = -(m2 * 0 * e2) - j2 * m2 * 0 - i2 * m2 * -0;
          g[a2 >> 2] = i2 * m2 * h2 + (n2 * o2 + e2 * -(m2 * 0)) - d2 * -(j2 * m2);
          g[a2 + 4 >> 2] = d2 * -(m2 * 0) + (n2 * h2 + e2 * -(j2 * m2)) - i2 * m2 * o2;
          g[a2 + 8 >> 2] = o2 * -(j2 * m2) + (i2 * m2 * e2 + n2 * d2) - h2 * -(m2 * 0);
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function uj(a2, d2, f2, h2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          i2 = c[a2 + 108 >> 2] | 0;
          if (i2 | 0) {
            Yb[c[(c[i2 >> 2] | 0) + 28 >> 2] & 127](i2, d2, f2, h2);
            return;
          }
          i2 = b[a2 + 56 >> 1] | 0;
          if ((i2 & 65535) << 1 >>> 0 <= 1)
            return;
          m2 = 1;
          k2 = 1;
          do {
            j2 = c[a2 + 68 >> 2] | 0;
            if (b[j2 + (k2 << 2) >> 1] & 1) {
              l2 = c[a2 + 60 >> 2] | 0;
              k2 = e[j2 + (k2 << 2) + 2 >> 1] | 0;
              if (!(+g[d2 >> 2] > +g[l2 + (k2 << 6) + 32 >> 2]) ? !(+g[f2 >> 2] < +g[l2 + (k2 << 6) + 16 >> 2]) : 0)
                j2 = 1;
              else
                j2 = 0;
              if (!(!(+g[d2 + 8 >> 2] > +g[l2 + (k2 << 6) + 40 >> 2]) ? !(+g[f2 + 8 >> 2] < +g[l2 + (k2 << 6) + 24 >> 2]) : 0))
                j2 = 0;
              if (!(+g[d2 + 4 >> 2] > +g[l2 + (k2 << 6) + 36 >> 2]) ? !(+g[f2 + 4 >> 2] < +g[l2 + (k2 << 6) + 20 >> 2] | j2 ^ 1) : 0) {
                Jb[c[(c[h2 >> 2] | 0) + 8 >> 2] & 31](h2, l2 + (k2 << 6) | 0) | 0;
                i2 = b[a2 + 56 >> 1] | 0;
              }
            }
            m2 = m2 + 1 << 16 >> 16;
            k2 = m2 & 65535;
          } while (k2 >>> 0 < ((i2 & 65535) << 1 | 1) >>> 0);
          return;
        }
        function vj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0;
          f2 = c[a2 + 772 >> 2] | 0;
          if ((f2 | 0) <= 0)
            return;
          e2 = c[a2 + 780 >> 2] | 0;
          a2 = 0;
          do {
            d2 = +g[e2 + (a2 * 52 | 0) + 24 >> 2];
            if (d2 > 0 ? (h2 = c[e2 + (a2 * 52 | 0) + 8 >> 2] | 0, i2 = c[e2 + (a2 * 52 | 0) + 12 >> 2] | 0, j2 = +g[h2 + 8 >> 2], k2 = +g[i2 + 8 >> 2] - j2, l2 = +g[h2 + 12 >> 2], m2 = +g[i2 + 12 >> 2] - l2, n2 = +g[h2 + 16 >> 2], o2 = +g[i2 + 16 >> 2] - n2, p2 = +g[e2 + (a2 * 52 | 0) + 28 >> 2], p2 + (k2 * k2 + m2 * m2 + o2 * o2) > 11920928955078125e-23) : 0) {
              d2 = (p2 - (k2 * k2 + m2 * m2 + o2 * o2)) / (d2 * (p2 + (k2 * k2 + m2 * m2 + o2 * o2))) * b2;
              q2 = d2 * +g[h2 + 88 >> 2];
              g[h2 + 8 >> 2] = j2 - k2 * q2;
              g[h2 + 12 >> 2] = l2 - m2 * q2;
              g[h2 + 16 >> 2] = n2 - o2 * q2;
              d2 = d2 * +g[i2 + 88 >> 2];
              g[i2 + 8 >> 2] = +g[i2 + 8 >> 2] + k2 * d2;
              g[i2 + 12 >> 2] = m2 * d2 + +g[i2 + 12 >> 2];
              g[i2 + 16 >> 2] = o2 * d2 + +g[i2 + 16 >> 2];
            }
            a2 = a2 + 1 | 0;
          } while ((a2 | 0) != (f2 | 0));
          return;
        }
        function wj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          e2 = i;
          i = i + 96 | 0;
          c[e2 + 32 >> 2] = 1065353216;
          c[e2 + 32 + 4 >> 2] = 0;
          c[e2 + 32 + 4 + 4 >> 2] = 0;
          c[e2 + 32 + 4 + 8 >> 2] = 0;
          c[e2 + 32 + 4 + 12 >> 2] = 0;
          c[e2 + 32 + 20 >> 2] = 1065353216;
          c[e2 + 32 + 24 >> 2] = 0;
          c[e2 + 32 + 24 + 4 >> 2] = 0;
          c[e2 + 32 + 24 + 8 >> 2] = 0;
          c[e2 + 32 + 24 + 12 >> 2] = 0;
          c[e2 + 32 + 40 >> 2] = 1065353216;
          n2 = e2 + 32 + 44 | 0;
          c[n2 >> 2] = 0;
          c[n2 + 4 >> 2] = 0;
          c[n2 + 8 >> 2] = 0;
          c[n2 + 12 >> 2] = 0;
          c[n2 + 16 >> 2] = 0;
          Yb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
          l2 = +g[e2 >> 2];
          m2 = +g[e2 + 16 >> 2];
          j2 = +g[e2 + 4 >> 2];
          k2 = +g[e2 + 16 + 4 >> 2];
          f2 = +g[e2 + 8 >> 2];
          h2 = +g[e2 + 16 + 8 >> 2];
          g[d2 >> 2] = +G(+((l2 - m2) * (l2 - m2) + (j2 - k2) * (j2 - k2) + (f2 - h2) * (f2 - h2))) * 0.5;
          g[b2 >> 2] = (m2 + l2) * 0.5;
          g[b2 + 4 >> 2] = (k2 + j2) * 0.5;
          g[b2 + 8 >> 2] = (h2 + f2) * 0.5;
          g[b2 + 12 >> 2] = 0;
          i = e2;
          return;
        }
        function xj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          c[a2 + 4 >> 2] = c[b2 + 24 >> 2];
          e2 = c[b2 >> 2] | 0;
          c[a2 + 8 >> 2] = e2;
          if (d2) {
            c[a2 + 52 >> 2] = c[b2 + 8 >> 2];
            c[a2 + 52 + 4 >> 2] = c[b2 + 8 + 4 >> 2];
            c[a2 + 52 + 8 >> 2] = c[b2 + 8 + 8 >> 2];
            c[a2 + 52 + 12 >> 2] = c[b2 + 8 + 12 >> 2];
          } else {
            k2 = +g[b2 + 8 >> 2];
            j2 = +g[b2 + 12 >> 2];
            i2 = +g[b2 + 16 >> 2];
            h2 = +g[e2 + 20 >> 2] * k2 + +g[e2 + 24 >> 2] * j2 + +g[e2 + 28 >> 2] * i2;
            f2 = +g[e2 + 36 >> 2] * k2 + +g[e2 + 40 >> 2] * j2 + +g[e2 + 44 >> 2] * i2;
            g[a2 + 52 >> 2] = +g[e2 + 4 >> 2] * k2 + +g[e2 + 8 >> 2] * j2 + +g[e2 + 12 >> 2] * i2;
            g[a2 + 56 >> 2] = h2;
            g[a2 + 60 >> 2] = f2;
            g[a2 + 64 >> 2] = 0;
          }
          k2 = +g[b2 + 24 >> 2];
          g[a2 + 68 >> 2] = (1 - k2) * +g[a2 + 20 >> 2] + +g[a2 + 36 >> 2] * k2;
          g[a2 + 72 >> 2] = (1 - k2) * +g[a2 + 24 >> 2] + +g[a2 + 40 >> 2] * k2;
          g[a2 + 76 >> 2] = (1 - k2) * +g[a2 + 28 >> 2] + +g[a2 + 44 >> 2] * k2;
          return + +g[b2 + 24 >> 2];
        }
        function yj(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          h2 = +g[b2 >> 2];
          i2 = +g[b2 + 16 >> 2];
          j2 = h2 < i2 ? h2 : i2;
          f2 = +g[b2 + 32 >> 2];
          if ((j2 < f2 ? j2 : f2) > +g[a2 + 24 >> 2])
            return;
          k2 = h2 > i2 ? b2 : b2 + 16 | 0;
          if (+g[(+g[k2 >> 2] > f2 ? k2 : b2 + 32 | 0) >> 2] < +g[a2 + 8 >> 2])
            return;
          f2 = +g[b2 + 8 >> 2];
          h2 = +g[b2 + 24 >> 2];
          j2 = f2 < h2 ? f2 : h2;
          i2 = +g[b2 + 40 >> 2];
          if ((j2 < i2 ? j2 : i2) > +g[a2 + 32 >> 2])
            return;
          k2 = f2 > h2 ? b2 + 8 | 0 : b2 + 24 | 0;
          if (+g[(+g[k2 >> 2] > i2 ? k2 : b2 + 40 | 0) >> 2] < +g[a2 + 16 >> 2])
            return;
          f2 = +g[b2 + 4 >> 2];
          h2 = +g[b2 + 20 >> 2];
          j2 = f2 < h2 ? f2 : h2;
          i2 = +g[b2 + 36 >> 2];
          if ((j2 < i2 ? j2 : i2) > +g[a2 + 28 >> 2])
            return;
          k2 = f2 > h2 ? b2 + 4 | 0 : b2 + 20 | 0;
          if (+g[(+g[k2 >> 2] > i2 ? k2 : b2 + 36 | 0) >> 2] < +g[a2 + 12 >> 2])
            return;
          k2 = c[a2 + 4 >> 2] | 0;
          Yb[c[(c[k2 >> 2] | 0) + 8 >> 2] & 127](k2, b2, d2, e2);
          return;
        }
        function zj(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
          e2 = i;
          i = i + 96 | 0;
          a[b2 + 92 >> 0] = 1;
          if (!(a[22104] | 0)) {
            a[22104] = 1;
            c[6043] = 1065353216;
            c[6044] = 0;
            c[6045] = 0;
            c[6046] = 0;
            c[6047] = 0;
            c[6048] = 1065353216;
            c[6049] = 0;
            c[6050] = 0;
            c[6051] = 0;
            c[6052] = 0;
            c[6053] = 1065353216;
            g[6054] = 0;
            c[6055] = -1082130432;
            c[6056] = 0;
            c[6057] = 0;
            c[6058] = 0;
            c[6059] = 0;
            c[6060] = -1082130432;
            c[6061] = 0;
            c[6062] = 0;
            c[6063] = 0;
            c[6064] = 0;
            c[6065] = -1082130432;
            g[6066] = 0;
          }
          d2 = e2;
          f2 = d2 + 96 | 0;
          do {
            c[d2 >> 2] = 0;
            d2 = d2 + 4 | 0;
          } while ((d2 | 0) < (f2 | 0));
          Yb[c[(c[b2 >> 2] | 0) + 76 >> 2] & 127](b2, 24172, e2, 6);
          h2 = +g[b2 + 48 >> 2];
          g[b2 + 76 >> 2] = +g[e2 >> 2] + h2;
          g[b2 + 60 >> 2] = +g[e2 + 48 >> 2] - h2;
          g[b2 + 80 >> 2] = +g[e2 + 20 >> 2] + h2;
          g[b2 + 64 >> 2] = +g[e2 + 68 >> 2] - h2;
          g[b2 + 84 >> 2] = +g[e2 + 40 >> 2] + h2;
          g[b2 + 68 >> 2] = +g[e2 + 88 >> 2] - h2;
          i = e2;
          return;
        }
        function Aj(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          h2 = i;
          i = i + 16 | 0;
          g[b2 + 32 >> 2] = f2;
          c[b2 + 8 >> 2] = c[d2 >> 2];
          c[b2 + 8 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 8 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 8 + 12 >> 2] = c[d2 + 12 >> 2];
          j2 = +g[b2 + 28 >> 2];
          l2 = +g[e2 + 4 >> 2] - j2 * +g[d2 + 4 >> 2];
          k2 = +g[e2 + 8 >> 2] - j2 * +g[d2 + 8 >> 2];
          g[h2 >> 2] = +g[e2 >> 2] - +g[d2 >> 2] * j2;
          g[h2 + 4 >> 2] = l2;
          g[h2 + 8 >> 2] = k2;
          g[h2 + 12 >> 2] = 0;
          f2 = +g[b2 + 24 >> 2] + j2 + f2;
          g[b2 + 32 >> 2] = f2;
          if (!(f2 < 0)) {
            b2 = b2 + 4 | 0;
            b2 = c[b2 >> 2] | 0;
            e2 = c[b2 >> 2] | 0;
            e2 = e2 + 16 | 0;
            e2 = c[e2 >> 2] | 0;
            Tb[e2 & 15](b2, d2, h2, f2);
            i = h2;
            return;
          }
          a[b2 + 36 >> 0] = 1;
          b2 = b2 + 4 | 0;
          b2 = c[b2 >> 2] | 0;
          e2 = c[b2 >> 2] | 0;
          e2 = e2 + 16 | 0;
          e2 = c[e2 >> 2] | 0;
          Tb[e2 & 15](b2, d2, h2, f2);
          i = h2;
          return;
        }
        function Bj(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0;
          if ((c[d2 + 60 >> 2] | 0) == 2) {
            g2 = c[d2 + 48 >> 2] | 0;
            Wg(b2 + 64 | 0, g2) | 0;
            f2 = c[b2 + 68 >> 2] | 0;
            if (f2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[f2 + -4 >> 2] | 0);
            }
            c[b2 + 68 >> 2] = g2;
            c[b2 + 76 >> 2] = (c[b2 + 76 >> 2] | 0) + -1;
          } else {
            f2 = c[d2 + 48 >> 2] | 0;
            Wg(b2 + 4 | 0, f2) | 0;
            g2 = c[b2 + 8 >> 2] | 0;
            if (g2 | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[g2 + -4 >> 2] | 0);
            }
            c[b2 + 8 >> 2] = f2;
            c[b2 + 16 >> 2] = (c[b2 + 16 >> 2] | 0) + -1;
          }
          f2 = c[d2 + 52 >> 2] | 0;
          g2 = c[d2 + 56 >> 2] | 0;
          if (!f2)
            c[b2 + 124 + (c[d2 + 60 >> 2] << 2) >> 2] = g2;
          else
            c[f2 + 56 >> 2] = g2;
          f2 = c[d2 + 56 >> 2] | 0;
          if (f2 | 0)
            c[f2 + 52 >> 2] = c[d2 + 52 >> 2];
          g2 = c[b2 + 136 >> 2] | 0;
          Ub[c[(c[g2 >> 2] | 0) + 16 >> 2] & 127](g2, d2, e2);
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          a[b2 + 194 >> 0] = 1;
          return;
        }
        function Cj(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0;
          f2 = i;
          i = i + 96 | 0;
          g2 = c[b2 + 192 >> 2] | 0;
          c[f2 + 64 >> 2] = 0;
          c[f2 + 64 + 4 >> 2] = g2;
          c[f2 + 64 + 8 >> 2] = b2;
          c[f2 + 64 + 12 >> 2] = b2 + 4;
          c[f2 + 64 + 16 >> 2] = -1;
          c[f2 + 64 + 20 >> 2] = -1;
          b2 = c[d2 + 192 >> 2] | 0;
          c[f2 + 40 >> 2] = 0;
          c[f2 + 40 + 4 >> 2] = b2;
          c[f2 + 40 + 8 >> 2] = d2;
          c[f2 + 40 + 12 >> 2] = d2 + 4;
          c[f2 + 40 + 16 >> 2] = -1;
          c[f2 + 40 + 20 >> 2] = -1;
          b2 = c[a2 + 24 >> 2] | 0;
          b2 = sb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, f2 + 64 | 0, f2 + 40 | 0, 0) | 0;
          if (!b2) {
            i = f2;
            return;
          }
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = f2 + 64;
          c[f2 + 12 >> 2] = f2 + 40;
          c[f2 >> 2] = 6008;
          c[f2 + 32 >> 2] = e2;
          ib[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, f2 + 64 | 0, f2 + 40 | 0, a2 + 28 | 0, f2);
          kb[c[c[b2 >> 2] >> 2] & 255](b2);
          g2 = c[a2 + 24 >> 2] | 0;
          mb[c[(c[g2 >> 2] | 0) + 60 >> 2] & 127](g2, b2);
          i = f2;
          return;
        }
        function Dj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          e2 = +g[a2 + 32 >> 2];
          f2 = +g[a2 + 36 >> 2];
          i2 = +g[a2 + 40 >> 2];
          j2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          h2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          i2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2) + i2;
          switch (c[a2 + 56 >> 2] | 0) {
            case 0: {
              j2 = b2 * 0.25 * (h2 + f2) * (h2 + f2) + b2 / 12 * (j2 + e2) * (j2 + e2) * 4;
              g[d2 >> 2] = b2 * 0.5 * (h2 + f2) * (h2 + f2);
              g[d2 + 4 >> 2] = j2;
              g[d2 + 8 >> 2] = j2;
              g[d2 + 12 >> 2] = 0;
              return;
            }
            case 2: {
              g[d2 >> 2] = b2 * 0.25 * (j2 + e2) * (j2 + e2) + b2 / 12 * i2 * i2 * 4;
              g[d2 + 4 >> 2] = b2 * 0.25 * (j2 + e2) * (j2 + e2) + b2 / 12 * i2 * i2 * 4;
              g[d2 + 8 >> 2] = b2 * 0.5 * (j2 + e2) * (j2 + e2);
              g[d2 + 12 >> 2] = 0;
              return;
            }
            default: {
              i2 = b2 * 0.25 * (j2 + e2) * (j2 + e2) + b2 / 12 * (h2 + f2) * (h2 + f2) * 4;
              g[d2 >> 2] = i2;
              g[d2 + 4 >> 2] = b2 * 0.5 * (j2 + e2) * (j2 + e2);
              g[d2 + 8 >> 2] = i2;
              g[d2 + 12 >> 2] = 0;
              return;
            }
          }
        }
        function Ej(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[a2 >> 2] = 3428;
          b2 = c[a2 + 92 >> 2] | 0;
          kb[c[c[b2 >> 2] >> 2] & 255](b2);
          b2 = c[a2 + 92 >> 2] | 0;
          if (b2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[b2 + -4 >> 2] | 0);
          }
          b2 = c[a2 + 96 >> 2] | 0;
          kb[c[c[b2 >> 2] >> 2] & 255](b2);
          b2 = c[a2 + 96 >> 2] | 0;
          if (b2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[b2 + -4 >> 2] | 0);
          }
          b2 = c[a2 + 100 >> 2] | 0;
          kb[c[c[b2 >> 2] >> 2] & 255](b2);
          b2 = c[a2 + 100 >> 2] | 0;
          if (b2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[b2 + -4 >> 2] | 0);
          }
          b2 = c[a2 + 104 >> 2] | 0;
          kb[c[c[b2 >> 2] >> 2] & 255](b2);
          b2 = c[a2 + 104 >> 2] | 0;
          if (b2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[b2 + -4 >> 2] | 0);
          }
          b2 = c[a2 + 108 >> 2] | 0;
          kb[c[c[b2 >> 2] >> 2] & 255](b2);
          b2 = c[a2 + 108 >> 2] | 0;
          if (!b2) {
            Xe(a2);
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          Xe(a2);
          return;
        }
        function Fj(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0;
          f2 = i;
          i = i + 16 | 0;
          c[b2 + 4 >> 2] = d2;
          c[b2 >> 2] = 4276;
          c[b2 + 8 >> 2] = -1;
          c[b2 + 12 >> 2] = -1;
          g[b2 + 16 >> 2] = 34028234663852886e22;
          a[b2 + 20 >> 0] = 1;
          a[b2 + 21 >> 0] = 0;
          c[b2 + 24 >> 2] = -1;
          c[b2 + 28 >> 2] = e2;
          if (!(a[22088] | 0)) {
            a[22088] = 1;
            c[f2 >> 2] = 0;
            c[f2 + 4 >> 2] = 0;
            c[f2 + 8 >> 2] = 0;
            c[f2 + 12 >> 2] = 0;
            If(22832, 0, 0, 0, f2);
          }
          c[5759] = c[5759] | 1;
          g[5804] = 0;
          h2 = +g[5814] * 0;
          j2 = +g[5815] * 0;
          g[5809] = +g[5813] * 0;
          g[5810] = h2;
          g[5811] = j2;
          g[5812] = 0;
          c[5817] = 0;
          c[5818] = 0;
          c[5819] = 0;
          c[5820] = 0;
          j2 = +g[5806] * 0;
          h2 = +g[5807] * 0;
          g[5858] = +g[5805] * 0;
          g[5859] = j2;
          g[5860] = h2;
          g[5861] = 0;
          c[b2 + 32 >> 2] = 22832;
          g[b2 + 36 >> 2] = 0;
          g[b2 + 40 >> 2] = 0.30000001192092896;
          c[b2 + 44 >> 2] = 0;
          i = f2;
          return;
        }
        function Gj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          m2 = c[b2 + 56 >> 2] | 0;
          l2 = c[m2 + 32 >> 2] | 0;
          b2 = c[l2 >> 2] | 0;
          m2 = c[m2 + 24 >> 2] | 0;
          if ((m2 | 0) <= 1) {
            m2 = b2;
            m2 = m2 + 8 | 0;
            c[a2 >> 2] = c[m2 >> 2];
            c[a2 + 4 >> 2] = c[m2 + 4 >> 2];
            c[a2 + 8 >> 2] = c[m2 + 8 >> 2];
            c[a2 + 12 >> 2] = c[m2 + 12 >> 2];
            return;
          }
          j2 = +g[d2 >> 2];
          k2 = +g[d2 + 4 >> 2];
          i2 = +g[d2 + 8 >> 2];
          d2 = 0;
          h2 = 1;
          e2 = j2 * +g[b2 + 8 >> 2] + k2 * +g[b2 + 12 >> 2] + i2 * +g[b2 + 16 >> 2];
          while (1) {
            b2 = c[l2 + (h2 << 2) >> 2] | 0;
            f2 = j2 * +g[b2 + 8 >> 2] + k2 * +g[b2 + 12 >> 2] + i2 * +g[b2 + 16 >> 2];
            b2 = f2 > e2;
            d2 = b2 ? h2 : d2;
            h2 = h2 + 1 | 0;
            if ((h2 | 0) == (m2 | 0))
              break;
            else
              e2 = b2 ? f2 : e2;
          }
          m2 = c[l2 + (d2 << 2) >> 2] | 0;
          m2 = m2 + 8 | 0;
          c[a2 >> 2] = c[m2 >> 2];
          c[a2 + 4 >> 2] = c[m2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[m2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[m2 + 12 >> 2];
          return;
        }
        function Hj(a2) {
          a2 = a2 | 0;
          var b2 = 0, c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          n2 = +g[a2 + 4 >> 2];
          h2 = +g[a2 + 436 >> 2];
          m2 = +g[a2 + 8 >> 2];
          e2 = +g[a2 + 440 >> 2];
          l2 = +g[a2 + 12 >> 2];
          c2 = +g[a2 + 444 >> 2];
          k2 = +g[a2 + 20 >> 2];
          j2 = +g[a2 + 24 >> 2];
          i2 = +g[a2 + 28 >> 2];
          f2 = +g[a2 + 36 >> 2];
          d2 = +g[a2 + 40 >> 2];
          b2 = +g[a2 + 44 >> 2];
          g[a2 + 304 >> 2] = n2 * h2 * n2 + m2 * e2 * m2 + l2 * c2 * l2;
          g[a2 + 308 >> 2] = n2 * h2 * k2 + m2 * e2 * j2 + l2 * c2 * i2;
          g[a2 + 312 >> 2] = n2 * h2 * f2 + m2 * e2 * d2 + l2 * c2 * b2;
          g[a2 + 316 >> 2] = 0;
          g[a2 + 320 >> 2] = h2 * k2 * n2 + e2 * j2 * m2 + c2 * i2 * l2;
          g[a2 + 324 >> 2] = h2 * k2 * k2 + e2 * j2 * j2 + c2 * i2 * i2;
          g[a2 + 328 >> 2] = h2 * k2 * f2 + e2 * j2 * d2 + c2 * i2 * b2;
          g[a2 + 332 >> 2] = 0;
          g[a2 + 336 >> 2] = h2 * f2 * n2 + e2 * d2 * m2 + c2 * b2 * l2;
          g[a2 + 340 >> 2] = h2 * f2 * k2 + e2 * d2 * j2 + c2 * b2 * i2;
          g[a2 + 344 >> 2] = h2 * f2 * f2 + e2 * d2 * d2 + c2 * b2 * b2;
          g[a2 + 348 >> 2] = 0;
          return;
        }
        function Ij(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0;
          if (a[b2 + 738 >> 0] | 0) {
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            return;
          }
          c[d2 >> 2] = 5;
          c[d2 + 4 >> 2] = 1;
          e2 = +_i(b2, (c[b2 + 28 >> 2] | 0) + 4 | 0, (c[b2 + 32 >> 2] | 0) + 4 | 0);
          g[b2 + 728 >> 2] = e2;
          g[b2 + 708 >> 2] = 0;
          g[b2 + 712 >> 2] = 0;
          a[b2 + 716 >> 0] = 0;
          f2 = +g[b2 + 692 >> 2];
          do
            if (f2 >= 0) {
              e2 = +jh(e2 - +g[b2 + 688 >> 2], 6.2831854820251465);
              if (!(e2 < -3.1415927410125732)) {
                if (e2 > 3.1415927410125732)
                  e2 = e2 + -6.2831854820251465;
              } else
                e2 = e2 + 6.2831854820251465;
              if (e2 < -f2) {
                a[b2 + 716 >> 0] = 1;
                g[b2 + 708 >> 2] = -(e2 + f2);
                g[b2 + 712 >> 2] = 1;
                break;
              }
              if (e2 > f2) {
                a[b2 + 716 >> 0] = 1;
                g[b2 + 708 >> 2] = f2 - e2;
                g[b2 + 712 >> 2] = -1;
              } else
                h2 = 12;
            } else
              h2 = 12;
          while (0);
          if ((h2 | 0) == 12 ? (a[b2 + 737 >> 0] | 0) == 0 : 0)
            return;
          c[d2 >> 2] = 6;
          c[d2 + 4 >> 2] = 0;
          return;
        }
        function Jj(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          c[b2 >> 2] = 5628;
          e2 = c[b2 + 8 >> 2] | 0;
          d2 = c[b2 + 16 >> 2] | 0;
          if ((e2 | 0) > 0) {
            h2 = 0;
            do {
              f2 = (c[d2 + (h2 << 2) >> 2] | 0) + 188 | 0;
              g2 = c[f2 >> 2] | 0;
              if (g2) {
                e2 = c[b2 + 68 >> 2] | 0;
                e2 = ob[c[(c[e2 >> 2] | 0) + 36 >> 2] & 127](e2) | 0;
                Ub[c[(c[e2 >> 2] | 0) + 40 >> 2] & 127](e2, g2, c[b2 + 24 >> 2] | 0);
                e2 = c[b2 + 68 >> 2] | 0;
                Ub[c[(c[e2 >> 2] | 0) + 12 >> 2] & 127](e2, g2, c[b2 + 24 >> 2] | 0);
                c[f2 >> 2] = 0;
                e2 = c[b2 + 8 >> 2] | 0;
                d2 = c[b2 + 16 >> 2] | 0;
              }
              h2 = h2 + 1 | 0;
            } while ((h2 | 0) < (e2 | 0));
          }
          if (!d2) {
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 20 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 16 >> 2] = 0;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          b2 = b2 + 12 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function Kj(b2, d2, e2, f2, g2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          d2 = c[d2 >> 2] | 0;
          c[b2 + 4 >> 2] = d2;
          c[b2 >> 2] = 3880;
          a[b2 + 8 >> 0] = g2 & 1;
          c[b2 + 12 >> 2] = 4092;
          c[b2 + 60 >> 2] = d2;
          c[b2 + 64 >> 2] = 0;
          a[b2 + 88 >> 0] = 1;
          c[b2 + 84 >> 2] = 0;
          c[b2 + 76 >> 2] = 0;
          c[b2 + 80 >> 2] = 0;
          a[b2 + 108 >> 0] = 1;
          c[b2 + 104 >> 2] = 0;
          c[b2 + 96 >> 2] = 0;
          c[b2 + 100 >> 2] = 0;
          a[b2 + 128 >> 0] = 1;
          c[b2 + 124 >> 2] = 0;
          c[b2 + 116 >> 2] = 0;
          c[b2 + 120 >> 2] = 0;
          a[b2 + 148 >> 0] = 1;
          c[b2 + 144 >> 2] = 0;
          c[b2 + 136 >> 2] = 0;
          c[b2 + 140 >> 2] = 0;
          if (g2) {
            c[b2 + 16 >> 2] = c[f2 + 8 >> 2];
            f2 = e2;
            f2 = f2 + 8 | 0;
            f2 = c[f2 >> 2] | 0;
            g2 = b2 + 20 | 0;
            c[g2 >> 2] = f2;
            Sf(b2 + 12 | 0);
            return;
          } else {
            c[b2 + 16 >> 2] = c[e2 + 8 >> 2];
            f2 = f2 + 8 | 0;
            f2 = c[f2 >> 2] | 0;
            g2 = b2 + 20 | 0;
            c[g2 >> 2] = f2;
            Sf(b2 + 12 | 0);
            return;
          }
        }
        function Lj(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          c[a2 + 248 >> 2] = c[b2 >> 2];
          c[a2 + 248 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 248 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 248 + 12 >> 2] = c[b2 + 12 >> 2];
          d2 = c[a2 + 232 >> 2] | 0;
          if ((d2 | 0) <= 0)
            return;
          h2 = 0;
          do {
            f2 = c[(c[a2 + 240 >> 2] | 0) + (h2 << 2) >> 2] | 0;
            switch (c[f2 + 216 >> 2] | 0) {
              case 2:
              case 5:
                break;
              default:
                if (!(c[f2 + 544 >> 2] & 1)) {
                  e2 = +g[f2 + 384 >> 2];
                  if (e2 != 0) {
                    j2 = 1 / e2 * +g[b2 + 4 >> 2];
                    i2 = 1 / e2 * +g[b2 + 8 >> 2];
                    g[f2 + 404 >> 2] = 1 / e2 * +g[b2 >> 2];
                    g[f2 + 408 >> 2] = j2;
                    g[f2 + 412 >> 2] = i2;
                    g[f2 + 416 >> 2] = 0;
                  }
                  c[f2 + 420 >> 2] = c[b2 >> 2];
                  c[f2 + 420 + 4 >> 2] = c[b2 + 4 >> 2];
                  c[f2 + 420 + 8 >> 2] = c[b2 + 8 >> 2];
                  c[f2 + 420 + 12 >> 2] = c[b2 + 12 >> 2];
                  d2 = c[a2 + 232 >> 2] | 0;
                }
            }
            h2 = h2 + 1 | 0;
          } while ((h2 | 0) < (d2 | 0));
          return;
        }
        function Mj(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          h2 = ic(379) | 0;
          if (!h2)
            h2 = 0;
          else {
            c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
            h2 = h2 + 4 + 15 & -16;
          }
          c[h2 + 4 >> 2] = 3;
          c[h2 + 8 >> 2] = -1;
          c[h2 + 12 >> 2] = -1;
          g[h2 + 16 >> 2] = 34028234663852886e22;
          a[h2 + 20 >> 0] = 1;
          a[h2 + 21 >> 0] = 0;
          c[h2 + 24 >> 2] = -1;
          c[h2 + 28 >> 2] = b2;
          c[h2 + 32 >> 2] = d2;
          g[h2 + 36 >> 2] = 0;
          g[h2 + 40 >> 2] = 0.30000001192092896;
          c[h2 + 44 >> 2] = 0;
          c[h2 >> 2] = 4508;
          d2 = h2 + 300 | 0;
          c[d2 >> 2] = c[e2 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
          e2 = h2 + 316 | 0;
          c[e2 >> 2] = c[f2 >> 2];
          c[e2 + 4 >> 2] = c[f2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[f2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[f2 + 12 >> 2];
          c[h2 + 332 >> 2] = 0;
          a[h2 + 344 >> 0] = 0;
          g[h2 + 348 >> 2] = 0.30000001192092896;
          g[h2 + 352 >> 2] = 1;
          g[h2 + 356 >> 2] = 0;
          return h2 | 0;
        }
        function Nj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          e2 = c[a2 + 204 >> 2] | 0;
          if (b2 == 0) {
            c[a2 + 204 >> 2] = e2 | 1;
            h2 = 0;
          } else {
            c[a2 + 204 >> 2] = e2 & -2;
            h2 = 1 / b2;
          }
          g[a2 + 384 >> 2] = h2;
          j2 = +g[a2 + 424 >> 2] * b2;
          i2 = +g[a2 + 428 >> 2] * b2;
          g[a2 + 404 >> 2] = +g[a2 + 420 >> 2] * b2;
          g[a2 + 408 >> 2] = j2;
          g[a2 + 412 >> 2] = i2;
          g[a2 + 416 >> 2] = 0;
          b2 = +g[d2 >> 2];
          f2 = b2 != 0 ? (g[l >> 2] = 1 / b2, c[l >> 2] | 0) : 0;
          b2 = +g[d2 + 4 >> 2];
          e2 = b2 != 0 ? (g[l >> 2] = 1 / b2, c[l >> 2] | 0) : 0;
          b2 = +g[d2 + 8 >> 2];
          d2 = b2 != 0 ? (g[l >> 2] = 1 / b2, c[l >> 2] | 0) : 0;
          c[a2 + 436 >> 2] = f2;
          c[a2 + 440 >> 2] = e2;
          c[a2 + 444 >> 2] = d2;
          g[a2 + 448 >> 2] = 0;
          i2 = h2 * +g[a2 + 392 >> 2];
          j2 = h2 * +g[a2 + 396 >> 2];
          g[a2 + 600 >> 2] = +g[a2 + 388 >> 2] * h2;
          g[a2 + 604 >> 2] = i2;
          g[a2 + 608 >> 2] = j2;
          g[a2 + 612 >> 2] = 0;
          return;
        }
        function Oj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0;
          f2 = i;
          i = i + 256 | 0;
          e2 = c[b2 + 212 >> 2] | 0;
          if ((e2 | 0) > -1) {
            a2 = e2;
            i = f2;
            return a2 | 0;
          }
          h2 = (c[b2 + 248 >> 2] & 2 | 0) == 0;
          e2 = h2 ? 0 : b2;
          do
            if (!h2) {
              if (!(+g[e2 + 384 >> 2] != 0) ? (c[e2 + 204 >> 2] & 2 | 0) == 0 : 0)
                break;
              h2 = c[a2 + 8 >> 2] | 0;
              yn(f2 | 0, 0, 244) | 0;
              ve(pf(a2 + 4 | 0, f2) | 0, b2, d2);
              c[b2 + 212 >> 2] = h2;
              i = f2;
              return h2 | 0;
            }
          while (0);
          e2 = c[a2 + 188 >> 2] | 0;
          if ((e2 | 0) >= 0) {
            h2 = e2;
            i = f2;
            return h2 | 0;
          }
          c[a2 + 188 >> 2] = c[a2 + 8 >> 2];
          yn(f2 | 0, 0, 244) | 0;
          ve(pf(a2 + 4 | 0, f2) | 0, 0, d2);
          h2 = c[a2 + 188 >> 2] | 0;
          i = f2;
          return h2 | 0;
        }
        function Pj(b2, d2, e2, f2, h2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var i2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          i2 = ic(1407) | 0;
          if (!i2)
            i2 = 0;
          else {
            c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
            i2 = i2 + 4 + 15 & -16;
          }
          ue(i2, b2, d2, e2, f2, h2);
          c[i2 >> 2] = 4388;
          c[i2 + 4 >> 2] = 9;
          a[i2 + 1309 >> 0] = 0;
          g[i2 + 1316 >> 2] = 0;
          g[i2 + 1340 >> 2] = 0;
          g[i2 + 1364 >> 2] = 1;
          a[i2 + 1310 >> 0] = 0;
          g[i2 + 1320 >> 2] = 0;
          g[i2 + 1344 >> 2] = 0;
          g[i2 + 1368 >> 2] = 1;
          a[i2 + 1311 >> 0] = 0;
          g[i2 + 1324 >> 2] = 0;
          g[i2 + 1348 >> 2] = 0;
          g[i2 + 1372 >> 2] = 1;
          a[i2 + 1312 >> 0] = 0;
          g[i2 + 1328 >> 2] = 0;
          g[i2 + 1352 >> 2] = 0;
          g[i2 + 1376 >> 2] = 1;
          a[i2 + 1313 >> 0] = 0;
          g[i2 + 1332 >> 2] = 0;
          g[i2 + 1356 >> 2] = 0;
          g[i2 + 1380 >> 2] = 1;
          a[i2 + 1314 >> 0] = 0;
          g[i2 + 1336 >> 2] = 0;
          g[i2 + 1360 >> 2] = 0;
          g[i2 + 1384 >> 2] = 1;
          return i2 | 0;
        }
        function Qj(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          e2 = c[b2 + 280 >> 2] | 0;
          if ((e2 | 0) == (c[b2 + 284 >> 2] | 0) ? (h2 = e2 | 0 ? e2 << 1 : 1, (e2 | 0) < (h2 | 0)) : 0) {
            if (!h2)
              g2 = 0;
            else {
              c[6324] = (c[6324] | 0) + 1;
              e2 = ic((h2 << 2 | 3) + 16 | 0) | 0;
              if (!e2)
                e2 = 0;
              else {
                c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
                e2 = e2 + 4 + 15 & -16;
              }
              g2 = e2;
              e2 = c[b2 + 280 >> 2] | 0;
            }
            if ((e2 | 0) > 0) {
              f2 = 0;
              do {
                c[g2 + (f2 << 2) >> 2] = c[(c[b2 + 288 >> 2] | 0) + (f2 << 2) >> 2];
                f2 = f2 + 1 | 0;
              } while ((f2 | 0) != (e2 | 0));
            }
            f2 = c[b2 + 288 >> 2] | 0;
            if (f2) {
              if (a[b2 + 292 >> 0] | 0) {
                c[6325] = (c[6325] | 0) + 1;
                Rc(c[f2 + -4 >> 2] | 0);
                e2 = c[b2 + 280 >> 2] | 0;
              }
              c[b2 + 288 >> 2] = 0;
            }
            a[b2 + 292 >> 0] = 1;
            c[b2 + 288 >> 2] = g2;
            c[b2 + 284 >> 2] = h2;
          }
          c[(c[b2 + 288 >> 2] | 0) + (e2 << 2) >> 2] = d2;
          c[b2 + 280 >> 2] = e2 + 1;
          return;
        }
        function Rj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
          e2 = i;
          i = i + 96 | 0;
          c[e2 + 32 >> 2] = 1065353216;
          c[e2 + 32 + 4 >> 2] = 0;
          c[e2 + 32 + 4 + 4 >> 2] = 0;
          c[e2 + 32 + 4 + 8 >> 2] = 0;
          c[e2 + 32 + 4 + 12 >> 2] = 0;
          c[e2 + 32 + 20 >> 2] = 1065353216;
          c[e2 + 32 + 24 >> 2] = 0;
          c[e2 + 32 + 24 + 4 >> 2] = 0;
          c[e2 + 32 + 24 + 8 >> 2] = 0;
          c[e2 + 32 + 24 + 12 >> 2] = 0;
          c[e2 + 32 + 40 >> 2] = 1065353216;
          k2 = e2 + 32 + 44 | 0;
          c[k2 >> 2] = 0;
          c[k2 + 4 >> 2] = 0;
          c[k2 + 8 >> 2] = 0;
          c[k2 + 12 >> 2] = 0;
          c[k2 + 16 >> 2] = 0;
          Yb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, e2 + 32 | 0, e2 + 16 | 0, e2);
          h2 = (+g[e2 >> 2] - +g[e2 + 16 >> 2]) * 0.5 * 2;
          f2 = (+g[e2 + 4 >> 2] - +g[e2 + 16 + 4 >> 2]) * 0.5 * 2;
          j2 = (+g[e2 + 8 >> 2] - +g[e2 + 16 + 8 >> 2]) * 0.5 * 2;
          g[d2 >> 2] = b2 / 12 * (f2 * f2 + j2 * j2);
          g[d2 + 4 >> 2] = b2 / 12 * (h2 * h2 + j2 * j2);
          g[d2 + 8 >> 2] = b2 / 12 * (h2 * h2 + f2 * f2);
          i = e2;
          return;
        }
        function Sj() {
          var a2 = 0, b2 = 0, d2 = 0, e2 = 0;
          e2 = i;
          i = i + 48 | 0;
          if (Za(25804, 3) | 0)
            Vi(21654, e2);
          a2 = Qa(c[6452] | 0) | 0;
          if (a2 | 0 ? (d2 = c[a2 >> 2] | 0, d2 | 0) : 0) {
            a2 = c[d2 + 48 >> 2] | 0;
            b2 = c[d2 + 48 + 4 >> 2] | 0;
            if (!((a2 & -256 | 0) == 1126902528 & (b2 | 0) == 1129074247)) {
              c[e2 + 32 >> 2] = 21515;
              Vi(21465, e2 + 32 | 0);
            }
            if ((a2 | 0) == 1126902529 & (b2 | 0) == 1129074247)
              a2 = c[d2 + 44 >> 2] | 0;
            else
              a2 = d2 + 80 | 0;
            c[e2 + 44 >> 2] = a2;
            d2 = c[d2 >> 2] | 0;
            a2 = c[d2 + 4 >> 2] | 0;
            if (Al(2752, d2, e2 + 44 | 0) | 0) {
              d2 = c[e2 + 44 >> 2] | 0;
              d2 = ob[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2) | 0;
              c[e2 + 8 >> 2] = 21515;
              c[e2 + 8 + 4 >> 2] = a2;
              c[e2 + 8 + 8 >> 2] = d2;
              Vi(21379, e2 + 8 | 0);
            } else {
              c[e2 + 24 >> 2] = 21515;
              c[e2 + 24 + 4 >> 2] = a2;
              Vi(21424, e2 + 24 | 0);
            }
          }
          Vi(21503, e2 + 40 | 0);
        }
        function Tj(a2, b2, c2) {
          a2 = +a2;
          b2 = +b2;
          c2 = +c2;
          var d2 = 0, e2 = 0, f2 = 0;
          if (b2 >= c2)
            return +a2;
          if (a2 < b2) {
            d2 = +jh(b2 - a2, 6.2831854820251465);
            if (!(d2 < -3.1415927410125732)) {
              if (d2 > 3.1415927410125732)
                d2 = d2 + -6.2831854820251465;
            } else
              d2 = d2 + 6.2831854820251465;
            e2 = +F(+d2);
            d2 = +jh(c2 - a2, 6.2831854820251465);
            if (!(d2 < -3.1415927410125732)) {
              if (d2 > 3.1415927410125732)
                d2 = d2 + -6.2831854820251465;
            } else
              d2 = d2 + 6.2831854820251465;
            f2 = e2 < +F(+d2);
            a2 = f2 ? a2 : a2 + 6.2831854820251465;
            return +a2;
          }
          if (!(a2 > c2))
            return +a2;
          d2 = +jh(a2 - c2, 6.2831854820251465);
          if (!(d2 < -3.1415927410125732)) {
            if (d2 > 3.1415927410125732)
              d2 = d2 + -6.2831854820251465;
          } else
            d2 = d2 + 6.2831854820251465;
          e2 = +F(+d2);
          d2 = +jh(a2 - b2, 6.2831854820251465);
          if (!(d2 < -3.1415927410125732)) {
            if (d2 > 3.1415927410125732)
              d2 = d2 + -6.2831854820251465;
          } else
            d2 = d2 + 6.2831854820251465;
          f2 = +F(+d2) < e2;
          a2 = f2 ? a2 + -6.2831854820251465 : a2;
          return +a2;
        }
        function Uj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          e2 = i;
          i = i + 16 | 0;
          Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](e2, b2, d2);
          c[a2 >> 2] = c[e2 >> 2];
          c[a2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[e2 + 12 >> 2];
          if (!(+Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2) != 0)) {
            i = e2;
            return;
          }
          j2 = +g[d2 >> 2];
          h2 = +g[d2 + 4 >> 2];
          f2 = +g[d2 + 8 >> 2];
          l2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : j2;
          k2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : h2;
          f2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : f2;
          h2 = 1 / +G(+(f2 * f2 + (l2 * l2 + k2 * k2)));
          j2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          g[a2 >> 2] = +g[a2 >> 2] + j2 * h2 * l2;
          g[a2 + 4 >> 2] = j2 * h2 * k2 + +g[a2 + 4 >> 2];
          g[a2 + 8 >> 2] = j2 * h2 * f2 + +g[a2 + 8 >> 2];
          i = e2;
          return;
        }
        function Vj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0;
          f2 = +g[a2 + 692 >> 2];
          do
            if (f2 > 0) {
              h2 = +g[a2 + 688 >> 2];
              e2 = +jh(b2 - h2, 6.2831854820251465);
              if (!(e2 < -3.1415927410125732)) {
                if (e2 > 3.1415927410125732)
                  e2 = e2 + -6.2831854820251465;
              } else
                e2 = e2 + 6.2831854820251465;
              if (!(!(e2 < -f2) & e2 <= f2))
                if (e2 > 0) {
                  b2 = +jh(f2 + h2, 6.2831854820251465);
                  if (b2 < -3.1415927410125732) {
                    b2 = b2 + 6.2831854820251465;
                    break;
                  }
                  if (!(b2 > 3.1415927410125732))
                    break;
                  b2 = b2 + -6.2831854820251465;
                  break;
                } else {
                  b2 = +jh(h2 - f2, 6.2831854820251465);
                  if (b2 < -3.1415927410125732) {
                    b2 = b2 + 6.2831854820251465;
                    break;
                  }
                  if (!(b2 > 3.1415927410125732))
                    break;
                  b2 = b2 + -6.2831854820251465;
                  break;
                }
            }
          while (0);
          g[a2 + 680 >> 2] = (b2 - +_i(a2, (c[a2 + 28 >> 2] | 0) + 4 | 0, (c[a2 + 32 >> 2] | 0) + 4 | 0)) / d2;
          return;
        }
        function Wj(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0;
          a:
            do
              switch (b2 | 0) {
                case 2: {
                  if ((c2 | 0) < 1) {
                    d2 = +g[a2 + 232 >> 2];
                    break a;
                  }
                  if ((c2 | 0) < 3) {
                    d2 = +g[a2 + 264 >> 2];
                    break a;
                  }
                  if ((c2 | 0) == 3) {
                    d2 = +g[a2 + 248 >> 2];
                    break a;
                  }
                  if ((c2 | 0) < 6)
                    d2 = +g[a2 + 280 >> 2];
                  else
                    d2 = 34028234663852886e22;
                  break;
                }
                case 3: {
                  if ((c2 | 0) < 1) {
                    d2 = +g[a2 + 212 >> 2];
                    break a;
                  }
                  if ((c2 | 0) == 3)
                    d2 = +g[a2 + 228 >> 2];
                  else
                    d2 = 34028234663852886e22;
                  break;
                }
                case 4: {
                  if ((c2 | 0) < 1) {
                    d2 = +g[a2 + 244 >> 2];
                    break a;
                  }
                  if ((c2 | 0) < 3) {
                    d2 = +g[a2 + 276 >> 2];
                    break a;
                  }
                  if ((c2 | 0) == 3) {
                    d2 = +g[a2 + 260 >> 2];
                    break a;
                  }
                  if ((c2 | 0) < 6)
                    d2 = +g[a2 + 292 >> 2];
                  else
                    d2 = 34028234663852886e22;
                  break;
                }
                default:
                  d2 = 34028234663852886e22;
              }
            while (0);
          return +d2;
        }
        function Xj(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          e2 = +g[d2 >> 2];
          f2 = +g[d2 + 4 >> 2];
          h2 = +g[d2 + 8 >> 2];
          if (e2 * e2 + f2 * f2 + h2 * h2 == 0)
            e2 = +g[b2 + 36 >> 2];
          else
            e2 = +G(+(e2 * e2 + f2 * f2 + h2 * h2));
          g[b2 + 32 >> 2] = e2;
          g[b2 + 20 >> 2] = e2;
          a[b2 + 249 >> 0] = 1;
          e2 = +g[d2 >> 2];
          f2 = +g[d2 + 4 >> 2];
          h2 = +g[d2 + 8 >> 2];
          if (e2 * e2 + f2 * f2 + h2 * h2 == 0) {
            i2 = +g[b2 + 256 >> 2];
            f2 = +g[b2 + 260 >> 2];
            e2 = +g[b2 + 264 >> 2];
            d2 = b2 + 268 | 0;
          } else {
            j2 = 1 / +G(+(e2 * e2 + f2 * f2 + h2 * h2));
            i2 = e2 * j2;
            f2 = f2 * j2;
            e2 = h2 * j2;
            d2 = d2 + 12 | 0;
          }
          d2 = c[d2 >> 2] | 0;
          g[b2 + 272 >> 2] = i2;
          g[b2 + 276 >> 2] = f2;
          g[b2 + 280 >> 2] = e2;
          c[b2 + 284 >> 2] = d2;
          d2 = (c[b2 + 8 >> 2] | 0) + 52 | 0;
          c[b2 + 116 >> 2] = c[d2 >> 2];
          c[b2 + 116 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 116 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 116 + 12 >> 2] = c[d2 + 12 >> 2];
          return;
        }
        function Yj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0;
          n2 = c[b2 + 100 >> 2] | 0;
          if ((n2 | 0) <= 0) {
            c[a2 >> 2] = 0;
            c[a2 + 4 >> 2] = 0;
            c[a2 + 8 >> 2] = 0;
            c[a2 + 12 >> 2] = 0;
            return;
          }
          o2 = +g[b2 + 16 >> 2];
          p2 = +g[d2 >> 2] * o2;
          k2 = +g[b2 + 20 >> 2];
          l2 = +g[d2 + 4 >> 2] * k2;
          m2 = +g[b2 + 24 >> 2];
          j2 = +g[d2 + 8 >> 2] * m2;
          f2 = c[b2 + 108 >> 2] | 0;
          d2 = -1;
          b2 = 0;
          e2 = -34028234663852886e22;
          while (1) {
            h2 = p2 * +g[f2 + (b2 << 4) >> 2] + l2 * +g[f2 + (b2 << 4) + 4 >> 2] + j2 * +g[f2 + (b2 << 4) + 8 >> 2];
            i2 = h2 > e2;
            d2 = i2 ? b2 : d2;
            b2 = b2 + 1 | 0;
            if ((b2 | 0) == (n2 | 0))
              break;
            else
              e2 = i2 ? h2 : e2;
          }
          l2 = +g[f2 + (d2 << 4) + 4 >> 2] * k2;
          p2 = +g[f2 + (d2 << 4) + 8 >> 2] * m2;
          g[a2 >> 2] = +g[f2 + (d2 << 4) >> 2] * o2;
          g[a2 + 4 >> 2] = l2;
          g[a2 + 8 >> 2] = p2;
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function Zj(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          c[6041] = (c[6041] | 0) + 1;
          e2 = (c[b2 + 12 >> 2] | 0) > (c[d2 + 12 >> 2] | 0);
          f2 = c[(e2 ? d2 : b2) + 12 >> 2] | 0;
          e2 = c[(e2 ? b2 : d2) + 12 >> 2] | 0;
          b2 = ((e2 << 16 | f2) + ~((e2 << 16 | f2) << 15) >> 10 ^ (e2 << 16 | f2) + ~((e2 << 16 | f2) << 15)) * 9 | 0;
          b2 = ((b2 >> 6 ^ b2) + ~((b2 >> 6 ^ b2) << 11) >> 16 ^ (b2 >> 6 ^ b2) + ~((b2 >> 6 ^ b2) << 11)) & (c[a2 + 12 >> 2] | 0) + -1;
          if ((b2 | 0) >= (c[a2 + 32 >> 2] | 0)) {
            g2 = 0;
            return g2 | 0;
          }
          b2 = c[(c[a2 + 40 >> 2] | 0) + (b2 << 2) >> 2] | 0;
          if ((b2 | 0) == -1) {
            g2 = 0;
            return g2 | 0;
          }
          d2 = c[a2 + 16 >> 2] | 0;
          while (1) {
            if ((c[(c[d2 + (b2 << 4) >> 2] | 0) + 12 >> 2] | 0) == (f2 | 0) ? (c[(c[d2 + (b2 << 4) + 4 >> 2] | 0) + 12 >> 2] | 0) == (e2 | 0) : 0)
              break;
            b2 = c[(c[a2 + 60 >> 2] | 0) + (b2 << 2) >> 2] | 0;
            if ((b2 | 0) == -1) {
              b2 = 0;
              g2 = 8;
              break;
            }
          }
          if ((g2 | 0) == 8)
            return b2 | 0;
          g2 = d2 + (b2 << 4) | 0;
          return g2 | 0;
        }
        function _j(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          f2 = ic(1407) | 0;
          if (!f2)
            f2 = 0;
          else {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            f2 = f2 + 4 + 15 & -16;
          }
          Md(f2, b2, d2, e2);
          c[f2 >> 2] = 4388;
          c[f2 + 4 >> 2] = 9;
          a[f2 + 1309 >> 0] = 0;
          g[f2 + 1316 >> 2] = 0;
          g[f2 + 1340 >> 2] = 0;
          g[f2 + 1364 >> 2] = 1;
          a[f2 + 1310 >> 0] = 0;
          g[f2 + 1320 >> 2] = 0;
          g[f2 + 1344 >> 2] = 0;
          g[f2 + 1368 >> 2] = 1;
          a[f2 + 1311 >> 0] = 0;
          g[f2 + 1324 >> 2] = 0;
          g[f2 + 1348 >> 2] = 0;
          g[f2 + 1372 >> 2] = 1;
          a[f2 + 1312 >> 0] = 0;
          g[f2 + 1328 >> 2] = 0;
          g[f2 + 1352 >> 2] = 0;
          g[f2 + 1376 >> 2] = 1;
          a[f2 + 1313 >> 0] = 0;
          g[f2 + 1332 >> 2] = 0;
          g[f2 + 1356 >> 2] = 0;
          g[f2 + 1380 >> 2] = 1;
          a[f2 + 1314 >> 0] = 0;
          g[f2 + 1336 >> 2] = 0;
          g[f2 + 1360 >> 2] = 0;
          g[f2 + 1384 >> 2] = 1;
          return f2 | 0;
        }
        function $j(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 3568;
          if (a[b2 + 456 >> 0] | 0 ? (d2 = c[b2 + 452 >> 2] | 0, kb[c[c[d2 >> 2] >> 2] & 255](d2), d2 = c[b2 + 452 >> 2] | 0, d2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 420 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 424 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 420 >> 2] = 0;
          }
          a[b2 + 424 >> 0] = 1;
          c[b2 + 420 >> 2] = 0;
          c[b2 + 412 >> 2] = 0;
          c[b2 + 416 >> 2] = 0;
          d2 = c[b2 + 336 >> 2] | 0;
          if (!d2) {
            a[b2 + 340 >> 0] = 1;
            c[b2 + 336 >> 2] = 0;
            c[b2 + 328 >> 2] = 0;
            d2 = b2 + 332 | 0;
            c[d2 >> 2] = 0;
            Dg(b2);
            return;
          }
          if (a[b2 + 340 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 336 >> 2] = 0;
          a[b2 + 340 >> 0] = 1;
          c[b2 + 336 >> 2] = 0;
          c[b2 + 328 >> 2] = 0;
          d2 = b2 + 332 | 0;
          c[d2 >> 2] = 0;
          Dg(b2);
          return;
        }
        function ak(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          d2 = i;
          i = i + 64 | 0;
          c[d2 + 48 >> 2] = 0;
          c[d2 + 48 + 4 >> 2] = 0;
          c[d2 + 48 + 8 >> 2] = 0;
          c[d2 + 48 + 12 >> 2] = 0;
          j2 = +g[b2 >> 2];
          f2 = +g[b2 + 4 >> 2];
          m2 = +g[b2 + 8 >> 2];
          k2 = +g[b2 + 12 >> 2];
          h2 = j2 * (2 / (j2 * j2 + f2 * f2 + m2 * m2 + k2 * k2));
          e2 = f2 * (2 / (j2 * j2 + f2 * f2 + m2 * m2 + k2 * k2));
          l2 = m2 * (2 / (j2 * j2 + f2 * f2 + m2 * m2 + k2 * k2));
          g[d2 >> 2] = 1 - (f2 * e2 + m2 * l2);
          g[d2 + 4 >> 2] = j2 * e2 - k2 * l2;
          g[d2 + 8 >> 2] = j2 * l2 + k2 * e2;
          g[d2 + 12 >> 2] = 0;
          g[d2 + 16 >> 2] = j2 * e2 + k2 * l2;
          g[d2 + 20 >> 2] = 1 - (j2 * h2 + m2 * l2);
          g[d2 + 24 >> 2] = f2 * l2 - k2 * h2;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 32 >> 2] = j2 * l2 - k2 * e2;
          g[d2 + 36 >> 2] = f2 * l2 + k2 * h2;
          g[d2 + 40 >> 2] = 1 - (j2 * h2 + f2 * e2);
          g[d2 + 44 >> 2] = 0;
          zd(a2, d2);
          i = d2;
          return;
        }
        function bk(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, j2 = 0, k2 = 0, m2 = 0, n2 = 0, o2 = 0;
          f2 = i;
          i = i + 48 | 0;
          Ub[c[(c[a2 >> 2] | 0) + 124 >> 2] & 127](a2, f2 + 32 | 0, e2);
          o2 = c[f2 + 32 >> 2] | 0;
          n2 = c[f2 + 32 + 4 >> 2] | 0;
          m2 = c[f2 + 32 + 8 >> 2] | 0;
          c[b2 >> 2] = o2;
          c[b2 + 4 >> 2] = n2;
          c[b2 + 8 >> 2] = m2;
          g[b2 + 12 >> 2] = 0;
          e2 = c[(c[a2 >> 2] | 0) + 64 >> 2] | 0;
          k2 = -(c[l >> 2] = o2, +g[l >> 2]);
          j2 = -(c[l >> 2] = n2, +g[l >> 2]);
          h2 = -(c[l >> 2] = m2, +g[l >> 2]);
          g[f2 >> 2] = k2;
          g[f2 + 4 >> 2] = j2;
          g[f2 + 8 >> 2] = h2;
          g[f2 + 12 >> 2] = 0;
          Ub[e2 & 127](f2 + 16 | 0, a2, f2);
          c[d2 >> 2] = c[f2 + 16 >> 2];
          c[d2 + 4 >> 2] = c[f2 + 16 + 4 >> 2];
          c[d2 + 8 >> 2] = c[f2 + 16 + 8 >> 2];
          c[d2 + 12 >> 2] = c[f2 + 16 + 12 >> 2];
          i = f2;
          return;
        }
        function ck(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          do
            if (!((b2 | 0) == 8 & (d2 | 0) == 8)) {
              if ((b2 | 0) == 8 & (d2 | 0) == 1) {
                a2 = a2 + 76 | 0;
                break;
              }
              if ((b2 | 0) == 1 & (d2 | 0) == 8) {
                a2 = a2 + 80 | 0;
                break;
              }
              if (!(d2 | b2)) {
                a2 = a2 + 72 | 0;
                break;
              }
              if ((b2 | 0) < 20 & (d2 | 0) == 28) {
                a2 = a2 + 88 | 0;
                break;
              }
              if ((b2 | 0) == 28 & (d2 | 0) < 20) {
                a2 = a2 + 84 | 0;
                break;
              }
              if ((b2 | 0) < 20) {
                if ((d2 | 0) < 20) {
                  a2 = a2 + 32 | 0;
                  break;
                }
                if ((d2 + -21 | 0) >>> 0 < 9) {
                  a2 = a2 + 36 | 0;
                  break;
                }
              } else {
                if ((d2 | 0) < 20 & (b2 + -21 | 0) >>> 0 < 9) {
                  a2 = a2 + 40 | 0;
                  break;
                }
                if ((b2 | 0) == 31)
                  if ((d2 | 0) == 31) {
                    a2 = a2 + 48 | 0;
                    break;
                  } else {
                    a2 = a2 + 44 | 0;
                    break;
                  }
              }
              if ((d2 | 0) == 31) {
                a2 = a2 + 52 | 0;
                break;
              } else {
                a2 = a2 + 56 | 0;
                break;
              }
            } else
              a2 = a2 + 60 | 0;
          while (0);
          return c[a2 >> 2] | 0;
        }
        function dk(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0;
          f2 = +g[a2 + 32 >> 2];
          h2 = +g[a2 + 36 >> 2];
          e2 = +g[a2 + 40 >> 2];
          switch (d2 | 0) {
            case 0: {
              c[b2 >> 2] = 1065353216;
              c[b2 + 4 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              g[b2 + 12 >> 2] = -f2;
              return;
            }
            case 1: {
              c[b2 >> 2] = -1082130432;
              c[b2 + 4 >> 2] = 0;
              c[b2 + 8 >> 2] = 0;
              g[b2 + 12 >> 2] = -f2;
              return;
            }
            case 2: {
              c[b2 >> 2] = 0;
              c[b2 + 4 >> 2] = 1065353216;
              c[b2 + 8 >> 2] = 0;
              g[b2 + 12 >> 2] = -h2;
              return;
            }
            case 3: {
              c[b2 >> 2] = 0;
              c[b2 + 4 >> 2] = -1082130432;
              c[b2 + 8 >> 2] = 0;
              g[b2 + 12 >> 2] = -h2;
              return;
            }
            case 4: {
              c[b2 >> 2] = 0;
              c[b2 + 4 >> 2] = 0;
              c[b2 + 8 >> 2] = 1065353216;
              g[b2 + 12 >> 2] = -e2;
              return;
            }
            case 5: {
              c[b2 >> 2] = 0;
              c[b2 + 4 >> 2] = 0;
              c[b2 + 8 >> 2] = -1082130432;
              g[b2 + 12 >> 2] = -e2;
              return;
            }
            default:
              return;
          }
        }
        function ek(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          h2 = i;
          i = i + 48 | 0;
          c[h2 + 32 >> 2] = e2;
          c[h2 + 32 + 4 >> 2] = f2;
          n2 = +g[b2 >> 2];
          m2 = +g[b2 + 4 >> 2];
          j2 = +g[b2 + 8 >> 2];
          l2 = +g[a2 + 56 >> 2] * n2 + +g[a2 + 60 >> 2] * m2 + +g[a2 + 64 >> 2] * j2;
          k2 = n2 * +g[a2 + 72 >> 2] + m2 * +g[a2 + 76 >> 2] + j2 * +g[a2 + 80 >> 2];
          j2 = n2 * +g[a2 + 88 >> 2] + m2 * +g[a2 + 92 >> 2] + j2 * +g[a2 + 96 >> 2];
          c[h2 >> 2] = c[a2 + 48 >> 2];
          c[h2 + 4 >> 2] = h2 + 32;
          g[h2 + 8 >> 2] = l2;
          g[h2 + 12 >> 2] = k2;
          g[h2 + 16 >> 2] = j2;
          g[h2 + 20 >> 2] = 0;
          g[h2 + 24 >> 2] = d2;
          f2 = c[a2 + 44 >> 2] | 0;
          d2 = +Kb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, h2, 1);
          i = h2;
          return +d2;
        }
        function fk(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          if (e2 >>> 0 < 3)
            switch (b2 | 0) {
              case 2: {
                g[a2 + 756 + (e2 << 2) >> 2] = d2;
                c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 4 << e2 * 3;
                return;
              }
              case 4: {
                g[a2 + 772 + (e2 << 2) >> 2] = d2;
                c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 2 << e2 * 3;
                return;
              }
              case 3: {
                g[a2 + 740 + (e2 << 2) >> 2] = d2;
                c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 1 << e2 * 3;
                return;
              }
              default:
                return;
            }
          if ((e2 + -3 | 0) >>> 0 >= 3)
            return;
          switch (b2 | 0) {
            case 2: {
              g[a2 + 868 + (e2 + -3 << 6) + 32 >> 2] = d2;
              c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 4 << e2 * 3;
              return;
            }
            case 4: {
              g[a2 + 868 + (e2 + -3 << 6) + 36 >> 2] = d2;
              c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 2 << e2 * 3;
              return;
            }
            case 3: {
              g[a2 + 868 + (e2 + -3 << 6) + 28 >> 2] = d2;
              c[a2 + 1304 >> 2] = c[a2 + 1304 >> 2] | 1 << e2 * 3;
              return;
            }
            default:
              return;
          }
        }
        function gk(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 4896;
          d2 = c[b2 + 80 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 84 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 80 >> 2] = 0;
          }
          a[b2 + 84 >> 0] = 1;
          c[b2 + 80 >> 2] = 0;
          c[b2 + 72 >> 2] = 0;
          c[b2 + 76 >> 2] = 0;
          d2 = c[b2 + 60 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 64 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 60 >> 2] = 0;
          }
          a[b2 + 64 >> 0] = 1;
          c[b2 + 60 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          c[b2 + 56 >> 2] = 0;
          d2 = c[b2 + 40 >> 2] | 0;
          if (!d2) {
            a[b2 + 44 >> 0] = 1;
            c[b2 + 40 >> 2] = 0;
            c[b2 + 32 >> 2] = 0;
            b2 = b2 + 36 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 44 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 40 >> 2] = 0;
          a[b2 + 44 >> 0] = 1;
          c[b2 + 40 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          b2 = b2 + 36 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function hk(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 5384;
          d2 = c[b2 + 60 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 64 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 60 >> 2] = 0;
          }
          a[b2 + 64 >> 0] = 1;
          c[b2 + 60 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          c[b2 + 56 >> 2] = 0;
          d2 = c[b2 + 40 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 44 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 40 >> 2] = 0;
          }
          a[b2 + 44 >> 0] = 1;
          c[b2 + 40 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 36 >> 2] = 0;
          d2 = c[b2 + 16 >> 2] | 0;
          if (!d2) {
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 20 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 16 >> 2] = 0;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          b2 = b2 + 12 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function ik(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 6412;
          d2 = c[b2 + 56 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 60 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 56 >> 2] = 0;
          }
          a[b2 + 60 >> 0] = 1;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          d2 = c[b2 + 36 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 40 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 36 >> 2] = 0;
          }
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          d2 = c[b2 + 16 >> 2] | 0;
          if (!d2) {
            d2 = b2 + 12 | 0;
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            c[d2 >> 2] = 0;
            return;
          }
          if (a[b2 + 20 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 16 >> 2] = 0;
          d2 = b2 + 12 | 0;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          c[d2 >> 2] = 0;
          return;
        }
        function jk(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 9400;
          d2 = c[b2 + 56 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 60 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 56 >> 2] = 0;
          }
          a[b2 + 60 >> 0] = 1;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          d2 = c[b2 + 36 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 40 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 36 >> 2] = 0;
          }
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          d2 = c[b2 + 16 >> 2] | 0;
          if (!d2) {
            a[b2 + 20 >> 0] = 1;
            c[b2 + 16 >> 2] = 0;
            c[b2 + 8 >> 2] = 0;
            b2 = b2 + 12 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 20 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 16 >> 2] = 0;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          b2 = b2 + 12 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function kk(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 6340;
          d2 = c[b2 + 324 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 324 >> 2] | 0;
          if (d2 | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 >> 2] = 6296;
          d2 = c[b2 + 316 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 320 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 316 >> 2] = 0;
          }
          a[b2 + 320 >> 0] = 1;
          c[b2 + 316 >> 2] = 0;
          c[b2 + 308 >> 2] = 0;
          c[b2 + 312 >> 2] = 0;
          c[b2 >> 2] = 5592;
          d2 = c[b2 + 292 >> 2] | 0;
          if (!d2) {
            a[b2 + 296 >> 0] = 1;
            c[b2 + 292 >> 2] = 0;
            c[b2 + 284 >> 2] = 0;
            b2 = b2 + 288 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 296 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 292 >> 2] = 0;
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          b2 = b2 + 288 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function lk(a2, b2, d2, e2, f2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          f2 = f2 | 0;
          h2 = h2 | 0;
          var j2 = 0;
          j2 = i;
          i = i + 64 | 0;
          c[j2 + 48 >> 2] = f2;
          c[j2 + 48 + 4 >> 2] = h2;
          f2 = c[a2 + 212 >> 2] | 0;
          if (!(+g[f2 + 4 >> 2] >= e2)) {
            i = j2;
            return +e2;
          }
          c[j2 >> 2] = c[a2 + 216 >> 2];
          c[j2 + 4 >> 2] = j2 + 48;
          c[j2 + 8 >> 2] = c[b2 >> 2];
          c[j2 + 8 + 4 >> 2] = c[b2 + 4 >> 2];
          c[j2 + 8 + 8 >> 2] = c[b2 + 8 >> 2];
          c[j2 + 8 + 12 >> 2] = c[b2 + 12 >> 2];
          c[j2 + 24 >> 2] = c[d2 >> 2];
          c[j2 + 24 + 4 >> 2] = c[d2 + 4 >> 2];
          c[j2 + 24 + 8 >> 2] = c[d2 + 8 >> 2];
          c[j2 + 24 + 12 >> 2] = c[d2 + 12 >> 2];
          g[j2 + 40 >> 2] = e2;
          e2 = +Kb[c[(c[f2 >> 2] | 0) + 12 >> 2] & 15](f2, j2, 1);
          i = j2;
          return +e2;
        }
        function mk(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          while (1) {
            d2 = ic(5260) | 0;
            if (d2 | 0)
              break;
            d2 = c[6453] | 0;
            c[6453] = d2 + 0;
            if (!d2) {
              d2 = 0;
              break;
            }
            Vb[d2 & 3]();
          }
          c[d2 >> 2] = 5500;
          c[d2 + 4 >> 2] = 2;
          a[d2 + 24 >> 0] = 1;
          c[d2 + 20 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[d2 + 16 >> 2] = 0;
          c[d2 + 28 >> 2] = 6384;
          f2 = d2 + 5256 | 0;
          c[f2 >> 2] = b2;
          c[d2 + 60 >> 2] = 79;
          c[d2 + 64 >> 2] = ob[c[(c[b2 >> 2] | 0) + 12 >> 2] & 127](b2) | 0;
          c[d2 + 68 >> 2] = ob[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2) | 0;
          b2 = 0;
          do {
            e2 = 0;
            do {
              g2 = c[f2 >> 2] | 0;
              c[d2 + 72 + (b2 * 144 | 0) + (e2 << 2) >> 2] = yb[c[(c[g2 >> 2] | 0) + 16 >> 2] & 63](g2, b2, e2) | 0;
              e2 = e2 + 1 | 0;
            } while ((e2 | 0) < 36);
            b2 = b2 + 1 | 0;
          } while ((b2 | 0) < 36);
          return d2 | 0;
        }
        function nk(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0;
          k2 = +g[b2 + 64 >> 2] * 0.5;
          l2 = c[b2 + 72 >> 2] | 0;
          e2 = +g[d2 >> 2];
          f2 = +g[d2 + 4 >> 2];
          i2 = +g[d2 + 8 >> 2];
          i2 = +G(+(e2 * e2 + f2 * f2 + i2 * i2));
          h2 = c[b2 + 68 >> 2] | 0;
          if (+g[d2 + (l2 << 2) >> 2] > i2 * +g[b2 + 56 >> 2]) {
            g[a2 + (h2 << 2) >> 2] = 0;
            g[a2 + (l2 << 2) >> 2] = k2;
            g[a2 + (c[b2 + 76 >> 2] << 2) >> 2] = 0;
            return;
          }
          i2 = +g[d2 + (h2 << 2) >> 2];
          j2 = c[b2 + 76 >> 2] | 0;
          e2 = +g[d2 + (j2 << 2) >> 2];
          f2 = +G(+(i2 * i2 + e2 * e2));
          if (f2 > 11920928955078125e-23) {
            f2 = +g[b2 + 60 >> 2] / f2;
            g[a2 + (h2 << 2) >> 2] = i2 * f2;
            g[a2 + (l2 << 2) >> 2] = -k2;
            g[a2 + (j2 << 2) >> 2] = e2 * f2;
            return;
          } else {
            g[a2 + (h2 << 2) >> 2] = 0;
            g[a2 + (l2 << 2) >> 2] = -k2;
            g[a2 + (j2 << 2) >> 2] = 0;
            return;
          }
        }
        function ok(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0, o2 = 0, p2 = 0, q2 = 0, r2 = 0;
          if (!a2)
            return;
          if (!(c[a2 + 180 >> 2] & 1))
            return;
          p2 = +g[a2 + 4 >> 2];
          r2 = +g[b2 >> 2];
          m2 = +g[a2 + 20 >> 2];
          q2 = +g[b2 + 4 >> 2];
          j2 = +g[a2 + 36 >> 2];
          d2 = +g[b2 + 8 >> 2];
          o2 = +g[a2 + 8 >> 2];
          l2 = +g[a2 + 24 >> 2];
          h2 = +g[a2 + 40 >> 2];
          n2 = +g[a2 + 12 >> 2];
          k2 = +g[a2 + 28 >> 2];
          e2 = +g[a2 + 44 >> 2];
          i2 = (p2 * r2 + m2 * q2 + j2 * d2) * +g[a2 + 164 >> 2];
          f2 = (r2 * o2 + q2 * l2 + d2 * h2) * +g[a2 + 168 >> 2];
          d2 = (r2 * n2 + q2 * k2 + d2 * e2) * +g[a2 + 172 >> 2];
          g[b2 >> 2] = p2 * i2 + o2 * f2 + n2 * d2;
          g[b2 + 4 >> 2] = m2 * i2 + l2 * f2 + k2 * d2;
          g[b2 + 8 >> 2] = j2 * i2 + h2 * f2 + e2 * d2;
          g[b2 + 12 >> 2] = 0;
          return;
        }
        function pk(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0;
          f2 = c[e2 + 16 >> 2] | 0;
          if (!f2) {
            if (!(po(e2) | 0)) {
              g2 = c[e2 + 16 >> 2] | 0;
              h2 = 5;
            }
          } else {
            g2 = f2;
            h2 = 5;
          }
          a:
            do
              if ((h2 | 0) == 5) {
                f2 = c[e2 + 20 >> 2] | 0;
                if ((g2 - f2 | 0) >>> 0 < d2 >>> 0) {
                  yb[c[e2 + 36 >> 2] & 63](e2, b2, d2) | 0;
                  break;
                }
                b:
                  do
                    if ((a[e2 + 75 >> 0] | 0) > -1) {
                      h2 = d2;
                      while (1) {
                        if (!h2) {
                          g2 = d2;
                          break b;
                        }
                        g2 = h2 + -1 | 0;
                        if ((a[b2 + g2 >> 0] | 0) == 10)
                          break;
                        else
                          h2 = g2;
                      }
                      if ((yb[c[e2 + 36 >> 2] & 63](e2, b2, h2) | 0) >>> 0 < h2 >>> 0)
                        break a;
                      g2 = d2 - h2 | 0;
                      b2 = b2 + h2 | 0;
                      f2 = c[e2 + 20 >> 2] | 0;
                    } else
                      g2 = d2;
                  while (0);
                Lm(f2 | 0, b2 | 0, g2 | 0) | 0;
                c[e2 + 20 >> 2] = (c[e2 + 20 >> 2] | 0) + g2;
              }
            while (0);
          return;
        }
        function qk(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          d2 = c[b2 + 52 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 56 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 52 >> 2] = 0;
          }
          a[b2 + 56 >> 0] = 1;
          c[b2 + 52 >> 2] = 0;
          c[b2 + 44 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          d2 = c[b2 + 32 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 36 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 32 >> 2] = 0;
          }
          a[b2 + 36 >> 0] = 1;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2) {
            a[b2 + 16 >> 0] = 1;
            c[b2 + 12 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            b2 = b2 + 8 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 16 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 12 >> 2] = 0;
          a[b2 + 16 >> 0] = 1;
          c[b2 + 12 >> 2] = 0;
          c[b2 + 4 >> 2] = 0;
          b2 = b2 + 8 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function rk(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          while (1) {
            b2 = ic(144) | 0;
            if (b2 | 0)
              break;
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              b2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          c[b2 >> 2] = 4952;
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          a[b2 + 40 >> 0] = 1;
          c[b2 + 36 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          a[b2 + 60 >> 0] = 1;
          c[b2 + 56 >> 2] = 0;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          a[b2 + 80 >> 0] = 1;
          c[b2 + 76 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 72 >> 2] = 0;
          c[b2 + 92 >> 2] = e2;
          g[b2 + 96 >> 2] = 0;
          a[b2 + 140 >> 0] = 1;
          c[b2 + 136 >> 2] = 0;
          c[b2 + 128 >> 2] = 0;
          c[b2 + 132 >> 2] = 0;
          c[b2 + 108 >> 2] = d2;
          c[b2 + 112 >> 2] = 0;
          c[b2 + 116 >> 2] = 2;
          c[b2 + 120 >> 2] = 1;
          g[b2 + 104 >> 2] = 0;
          g[b2 + 100 >> 2] = 0;
          return b2 | 0;
        }
        function sk(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          if (a[21968] | 0) {
            d2 = b2 + 92 | 0;
            b2 = 22144;
            e2 = b2 + 84 | 0;
            do {
              c[b2 >> 2] = c[d2 >> 2];
              b2 = b2 + 4 | 0;
              d2 = d2 + 4 | 0;
            } while ((b2 | 0) < (e2 | 0));
            return 22144;
          }
          a[21968] = 1;
          g[5536] = 0.6000000238418579;
          g[5537] = 1;
          g[5538] = 0.30000001192092896;
          g[5539] = 0.01666666753590107;
          g[5540] = 0;
          g[5542] = 20;
          c[5541] = 10;
          g[5544] = 0.20000000298023224;
          g[5545] = 0.20000000298023224;
          g[5546] = 0;
          g[5543] = 1;
          c[5547] = 1;
          g[5548] = -0.03999999910593033;
          g[5549] = 0.10000000149011612;
          g[5550] = 0;
          g[5551] = 0.8500000238418579;
          c[5552] = 260;
          c[5553] = 2;
          c[5554] = 128;
          g[5555] = 100;
          g[5556] = 10000000150474662e14;
          d2 = b2 + 92 | 0;
          b2 = 22144;
          e2 = b2 + 84 | 0;
          do {
            c[b2 >> 2] = c[d2 >> 2];
            b2 = b2 + 4 | 0;
            d2 = d2 + 4 | 0;
          } while ((b2 | 0) < (e2 | 0));
          return 22144;
        }
        function tk(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          if (a[22016] | 0) {
            d2 = b2 + 92 | 0;
            b2 = 22388;
            e2 = b2 + 84 | 0;
            do {
              c[b2 >> 2] = c[d2 >> 2];
              b2 = b2 + 4 | 0;
              d2 = d2 + 4 | 0;
            } while ((b2 | 0) < (e2 | 0));
            return 22388;
          }
          a[22016] = 1;
          g[5597] = 0.6000000238418579;
          g[5598] = 1;
          g[5599] = 0.30000001192092896;
          g[5600] = 0.01666666753590107;
          g[5601] = 0;
          g[5603] = 20;
          c[5602] = 10;
          g[5605] = 0.20000000298023224;
          g[5606] = 0.20000000298023224;
          g[5607] = 0;
          g[5604] = 1;
          c[5608] = 1;
          g[5609] = -0.03999999910593033;
          g[5610] = 0.10000000149011612;
          g[5611] = 0;
          g[5612] = 0.8500000238418579;
          c[5613] = 260;
          c[5614] = 2;
          c[5615] = 128;
          g[5616] = 100;
          g[5617] = 10000000150474662e14;
          d2 = b2 + 92 | 0;
          b2 = 22388;
          e2 = b2 + 84 | 0;
          do {
            c[b2 >> 2] = c[d2 >> 2];
            b2 = b2 + 4 | 0;
            d2 = d2 + 4 | 0;
          } while ((b2 | 0) < (e2 | 0));
          return 22388;
        }
        function uk(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          e2 = i;
          i = i + 16 | 0;
          Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](e2, b2, d2);
          c[a2 >> 2] = c[e2 >> 2];
          c[a2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[e2 + 12 >> 2];
          j2 = +g[d2 >> 2];
          h2 = +g[d2 + 4 >> 2];
          f2 = +g[d2 + 8 >> 2];
          l2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : j2;
          k2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : h2;
          f2 = j2 * j2 + h2 * h2 + f2 * f2 < 14210854715202004e-30 ? -1 : f2;
          h2 = 1 / +G(+(f2 * f2 + (l2 * l2 + k2 * k2)));
          j2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          g[a2 >> 2] = +g[a2 >> 2] + j2 * h2 * l2;
          g[a2 + 4 >> 2] = j2 * h2 * k2 + +g[a2 + 4 >> 2];
          g[a2 + 8 >> 2] = j2 * h2 * f2 + +g[a2 + 8 >> 2];
          i = e2;
          return;
        }
        function vk(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          d2 = c[b2 + 188 >> 2] | 0;
          if (d2 | 0) {
            g2 = c[a2 + 68 >> 2] | 0;
            g2 = ob[c[(c[g2 >> 2] | 0) + 36 >> 2] & 127](g2) | 0;
            Ub[c[(c[g2 >> 2] | 0) + 40 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
            g2 = c[a2 + 68 >> 2] | 0;
            Ub[c[(c[g2 >> 2] | 0) + 12 >> 2] & 127](g2, d2, c[a2 + 24 >> 2] | 0);
            c[b2 + 188 >> 2] = 0;
          }
          f2 = c[a2 + 8 >> 2] | 0;
          if ((f2 | 0) <= 0)
            return;
          g2 = c[a2 + 16 >> 2] | 0;
          d2 = 0;
          while (1) {
            e2 = g2 + (d2 << 2) | 0;
            if ((c[e2 >> 2] | 0) == (b2 | 0))
              break;
            d2 = d2 + 1 | 0;
            if ((d2 | 0) >= (f2 | 0)) {
              h2 = 9;
              break;
            }
          }
          if ((h2 | 0) == 9)
            return;
          if ((d2 | 0) >= (f2 | 0))
            return;
          c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
          c[(c[a2 + 16 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
          c[a2 + 8 >> 2] = f2 + -1;
          return;
        }
        function wk(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          if (a[22032] | 0) {
            d2 = b2 + 92 | 0;
            b2 = 22488;
            e2 = b2 + 84 | 0;
            do {
              c[b2 >> 2] = c[d2 >> 2];
              b2 = b2 + 4 | 0;
              d2 = d2 + 4 | 0;
            } while ((b2 | 0) < (e2 | 0));
            return 22488;
          }
          a[22032] = 1;
          g[5622] = 0.6000000238418579;
          g[5623] = 1;
          g[5624] = 0.30000001192092896;
          g[5625] = 0.01666666753590107;
          g[5626] = 0;
          g[5628] = 20;
          c[5627] = 10;
          g[5630] = 0.20000000298023224;
          g[5631] = 0.20000000298023224;
          g[5632] = 0;
          g[5629] = 1;
          c[5633] = 1;
          g[5634] = -0.03999999910593033;
          g[5635] = 0.10000000149011612;
          g[5636] = 0;
          g[5637] = 0.8500000238418579;
          c[5638] = 260;
          c[5639] = 2;
          c[5640] = 128;
          g[5641] = 100;
          g[5642] = 10000000150474662e14;
          d2 = b2 + 92 | 0;
          b2 = 22488;
          e2 = b2 + 84 | 0;
          do {
            c[b2 >> 2] = c[d2 >> 2];
            b2 = b2 + 4 | 0;
            d2 = d2 + 4 | 0;
          } while ((b2 | 0) < (e2 | 0));
          return 22488;
        }
        function xk(a2, b2, d2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0;
          while (1) {
            g2 = c[a2 + 12 >> 2] | 0;
            if (!(((e[f2 >> 1] | 0) >= (e[a2 >> 1] | 0) ? (e[d2 >> 1] | 0) <= (e[a2 + 6 >> 1] | 0) : 0) & (e[d2 + 4 >> 1] | 0) <= (e[a2 + 10 >> 1] | 0) & (e[f2 + 4 >> 1] | 0) >= (e[a2 + 4 >> 1] | 0) & (e[d2 + 2 >> 1] | 0) <= (e[a2 + 8 >> 1] | 0) & (e[f2 + 2 >> 1] | 0) >= (e[a2 + 2 >> 1] | 0))) {
              h2 = 6;
              break;
            }
            if ((g2 | 0) > -1)
              break;
            i2 = a2 + 16 | 0;
            xk(i2, b2, d2, f2);
            g2 = c[a2 + 28 >> 2] | 0;
            a2 = (g2 | 0) > -1 ? a2 + 32 | 0 : i2 + (0 - g2 << 4) | 0;
          }
          if ((h2 | 0) == 6)
            return;
          Ub[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, g2 >> 21, g2 & 2097151);
          return;
        }
        function yk(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0;
          g[b2 + 20 >> 2] = 0;
          g[b2 + 24 >> 2] = 0;
          a[b2 + 248 >> 0] = 0;
          a[b2 + 249 >> 0] = 0;
          g[b2 + 252 >> 2] = 0;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 68 + 4 >> 2] = 0;
          c[b2 + 68 + 8 >> 2] = 0;
          c[b2 + 68 + 12 >> 2] = 0;
          b2 = c[(c[b2 + 8 >> 2] | 0) + 324 >> 2] | 0;
          if ((c[(ob[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2) | 0) + 4 >> 2] | 0) <= 0)
            return;
          do {
            f2 = c[b2 >> 2] | 0;
            h2 = c[f2 + 12 >> 2] | 0;
            f2 = c[c[(ob[c[f2 + 28 >> 2] & 127](b2) | 0) + 12 >> 2] >> 2] | 0;
            e2 = c[(c[(ob[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2) | 0) + 12 >> 2] | 0) + 4 >> 2] | 0;
            sb[h2 & 31](b2, f2, e2, c[d2 + 24 >> 2] | 0) | 0;
          } while ((c[(ob[c[(c[b2 >> 2] | 0) + 28 >> 2] & 127](b2) | 0) + 4 >> 2] | 0) > 0);
          return;
        }
        function zk(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          c[6042] = (c[6042] | 0) + -1;
          mb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 127](a2, b2);
          e2 = c[b2 + 800 >> 2] | 0;
          d2 = (c[a2 + 12 >> 2] | 0) + -1 | 0;
          g2 = c[a2 + 20 >> 2] | 0;
          f2 = c[g2 + (e2 << 2) >> 2] | 0;
          c[g2 + (e2 << 2) >> 2] = c[g2 + (d2 << 2) >> 2];
          c[(c[a2 + 20 >> 2] | 0) + (d2 << 2) >> 2] = f2;
          c[(c[(c[a2 + 20 >> 2] | 0) + (e2 << 2) >> 2] | 0) + 800 >> 2] = e2;
          c[a2 + 12 >> 2] = d2;
          a2 = c[a2 + 68 >> 2] | 0;
          if (!b2)
            return;
          g2 = c[a2 + 16 >> 2] | 0;
          if (g2 >>> 0 <= b2 >>> 0 ? (g2 + (S(c[a2 >> 2] | 0, c[a2 + 4 >> 2] | 0) | 0) | 0) >>> 0 > b2 >>> 0 : 0) {
            c[b2 >> 2] = c[a2 + 12 >> 2];
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + 1;
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function Ak(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          k2 = c[b2 + 8 >> 2] | 0;
          if ((k2 | 0) <= 0)
            return;
          j2 = c[b2 + 16 >> 2] | 0;
          i2 = 0;
          b2 = 0;
          do {
            h2 = c[j2 + (i2 << 2) >> 2] | 0;
            if (!(c[h2 + 204 >> 2] & 3)) {
              g2 = c[a2 + 16 >> 2] | 0;
              e2 = g2 + (b2 << 3) | 0;
              d2 = c[e2 >> 2] | 0;
              if ((d2 | 0) == (b2 | 0))
                d2 = b2;
              else {
                f2 = d2;
                do {
                  d2 = g2 + (f2 << 3) | 0;
                  c[e2 >> 2] = c[d2 >> 2];
                  d2 = c[d2 >> 2] | 0;
                  e2 = g2 + (d2 << 3) | 0;
                  f2 = c[e2 >> 2] | 0;
                } while ((d2 | 0) != (f2 | 0));
              }
              c[h2 + 208 >> 2] = d2;
              c[g2 + (b2 << 3) + 4 >> 2] = i2;
              c[h2 + 212 >> 2] = -1;
              b2 = b2 + 1 | 0;
            } else {
              c[h2 + 208 >> 2] = -1;
              c[h2 + 212 >> 2] = -2;
            }
            i2 = i2 + 1 | 0;
          } while ((i2 | 0) != (k2 | 0));
          return;
        }
        function Bk(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0, n2 = 0;
          if ((e2 | 0) <= 0)
            return;
          f2 = 0;
          do {
            n2 = +g[b2 + (f2 << 4) >> 2];
            m2 = +g[b2 + (f2 << 4) + 4 >> 2];
            j2 = +g[b2 + (f2 << 4) + 8 >> 2];
            k2 = n2 * +g[a2 + 60 >> 2] + m2 * +g[a2 + 64 >> 2] + j2 * +g[a2 + 68 >> 2];
            l2 = n2 * +g[a2 + 76 >> 2] + m2 * +g[a2 + 80 >> 2] + j2 * +g[a2 + 84 >> 2];
            j2 = n2 * +g[a2 + 92 >> 2] + m2 * +g[a2 + 96 >> 2] + j2 * +g[a2 + 100 >> 2];
            h2 = d2 + (f2 << 4) | 0;
            i2 = a2 + 60 + ((k2 < l2 ? l2 < j2 ? 2 : 1 : k2 < j2 ? 2 : 0) << 4) | 0;
            c[h2 >> 2] = c[i2 >> 2];
            c[h2 + 4 >> 2] = c[i2 + 4 >> 2];
            c[h2 + 8 >> 2] = c[i2 + 8 >> 2];
            c[h2 + 12 >> 2] = c[i2 + 12 >> 2];
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) != (e2 | 0));
          return;
        }
        function Ck(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(119) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          c[e2 + 8 >> 2] = 0;
          c[e2 + 12 >> 2] = -1;
          c[e2 + 16 >> 2] = 1065353216;
          c[e2 + 20 >> 2] = 1065353216;
          c[e2 + 24 >> 2] = 1065353216;
          g[e2 + 28 >> 2] = 0;
          g[e2 + 48 >> 2] = 0.03999999910593033;
          c[e2 + 56 >> 2] = 0;
          c[e2 + 60 >> 2] = 1065353216;
          c[e2 + 64 >> 2] = 1065353216;
          c[e2 + 68 >> 2] = 1065353216;
          g[e2 + 72 >> 2] = 0;
          c[e2 + 76 >> 2] = -1082130432;
          c[e2 + 80 >> 2] = -1082130432;
          c[e2 + 84 >> 2] = -1082130432;
          g[e2 + 88 >> 2] = 0;
          a[e2 + 92 >> 0] = 0;
          c[e2 >> 2] = 7612;
          c[e2 + 96 >> 2] = b2;
          c[e2 + 4 >> 2] = 3;
          if (!d2)
            return e2 | 0;
          zj(e2);
          return e2 | 0;
        }
        function Dk(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          switch (b2 | 0) {
            case 0: {
              c[d2 >> 2] = 1065353216;
              c[d2 + 4 >> 2] = 0;
              c[d2 + 8 >> 2] = 0;
              g[d2 + 12 >> 2] = 0;
              return;
            }
            case 1: {
              c[d2 >> 2] = -1082130432;
              c[d2 + 4 >> 2] = 0;
              c[d2 + 8 >> 2] = 0;
              g[d2 + 12 >> 2] = 0;
              return;
            }
            case 2: {
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 1065353216;
              c[d2 + 8 >> 2] = 0;
              g[d2 + 12 >> 2] = 0;
              return;
            }
            case 3: {
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = -1082130432;
              c[d2 + 8 >> 2] = 0;
              g[d2 + 12 >> 2] = 0;
              return;
            }
            case 4: {
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 0;
              c[d2 + 8 >> 2] = 1065353216;
              g[d2 + 12 >> 2] = 0;
              return;
            }
            case 5: {
              c[d2 >> 2] = 0;
              c[d2 + 4 >> 2] = 0;
              c[d2 + 8 >> 2] = -1082130432;
              g[d2 + 12 >> 2] = 0;
              return;
            }
            default:
              return;
          }
        }
        function Ek(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          h2 = +g[a2 + 60 >> 2];
          k2 = +g[a2 + 76 >> 2] - h2;
          j2 = +g[a2 + 64 >> 2];
          i2 = +g[a2 + 80 >> 2] - j2;
          l2 = +g[a2 + 68 >> 2];
          m2 = +g[a2 + 84 >> 2] - l2;
          h2 = +g[a2 + 92 >> 2] - h2;
          j2 = +g[a2 + 96 >> 2] - j2;
          l2 = +g[a2 + 100 >> 2] - l2;
          g[d2 + 12 >> 2] = 0;
          f2 = 1 / +G(+((k2 * j2 - i2 * h2) * (k2 * j2 - i2 * h2) + ((i2 * l2 - m2 * j2) * (i2 * l2 - m2 * j2) + (m2 * h2 - k2 * l2) * (m2 * h2 - k2 * l2))));
          g[d2 >> 2] = (i2 * l2 - m2 * j2) * f2;
          g[d2 + 4 >> 2] = (m2 * h2 - k2 * l2) * f2;
          g[d2 + 8 >> 2] = (k2 * j2 - i2 * h2) * f2;
          c[e2 >> 2] = c[a2 + 60 >> 2];
          c[e2 + 4 >> 2] = c[a2 + 60 + 4 >> 2];
          c[e2 + 8 >> 2] = c[a2 + 60 + 8 >> 2];
          c[e2 + 12 >> 2] = c[a2 + 60 + 12 >> 2];
          return;
        }
        function Fk(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[b2 >> 2] = 9260;
          if (a[b2 + 56 >> 0] | 0 ? (d2 = c[b2 + 60 >> 2] | 0, d2 | 0) : 0) {
            e2 = c[b2 + 4 >> 2] | 0;
            mb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
          }
          d2 = c[b2 + 48 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 52 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 48 >> 2] = 0;
          }
          a[b2 + 52 >> 0] = 1;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 40 >> 2] = 0;
          c[b2 + 44 >> 2] = 0;
          d2 = c[b2 + 28 >> 2] | 0;
          if (!d2) {
            a[b2 + 32 >> 0] = 1;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 20 >> 2] = 0;
            e2 = b2 + 24 | 0;
            c[e2 >> 2] = 0;
            return;
          }
          if (a[b2 + 32 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 28 >> 2] = 0;
          a[b2 + 32 >> 0] = 1;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 20 >> 2] = 0;
          e2 = b2 + 24 | 0;
          c[e2 >> 2] = 0;
          return;
        }
        function Gk(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          d2 = i;
          i = i + 64 | 0;
          Sg(d2, b2, a2 + 68 | 0);
          c[a2 + 4 >> 2] = c[d2 >> 2];
          c[a2 + 4 + 4 >> 2] = c[d2 + 4 >> 2];
          c[a2 + 4 + 8 >> 2] = c[d2 + 8 >> 2];
          c[a2 + 4 + 12 >> 2] = c[d2 + 12 >> 2];
          c[a2 + 20 >> 2] = c[d2 + 16 >> 2];
          c[a2 + 20 + 4 >> 2] = c[d2 + 16 + 4 >> 2];
          c[a2 + 20 + 8 >> 2] = c[d2 + 16 + 8 >> 2];
          c[a2 + 20 + 12 >> 2] = c[d2 + 16 + 12 >> 2];
          c[a2 + 36 >> 2] = c[d2 + 32 >> 2];
          c[a2 + 36 + 4 >> 2] = c[d2 + 32 + 4 >> 2];
          c[a2 + 36 + 8 >> 2] = c[d2 + 32 + 8 >> 2];
          c[a2 + 36 + 12 >> 2] = c[d2 + 32 + 12 >> 2];
          c[a2 + 52 >> 2] = c[d2 + 48 >> 2];
          c[a2 + 52 + 4 >> 2] = c[d2 + 48 + 4 >> 2];
          c[a2 + 52 + 8 >> 2] = c[d2 + 48 + 8 >> 2];
          c[a2 + 52 + 12 >> 2] = c[d2 + 48 + 12 >> 2];
          i = d2;
          return;
        }
        function Hk(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          if (!b2)
            return;
          d2 = c[b2 + 156 >> 2] | 0;
          if (d2 | 0) {
            if (!((a[b2 + 160 >> 0] & 1) == 0 | (d2 | 0) == 0)) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 156 >> 2] = 0;
          }
          a[b2 + 160 >> 0] = 1;
          c[b2 + 156 >> 2] = 0;
          c[b2 + 148 >> 2] = 0;
          c[b2 + 152 >> 2] = 0;
          d2 = c[b2 + 136 >> 2] | 0;
          if (d2 | 0) {
            if (!((a[b2 + 140 >> 0] & 1) == 0 | (d2 | 0) == 0)) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 136 >> 2] = 0;
          }
          a[b2 + 140 >> 0] = 1;
          c[b2 + 136 >> 2] = 0;
          c[b2 + 128 >> 2] = 0;
          c[b2 + 132 >> 2] = 0;
          d2 = c[b2 + 116 >> 2] | 0;
          if (d2 | 0) {
            if (!((a[b2 + 120 >> 0] & 1) == 0 | (d2 | 0) == 0)) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 116 >> 2] = 0;
          }
          a[b2 + 120 >> 0] = 1;
          Rc(b2);
          return;
        }
        function Ik(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          i2 = +g[a2 + 60 >> 2];
          k2 = +g[a2 + 76 >> 2] - i2;
          j2 = +g[a2 + 64 >> 2];
          f2 = +g[a2 + 80 >> 2] - j2;
          d2 = +g[a2 + 68 >> 2];
          h2 = +g[a2 + 84 >> 2] - d2;
          i2 = +g[a2 + 92 >> 2] - i2;
          j2 = +g[a2 + 96 >> 2] - j2;
          d2 = +g[a2 + 100 >> 2] - d2;
          g[c2 + 12 >> 2] = 0;
          e2 = 1 / +G(+((k2 * j2 - f2 * i2) * (k2 * j2 - f2 * i2) + ((f2 * d2 - h2 * j2) * (f2 * d2 - h2 * j2) + (h2 * i2 - k2 * d2) * (h2 * i2 - k2 * d2))));
          g[c2 >> 2] = (f2 * d2 - h2 * j2) * e2;
          g[c2 + 4 >> 2] = (h2 * i2 - k2 * d2) * e2;
          g[c2 + 8 >> 2] = (k2 * j2 - f2 * i2) * e2;
          if (!b2)
            return;
          g[c2 >> 2] = -((f2 * d2 - h2 * j2) * e2);
          g[c2 + 4 >> 2] = -((h2 * i2 - k2 * d2) * e2);
          g[c2 + 8 >> 2] = -((k2 * j2 - f2 * i2) * e2);
          return;
        }
        function Jk(a2, b2, c2, d2, e2, f2, h2, i2, j2, k2) {
          a2 = +a2;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          e2 = +e2;
          f2 = +f2;
          h2 = +h2;
          i2 = +i2;
          j2 = +j2;
          k2 = k2 | 0;
          if (!(((h2 - d2) * b2 - (i2 - e2) * a2) * f2 + (((i2 - e2) * c2 - (j2 - f2) * b2) * d2 + ((j2 - f2) * a2 - (h2 - d2) * c2) * e2) < 0)) {
            k2 = 0;
            return k2 | 0;
          }
          if ((h2 - d2) * d2 + (i2 - e2) * e2 + (j2 - f2) * f2 > 0) {
            g[k2 >> 2] = +G(+(d2 * d2 + e2 * e2 + f2 * f2));
            k2 = 1;
            return k2 | 0;
          }
          if ((h2 - d2) * h2 + (i2 - e2) * i2 + (j2 - f2) * j2 < 0) {
            g[k2 >> 2] = +G(+(h2 * h2 + i2 * i2 + j2 * j2));
            k2 = 1;
            return k2 | 0;
          } else {
            j2 = ((h2 * h2 + i2 * i2 + j2 * j2) * (d2 * d2 + e2 * e2 + f2 * f2) - (h2 * d2 + i2 * e2 + j2 * f2) * (h2 * d2 + i2 * e2 + j2 * f2)) / ((h2 - d2) * (h2 - d2) + (i2 - e2) * (i2 - e2) + (j2 - f2) * (j2 - f2));
            g[k2 >> 2] = +G(+(j2 > 0 ? j2 : 0));
            k2 = 1;
            return k2 | 0;
          }
          return 0;
        }
        function Kk(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0;
          h2 = c[a2 + 760 >> 2] | 0;
          g2 = c[a2 + 792 >> 2] | 0;
          if ((g2 | 0) <= 0) {
            h2 = 0;
            return h2 | 0;
          }
          f2 = c[a2 + 800 >> 2] | 0;
          a2 = 0;
          while (1) {
            i2 = c[f2 + (a2 * 44 | 0) + 8 >> 2] | 0;
            if (((i2 | 0) == (h2 + (e2 * 104 | 0) | 0) | ((i2 | 0) == (h2 + (b2 * 104 | 0) | 0) | (i2 | 0) == (h2 + (d2 * 104 | 0) | 0)) ? (i2 = c[f2 + (a2 * 44 | 0) + 12 >> 2] | 0, (i2 | 0) == (h2 + (e2 * 104 | 0) | 0) | ((i2 | 0) == (h2 + (b2 * 104 | 0) | 0) | (i2 | 0) == (h2 + (d2 * 104 | 0) | 0))) : 0) ? (i2 = c[f2 + (a2 * 44 | 0) + 16 >> 2] | 0, (i2 | 0) == (h2 + (e2 * 104 | 0) | 0) | ((i2 | 0) == (h2 + (b2 * 104 | 0) | 0) | (i2 | 0) == (h2 + (d2 * 104 | 0) | 0))) : 0) {
              a2 = 1;
              f2 = 7;
              break;
            }
            a2 = a2 + 1 | 0;
            if ((a2 | 0) >= (g2 | 0)) {
              a2 = 0;
              f2 = 7;
              break;
            }
          }
          if ((f2 | 0) == 7)
            return a2 | 0;
          return 0;
        }
        function Lk(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          d2 = +g[a2 + 388 >> 2];
          f2 = +g[a2 + 392 >> 2];
          h2 = +g[b2 + 4 >> 2] * f2;
          i2 = +g[a2 + 396 >> 2];
          j2 = +g[b2 + 8 >> 2] * i2;
          g[a2 + 452 >> 2] = +g[a2 + 452 >> 2] + +g[b2 >> 2] * d2;
          g[a2 + 456 >> 2] = +g[a2 + 456 >> 2] + h2;
          g[a2 + 460 >> 2] = +g[a2 + 460 >> 2] + j2;
          d2 = +g[b2 >> 2] * d2;
          f2 = +g[b2 + 4 >> 2] * f2;
          i2 = +g[b2 + 8 >> 2] * i2;
          j2 = +g[c2 + 4 >> 2];
          h2 = +g[c2 + 8 >> 2];
          k2 = +g[c2 >> 2];
          e2 = (h2 * d2 - k2 * i2) * +g[a2 + 588 >> 2];
          d2 = (k2 * f2 - j2 * d2) * +g[a2 + 592 >> 2];
          g[a2 + 468 >> 2] = +g[a2 + 468 >> 2] + (j2 * i2 - h2 * f2) * +g[a2 + 584 >> 2];
          g[a2 + 472 >> 2] = +g[a2 + 472 >> 2] + e2;
          g[a2 + 476 >> 2] = +g[a2 + 476 >> 2] + d2;
          return;
        }
        function Mk(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(119) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = -1;
          c[d2 + 16 >> 2] = 1065353216;
          c[d2 + 20 >> 2] = 1065353216;
          c[d2 + 24 >> 2] = 1065353216;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 48 >> 2] = 0.03999999910593033;
          c[d2 + 56 >> 2] = 0;
          c[d2 + 60 >> 2] = 1065353216;
          c[d2 + 64 >> 2] = 1065353216;
          c[d2 + 68 >> 2] = 1065353216;
          g[d2 + 72 >> 2] = 0;
          c[d2 + 76 >> 2] = -1082130432;
          c[d2 + 80 >> 2] = -1082130432;
          c[d2 + 84 >> 2] = -1082130432;
          g[d2 + 88 >> 2] = 0;
          a[d2 + 92 >> 0] = 0;
          c[d2 >> 2] = 7612;
          c[d2 + 96 >> 2] = b2;
          c[d2 + 4 >> 2] = 3;
          zj(d2);
          return d2 | 0;
        }
        function Nk(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          i2 = c[a2 + 100 >> 2] | 0;
          j2 = c[a2 + 108 >> 2] | 0;
          f2 = +g[j2 + (((b2 | 0) % (i2 | 0) | 0) << 4) + 4 >> 2] * +g[a2 + 20 >> 2];
          h2 = +g[j2 + (((b2 | 0) % (i2 | 0) | 0) << 4) + 8 >> 2] * +g[a2 + 24 >> 2];
          g[d2 >> 2] = +g[j2 + (((b2 | 0) % (i2 | 0) | 0) << 4) >> 2] * +g[a2 + 16 >> 2];
          g[d2 + 4 >> 2] = f2;
          g[d2 + 8 >> 2] = h2;
          g[d2 + 12 >> 2] = 0;
          d2 = c[a2 + 108 >> 2] | 0;
          h2 = +g[d2 + (((b2 + 1 | 0) % (i2 | 0) | 0) << 4) + 4 >> 2] * +g[a2 + 20 >> 2];
          f2 = +g[d2 + (((b2 + 1 | 0) % (i2 | 0) | 0) << 4) + 8 >> 2] * +g[a2 + 24 >> 2];
          g[e2 >> 2] = +g[d2 + (((b2 + 1 | 0) % (i2 | 0) | 0) << 4) >> 2] * +g[a2 + 16 >> 2];
          g[e2 + 4 >> 2] = h2;
          g[e2 + 8 >> 2] = f2;
          g[e2 + 12 >> 2] = 0;
          return;
        }
        function Ok(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0;
          e2 = i;
          i = i + 32 | 0;
          d2 = c[a2 + 184 >> 2] | 0;
          if (+g[d2 + 4 >> 2] == 0) {
            d2 = 0;
            i = e2;
            return d2 | 0;
          }
          b2 = c[b2 >> 2] | 0;
          if (!(Jb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 31](d2, c[b2 + 188 >> 2] | 0) | 0)) {
            d2 = 1;
            i = e2;
            return d2 | 0;
          }
          h2 = c[a2 + 192 >> 2] | 0;
          j2 = c[b2 + 192 >> 2] | 0;
          d2 = c[a2 + 184 >> 2] | 0;
          f2 = +g[a2 + 188 >> 2];
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = j2;
          c[e2 + 8 >> 2] = b2;
          c[e2 + 12 >> 2] = b2 + 4;
          c[e2 + 16 >> 2] = -1;
          c[e2 + 20 >> 2] = -1;
          pc(h2, a2 + 36 | 0, a2 + 100 | 0, e2, d2, f2);
          d2 = 1;
          i = e2;
          return d2 | 0;
        }
        function Pk(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0, j2 = 0;
          f2 = c[d2 >> 2] | 0;
          f2 = Jb[c[(c[f2 >> 2] | 0) + 56 >> 2] & 31](f2, 76) | 0;
          h2 = c[d2 + 4 >> 2] | 0;
          j2 = c[b2 + 12 >> 2] | 0;
          i2 = c[b2 + 8 >> 2] | 0;
          g2 = c[b2 + 16 >> 2] | 0;
          e2 = c[b2 + 20 >> 2] | 0;
          c[f2 + 4 >> 2] = c[d2 >> 2];
          c[f2 >> 2] = 9260;
          c[f2 + 8 >> 2] = j2;
          c[f2 + 12 >> 2] = i2;
          a[f2 + 32 >> 0] = 1;
          c[f2 + 28 >> 2] = 0;
          c[f2 + 20 >> 2] = 0;
          c[f2 + 24 >> 2] = 0;
          a[f2 + 52 >> 0] = 1;
          c[f2 + 48 >> 2] = 0;
          c[f2 + 40 >> 2] = 0;
          c[f2 + 44 >> 2] = 0;
          a[f2 + 56 >> 0] = 0;
          c[f2 + 60 >> 2] = h2;
          a[f2 + 64 >> 0] = 0;
          c[f2 + 68 >> 2] = g2;
          c[f2 + 72 >> 2] = e2;
          return f2 | 0;
        }
        function Qk(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          d2 = i;
          i = i + 16 | 0;
          c[d2 >> 2] = c[b2 >> 2];
          c[d2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[b2 + 12 >> 2];
          b2 = c[a2 + 8 >> 2] | 0;
          c[b2 + 300 >> 2] = (c[b2 + 300 >> 2] | 0) + 1;
          c[b2 + 4 >> 2] = 1065353216;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 8 + 4 >> 2] = 0;
          c[b2 + 8 + 8 >> 2] = 0;
          c[b2 + 8 + 12 >> 2] = 0;
          c[b2 + 24 >> 2] = 1065353216;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 28 + 4 >> 2] = 0;
          c[b2 + 28 + 8 >> 2] = 0;
          c[b2 + 28 + 12 >> 2] = 0;
          c[b2 + 44 >> 2] = 1065353216;
          c[b2 + 48 >> 2] = 0;
          c[b2 + 52 >> 2] = c[d2 >> 2];
          c[b2 + 52 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 52 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 52 + 12 >> 2] = c[d2 + 12 >> 2];
          i = d2;
          return;
        }
        function Rk(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          do
            switch (b2 | 0) {
              case 0: {
                b2 = 1;
                f2 = 0;
                break;
              }
              case 1: {
                b2 = 2;
                f2 = 0;
                break;
              }
              case 2: {
                b2 = 3;
                f2 = 1;
                break;
              }
              case 3: {
                f2 = 2;
                break;
              }
              case 4: {
                f2 = 0;
                break;
              }
              case 5: {
                f2 = 1;
                break;
              }
              case 6: {
                f2 = 2;
                break;
              }
              case 7: {
                f2 = 3;
                break;
              }
              case 8: {
                b2 = 5;
                f2 = 4;
                break;
              }
              case 9: {
                b2 = 6;
                f2 = 4;
                break;
              }
              case 10: {
                b2 = 7;
                f2 = 5;
                break;
              }
              case 11: {
                b2 = 7;
                f2 = 6;
                break;
              }
              default: {
                b2 = 0;
                f2 = 0;
              }
            }
          while (0);
          Ub[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, f2, d2);
          Ub[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, b2, e2);
          return;
        }
        function Sk(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          k2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          h2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          d2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          m2 = (k2 + +g[a2 + 32 >> 2]) / +g[a2 + 16 >> 2];
          j2 = (h2 + +g[a2 + 36 >> 2]) / +g[a2 + 20 >> 2];
          f2 = (d2 + +g[a2 + 40 >> 2]) / +g[a2 + 24 >> 2];
          l2 = +F(+ +g[b2 >> 2]);
          i2 = +F(+ +g[b2 + 4 >> 2]);
          e2 = +F(+ +g[b2 + 8 >> 2]);
          g[a2 + 16 >> 2] = l2;
          g[a2 + 20 >> 2] = i2;
          g[a2 + 24 >> 2] = e2;
          g[a2 + 28 >> 2] = 0;
          g[a2 + 32 >> 2] = m2 * l2 - k2;
          g[a2 + 36 >> 2] = j2 * i2 - h2;
          g[a2 + 40 >> 2] = f2 * e2 - d2;
          g[a2 + 44 >> 2] = 0;
          return;
        }
        function Tk(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          if (a[b2 + 527 >> 0] | 0) {
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            return;
          }
          c[d2 >> 2] = 3;
          c[d2 + 4 >> 2] = 3;
          j2 = c[b2 + 28 >> 2] | 0;
          i2 = c[b2 + 32 >> 2] | 0;
          qc(b2, j2 + 4 | 0, i2 + 4 | 0, j2 + 304 | 0, i2 + 304 | 0);
          if ((a[b2 + 526 >> 0] | 0 ? (e2 = c[d2 >> 2] | 0, c[d2 >> 2] = e2 + 1, f2 = c[d2 + 4 >> 2] | 0, c[d2 + 4 >> 2] = f2 + -1, h2 = +g[b2 + 456 >> 2], +g[b2 + 444 >> 2] < h2) : 0) ? +g[b2 + 448 >> 2] < h2 : 0) {
            c[d2 >> 2] = e2 + 2;
            c[d2 + 4 >> 2] = f2 + -2;
          }
          if (!(a[b2 + 525 >> 0] | 0))
            return;
          c[d2 >> 2] = (c[d2 >> 2] | 0) + 1;
          c[d2 + 4 >> 2] = (c[d2 + 4 >> 2] | 0) + -1;
          return;
        }
        function Uk(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(107) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          e2 = d2 + 4 | 0;
          c[e2 >> 2] = 35;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = -1;
          g[d2 + 16 >> 2] = 0;
          c[d2 >> 2] = 8468;
          j2 = +g[a2 >> 2];
          i2 = +g[a2 + 4 >> 2];
          h2 = +g[a2 + 8 >> 2];
          a2 = c[a2 + 12 >> 2] | 0;
          f2 = 1 / +G(+(j2 * j2 + i2 * i2 + h2 * h2));
          g[d2 + 52 >> 2] = j2 * f2;
          g[d2 + 56 >> 2] = i2 * f2;
          g[d2 + 60 >> 2] = h2 * f2;
          c[d2 + 64 >> 2] = a2;
          g[d2 + 68 >> 2] = b2;
          c[d2 + 72 >> 2] = 1065353216;
          c[d2 + 76 >> 2] = 1065353216;
          c[d2 + 80 >> 2] = 1065353216;
          g[d2 + 84 >> 2] = 0;
          c[e2 >> 2] = 28;
          return d2 | 0;
        }
        function Vk(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0;
          b2 = c[b2 + 36 >> 2] | 0;
          i2 = c[b2 + 8 >> 2] | 0;
          h2 = c[b2 + 12 >> 2] | 0;
          f2 = c[b2 + 16 >> 2] | 0;
          e2 = +g[a2 + 52 >> 2];
          d2 = +Dh(a2 + 4 | 0, +g[a2 + 36 >> 2], +g[a2 + 40 >> 2], +g[a2 + 44 >> 2], +g[i2 + 8 >> 2], +g[i2 + 12 >> 2], +g[i2 + 16 >> 2], +g[h2 + 8 >> 2], +g[h2 + 12 >> 2], +g[h2 + 16 >> 2], +g[f2 + 8 >> 2], +g[f2 + 12 >> 2], +g[f2 + 16 >> 2], e2);
          if (!(d2 > 0 & d2 < e2)) {
            i2 = a2 + 60 | 0;
            h2 = c[i2 >> 2] | 0;
            h2 = h2 + 1 | 0;
            c[i2 >> 2] = h2;
            return;
          }
          g[a2 + 52 >> 2] = d2;
          c[a2 + 56 >> 2] = b2;
          i2 = a2 + 60 | 0;
          h2 = c[i2 >> 2] | 0;
          h2 = h2 + 1 | 0;
          c[i2 >> 2] = h2;
          return;
        }
        function Wk(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0;
          a:
            do
              if (c2 >>> 0 >= 3)
                if ((c2 + -3 | 0) >>> 0 < 3)
                  switch (b2 | 0) {
                    case 2: {
                      d2 = +g[a2 + 868 + (c2 + -3 << 6) + 32 >> 2];
                      break a;
                    }
                    case 4: {
                      d2 = +g[a2 + 868 + (c2 + -3 << 6) + 36 >> 2];
                      break a;
                    }
                    case 3: {
                      d2 = +g[a2 + 868 + (c2 + -3 << 6) + 28 >> 2];
                      break a;
                    }
                    default: {
                      d2 = 0;
                      break a;
                    }
                  }
                else
                  d2 = 0;
              else
                switch (b2 | 0) {
                  case 2: {
                    d2 = +g[a2 + 756 + (c2 << 2) >> 2];
                    break a;
                  }
                  case 4: {
                    d2 = +g[a2 + 772 + (c2 << 2) >> 2];
                    break a;
                  }
                  case 3: {
                    d2 = +g[a2 + 740 + (c2 << 2) >> 2];
                    break a;
                  }
                  default: {
                    d2 = 0;
                    break a;
                  }
                }
            while (0);
          return +d2;
        }
        function Xk(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 300 >> 2] = (c[a2 + 300 >> 2] | 0) + 1;
          c[a2 + 4 >> 2] = c[b2 >> 2];
          c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
          c[a2 + 20 >> 2] = c[b2 + 16 >> 2];
          c[a2 + 20 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
          c[a2 + 20 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
          c[a2 + 20 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
          c[a2 + 36 >> 2] = c[b2 + 32 >> 2];
          c[a2 + 36 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
          c[a2 + 36 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
          c[a2 + 36 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
          c[a2 + 52 >> 2] = c[b2 + 48 >> 2];
          c[a2 + 52 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
          c[a2 + 52 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
          c[a2 + 52 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
          return;
        }
        function Yk(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](a2, b2, d2);
          if (!(+Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2) != 0))
            return;
          h2 = +g[d2 >> 2];
          f2 = +g[d2 + 4 >> 2];
          e2 = +g[d2 + 8 >> 2];
          j2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : h2;
          i2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : f2;
          e2 = h2 * h2 + f2 * f2 + e2 * e2 < 14210854715202004e-30 ? -1 : e2;
          f2 = 1 / +G(+(e2 * e2 + (j2 * j2 + i2 * i2)));
          h2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          g[a2 >> 2] = +g[a2 >> 2] + h2 * f2 * j2;
          g[a2 + 4 >> 2] = h2 * f2 * i2 + +g[a2 + 4 >> 2];
          g[a2 + 8 >> 2] = h2 * f2 * e2 + +g[a2 + 8 >> 2];
          return;
        }
        function Zk(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0;
          k2 = i;
          i = i + 16 | 0;
          h2 = +g[b2 >> 2];
          j2 = +g[b2 + 4 >> 2];
          e2 = +g[b2 + 8 >> 2];
          if (h2 * h2 + j2 * j2 + e2 * e2 > 0 ? (f2 = +g[a2 + 52 >> 2], f2 > 0) : 0) {
            c2 = 1 / +G(+(h2 * h2 + j2 * j2 + e2 * e2));
            d2 = e2 * c2 * -f2 * e2 * c2 * -f2 + (h2 * c2 * -f2 * h2 * c2 * -f2 + j2 * c2 * -f2 * j2 * c2 * -f2);
            if (d2 > 0) {
              g[k2 >> 2] = -(h2 * c2 * -f2);
              g[k2 + 4 >> 2] = -(j2 * c2 * -f2);
              g[k2 + 8 >> 2] = -(e2 * c2 * -f2);
              g[k2 + 12 >> 2] = 0;
              be(a2, k2);
            }
            g[a2 + 52 >> 2] = +G(+d2);
            i = k2;
            return;
          }
          be(a2, b2);
          i = k2;
          return;
        }
        function _k(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          b2 = i;
          i = i + 16 | 0;
          d2 = c[a2 + 8 >> 2] | 0;
          c[a2 + 132 >> 2] = c[d2 + 52 >> 2];
          c[a2 + 132 + 4 >> 2] = c[d2 + 52 + 4 >> 2];
          c[a2 + 132 + 8 >> 2] = c[d2 + 52 + 8 >> 2];
          c[a2 + 132 + 12 >> 2] = c[d2 + 52 + 12 >> 2];
          rp(a2 + 152 | 0, d2 + 52 | 0, 16) | 0;
          Jg(d2 + 4 | 0, b2);
          c[a2 + 168 >> 2] = c[b2 >> 2];
          c[a2 + 168 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 168 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 168 + 12 >> 2] = c[b2 + 12 >> 2];
          c[a2 + 184 >> 2] = c[a2 + 168 >> 2];
          c[a2 + 184 + 4 >> 2] = c[a2 + 168 + 4 >> 2];
          c[a2 + 184 + 8 >> 2] = c[a2 + 168 + 8 >> 2];
          c[a2 + 184 + 12 >> 2] = c[a2 + 168 + 12 >> 2];
          i = b2;
          return;
        }
        function $k(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, j2 = 0;
          j2 = i;
          i = i + 256 | 0;
          do
            if ((d2 | 0) > (e2 | 0) & (f2 & 73728 | 0) == 0) {
              yn(j2 | 0, b2 | 0, ((d2 - e2 | 0) >>> 0 > 256 ? 256 : d2 - e2 | 0) | 0) | 0;
              b2 = c[a2 >> 2] | 0;
              if ((d2 - e2 | 0) >>> 0 > 255) {
                h2 = d2 - e2 | 0;
                f2 = b2;
                g2 = (b2 & 32 | 0) == 0;
                while (1) {
                  if (g2) {
                    pk(j2, 256, a2);
                    b2 = c[a2 >> 2] | 0;
                  } else
                    b2 = f2;
                  h2 = h2 + -256 | 0;
                  g2 = (b2 & 32 | 0) == 0;
                  if (h2 >>> 0 <= 255)
                    break;
                  else
                    f2 = b2;
                }
                if (g2)
                  b2 = d2 - e2 & 255;
                else
                  break;
              } else if (!(b2 & 32))
                b2 = d2 - e2 | 0;
              else
                break;
              pk(j2, b2, a2);
            }
          while (0);
          i = j2;
          return;
        }
        function al(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          f2 = +g[b2 >> 2];
          d2 = +g[b2 + 4 >> 2];
          j2 = +g[b2 + 8 >> 2];
          h2 = +g[b2 + 12 >> 2];
          e2 = f2 * (2 / (f2 * f2 + d2 * d2 + j2 * j2 + h2 * h2));
          c2 = d2 * (2 / (f2 * f2 + d2 * d2 + j2 * j2 + h2 * h2));
          i2 = j2 * (2 / (f2 * f2 + d2 * d2 + j2 * j2 + h2 * h2));
          g[a2 >> 2] = 1 - (d2 * c2 + j2 * i2);
          g[a2 + 4 >> 2] = f2 * c2 - h2 * i2;
          g[a2 + 8 >> 2] = f2 * i2 + h2 * c2;
          g[a2 + 12 >> 2] = 0;
          g[a2 + 16 >> 2] = f2 * c2 + h2 * i2;
          g[a2 + 20 >> 2] = 1 - (f2 * e2 + j2 * i2);
          g[a2 + 24 >> 2] = d2 * i2 - h2 * e2;
          g[a2 + 28 >> 2] = 0;
          g[a2 + 32 >> 2] = f2 * i2 - h2 * c2;
          g[a2 + 36 >> 2] = d2 * i2 + h2 * e2;
          g[a2 + 40 >> 2] = 1 - (f2 * e2 + d2 * c2);
          g[a2 + 44 >> 2] = 0;
          return;
        }
        function bl(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          f2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 >> 2] = f2;
          if (f2 | 0)
            mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
          c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
          c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
          c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
          c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
          c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
          c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
          c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
          c[b2 + 52 >> 2] = c[a2 + 56 >> 2];
          return 16562;
        }
        function cl(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          f2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 >> 2] = f2;
          if (f2 | 0)
            mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
          c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
          c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
          c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
          c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
          c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
          c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
          c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
          c[b2 + 52 >> 2] = c[a2 + 56 >> 2];
          return 16093;
        }
        function dl(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 92 >> 2] = c[b2 >> 2];
          c[a2 + 92 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 92 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 92 + 12 >> 2] = c[b2 + 12 >> 2];
          c[a2 + 108 >> 2] = c[b2 + 16 >> 2];
          c[a2 + 108 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
          c[a2 + 108 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
          c[a2 + 108 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
          c[a2 + 124 >> 2] = c[b2 + 32 >> 2];
          c[a2 + 124 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
          c[a2 + 124 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
          c[a2 + 124 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
          c[a2 + 140 >> 2] = c[b2 + 48 >> 2];
          c[a2 + 140 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
          c[a2 + 140 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
          c[a2 + 140 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
          return;
        }
        function el(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          f2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 >> 2] = f2;
          if (f2 | 0)
            mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
          c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
          c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
          c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
          c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
          c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
          c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
          c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
          c[b2 + 52 >> 2] = c[a2 + 72 >> 2];
          return 16325;
        }
        function fl(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 4 >> 2] = c[b2 >> 2];
          c[a2 + 4 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 4 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 4 + 12 >> 2] = c[b2 + 12 >> 2];
          c[a2 + 20 >> 2] = c[b2 + 16 >> 2];
          c[a2 + 20 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
          c[a2 + 20 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
          c[a2 + 20 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
          c[a2 + 36 >> 2] = c[b2 + 32 >> 2];
          c[a2 + 36 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
          c[a2 + 36 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
          c[a2 + 36 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
          c[a2 + 52 >> 2] = c[b2 + 48 >> 2];
          c[a2 + 52 + 4 >> 2] = c[b2 + 48 + 4 >> 2];
          c[a2 + 52 + 8 >> 2] = c[b2 + 48 + 8 >> 2];
          c[a2 + 52 + 12 >> 2] = c[b2 + 48 + 12 >> 2];
          return;
        }
        function gl(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          a[b2 + 53 >> 0] = 1;
          do
            if ((c[b2 + 4 >> 2] | 0) == (e2 | 0)) {
              a[b2 + 52 >> 0] = 1;
              e2 = c[b2 + 16 >> 2] | 0;
              if (!e2) {
                c[b2 + 16 >> 2] = d2;
                c[b2 + 24 >> 2] = f2;
                c[b2 + 36 >> 2] = 1;
                if (!((f2 | 0) == 1 ? (c[b2 + 48 >> 2] | 0) == 1 : 0))
                  break;
                a[b2 + 54 >> 0] = 1;
                break;
              }
              if ((e2 | 0) != (d2 | 0)) {
                c[b2 + 36 >> 2] = (c[b2 + 36 >> 2] | 0) + 1;
                a[b2 + 54 >> 0] = 1;
                break;
              }
              e2 = c[b2 + 24 >> 2] | 0;
              if ((e2 | 0) == 2) {
                c[b2 + 24 >> 2] = f2;
                e2 = f2;
              }
              if ((e2 | 0) == 1 ? (c[b2 + 48 >> 2] | 0) == 1 : 0)
                a[b2 + 54 >> 0] = 1;
            }
          while (0);
          return;
        }
        function hl(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, j2 = 0, k2 = 0, l2 = 0;
          e2 = i;
          i = i + 16 | 0;
          k2 = c[a2 + 56 >> 2] | 0;
          l2 = c[a2 + 32 + (((k2 + 2 | 0) % 3 | 0) << 2) >> 2] | 0;
          c[e2 >> 2] = l2;
          c[e2 + 4 >> 2] = l2;
          c[e2 + 8 >> 2] = l2;
          g[e2 + 12 >> 2] = 0;
          g[e2 + (k2 << 2) >> 2] = +g[a2 + 32 + (k2 << 2) >> 2] + +g[e2 + (k2 << 2) >> 2];
          h2 = (+g[e2 >> 2] + 0.03999999910593033) * 2;
          f2 = (+g[e2 + 4 >> 2] + 0.03999999910593033) * 2;
          j2 = (+g[e2 + 8 >> 2] + 0.03999999910593033) * 2;
          g[d2 >> 2] = b2 * 0.0833333283662796 * (f2 * f2 + j2 * j2);
          g[d2 + 4 >> 2] = b2 * 0.0833333283662796 * (h2 * h2 + j2 * j2);
          g[d2 + 8 >> 2] = b2 * 0.0833333283662796 * (h2 * h2 + f2 * f2);
          i = e2;
          return;
        }
        function il(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0;
          a:
            do
              if ((b2 | 0) != (c[d2 + 8 >> 2] | 0)) {
                h2 = c[b2 + 12 >> 2] | 0;
                Tn(b2 + 16 | 0, d2, e2, f2);
                if ((h2 | 0) > 1) {
                  g2 = b2 + 24 | 0;
                  do {
                    Tn(g2, d2, e2, f2);
                    if (a[d2 + 54 >> 0] | 0)
                      break a;
                    g2 = g2 + 8 | 0;
                  } while (g2 >>> 0 < (b2 + 16 + (h2 << 3) | 0) >>> 0);
                }
              } else
                Xm(d2, e2, f2);
            while (0);
          return;
        }
        function jl(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          a[b2 + 251 >> 0] = 0;
          c[b2 + 68 >> 2] = c[d2 >> 2];
          c[b2 + 68 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 68 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 68 + 12 >> 2] = c[d2 + 12 >> 2];
          f2 = +g[b2 + 68 >> 2];
          h2 = +g[b2 + 72 >> 2];
          i2 = +g[b2 + 76 >> 2];
          j2 = +G(+(f2 * f2 + h2 * h2 + i2 * i2));
          if (j2 > 11920928955078125e-23) {
            k2 = f2 * (1 / j2);
            h2 = h2 * (1 / j2);
            f2 = i2 * (1 / j2);
            d2 = c[b2 + 80 >> 2] | 0;
          } else {
            k2 = 0;
            h2 = 0;
            f2 = 0;
            d2 = 0;
          }
          g[b2 + 84 >> 2] = k2;
          g[b2 + 88 >> 2] = h2;
          g[b2 + 92 >> 2] = f2;
          c[b2 + 96 >> 2] = d2;
          g[b2 + 252 >> 2] = +g[b2 + 252 >> 2] + e2;
          return;
        }
        function kl() {
          var a2 = 0, b2 = 0, d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          a2 = ic(823) | 0;
          if (!a2)
            a2 = 0;
          else {
            c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
            a2 = a2 + 4 + 15 & -16;
          }
          c[a2 >> 2] = 1025;
          b2 = a2 + 120 | 0;
          d2 = b2 + 44 | 0;
          do {
            c[b2 >> 2] = 0;
            b2 = b2 + 4 | 0;
          } while ((b2 | 0) < (d2 | 0));
          b2 = a2 + 312 | 0;
          d2 = b2 + 44 | 0;
          do {
            c[b2 >> 2] = 0;
            b2 = b2 + 4 | 0;
          } while ((b2 | 0) < (d2 | 0));
          b2 = a2 + 504 | 0;
          d2 = b2 + 44 | 0;
          do {
            c[b2 >> 2] = 0;
            b2 = b2 + 4 | 0;
          } while ((b2 | 0) < (d2 | 0));
          b2 = a2 + 696 | 0;
          d2 = b2 + 44 | 0;
          do {
            c[b2 >> 2] = 0;
            b2 = b2 + 4 | 0;
          } while ((b2 | 0) < (d2 | 0));
          c[a2 + 772 >> 2] = 0;
          c[a2 + 776 >> 2] = 0;
          c[a2 + 780 >> 2] = 0;
          c[a2 + 800 >> 2] = 0;
          return a2 | 0;
        }
        function ll(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          if ((d2 | 0) <= 0)
            return;
          m2 = 0;
          do {
            e2 = +g[a2 + 36 >> 2];
            h2 = +g[a2 + 32 >> 2];
            i2 = b2 + (m2 << 4) | 0;
            k2 = +g[b2 + (m2 << 4) + 4 >> 2];
            f2 = +g[b2 + (m2 << 4) + 8 >> 2];
            l2 = +G(+(k2 * k2 + f2 * f2));
            if (l2 != 0) {
              j2 = f2 * (e2 / l2);
              f2 = +g[i2 >> 2] < 0 ? -h2 : h2;
              e2 = k2 * (e2 / l2);
            } else {
              j2 = 0;
              f2 = +g[i2 >> 2] < 0 ? -h2 : h2;
            }
            g[c2 + (m2 << 4) >> 2] = f2;
            g[c2 + (m2 << 4) + 4 >> 2] = e2;
            g[c2 + (m2 << 4) + 8 >> 2] = j2;
            m2 = m2 + 1 | 0;
          } while ((m2 | 0) != (d2 | 0));
          return;
        }
        function ml(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          j2 = c[b2 >> 2] | 0;
          if (!e2)
            e2 = c[a2 + 188 >> 2] | 0;
          i2 = c[a2 + 308 >> 2] | 0;
          if ((i2 | 0) <= 0)
            return;
          h2 = c[a2 + 316 >> 2] | 0;
          f2 = 0;
          while (1) {
            g2 = h2 + (f2 << 2) | 0;
            if ((c[g2 >> 2] | 0) == (j2 | 0))
              break;
            f2 = f2 + 1 | 0;
            if ((f2 | 0) >= (i2 | 0)) {
              k2 = 9;
              break;
            }
          }
          if ((k2 | 0) == 9)
            return;
          if ((f2 | 0) >= (i2 | 0))
            return;
          c[g2 >> 2] = c[h2 + (i2 + -1 << 2) >> 2];
          c[a2 + 308 >> 2] = i2 + -1;
          k2 = c[a2 + 324 >> 2] | 0;
          sb[c[(c[k2 >> 2] | 0) + 12 >> 2] & 31](k2, e2, b2, d2) | 0;
          return;
        }
        function nl(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          e2 = i;
          i = i + 32 | 0;
          d2 = c[a2 + 216 >> 2] | 0;
          if (+g[d2 + 4 >> 2] == 0) {
            d2 = 0;
            i = e2;
            return d2 | 0;
          }
          b2 = c[b2 >> 2] | 0;
          if (!(Jb[c[(c[d2 >> 2] | 0) + 8 >> 2] & 31](d2, c[b2 + 188 >> 2] | 0) | 0)) {
            d2 = 1;
            i = e2;
            return d2 | 0;
          }
          f2 = c[b2 + 192 >> 2] | 0;
          d2 = c[a2 + 216 >> 2] | 0;
          c[e2 >> 2] = 0;
          c[e2 + 4 >> 2] = f2;
          c[e2 + 8 >> 2] = b2;
          c[e2 + 12 >> 2] = b2 + 4;
          c[e2 + 16 >> 2] = -1;
          c[e2 + 20 >> 2] = -1;
          Vc(a2 + 68 | 0, a2 + 132 | 0, e2, d2);
          d2 = 1;
          i = e2;
          return d2 | 0;
        }
        function ol(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          f2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 >> 2] = f2;
          if (f2 | 0)
            mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 28 >> 2] = c[a2 + 32 >> 2];
          c[b2 + 32 >> 2] = c[a2 + 36 >> 2];
          c[b2 + 36 >> 2] = c[a2 + 40 >> 2];
          c[b2 + 40 >> 2] = c[a2 + 44 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 16 >> 2];
          c[b2 + 16 >> 2] = c[a2 + 20 >> 2];
          c[b2 + 20 >> 2] = c[a2 + 24 >> 2];
          c[b2 + 24 >> 2] = c[a2 + 28 >> 2];
          c[b2 + 44 >> 2] = c[a2 + 48 >> 2];
          return 10746;
        }
        function pl(b2, d2, e2, f2, g2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          do
            if ((b2 | 0) == (c[d2 + 8 >> 2] | 0)) {
              if ((c[d2 + 4 >> 2] | 0) == (e2 | 0) ? (c[d2 + 28 >> 2] | 0) != 1 : 0)
                c[d2 + 28 >> 2] = f2;
            } else if ((b2 | 0) == (c[d2 >> 2] | 0)) {
              if ((c[d2 + 16 >> 2] | 0) != (e2 | 0) ? (c[d2 + 20 >> 2] | 0) != (e2 | 0) : 0) {
                c[d2 + 32 >> 2] = f2;
                c[d2 + 20 >> 2] = e2;
                c[d2 + 40 >> 2] = (c[d2 + 40 >> 2] | 0) + 1;
                if ((c[d2 + 36 >> 2] | 0) == 1 ? (c[d2 + 24 >> 2] | 0) == 2 : 0)
                  a[d2 + 54 >> 0] = 1;
                c[d2 + 44 >> 2] = 4;
                break;
              }
              if ((f2 | 0) == 1)
                c[d2 + 32 >> 2] = 1;
            }
          while (0);
          return;
        }
        function ql(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          f2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 >> 2] = f2;
          if (f2 | 0)
            mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 72 >> 2];
          c[b2 + 16 >> 2] = c[a2 + 76 >> 2];
          c[b2 + 20 >> 2] = c[a2 + 80 >> 2];
          c[b2 + 24 >> 2] = c[a2 + 84 >> 2];
          c[b2 + 28 >> 2] = c[a2 + 52 >> 2];
          c[b2 + 32 >> 2] = c[a2 + 56 >> 2];
          c[b2 + 36 >> 2] = c[a2 + 60 >> 2];
          c[b2 + 40 >> 2] = c[a2 + 64 >> 2];
          c[b2 + 44 >> 2] = c[a2 + 68 >> 2];
          return 17002;
        }
        function rl(b2, d2, e2, f2, g2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          c[b2 + 4 >> 2] = c[d2 >> 2];
          c[b2 >> 2] = 9044;
          a[b2 + 24 >> 0] = 1;
          c[b2 + 20 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          c[b2 + 16 >> 2] = 0;
          a[b2 + 44 >> 0] = 1;
          c[b2 + 40 >> 2] = 0;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 36 >> 2] = 0;
          a[b2 + 64 >> 0] = 1;
          c[b2 + 60 >> 2] = 0;
          c[b2 + 52 >> 2] = 0;
          c[b2 + 56 >> 2] = 0;
          a[b2 + 68 >> 0] = g2 & 1;
          c[b2 + 72 >> 2] = c[d2 + 4 >> 2];
          a[b2 + 76 >> 0] = 0;
          c[b2 + 80 >> 2] = c[(c[(g2 ? f2 : e2) + 4 >> 2] | 0) + 72 >> 2];
          _g(b2, e2, f2);
          return;
        }
        function sl(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          j2 = c[a2 + 72 >> 2] | 0;
          i2 = c[a2 + 68 >> 2] | 0;
          h2 = c[a2 + 76 >> 2] | 0;
          e2 = +g[a2 + 64 >> 2] * (+g[b2 + (j2 << 2) >> 2] / +g[a2 + 16 + (j2 << 2) >> 2]);
          g[a2 + 64 >> 2] = e2;
          f2 = +g[a2 + 60 >> 2] * (+g[b2 + (i2 << 2) >> 2] / +g[a2 + 16 + (i2 << 2) >> 2] + +g[b2 + (h2 << 2) >> 2] / +g[a2 + 16 + (h2 << 2) >> 2]) * 0.5;
          g[a2 + 60 >> 2] = f2;
          g[a2 + 56 >> 2] = f2 / +G(+(e2 * e2 + f2 * f2));
          f2 = +F(+ +g[b2 >> 2]);
          e2 = +F(+ +g[b2 + 4 >> 2]);
          d2 = +F(+ +g[b2 + 8 >> 2]);
          g[a2 + 16 >> 2] = f2;
          g[a2 + 20 >> 2] = e2;
          g[a2 + 24 >> 2] = d2;
          g[a2 + 28 >> 2] = 0;
          return;
        }
        function tl(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 6296;
          d2 = c[b2 + 316 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 320 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 316 >> 2] = 0;
          }
          a[b2 + 320 >> 0] = 1;
          c[b2 + 316 >> 2] = 0;
          c[b2 + 308 >> 2] = 0;
          c[b2 + 312 >> 2] = 0;
          c[b2 >> 2] = 5592;
          d2 = c[b2 + 292 >> 2] | 0;
          if (!d2) {
            a[b2 + 296 >> 0] = 1;
            c[b2 + 292 >> 2] = 0;
            c[b2 + 284 >> 2] = 0;
            b2 = b2 + 288 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 296 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 292 >> 2] = 0;
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          b2 = b2 + 288 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function ul(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          if ((d2 | 0) <= 0)
            return;
          m2 = 0;
          do {
            e2 = +g[a2 + 32 >> 2];
            i2 = +g[a2 + 40 >> 2];
            k2 = +g[b2 + (m2 << 4) >> 2];
            f2 = +g[b2 + (m2 << 4) + 4 >> 2];
            l2 = +G(+(k2 * k2 + f2 * f2));
            h2 = +g[b2 + (m2 << 4) + 8 >> 2];
            if (l2 != 0) {
              j2 = f2 * (e2 / l2);
              f2 = h2 < 0 ? -i2 : i2;
              e2 = k2 * (e2 / l2);
            } else {
              j2 = 0;
              f2 = h2 < 0 ? -i2 : i2;
            }
            g[c2 + (m2 << 4) >> 2] = e2;
            g[c2 + (m2 << 4) + 4 >> 2] = j2;
            g[c2 + (m2 << 4) + 8 >> 2] = f2;
            m2 = m2 + 1 | 0;
          } while ((m2 | 0) != (d2 | 0));
          return;
        }
        function vl(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0, l2 = 0, m2 = 0;
          if ((d2 | 0) <= 0)
            return;
          m2 = 0;
          do {
            e2 = +g[a2 + 32 >> 2];
            i2 = +g[a2 + 36 >> 2];
            k2 = +g[b2 + (m2 << 4) >> 2];
            f2 = +g[b2 + (m2 << 4) + 8 >> 2];
            l2 = +G(+(k2 * k2 + f2 * f2));
            h2 = +g[b2 + (m2 << 4) + 4 >> 2];
            if (l2 != 0) {
              j2 = f2 * (e2 / l2);
              f2 = h2 < 0 ? -i2 : i2;
              e2 = k2 * (e2 / l2);
            } else {
              j2 = 0;
              f2 = h2 < 0 ? -i2 : i2;
            }
            g[c2 + (m2 << 4) >> 2] = e2;
            g[c2 + (m2 << 4) + 4 >> 2] = f2;
            g[c2 + (m2 << 4) + 8 >> 2] = j2;
            m2 = m2 + 1 | 0;
          } while ((m2 | 0) != (d2 | 0));
          return;
        }
        function wl(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 4916;
          d2 = c[b2 + 536 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 540 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 536 >> 2] = 0;
          }
          a[b2 + 540 >> 0] = 1;
          c[b2 + 536 >> 2] = 0;
          c[b2 + 528 >> 2] = 0;
          c[b2 + 532 >> 2] = 0;
          c[b2 >> 2] = 5592;
          d2 = c[b2 + 292 >> 2] | 0;
          if (!d2) {
            a[b2 + 296 >> 0] = 1;
            c[b2 + 292 >> 2] = 0;
            c[b2 + 284 >> 2] = 0;
            b2 = b2 + 288 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 296 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 292 >> 2] = 0;
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          b2 = b2 + 288 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function xl(a2, d2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          while (1) {
            e2 = ic(84) | 0;
            if (e2 | 0)
              break;
            e2 = c[6453] | 0;
            c[6453] = e2 + 0;
            if (!e2) {
              e2 = 0;
              break;
            }
            Vb[e2 & 3]();
          }
          g[e2 + 4 >> 2] = 1;
          c[e2 + 8 >> 2] = 0;
          b[e2 + 12 >> 1] = 1;
          b[e2 + 14 >> 1] = -1;
          c[e2 + 16 >> 2] = 0;
          c[e2 >> 2] = 2896;
          f2 = e2 + 20 | 0;
          c[f2 >> 2] = c[a2 >> 2];
          c[f2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[f2 + 8 >> 2] = c[a2 + 8 >> 2];
          c[f2 + 12 >> 2] = c[a2 + 12 >> 2];
          a2 = e2 + 36 | 0;
          c[a2 >> 2] = c[d2 >> 2];
          c[a2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[d2 + 12 >> 2];
          return e2 | 0;
        }
        function yl(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          f2 = i;
          i = i + 48 | 0;
          c[f2 + 32 >> 2] = 5312;
          c[f2 + 32 + 4 >> 2] = e2;
          c[f2 >> 2] = c[b2 >> 2];
          c[f2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[f2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[f2 + 12 >> 2] = c[b2 + 12 >> 2];
          c[f2 + 16 >> 2] = c[d2 >> 2];
          c[f2 + 16 + 4 >> 2] = c[d2 + 4 >> 2];
          c[f2 + 16 + 8 >> 2] = c[d2 + 8 >> 2];
          c[f2 + 16 + 12 >> 2] = c[d2 + 12 >> 2];
          Mf(c[a2 + 4 >> 2] | 0, f2, f2 + 32 | 0);
          Mf(c[a2 + 64 >> 2] | 0, f2, f2 + 32 | 0);
          i = f2;
          return;
        }
        function zl(a2, d2, f2, g2, h2, i2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          var j2 = 0;
          j2 = c[a2 + 108 >> 2] | 0;
          if (j2 | 0) {
            Ab[c[(c[j2 >> 2] | 0) + 24 >> 2] & 7](j2, d2, f2, g2, h2, i2);
            return;
          }
          d2 = b[a2 + 56 >> 1] | 0;
          if ((d2 & 65535) << 1 >>> 0 <= 1)
            return;
          h2 = 1;
          i2 = 1;
          do {
            f2 = c[a2 + 68 >> 2] | 0;
            if (b[f2 + (i2 << 2) >> 1] & 1) {
              Jb[c[(c[g2 >> 2] | 0) + 8 >> 2] & 31](g2, (c[a2 + 60 >> 2] | 0) + ((e[f2 + (i2 << 2) + 2 >> 1] | 0) << 6) | 0) | 0;
              d2 = b[a2 + 56 >> 1] | 0;
            }
            h2 = h2 + 1 << 16 >> 16;
            i2 = h2 & 65535;
          } while (i2 >>> 0 < ((d2 & 65535) << 1 | 1) >>> 0);
          return;
        }
        function Al(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          g2 = i;
          i = i + 64 | 0;
          if ((a2 | 0) != (b2 | 0))
            if ((b2 | 0) != 0 ? (f2 = jj(b2, 2760) | 0, (f2 | 0) != 0) : 0) {
              b2 = g2 + 4 | 0;
              e2 = b2 + 52 | 0;
              do {
                c[b2 >> 2] = 0;
                b2 = b2 + 4 | 0;
              } while ((b2 | 0) < (e2 | 0));
              c[g2 >> 2] = f2;
              c[g2 + 8 >> 2] = a2;
              c[g2 + 12 >> 2] = -1;
              c[g2 + 48 >> 2] = 1;
              Yb[c[(c[f2 >> 2] | 0) + 28 >> 2] & 127](f2, g2, c[d2 >> 2] | 0, 1);
              if ((c[g2 + 24 >> 2] | 0) == 1) {
                c[d2 >> 2] = c[g2 + 16 >> 2];
                b2 = 1;
              } else
                b2 = 0;
            } else
              b2 = 0;
          else
            b2 = 1;
          i = g2;
          return b2 | 0;
        }
        function Bl(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          b2 = c[d2 >> 2] | 0;
          b2 = Jb[c[(c[b2 >> 2] | 0) + 56 >> 2] & 31](b2, 80) | 0;
          d2 = c[d2 >> 2] | 0;
          c[b2 + 4 >> 2] = d2;
          c[b2 >> 2] = 9172;
          c[b2 + 8 >> 2] = 9220;
          c[b2 + 56 >> 2] = d2;
          c[b2 + 60 >> 2] = 0;
          c[b2 + 44 >> 2] = f2;
          c[b2 + 48 >> 2] = e2;
          f2 = yb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[f2 + 8 >> 2] | 0, c[e2 + 8 >> 2] | 0) | 0;
          c[b2 + 72 >> 2] = f2;
          e2 = c[b2 + 56 >> 2] | 0;
          mb[c[(c[e2 >> 2] | 0) + 20 >> 2] & 127](e2, f2);
          a[b2 + 76 >> 0] = 1;
          return b2 | 0;
        }
        function Cl(a2, b2) {
          a2 = +a2;
          b2 = +b2;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(99) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = -1;
          c[d2 + 16 >> 2] = 1065353216;
          c[d2 + 20 >> 2] = 1065353216;
          c[d2 + 24 >> 2] = 1065353216;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 48 >> 2] = 0.03999999910593033;
          g[d2 + 60 >> 2] = a2;
          g[d2 + 64 >> 2] = b2;
          c[d2 + 4 >> 2] = 11;
          g[d2 + 56 >> 2] = a2 / +G(+(a2 * a2 + b2 * b2));
          c[d2 >> 2] = 7280;
          c[d2 + 68 >> 2] = 0;
          c[d2 + 72 >> 2] = 2;
          c[d2 + 76 >> 2] = 1;
          g[d2 + 32 >> 2] = a2;
          g[d2 + 40 >> 2] = b2;
          g[d2 + 36 >> 2] = a2;
          return d2 | 0;
        }
        function Dl(a2, b2) {
          a2 = +a2;
          b2 = +b2;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(99) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = -1;
          c[d2 + 16 >> 2] = 1065353216;
          c[d2 + 20 >> 2] = 1065353216;
          c[d2 + 24 >> 2] = 1065353216;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 48 >> 2] = 0.03999999910593033;
          g[d2 + 60 >> 2] = a2;
          g[d2 + 64 >> 2] = b2;
          c[d2 + 4 >> 2] = 11;
          g[d2 + 56 >> 2] = a2 / +G(+(a2 * a2 + b2 * b2));
          c[d2 >> 2] = 7380;
          c[d2 + 68 >> 2] = 1;
          c[d2 + 72 >> 2] = 0;
          c[d2 + 76 >> 2] = 2;
          g[d2 + 36 >> 2] = a2;
          g[d2 + 32 >> 2] = b2;
          g[d2 + 40 >> 2] = a2;
          return d2 | 0;
        }
        function El(a2, b2) {
          a2 = +a2;
          b2 = +b2;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(99) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = -1;
          c[d2 + 16 >> 2] = 1065353216;
          c[d2 + 20 >> 2] = 1065353216;
          c[d2 + 24 >> 2] = 1065353216;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 48 >> 2] = 0.03999999910593033;
          c[d2 >> 2] = 7180;
          g[d2 + 60 >> 2] = a2;
          g[d2 + 64 >> 2] = b2;
          c[d2 + 4 >> 2] = 11;
          c[d2 + 68 >> 2] = 0;
          c[d2 + 72 >> 2] = 1;
          c[d2 + 76 >> 2] = 2;
          g[d2 + 32 >> 2] = a2;
          g[d2 + 36 >> 2] = b2;
          g[d2 + 40 >> 2] = a2;
          g[d2 + 56 >> 2] = a2 / +G(+(a2 * a2 + b2 * b2));
          return d2 | 0;
        }
        function Fl() {
          if (a[21984] | 0)
            return;
          a[21984] = 1;
          if (!(a[21992] | 0)) {
            a[21992] = 1;
            c[5577] = 1065353216;
            c[5578] = 0;
            c[5579] = 0;
            c[5580] = 0;
            c[5581] = 0;
            c[5582] = 1065353216;
            c[5583] = 0;
            c[5584] = 0;
            c[5585] = 0;
            c[5586] = 0;
            c[5587] = 1065353216;
            g[5588] = 0;
          }
          c[5561] = c[5577];
          c[5562] = c[5578];
          c[5563] = c[5579];
          c[5564] = c[5580];
          c[5565] = c[5581];
          c[5566] = c[5582];
          c[5567] = c[5583];
          c[5568] = c[5584];
          c[5569] = c[5585];
          c[5570] = c[5586];
          c[5571] = c[5587];
          c[5572] = c[5588];
          c[5573] = 0;
          c[5574] = 0;
          c[5575] = 0;
          c[5576] = 0;
          return;
        }
        function Gl(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          b2 = c[d2 >> 2] | 0;
          b2 = Jb[c[(c[b2 >> 2] | 0) + 56 >> 2] & 31](b2, 80) | 0;
          d2 = c[d2 >> 2] | 0;
          c[b2 + 4 >> 2] = d2;
          c[b2 >> 2] = 9172;
          c[b2 + 8 >> 2] = 9220;
          c[b2 + 56 >> 2] = d2;
          c[b2 + 60 >> 2] = 0;
          c[b2 + 44 >> 2] = e2;
          c[b2 + 48 >> 2] = f2;
          f2 = yb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
          c[b2 + 72 >> 2] = f2;
          e2 = c[b2 + 56 >> 2] | 0;
          mb[c[(c[e2 >> 2] | 0) + 20 >> 2] & 127](e2, f2);
          a[b2 + 76 >> 0] = 0;
          return b2 | 0;
        }
        function Hl(a2, d2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          while (1) {
            e2 = ic(80) | 0;
            if (e2 | 0)
              break;
            e2 = c[6453] | 0;
            c[6453] = e2 + 0;
            if (!e2) {
              e2 = 0;
              break;
            }
            Vb[e2 & 3]();
          }
          g[e2 + 4 >> 2] = 1;
          b[e2 + 8 >> 1] = 1;
          b[e2 + 10 >> 1] = -1;
          c[e2 >> 2] = 2972;
          f2 = e2 + 12 | 0;
          c[f2 >> 2] = c[a2 >> 2];
          c[f2 + 4 >> 2] = c[a2 + 4 >> 2];
          c[f2 + 8 >> 2] = c[a2 + 8 >> 2];
          c[f2 + 12 >> 2] = c[a2 + 12 >> 2];
          a2 = e2 + 28 | 0;
          c[a2 >> 2] = c[d2 >> 2];
          c[a2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[d2 + 12 >> 2];
          c[e2 + 76 >> 2] = 0;
          return e2 | 0;
        }
        function Il(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0;
          e2 = c[a2 + 232 >> 2] | 0;
          if ((e2 | 0) <= 0)
            return;
          b2 = c[a2 + 240 >> 2] | 0;
          a2 = 0;
          do {
            d2 = c[b2 + (a2 << 2) >> 2] | 0;
            switch (c[d2 + 216 >> 2] | 0) {
              case 2:
              case 5:
                break;
              default:
                if (!(c[d2 + 204 >> 2] & 3)) {
                  h2 = +g[d2 + 408 >> 2] * +g[d2 + 392 >> 2];
                  f2 = +g[d2 + 412 >> 2] * +g[d2 + 396 >> 2];
                  g[d2 + 452 >> 2] = +g[d2 + 404 >> 2] * +g[d2 + 388 >> 2] + +g[d2 + 452 >> 2];
                  g[d2 + 456 >> 2] = h2 + +g[d2 + 456 >> 2];
                  g[d2 + 460 >> 2] = f2 + +g[d2 + 460 >> 2];
                }
            }
            a2 = a2 + 1 | 0;
          } while ((a2 | 0) != (e2 | 0));
          return;
        }
        function Jl(b2, d2, e2, f2, g2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          var h2 = 0;
          f2 = a[b2 + 16 >> 0] | 0;
          h2 = c[(f2 << 24 >> 24 == 0 ? d2 : e2) + 8 >> 2] | 0;
          e2 = f2 << 24 >> 24 ? d2 : e2;
          f2 = c[e2 + 8 >> 2] | 0;
          g2 = c[h2 + 308 >> 2] | 0;
          a:
            do
              if ((g2 | 0) > 0) {
                d2 = c[h2 + 316 >> 2] | 0;
                b2 = 0;
                while (1) {
                  if ((c[d2 + (b2 << 2) >> 2] | 0) == (f2 | 0))
                    break;
                  b2 = b2 + 1 | 0;
                  if ((b2 | 0) >= (g2 | 0))
                    break a;
                }
                if ((b2 | 0) != (g2 | 0))
                  return;
              }
            while (0);
          d2 = c[h2 + 324 >> 2] | 0;
          Ub[c[(c[d2 >> 2] | 0) + 36 >> 2] & 127](d2, h2, e2);
          return;
        }
        function Kl(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          while (1) {
            d2 = ic(64) | 0;
            if (d2 | 0)
              break;
            d2 = c[6453] | 0;
            c[6453] = d2 + 0;
            if (!d2) {
              d2 = 0;
              break;
            }
            Vb[d2 & 3]();
          }
          c[d2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[b2 + 12 >> 2];
          c[d2 + 24 >> 2] = c[b2 + 24 >> 2];
          c[d2 >> 2] = c[b2 >> 2];
          c[d2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[d2 + 28 >> 2] = c[b2 + 28 >> 2];
          c[d2 + 32 >> 2] = c[b2 + 32 >> 2];
          c[d2 + 36 >> 2] = c[b2 + 36 >> 2];
          c[d2 + 40 >> 2] = c[b2 + 40 >> 2];
          c[d2 + 56 >> 2] = c[b2 + 56 >> 2];
          c[d2 + 48 >> 2] = c[b2 + 48 >> 2];
          a[d2 + 44 >> 0] = a[b2 + 44 >> 0] & 1;
          return d2 | 0;
        }
        function Ll(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0;
          f2 = c[a2 + 212 >> 2] | 0;
          a:
            do
              if ((f2 | 0) > 0) {
                g2 = c[a2 + 220 >> 2] | 0;
                d2 = 0;
                while (1) {
                  e2 = g2 + (d2 << 2) | 0;
                  if ((c[e2 >> 2] | 0) == (b2 | 0))
                    break;
                  d2 = d2 + 1 | 0;
                  if ((d2 | 0) >= (f2 | 0))
                    break a;
                }
                if ((d2 | 0) < (f2 | 0)) {
                  c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
                  c[(c[a2 + 220 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
                  c[a2 + 212 >> 2] = f2 + -1;
                }
              }
            while (0);
          qh(c[b2 + 28 >> 2] | 0, b2);
          qh(c[b2 + 32 >> 2] | 0, b2);
          return;
        }
        function Ml(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          do
            if (b2) {
              if (d2 >>> 0 < 128) {
                a[b2 >> 0] = d2;
                b2 = 1;
                break;
              }
              if (d2 >>> 0 < 2048) {
                a[b2 >> 0] = d2 >>> 6 | 192;
                a[b2 + 1 >> 0] = d2 & 63 | 128;
                b2 = 2;
                break;
              }
              if (d2 >>> 0 < 55296 | (d2 & -8192 | 0) == 57344) {
                a[b2 >> 0] = d2 >>> 12 | 224;
                a[b2 + 1 >> 0] = d2 >>> 6 & 63 | 128;
                a[b2 + 2 >> 0] = d2 & 63 | 128;
                b2 = 3;
                break;
              }
              if ((d2 + -65536 | 0) >>> 0 < 1048576) {
                a[b2 >> 0] = d2 >>> 18 | 240;
                a[b2 + 1 >> 0] = d2 >>> 12 & 63 | 128;
                a[b2 + 2 >> 0] = d2 >>> 6 & 63 | 128;
                a[b2 + 3 >> 0] = d2 & 63 | 128;
                b2 = 4;
                break;
              } else {
                c[6326] = 84;
                b2 = -1;
                break;
              }
            } else
              b2 = 0;
          while (0);
          return b2 | 0;
        }
        function Nl(a2, b2, d2, e2, f2, g2, h2, i2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          var k2 = 0, l2 = 0;
          Hb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 1](a2, b2, d2, e2, f2, g2, h2, i2, j2);
          l2 = c[a2 + 184 >> 2] | 0;
          k2 = c[i2 + 20 >> 2] | 0;
          k2 = (l2 | 0) > (k2 | 0) ? l2 : k2;
          if ((k2 | 0) <= 0)
            return 0;
          l2 = 0;
          do {
            +Lb[c[(c[a2 >> 2] | 0) + 40 >> 2] & 3](a2, l2, b2, d2, e2, f2, g2, h2, i2, j2);
            l2 = l2 + 1 | 0;
          } while ((l2 | 0) < (k2 | 0));
          return 0;
        }
        function Ol(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0;
          h2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          e2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          i2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          h2 = h2 + +g[a2 + 32 >> 2];
          e2 = e2 + +g[a2 + 36 >> 2];
          i2 = i2 + +g[a2 + 40 >> 2];
          g[a2 + 48 >> 2] = b2;
          f2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          d2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          b2 = i2 - +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          g[a2 + 32 >> 2] = h2 - f2;
          g[a2 + 36 >> 2] = e2 - d2;
          g[a2 + 40 >> 2] = b2;
          g[a2 + 44 >> 2] = 0;
          return;
        }
        function Pl(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          if ((c[a2 + 8 >> 2] | 0) <= 0)
            return;
          e2 = 0;
          a:
            while (1) {
              while (1) {
                f2 = c[a2 + 16 >> 2] | 0;
                g2 = f2 + (e2 << 4) | 0;
                if (!(Jb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 31](b2, g2) | 0))
                  break;
                sb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 31](a2, c[g2 >> 2] | 0, c[f2 + (e2 << 4) + 4 >> 2] | 0, d2) | 0;
                c[6038] = (c[6038] | 0) + -1;
                if ((e2 | 0) >= (c[a2 + 8 >> 2] | 0)) {
                  e2 = 7;
                  break a;
                }
              }
              e2 = e2 + 1 | 0;
              if ((e2 | 0) >= (c[a2 + 8 >> 2] | 0)) {
                e2 = 7;
                break;
              }
            }
          if ((e2 | 0) == 7)
            return;
        }
        function Ql(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          b2 = c[d2 >> 2] | 0;
          b2 = Jb[c[(c[b2 >> 2] | 0) + 56 >> 2] & 31](b2, 16) | 0;
          d2 = c[d2 >> 2] | 0;
          c[b2 + 4 >> 2] = d2;
          c[b2 >> 2] = 8996;
          a[b2 + 8 >> 0] = 0;
          c[b2 + 12 >> 2] = 0;
          if (!(yb[c[(c[d2 >> 2] | 0) + 24 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0))
            return b2 | 0;
          d2 = c[b2 + 4 >> 2] | 0;
          c[b2 + 12 >> 2] = yb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
          a[b2 + 8 >> 0] = 1;
          return b2 | 0;
        }
        function Rl(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          a[b2 + 251 >> 0] = 1;
          c[b2 + 68 >> 2] = c[d2 >> 2];
          c[b2 + 68 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 68 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 68 + 12 >> 2] = c[d2 + 12 >> 2];
          e2 = +g[b2 + 68 >> 2];
          f2 = +g[b2 + 72 >> 2];
          h2 = +g[b2 + 76 >> 2];
          i2 = +G(+(e2 * e2 + f2 * f2 + h2 * h2));
          if (i2 > 11920928955078125e-23) {
            j2 = e2 * (1 / i2);
            f2 = f2 * (1 / i2);
            e2 = h2 * (1 / i2);
            d2 = c[b2 + 80 >> 2] | 0;
          } else {
            j2 = 0;
            f2 = 0;
            e2 = 0;
            d2 = 0;
          }
          g[b2 + 84 >> 2] = j2;
          g[b2 + 88 >> 2] = f2;
          g[b2 + 92 >> 2] = e2;
          c[b2 + 96 >> 2] = d2;
          return;
        }
        function Sl() {
          var b2 = 0, d2 = 0;
          while (1) {
            b2 = ic(100) | 0;
            if (b2 | 0)
              break;
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              b2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          g[b2 >> 2] = 1.2000000476837158;
          g[b2 + 4 >> 2] = 0;
          g[b2 + 8 >> 2] = 0;
          g[b2 + 12 >> 2] = 1e3;
          d2 = b2 + 16 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          c[d2 + 16 >> 2] = 0;
          c[d2 + 20 >> 2] = 0;
          c[d2 + 24 >> 2] = 0;
          c[b2 + 44 >> 2] = -1054867456;
          c[b2 + 48 >> 2] = 0;
          g[b2 + 52 >> 2] = 0;
          a[b2 + 72 >> 0] = 1;
          c[b2 + 68 >> 2] = 0;
          c[b2 + 60 >> 2] = 0;
          c[b2 + 64 >> 2] = 0;
          return b2 | 0;
        }
        function Tl(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          i2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          h2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          f2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          k2 = +g[b2 + 52 >> 2] - h2;
          j2 = +g[b2 + 56 >> 2] - f2;
          g[d2 >> 2] = +g[b2 + 48 >> 2] - i2;
          g[d2 + 4 >> 2] = k2;
          g[d2 + 8 >> 2] = j2;
          g[d2 + 12 >> 2] = 0;
          h2 = h2 + +g[b2 + 52 >> 2];
          f2 = f2 + +g[b2 + 56 >> 2];
          g[e2 >> 2] = i2 + +g[b2 + 48 >> 2];
          g[e2 + 4 >> 2] = h2;
          g[e2 + 8 >> 2] = f2;
          g[e2 + 12 >> 2] = 0;
          return;
        }
        function Ul(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          var h2 = 0;
          while (1) {
            h2 = ic(44) | 0;
            if (h2 | 0)
              break;
            h2 = c[6453] | 0;
            c[6453] = h2 + 0;
            if (!h2) {
              h2 = 0;
              break;
            }
            Vb[h2 & 3]();
          }
          c[h2 >> 2] = a2;
          c[h2 + 4 >> 2] = b2;
          b2 = h2 + 8 | 0;
          c[b2 >> 2] = c[d2 >> 2];
          c[b2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 12 >> 2] = c[d2 + 12 >> 2];
          d2 = h2 + 24 | 0;
          c[d2 >> 2] = c[e2 >> 2];
          c[d2 + 4 >> 2] = c[e2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[e2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[e2 + 12 >> 2];
          g[h2 + 40 >> 2] = f2;
          return h2 | 0;
        }
        function Vl(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          g2 = c[a2 + 760 >> 2] | 0;
          h2 = c[a2 + 772 >> 2] | 0;
          if ((h2 | 0) <= 0) {
            h2 = 0;
            return h2 | 0;
          }
          e2 = c[a2 + 780 >> 2] | 0;
          a2 = 0;
          while (1) {
            f2 = c[e2 + (a2 * 52 | 0) + 8 >> 2] | 0;
            if ((f2 | 0) == (g2 + (b2 * 104 | 0) | 0) ? (c[e2 + (a2 * 52 | 0) + 12 >> 2] | 0) == (g2 + (d2 * 104 | 0) | 0) : 0) {
              a2 = 1;
              e2 = 8;
              break;
            }
            if ((f2 | 0) == (g2 + (d2 * 104 | 0) | 0) ? (c[e2 + (a2 * 52 | 0) + 12 >> 2] | 0) == (g2 + (b2 * 104 | 0) | 0) : 0) {
              a2 = 1;
              e2 = 8;
              break;
            }
            a2 = a2 + 1 | 0;
            if ((a2 | 0) >= (h2 | 0)) {
              a2 = 0;
              e2 = 8;
              break;
            }
          }
          if ((e2 | 0) == 8)
            return a2 | 0;
          return 0;
        }
        function Wl(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0, i2 = 0;
          g2 = c[d2 >> 2] | 0;
          g2 = Jb[c[(c[g2 >> 2] | 0) + 56 >> 2] & 31](g2, 20) | 0;
          h2 = c[d2 + 4 >> 2] | 0;
          i2 = a[b2 + 4 >> 0] | 0;
          b2 = c[d2 >> 2] | 0;
          c[g2 + 4 >> 2] = b2;
          c[g2 >> 2] = 6464;
          a[g2 + 8 >> 0] = 0;
          c[g2 + 12 >> 2] = h2;
          a[g2 + 16 >> 0] = i2;
          if (h2 | 0)
            return g2 | 0;
          c[g2 + 12 >> 2] = yb[c[(c[b2 >> 2] | 0) + 12 >> 2] & 63](b2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
          a[g2 + 8 >> 0] = 1;
          return g2 | 0;
        }
        function Xl(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 6296;
          d2 = c[b2 + 316 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 320 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 316 >> 2] = 0;
          }
          a[b2 + 320 >> 0] = 1;
          c[b2 + 316 >> 2] = 0;
          c[b2 + 308 >> 2] = 0;
          c[b2 + 312 >> 2] = 0;
          c[b2 >> 2] = 5592;
          d2 = c[b2 + 292 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 296 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 292 >> 2] = 0;
          }
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          c[b2 + 288 >> 2] = 0;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function Yl(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          j2 = +g[d2 >> 2];
          i2 = +g[d2 + 4 >> 2];
          e2 = +g[d2 + 8 >> 2];
          f2 = j2 * +g[b2 + 60 >> 2] + i2 * +g[b2 + 64 >> 2] + e2 * +g[b2 + 68 >> 2];
          h2 = j2 * +g[b2 + 76 >> 2] + i2 * +g[b2 + 80 >> 2] + e2 * +g[b2 + 84 >> 2];
          e2 = j2 * +g[b2 + 92 >> 2] + i2 * +g[b2 + 96 >> 2] + e2 * +g[b2 + 100 >> 2];
          d2 = b2 + 60 + ((f2 < h2 ? h2 < e2 ? 2 : 1 : f2 < e2 ? 2 : 0) << 4) | 0;
          c[a2 >> 2] = c[d2 >> 2];
          c[a2 + 4 >> 2] = c[d2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[d2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[d2 + 12 >> 2];
          return;
        }
        function Zl(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 4916;
          d2 = c[b2 + 536 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 540 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 536 >> 2] = 0;
          }
          a[b2 + 540 >> 0] = 1;
          c[b2 + 536 >> 2] = 0;
          c[b2 + 528 >> 2] = 0;
          c[b2 + 532 >> 2] = 0;
          c[b2 >> 2] = 5592;
          d2 = c[b2 + 292 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 296 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 292 >> 2] = 0;
          }
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          c[b2 + 288 >> 2] = 0;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function _l(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          f2 = i;
          i = i + 48 | 0;
          c[f2 >> 2] = 8716;
          c[f2 + 4 >> 2] = b2;
          c[f2 + 8 >> 2] = c[d2 >> 2];
          c[f2 + 8 + 4 >> 2] = c[d2 + 4 >> 2];
          c[f2 + 8 + 8 >> 2] = c[d2 + 8 >> 2];
          c[f2 + 8 + 12 >> 2] = c[d2 + 12 >> 2];
          c[f2 + 24 >> 2] = c[e2 >> 2];
          c[f2 + 24 + 4 >> 2] = c[e2 + 4 >> 2];
          c[f2 + 24 + 8 >> 2] = c[e2 + 8 >> 2];
          c[f2 + 24 + 12 >> 2] = c[e2 + 12 >> 2];
          b2 = c[a2 + 52 >> 2] | 0;
          Yb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, f2, d2, e2);
          i = f2;
          return;
        }
        function $l(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          i2 = +g[a2 + 32 >> 2];
          f2 = +g[a2 + 36 >> 2];
          j2 = +g[a2 + 40 >> 2];
          h2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          e2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          j2 = (j2 + +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2)) * 2;
          g[d2 >> 2] = b2 / 12 * ((f2 + e2) * 2 * (f2 + e2) * 2 + j2 * j2);
          g[d2 + 4 >> 2] = b2 / 12 * ((i2 + h2) * 2 * (i2 + h2) * 2 + j2 * j2);
          g[d2 + 8 >> 2] = b2 / 12 * ((i2 + h2) * 2 * (i2 + h2) * 2 + (f2 + e2) * 2 * (f2 + e2) * 2);
          g[d2 + 12 >> 2] = 0;
          return;
        }
        function am(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          d2 = i;
          i = i + 64 | 0;
          c[d2 >> 2] = 1065353216;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 4 + 4 >> 2] = 0;
          c[d2 + 4 + 8 >> 2] = 0;
          c[d2 + 4 + 12 >> 2] = 0;
          c[d2 + 20 >> 2] = 1065353216;
          c[d2 + 24 >> 2] = 0;
          c[d2 + 24 + 4 >> 2] = 0;
          c[d2 + 24 + 8 >> 2] = 0;
          c[d2 + 24 + 12 >> 2] = 0;
          c[d2 + 40 >> 2] = 1065353216;
          c[d2 + 44 >> 2] = 0;
          c[d2 + 48 >> 2] = c[b2 >> 2];
          c[d2 + 48 + 4 >> 2] = c[b2 + 4 >> 2];
          c[d2 + 48 + 8 >> 2] = c[b2 + 8 >> 2];
          c[d2 + 48 + 12 >> 2] = c[b2 + 12 >> 2];
          zd(a2, d2);
          i = d2;
          return;
        }
        function bm(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0, f2 = 0, h2 = 0;
          h2 = +g[b2 >> 2];
          f2 = +g[b2 + 4 >> 2];
          e2 = +g[b2 + 8 >> 2];
          d2 = (+g[a2 + 320 >> 2] * h2 + +g[a2 + 324 >> 2] * f2 + +g[a2 + 328 >> 2] * e2) * +g[a2 + 588 >> 2];
          c2 = (+g[a2 + 336 >> 2] * h2 + +g[a2 + 340 >> 2] * f2 + +g[a2 + 344 >> 2] * e2) * +g[a2 + 592 >> 2];
          g[a2 + 368 >> 2] = +g[a2 + 368 >> 2] + (+g[a2 + 304 >> 2] * h2 + +g[a2 + 308 >> 2] * f2 + +g[a2 + 312 >> 2] * e2) * +g[a2 + 584 >> 2];
          g[a2 + 372 >> 2] = +g[a2 + 372 >> 2] + d2;
          g[a2 + 376 >> 2] = +g[a2 + 376 >> 2] + c2;
          return;
        }
        function cm(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          a:
            do
              switch (c[b2 + 216 >> 2] | 0) {
                case 2:
                case 5: {
                  switch (c[d2 + 216 >> 2] | 0) {
                    case 2:
                    case 5: {
                      a2 = 0;
                      break;
                    }
                    default:
                      break a;
                  }
                  return a2 | 0;
                }
                default: {
                }
              }
            while (0);
          if (!((c[b2 + 276 >> 2] | 0) != 0 ? !(Jb[c[(c[b2 >> 2] | 0) + 12 >> 2] & 31](b2, d2) | 0) : 0)) {
            if (!(c[d2 + 276 >> 2] | 0)) {
              d2 = 1;
              return d2 | 0;
            }
            if (Jb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 31](d2, b2) | 0) {
              d2 = 1;
              return d2 | 0;
            }
          }
          d2 = 0;
          return d2 | 0;
        }
        function dm(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          j2 = +g[a2 + 32 >> 2];
          h2 = +g[a2 + 36 >> 2];
          e2 = +g[a2 + 40 >> 2];
          i2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          f2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          e2 = e2 + +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          g[d2 >> 2] = +(b2 & 1 ^ 1 | 0) * (j2 + i2) - +(b2 & 1 | 0) * (j2 + i2);
          g[d2 + 4 >> 2] = +(b2 >>> 1 & 1 ^ 1 | 0) * (h2 + f2) - +(b2 >>> 1 & 1 | 0) * (h2 + f2);
          g[d2 + 8 >> 2] = +(b2 >>> 2 & 1 ^ 1 | 0) * e2 - +(b2 >>> 2 & 1 | 0) * e2;
          g[d2 + 12 >> 2] = 0;
          return;
        }
        function em() {
          var b2 = 0;
          while (1) {
            b2 = ic(64) | 0;
            if (b2 | 0)
              break;
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              b2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          g[b2 + 60 >> 2] = 0;
          g[b2 + 8 >> 2] = 0;
          g[b2 + 12 >> 2] = 0.10000000149011612;
          g[b2 + 16 >> 2] = 300;
          g[b2 >> 2] = 1;
          g[b2 + 4 >> 2] = -1;
          g[b2 + 28 >> 2] = 0;
          g[b2 + 32 >> 2] = 0.20000000298023224;
          g[b2 + 36 >> 2] = 0;
          g[b2 + 40 >> 2] = 0;
          g[b2 + 20 >> 2] = 1;
          g[b2 + 24 >> 2] = 0.5;
          c[b2 + 56 >> 2] = 0;
          g[b2 + 48 >> 2] = 0;
          a[b2 + 44 >> 0] = 0;
          return b2 | 0;
        }
        function fm(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          e2 = i;
          i = i + 16 | 0;
          c[e2 >> 2] = -1;
          c[e2 + 4 >> 2] = c[a2 + 16 >> 2];
          if (!(c[b2 + 4 >> 2] | 0))
            c[b2 + 4 >> 2] = e2;
          g2 = c[a2 + 12 >> 2] | 0;
          f2 = +Kb[c[(c[g2 >> 2] | 0) + 12 >> 2] & 15](g2, b2, d2);
          c[a2 + 4 >> 2] = c[(c[a2 + 12 >> 2] | 0) + 4 >> 2];
          i = e2;
          return +f2;
        }
        function gm(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 >> 2] = c[b2 >> 2];
          c[a2 + 4 >> 2] = c[b2 + 16 >> 2];
          c[a2 + 8 >> 2] = c[b2 + 32 >> 2];
          g[a2 + 12 >> 2] = 0;
          c[a2 + 16 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 20 >> 2] = c[b2 + 20 >> 2];
          c[a2 + 24 >> 2] = c[b2 + 36 >> 2];
          g[a2 + 28 >> 2] = 0;
          c[a2 + 32 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 36 >> 2] = c[b2 + 24 >> 2];
          c[a2 + 40 >> 2] = c[b2 + 40 >> 2];
          g[a2 + 44 >> 2] = 0;
          c[a2 + 48 >> 2] = c[b2 + 48 >> 2];
          c[a2 + 52 >> 2] = c[b2 + 52 >> 2];
          c[a2 + 56 >> 2] = c[b2 + 56 >> 2];
          g[a2 + 60 >> 2] = 0;
          return;
        }
        function hm(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          i2 = +g[b2 + 32 >> 2];
          j2 = +g[b2 + 36 >> 2];
          e2 = +g[b2 + 40 >> 2];
          h2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          f2 = +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          e2 = e2 + +Cb[c[(c[b2 >> 2] | 0) + 48 >> 2] & 15](b2);
          f2 = +g[d2 + 4 >> 2] >= 0 ? j2 + f2 : -(j2 + f2);
          e2 = +g[d2 + 8 >> 2] >= 0 ? e2 : -e2;
          g[a2 >> 2] = +g[d2 >> 2] >= 0 ? i2 + h2 : -(i2 + h2);
          g[a2 + 4 >> 2] = f2;
          g[a2 + 8 >> 2] = e2;
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function im(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0, i2 = 0;
          if ((d2 | 0) <= 0)
            return;
          e2 = 0;
          do {
            i2 = +g[a2 + 32 >> 2];
            h2 = +g[a2 + 36 >> 2];
            h2 = +g[b2 + (e2 << 4) + 4 >> 2] >= 0 ? h2 : -h2;
            f2 = +g[a2 + 40 >> 2];
            f2 = +g[b2 + (e2 << 4) + 8 >> 2] >= 0 ? f2 : -f2;
            g[c2 + (e2 << 4) >> 2] = +g[b2 + (e2 << 4) >> 2] >= 0 ? i2 : -i2;
            g[c2 + (e2 << 4) + 4 >> 2] = h2;
            g[c2 + (e2 << 4) + 8 >> 2] = f2;
            g[c2 + (e2 << 4) + 12 >> 2] = 0;
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) != (d2 | 0));
          return;
        }
        function jm(a2, b2, d2, e2, f2, g2, h2, i2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          a2 = c[a2 + 32 >> 2] | 0;
          c[d2 >> 2] = c[a2 + (k2 << 5) + 12 >> 2];
          c[b2 >> 2] = c[a2 + (k2 << 5) + 16 >> 2];
          c[e2 >> 2] = c[a2 + (k2 << 5) + 28 >> 2];
          c[f2 >> 2] = c[a2 + (k2 << 5) + 20 >> 2];
          c[i2 >> 2] = c[a2 + (k2 << 5) >> 2];
          c[g2 >> 2] = c[a2 + (k2 << 5) + 4 >> 2];
          c[h2 >> 2] = c[a2 + (k2 << 5) + 8 >> 2];
          c[j2 >> 2] = c[a2 + (k2 << 5) + 24 >> 2];
          return;
        }
        function km(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[b2 >> 2] = 7100;
          d2 = c[b2 + 68 >> 2] | 0;
          if (d2 | 0 ? (gi(d2), e2 = c[b2 + 68 >> 2] | 0, e2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[e2 + -4 >> 2] | 0);
          }
          d2 = c[b2 + 28 >> 2] | 0;
          if (!d2) {
            a[b2 + 32 >> 0] = 1;
            c[b2 + 28 >> 2] = 0;
            c[b2 + 20 >> 2] = 0;
            b2 = b2 + 24 | 0;
            c[b2 >> 2] = 0;
            return;
          }
          if (a[b2 + 32 >> 0] | 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[b2 + 28 >> 2] = 0;
          a[b2 + 32 >> 0] = 1;
          c[b2 + 28 >> 2] = 0;
          c[b2 + 20 >> 2] = 0;
          b2 = b2 + 24 | 0;
          c[b2 >> 2] = 0;
          return;
        }
        function lm(a2, e2, f2) {
          a2 = a2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var h2 = 0;
          switch (c[a2 + 100 >> 2] | 0) {
            case 0: {
              f2 = (S(c[a2 + 68 >> 2] | 0, f2) | 0) + e2 | 0;
              h2 = +g[(c[a2 + 96 >> 2] | 0) + (f2 << 2) >> 2];
              return +h2;
            }
            case 5: {
              h2 = +(d[(S(c[a2 + 68 >> 2] | 0, f2) | 0) + e2 + (c[a2 + 96 >> 2] | 0) >> 0] | 0) * +g[a2 + 92 >> 2];
              return +h2;
            }
            case 3: {
              f2 = (S(c[a2 + 68 >> 2] | 0, f2) | 0) + e2 | 0;
              h2 = +(b[(c[a2 + 96 >> 2] | 0) + (f2 << 1) >> 1] | 0) * +g[a2 + 92 >> 2];
              return +h2;
            }
            default: {
              h2 = 0;
              return +h2;
            }
          }
          return 0;
        }
        function mm(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[b2 >> 2] = 7480;
          d2 = c[b2 + 108 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 112 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 108 >> 2] = 0;
          }
          a[b2 + 112 >> 0] = 1;
          c[b2 + 108 >> 2] = 0;
          c[b2 + 100 >> 2] = 0;
          c[b2 + 104 >> 2] = 0;
          c[b2 >> 2] = 8236;
          d2 = c[b2 + 56 >> 2] | 0;
          if (d2 | 0 ? (kb[c[c[d2 >> 2] >> 2] & 255](d2), e2 = c[b2 + 56 >> 2] | 0, e2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[e2 + -4 >> 2] | 0);
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function nm(a2, b2) {
          a2 = +a2;
          b2 = +b2;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(79) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = -1;
          c[d2 + 16 >> 2] = 1065353216;
          c[d2 + 20 >> 2] = 1065353216;
          c[d2 + 24 >> 2] = 1065353216;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 48 >> 2] = 0.03999999910593033;
          c[d2 + 4 >> 2] = 10;
          c[d2 >> 2] = 6900;
          c[d2 + 56 >> 2] = 0;
          g[d2 + 32 >> 2] = b2 * 0.5;
          g[d2 + 36 >> 2] = a2;
          g[d2 + 40 >> 2] = a2;
          g[d2 + 44 >> 2] = 0;
          return d2 | 0;
        }
        function om(a2, b2) {
          a2 = +a2;
          b2 = +b2;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(79) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = -1;
          c[d2 + 16 >> 2] = 1065353216;
          c[d2 + 20 >> 2] = 1065353216;
          c[d2 + 24 >> 2] = 1065353216;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 48 >> 2] = 0.03999999910593033;
          c[d2 + 4 >> 2] = 10;
          c[d2 >> 2] = 7e3;
          c[d2 + 56 >> 2] = 2;
          g[d2 + 32 >> 2] = a2;
          g[d2 + 36 >> 2] = a2;
          g[d2 + 40 >> 2] = b2 * 0.5;
          g[d2 + 44 >> 2] = 0;
          return d2 | 0;
        }
        function pm(a2, b2) {
          a2 = +a2;
          b2 = +b2;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(79) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = -1;
          c[d2 + 16 >> 2] = 1065353216;
          c[d2 + 20 >> 2] = 1065353216;
          c[d2 + 24 >> 2] = 1065353216;
          g[d2 + 28 >> 2] = 0;
          g[d2 + 48 >> 2] = 0.03999999910593033;
          c[d2 >> 2] = 6800;
          c[d2 + 4 >> 2] = 10;
          c[d2 + 56 >> 2] = 1;
          g[d2 + 32 >> 2] = a2;
          g[d2 + 36 >> 2] = b2 * 0.5;
          g[d2 + 40 >> 2] = a2;
          g[d2 + 44 >> 2] = 0;
          return d2 | 0;
        }
        function qm(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0;
          e2 = +I(+b2);
          f2 = +I(+c2);
          h2 = +I(+d2);
          b2 = +J(+b2);
          c2 = +J(+c2);
          d2 = +J(+d2);
          g[a2 >> 2] = f2 * h2;
          g[a2 + 4 >> 2] = c2 * b2 * h2 - e2 * d2;
          g[a2 + 8 >> 2] = c2 * e2 * h2 + b2 * d2;
          g[a2 + 12 >> 2] = 0;
          g[a2 + 16 >> 2] = f2 * d2;
          g[a2 + 20 >> 2] = c2 * b2 * d2 + e2 * h2;
          g[a2 + 24 >> 2] = c2 * e2 * d2 - b2 * h2;
          g[a2 + 28 >> 2] = 0;
          g[a2 + 32 >> 2] = -c2;
          g[a2 + 36 >> 2] = f2 * b2;
          g[a2 + 40 >> 2] = f2 * e2;
          g[a2 + 44 >> 2] = 0;
          return;
        }
        function rm(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          c[b2 + 4 >> 2] = c[d2 >> 2];
          c[b2 + 4 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 4 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 4 + 12 >> 2] = c[d2 + 12 >> 2];
          c[b2 + 20 >> 2] = c[e2 >> 2];
          c[b2 + 20 + 4 >> 2] = c[e2 + 4 >> 2];
          c[b2 + 20 + 8 >> 2] = c[e2 + 8 >> 2];
          c[b2 + 20 + 12 >> 2] = c[e2 + 12 >> 2];
          g[b2 + 36 >> 2] = f2;
          a[b2 + 40 >> 0] = 1;
          return;
        }
        function sm(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          switch (e2 | 0) {
            case 5:
            case -1:
              break;
            default:
              return;
          }
          switch (b2 | 0) {
            case 2: {
              g[a2 + 764 >> 2] = d2;
              c[a2 + 748 >> 2] = c[a2 + 748 >> 2] | 2;
              return;
            }
            case 4: {
              g[a2 + 760 >> 2] = d2;
              c[a2 + 748 >> 2] = c[a2 + 748 >> 2] | 1;
              return;
            }
            case 3: {
              g[a2 + 752 >> 2] = d2;
              c[a2 + 748 >> 2] = c[a2 + 748 >> 2] | 4;
              return;
            }
            case 1: {
              g[a2 + 756 >> 2] = d2;
              c[a2 + 748 >> 2] = c[a2 + 748 >> 2] | 8;
              return;
            }
            default:
              return;
          }
        }
        function tm(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 7480;
          d2 = c[b2 + 108 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 112 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 108 >> 2] = 0;
          }
          a[b2 + 112 >> 0] = 1;
          c[b2 + 108 >> 2] = 0;
          c[b2 + 100 >> 2] = 0;
          c[b2 + 104 >> 2] = 0;
          c[b2 >> 2] = 8236;
          d2 = c[b2 + 56 >> 2] | 0;
          if (!d2)
            return;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          d2 = c[b2 + 56 >> 2] | 0;
          if (!d2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          return;
        }
        function um(a2, b2, d2, e2, f2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          h2 = h2 | 0;
          d2 = i;
          i = i + 16 | 0;
          c[d2 >> 2] = 5348;
          c[d2 + 4 >> 2] = e2;
          ne(a2 + 4 | 0, c[a2 + 4 >> 2] | 0, b2, e2 + 4 | 0, e2 + 20 | 0, +g[e2 + 32 >> 2], f2, h2, d2);
          ne(a2 + 64 | 0, c[a2 + 64 >> 2] | 0, b2, e2 + 4 | 0, e2 + 20 | 0, +g[e2 + 32 >> 2], f2, h2, d2);
          i = d2;
          return;
        }
        function vm(a2, b2) {
          a2 = +a2;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          h[l >> 3] = a2;
          d2 = c[l >> 2] | 0;
          e2 = c[l + 4 >> 2] | 0;
          f2 = ps(d2 | 0, e2 | 0, 52) | 0;
          switch (f2 & 2047) {
            case 0: {
              if (a2 != 0) {
                a2 = +vm(a2 * 18446744073709552e3, b2);
                d2 = (c[b2 >> 2] | 0) + -64 | 0;
              } else
                d2 = 0;
              c[b2 >> 2] = d2;
              break;
            }
            case 2047:
              break;
            default: {
              c[b2 >> 2] = (f2 & 2047) + -1022;
              c[l >> 2] = d2;
              c[l + 4 >> 2] = e2 & -2146435073 | 1071644672;
              a2 = +h[l >> 3];
            }
          }
          return +a2;
        }
        function wm(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0, f2 = 0;
          f2 = i;
          i = i + 16 | 0;
          d2 = +g[b2 >> 2];
          e2 = +g[b2 + 4 >> 2];
          c2 = +g[b2 + 8 >> 2];
          if (d2 * d2 + e2 * e2 + c2 * c2 > 0) {
            g[f2 >> 2] = -d2;
            g[f2 + 4 >> 2] = -e2;
            g[f2 + 8 >> 2] = -c2;
            g[f2 + 12 >> 2] = 0;
            be(a2, f2);
            d2 = +g[b2 >> 2];
            e2 = +g[b2 + 4 >> 2];
            c2 = +g[b2 + 8 >> 2];
          }
          g[a2 + 52 >> 2] = +G(+(d2 * d2 + e2 * e2 + c2 * c2));
          i = f2;
          return;
        }
        function xm(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0;
          g2 = c[a2 + 308 >> 2] | 0;
          if ((g2 | 0) <= 0)
            return;
          b2 = c[b2 >> 2] | 0;
          f2 = c[a2 + 316 >> 2] | 0;
          d2 = 0;
          while (1) {
            e2 = f2 + (d2 << 2) | 0;
            if ((c[e2 >> 2] | 0) == (b2 | 0))
              break;
            d2 = d2 + 1 | 0;
            if ((d2 | 0) >= (g2 | 0)) {
              h2 = 7;
              break;
            }
          }
          if ((h2 | 0) == 7)
            return;
          if ((d2 | 0) >= (g2 | 0))
            return;
          c[e2 >> 2] = c[f2 + (g2 + -1 << 2) >> 2];
          c[a2 + 308 >> 2] = g2 + -1;
          return;
        }
        function ym(a2, b2, d2, e2, f2, g2, h2, i2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          +Nb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 3](a2, b2, d2, e2, f2, g2, h2, i2, j2);
          +Nb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 3](a2, b2, d2, e2, f2, g2, h2, i2, j2);
          +Rb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 1](a2, b2, d2, i2);
          return 0;
        }
        function zm(b2, c2, d2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          if (c2 >>> 0 > 0 | (c2 | 0) == 0 & b2 >>> 0 > 4294967295) {
            while (1) {
              e2 = er(b2 | 0, c2 | 0, 10, 0) | 0;
              d2 = d2 + -1 | 0;
              a[d2 >> 0] = e2 | 48;
              e2 = b2;
              b2 = Sv(b2 | 0, c2 | 0, 10, 0) | 0;
              if (!(c2 >>> 0 > 9 | (c2 | 0) == 9 & e2 >>> 0 > 4294967295))
                break;
              else
                c2 = D;
            }
            c2 = b2;
          } else
            c2 = b2;
          if (c2)
            while (1) {
              d2 = d2 + -1 | 0;
              a[d2 >> 0] = (c2 >>> 0) % 10 | 0 | 48;
              if (c2 >>> 0 < 10)
                break;
              else
                c2 = (c2 >>> 0) / 10 | 0;
            }
          return d2 | 0;
        }
        function Am(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, g2 = 0, h2 = 0;
          f2 = c[a2 + 280 >> 2] | 0;
          if ((f2 | 0) <= 0)
            return;
          g2 = c[a2 + 288 >> 2] | 0;
          d2 = 0;
          while (1) {
            e2 = g2 + (d2 << 2) | 0;
            if ((c[e2 >> 2] | 0) == (b2 | 0))
              break;
            d2 = d2 + 1 | 0;
            if ((d2 | 0) >= (f2 | 0)) {
              h2 = 7;
              break;
            }
          }
          if ((h2 | 0) == 7)
            return;
          if ((d2 | 0) >= (f2 | 0))
            return;
          c[e2 >> 2] = c[g2 + (f2 + -1 << 2) >> 2];
          c[(c[a2 + 288 >> 2] | 0) + (f2 + -1 << 2) >> 2] = b2;
          c[a2 + 280 >> 2] = f2 + -1;
          return;
        }
        function Bm() {
          var b2 = 0, e2 = 0, f2 = 0;
          f2 = i;
          i = i + 16 | 0;
          a[f2 >> 0] = 10;
          b2 = c[2381] | 0;
          if (!b2)
            if (!(po(9508) | 0)) {
              b2 = c[2381] | 0;
              e2 = 4;
            } else
              b2 = -1;
          else
            e2 = 4;
          do
            if ((e2 | 0) == 4) {
              e2 = c[2382] | 0;
              if (!(e2 >>> 0 >= b2 >>> 0 | (a[9583] | 0) == 10)) {
                c[2382] = e2 + 1;
                a[e2 >> 0] = 10;
                b2 = 10;
                break;
              }
              if ((yb[c[9544 >> 2] & 63](9508, f2, 1) | 0) == 1)
                b2 = d[f2 >> 0] | 0;
              else
                b2 = -1;
            }
          while (0);
          i = f2;
          return b2 | 0;
        }
        function Cm() {
          var a2 = 0, b2 = 0;
          b2 = i;
          i = i + 32 | 0;
          while (1) {
            a2 = ic(112) | 0;
            if (a2 | 0)
              break;
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            if (!a2) {
              a2 = 0;
              break;
            }
            Vb[a2 & 3]();
          }
          c[b2 >> 2] = 0;
          c[b2 + 4 >> 2] = 0;
          c[b2 + 8 >> 2] = 4096;
          c[b2 + 12 >> 2] = 4096;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 20 >> 2] = 1;
          gg(a2, b2);
          i = b2;
          return a2 | 0;
        }
        function Dm(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          e2 = i;
          i = i + 16 | 0;
          c[e2 >> 2] = -1;
          c[e2 + 4 >> 2] = c[a2 + 24 >> 2];
          if (!(c[b2 + 4 >> 2] | 0))
            c[b2 + 4 >> 2] = e2;
          g2 = c[a2 + 20 >> 2] | 0;
          f2 = +Kb[c[(c[g2 >> 2] | 0) + 12 >> 2] & 15](g2, b2, d2);
          c[a2 + 4 >> 2] = c[(c[a2 + 20 >> 2] | 0) + 4 >> 2];
          i = e2;
          return +f2;
        }
        function Em(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0;
          a:
            do
              switch (b2 | 0) {
                case 2:
                case 1: {
                  if (c2 >>> 0 < 3) {
                    d2 = +g[a2 + 600 >> 2];
                    break a;
                  }
                  if ((c2 + -3 | 0) >>> 0 < 3)
                    d2 = +g[a2 + 432 >> 2];
                  else
                    d2 = 0;
                  break;
                }
                case 4:
                case 3: {
                  if (c2 >>> 0 < 3) {
                    d2 = +g[a2 + 596 >> 2];
                    break a;
                  }
                  if ((c2 + -3 | 0) >>> 0 < 3)
                    d2 = +g[a2 + 604 >> 2];
                  else
                    d2 = 0;
                  break;
                }
                default:
                  d2 = 0;
              }
            while (0);
          return +d2;
        }
        function Fm(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          b2 = c[d2 >> 2] | 0;
          b2 = Jb[c[(c[b2 >> 2] | 0) + 56 >> 2] & 31](b2, 16) | 0;
          d2 = c[d2 >> 2] | 0;
          c[b2 + 4 >> 2] = d2;
          c[b2 >> 2] = 6436;
          a[b2 + 8 >> 0] = 0;
          c[b2 + 12 >> 2] = 0;
          c[b2 + 12 >> 2] = yb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, c[f2 + 8 >> 2] | 0) | 0;
          a[b2 + 8 >> 0] = 1;
          return b2 | 0;
        }
        function Gm(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          var e2 = 0, f2 = 0;
          f2 = i;
          i = i + 16 | 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(311) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          c[f2 >> 2] = 1065353216;
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = 0;
          g[f2 + 12 >> 2] = 0;
          Qg(e2, a2, b2, d2, f2);
          i = f2;
          return e2 | 0;
        }
        function Hm(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = c[a2 + 60 >> 2] | 0;
          if (!d2)
            return;
          e2 = ob[c[(c[d2 >> 2] | 0) + 8 >> 2] & 127](d2) | 0;
          e2 = yb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
          d2 = c[a2 + 60 >> 2] | 0;
          d2 = yb[c[(c[d2 >> 2] | 0) + 12 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, b2) | 0;
          ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1346456916, c[a2 + 60 >> 2] | 0);
          return;
        }
        function Im(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          switch (b2 | 0) {
            case 2:
            case 1:
              if (e2 >>> 0 < 3) {
                g[a2 + 600 >> 2] = d2;
                c[a2 + 592 >> 2] = c[a2 + 592 >> 2] | 2;
                return;
              } else {
                g[a2 + 432 >> 2] = d2;
                return;
              }
            case 4:
            case 3:
              if (e2 >>> 0 < 3) {
                g[a2 + 596 >> 2] = d2;
                c[a2 + 592 >> 2] = c[a2 + 592 >> 2] | 1;
                return;
              } else {
                g[a2 + 604 >> 2] = d2;
                c[a2 + 592 >> 2] = c[a2 + 592 >> 2] | 4;
                return;
              }
            default:
              return;
          }
        }
        function Jm(a2, d2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          d2 = c[a2 + 56 >> 2] | 0;
          if ((d2 & 65535) << 16 >> 16)
            return;
          b[a2 + 64 >> 1] = 1;
          g2 = c[a2 + 60 >> 2] | 0;
          if ((d2 >>> 16 & 65535) > 1) {
            e2 = 1;
            d2 = 1;
            while (1) {
              b[g2 + (d2 << 6) + 48 >> 1] = d2 + 1;
              f2 = e2 + 1 << 16 >> 16;
              d2 = b[a2 + 58 >> 1] | 0;
              if ((f2 & 65535) < (d2 & 65535)) {
                e2 = f2;
                d2 = f2 & 65535;
              } else
                break;
            }
          } else
            d2 = d2 >>> 16 & 65535;
          b[g2 + ((d2 & 65535) + -1 << 6) + 48 >> 1] = 0;
          return;
        }
        function Km() {
          var a2 = 0, b2 = 0;
          b2 = i;
          i = i + 32 | 0;
          while (1) {
            a2 = ic(92) | 0;
            if (a2 | 0)
              break;
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            if (!a2) {
              a2 = 0;
              break;
            }
            Vb[a2 & 3]();
          }
          c[b2 >> 2] = 0;
          c[b2 + 4 >> 2] = 0;
          c[b2 + 8 >> 2] = 4096;
          c[b2 + 12 >> 2] = 4096;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 20 >> 2] = 1;
          Ud(a2, b2);
          i = b2;
          return a2 | 0;
        }
        function Lm(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          if ((e2 | 0) >= 4096)
            return _a(b2 | 0, d2 | 0, e2 | 0) | 0;
          f2 = b2 | 0;
          if ((b2 & 3) == (d2 & 3)) {
            while (b2 & 3) {
              if (!e2)
                return f2 | 0;
              a[b2 >> 0] = a[d2 >> 0] | 0;
              b2 = b2 + 1 | 0;
              d2 = d2 + 1 | 0;
              e2 = e2 - 1 | 0;
            }
            while ((e2 | 0) >= 4) {
              c[b2 >> 2] = c[d2 >> 2];
              b2 = b2 + 4 | 0;
              d2 = d2 + 4 | 0;
              e2 = e2 - 4 | 0;
            }
          }
          while ((e2 | 0) > 0) {
            a[b2 >> 0] = a[d2 >> 0] | 0;
            b2 = b2 + 1 | 0;
            d2 = d2 + 1 | 0;
            e2 = e2 - 1 | 0;
          }
          return f2 | 0;
        }
        function Mm(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0;
          a:
            do
              switch (c2 | 0) {
                case 5:
                case -1:
                  switch (b2 | 0) {
                    case 2: {
                      d2 = +g[a2 + 764 >> 2];
                      break a;
                    }
                    case 4: {
                      d2 = +g[a2 + 760 >> 2];
                      break a;
                    }
                    case 3: {
                      d2 = +g[a2 + 752 >> 2];
                      break a;
                    }
                    case 1: {
                      d2 = +g[a2 + 756 >> 2];
                      break a;
                    }
                    default: {
                      d2 = 0;
                      break a;
                    }
                  }
                default:
                  d2 = 0;
              }
            while (0);
          return +d2;
        }
        function Nm(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = c[a2 + 56 >> 2] | 0;
          if (!d2)
            return;
          e2 = ob[c[(c[d2 >> 2] | 0) + 12 >> 2] & 127](d2) | 0;
          e2 = yb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
          d2 = c[a2 + 56 >> 2] | 0;
          d2 = yb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 63](d2, c[e2 + 8 >> 2] | 0, b2) | 0;
          ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1213612625, c[a2 + 56 >> 2] | 0);
          return;
        }
        function Om(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
          b2 = +g[(c[a2 + 28 >> 2] | 0) + 384 >> 2];
          d2 = +g[(c[a2 + 32 >> 2] | 0) + 384 >> 2];
          if (d2 == 0)
            b2 = 1;
          else
            b2 = b2 / (b2 + d2);
          f2 = 1 - b2;
          e2 = b2 * +g[a2 + 1116 >> 2] + f2 * +g[a2 + 1180 >> 2];
          d2 = b2 * +g[a2 + 1120 >> 2] + f2 * +g[a2 + 1184 >> 2];
          g[a2 + 1284 >> 2] = b2 * +g[a2 + 1112 >> 2] + f2 * +g[a2 + 1176 >> 2];
          g[a2 + 1288 >> 2] = e2;
          g[a2 + 1292 >> 2] = d2;
          g[a2 + 1296 >> 2] = 0;
          return;
        }
        function Pm(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0;
          e2 = +g[a2 + 32 >> 2];
          f2 = +g[a2 + 36 >> 2];
          h2 = +g[a2 + 40 >> 2];
          d2 = +g[b2 >> 2];
          if (!(d2 <= e2 + c2)) {
            b2 = 0;
            return b2 | 0;
          }
          if (!(d2 >= -e2 - c2)) {
            b2 = 0;
            return b2 | 0;
          }
          d2 = +g[b2 + 4 >> 2];
          if (!(d2 <= f2 + c2)) {
            b2 = 0;
            return b2 | 0;
          }
          if (!(d2 >= -f2 - c2)) {
            b2 = 0;
            return b2 | 0;
          }
          d2 = +g[b2 + 8 >> 2];
          if (!(d2 <= h2 + c2)) {
            b2 = 0;
            return b2 | 0;
          }
          b2 = d2 >= -h2 - c2;
          return b2 | 0;
        }
        function Qm(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          if (!(+g[b2 + 36 >> 2] > f2))
            return;
          a[b2 + 40 >> 0] = 1;
          c[b2 + 4 >> 2] = c[d2 >> 2];
          c[b2 + 4 + 4 >> 2] = c[d2 + 4 >> 2];
          c[b2 + 4 + 8 >> 2] = c[d2 + 8 >> 2];
          c[b2 + 4 + 12 >> 2] = c[d2 + 12 >> 2];
          c[b2 + 20 >> 2] = c[e2 >> 2];
          c[b2 + 20 + 4 >> 2] = c[e2 + 4 >> 2];
          c[b2 + 20 + 8 >> 2] = c[e2 + 8 >> 2];
          c[b2 + 20 + 12 >> 2] = c[e2 + 12 >> 2];
          g[b2 + 36 >> 2] = f2;
          return;
        }
        function Rm(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          d2 = +g[b2 + 32 >> 2];
          i2 = +g[b2 + 40 >> 2];
          k2 = +g[c2 >> 2];
          e2 = +g[c2 + 4 >> 2];
          j2 = +G(+(k2 * k2 + e2 * e2));
          f2 = +g[c2 + 8 >> 2];
          if (j2 != 0) {
            h2 = e2 * (d2 / j2);
            e2 = f2 < 0 ? -i2 : i2;
            d2 = k2 * (d2 / j2);
          } else {
            h2 = 0;
            e2 = f2 < 0 ? -i2 : i2;
          }
          g[a2 >> 2] = d2;
          g[a2 + 8 >> 2] = e2;
          g[a2 + 4 >> 2] = h2;
          return;
        }
        function Sm(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0, k2 = 0;
          d2 = +g[b2 + 32 >> 2];
          i2 = +g[b2 + 36 >> 2];
          k2 = +g[c2 >> 2];
          e2 = +g[c2 + 8 >> 2];
          j2 = +G(+(k2 * k2 + e2 * e2));
          f2 = +g[c2 + 4 >> 2];
          if (j2 != 0) {
            h2 = e2 * (d2 / j2);
            e2 = f2 < 0 ? -i2 : i2;
            d2 = k2 * (d2 / j2);
          } else {
            h2 = 0;
            e2 = f2 < 0 ? -i2 : i2;
          }
          g[a2 >> 2] = d2;
          g[a2 + 4 >> 2] = e2;
          g[a2 + 8 >> 2] = h2;
          return;
        }
        function Tm(a2, d2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = c[d2 >> 2] | 0;
          f2 = c[a2 + 80 >> 2] | 0;
          if ((e2 | 0) == (f2 | 0)) {
            f2 = 0;
            return f2 | 0;
          }
          d2 = c[d2 + 4 >> 2] | 0;
          if (!((b[a2 + 10 >> 1] & (d2 & 65535)) << 16 >> 16)) {
            f2 = 0;
            return f2 | 0;
          }
          if (!((b[a2 + 8 >> 1] & (d2 >>> 16 & 65535)) << 16 >> 16)) {
            f2 = 0;
            return f2 | 0;
          }
          a2 = c[a2 + 92 >> 2] | 0;
          f2 = yb[c[(c[a2 >> 2] | 0) + 28 >> 2] & 63](a2, f2, e2) | 0;
          return f2 | 0;
        }
        function Um(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0, h2 = 0, i2 = 0, j2 = 0;
          d2 = +g[b2 + 36 >> 2];
          f2 = +g[b2 + 32 >> 2];
          j2 = +g[c2 + 4 >> 2];
          e2 = +g[c2 + 8 >> 2];
          i2 = +G(+(j2 * j2 + e2 * e2));
          if (i2 != 0) {
            h2 = e2 * (d2 / i2);
            e2 = +g[c2 >> 2] < 0 ? -f2 : f2;
            d2 = j2 * (d2 / i2);
          } else {
            h2 = 0;
            e2 = +g[c2 >> 2] < 0 ? -f2 : f2;
          }
          g[a2 + 4 >> 2] = d2;
          g[a2 >> 2] = e2;
          g[a2 + 8 >> 2] = h2;
          return;
        }
        function Vm(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          var c2 = 0, d2 = 0;
          c2 = i;
          i = i + 16 | 0;
          if (!(+g[a2 + 68 >> 2] > 0)) {
            i = c2;
            return;
          }
          d2 = -+g[a2 + 92 >> 2];
          b2 = -+g[a2 + 96 >> 2];
          g[c2 >> 2] = -+g[a2 + 88 >> 2];
          g[c2 + 4 >> 2] = d2;
          g[c2 + 8 >> 2] = b2;
          g[c2 + 12 >> 2] = 0;
          Zi(a2 + 4 | 0, c2, a2 + 164 | 0);
          Zi(a2 + 16 | 0, a2 + 88 | 0, a2 + 180 | 0);
          i = c2;
          return;
        }
        function Wm(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, g2 = 0;
          if ((d2 | 0) > -1 | (d2 | 0) == -1 & c2 >>> 0 > 4294967295) {
            e2 = (+(c2 >>> 0) + 4294967296 * +(d2 >>> 0)) * 18446744073709552e3 + (+(a2 >>> 0) + 4294967296 * +(b2 >>> 0));
            return +e2;
          } else {
            g2 = Ds(0, 0, a2 | 0, b2 | 0) | 0;
            f2 = D;
            d2 = Ct((a2 | 0) == 0 & (b2 | 0) == 0 & 1 | 0, 0, ~c2 | 0, ~d2 | 0) | 0;
            e2 = -+Wm(g2, f2, d2, D);
            return +e2;
          }
          return 0;
        }
        function Xm(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          f2 = c[b2 + 16 >> 2] | 0;
          do
            if (f2) {
              if ((f2 | 0) != (d2 | 0)) {
                c[b2 + 36 >> 2] = (c[b2 + 36 >> 2] | 0) + 1;
                c[b2 + 24 >> 2] = 2;
                a[b2 + 54 >> 0] = 1;
                break;
              }
              if ((c[b2 + 24 >> 2] | 0) == 2)
                c[b2 + 24 >> 2] = e2;
            } else {
              c[b2 + 16 >> 2] = d2;
              c[b2 + 24 >> 2] = e2;
              c[b2 + 36 >> 2] = 1;
            }
          while (0);
          return;
        }
        function Ym(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          f2 = c[a2 + 84 >> 2] | 0;
          a2 = c[f2 + 8 >> 2] | 0;
          if ((a2 | 0) <= 0)
            return;
          e2 = 0;
          do {
            d2 = c[(c[f2 + 16 >> 2] | 0) + (e2 * 12 | 0) + 8 >> 2] | 0;
            if (d2) {
              mb[c[(c[d2 >> 2] | 0) + 16 >> 2] & 127](d2, b2);
              a2 = c[f2 + 8 >> 2] | 0;
            }
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) < (a2 | 0));
          return;
        }
        function Zm(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          f2 = i;
          i = i + 32 | 0;
          c[f2 >> 2] = c[a2 + 60 >> 2];
          c[f2 + 4 >> 2] = 0;
          c[f2 + 8 >> 2] = b2;
          c[f2 + 12 >> 2] = f2 + 20;
          c[f2 + 16 >> 2] = d2;
          a2 = ab(140, f2 | 0) | 0;
          if (a2 >>> 0 <= 4294963200)
            if ((a2 | 0) < 0)
              e2 = 5;
            else
              a2 = c[f2 + 20 >> 2] | 0;
          else {
            c[6326] = 0 - a2;
            e2 = 5;
          }
          if ((e2 | 0) == 5) {
            c[f2 + 20 >> 2] = -1;
            a2 = -1;
          }
          i = f2;
          return a2 | 0;
        }
        function _m(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = i;
          i = i + 48 | 0;
          f2 = c[b2 + 192 >> 2] | 0;
          Yb[c[(c[f2 >> 2] | 0) + 8 >> 2] & 127](f2, b2 + 4 | 0, e2 + 32 | 0, e2 + 16 | 0);
          c[e2 >> 2] = 5988;
          c[e2 + 4 >> 2] = b2;
          c[e2 + 8 >> 2] = a2;
          c[e2 + 12 >> 2] = d2;
          d2 = c[a2 + 68 >> 2] | 0;
          Yb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 127](d2, e2 + 32 | 0, e2 + 16 | 0, e2);
          i = e2;
          return;
        }
        function $m(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          ii(a2, b2, d2) | 0;
          c[b2 + 52 >> 2] = c[a2 + 300 >> 2];
          c[b2 + 56 >> 2] = c[a2 + 304 >> 2];
          c[b2 + 60 >> 2] = c[a2 + 308 >> 2];
          c[b2 + 64 >> 2] = c[a2 + 312 >> 2];
          c[b2 + 68 >> 2] = c[a2 + 316 >> 2];
          c[b2 + 72 >> 2] = c[a2 + 320 >> 2];
          c[b2 + 76 >> 2] = c[a2 + 324 >> 2];
          c[b2 + 80 >> 2] = c[a2 + 328 >> 2];
          return 12168;
        }
        function an(a2) {
          a2 = +a2;
          var b2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(75) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = -1;
          c[b2 + 16 >> 2] = 1065353216;
          c[b2 + 20 >> 2] = 1065353216;
          c[b2 + 24 >> 2] = 1065353216;
          g[b2 + 28 >> 2] = 0;
          c[b2 >> 2] = 8368;
          c[b2 + 4 >> 2] = 8;
          g[b2 + 32 >> 2] = a2;
          g[b2 + 48 >> 2] = a2;
          return b2 | 0;
        }
        function bn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          c[a2 + 388 >> 2] = c[b2 >> 2];
          c[a2 + 388 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 388 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 388 + 12 >> 2] = c[b2 + 12 >> 2];
          f2 = +g[a2 + 384 >> 2];
          e2 = +g[a2 + 392 >> 2] * f2;
          d2 = +g[a2 + 396 >> 2] * f2;
          g[a2 + 600 >> 2] = +g[a2 + 388 >> 2] * f2;
          g[a2 + 604 >> 2] = e2;
          g[a2 + 608 >> 2] = d2;
          g[a2 + 612 >> 2] = 0;
          return;
        }
        function cn(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0;
          kb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 255](a2);
          kb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 255](a2);
          b2 = c[a2 + 24 >> 2] | 0;
          if (!b2)
            return;
          e2 = c[(c[b2 >> 2] | 0) + 32 >> 2] | 0;
          d2 = c[a2 + 68 >> 2] | 0;
          d2 = ob[c[(c[d2 >> 2] | 0) + 36 >> 2] & 127](d2) | 0;
          Yb[e2 & 127](b2, d2, a2 + 28 | 0, c[a2 + 24 >> 2] | 0);
          return;
        }
        function dn(a2) {
          a2 = a2 | 0;
          c[a2 >> 2] = 1065353216;
          c[a2 + 4 >> 2] = 0;
          c[a2 + 4 + 4 >> 2] = 0;
          c[a2 + 4 + 8 >> 2] = 0;
          c[a2 + 4 + 12 >> 2] = 0;
          c[a2 + 20 >> 2] = 1065353216;
          c[a2 + 24 >> 2] = 0;
          c[a2 + 24 + 4 >> 2] = 0;
          c[a2 + 24 + 8 >> 2] = 0;
          c[a2 + 24 + 12 >> 2] = 0;
          c[a2 + 40 >> 2] = 1065353216;
          c[a2 + 44 >> 2] = 0;
          c[a2 + 44 + 4 >> 2] = 0;
          c[a2 + 44 + 8 >> 2] = 0;
          c[a2 + 44 + 12 >> 2] = 0;
          c[a2 + 44 + 16 >> 2] = 0;
          return;
        }
        function en(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          f2 = c[b2 >> 2] | 0;
          a2 = c[d2 >> 2] | 0;
          a2 = (c[a2 + 248 >> 2] | 0) == 4 ? a2 : 0;
          if (!((f2 | 0) == 0 ? 1 : (c[f2 + 248 >> 2] | 0) != 4))
            Yb[c[(c[f2 >> 2] | 0) + 32 >> 2] & 127](f2, d2, e2, b2);
          if (!a2)
            return 0;
          Yb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2, e2, d2);
          return 0;
        }
        function fn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          while (1) {
            d2 = ic(64) | 0;
            if (d2 | 0)
              break;
            d2 = c[6453] | 0;
            c[6453] = d2 + 0;
            if (!d2) {
              d2 = 0;
              break;
            }
            Vb[d2 & 3]();
          }
          e2 = d2 + 48 | 0;
          al(d2, a2);
          c[e2 >> 2] = c[b2 >> 2];
          c[e2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[e2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[e2 + 12 >> 2] = c[b2 + 12 >> 2];
          return d2 | 0;
        }
        function gn(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          b2 = i;
          i = i + 16 | 0;
          Ra(a2 | 0) | 0;
          if (Za(25804, 3) | 0)
            Vi(21654, b2);
          a2 = Qa(c[6452] | 0) | 0;
          if ((a2 | 0 ? (d2 = c[a2 >> 2] | 0, d2 | 0) : 0) ? (c[d2 + 48 >> 2] & -256 | 0) == 1126902528 ? (c[d2 + 48 + 4 >> 2] | 0) == 1129074247 : 0 : 0)
            ru(c[d2 + 12 >> 2] | 0);
          d2 = c[2405] | 0;
          c[2405] = d2 + 0;
          ru(d2);
        }
        function hn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          if (c[b2 + 40 >> 2] | 0) {
            hn(a2, c[b2 + 36 >> 2] | 0);
            hn(a2, c[b2 + 40 >> 2] | 0);
          }
          if ((c[a2 >> 2] | 0) == (b2 | 0))
            c[a2 >> 2] = 0;
          d2 = c[a2 + 4 >> 2] | 0;
          if (!d2) {
            c[a2 + 4 >> 2] = b2;
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          c[a2 + 4 >> 2] = b2;
          return;
        }
        function jn(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0;
          g2 = c[a2 + 32 >> 2] | 0;
          c[g2 >> 2] = (c[g2 >> 2] | 0) + 1;
          tg(a2, Cd(a2, b2, f2) | 0);
          tg(a2, Cd(a2, d2, f2) | 0);
          tg(a2, Cd(a2, e2, f2) | 0);
          return;
        }
        function kn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[a2 + 72 >> 2] = (c[a2 + 72 >> 2] | 0) + 1;
          d2 = c[a2 + 20 >> 2] | 0;
          if ((d2 | 0) > 0)
            do {
              e2 = d2;
              d2 = d2 + -1 | 0;
              if ((c[(c[a2 + 28 >> 2] | 0) + (d2 * 80 | 0) + 64 >> 2] | 0) == (b2 | 0))
                je(a2, d2);
            } while ((e2 | 0) > 1);
          kb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 255](a2);
          return;
        }
        function ln(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          f2 = i;
          i = i + 16 | 0;
          c[f2 >> 2] = a2;
          c[f2 + 4 >> 2] = e2;
          e2 = c[a2 + 72 + ((c[(c[b2 + 4 >> 2] | 0) + 4 >> 2] | 0) * 144 | 0) + (c[(c[d2 + 4 >> 2] | 0) + 4 >> 2] << 2) >> 2] | 0;
          e2 = sb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 31](e2, f2, b2, d2) | 0;
          i = f2;
          return e2 | 0;
        }
        function mn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          a2 = c[a2 + 64 >> 2] | 0;
          if (!b2)
            return;
          d2 = c[a2 + 16 >> 2] | 0;
          if (d2 >>> 0 <= b2 >>> 0 ? (d2 + (S(c[a2 >> 2] | 0, c[a2 + 4 >> 2] | 0) | 0) | 0) >>> 0 > b2 >>> 0 : 0) {
            c[b2 >> 2] = c[a2 + 12 >> 2];
            c[a2 + 12 >> 2] = b2;
            c[a2 + 8 >> 2] = (c[a2 + 8 >> 2] | 0) + 1;
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function nn(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          if ((c[a2 + 232 >> 2] | 0) <= 0)
            return;
          b2 = 0;
          do {
            d2 = (c[(c[a2 + 240 >> 2] | 0) + (b2 << 2) >> 2] | 0) + 452 | 0;
            c[d2 >> 2] = 0;
            c[d2 + 4 >> 2] = 0;
            c[d2 + 8 >> 2] = 0;
            c[d2 + 12 >> 2] = 0;
            c[d2 + 16 >> 2] = 0;
            c[d2 + 20 >> 2] = 0;
            c[d2 + 24 >> 2] = 0;
            c[d2 + 28 >> 2] = 0;
            b2 = b2 + 1 | 0;
          } while ((b2 | 0) < (c[a2 + 232 >> 2] | 0));
          return;
        }
        function on(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          d2 = c[a2 + 52 >> 2] | 0;
          if ((d2 | 0) <= 0)
            return;
          f2 = 0;
          do {
            e2 = c[(c[a2 + 60 >> 2] | 0) + (f2 << 2) >> 2] | 0;
            if (e2) {
              mb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, b2);
              d2 = c[a2 + 52 >> 2] | 0;
            }
            f2 = f2 + 1 | 0;
          } while ((f2 | 0) < (d2 | 0));
          return;
        }
        function pn(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0;
          e2 = +I(+(b2 * 0.5));
          b2 = +J(+(b2 * 0.5));
          f2 = +I(+(c2 * 0.5));
          c2 = +J(+(c2 * 0.5));
          h2 = +I(+(d2 * 0.5));
          d2 = +J(+(d2 * 0.5));
          g[a2 >> 2] = d2 * f2 * e2 - h2 * c2 * b2;
          g[a2 + 4 >> 2] = h2 * c2 * e2 + d2 * f2 * b2;
          g[a2 + 8 >> 2] = h2 * f2 * b2 - d2 * c2 * e2;
          g[a2 + 12 >> 2] = h2 * f2 * e2 + d2 * c2 * b2;
          return;
        }
        function qn(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          f2 = c[a2 + 32 >> 2] | 0;
          c[f2 >> 2] = (c[f2 >> 2] | 0) + 1;
          tg(a2, Cd(a2, b2, 0) | 0);
          tg(a2, Cd(a2, d2, 0) | 0);
          tg(a2, Cd(a2, e2, 0) | 0);
          return;
        }
        function rn(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[a2 + 52 >> 2] = c[b2 >> 2];
          c[a2 + 52 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 52 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 52 + 12 >> 2] = c[b2 + 12 >> 2];
          c[a2 + 68 >> 2] = c[d2 >> 2];
          c[a2 + 68 + 4 >> 2] = c[d2 + 4 >> 2];
          c[a2 + 68 + 8 >> 2] = c[d2 + 8 >> 2];
          c[a2 + 68 + 12 >> 2] = c[d2 + 12 >> 2];
          c[a2 + 48 >> 2] = 1;
          return;
        }
        function sn() {
          var b2 = 0;
          while (1) {
            b2 = ic(40) | 0;
            if (b2 | 0)
              break;
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              b2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          g[b2 + 12 >> 2] = 1;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 4 >> 2] = 5;
          c[b2 >> 2] = 3808;
          a[b2 + 36 >> 0] = 1;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          a[b2 + 16 >> 0] = 1;
          return b2 | 0;
        }
        function tn(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          var e2 = 0, f2 = 0, h2 = 0;
          e2 = +I(+(b2 * 0.5));
          b2 = +J(+(b2 * 0.5));
          f2 = +I(+(c2 * 0.5));
          c2 = +J(+(c2 * 0.5));
          h2 = +I(+(d2 * 0.5));
          d2 = +J(+(d2 * 0.5));
          g[a2 >> 2] = h2 * c2 * e2 + d2 * f2 * b2;
          g[a2 + 4 >> 2] = h2 * f2 * b2 - d2 * c2 * e2;
          g[a2 + 8 >> 2] = d2 * f2 * e2 - h2 * c2 * b2;
          g[a2 + 12 >> 2] = h2 * f2 * e2 + d2 * c2 * b2;
          return;
        }
        function un(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          c[d2 >> 2] = c[b2 + 16 >> 2];
          c[d2 + 4 >> 2] = c[b2 + 16 + 4 >> 2];
          c[d2 + 8 >> 2] = c[b2 + 16 + 8 >> 2];
          c[d2 + 12 >> 2] = c[b2 + 16 + 12 >> 2];
          c[e2 >> 2] = c[b2 + 32 >> 2];
          c[e2 + 4 >> 2] = c[b2 + 32 + 4 >> 2];
          c[e2 + 8 >> 2] = c[b2 + 32 + 8 >> 2];
          c[e2 + 12 >> 2] = c[b2 + 32 + 12 >> 2];
          return;
        }
        function vn(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          e2 = +e2;
          f2 = +f2;
          g[a2 + 692 >> 2] = (c2 - b2) * 0.5;
          b2 = +jh((c2 - b2) * 0.5 + b2, 6.2831854820251465);
          if (!(b2 < -3.1415927410125732)) {
            if (b2 > 3.1415927410125732)
              b2 = b2 + -6.2831854820251465;
          } else
            b2 = b2 + 6.2831854820251465;
          g[a2 + 688 >> 2] = b2;
          g[a2 + 696 >> 2] = d2;
          g[a2 + 700 >> 2] = e2;
          g[a2 + 704 >> 2] = f2;
          return;
        }
        function wn(a2, b2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          var h2 = 0, i2 = 0;
          i2 = c[a2 + 4 >> 2] | 0;
          if (!(i2 & 1))
            h2 = i2 >> 8;
          else
            h2 = c[(c[e2 >> 2] | 0) + (i2 >> 8) >> 2] | 0;
          a2 = c[a2 >> 2] | 0;
          Ab[c[(c[a2 >> 2] | 0) + 20 >> 2] & 7](a2, b2, d2, e2 + h2 | 0, i2 & 2 | 0 ? f2 : 2, g2);
          return;
        }
        function xn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          a2 = c[a2 + 64 >> 2] | 0;
          d2 = c[a2 + 8 >> 2] | 0;
          if (d2 | 0) {
            b2 = c[a2 + 12 >> 2] | 0;
            c[a2 + 12 >> 2] = c[b2 >> 2];
            c[a2 + 8 >> 2] = d2 + -1;
            return b2 | 0;
          }
          c[6324] = (c[6324] | 0) + 1;
          a2 = ic(b2 + 19 | 0) | 0;
          if (!a2) {
            b2 = 0;
            return b2 | 0;
          }
          c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
          b2 = a2 + 4 + 15 & -16;
          return b2 | 0;
        }
        function yn(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0, h2 = 0;
          f2 = b2 + e2 | 0;
          if ((e2 | 0) >= 20) {
            d2 = d2 & 255;
            g2 = b2 & 3;
            h2 = d2 | d2 << 8 | d2 << 16 | d2 << 24;
            if (g2) {
              g2 = b2 + 4 - g2 | 0;
              while ((b2 | 0) < (g2 | 0)) {
                a[b2 >> 0] = d2;
                b2 = b2 + 1 | 0;
              }
            }
            while ((b2 | 0) < (f2 & ~3 | 0)) {
              c[b2 >> 2] = h2;
              b2 = b2 + 4 | 0;
            }
          }
          while ((b2 | 0) < (f2 | 0)) {
            a[b2 >> 0] = d2;
            b2 = b2 + 1 | 0;
          }
          return b2 - e2 | 0;
        }
        function zn(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          e2 = c[b2 >> 2] | 0;
          a2 = c[d2 >> 2] | 0;
          a2 = (c[a2 + 248 >> 2] | 0) == 4 ? a2 : 0;
          if (!((e2 | 0) == 0 ? 1 : (c[e2 + 248 >> 2] | 0) != 4))
            Ub[c[(c[e2 >> 2] | 0) + 28 >> 2] & 127](e2, d2, b2);
          if (!a2)
            return 0;
          Ub[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, b2, d2);
          return 0;
        }
        function An(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = +d2;
          var e2 = 0;
          e2 = i;
          i = i + 16 | 0;
          g[e2 + 12 >> 2] = b2;
          g[e2 + 8 >> 2] = d2;
          g[e2 + 4 >> 2] = 0;
          g[e2 >> 2] = 1;
          c[a2 + 484 >> 2] = c[(b2 < 0 ? e2 + 4 | 0 : b2 > 1 ? e2 : e2 + 12 | 0) >> 2];
          g[e2 + 4 >> 2] = 0;
          g[e2 >> 2] = 1;
          c[a2 + 488 >> 2] = c[(d2 < 0 ? e2 + 4 | 0 : d2 > 1 ? e2 : e2 + 8 | 0) >> 2];
          i = e2;
          return;
        }
        function Bn(a2, b2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
            gl(b2, d2, e2, f2);
          else {
            a2 = c[a2 + 8 >> 2] | 0;
            Ab[c[(c[a2 >> 2] | 0) + 20 >> 2] & 7](a2, b2, d2, e2, f2, g2);
          }
          return;
        }
        function Cn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          d2 = c[(c[b2 >> 2] | 0) + 16 >> 2] | 0;
          e2 = ob[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2) | 0;
          e2 = yb[d2 & 63](b2, e2, 1) | 0;
          d2 = yb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 63](a2, c[e2 + 8 >> 2] | 0, b2) | 0;
          ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1497645650, a2);
          return;
        }
        function Dn(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          e2 = +e2;
          g[a2 + 692 >> 2] = (c2 - b2) * 0.5;
          b2 = +jh((c2 - b2) * 0.5 + b2, 6.2831854820251465);
          if (!(b2 < -3.1415927410125732)) {
            if (b2 > 3.1415927410125732)
              b2 = b2 + -6.2831854820251465;
          } else
            b2 = b2 + 6.2831854820251465;
          g[a2 + 688 >> 2] = b2;
          g[a2 + 696 >> 2] = d2;
          g[a2 + 700 >> 2] = e2;
          g[a2 + 704 >> 2] = 1;
          return;
        }
        function En(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[b2 >> 2] = c[a2 + 52 >> 2];
          c[b2 + 4 >> 2] = c[a2 + 52 + 4 >> 2];
          c[b2 + 8 >> 2] = c[a2 + 52 + 8 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 52 + 12 >> 2];
          c[d2 >> 2] = c[a2 + 68 >> 2];
          c[d2 + 4 >> 2] = c[a2 + 68 + 4 >> 2];
          c[d2 + 8 >> 2] = c[a2 + 68 + 8 >> 2];
          c[d2 + 12 >> 2] = c[a2 + 68 + 12 >> 2];
          return;
        }
        function Fn(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0;
          b2 = c[a2 + 24 >> 2] | 0;
          if ((b2 | 0) <= 0)
            return;
          e2 = 0;
          do {
            d2 = c[(c[a2 + 32 >> 2] | 0) + (e2 << 2) >> 2] | 0;
            switch (c[d2 + 216 >> 2] | 0) {
              case 2:
              case 5:
                break;
              default: {
                rg(d2);
                b2 = c[a2 + 24 >> 2] | 0;
              }
            }
            e2 = e2 + 1 | 0;
          } while ((e2 | 0) < (b2 | 0));
          return;
        }
        function Gn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          e2 = ob[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2) | 0;
          e2 = yb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
          d2 = yb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 63](a2, c[e2 + 8 >> 2] | 0, b2) | 0;
          ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1245859651, a2);
          return;
        }
        function Hn(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[b2 >> 2] = c[a2 + 8 >> 2];
          c[b2 + 4 >> 2] = c[a2 + 8 + 4 >> 2];
          c[b2 + 8 >> 2] = c[a2 + 8 + 8 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 8 + 12 >> 2];
          c[d2 >> 2] = c[a2 + 24 >> 2];
          c[d2 + 4 >> 2] = c[a2 + 24 + 4 >> 2];
          c[d2 + 8 >> 2] = c[a2 + 24 + 8 >> 2];
          c[d2 + 12 >> 2] = c[a2 + 24 + 12 >> 2];
          return;
        }
        function In(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          e2 = ob[c[(c[a2 >> 2] | 0) + 52 >> 2] & 127](a2) | 0;
          e2 = yb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 63](b2, e2, 1) | 0;
          d2 = yb[c[(c[a2 >> 2] | 0) + 56 >> 2] & 63](a2, c[e2 + 8 >> 2] | 0, b2) | 0;
          ib[c[(c[b2 >> 2] | 0) + 20 >> 2] & 31](b2, e2, d2, 1346455635, a2);
          return;
        }
        function Jn() {
          var a2 = 0;
          while (1) {
            a2 = ic(24) | 0;
            if (a2 | 0)
              break;
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            if (!a2) {
              a2 = 0;
              break;
            }
            Vb[a2 & 3]();
          }
          g[a2 >> 2] = 5.880000114440918;
          g[a2 + 4 >> 2] = 0.8299999833106995;
          g[a2 + 8 >> 2] = 0.8799999952316284;
          g[a2 + 12 >> 2] = 500;
          g[a2 + 16 >> 2] = 10.5;
          g[a2 + 20 >> 2] = 6e3;
          return a2 | 0;
        }
        function Kn(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0, h2 = 0;
          h2 = c[a2 + 4 >> 2] | 0;
          if (!(h2 & 1))
            g2 = h2 >> 8;
          else
            g2 = c[(c[d2 >> 2] | 0) + (h2 >> 8) >> 2] | 0;
          a2 = c[a2 >> 2] | 0;
          ib[c[(c[a2 >> 2] | 0) + 24 >> 2] & 31](a2, b2, d2 + g2 | 0, h2 & 2 | 0 ? e2 : 2, f2);
          return;
        }
        function Ln(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          a2 = c[b2 >> 2] | 0;
          a2 = Jb[c[(c[a2 >> 2] | 0) + 56 >> 2] & 31](a2, 156) | 0;
          Kj(a2, b2, d2, e2, 1);
          return a2 | 0;
        }
        function Mn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0;
          e2 = +g[a2 + 384 >> 2];
          d2 = +g[b2 + 4 >> 2] * +g[a2 + 392 >> 2] * e2;
          c2 = +g[b2 + 8 >> 2] * +g[a2 + 396 >> 2] * e2;
          g[a2 + 352 >> 2] = +g[a2 + 352 >> 2] + +g[b2 >> 2] * +g[a2 + 388 >> 2] * e2;
          g[a2 + 356 >> 2] = +g[a2 + 356 >> 2] + d2;
          g[a2 + 360 >> 2] = +g[a2 + 360 >> 2] + c2;
          return;
        }
        function Nn(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[b2 >> 2] = c[a2 + 932 >> 2];
          c[b2 + 4 >> 2] = c[a2 + 932 + 4 >> 2];
          c[b2 + 8 >> 2] = c[a2 + 932 + 8 >> 2];
          c[b2 + 12 >> 2] = c[a2 + 932 + 12 >> 2];
          c[d2 >> 2] = c[a2 + 948 >> 2];
          c[d2 + 4 >> 2] = c[a2 + 948 + 4 >> 2];
          c[d2 + 8 >> 2] = c[a2 + 948 + 8 >> 2];
          c[d2 + 12 >> 2] = c[a2 + 948 + 12 >> 2];
          return;
        }
        function On(a2, b2, d2, e2, f2, g2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          var i2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          i2 = ic(787) | 0;
          if (!i2)
            i2 = 0;
          else {
            c[(i2 + 4 + 15 & -16) + -4 >> 2] = i2;
            i2 = i2 + 4 + 15 & -16;
          }
          Xd(i2, a2, b2, d2, e2, f2, g2, h2);
          return i2 | 0;
        }
        function Pn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0;
          d2 = 0;
          while (1) {
            if ((d2 | 0) == 3)
              break;
            c2 = +jh(+g[b2 + (d2 << 2) >> 2], 6.2831854820251465);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 868 + (d2 << 6) + 4 >> 2] = c2;
            d2 = d2 + 1 | 0;
          }
          return;
        }
        function Qn(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0;
          a:
            do
              if ((c2 | 0) == -1)
                switch (b2 | 0) {
                  case 2:
                  case 1: {
                    d2 = +g[a2 + 336 >> 2];
                    break a;
                  }
                  case 4:
                  case 3: {
                    d2 = +g[a2 + 340 >> 2];
                    break a;
                  }
                  default: {
                    d2 = 34028234663852886e22;
                    break a;
                  }
                }
              else
                d2 = 34028234663852886e22;
            while (0);
          return +d2;
        }
        function Rn(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          a2 = c[b2 >> 2] | 0;
          a2 = Jb[c[(c[a2 >> 2] | 0) + 56 >> 2] & 31](a2, 156) | 0;
          Kj(a2, b2, d2, e2, 0);
          return a2 | 0;
        }
        function Sn(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          var d2 = 0, e2 = 0, f2 = 0;
          f2 = +g[b2 + 32 >> 2];
          e2 = +g[b2 + 36 >> 2];
          e2 = +g[c2 + 4 >> 2] >= 0 ? e2 : -e2;
          d2 = +g[b2 + 40 >> 2];
          d2 = +g[c2 + 8 >> 2] >= 0 ? d2 : -d2;
          g[a2 >> 2] = +g[c2 >> 2] >= 0 ? f2 : -f2;
          g[a2 + 4 >> 2] = e2;
          g[a2 + 8 >> 2] = d2;
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function Tn(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0, g2 = 0;
          g2 = c[a2 + 4 >> 2] | 0;
          if (!(g2 & 1))
            f2 = g2 >> 8;
          else
            f2 = c[(c[d2 >> 2] | 0) + (g2 >> 8) >> 2] | 0;
          a2 = c[a2 >> 2] | 0;
          Yb[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, b2, d2 + f2 | 0, g2 & 2 | 0 ? e2 : 2);
          return;
        }
        function Un(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 4112;
          d2 = c[b2 + 212 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 216 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 212 >> 2] = 0;
          }
          a[b2 + 216 >> 0] = 1;
          c[b2 + 212 >> 2] = 0;
          c[b2 + 204 >> 2] = 0;
          c[b2 + 208 >> 2] = 0;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function Vn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0;
          d2 = 0;
          while (1) {
            if ((d2 | 0) == 3)
              break;
            c2 = +jh(+g[b2 + (d2 << 2) >> 2], 6.2831854820251465);
            if (!(c2 < -3.1415927410125732)) {
              if (c2 > 3.1415927410125732)
                c2 = c2 + -6.2831854820251465;
            } else
              c2 = c2 + 6.2831854820251465;
            g[a2 + 868 + (d2 << 6) >> 2] = c2;
            d2 = d2 + 1 | 0;
          }
          return;
        }
        function Wn(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          e2 = c[a2 + 284 >> 2] | 0;
          a:
            do
              if ((e2 | 0) > 0) {
                d2 = c[a2 + 292 >> 2] | 0;
                a2 = 0;
                while (1) {
                  if ((c[d2 + (a2 << 2) >> 2] | 0) == (b2 | 0))
                    break a;
                  a2 = a2 + 1 | 0;
                  if ((a2 | 0) >= (e2 | 0)) {
                    a2 = e2;
                    break;
                  }
                }
              } else
                a2 = e2;
            while (0);
          return (a2 | 0) >= (e2 | 0) | 0;
        }
        function Xn(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          a2 = c[b2 >> 2] | 0;
          a2 = Jb[c[(c[a2 >> 2] | 0) + 56 >> 2] & 31](a2, 84) | 0;
          rl(a2, b2, d2, e2, 1);
          return a2 | 0;
        }
        function Yn() {
          var a2 = 0;
          while (1) {
            a2 = ic(24) | 0;
            if (a2 | 0)
              break;
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            if (!a2) {
              a2 = 0;
              break;
            }
            Vb[a2 & 3]();
          }
          c[a2 >> 2] = 0;
          c[a2 + 4 >> 2] = 0;
          c[a2 + 8 >> 2] = 4096;
          c[a2 + 12 >> 2] = 4096;
          c[a2 + 16 >> 2] = 0;
          c[a2 + 20 >> 2] = 1;
          return a2 | 0;
        }
        function Zn(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          var f2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          f2 = ic(311) | 0;
          if (!f2)
            f2 = 0;
          else {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            f2 = f2 + 4 + 15 & -16;
          }
          Qg(f2, a2, b2, d2, e2);
          return f2 | 0;
        }
        function _n(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          d2 = c[a2 + 4 >> 2] | 0;
          if ((c[b2 >> 2] | 0) != (d2 | 0) ? (c[b2 + 4 >> 2] | 0) != (d2 | 0) : 0)
            return 0;
          d2 = c[a2 + 8 >> 2] | 0;
          Ub[c[(c[d2 >> 2] | 0) + 32 >> 2] & 127](d2, b2, c[a2 + 12 >> 2] | 0);
          return 0;
        }
        function $n(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 9444;
          d2 = c[b2 + 32 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 36 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 32 >> 2] = 0;
          }
          a[b2 + 36 >> 0] = 1;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function ao(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(343) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          Qd(e2, a2, b2, d2);
          return e2 | 0;
        }
        function bo(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          a2 = c[b2 >> 2] | 0;
          a2 = Jb[c[(c[a2 >> 2] | 0) + 56 >> 2] & 31](a2, 84) | 0;
          rl(a2, b2, d2, e2, 0);
          return a2 | 0;
        }
        function co(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 5592;
          d2 = c[b2 + 292 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 296 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 292 >> 2] = 0;
          }
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          c[b2 + 288 >> 2] = 0;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function eo(a2, b2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          var h2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          h2 = ic(787) | 0;
          if (!h2)
            h2 = 0;
          else {
            c[(h2 + 4 + 15 & -16) + -4 >> 2] = h2;
            h2 = h2 + 4 + 15 & -16;
          }
          Xd(h2, a2, b2, d2, e2, f2, g2, 0);
          return h2 | 0;
        }
        function fo(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = Jb[c[(c[d2 >> 2] | 0) + 40 >> 2] & 31](d2, a2) | 0;
          f2 = Jb[c[(c[d2 >> 2] | 0) + 28 >> 2] & 31](d2, e2) | 0;
          c[b2 >> 2] = f2;
          if (f2 | 0)
            mb[c[(c[d2 >> 2] | 0) + 48 >> 2] & 127](d2, e2);
          c[b2 + 4 >> 2] = c[a2 + 4 >> 2];
          return 16196;
        }
        function go(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[a2 >> 2] = 9172;
          c[a2 + 8 >> 2] = 9220;
          b2 = c[a2 + 56 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2, c[a2 + 72 >> 2] | 0);
          b2 = c[a2 + 56 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, c[a2 + 72 >> 2] | 0);
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function ho(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0, h2 = 0;
          h2 = c[a2 + 108 >> 2] | 0;
          f2 = +g[h2 + (b2 << 4) + 4 >> 2] * +g[a2 + 20 >> 2];
          e2 = +g[h2 + (b2 << 4) + 8 >> 2] * +g[a2 + 24 >> 2];
          g[d2 >> 2] = +g[h2 + (b2 << 4) >> 2] * +g[a2 + 16 >> 2];
          g[d2 + 4 >> 2] = f2;
          g[d2 + 8 >> 2] = e2;
          g[d2 + 12 >> 2] = 0;
          return;
        }
        function io(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
            Xm(b2, d2, e2);
          else {
            a2 = c[a2 + 8 >> 2] | 0;
            Yb[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, b2, d2, e2);
          }
          return;
        }
        function jo(b2, d2, e2, f2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          f2 = c[d2 >> 2] | 0;
          f2 = Jb[c[(c[f2 >> 2] | 0) + 56 >> 2] & 31](f2, 20) | 0;
          e2 = a[b2 + 4 >> 0] | 0;
          c[f2 + 4 >> 2] = c[d2 >> 2];
          c[f2 >> 2] = 3540;
          a[f2 + 16 >> 0] = e2;
          return f2 | 0;
        }
        function ko(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[a2 + 164 >> 2] = c[b2 >> 2];
          c[a2 + 164 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 164 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 164 + 12 >> 2] = c[b2 + 12 >> 2];
          if ((!(+g[b2 >> 2] != 1) ? !(+g[b2 + 4 >> 2] != 1) : 0) ? !(+g[b2 + 8 >> 2] != 1) : 0)
            d2 = 0;
          c[a2 + 180 >> 2] = d2;
          return;
        }
        function lo(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          g2 = ic(1331) | 0;
          if (!g2)
            g2 = 0;
          else {
            c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
            g2 = g2 + 4 + 15 & -16;
          }
          ue(g2, a2, b2, d2, e2, f2);
          return g2 | 0;
        }
        function mo(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          d2 = a2 + 15 & -16 | 0;
          b2 = c[k >> 2] | 0;
          a2 = b2 + d2 | 0;
          if ((d2 | 0) > 0 & (a2 | 0) < (b2 | 0) | (a2 | 0) < 0) {
            _() | 0;
            Va(12);
            return -1;
          }
          c[k >> 2] = a2;
          if ((a2 | 0) > (Z() | 0) ? (Y() | 0) == 0 : 0) {
            Va(12);
            c[k >> 2] = b2;
            return -1;
          }
          return b2 | 0;
        }
        function no(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          while (1) {
            b2 = ic(112) | 0;
            if (b2 | 0)
              break;
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              b2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          gg(b2, a2);
          return b2 | 0;
        }
        function oo(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0;
          e2 = +g[b2 + 20 >> 2];
          d2 = e2 * +g[b2 + 260 >> 2] + +g[b2 + 72 >> 2];
          c2 = e2 * +g[b2 + 264 >> 2] + +g[b2 + 76 >> 2];
          g[a2 >> 2] = +g[b2 + 256 >> 2] * e2 + +g[b2 + 68 >> 2];
          g[a2 + 4 >> 2] = d2;
          g[a2 + 8 >> 2] = c2;
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function po(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          d2 = a[b2 + 74 >> 0] | 0;
          a[b2 + 74 >> 0] = d2 + 255 | d2;
          d2 = c[b2 >> 2] | 0;
          if (!(d2 & 8)) {
            c[b2 + 8 >> 2] = 0;
            c[b2 + 4 >> 2] = 0;
            d2 = c[b2 + 44 >> 2] | 0;
            c[b2 + 28 >> 2] = d2;
            c[b2 + 20 >> 2] = d2;
            c[b2 + 16 >> 2] = d2 + (c[b2 + 48 >> 2] | 0);
            b2 = 0;
          } else {
            c[b2 >> 2] = d2 | 32;
            b2 = -1;
          }
          return b2 | 0;
        }
        function qo(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          if ((e2 | 0) != -1)
            return;
          switch (b2 | 0) {
            case 2:
            case 1: {
              g[a2 + 336 >> 2] = d2;
              c[a2 + 332 >> 2] = c[a2 + 332 >> 2] | 1;
              return;
            }
            case 4:
            case 3: {
              g[a2 + 340 >> 2] = d2;
              c[a2 + 332 >> 2] = c[a2 + 332 >> 2] | 2;
              return;
            }
            default:
              return;
          }
        }
        function ro(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          var g2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          g2 = ic(135) | 0;
          if (!g2)
            g2 = 0;
          else {
            c[(g2 + 4 + 15 & -16) + -4 >> 2] = g2;
            g2 = g2 + 4 + 15 & -16;
          }
          ae(g2, a2, b2, d2 & 65535, e2, f2);
          return g2 | 0;
        }
        function so(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          if ((b2 | 0) == (d2 | 0))
            return;
          e2 = c[(c[a2 + 4 >> 2] | 0) + 136 >> 2] | 0;
          yb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 63](e2, c[b2 + 36 >> 2] | 0, c[d2 + 36 >> 2] | 0) | 0;
          d2 = (c[a2 + 4 >> 2] | 0) + 160 | 0;
          c[d2 >> 2] = (c[d2 >> 2] | 0) + 1;
          return;
        }
        function to(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          d2 = i;
          i = i + 16 | 0;
          if (!(a[21976] | 0))
            a[21976] = 1;
          mb[c[(c[b2 >> 2] | 0) + 76 >> 2] & 127](d2, b2);
          c[5557] = c[d2 >> 2];
          c[5558] = c[d2 + 4 >> 2];
          c[5559] = c[d2 + 8 >> 2];
          c[5560] = c[d2 + 12 >> 2];
          i = d2;
          return 22228;
        }
        function uo(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          d2 = i;
          i = i + 16 | 0;
          if (!(a[22024] | 0))
            a[22024] = 1;
          mb[c[(c[b2 >> 2] | 0) + 76 >> 2] & 127](d2, b2);
          c[5618] = c[d2 >> 2];
          c[5619] = c[d2 + 4 >> 2];
          c[5620] = c[d2 + 8 >> 2];
          c[5621] = c[d2 + 12 >> 2];
          i = d2;
          return 22472;
        }
        function vo(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
          b2 = i;
          i = i + 32 | 0;
          Ub[c[(c[a2 >> 2] | 0) + 12 >> 2] & 127](a2, b2 + 8 | 0, b2);
          f2 = +g[b2 + 8 >> 2];
          e2 = +g[b2 + 8 + 4 >> 2];
          d2 = +g[b2 + 8 + 8 >> 2];
          d2 = +G(+(f2 * f2 + e2 * e2 + d2 * d2));
          i = b2;
          return +(d2 + +g[b2 >> 2]);
        }
        function wo(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0;
          d2 = +g[b2 + 4 >> 2] * +g[a2 + 392 >> 2];
          c2 = +g[b2 + 8 >> 2] * +g[a2 + 396 >> 2];
          g[a2 + 452 >> 2] = +g[a2 + 452 >> 2] + +g[b2 >> 2] * +g[a2 + 388 >> 2];
          g[a2 + 456 >> 2] = +g[a2 + 456 >> 2] + d2;
          g[a2 + 460 >> 2] = +g[a2 + 460 >> 2] + c2;
          return;
        }
        function xo(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[a2 >> 2] = 9220;
          b2 = c[a2 + 48 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2, c[a2 + 64 >> 2] | 0);
          b2 = c[a2 + 48 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, c[a2 + 64 >> 2] | 0);
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function yo(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          f2 = i;
          i = i + 16 | 0;
          c[f2 >> 2] = 5572;
          c[f2 + 4 >> 2] = d2;
          c[f2 + 8 >> 2] = a2;
          Ub[c[(c[b2 >> 2] | 0) + 48 >> 2] & 127](b2, f2, e2);
          i = f2;
          return;
        }
        function zo(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0;
          d2 = +g[b2 + 4 >> 2] * +g[a2 + 588 >> 2];
          c2 = +g[b2 + 8 >> 2] * +g[a2 + 592 >> 2];
          g[a2 + 468 >> 2] = +g[a2 + 468 >> 2] + +g[b2 >> 2] * +g[a2 + 584 >> 2];
          g[a2 + 472 >> 2] = +g[a2 + 472 >> 2] + d2;
          g[a2 + 476 >> 2] = +g[a2 + 476 >> 2] + c2;
          return;
        }
        function Ao(a2) {
          a2 = a2 | 0;
          var b2 = 0, c2 = 0, d2 = 0, e2 = 0, f2 = 0;
          f2 = +g[a2 >> 2];
          e2 = +g[a2 + 4 >> 2];
          d2 = +g[a2 + 8 >> 2];
          c2 = +g[a2 + 12 >> 2];
          b2 = 1 / +G(+(f2 * f2 + e2 * e2 + d2 * d2 + c2 * c2));
          g[a2 >> 2] = f2 * b2;
          g[a2 + 4 >> 2] = e2 * b2;
          g[a2 + 8 >> 2] = d2 * b2;
          g[a2 + 12 >> 2] = c2 * b2;
          return;
        }
        function Bo(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          f2 = ic(135) | 0;
          if (!f2)
            f2 = 0;
          else {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            f2 = f2 + 4 + 15 & -16;
          }
          ae(f2, a2, b2, d2 & 65535, e2, 0);
          return f2 | 0;
        }
        function Co(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          a2 = c[b2 + 8 >> 2] | 0;
          if (!((d2 | 0) != 0 & (a2 | 0) != 0))
            return;
          kb[c[c[a2 >> 2] >> 2] & 255](a2);
          mb[c[(c[d2 >> 2] | 0) + 60 >> 2] & 127](d2, c[b2 + 8 >> 2] | 0);
          c[b2 + 8 >> 2] = 0;
          return;
        }
        function Do(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          e2 = i;
          i = i + 16 | 0;
          c[e2 >> 2] = 5460;
          c[e2 + 4 >> 2] = b2;
          c[e2 + 8 >> 2] = a2;
          c[e2 + 12 >> 2] = d2;
          Ub[c[(c[a2 >> 2] | 0) + 48 >> 2] & 127](a2, e2, d2);
          i = e2;
          return;
        }
        function Eo(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 6648;
          if (a[b2 + 65 >> 0] | 0 ? (d2 = c[b2 + 56 >> 2] | 0, kb[c[c[d2 >> 2] >> 2] & 255](d2), d2 = c[b2 + 56 >> 2] | 0, d2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function Fo(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          a2 = c[a2 + 12 >> 2] | 0;
          return Jb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 31](a2, b2) | 0;
        }
        function Go(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          while (1) {
            b2 = ic(92) | 0;
            if (b2 | 0)
              break;
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              b2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          Ud(b2, a2);
          return b2 | 0;
        }
        function Ho(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          var d2 = 0, e2 = 0;
          if ((c[a2 + 280 >> 2] | 0) <= 0)
            return;
          d2 = 0;
          do {
            e2 = c[(c[a2 + 288 >> 2] | 0) + (d2 << 2) >> 2] | 0;
            Wb[c[(c[e2 >> 2] | 0) + 8 >> 2] & 7](e2, a2, b2);
            d2 = d2 + 1 | 0;
          } while ((d2 | 0) < (c[a2 + 280 >> 2] | 0));
          return;
        }
        function Io(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0, e2 = 0, f2 = 0;
          e2 = c[a2 + 752 >> 2] | 0;
          if ((e2 | 0) <= 0) {
            b2 = 0;
            return +b2;
          }
          d2 = c[a2 + 760 >> 2] | 0;
          a2 = 0;
          b2 = 0;
          do {
            f2 = +g[d2 + (a2 * 104 | 0) + 88 >> 2];
            b2 = b2 + (f2 > 0 ? 1 / f2 : 0);
            a2 = a2 + 1 | 0;
          } while ((a2 | 0) != (e2 | 0));
          return +b2;
        }
        function Jo(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(1331) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          Md(e2, a2, b2, d2);
          return e2 | 0;
        }
        function Ko(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 4112;
          d2 = c[b2 + 212 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 216 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 212 >> 2] = 0;
          }
          a[b2 + 216 >> 0] = 1;
          c[b2 + 212 >> 2] = 0;
          c[b2 + 204 >> 2] = 0;
          c[b2 + 208 >> 2] = 0;
          return;
        }
        function Lo(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          d2 = i;
          i = i + 16 | 0;
          if (!(a[21960] | 0))
            a[21960] = 1;
          Jg(b2, d2);
          c[5532] = c[d2 >> 2];
          c[5533] = c[d2 + 4 >> 2];
          c[5534] = c[d2 + 8 >> 2];
          c[5535] = c[d2 + 12 >> 2];
          i = d2;
          return 22128;
        }
        function Mo(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          b2 = b2 * 0.4000000059604645 * +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          b2 = b2 * +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          g[d2 >> 2] = b2;
          g[d2 + 4 >> 2] = b2;
          g[d2 + 8 >> 2] = b2;
          g[d2 + 12 >> 2] = 0;
          return;
        }
        function No(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          e2 = c[b2 >> 2] | 0;
          e2 = Jb[c[(c[e2 >> 2] | 0) + 56 >> 2] & 31](e2, 24) | 0;
          c[e2 + 4 >> 2] = c[b2 >> 2];
          c[e2 >> 2] = 3780;
          return e2 | 0;
        }
        function Oo(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(99) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          Je(e2, a2, b2, d2);
          return e2 | 0;
        }
        function Po(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(135) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          ae(e2, a2, b2, d2 & 65535, 0, 0);
          return e2 | 0;
        }
        function Qo(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          c[d2 >> 2] = -581039253;
          c[d2 + 4 >> 2] = -581039253;
          c[d2 + 8 >> 2] = -581039253;
          g[d2 + 12 >> 2] = 0;
          c[e2 >> 2] = 1566444395;
          c[e2 + 4 >> 2] = 1566444395;
          c[e2 + 8 >> 2] = 1566444395;
          g[e2 + 12 >> 2] = 0;
          return;
        }
        function Ro(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          f2 = ic(1311) | 0;
          if (!f2)
            f2 = 0;
          else {
            c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
            f2 = f2 + 4 + 15 & -16;
          }
          tc(f2, a2, b2, d2, e2);
          return f2 | 0;
        }
        function So(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 5212;
          if (a[b2 + 192 >> 0] | 0 ? (d2 = c[b2 + 136 >> 2] | 0, kb[c[c[d2 >> 2] >> 2] & 255](d2), d2 = c[b2 + 136 >> 2] | 0, d2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          gi(b2 + 64 | 0);
          gi(b2 + 4 | 0);
          return;
        }
        function To(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 9444;
          d2 = c[b2 + 32 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 36 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 32 >> 2] = 0;
          }
          a[b2 + 36 >> 0] = 1;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          return;
        }
        function Uo(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 5592;
          d2 = c[b2 + 292 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 296 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 292 >> 2] = 0;
          }
          a[b2 + 296 >> 0] = 1;
          c[b2 + 292 >> 2] = 0;
          c[b2 + 284 >> 2] = 0;
          c[b2 + 288 >> 2] = 0;
          return;
        }
        function Vo(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 3808;
          d2 = c[b2 + 32 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 36 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 32 >> 2] = 0;
          }
          a[b2 + 36 >> 0] = 1;
          c[b2 + 32 >> 2] = 0;
          c[b2 + 24 >> 2] = 0;
          c[b2 + 28 >> 2] = 0;
          return;
        }
        function Wo(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          c[a2 >> 2] = 8236;
          b2 = c[a2 + 56 >> 2] | 0;
          if (b2 | 0 ? (kb[c[c[b2 >> 2] >> 2] & 255](b2), d2 = c[a2 + 56 >> 2] | 0, d2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[d2 + -4 >> 2] | 0);
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function Xo(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[a2 >> 2] = 9172;
          c[a2 + 8 >> 2] = 9220;
          b2 = c[a2 + 56 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2, c[a2 + 72 >> 2] | 0);
          b2 = c[a2 + 56 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, c[a2 + 72 >> 2] | 0);
          return;
        }
        function Yo(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          d2 = (c[a2 + 96 >> 2] | 0) + 4 | 0;
          c[d2 >> 2] = c[b2 >> 2];
          c[d2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[d2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[d2 + 12 >> 2] = c[b2 + 12 >> 2];
          zj(a2);
          return;
        }
        function Zo(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          if (a[b2 + 273 >> 0] | 0 ? (e2 = c[b2 + 200 >> 2] | 0, e2 | 0) : 0) {
            c[6325] = (c[6325] | 0) + 1;
            Rc(c[e2 + -4 >> 2] | 0);
          }
          a[b2 + 273 >> 0] = 0;
          c[b2 + 200 >> 2] = d2;
          c[(c[b2 + 196 >> 2] | 0) + 8 >> 2] = d2;
          return;
        }
        function _o(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 5500;
          d2 = c[b2 + 20 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 24 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 20 >> 2] = 0;
          }
          a[b2 + 24 >> 0] = 1;
          c[b2 + 20 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          c[b2 + 16 >> 2] = 0;
          return;
        }
        function $o(a2, d2, e2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          d2 = c[(c[d2 + 188 >> 2] | 0) + 4 >> 2] | 0;
          a2 = c[e2 + 188 >> 2] | 0;
          if (!((b[a2 + 6 >> 1] & (d2 & 65535)) << 16 >> 16)) {
            e2 = 0;
            return e2 | 0;
          }
          e2 = (d2 >>> 16 & 65535 & b[a2 + 4 >> 1]) << 16 >> 16 != 0;
          return e2 | 0;
        }
        function ap(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          e2 = c[b2 >> 2] | 0;
          e2 = Jb[c[(c[e2 >> 2] | 0) + 56 >> 2] & 31](e2, 8) | 0;
          c[e2 + 4 >> 2] = c[b2 >> 2];
          c[e2 >> 2] = 6268;
          return e2 | 0;
        }
        function bp(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(787) | 0;
          if (!e2)
            e2 = 0;
          else {
            c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
            e2 = e2 + 4 + 15 & -16;
          }
          Rf(e2, a2, b2, d2);
          return e2 | 0;
        }
        function cp(a2, b2, d2, e2) {
          a2 = +a2;
          b2 = +b2;
          d2 = +d2;
          e2 = +e2;
          var f2 = 0;
          while (1) {
            f2 = ic(16) | 0;
            if (f2 | 0)
              break;
            f2 = c[6453] | 0;
            c[6453] = f2 + 0;
            Vb[f2 & 3]();
          }
          g[f2 >> 2] = a2;
          g[f2 + 4 >> 2] = b2;
          g[f2 + 8 >> 2] = d2;
          g[f2 + 12 >> 2] = e2;
          return f2 | 0;
        }
        function dp(b2) {
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0;
          if (!(a[22e3] | 0))
            a[22e3] = 1;
          e2 = -+g[b2 + 52 >> 2];
          d2 = +g[b2 + 260 >> 2] * e2;
          c2 = +g[b2 + 264 >> 2] * e2;
          g[5589] = +g[b2 + 256 >> 2] * e2;
          g[5590] = d2;
          g[5591] = c2;
          g[5592] = 0;
          return 22356;
        }
        function ep(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 5136;
          d2 = c[b2 + 16 >> 2] | 0;
          if (d2 | 0) {
            if (a[b2 + 20 >> 0] | 0) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 16 >> 2] = 0;
          }
          a[b2 + 20 >> 0] = 1;
          c[b2 + 16 >> 2] = 0;
          c[b2 + 8 >> 2] = 0;
          c[b2 + 12 >> 2] = 0;
          return;
        }
        function fp(a2, b2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          f2 = c[b2 + 8 >> 2] | 0;
          e2 = c[f2 + 324 >> 2] | 0;
          Ub[c[(c[e2 >> 2] | 0) + 40 >> 2] & 127](e2, f2, c[d2 + 8 >> 2] | 0);
          return;
        }
        function gp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(99) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          Je(d2, a2, b2, 1);
          return d2 | 0;
        }
        function hp() {
          var a2 = 0;
          while (1) {
            a2 = ic(12) | 0;
            if (a2 | 0)
              break;
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            if (!a2) {
              a2 = 0;
              break;
            }
            Vb[a2 & 3]();
          }
          g[a2 >> 2] = 0.30000001192092896;
          g[a2 + 4 >> 2] = 1;
          g[a2 + 8 >> 2] = 0;
          return a2 | 0;
        }
        function ip() {
          var a2 = 0;
          while (1) {
            a2 = ic(8) | 0;
            if (a2 | 0)
              break;
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            if (!a2) {
              a2 = 0;
              break;
            }
            Vb[a2 & 3]();
          }
          b[a2 + 4 >> 1] = 1;
          b[a2 + 6 >> 1] = -1;
          c[a2 >> 2] = 2872;
          return a2 | 0;
        }
        function jp(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          if (!b2)
            return;
          d2 = c[b2 + 68 >> 2] | 0;
          if (d2 | 0) {
            if (!((a[b2 + 72 >> 0] & 1) == 0 | (d2 | 0) == 0)) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 68 >> 2] = 0;
          }
          a[b2 + 72 >> 0] = 1;
          Rc(b2);
          return;
        }
        function kp(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 6648;
          if (!(a[b2 + 65 >> 0] | 0))
            return;
          d2 = c[b2 + 56 >> 2] | 0;
          kb[c[c[d2 >> 2] >> 2] & 255](d2);
          b2 = c[b2 + 56 >> 2] | 0;
          if (!b2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[b2 + -4 >> 2] | 0);
          return;
        }
        function lp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(135) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          ae(d2, a2, b2, 16384, 0, 0);
          return d2 | 0;
        }
        function mp(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          e2 = i;
          i = i + 16 | 0;
          c[e2 >> 2] = 5480;
          c[e2 + 4 >> 2] = b2;
          Ub[c[(c[a2 >> 2] | 0) + 48 >> 2] & 127](a2, e2, d2);
          i = e2;
          return;
        }
        function np(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[b2 >> 2] = 6464;
          if (!(a[b2 + 8 >> 0] | 0)) {
            Rc(b2);
            return;
          }
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2) {
            Rc(b2);
            return;
          }
          e2 = c[b2 + 4 >> 2] | 0;
          mb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
          Rc(b2);
          return;
        }
        function op(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(79) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          Sh(b2, a2);
          c[b2 >> 2] = 7972;
          c[b2 + 56 >> 2] = 2;
          return b2 | 0;
        }
        function pp(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(79) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          Sh(b2, a2);
          c[b2 >> 2] = 7868;
          c[b2 + 56 >> 2] = 0;
          return b2 | 0;
        }
        function qp(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[b2 >> 2] = 6436;
          if (!(a[b2 + 8 >> 0] | 0)) {
            Rc(b2);
            return;
          }
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2) {
            Rc(b2);
            return;
          }
          e2 = c[b2 + 4 >> 2] | 0;
          mb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
          Rc(b2);
          return;
        }
        function rp(b2, c2, d2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          if ((c2 | 0) < (b2 | 0) & (b2 | 0) < (c2 + d2 | 0)) {
            e2 = b2;
            c2 = c2 + d2 | 0;
            b2 = b2 + d2 | 0;
            while ((d2 | 0) > 0) {
              b2 = b2 - 1 | 0;
              c2 = c2 - 1 | 0;
              d2 = d2 - 1 | 0;
              a[b2 >> 0] = a[c2 >> 0] | 0;
            }
            b2 = e2;
          } else
            Lm(b2, c2, d2) | 0;
          return b2 | 0;
        }
        function sp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0;
          c2 = S(b2 & 65535, a2 & 65535) | 0;
          e2 = (c2 >>> 16) + (S(b2 & 65535, a2 >>> 16) | 0) | 0;
          d2 = S(b2 >>> 16, a2 & 65535) | 0;
          return (D = (e2 >>> 16) + (S(b2 >>> 16, a2 >>> 16) | 0) + (((e2 & 65535) + d2 | 0) >>> 16) | 0, e2 + d2 << 16 | c2 & 65535 | 0) | 0;
        }
        function tp(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[b2 >> 2] = 9372;
          if (!(a[b2 + 8 >> 0] | 0)) {
            Rc(b2);
            return;
          }
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2) {
            Rc(b2);
            return;
          }
          e2 = c[b2 + 4 >> 2] | 0;
          mb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
          Rc(b2);
          return;
        }
        function up(a2, b2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
            gl(b2, d2, e2, f2);
          return;
        }
        function vp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var c2 = 0, d2 = 0, e2 = 0;
          e2 = +F(+ +g[b2 >> 2]);
          d2 = +F(+ +g[b2 + 4 >> 2]);
          c2 = +F(+ +g[b2 + 8 >> 2]);
          g[a2 + 16 >> 2] = e2;
          g[a2 + 20 >> 2] = d2;
          g[a2 + 24 >> 2] = c2;
          g[a2 + 28 >> 2] = 0;
          return;
        }
        function wp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(787) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          Rf(d2, a2, b2, 0);
          return d2 | 0;
        }
        function xp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          Hf(a2, c[b2 + 36 >> 2] | 0);
          return;
        }
        function yp(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          if (!b2)
            return;
          d2 = c[b2 + 12 >> 2] | 0;
          if (d2 | 0) {
            if (!((a[b2 + 16 >> 0] & 1) == 0 | (d2 | 0) == 0)) {
              c[6325] = (c[6325] | 0) + 1;
              Rc(c[d2 + -4 >> 2] | 0);
            }
            c[b2 + 12 >> 2] = 0;
          }
          a[b2 + 16 >> 0] = 1;
          Rc(b2);
          return;
        }
        function zp(b2) {
          b2 = b2 | 0;
          var d2 = 0, e2 = 0;
          c[b2 >> 2] = 8996;
          if (!(a[b2 + 8 >> 0] | 0)) {
            Rc(b2);
            return;
          }
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2) {
            Rc(b2);
            return;
          }
          e2 = c[b2 + 4 >> 2] | 0;
          mb[c[(c[e2 >> 2] | 0) + 16 >> 2] & 127](e2, d2);
          Rc(b2);
          return;
        }
        function Ap(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          g2 = +g2;
          h2 = +h2;
          i2 = +i2;
          j2 = +j2;
          k2 = k2 | 0;
          l2 = +l2;
          m2 = m2 | 0;
          Pb[a2 & 0](b2 | 0, c2 | 0, d2 | 0, e2 | 0, +f2, +g2, +h2, +i2, +j2, k2 | 0, +l2, m2 | 0);
        }
        function Bp(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          a2 = c[b2 + 204 >> 2] | 0;
          if ((a2 & 4 | 0) == 0 ? (e2 = c[d2 + 204 >> 2] | 0, (e2 & 4 | 0) == 0) : 0)
            if (!(a2 & 3))
              a2 = 1;
            else
              a2 = (e2 & 3 | 0) == 0;
          else
            a2 = 0;
          return a2 | 0;
        }
        function Cp(a2, b2, d2, e2) {
          a2 = +a2;
          b2 = +b2;
          d2 = +d2;
          e2 = +e2;
          var f2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          f2 = ic(35) | 0;
          c[(f2 + 4 + 15 & -16) + -4 >> 2] = f2;
          f2 = f2 + 4 + 15 & -16;
          g[f2 >> 2] = a2;
          g[f2 + 4 >> 2] = b2;
          g[f2 + 8 >> 2] = d2;
          g[f2 + 12 >> 2] = e2;
          return f2 | 0;
        }
        function Dp(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          while (1) {
            b2 = ic(8) | 0;
            if (b2 | 0)
              break;
            b2 = c[6453] | 0;
            c[6453] = b2 + 0;
            if (!b2) {
              b2 = 0;
              break;
            }
            Vb[b2 & 3]();
          }
          c[b2 >> 2] = 4988;
          c[b2 + 4 >> 2] = a2;
          return b2 | 0;
        }
        function Ep(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[a2 >> 2] = 8236;
          b2 = c[a2 + 56 >> 2] | 0;
          if (!b2)
            return;
          kb[c[c[b2 >> 2] >> 2] & 255](b2);
          a2 = c[a2 + 56 >> 2] | 0;
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function Fp(a2, b2, c2, d2, e2, f2, g2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          return + +cb(0, a2 | 0, b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0);
        }
        function Gp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          if ((b2 | 0) == 0 ? 1 : (c[b2 + 248 >> 2] & 2 | 0) == 0) {
            vk(a2, b2);
            return;
          } else {
            mb[c[(c[a2 >> 2] | 0) + 92 >> 2] & 127](a2, b2);
            return;
          }
        }
        function Hp(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[a2 >> 2] = 9220;
          b2 = c[a2 + 48 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 20 >> 2] & 127](b2, c[a2 + 64 >> 2] | 0);
          b2 = c[a2 + 48 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, c[a2 + 64 >> 2] | 0);
          return;
        }
        function Ip(b2) {
          b2 = b2 | 0;
          var c2 = 0;
          c2 = a[n + (b2 & 255) >> 0] | 0;
          if ((c2 | 0) < 8)
            return c2 | 0;
          c2 = a[n + (b2 >> 8 & 255) >> 0] | 0;
          if ((c2 | 0) < 8)
            return c2 + 8 | 0;
          c2 = a[n + (b2 >> 16 & 255) >> 0] | 0;
          if ((c2 | 0) < 8)
            return c2 + 16 | 0;
          return (a[n + (b2 >>> 24) >> 0] | 0) + 24 | 0;
        }
        function Jp(a2, b2, d2) {
          a2 = +a2;
          b2 = +b2;
          d2 = +d2;
          var e2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          e2 = ic(35) | 0;
          c[(e2 + 4 + 15 & -16) + -4 >> 2] = e2;
          e2 = e2 + 4 + 15 & -16;
          g[e2 >> 2] = a2;
          g[e2 + 4 >> 2] = b2;
          g[e2 + 8 >> 2] = d2;
          g[e2 + 12 >> 2] = 0;
          return e2 | 0;
        }
        function Kp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 16 >> 2] = c[b2 >> 2];
          c[a2 + 16 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 16 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 16 + 12 >> 2] = c[b2 + 12 >> 2];
          zj(a2);
          return;
        }
        function Lp(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          return nb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0, k2 | 0) | 0;
        }
        function Mp(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          return +Lb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0, k2 | 0);
        }
        function Np() {
          var a2 = 0, b2 = 0;
          while (1) {
            a2 = ic(1) | 0;
            if (a2 | 0) {
              b2 = 5;
              break;
            }
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            if (!a2) {
              a2 = 0;
              b2 = 5;
              break;
            }
            Vb[a2 & 3]();
          }
          if ((b2 | 0) == 5)
            return a2 | 0;
          return 0;
        }
        function Op(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 300 >> 2] = (c[a2 + 300 >> 2] | 0) + 1;
          c[a2 + 368 >> 2] = c[b2 >> 2];
          c[a2 + 368 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 368 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 368 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Pp(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[d2 >> 2] = c[a2 + 60 + (b2 << 4) >> 2];
          c[d2 + 4 >> 2] = c[a2 + 60 + (b2 << 4) + 4 >> 2];
          c[d2 + 8 >> 2] = c[a2 + 60 + (b2 << 4) + 8 >> 2];
          c[d2 + 12 >> 2] = c[a2 + 60 + (b2 << 4) + 12 >> 2];
          return;
        }
        function Qp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 300 >> 2] = (c[a2 + 300 >> 2] | 0) + 1;
          c[a2 + 352 >> 2] = c[b2 >> 2];
          c[a2 + 352 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 352 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 352 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Rp(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          g2 = +g2;
          h2 = +h2;
          i2 = +i2;
          j2 = j2 | 0;
          k2 = k2 | 0;
          l2 = +l2;
          vb[a2 & 0](b2 | 0, c2 | 0, d2 | 0, e2 | 0, +f2, +g2, +h2, +i2, j2 | 0, k2 | 0, +l2);
        }
        function Sp(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 300 >> 2] = (c[a2 + 300 >> 2] | 0) + 1;
          c[a2 + 584 >> 2] = c[b2 >> 2];
          c[a2 + 584 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 584 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 584 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Tp(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          d2 = +g[a2 + 36 >> 2];
          +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          b2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          return +(d2 + b2);
        }
        function Up(a2) {
          a2 = a2 | 0;
          var b2 = 0, d2 = 0;
          d2 = +g[a2 + 32 >> 2];
          b2 = +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
          return +(d2 + b2);
        }
        function Vp(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = k2 | 0;
          Ib[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0, k2 | 0);
        }
        function Wp() {
          var a2 = 0;
          while (1) {
            a2 = ic(196) | 0;
            if (a2 | 0)
              break;
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            if (!a2) {
              a2 = 0;
              break;
            }
            Vb[a2 & 3]();
          }
          Oh(a2, 0);
          return a2 | 0;
        }
        function Xp(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          var e2 = 0;
          e2 = i;
          i = i + 16 | 0;
          c[e2 >> 2] = c[d2 >> 2];
          a2 = yb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 63](a2, b2, e2) | 0;
          if (a2)
            c[d2 >> 2] = c[e2 >> 2];
          i = e2;
          return a2 & 1 | 0;
        }
        function Yp(a2) {
          a2 = a2 | 0;
          var b2 = 0, c2 = 0, d2 = 0, e2 = 0;
          e2 = +g[a2 >> 2];
          d2 = +g[a2 + 4 >> 2];
          c2 = +g[a2 + 8 >> 2];
          b2 = 1 / +G(+(e2 * e2 + d2 * d2 + c2 * c2));
          g[a2 >> 2] = e2 * b2;
          g[a2 + 4 >> 2] = d2 * b2;
          g[a2 + 8 >> 2] = c2 * b2;
          return;
        }
        function Zp() {
          var a2 = 0, b2 = 0;
          while (1) {
            a2 = ic(64) | 0;
            if (a2 | 0) {
              b2 = 5;
              break;
            }
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            if (!a2) {
              a2 = 0;
              b2 = 5;
              break;
            }
            Vb[a2 & 3]();
          }
          if ((b2 | 0) == 5)
            return a2 | 0;
          return 0;
        }
        function _p(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          if (!(a[22008] | 0))
            a[22008] = 1;
          c[5593] = c[b2 + (d2 << 4) >> 2];
          c[5594] = c[b2 + (d2 << 4) + 4 >> 2];
          c[5595] = c[b2 + (d2 << 4) + 8 >> 2];
          c[5596] = c[b2 + (d2 << 4) + 12 >> 2];
          return 22372;
        }
        function $p(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          d2 = ic(191) | 0;
          if (!d2)
            d2 = 0;
          else {
            c[(d2 + 4 + 15 & -16) + -4 >> 2] = d2;
            d2 = d2 + 4 + 15 & -16;
          }
          Kf(d2, a2, b2);
          return d2 | 0;
        }
        function aq(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 6464;
          if (!(a[b2 + 8 >> 0] | 0))
            return;
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2)
            return;
          b2 = c[b2 + 4 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, d2);
          return;
        }
        function bq(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          if ((a2 | 0) == (c[b2 + 8 >> 2] | 0))
            Xm(b2, d2, e2);
          return;
        }
        function cq(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 6436;
          if (!(a[b2 + 8 >> 0] | 0))
            return;
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2)
            return;
          b2 = c[b2 + 4 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, d2);
          return;
        }
        function dq(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          switch (b2 | 0) {
            case 3: {
              g[a2 + 452 >> 2] = c2;
              return;
            }
            case 4: {
              g[a2 + 448 >> 2] = c2;
              return;
            }
            case 5: {
              g[a2 + 444 >> 2] = c2;
              return;
            }
            default:
              return;
          }
        }
        function eq(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 9372;
          if (!(a[b2 + 8 >> 0] | 0))
            return;
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2)
            return;
          b2 = c[b2 + 4 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, d2);
          return;
        }
        function fq(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 3808;
          d2 = c[b2 + 32 >> 2] | 0;
          if (!d2) {
            Rc(b2);
            return;
          }
          if (!(a[b2 + 36 >> 0] | 0)) {
            Rc(b2);
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          Rc(b2);
          return;
        }
        function gq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          a2 = c[a2 + 4 >> 2] | 0;
          return ((c[b2 >> 2] | 0) == (a2 | 0) ? 1 : (c[b2 + 4 >> 2] | 0) == (a2 | 0)) | 0;
        }
        function hq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          a2 = c[a2 + 20 >> 2] | 0;
          return Jb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 31](a2, b2) | 0;
        }
        function iq(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 5500;
          d2 = c[b2 + 20 >> 2] | 0;
          if (!d2) {
            Rc(b2);
            return;
          }
          if (!(a[b2 + 24 >> 0] | 0)) {
            Rc(b2);
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          Rc(b2);
          return;
        }
        function jq(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 8996;
          if (!(a[b2 + 8 >> 0] | 0))
            return;
          d2 = c[b2 + 12 >> 2] | 0;
          if (!d2)
            return;
          b2 = c[b2 + 4 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 16 >> 2] & 127](b2, d2);
          return;
        }
        function kq(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(79) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          Sh(b2, a2);
          return b2 | 0;
        }
        function lq(a2, d2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          d2 = c[d2 + 4 >> 2] | 0;
          if (!((d2 & 65535 & b[a2 + 6 >> 1]) << 16 >> 16)) {
            a2 = 0;
            return a2 | 0;
          }
          a2 = (b[a2 + 4 >> 1] & (d2 >>> 16 & 65535)) << 16 >> 16 != 0;
          return a2 | 0;
        }
        function mq(a2, d2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          d2 = c[d2 + 4 >> 2] | 0;
          if (!((d2 & 65535 & b[a2 + 10 >> 1]) << 16 >> 16)) {
            a2 = 0;
            return a2 | 0;
          }
          a2 = (b[a2 + 8 >> 1] & (d2 >>> 16 & 65535)) << 16 >> 16 != 0;
          return a2 | 0;
        }
        function nq(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          b2 = +jh(b2, 6.2831854820251465);
          if (!(b2 < -3.1415927410125732)) {
            if (b2 > 3.1415927410125732)
              b2 = b2 + -6.2831854820251465;
          } else
            b2 = b2 + 6.2831854820251465;
          g[a2 + 196 >> 2] = b2;
          return;
        }
        function oq(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          b2 = +jh(b2, 6.2831854820251465);
          if (!(b2 < -3.1415927410125732)) {
            if (b2 > 3.1415927410125732)
              b2 = b2 + -6.2831854820251465;
          } else
            b2 = b2 + 6.2831854820251465;
          g[a2 + 192 >> 2] = b2;
          return;
        }
        function pq(a2, d2) {
          a2 = a2 | 0;
          d2 = d2 | 0;
          d2 = c[d2 + 4 >> 2] | 0;
          if (!((d2 & 65535 & b[a2 + 14 >> 1]) << 16 >> 16)) {
            a2 = 0;
            return a2 | 0;
          }
          a2 = (b[a2 + 12 >> 1] & (d2 >>> 16 & 65535)) << 16 >> 16 != 0;
          return a2 | 0;
        }
        function qq(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          return Sb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0) | 0;
        }
        function rq(b2) {
          b2 = b2 | 0;
          var d2 = 0;
          c[b2 >> 2] = 5136;
          d2 = c[b2 + 16 >> 2] | 0;
          if (!d2) {
            Rc(b2);
            return;
          }
          if (!(a[b2 + 20 >> 0] | 0)) {
            Rc(b2);
            return;
          }
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[d2 + -4 >> 2] | 0);
          Rc(b2);
          return;
        }
        function sq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          b2 = c[b2 + 36 >> 2] | 0;
          De(a2, c[(c[(c[(c[a2 + 4 >> 2] | 0) + 4 >> 2] | 0) + 28 >> 2] | 0) + (b2 * 80 | 0) + 64 >> 2] | 0, b2);
          return;
        }
        function tq(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          return +Nb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0);
        }
        function uq(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(115) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          sf(b2, a2, 0);
          return b2 | 0;
        }
        function vq(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          b2 = ic(191) | 0;
          if (!b2)
            b2 = 0;
          else {
            c[(b2 + 4 + 15 & -16) + -4 >> 2] = b2;
            b2 = b2 + 4 + 15 & -16;
          }
          Kf(b2, a2, 1);
          return b2 | 0;
        }
        function wq(a2, b2, d2, e2, f2, g2, h2, i2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          return + +ub[c[(c[a2 >> 2] | 0) + 12 >> 2] & 1](a2, b2, d2, e2, f2, g2, h2, i2);
        }
        function xq() {
          var a2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          a2 = ic(135) | 0;
          if (!a2)
            a2 = 0;
          else {
            c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
            a2 = a2 + 4 + 15 & -16;
          }
          Zf(a2, 0, 0, 16);
          return a2 | 0;
        }
        function yq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          kb[c[(c[b2 >> 2] | 0) + 32 >> 2] & 255](b2);
          cd(a2, b2);
          kb[c[(c[b2 >> 2] | 0) + 36 >> 2] & 255](b2);
          return;
        }
        function zq(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          Hb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0, j2 | 0);
        }
        function Aq(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Ub[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, b2, d2);
          Ub[c[(c[a2 >> 2] | 0) + 108 >> 2] & 127](a2, (b2 + 1 | 0) % 3 | 0, e2);
          return;
        }
        function Bq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 100 >> 2] = c[b2 >> 2];
          c[a2 + 100 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 100 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 100 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Cq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 12 >> 2] = c[b2 >> 2];
          c[a2 + 12 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 12 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 12 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Dq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 44 >> 2] = c[b2 >> 2];
          c[a2 + 44 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 44 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 44 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Eq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 696 >> 2] = c[b2 >> 2];
          c[a2 + 696 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 696 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 696 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Fq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 680 >> 2] = c[b2 >> 2];
          c[a2 + 680 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 680 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 680 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Gq() {
          var a2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          a2 = ic(115) | 0;
          if (!a2)
            a2 = 0;
          else {
            c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
            a2 = a2 + 4 + 15 & -16;
          }
          sf(a2, 1, 0);
          return a2 | 0;
        }
        function Hq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 60 >> 2] = c[b2 >> 2];
          c[a2 + 60 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 60 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 60 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Iq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 28 >> 2] = c[b2 >> 2];
          c[a2 + 28 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 28 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 28 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Jq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 156 >> 2] = c[b2 >> 2];
          c[a2 + 156 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 156 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 156 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Kq(b2, c2, d2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          a[b2 + 1309 + c2 >> 0] = d2 & 1;
          if ((c2 | 0) < 3) {
            a[b2 + 788 + c2 >> 0] = d2 & 1;
            return;
          } else {
            a[b2 + 868 + (c2 + -3 << 6) + 44 >> 0] = d2 & 1;
            return;
          }
        }
        function Lq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 112 >> 2] = c[b2 >> 2];
          c[a2 + 112 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 112 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 112 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Mq() {
          var a2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          a2 = ic(191) | 0;
          if (!a2)
            a2 = 0;
          else {
            c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
            a2 = a2 + 4 + 15 & -16;
          }
          Kf(a2, 1, 1);
          return a2 | 0;
        }
        function Nq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 20 >> 2] = c[b2 >> 2];
          c[a2 + 20 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 20 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 20 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Oq(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          Hd(a2, b2, c2, d2, e2, f2);
          return;
        }
        function Pq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 32 >> 2] = c[b2 >> 2];
          c[a2 + 32 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 32 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 32 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Qq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 316 >> 2] = c[b2 >> 2];
          c[a2 + 316 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 316 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 316 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Rq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 300 >> 2] = c[b2 >> 2];
          c[a2 + 300 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 300 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 300 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Sq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 24 >> 2] = c[b2 >> 2];
          c[a2 + 24 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 24 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 24 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Tq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 64 >> 2] = c[b2 >> 2];
          c[a2 + 64 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 64 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 64 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Uq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          g[a2 >> 2] = +g[a2 >> 2] - +g[b2 >> 2];
          g[a2 + 4 >> 2] = +g[a2 + 4 >> 2] - +g[b2 + 4 >> 2];
          g[a2 + 8 >> 2] = +g[a2 + 8 >> 2] - +g[b2 + 8 >> 2];
          return a2 | 0;
        }
        function Vq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          g[a2 >> 2] = +g[a2 >> 2] + +g[b2 >> 2];
          g[a2 + 4 >> 2] = +g[a2 + 4 >> 2] + +g[b2 + 4 >> 2];
          g[a2 + 8 >> 2] = +g[a2 + 8 >> 2] + +g[b2 + 8 >> 2];
          return a2 | 0;
        }
        function Wq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 52 >> 2] = c[b2 >> 2];
          c[a2 + 52 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 52 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 52 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Xq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 40 >> 2] = c[b2 >> 2];
          c[a2 + 40 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 40 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 40 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function Yq(a2, b2, c2, d2, e2, f2, g2, h2, i2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          return +ub[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0, i2 | 0);
        }
        function Zq(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 16 >> 2] = c[b2 >> 2];
          c[a2 + 16 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 16 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 16 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function _q(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          mb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2);
          Wb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 7](a2, b2, d2);
          return;
        }
        function $q(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 68 >> 2] = c[b2 >> 2];
          c[a2 + 68 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 68 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 68 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function ar(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 36 >> 2] = c[b2 >> 2];
          c[a2 + 36 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 36 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 36 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function br(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 >> 2] = c[b2 + 248 >> 2];
          c[a2 + 4 >> 2] = c[b2 + 248 + 4 >> 2];
          c[a2 + 8 >> 2] = c[b2 + 248 + 8 >> 2];
          c[a2 + 12 >> 2] = c[b2 + 248 + 12 >> 2];
          return;
        }
        function cr(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          Qf(a2, b2);
          a2 = c[a2 + 452 >> 2] | 0;
          jb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 31](a2, b2);
          return;
        }
        function dr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 48 >> 2] = c[b2 >> 2];
          c[a2 + 48 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 48 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 48 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function er(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          var f2 = 0;
          f2 = i;
          i = i + 16 | 0;
          Ne(a2, b2, d2, e2, f2 | 0) | 0;
          i = f2;
          return (D = c[f2 + 4 >> 2] | 0, c[f2 >> 2] | 0) | 0;
        }
        function fr(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          b2 = i;
          i = i + 16 | 0;
          c[b2 >> 2] = c[a2 + 60 >> 2];
          a2 = Wa(6, b2 | 0) | 0;
          if (a2 >>> 0 > 4294963200) {
            c[6326] = 0 - a2;
            a2 = -1;
          }
          i = b2;
          return a2 | 0;
        }
        function gr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 >> 2] = c[b2 >> 2];
          c[a2 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function hr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 72 >> 2] = c[b2 >> 2];
          c[a2 + 72 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 72 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 72 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function ir() {
          var a2 = 0;
          while (1) {
            a2 = ic(4) | 0;
            if (a2 | 0)
              break;
            a2 = c[6453] | 0;
            c[6453] = a2 + 0;
            Vb[a2 & 3]();
          }
          c[a2 >> 2] = 2920;
          return a2 | 0;
        }
        function jr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 >> 2] = 0;
          c[a2 + 4 >> 2] = 0;
          c[a2 + 8 >> 2] = 0;
          c[a2 + 12 >> 2] = 0;
          g[a2 + (c[b2 + 56 >> 2] << 2) >> 2] = 1;
          return;
        }
        function kr(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          b2 = i;
          i = i + 16 | 0;
          Rc(a2);
          if (!(Sa(c[6452] | 0, 0) | 0)) {
            i = b2;
            return;
          } else
            Vi(21753, b2);
        }
        function lr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 8 >> 2] = c[b2 >> 2];
          c[a2 + 8 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 8 + 8 >> 2] = c[b2 + 8 >> 2];
          c[a2 + 8 + 12 >> 2] = c[b2 + 12 >> 2];
          return;
        }
        function mr(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          return bc(b2, c2, d2, e2) | 0;
        }
        function nr() {
          var a2 = 0;
          c[6324] = (c[6324] | 0) + 1;
          a2 = ic(35) | 0;
          if (!a2) {
            a2 = 0;
            return a2 | 0;
          }
          c[(a2 + 4 + 15 & -16) + -4 >> 2] = a2;
          a2 = a2 + 4 + 15 & -16;
          return a2 | 0;
        }
        function or(a2) {
          a2 = a2 | 0;
          if (!(+F(+ +g[a2 + 20 >> 2]) < 11920928955078125e-23)) {
            a2 = 0;
            return a2 | 0;
          }
          a2 = +F(+ +g[a2 + 24 >> 2]) < 11920928955078125e-23;
          return a2 | 0;
        }
        function pr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          if (!b2 ? c[a2 + 204 >> 2] & 3 | 0 : 0)
            return;
          if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
            c[a2 + 216 >> 2] = 1;
          g[a2 + 220 >> 2] = 0;
          return;
        }
        function qr(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Yb[c[(c[a2 + -4 >> 2] | 0) + 8 >> 2] & 127](a2 + -4 | 0, b2, d2, e2);
          return;
        }
        function rr(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          var e2 = 0, f2 = 0;
          e2 = sp(a2, c2) | 0;
          f2 = D;
          return (D = (S(b2, c2) | 0) + (S(d2, a2) | 0) + f2 | f2 & 0, e2 | 0 | 0) | 0;
        }
        function sr(b2) {
          b2 = b2 | 0;
          if (a[22056] | 0)
            return 22684;
          a[22056] = 1;
          c[5671] = 1065353216;
          c[5672] = 1065353216;
          c[5673] = 1065353216;
          g[5674] = 0;
          return 22684;
        }
        function tr(a2, b2, c2, d2, e2, f2, g2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          Gb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0, h2 | 0);
        }
        function ur(a2) {
          a2 = a2 | 0;
          c[a2 >> 2] = 3880;
          c[a2 + 12 >> 2] = 4092;
          Sf(a2 + 12 | 0);
          dj(a2 + 72 | 0);
          Rc(a2);
          return;
        }
        function vr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 348 >> 2] = c[b2 >> 2];
          c[a2 + 348 + 4 >> 2] = c[b2 + 4 >> 2];
          c[a2 + 348 + 8 >> 2] = c[b2 + 8 >> 2];
          return;
        }
        function wr(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          if ((d2 | 0) <= 0)
            return;
          yn(c2 | 0, 0, d2 << 4 | 0) | 0;
          return;
        }
        function xr(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          Cj(a2, b2, c2, d2);
          return;
        }
        function yr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 >> 2] = 1065353216;
          c[a2 + 4 >> 2] = 1065353216;
          c[a2 + 8 >> 2] = 1065353216;
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function zr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          d2 = c[a2 + 8 >> 2] | 0;
          Ub[c[d2 + 60 >> 2] & 127](b2, d2, c[a2 + 4 >> 2] | 0);
          return 0;
        }
        function Ar(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          var d2 = 0;
          d2 = a2 + 92 | 0;
          do {
            c[a2 >> 2] = c[b2 >> 2];
            a2 = a2 + 4 | 0;
            b2 = b2 + 4 | 0;
          } while ((a2 | 0) < (d2 | 0));
          return;
        }
        function Br(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 520 >> 2] = b2;
          if (!b2)
            return;
          mb[c[(c[b2 >> 2] | 0) + 8 >> 2] & 127](b2, a2 + 4 | 0);
          return;
        }
        function Cr(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          Cg(a2, b2, c2, d2);
          return;
        }
        function Dr(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[a2 >> 2] = 0;
          c[a2 + 4 >> 2] = 0;
          c[a2 + 8 >> 2] = 0;
          c[a2 + 12 >> 2] = 0;
          return;
        }
        function Er(a2) {
          a2 = a2 | 0;
          c[a2 >> 2] = 3880;
          c[a2 + 12 >> 2] = 4092;
          Sf(a2 + 12 | 0);
          dj(a2 + 72 | 0);
          return;
        }
        function Fr(a2, b2, c2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          return Db[a2 & 3](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0) | 0;
        }
        function Gr(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          e2 = +e2;
          g[a2 >> 2] = b2;
          g[a2 + 4 >> 2] = c2;
          g[a2 + 8 >> 2] = d2;
          g[a2 + 12 >> 2] = e2;
          return;
        }
        function Hr(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          b2 = i;
          i = i + 16 | 0;
          mb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 127](a2, b2);
          i = b2;
          return;
        }
        function Ir(a2) {
          a2 = a2 | 0;
          ag(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function Jr(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2, d2, e2);
          return;
        }
        function Kr(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 >> 2] = +g[a2 >> 2] * b2;
          g[a2 + 4 >> 2] = +g[a2 + 4 >> 2] * b2;
          g[a2 + 8 >> 2] = +g[a2 + 8 >> 2] * b2;
          return a2 | 0;
        }
        function Lr(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          me(c[a2 + 108 >> 2] | 0, c[a2 + 136 >> 2] | 0, b2, d2);
          return;
        }
        function Mr(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          Ub[c[(c[b2 >> 2] | 0) + 64 >> 2] & 127](a2, b2, d2);
          return;
        }
        function Nr(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          return 0;
        }
        function Or(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 80 >> 2] & 127](a2, b2, d2, e2);
          return;
        }
        function Pr() {
          var a2 = 0;
          a2 = i;
          i = i + 16 | 0;
          if (!(Ta(25808, 252) | 0)) {
            i = a2;
            return;
          } else
            Vi(21703, a2);
        }
        function Qr(a2, b2, c2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          f2 = f2 | 0;
          g2 = g2 | 0;
          return +Eb[a2 & 3](b2 | 0, c2 | 0, d2 | 0, +e2, f2 | 0, g2 | 0);
        }
        function Rr(a2) {
          a2 = a2 | 0;
          if (c[a2 + 204 >> 2] & 3 | 0)
            return;
          if ((c[a2 + 216 >> 2] & -2 | 0) != 4)
            c[a2 + 216 >> 2] = 1;
          g[a2 + 220 >> 2] = 0;
          return;
        }
        function Sr(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          a2 = c[a2 + 4 >> 2] | 0;
          Jb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 31](a2, c[b2 + 36 >> 2] | 0) | 0;
          return;
        }
        function Tr(a2) {
          a2 = a2 | 0;
          var b2 = 0, c2 = 0, d2 = 0;
          d2 = +g[a2 >> 2];
          c2 = +g[a2 + 4 >> 2];
          b2 = +g[a2 + 8 >> 2];
          return + +G(+(d2 * d2 + c2 * c2 + b2 * b2));
        }
        function Ur(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 300 >> 2] = (c[a2 + 300 >> 2] | 0) + 1;
          c[a2 + 192 >> 2] = b2;
          c[a2 + 200 >> 2] = b2;
          return;
        }
        function Vr(a2, b2, c2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          Ab[a2 & 7](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, g2 | 0);
        }
        function Wr(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          f2 = +f2;
          g2 = +g2;
          h2 = +h2;
          i2 = +i2;
          j2 = j2 | 0;
          k2 = +k2;
          l2 = l2 | 0;
          W(33);
        }
        function Xr(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2, d2, e2);
          return;
        }
        function Yr(b2, c2, d2, e2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          e2 = +e2;
          a[b2 + 737 >> 0] = c2 & 1;
          g[b2 + 680 >> 2] = d2;
          g[b2 + 684 >> 2] = e2;
          return;
        }
        function Zr(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 88 >> 2] & 127](a2, b2, d2, e2);
          return;
        }
        function _r(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          Ub[c[(c[b2 >> 2] | 0) + 68 >> 2] & 127](a2, b2, d2);
          return;
        }
        function $r(b2, d2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          b2 = (a[b2 + 344 >> 0] | 0) == 0 ? 3 : 0;
          c[d2 >> 2] = b2;
          c[d2 + 4 >> 2] = b2;
          return;
        }
        function as(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, d2, e2);
          return;
        }
        function bs(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          return Xb[c[(c[a2 >> 2] | 0) + 52 >> 2] & 1](a2, b2, d2, 0.01666666753590107) | 0;
        }
        function cs(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          if ((c2 | 0) < 32) {
            D = b2 << c2 | (a2 & (1 << c2) - 1 << 32 - c2) >>> 32 - c2;
            return a2 << c2;
          }
          D = a2 << c2 - 32;
          return 0;
        }
        function ds(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          c[d2 >> 2] = 0;
          c[d2 + 4 >> 2] = 0;
          c[d2 + 8 >> 2] = 0;
          c[d2 + 12 >> 2] = 0;
          return;
        }
        function es(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          b2 = c[a2 + 68 >> 2] | 0;
          mb[c[(c[b2 >> 2] | 0) + 32 >> 2] & 127](b2, c[a2 + 24 >> 2] | 0);
          return;
        }
        function fs(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = +d2;
          g[a2 >> 2] = b2;
          g[a2 + 4 >> 2] = c2;
          g[a2 + 8 >> 2] = d2;
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function gs(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          e2 = +e2;
          return Xb[c[(c[a2 >> 2] | 0) + 52 >> 2] & 1](a2, b2, d2, e2) | 0;
        }
        function hs(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 >> 2] = 0;
          c[a2 + 4 >> 2] = 0;
          c[a2 + 8 >> 2] = 1065353216;
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function is(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 >> 2] = 1065353216;
          c[a2 + 4 >> 2] = 0;
          c[a2 + 8 >> 2] = 0;
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function js(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 >> 2] = 0;
          c[a2 + 4 >> 2] = 1065353216;
          c[a2 + 8 >> 2] = 0;
          g[a2 + 12 >> 2] = 0;
          return;
        }
        function ks(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          Ub[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2, c[(c[a2 + 8 >> 2] | 0) + 48 >> 2] | 0);
          return;
        }
        function ls(a2, b2, c2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = +g2;
          zb[a2 & 0](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0, +g2);
        }
        function ms(a2, b2, c2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          f2 = f2 | 0;
          g2 = g2 | 0;
          lb[a2 & 0](b2 | 0, c2 | 0, d2 | 0, +e2, f2 | 0, g2 | 0);
        }
        function ns(b2, d2, e2) {
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          g[(c[b2 + 760 >> 2] | 0) + (d2 * 104 | 0) + 88 >> 2] = e2 > 0 ? 1 / e2 : 0;
          a[b2 + 964 >> 0] = 1;
          return;
        }
        function os(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          Wb[c[(c[a2 >> 2] | 0) + 20 >> 2] & 7](a2, b2, d2);
          return;
        }
        function ps(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          if ((c2 | 0) < 32) {
            D = b2 >>> c2;
            return a2 >>> c2 | (b2 & (1 << c2) - 1) << 32 - c2;
          }
          D = 0;
          return b2 >>> c2 - 32 | 0;
        }
        function qs(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 124 >> 2] & 127](a2, e2, b2, d2);
          return;
        }
        function rs(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          c[a2 + 112 >> 2] = b2;
          c[a2 + 116 >> 2] = d2;
          c[a2 + 120 >> 2] = e2;
          return;
        }
        function ss(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return +(+g[a2 >> 2] * +g[b2 >> 2] + +g[a2 + 4 >> 2] * +g[b2 + 4 >> 2] + +g[a2 + 8 >> 2] * +g[b2 + 8 >> 2]);
        }
        function ts(a2) {
          a2 = a2 | 0;
          $j(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function us(a2) {
          a2 = a2 | 0;
          kk(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function vs(a2, b2, c2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          qb[a2 & 0](b2 | 0, +c2, +d2, e2 | 0, f2 | 0, g2 | 0);
        }
        function ws(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          W(29);
          return 0;
        }
        function xs(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, d2, -3);
          return;
        }
        function ys(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          return 1;
        }
        function zs(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          return;
        }
        function As(a2, b2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2, d2, e2);
          return;
        }
        function Bs(a2) {
          a2 = a2 | 0;
          Dg(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function Cs() {
        }
        function Ds(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          d2 = b2 - d2 - (c2 >>> 0 > a2 >>> 0 | 0) >>> 0;
          return (D = d2, a2 - c2 >>> 0 | 0) | 0;
        }
        function Es(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Gf(a2, b2, c2, d2, e2);
          return;
        }
        function Fs(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Pf(a2, b2, c2, d2, e2);
          return;
        }
        function Gs(b2) {
          b2 = b2 | 0;
          if ((c[b2 + 56 >> 2] | 0) == 0 ? (a[b2 + 44 >> 0] & 1) == 0 : 0) {
            b2 = 0;
            return b2 | 0;
          }
          b2 = 1;
          return b2 | 0;
        }
        function Hs(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          W(5);
          return 0;
        }
        function Is(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          yd(a2, b2);
          return;
        }
        function Js(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          f2 = +f2;
          g2 = +g2;
          h2 = +h2;
          i2 = i2 | 0;
          j2 = j2 | 0;
          k2 = +k2;
          W(13);
        }
        function Ks(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          return +wb[a2 & 15](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0);
        }
        function Ls(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, d2, -1);
          return;
        }
        function Ms(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          return Xb[c[(c[a2 >> 2] | 0) + 52 >> 2] & 1](a2, b2, 1, 0.01666666753590107) | 0;
        }
        function Ns(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          Ub[c[(c[a2 >> 2] | 0) + 56 >> 2] & 127](a2, b2, d2);
          return;
        }
        function Os(a2) {
          a2 = a2 | 0;
          c[a2 >> 2] = 4092;
          Sf(a2);
          dj(a2 + 60 | 0);
          Rc(a2);
          return;
        }
        function Ps(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          Wb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 7](a2, b2, d2);
          return;
        }
        function Qs(a2) {
          a2 = a2 | 0;
          li(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function Rs(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          j2 = j2 | 0;
          W(26);
        }
        function Ss(a2) {
          a2 = a2 | 0;
          pj(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function Ts(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = f2 | 0;
          return +Qb[a2 & 3](b2 | 0, c2 | 0, +d2, e2 | 0, f2 | 0);
        }
        function Us(a2) {
          a2 = a2 | 0;
          c[a2 >> 2] = 8076;
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function Vs(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          ib[a2 & 31](b2 | 0, c2 | 0, d2 | 0, e2 | 0, f2 | 0);
        }
        function Ws(a2) {
          a2 = a2 | 0;
          if (!(c[a2 + 12 >> 2] | 0)) {
            a2 = 0;
            return a2 | 0;
          }
          a2 = c[a2 + 20 >> 2] | 0;
          return a2 | 0;
        }
        function Xs(a2) {
          a2 = a2 | 0;
          km(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function Ys(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          jb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 31](a2, d2);
          return;
        }
        function Zs(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, 2, -3);
          return;
        }
        function _s(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          tb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 15](a2, b2, d2);
          return;
        }
        function $s(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          return;
        }
        function at(a2) {
          a2 = a2 | 0;
          mi(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function bt(a2) {
          a2 = a2 | 0;
          oi(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function ct(a2, b2, c2, d2, e2, f2, g2, h2, i2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          W(31);
          return 0;
        }
        function dt(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          Mb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0, +f2);
        }
        function et(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = f2 | 0;
          Fb[a2 & 0](b2 | 0, c2 | 0, +d2, e2 | 0, f2 | 0);
        }
        function ft(a2, b2, c2, d2, e2, f2, g2, h2, i2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          W(36);
          return 0;
        }
        function gt(a2) {
          a2 = a2 | 0;
          c[a2 >> 2] = 4092;
          Sf(a2);
          dj(a2 + 60 | 0);
          return;
        }
        function ht(a2) {
          a2 = a2 | 0;
          c[a2 >> 2] = 4276;
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function it(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 127](a2, b2);
          return;
        }
        function jt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 40 >> 2] & 127](a2, b2);
          return;
        }
        function kt(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          Lc(a2, b2, c2, d2) | 0;
          return 1;
        }
        function lt(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          g[(c[a2 + 136 >> 2] | 0) + (d2 * 284 | 0) + 232 >> 2] = b2;
          return;
        }
        function mt(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          g[(c[a2 + 136 >> 2] | 0) + (d2 * 284 | 0) + 252 >> 2] = b2;
          return;
        }
        function nt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          Yb[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2, b2, 1, -1);
          return;
        }
        function ot(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          Yh(b2, c2);
          return;
        }
        function pt(a2) {
          a2 = a2 | 0;
          hd(a2);
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function qt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          if ((c[a2 + 216 >> 2] & -2 | 0) == 4)
            return;
          c[a2 + 216 >> 2] = b2;
          return;
        }
        function rt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          Ub[c[(c[a2 >> 2] | 0) + 56 >> 2] & 127](a2, b2, 0);
          return;
        }
        function st(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return Jb[c[(c[a2 >> 2] | 0) + 40 >> 2] & 31](a2, b2) | 0;
        }
        function tt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 60 >> 2] & 127](a2, b2);
          return;
        }
        function ut(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = +d2;
          mb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 127](a2, b2);
          return;
        }
        function vt(a2) {
          a2 = a2 | 0;
          a2 = c[a2 + 68 >> 2] | 0;
          return ob[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2) | 0;
        }
        function wt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 92 >> 2] & 127](a2, b2);
          return;
        }
        function xt(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          return sb[a2 & 31](b2 | 0, c2 | 0, d2 | 0, e2 | 0) | 0;
        }
        function yt(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          c[a2 + 300 >> 2] = (c[a2 + 300 >> 2] | 0) + 1;
          g[a2 + 232 >> 2] = b2;
          return;
        }
        function zt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 32 >> 2] & 127](a2, b2);
          return;
        }
        function At(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 128 >> 2] & 127](a2, b2);
          return;
        }
        function Bt(a2, b2, c2, d2, e2, f2, g2, h2, i2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          i2 = i2 | 0;
          W(25);
        }
        function Ct(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          return (D = b2 + d2 + (a2 + c2 >>> 0 >>> 0 < a2 >>> 0 | 0) >>> 0, a2 + c2 >>> 0 | 0) | 0;
        }
        function Dt(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          d2 = d2 | 0;
          g[(c[a2 + 136 >> 2] | 0) + (d2 * 284 | 0) + 256 >> 2] = b2;
          return;
        }
        function Et(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 84 >> 2] & 127](a2, b2);
          return;
        }
        function Ft(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 28 >> 2] & 127](a2, b2);
          return;
        }
        function Gt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 124 >> 2] & 127](a2, b2);
          return;
        }
        function Ht(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          return +Rb[a2 & 1](b2 | 0, c2 | 0, d2 | 0, e2 | 0);
        }
        function It(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          c[a2 + 300 >> 2] = (c[a2 + 300 >> 2] | 0) + 1;
          g[a2 + 228 >> 2] = b2;
          return;
        }
        function Jt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 72 >> 2] & 127](a2, b2);
          return;
        }
        function Kt(a2) {
          a2 = a2 | 0;
          if (!a2)
            return;
          kb[c[(c[a2 >> 2] | 0) + 4 >> 2] & 255](a2);
          return;
        }
        function Lt(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 44 >> 2] = b2;
          g[a2 + 48 >> 2] = +I(+b2);
          return;
        }
        function Mt(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          return +(+Cb[c[(c[a2 >> 2] | 0) + 16 >> 2] & 15](a2) * b2);
        }
        function Nt(a2, b2, c2, d2, e2, f2, g2, h2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          h2 = h2 | 0;
          W(12);
          return 0;
        }
        function Ot(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          c[a2 + 300 >> 2] = (c[a2 + 300 >> 2] | 0) + 1;
          g[a2 + 224 >> 2] = b2;
          return;
        }
        function Pt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 12 >> 2] & 127](a2, b2);
          return;
        }
        function Qt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          Be(a2, b2);
          return;
        }
        function Rt(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          g[a2 + 512 >> 2] = b2;
          g[a2 + 516 >> 2] = c2;
          return;
        }
        function St(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          wi(a2, b2, c2);
          return;
        }
        function Tt(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          Yb[a2 & 127](b2 | 0, c2 | 0, d2 | 0, e2 | 0);
        }
        function Ut(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          Xi(a2, b2, c2);
          return;
        }
        function Vt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 68 >> 2] & 127](a2, b2);
          return;
        }
        function Wt(b2, c2) {
          b2 = b2 | 0;
          c2 = +c2;
          g[b2 + 572 >> 2] = c2;
          a[b2 + 553 >> 0] = 1;
          return;
        }
        function Xt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 8 >> 2] & 127](a2, b2);
          return;
        }
        function Yt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 24 >> 2] & 127](a2, b2);
          return;
        }
        function Zt(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 68 >> 2] = b2;
          return;
        }
        function _t(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[a2 + 20 >> 2] = b2;
          c[a2 + 28 >> 2] = d2;
          return;
        }
        function $t(a2, b2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          d2 = d2 | 0;
          c[a2 + 16 >> 2] = b2;
          c[a2 + 24 >> 2] = d2;
          return;
        }
        function au(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          return 0;
        }
        function bu(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          d2 = d2 | 0;
          e2 = +e2;
          return Xb[a2 & 1](b2 | 0, +c2, d2 | 0, +e2) | 0;
        }
        function cu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          mb[c[(c[a2 >> 2] | 0) + 64 >> 2] & 127](a2, b2);
          return;
        }
        function du(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          g[a2 + 1340 + (b2 << 2) >> 2] = c2;
          return;
        }
        function eu(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          return cc(a2, b2, c2) | 0;
        }
        function fu(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 32 >> 2] = b2;
          g[a2 + 36 >> 2] = b2;
          return;
        }
        function gu(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          g[a2 + 1364 + (b2 << 2) >> 2] = c2;
          return;
        }
        function hu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          je(a2, b2);
          return;
        }
        function iu(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          Tb[a2 & 15](b2 | 0, c2 | 0, d2 | 0, +e2);
        }
        function ju(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 136 >> 2] = b2;
          return;
        }
        function ku(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          pb[a2 & 7](b2 | 0, c2 | 0, +d2, e2 | 0);
        }
        function lu(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          d2 = d2 | 0;
          e2 = e2 | 0;
          rb[a2 & 0](b2 | 0, +c2, d2 | 0, e2 | 0);
        }
        function mu(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 132 >> 2] = b2;
          return;
        }
        function nu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 24 >> 2] = b2;
          return;
        }
        function ou(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          g[a2 + 48 >> 2] = +(b2 | 0);
          return;
        }
        function pu(b2, c2) {
          b2 = b2 | 0;
          c2 = +c2;
          g[b2 + 572 >> 2] = c2;
          a[b2 + 553 >> 0] = 0;
          return;
        }
        function qu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return c[(c[a2 + 28 >> 2] | 0) + (b2 * 80 | 0) + 64 >> 2] | 0;
        }
        function ru(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          b2 = i;
          i = i + 16 | 0;
          Vb[a2 & 3]();
          Vi(21806, b2);
        }
        function su(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return c[(c[a2 + 20 >> 2] | 0) + (b2 << 2) >> 2] | 0;
        }
        function tu(a2) {
          a2 = a2 | 0;
          return ob[c[(c[a2 >> 2] | 0) + 40 >> 2] & 127](a2) | 0;
        }
        function uu(a2) {
          a2 = a2 | 0;
          if (!a2)
            return;
          c[6325] = (c[6325] | 0) + 1;
          Rc(c[a2 + -4 >> 2] | 0);
          return;
        }
        function vu(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          jb[c[(c[a2 >> 2] | 0) + 44 >> 2] & 31](a2, b2);
          return;
        }
        function wu(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 140 >> 2] = b2;
          return;
        }
        function xu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return c[(c[a2 + 316 >> 2] | 0) + (b2 << 2) >> 2] | 0;
        }
        function yu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return (c[a2 + 136 >> 2] | 0) + (b2 * 284 | 0) + 92 | 0;
        }
        function zu(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 32 >> 0] = c2 & 1;
          return;
        }
        function Au(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          return yb[a2 & 63](b2 | 0, c2 | 0, d2 | 0) | 0;
        }
        function Bu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          wi(a2, b2, 1);
          return;
        }
        function Cu(a2) {
          a2 = a2 | 0;
          if (!a2)
            a2 = 0;
          else
            a2 = (jj(a2, 2832) | 0) != 0;
          return a2 & 1 | 0;
        }
        function Du(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 120 >> 2] = b2;
          return;
        }
        function Eu(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 116 >> 2] = b2;
          return;
        }
        function Fu(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 128 >> 2] = b2;
          return;
        }
        function Gu(a2) {
          a2 = a2 | 0;
          Ej(a2);
          Rc(a2);
          return;
        }
        function Hu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return c[(c[a2 + 220 >> 2] | 0) + (b2 << 2) >> 2] | 0;
        }
        function Iu(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          return +Kb[a2 & 15](b2 | 0, c2 | 0, d2 | 0);
        }
        function Ju(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return cc(a2, b2, 8192) | 0;
        }
        function Ku(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 124 >> 0] = c2 & 1;
          return;
        }
        function Lu(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 250 >> 0] = c2 & 1;
          return;
        }
        function Mu(a2) {
          a2 = a2 | 0;
          return ob[c[(c[a2 >> 2] | 0) + 36 >> 2] & 127](a2) | 0;
        }
        function Nu(a2) {
          a2 = a2 | 0;
          return ob[c[(c[a2 >> 2] | 0) + 48 >> 2] & 127](a2) | 0;
        }
        function Ou(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          return;
        }
        function Pu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          al(a2, b2);
          return;
        }
        function Qu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          Jg(a2, b2);
          return;
        }
        function Ru(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          return Bb[a2 & 7](b2 | 0, c2 | 0, +d2) | 0;
        }
        function Su(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 136 >> 2];
        }
        function Tu(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 132 >> 2];
        }
        function Uu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return (c[a2 + 136 >> 2] | 0) + (b2 * 284 | 0) | 0;
        }
        function Vu(a2, b2, c2, d2, e2, f2, g2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          g2 = g2 | 0;
          W(24);
        }
        function Wu(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          Ub[a2 & 127](b2 | 0, c2 | 0, d2 | 0);
        }
        function Xu(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 104 >> 2] = b2;
          return;
        }
        function Yu(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[b2 + 780 >> 2] = 0;
          return;
        }
        function Zu() {
          c[5703] = 1065353216;
          c[5704] = 0;
          c[5705] = 0;
          g[5706] = 0;
          return;
        }
        function _u(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 96 >> 2] = b2;
          return;
        }
        function $u(a2) {
          a2 = a2 | 0;
          return + +Cb[c[(c[a2 >> 2] | 0) + 48 >> 2] & 15](a2);
        }
        function av(a2, c2) {
          a2 = a2 | 0;
          c2 = c2 | 0;
          b[a2 + 10 >> 1] = c2;
          return;
        }
        function bv(a2, c2) {
          a2 = a2 | 0;
          c2 = c2 | 0;
          b[a2 + 8 >> 1] = c2;
          return;
        }
        function cv(a2) {
          a2 = a2 | 0;
          $i(a2);
          Rc(a2);
          return;
        }
        function dv(a2) {
          a2 = a2 | 0;
          var b2 = 0;
          b2 = i;
          i = i + a2 | 0;
          i = i + 15 & -16;
          return b2 | 0;
        }
        function ev(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return c[(c[a2 + 12 >> 2] | 0) + (b2 << 2) >> 2] | 0;
        }
        function fv(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          zd(a2, b2);
          return;
        }
        function gv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 92 >> 2] = b2;
          return;
        }
        function hv(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 140 >> 2];
        }
        function iv(b2) {
          b2 = b2 | 0;
          return (a[b2 + 32 >> 0] & 1) != 0 | 0;
        }
        function jv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 112 >> 2] = b2;
          return;
        }
        function kv(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return a2 + 868 + (b2 << 6) | 0;
        }
        function lv(a2, c2) {
          a2 = a2 | 0;
          c2 = c2 | 0;
          b[a2 + 12 >> 1] = c2;
          return;
        }
        function mv(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 44 >> 0] = c2 & 1;
          return;
        }
        function nv(a2, c2) {
          a2 = a2 | 0;
          c2 = c2 | 0;
          b[a2 + 14 >> 1] = c2;
          return;
        }
        function ov(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          W(21);
          return 0;
        }
        function pv(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return ((c[b2 + 248 >> 2] & 2 | 0) == 0 ? 0 : b2) | 0;
        }
        function qv(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 44 >> 2] = b2 & 1;
          return;
        }
        function rv(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          d2 = d2 | 0;
          tb[a2 & 15](b2 | 0, +c2, d2 | 0);
        }
        function sv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 220 >> 2] = b2;
          return;
        }
        function tv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 100 >> 2] = b2;
          return;
        }
        function uv(b2) {
          b2 = b2 | 0;
          return (a[b2 + 124 >> 0] & 1) != 0 | 0;
        }
        function vv(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 24 >> 0] = c2 & 1;
          return;
        }
        function wv(a2) {
          a2 = a2 | 0;
          return ~~+g[a2 + 48 >> 2] | 0;
        }
        function xv(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 288 >> 0] = c2 & 1;
          return;
        }
        function yv(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          Wb[a2 & 7](b2 | 0, c2 | 0, +d2);
        }
        function zv(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = f2 | 0;
          W(22);
          return 0;
        }
        function Av(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 224 >> 2] = b2;
          return;
        }
        function Bv(a2) {
          a2 = a2 | 0;
          a2 = c[a2 + 216 >> 2] | 0;
          return (a2 | 0) != 5 & (a2 | 0) != 2 | 0;
        }
        function Cv(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 524 >> 0] = c2 & 1;
          return;
        }
        function Dv(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 120 >> 2];
        }
        function Ev(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 16 >> 0] = c2 & 1;
          return;
        }
        function Fv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 276 >> 2] = b2;
          return;
        }
        function Gv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 204 >> 2] = b2;
          return;
        }
        function Hv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 208 >> 2] = b2;
          return;
        }
        function Iv(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 116 >> 2];
        }
        function Jv(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 128 >> 2];
        }
        function Kv(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          return;
        }
        function Lv(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return ((c[b2 + 248 >> 2] | 0) == 8 ? b2 : 0) | 0;
        }
        function Mv(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 552 >> 0] = c2 & 1;
          return;
        }
        function Nv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 216 >> 2] = b2;
          return;
        }
        function Ov(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 36 >> 2] = b2;
          return;
        }
        function Pv(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 32 >> 2] = b2;
          return;
        }
        function Qv(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return a2 + 4 + (b2 * 192 | 0) | 0;
        }
        function Rv(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 736 >> 0] = c2 & 1;
          return;
        }
        function Sv(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          return Ne(a2, b2, c2, d2, 0) | 0;
        }
        function Tv(a2) {
          a2 = a2 | 0;
          Xe(a2);
          Rc(a2);
          return;
        }
        function Uv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 248 >> 2] = b2;
          return;
        }
        function Vv(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 260 >> 0] = c2 & 1;
          return;
        }
        function Wv(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 21 >> 0] = c2 & 1;
          return;
        }
        function Xv(a2) {
          a2 = a2 | 0;
          return !(+g[a2 >> 2] > +g[a2 + 4 >> 2]) | 0;
        }
        function Yv(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 684 >> 2] = b2;
          return;
        }
        function Zv(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 25 >> 0] = c2 & 1;
          return;
        }
        function _v(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = c2 | 0;
          return;
        }
        function $v(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 72 >> 2] = b2;
          return;
        }
        function aw(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          d2 = +d2;
          xb[a2 & 7](b2 | 0, +c2, +d2);
        }
        function bw(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 188 >> 2] = b2;
          return;
        }
        function cw(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 184 >> 2] = b2;
          return;
        }
        function dw(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 8 >> 2] = b2;
          return;
        }
        function ew(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return (c[a2 + 12 >> 2] | 0) + (b2 * 104 | 0) | 0;
        }
        function fw(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 268 >> 2] = b2;
          return;
        }
        function gw(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 737 >> 0] = c2 & 1;
          return;
        }
        function hw(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 216 >> 2] = b2;
          return;
        }
        function iw(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 26 >> 0] = c2 & 1;
          return;
        }
        function jw(b2, c2) {
          b2 = b2 | 0;
          c2 = c2 | 0;
          a[b2 + 84 >> 0] = c2 & 1;
          return;
        }
        function kw(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          W(18);
        }
        function lw(a2) {
          a2 = a2 | 0;
          return (a2 & 255) << 24 | (a2 >> 8 & 255) << 16 | (a2 >> 16 & 255) << 8 | a2 >>> 24 | 0;
        }
        function mw(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 272 >> 2] = b2;
          return;
        }
        function nw(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 4 >> 2] = b2;
          return;
        }
        function ow(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 440 >> 2] = b2;
          return;
        }
        function pw(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          return Jb[a2 & 31](b2 | 0, c2 | 0) | 0;
        }
        function qw(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 244 >> 2] = b2;
          return;
        }
        function rw(a2) {
          a2 = a2 | 0;
          hk(a2);
          Rc(a2);
          return;
        }
        function sw(a2) {
          a2 = a2 | 0;
          Fi(a2);
          Rc(a2);
          return;
        }
        function tw(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 212 >> 2] = b2;
          return;
        }
        function uw(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 228 >> 2] = b2;
          return;
        }
        function vw(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 204 >> 2] = b2;
          return;
        }
        function ww(b2) {
          b2 = b2 | 0;
          return (a[b2 + 44 >> 0] & 1) != 0 | 0;
        }
        function xw(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = +f2;
          W(17);
        }
        function yw(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 252 >> 2] = b2;
          return;
        }
        function zw(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 96 >> 2];
        }
        function Aw(a2) {
          a2 = a2 | 0;
          return (c[a2 + 44 >> 2] | 0) != 0 | 0;
        }
        function Bw(a2) {
          a2 = a2 | 0;
          gk(a2);
          Rc(a2);
          return;
        }
        function Cw(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 92 >> 2];
        }
        function Dw(b2) {
          b2 = b2 | 0;
          return (a[b2 + 24 >> 0] & 1) != 0 | 0;
        }
        function Ew(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          return 0;
        }
        function Fw(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          e2 = e2 | 0;
          f2 = f2 | 0;
          W(3);
        }
        function Gw(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 252 >> 2] = b2;
          return;
        }
        function Hw(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 112 >> 2];
        }
        function Iw(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          W(14);
          return 0;
        }
        function Jw(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 232 >> 2] = b2;
          return;
        }
        function Kw(b2) {
          b2 = b2 | 0;
          return (a[b2 + 16 >> 0] & 1) != 0 | 0;
        }
        function Lw(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 >> 2] = b2;
          return;
        }
        function Mw(a2) {
          a2 = a2 | 0;
          return b[a2 + 10 >> 1] | 0;
        }
        function Nw(a2) {
          a2 = a2 | 0;
          return b[a2 + 8 >> 1] | 0;
        }
        function Ow(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 260 >> 2] = b2;
          return;
        }
        function Pw(a2) {
          a2 = a2 | 0;
          ik(a2);
          Rc(a2);
          return;
        }
        function Qw(a2, b2, c2, d2, e2, f2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          d2 = d2 | 0;
          e2 = e2 | 0;
          f2 = f2 | 0;
          W(8);
        }
        function Rw(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 220 >> 2];
        }
        function Sw(a2) {
          a2 = a2 | 0;
          return (c[a2 + 204 >> 2] & 2 | 0) != 0 | 0;
        }
        function Tw(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 100 >> 2];
        }
        function Uw(a2) {
          a2 = a2 | 0;
          return b[a2 + 12 >> 1] | 0;
        }
        function Vw(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          d2 = d2 | 0;
          e2 = e2 | 0;
          W(34);
          return 0;
        }
        function Ww(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 224 >> 2];
        }
        function Xw(a2) {
          a2 = a2 | 0;
          return bh(a2) | 0;
        }
        function Yw(a2) {
          a2 = a2 | 0;
          return b[a2 + 14 >> 1] | 0;
        }
        function Zw(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 84 >> 2] = b2;
          return;
        }
        function _w(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 88 >> 2] = b2;
          return;
        }
        function $w(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 92 >> 2] = b2;
          return;
        }
        function ax(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 100 >> 2] = b2;
          return;
        }
        function bx(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 96 >> 2] = b2;
          return;
        }
        function cx(a2) {
          a2 = a2 | 0;
          return (c[a2 + 48 >> 2] | 0) == 1 | 0;
        }
        function dx(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          if (!o) {
            o = a2;
            p = b2;
          }
        }
        function ex(b2) {
          b2 = b2 | 0;
          return (a[b2 + 260 >> 0] & 1) != 0 | 0;
        }
        function fx(b2) {
          b2 = b2 | 0;
          return (a[b2 + 25 >> 0] & 1) != 0 | 0;
        }
        function gx(a2) {
          a2 = a2 | 0;
          return (c[a2 + 96 >> 2] | 0) + 4 | 0;
        }
        function hx(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          mb[a2 & 127](b2 | 0, c2 | 0);
        }
        function ix(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          return +Ob[a2 & 1](b2 | 0, +c2);
        }
        function jx(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 276 >> 2];
        }
        function kx(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 204 >> 2];
        }
        function lx(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 208 >> 2];
        }
        function mx(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c[a2 + 16 >> 2] = b2;
          return;
        }
        function nx(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 72 >> 2] = b2;
          return;
        }
        function ox(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 64 >> 2] = b2;
          return;
        }
        function px(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 68 >> 2] = b2;
          return;
        }
        function qx(a2) {
          a2 = a2 | 0;
          jk(a2);
          Rc(a2);
          return;
        }
        function rx(a2) {
          a2 = a2 | 0;
          Fk(a2);
          Rc(a2);
          return;
        }
        function sx(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 104 >> 2];
        }
        function tx(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 216 >> 2];
        }
        function ux(a2) {
          a2 = a2 | 0;
          return c[a2 + 308 >> 2] | 0;
        }
        function vx(b2) {
          b2 = b2 | 0;
          return (a[b2 + 26 >> 0] & 1) != 0 | 0;
        }
        function wx(b2) {
          b2 = b2 | 0;
          return (a[b2 + 84 >> 0] & 1) != 0 | 0;
        }
        function xx(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 80 >> 2] = b2;
          return;
        }
        function yx(a2) {
          a2 = a2 | 0;
          return +(+g[a2 + 32 >> 2] * +g[a2 + 16 >> 2]);
        }
        function zx(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 248 >> 2];
        }
        function Ax(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 60 >> 2] = b2;
          return;
        }
        function Bx(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 52 >> 2] = b2;
          return;
        }
        function Cx(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 56 >> 2] = b2;
          return;
        }
        function Dx(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          return 0;
        }
        function Ex(a2) {
          a2 = a2 | 0;
          return c[a2 + 36 >> 2] | 0;
        }
        function Fx(a2) {
          a2 = a2 | 0;
          return c[a2 + 32 >> 2] | 0;
        }
        function Gx(a2) {
          a2 = a2 | 0;
          return c[a2 + 780 >> 2] | 0;
        }
        function Hx(a2) {
          a2 = a2 | 0;
          return a2 + 12 | 0;
        }
        function Ix(a2) {
          a2 = a2 | 0;
          return (c[a2 + 52 >> 2] | 0) + 4 | 0;
        }
        function Jx(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 124 >> 2];
        }
        function Kx(a2) {
          a2 = a2 | 0;
          return a2 + 44 | 0;
        }
        function Lx(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          jb[a2 & 31](b2 | 0, +c2);
        }
        function Mx(a2) {
          a2 = a2 | 0;
          return c[a2 + 8 >> 2] | 0;
        }
        function Nx(a2) {
          a2 = a2 | 0;
          return (c[a2 + 8 >> 2] | 0) != 0 | 0;
        }
        function Ox(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 44 >> 2] = b2;
          return;
        }
        function Px(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 40 >> 2] = b2;
          return;
        }
        function Qx(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 36 >> 2] = b2;
          return;
        }
        function Rx(a2) {
          a2 = a2 | 0;
          return a2 + 60 | 0;
        }
        function Sx(a2) {
          a2 = a2 | 0;
          return c[a2 + 200 >> 2] | 0;
        }
        function Tx(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 244 >> 2];
        }
        function Ux(a2) {
          a2 = a2 | 0;
          return c[a2 + 20 >> 2] | 0;
        }
        function Vx(a2) {
          a2 = a2 | 0;
          return +g[a2 + 4 >> 2] < 1 | 0;
        }
        function Wx(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 24 >> 2] = b2;
          return;
        }
        function Xx(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 20 >> 2] = b2;
          return;
        }
        function Yx(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 32 >> 2] = b2;
          return;
        }
        function Zx(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 12 >> 2] = b2;
          return;
        }
        function _x(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 28 >> 2] = b2;
          return;
        }
        function $x(a2) {
          a2 = a2 | 0;
          return c[a2 + 212 >> 2] | 0;
        }
        function ay(a2) {
          a2 = a2 | 0;
          c[a2 + 200 >> 2] = 0;
          return;
        }
        function by(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          return;
        }
        function cy(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 76 >> 2] = b2;
          return;
        }
        function dy(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = e2 | 0;
          W(0);
        }
        function ey(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 212 >> 2];
        }
        function fy(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 228 >> 2];
        }
        function gy(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 8 >> 2] = b2;
          return;
        }
        function hy(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 4 >> 2] = b2;
          return;
        }
        function iy(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 16 >> 2] = b2;
          return;
        }
        function jy(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          e2 = +e2;
          W(30);
        }
        function ky(a2, b2, c2, d2, e2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          d2 = d2 | 0;
          e2 = e2 | 0;
          W(23);
        }
        function ly(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 252 >> 2];
        }
        function my(a2) {
          a2 = a2 | 0;
          return c[a2 + 136 >> 2] | 0;
        }
        function ny(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 + 48 >> 2] = b2;
          return;
        }
        function oy(a2) {
          a2 = a2 | 0;
          return a2 + 156 | 0;
        }
        function py(a2) {
          a2 = a2 | 0;
          return c[a2 + 108 >> 2] | 0;
        }
        function qy(a2) {
          a2 = a2 | 0;
          return c[a2 + 128 >> 2] | 0;
        }
        function ry(a2) {
          a2 = a2 | 0;
          return c[a2 + 776 >> 2] | 0;
        }
        function sy(a2) {
          a2 = a2 | 0;
          return c[a2 + 772 >> 2] | 0;
        }
        function ty(a2) {
          a2 = a2 | 0;
          return a2 + 20 | 0;
        }
        function uy(a2) {
          a2 = a2 | 0;
          return a2 + 324 | 0;
        }
        function vy(a2) {
          a2 = a2 | 0;
          return c[a2 + 192 >> 2] | 0;
        }
        function wy(a2) {
          a2 = a2 | 0;
          return c[a2 + 204 >> 2] | 0;
        }
        function xy(a2) {
          a2 = a2 | 0;
          return c[a2 + 24 >> 2] | 0;
        }
        function yy(a2) {
          a2 = a2 | 0;
          return c[a2 + 68 >> 2] | 0;
        }
        function zy(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          W(35);
          return 0;
        }
        function Ay(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 232 >> 2];
        }
        function By(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          g[a2 >> 2] = b2;
          return;
        }
        function Cy(a2) {
          a2 = a2 | 0;
          return a2 + 100 | 0;
        }
        function Dy(a2) {
          a2 = a2 | 0;
          return 348;
        }
        function Ey(a2) {
          a2 = a2 | 0;
          return c[a2 + 12 >> 2] | 0;
        }
        function Fy(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          W(10);
          return 0;
        }
        function Gy(a2) {
          a2 = a2 | 0;
          return c[a2 + 520 >> 2] | 0;
        }
        function Hy(a2) {
          a2 = a2 | 0;
          qi(a2);
          Rc(a2);
          return;
        }
        function Iy(a2) {
          a2 = a2 | 0;
          So(a2);
          Rc(a2);
          return;
        }
        function Jy(a2) {
          a2 = a2 | 0;
          Jj(a2);
          Rc(a2);
          return;
        }
        function Ky(a2) {
          a2 = a2 | 0;
          return c[a2 + 252 >> 2] | 0;
        }
        function Ly(a2) {
          a2 = a2 | 0;
          return a2 + 348 | 0;
        }
        function My(a2) {
          a2 = a2 | 0;
          return c[a2 >> 2] | 0;
        }
        function Ny(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return ob[a2 & 127](b2 | 0) | 0;
        }
        function Oy(a2) {
          a2 = a2 | 0;
          return c[a2 + 260 >> 2] | 0;
        }
        function Py(a2) {
          a2 = a2 | 0;
          return a2 + 24 | 0;
        }
        function Qy(a2) {
          a2 = a2 | 0;
          return c[a2 + 1304 >> 2] | 0;
        }
        function Ry(a2) {
          a2 = a2 | 0;
          return a2 + 316 | 0;
        }
        function Sy(a2) {
          a2 = a2 | 0;
          return a2 + 300 | 0;
        }
        function Ty(a2) {
          a2 = a2 | 0;
          return a2 + 64 | 0;
        }
        function Uy(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 72 >> 2];
        }
        function Vy(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 64 >> 2];
        }
        function Wy(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 68 >> 2];
        }
        function Xy(a2) {
          a2 = a2 | 0;
          return c[a2 + 332 >> 2] | 0;
        }
        function Yy(a2) {
          a2 = a2 | 0;
          return a2 + 32 | 0;
        }
        function Zy(a2) {
          a2 = a2 | 0;
          if (a2 | 0)
            Rc(a2);
          return;
        }
        function _y(a2) {
          a2 = a2 | 0;
          return c[a2 + 84 >> 2] | 0;
        }
        function $y(a2) {
          a2 = a2 | 0;
          return c[a2 + 88 >> 2] | 0;
        }
        function az(a2) {
          a2 = a2 | 0;
          return c[a2 + 92 >> 2] | 0;
        }
        function bz(a2) {
          a2 = a2 | 0;
          return c[a2 + 96 >> 2] | 0;
        }
        function cz(a2) {
          a2 = a2 | 0;
          return 252;
        }
        function dz(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = c2 | 0;
          d2 = +d2;
          W(41);
          return 0;
        }
        function ez(a2) {
          a2 = a2 | 0;
          return a2 + 52 | 0;
        }
        function fz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 80 >> 2];
        }
        function gz(a2) {
          a2 = a2 | 0;
          return 28;
        }
        function hz(a2) {
          a2 = a2 | 0;
          return c[a2 + 100 >> 2] | 0;
        }
        function iz(a2) {
          a2 = a2 | 0;
          return c[a2 + 72 >> 2] | 0;
        }
        function jz(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return +Cb[a2 & 15](b2 | 0);
        }
        function kz(a2) {
          a2 = a2 | 0;
          return a2 + 40 | 0;
        }
        function lz(a2) {
          a2 = a2 | 0;
          return c[a2 + 16 >> 2] | 0;
        }
        function mz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 60 >> 2];
        }
        function nz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 52 >> 2];
        }
        function oz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 56 >> 2];
        }
        function pz(a2) {
          a2 = a2 | 0;
          return a2 + 112 | 0;
        }
        function qz(a2) {
          a2 = a2 | 0;
          return 212;
        }
        function rz(a2) {
          a2 = a2 | 0;
          return a2 + 92 | 0;
        }
        function sz(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return 1;
        }
        function tz(a2) {
          a2 = a2 | 0;
          return a2 + 368 | 0;
        }
        function uz(a2) {
          a2 = a2 | 0;
          return a2 + 28 | 0;
        }
        function vz(a2) {
          a2 = a2 | 0;
          return c[a2 + 300 >> 2] | 0;
        }
        function wz(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          i = a2;
          j = b2;
        }
        function xz(a2) {
          a2 = a2 | 0;
          return a2 + 352 | 0;
        }
        function yz(a2) {
          a2 = a2 | 0;
          return 204;
        }
        function zz(a2) {
          a2 = a2 | 0;
          return c[a2 + 748 >> 2] | 0;
        }
        function Az(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          return;
        }
        function Bz(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = d2 | 0;
          W(42);
        }
        function Cz(a2) {
          a2 = a2 | 0;
          return a2 + 68 | 0;
        }
        function Dz(a2) {
          a2 = a2 | 0;
          return a2 + 36 | 0;
        }
        function Ez(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 44 >> 2];
        }
        function Fz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 40 >> 2];
        }
        function Gz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 36 >> 2];
        }
        function Hz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 48 >> 2];
        }
        function Iz(a2) {
          a2 = a2 | 0;
          return 220;
        }
        function Jz(a2) {
          a2 = a2 | 0;
          return 264;
        }
        function Kz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 76 >> 2];
        }
        function Lz(a2) {
          a2 = a2 | 0;
          c[a2 >> 2] = 8076;
          return;
        }
        function Mz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 24 >> 2];
        }
        function Nz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 20 >> 2];
        }
        function Oz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 32 >> 2];
        }
        function Pz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 16 >> 2];
        }
        function Qz(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 28 >> 2];
        }
        function Rz(a2) {
          a2 = a2 | 0;
          return a2 + 16 | 0;
        }
        function Sz(a2) {
          a2 = a2 | 0;
          return 52;
        }
        function Tz(a2) {
          a2 = a2 | 0;
          return 68;
        }
        function Uz(a2) {
          a2 = a2 | 0;
          return 84;
        }
        function Vz(a2) {
          a2 = a2 | 0;
          return c[a2 + 4 >> 2] | 0;
        }
        function Wz(a2) {
          a2 = a2 | 0;
          return a2 + 908 | 0;
        }
        function Xz(a2) {
          a2 = a2 | 0;
          return a2 + 4 | 0;
        }
        function Yz(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          kb[a2 & 255](b2 | 0);
        }
        function Zz(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          d2 = +d2;
          W(37);
        }
        function _z(a2) {
          a2 = a2 | 0;
          return 24;
        }
        function $z(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          return;
        }
        function aA(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 12 >> 2];
        }
        function bA(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = c2 | 0;
          d2 = d2 | 0;
          W(9);
        }
        function cA(a2, b2, c2, d2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          d2 = d2 | 0;
          W(7);
        }
        function dA(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 8 >> 2];
        }
        function eA(a2) {
          a2 = a2 | 0;
          return + +g[a2 + 4 >> 2];
        }
        function fA(a2) {
          a2 = a2 | 0;
          oi(a2);
          return;
        }
        function gA(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          W(28);
          return 0;
        }
        function hA(a2) {
          a2 = a2 | 0;
          return a2 + 748 | 0;
        }
        function iA(a2) {
          a2 = a2 | 0;
          return 496;
        }
        function jA(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          W(16);
          return 0;
        }
        function kA(a2) {
          a2 = a2 | 0;
          Rc(a2 + -4 | 0);
          return;
        }
        function lA(a2) {
          a2 = a2 | 0;
          return 32;
        }
        function mA(a2) {
          a2 = a2 | 0;
          return a2 + 80 | 0;
        }
        function nA(a2) {
          a2 = a2 | 0;
          return 60;
        }
        function oA(a2) {
          a2 = a2 | 0;
          return 436;
        }
        function pA(a2) {
          a2 = a2 | 0;
          return a2 + 48 | 0;
        }
        function qA(a2) {
          a2 = a2 | 0;
          return a2 + 328 | 0;
        }
        function rA(a2) {
          a2 = a2 | 0;
          c[a2 >> 2] = 4276;
          return;
        }
        function sA(a2) {
          a2 = a2 | 0;
          return (a2 & 255) << 8 | a2 >> 8 & 255 | 0;
        }
        function tA(a2) {
          a2 = a2 | 0;
          return + +g[a2 >> 2];
        }
        function uA(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          W(19);
          return 0;
        }
        function vA(a2) {
          a2 = a2 | 0;
          return 10772;
        }
        function wA(a2) {
          a2 = a2 | 0;
          return 4;
        }
        function xA(a2) {
          a2 = a2 | 0;
          return 16668;
        }
        function yA(a2) {
          a2 = a2 | 0;
          return 16520;
        }
        function zA(a2) {
          a2 = a2 | 0;
          return 10710;
        }
        function AA(a2) {
          a2 = a2 | 0;
          return a2 | 0;
        }
        function BA(a2) {
          a2 = a2 | 0;
          return 15835;
        }
        function CA(a2) {
          a2 = a2 | 0;
          return a2 + 72 | 0;
        }
        function DA(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = c2 | 0;
          W(38);
        }
        function EA(a2) {
          a2 = a2 | 0;
          return a2 + 8 | 0;
        }
        function FA(a2) {
          a2 = a2 | 0;
          return 17256;
        }
        function GA(a2) {
          a2 = a2 | 0;
          return 0;
        }
        function HA(a2) {
          a2 = a2 | 0;
          return 17025;
        }
        function IA(a2) {
          a2 = a2 | 0;
          return 16424;
        }
        function JA(a2) {
          a2 = a2 | 0;
          return 1;
        }
        function KA(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          c2 = +c2;
          W(40);
        }
        function LA(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = c2 | 0;
          W(11);
        }
        function MA(a2) {
          a2 = a2 | 0;
          return 16639;
        }
        function NA(a2) {
          a2 = a2 | 0;
          return 16610;
        }
        function OA(a2) {
          a2 = a2 | 0;
          return 3;
        }
        function PA(a2) {
          a2 = a2 | 0;
          return 11500;
        }
        function QA(a2) {
          a2 = a2 | 0;
          return 16582;
        }
        function RA(a2) {
          a2 = a2 | 0;
          return 16281;
        }
        function SA(a2) {
          a2 = a2 | 0;
          return 16169;
        }
        function TA(a2) {
          a2 = a2 | 0;
          return 16142;
        }
        function UA(a2) {
          a2 = a2 | 0;
          return 16112;
        }
        function VA(a2) {
          a2 = a2 | 0;
          return 8;
        }
        function WA(a2) {
          a2 = a2 | 0;
          Rc(a2);
          return;
        }
        function XA(a2, b2, c2) {
          a2 = a2 | 0;
          b2 = +b2;
          c2 = +c2;
          W(15);
        }
        function YA(a2) {
          a2 = a2 | 0;
          return 16979;
        }
        function ZA(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          W(27);
          return 0;
        }
        function _A(a2) {
          a2 = a2 | 0;
          return 16360;
        }
        function $A(a2) {
          a2 = a2 | 0;
          return 16381;
        }
        function aB(a2) {
          a2 = a2 | 0;
          return 6;
        }
        function bB(a2) {
          a2 = a2 | 0;
          return 12;
        }
        function cB() {
          return 4;
        }
        function dB(a2) {
          a2 = a2 | 0;
          return 16341;
        }
        function eB(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          W(32);
          return 0;
        }
        function fB(a2) {
          a2 = a2 | 0;
          return 2;
        }
        function gB(a2) {
          a2 = a2 | 0;
          return 15660;
        }
        function hB(a2) {
          a2 = a2 | 0;
          Vb[a2 & 3]();
        }
        function iB() {
          return 2;
        }
        function jB() {
          return 1;
        }
        function kB() {
          return 5;
        }
        function lB() {
          return 3;
        }
        function mB() {
          return 0;
        }
        function nB() {
          eb();
        }
        function oB(a2, b2) {
          a2 = a2 | 0;
          b2 = b2 | 0;
          W(4);
        }
        function pB(a2) {
          a2 = a2 | 0;
          return;
        }
        function qB(a2) {
          a2 = a2 | 0;
          i = a2;
        }
        function rB(a2, b2) {
          a2 = a2 | 0;
          b2 = +b2;
          W(1);
        }
        function sB(a2) {
          a2 = a2 | 0;
          D = a2;
        }
        function tB(a2) {
          a2 = a2 | 0;
          W(20);
          return 0;
        }
        function uB(a2) {
          a2 = a2 | 0;
          W(6);
          return 0;
        }
        function vB() {
          return D | 0;
        }
        function wB() {
          return i | 0;
        }
        function xB(a2) {
          a2 = a2 | 0;
          W(2);
        }
        function yB() {
          W(39);
        }
        var ib = [dy, Jl, fp, $f, Od, Vd, zs, vg, Lf, Ld, uc, Of, hc, Cc, xc, Re, _b, Kc, pl, pi, bf, dy, dy, dy, dy, dy, dy, dy, dy, dy, dy, dy];
        var jb = [rB, Vm, iy, ny, cr, ld, dh, He, kg, Ho, gc, Qc, $z, ny, Qf, Wc, dd, zc, Ol, Ol, cy, Ol, ny, ej, rB, rB, rB, rB, rB, rB, rB, rB];
        var kb = [xB, pB, WA, pB, WA, pB, WA, pB, uu, pB, WA, hd, pt, pB, WA, pB, WA, pB, uu, WA, WA, pB, uu, WA, WA, Ej, Gu, pB, WA, WA, WA, WA, pB, WA, $j, ts, Ke, es, $b, cn, kh, nn, mf, Il, pB, WA, pB, WA, Vo, fq, Fn, Er, ur, pB, WA, pB, WA, Ep, Wo, gt, Os, Ko, Un, pB, WA, rA, ht, ie, ht, pB, ht, Dd, Om, ht, ht, Jc, ht, ye, ag, Ir, ay, ht, Dg, Bs, di, WA, gk, Bw, wl, Zl, qi, Hy, pB, WA, pj, Ss, pB, Ss, ep, rq, So, Iy, pB, WA, WA, WA, hk, rw, pB, WA, WA, _o, iq, WA, Uo, co, Jj, Jy, Bd, WA, WA, WA, WA, pB, WA, pB, WA, pB, kA, WA, WA, WA, WA, WA, WA, pB, WA, Xe, Tv, WA, WA, WA, WA, WA, WA, WA, WA, WA, WA, pB, WA, tl, Xl, kk, us, WA, ik, Pw, cq, qp, aq, np, pB, WA, Wo, kp, Eo, pB, WA, WA, WA, uu, uu, uu, km, Xs, bj, uu, uu, uu, tm, mm, Wo, pB, WA, uu, uu, uu, Lz, Us, fA, bt, WA, WA, Wo, uu, pB, uu, mi, at, pB, uu, WA, WA, pB, WA, WA, WA, pB, WA, WA, WA, WA, WA, WA, oi, bt, jq, zp, WA, Fi, sw, WA, $i, cv, WA, Xo, go, WA, Hp, xo, pB, WA, Fk, rx, WA, WA, WA, eq, tp, jk, qx, li, Qs, To, $n, pB, WA, pB, pB, WA, WA, kr, xB, xB, xB];
        var lb = [Fw];
        var mb = [oB, nf, Gk, Az, Gn, Vk, Az, yr, In, Ac, _d, vp, Az, Az, $v, mg, jg, Ll, Qj, Am, Lj, br, oh, Ji, Zo, cu, Vt, cu, Vt, Gc, ac, Az, fj, Az, nw, dw, Az, Az, Az, Rl, yk, Qk, _k, Xj, xv, Bq, xi, oo, Tk, fd, ze, Tf, yh, Ij, sc, $r, hf, vh, rc, Gp, Wh, Ur, Cn, Ri, ng, Jm, Az, Az, Az, gd, Xh, ks, Sr, Sr, nu, Zt, qf, zk, Yu, mn, vk, yq, xp, si, Az, Ak, fj, fj, Sk, xh, Nm, Hm, Sk, jr, Yd, kn, sl, js, hs, is, Kp, Yo, Sk, jr, Lq, md, kd, hr, Az, Az, Eh, Gh, Ng, fj, on, sq, Ym, rj, hj, fj, Az, Az, oB, oB, oB, oB, oB, oB];
        var nb = [Hs, mh, Ic, Hs];
        var ob = [uB, oA, fB, sr, zA, bB, Rz, vA, Sz, GA, lA, Mx, lz, xy, iz, Sx, $x, wA, GA, JA, Vz, Mx, PA, fB, OA, OA, JA, Nu, or, Cy, qz, Sz, cz, Qy, Dy, Iz, zz, Uz, Xy, JA, yz, vz, fB, iA, az, az, lz, lz, Xz, GA, JA, my, my, lz, lz, Xz, Mx, GA, Ey, Ws, yy, yy, Jz, gB, aB, VA, bB, aB, Ix, BA, nA, UA, nA, TA, SA, mA, RA, _z, dB, nA, _A, $A, IA, Tz, hz, hz, GA, gx, yA, GA, GA, GA, QA, nA, NA, MA, pz, xA, Uz, YA, CA, HA, Sz, xy, cx, gz, FA, lz, fr, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB, uB];
        var pb = [cA, Im, fk, sm, qo, Ti, cA, cA];
        var qb = [Qw];
        var rb = [bA];
        var sb = [Fy, en, No, jo, Rn, Ln, Uh, au, kf, ln, Gl, Bl, bo, ig, Xn, ap, Fm, Wl, Ql, Pi, Lc, kt, Pk, Fy, Fy, Fy, Fy, Fy, Fy, Fy, Fy, Fy];
        var tb = [LA, Og, _v, _v, ds, $l, ds, hl, Rj, Ui, cj, Dj, ds, Mo, ds, LA];
        var ub = [Nt, Fp];
        var vb = [Js];
        var wb = [Iw, ys, ys, ce, ys, ys, ys, ys, jf, Nr, de, Ef, ys, Iw, Iw, Iw];
        var xb = [XA, Td, og, vj, lf, gf, XA, XA];
        var yb = [jA, zn, dc, fo, ol, Ei, $o, Ih, ii, Zg, nj, of, $m, Rh, dg, Ew, Ew, df, Zj, eg, cm, Bp, Ue, ck, wg, cl, yf, el, ai, bl, xe, ql, xd, lg, xg, ti, Zm, Al, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA, jA];
        var zb = [xw];
        var Ab = [kw, Pd, zl, um, up, Bn, Si, kw];
        var Bb = [uA, Jh, Pm, Dx, Dx, uA, uA, uA];
        var Cb = [tB, vo, Pz, Hz, Hz, Kz, Up, Tp, Up, yx, tB, tB, tB, tB, tB, tB];
        var Db = [ov, Jd, pd, Zc];
        var Eb = [zv, lk, lk, zv];
        var Fb = [ky];
        var Gb = [Vu, _f, Lg, Vu];
        var Hb = [Bt, Fh];
        var Ib = [Rs, jm, jm, Rs];
        var Jb = [ZA, lq, pq, mq, Wn, sz, sz, Hu, Hu, wd, Zb, Tm, _n, gq, su, xn, zr, nl, hq, Fo, Ok, Bi, ZA, ZA, ZA, ZA, ZA, ZA, ZA, ZA, ZA, ZA];
        var Kb = [gA, xj, Qi, Ph, Em, Wk, Mm, Qn, Wj, ui, Dm, fm, lm, qg, Ag, gA];
        var Lb = [ws, ym, Nc, ws];
        var Mb = [jy, $s];
        var Nb = [ct, kc, Nl, ct];
        var Ob = [eB, Mt];
        var Pb = [Wr];
        var Qb = [Vw, ek, ek, Vw];
        var Rb = [zy, Oc];
        var Sb = [ft, od, Ff, ft];
        var Tb = [Zz, jc, Ou, Pe, Id, Qm, rm, Ou, Aj, pe, Zz, Zz, Zz, Zz, Zz, Zz];
        var Ub = [DA, by, Nn, by, wj, Gj, Mr, by, Fd, jd, Yi, Di, te, ot, ji, by, Yk, Yl, Ik, Pp, bi, ef, by, by, Ve, Hn, by, by, by, by, Bj, ci, so, mp, Co, Do, Pl, $t, _t, Ii, hi, af, hm, Sn, Dk, dm, dk, zh, _r, Ye, re, re, Ah, $h, nk, Yk, Yj, ho, Yk, _h, by, Uj, Sm, Um, Rm, nh, uk, Dr, rn, En, by, by, by, by, qd, by, by, by, by, Ci, sd, Zh, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA, DA];
        var Vb = [yB, nB, Sj, Pr];
        var Wb = [KA, ut, _q, jl, nc, Ys, KA, KA];
        var Xb = [dz, ei];
        var Yb = [Bz, Qe, Kv, Kv, Kv, Jf, vc, wf, Cr, rh, zf, Or, Bk, Aq, qs, Ek, Dc, fc, Af, rs, un, uj, un, yl, yo, Cg, Nf, se, Jr, qr, pg, xm, ml, oj, im, Rk, bk, th, Rd, Mh, Kg, uh, Or, ki, Lh, Ai, Nk, Kv, vi, Kv, Kv, ij, oj, vl, ll, ul, ri, yc, Wd, oe, Ig, Tl, wr, Qo, cg, Yc, _l, kj, yj, zf, Oe, bq, io, il, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz, Bz];
        return { _emscripten_bind_btCylinderShape___destroy___0: Kt, _emscripten_bind_btGeneric6DofConstraint_enableFeedback_1: Wv, _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3: as, _emscripten_bind_btHeightfieldTerrainShape_getMargin_0: $u, _emscripten_bind_btDispatcherInfo_set_m_useContinuous_1: Ev, _llvm_cttz_i32: Ip, _emscripten_bind_btCollisionObject_isActive_0: Bv, _emscripten_bind_btRotationalLimitMotor___destroy___0: Zy, _emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1: hy, _emscripten_bind_btVehicleTuning_set_m_frictionSlip_1: iy, _emscripten_bind_btRotationalLimitMotor_needApplyTorques_0: Gs, _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4: ao, _emscripten_bind_btCapsuleShapeX_getMargin_0: $u, _emscripten_bind_Node_set_m_n_1: hr, _emscripten_bind_btCompoundShape_getMargin_0: $u, _emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1: Wq, _emscripten_bind_btContactSolverInfo___destroy___0: Zy, _emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1: Fv, _emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0: Cz, _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0: wy, _emscripten_bind_btQuaternion_setX_1: By, _emscripten_bind_btCylinderShapeZ_getMargin_0: $u, _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0: aA, _emscripten_bind_btQuaternion_setZ_1: gy, _emscripten_bind_btCollisionObject_getUserIndex_0: Oy, _emscripten_bind_btCapsuleShapeZ_getMargin_0: $u, _emscripten_bind_btSoftBodyWorldInfo_set_water_density_1: hy, _emscripten_bind_btKinematicCharacterController_setMaxSlope_1: Lt, _emscripten_bind_btQuadWord_z_0: dA, _emscripten_bind_btSoftBody_setCcdMotionThreshold_1: mw, _emscripten_bind_Material___destroy___0: Zy, _emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0: aA, _emscripten_bind_btSoftBody_rotate_1: ak, _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0: kx, _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0: tx, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1: ju, _emscripten_bind_btSoftRigidDynamicsWorld___destroy___0: Kt, _emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1: tt, _emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0: Cz, _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0: zw, _emscripten_bind_btCollisionDispatcher___destroy___0: Kt, _emscripten_bind_btRigidBody_applyCentralImpulse_1: Mn, _emscripten_bind_btConvexHullShape_getMargin_0: $u, _emscripten_bind_btDefaultMotionState_getWorldTransform_1: Xt, _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1: Ms, _emscripten_bind_btRaycastVehicle_getNumWheels_0: qy, _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3: gs, _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2: bs, _emscripten_bind_btSoftRigidDynamicsWorld_addAction_1: cu, _emscripten_bind_btDynamicsWorld_rayTest_3: As, _emscripten_bind_Config_set_kSR_SPLT_CL_1: ox, _emscripten_bind_btQuadWord_x_0: tA, _emscripten_bind_Config_get_diterations_0: az, _emscripten_bind_btCollisionObject_isKinematicObject_0: Sw, _emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1: Ki, _emscripten_bind_ConvexResultCallback___destroy___0: Kt, _emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1: Eq, _emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1: Dq, _emscripten_bind_btSoftBody_isKinematicObject_0: Sw, _emscripten_bind_btRigidBody_getCenterOfMassTransform_0: Xz, _emscripten_bind_btGhostObject_isKinematicObject_0: Sw, _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5: Pj, _emscripten_bind_btCapsuleShape___destroy___0: Kt, _emscripten_bind_btCollisionObject_activate_1: pr, _emscripten_bind_btCollisionObject_activate_0: Rr, _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2: Ns, _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1: rt, _emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1: Zx, _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1: mk, _emscripten_bind_btVector3_setX_1: By, _emscripten_bind_btCollisionConfiguration___destroy___0: Kt, _emscripten_bind_btCapsuleShapeZ_setMargin_1: vu, _emscripten_bind_btHingeConstraint_enableFeedback_1: Wv, _emscripten_bind_btSphereShape___destroy___0: Kt, _emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1: Yt, _emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1: Vn, _emscripten_bind_btManifoldPoint_set_m_localPointB_1: Zq, _emscripten_bind_btVector3_setZ_1: gy, _emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0: tA, _emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1: Lu, _emscripten_bind_btTypedConstraint_enableFeedback_1: Wv, _emscripten_bind_btQuaternion_setValue_4: Gr, _emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1: dw, _emscripten_bind_btSoftBody_transform_1: fv, _emscripten_bind_LocalShapeInfo___destroy___0: Zy, _emscripten_bind_btSoftBody_appendAnchor_4: Kd, _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0: tA, _emscripten_bind_btPoint2PointConstraint_get_m_setting_0: Ly, _emscripten_bind_btQuadWord_setY_1: hy, _emscripten_bind_btRigidBody_setUserPointer_1: Gw, _emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1: jv, _emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0: Xz, _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3: Zr, _emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0: ch, _emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0: tk, _emscripten_bind_btCylinderShape_setMargin_1: vu, _emscripten_bind_btCollisionWorld___destroy___0: Kt, _emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0: Fx, _emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0: Py, _emscripten_bind_btBoxShape_btBoxShape_1: sh, _emscripten_bind_btPersistentManifold_getBody1_0: ry, _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1: dw, _emscripten_bind_RaycastInfo_set_m_isInContact_1: jw, _emscripten_bind_btKinematicCharacterController_setGravity_1: wm, _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5: lo, _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3: Jo, _emscripten_bind_btQuaternion_setY_1: hy, _emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1: Vt, _emscripten_bind_btWheelInfo_get_m_rollInfluence_0: Tx, _emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1: iy, _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1: Yt, _emscripten_bind_tNodeArray_size_0: Vz, _emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1: iy, _emscripten_bind_btRigidBody_getUserIndex_0: Oy, _emscripten_bind_btDynamicsWorld_getDispatchInfo_0: uz, _emscripten_bind_btCompoundShape_removeChildShapeByIndex_1: hu, _emscripten_bind_btSoftBody_appendFace_4: Fs, _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2: Ck, _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1: Mk, _emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1: Hq, _emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1: nv, _emscripten_bind_btQuaternion_setEuler_3: tn, _emscripten_bind_btBoxShape_getMargin_0: $u, _emscripten_bind_btPairCachingGhostObject___destroy___0: Kt, _emscripten_bind_btPairCachingGhostObject_setUserPointer_1: Gw, _emscripten_bind_btPairCachingGhostObject_activate_0: Rr, _emscripten_bind_btPairCachingGhostObject_activate_1: pr, _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0: wv, _emscripten_bind_btSoftBody_setUserPointer_1: Gw, _emscripten_bind_btDynamicsWorld_getDispatcher_0: xy, _emscripten_bind_btSoftBody_setMass_2: ns, _emscripten_bind_btConeShape_btConeShape_2: El, _emscripten_bind_btDynamicsWorld___destroy___0: Kt, _emscripten_bind_Config_get_kCHR_0: Gz, _emscripten_bind_btPairCachingGhostObject_forceActivationState_1: hw, _emscripten_bind_btDefaultMotionState___destroy___0: Kt, _emscripten_bind_btDispatcherInfo_get_m_stepCount_0: Vz, _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1: _u, _emscripten_bind_btQuadWord_setW_1: Zx, _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0: Tw, _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2: nm, _emscripten_bind_LocalShapeInfo_set_m_shapePart_1: Lw, _emscripten_bind_btRigidBody_setLinearFactor_1: bn, _emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1: zu, _emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1: Jt, _emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0: sx, _emscripten_bind_btWheelInfo_get_m_engineForce_0: ly, _emscripten_bind_Config_get_kSR_SPLT_CL_0: Vy, _emscripten_bind_btRaycastVehicle_setSteeringValue_2: lt, _emscripten_bind_btPoint2PointConstraint___destroy___0: Kt, _emscripten_bind_btSoftBody_getUserPointer_0: Ky, _emscripten_bind_btCollisionShape_setMargin_1: vu, _emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1: Pn, _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2: Ns, _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1: rt, _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1: Du, _emscripten_bind_Config_get_kVCF_0: eA, _emscripten_bind_btKinematicCharacterController_setJumpSpeed_1: fu, _malloc: ic, _emscripten_bind_btDispatcherInfo_get_m_useEpa_0: vx, _emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1: kv, _emscripten_bind_btTransform_btTransform_2: fn, _emscripten_bind_btTransform_btTransform_0: Zp, _emscripten_bind_btPairCachingGhostObject_getUserIndex_0: Oy, _emscripten_bind_Config_set_kVC_1: Wx, _emscripten_bind_btVector3_op_sub_1: Uq, _emscripten_bind_btWheelInfo_set_m_wheelsRadius_1: tw, _emscripten_bind_btDispatcherInfo_set_m_enableSPU_1: Zv, _emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1: sv, _emscripten_bind_btSoftBody_appendNode_2: Sc, _emscripten_bind_btCollisionObject_setActivationState_1: qt, _emscripten_bind_btPersistentManifold___destroy___0: uu, _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0: dA, _emscripten_bind_btCylinderShapeZ___destroy___0: Kt, _emscripten_bind_btMatrix3x3___destroy___0: Zy, _emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1: Gt, _emscripten_bind_ConvexResultCallback_hasHit_0: Vx, _emscripten_bind_btCollisionShape_calculateLocalInertia_2: _s, _emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1: iy, _emscripten_bind_Config_set_kPR_1: Xx, _emscripten_bind_btCollisionWorld_convexSweepTest_5: Oq, _emscripten_bind_btVector3_length_0: Tr, _emscripten_bind_btSoftBody_set_m_materials_1: Mi, _emscripten_enum_PHY_ScalarType_PHY_UCHAR: kB, _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1: $q, _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2: _s, _emscripten_bind_btConstraintSetting_set_m_damping_1: hy, _emscripten_bind_btVehicleRaycaster___destroy___0: Kt, _emscripten_bind_btSoftBody_set_m_cfg_1: Vh, _emscripten_bind_btRigidBody_setCcdMotionThreshold_1: mw, _emscripten_bind_btConvexHullShape_setMargin_1: vu, _emscripten_bind_btRigidBody_applyForce_2: Lk, _emscripten_bind_btConeShapeZ_calculateLocalInertia_2: _s, _emscripten_bind_btConstraintSetting_set_m_tau_1: By, _emscripten_bind_btConvexHullShape_calculateLocalInertia_2: _s, ___uremdi3: er, _emscripten_bind_RaycastInfo_get_m_contactPointWS_0: Rz, _emscripten_bind_btSoftBody_setCollisionFlags_1: vw, _emscripten_bind_btSphereShape_calculateLocalInertia_2: _s, _emscripten_bind_btSoftBody_appendMaterial_0: Xw, _emscripten_bind_btVector4_normalize_0: Yp, _emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0: sk, _emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1: st, _emscripten_bind_btSoftBody_setTotalMass_2: fh, _emscripten_bind_LocalConvexResult_LocalConvexResult_5: Ul, _emscripten_bind_btGhostObject_setFriction_1: Ot, _emscripten_bind_btCollisionWorld_rayTest_3: As, _emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1: fw, _emscripten_bind_btCylinderShapeZ_setMargin_1: vu, _emscripten_bind_btRigidBody_setFriction_1: Ot, _emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1: Sq, _emscripten_bind_btGhostObject_setWorldTransform_1: Xk, _emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1: Gt, _emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0: dA, _emscripten_bind_btManifoldPoint_getAppliedImpulse_0: Jx, _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1: wt, _emscripten_bind_btConvexHullShape___destroy___0: Kt, _emscripten_bind_RaycastInfo_set_m_suspensionLength_1: Yx, _emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0: yy, _emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0: oy, _emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0: Ex, _emscripten_bind_btKinematicCharacterController_jump_0: Hr, _emscripten_bind_btCollisionObject_getUserPointer_0: Ky, _emscripten_bind_btWheelInfo_set_m_raycastInfo_1: Ar, _emscripten_bind_btSoftBody_generateClusters_1: Ju, _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1: Wt, _emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1: Yt, _emscripten_bind_btRigidBody_upcast_1: pv, _emscripten_bind_btCollisionObject_getWorldTransform_0: Xz, _emscripten_bind_btVector4_setZ_1: gy, _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1: Pq, ___cxa_can_catch: Xp, _emscripten_bind_btTransform_getBasis_0: AA, _emscripten_bind_btPairCachingGhostObject_setFriction_1: Ot, _emscripten_bind_Config_set_kSRHR_CL_1: Bx, _emscripten_bind_btCollisionDispatcher_getNumManifolds_0: Mu, _emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1: Vv, _emscripten_bind_ClosestRayResultCallback___destroy___0: Kt, _emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2: du, _emscripten_bind_btCylinderShapeX_setMargin_1: vu, _emscripten_bind_btQuadWord_w_0: aA, _emscripten_bind_Node___destroy___0: Zy, _emscripten_bind_btDynamicsWorld_contactTest_2: _m, _emscripten_bind_btDiscreteDynamicsWorld_contactTest_2: _m, _emscripten_bind_btKinematicCharacterController_setUp_1: Zk, _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2: _s, _emscripten_bind_btTransform_setOrigin_1: dr, _emscripten_bind_btCompoundShape_getNumChildShapes_0: Ux, _emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1: Pv, _emscripten_bind_btGhostObject_btGhostObject_0: Th, _emscripten_bind_tNodeArray___destroy___0: yp, _emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2: Hl, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1: wu, _emscripten_bind_btManifoldPoint_set_m_localPointA_1: gr, _emscripten_bind_LocalConvexResult___destroy___0: Zy, _emscripten_bind_btVector3_dot_1: ss, _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0: aA, _emscripten_bind_btVector4_op_add_1: Vq, _emscripten_bind_btWheelInfo___destroy___0: Zy, _emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0: uy, _emscripten_bind_btTransform_setRotation_1: Pu, _emscripten_bind_Config_set_kSHR_1: Ox, _emscripten_bind_btPoint2PointConstraint_enableFeedback_1: Wv, _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1: lv, _emscripten_bind_btAxisSweep3_btAxisSweep3_2: lp, _emscripten_bind_btAxisSweep3_btAxisSweep3_3: Po, _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1: gy, _emscripten_bind_btVector3_setY_1: hy, _emscripten_bind_btAxisSweep3_btAxisSweep3_4: Bo, _emscripten_bind_btAxisSweep3_btAxisSweep3_5: ro, _emscripten_bind_btQuadWord_setX_1: By, _emscripten_bind_tMaterialArray___destroy___0: yp, _emscripten_bind_btSoftBodyHelpers_CreateRope_5: wh, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0: Tu, _emscripten_bind_Config_set_piterations_1: _w, _emscripten_bind_btOverlappingPairCache___destroy___0: Kt, _emscripten_bind_btRigidBody_setUserIndex_1: Ow, _emscripten_bind_Material_get_m_kAST_0: dA, _emscripten_bind_btConstraintSetting___destroy___0: Zy, _emscripten_bind_RayResultCallback___destroy___0: Kt, _emscripten_bind_RaycastInfo_get_m_contactNormalWS_0: AA, _emscripten_bind_btSoftBodyWorldInfo_get_water_density_0: eA, _emscripten_bind_btPersistentManifold_getBody0_0: sy, _emscripten_bind_btConeShapeX_btConeShapeX_2: Dl, _emscripten_bind_btQuaternion_z_0: dA, _emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1: fw, _emscripten_bind_btConeTwistConstraint_enableFeedback_1: Wv, _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0: Cm, _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1: Yt, _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0: eA, _emscripten_bind_btSoftBody_translate_1: am, _emscripten_bind_btSliderConstraint_setUpperLinLimit_1: bw, _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2: Fg, _emscripten_bind_btVector3_op_mul_1: Kr, _emscripten_bind_btConcaveShape___destroy___0: Kt, _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4: hg, _emscripten_bind_btQuaternion_x_0: tA, _emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5: $e, _emscripten_bind_Config_set_timescale_1: xx, _emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1: lr, _emscripten_bind_btConcaveShape_setLocalScaling_1: Yt, _emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0: uz, _emscripten_bind_btConeShapeX_setLocalScaling_1: Yt, _emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1: Xx, _emscripten_bind_btSoftBody_appendLink_4: Es, _emscripten_bind_btCylinderShapeZ_setLocalScaling_1: Yt, _emscripten_bind_btConvexHullShape_btConvexHullShape_0: xq, _emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1: Zx, _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1: nv, _emscripten_bind_btSoftBody_getTotalMass_0: Io, _emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1: jt, _emscripten_bind_Config_get_kLF_0: Pz, _emscripten_bind_btGhostObject___destroy___0: Kt, _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2: xs, _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1: Zs, _emscripten_bind_btGhostObject_setContactProcessingThreshold_1: cw, _emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4: mr, _emscripten_bind_btCollisionWorld_getBroadphase_0: yy, _emscripten_bind_btRaycastVehicle_updateWheelTransform_2: Lr, _emscripten_bind_btQuaternion___destroy___0: Zy, _emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2: _s, _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2: sg, _emscripten_bind_Material_set_m_flags_1: mx, _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0: $g, _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1: zg, _emscripten_bind_Config_get_viterations_0: _y, _emscripten_bind_btKinematicCharacterController_canJump_0: tu, _emscripten_bind_btSoftBodyArray_at_1: ev, _emscripten_bind_btVector4_length_0: Tr, _emscripten_bind_btPairCachingGhostObject_setUserIndex_1: Ow, _emscripten_bind_btRigidBody_isActive_0: Bv, _emscripten_bind_btRaycastVehicle_btRaycastVehicle_3: rk, _emscripten_bind_btMotionState_setWorldTransform_1: Pt, _emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0: xy, _emscripten_bind_btCylinderShape_setLocalScaling_1: Yt, _emscripten_bind_btPairCachingGhostObject_getWorldTransform_0: Xz, _emscripten_bind_btCompoundShape_calculateLocalInertia_2: _s, _emscripten_bind_btCollisionWorld_getDispatchInfo_0: uz, _emscripten_enum_PHY_ScalarType_PHY_DOUBLE: jB, _emscripten_bind_btRigidBody_setCollisionShape_1: Xt, _emscripten_bind_btSoftBody_appendTetra_5: Cf, _emscripten_bind_btConeShapeX___destroy___0: Kt, _emscripten_bind_btCollisionObject_getCollisionFlags_0: wy, _emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1: vv, _emscripten_bind_btConeTwistConstraint_enableMotor_1: Mv, _emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1: Jq, _emscripten_bind_btSoftBody_checkLink_2: Vl, _emscripten_bind_btRaycastVehicle_setCoordinateSystem_3: Xr, _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4: Zn, _emscripten_bind_btVector3_normalize_0: Yp, _emscripten_bind_btPairCachingGhostObject_setRestitution_1: It, _emscripten_bind_Config_set_kAHR_1: ny, _emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1: kv, _emscripten_bind_btBroadphaseInterface___destroy___0: Kt, _emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3: As, _emscripten_bind_Config_get_kSRHR_CL_0: nz, _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0: Pz, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1: Fu, _emscripten_bind_btCollisionObject_setContactProcessingThreshold_1: cw, _emscripten_bind_btCompoundShape___destroy___0: Kt, _emscripten_bind_btHingeConstraint_setMotorTarget_2: Vj, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0: hv, _emscripten_bind_btCapsuleShapeX_setMargin_1: vu, _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0: Kt, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1: mu, _emscripten_bind_btRigidBody_getCollisionFlags_0: wy, _emscripten_bind_btCollisionShape_setLocalScaling_1: Yt, _emscripten_bind_Config_get_piterations_0: $y, _emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0: My, _emscripten_bind_btMatrix3x3_setEulerZYX_3: qm, _emscripten_bind_btRigidBody_setRollingFriction_1: yt, _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0: Gz, _emscripten_bind_btRigidBody_getUserPointer_0: Ky, _emscripten_bind_Config_get_kSHR_0: Ez, _emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2: _s, _emscripten_bind_btRigidBody_setMotionState_1: Br, _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0: Yw, _emscripten_bind_btCollisionWorld_getDispatcher_0: xy, _emscripten_bind_btVector4_dot_1: ss, _emscripten_bind_btCollisionObject_setRollingFriction_1: yt, _emscripten_bind_Config_set_kSK_SPLT_CL_1: px, _emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1: lv, _emscripten_bind_btTriangleMesh_btTriangleMesh_1: vq, _i64Subtract: Ds, _emscripten_bind_btCylinderShapeX_getMargin_0: $u, _emscripten_bind_btRigidBody_setDamping_2: An, _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0: Uw, _emscripten_bind_btGhostObject_setCollisionFlags_1: vw, _emscripten_bind_btMatrix3x3_getRotation_1: Qu, _emscripten_bind_btWheelInfo_set_m_engineForce_1: yw, _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1: pu, _emscripten_bind_btPersistentManifold_getNumContacts_0: Gx, _emscripten_bind_btCylinderShapeX_setLocalScaling_1: Yt, _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0: Wp, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0: uv, _emscripten_bind_btCompoundShape_setLocalScaling_1: Yt, _emscripten_bind_btOverlappingPairCallback___destroy___0: Kt, _emscripten_bind_btDynamicsWorld_convexSweepTest_5: Oq, _emscripten_bind_btCylinderShape_calculateLocalInertia_2: _s, _emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1: fw, _emscripten_bind_btRigidBody_getCollisionShape_0: vy, _emscripten_bind_btRigidBody_setContactProcessingThreshold_1: cw, _emscripten_bind_btRigidBody_getLinearVelocity_0: xz, _emscripten_bind_btRigidBody_applyImpulse_2: Ut, _emscripten_bind_btConcaveShape_calculateLocalInertia_2: _s, _emscripten_bind_RaycastInfo_get_m_groundObject_0: $y, _emscripten_bind_btRigidBody_setWorldTransform_1: Xk, _emscripten_bind_btRigidBody_setAngularVelocity_1: Op, _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3: _j, _emscripten_bind_Config_get_kDP_0: dA, _emscripten_bind_btConvexShape_setLocalScaling_1: Yt, _emscripten_bind_Config_get_collisions_0: hz, _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2: _s, _emscripten_bind_btVector4_setX_1: By, _emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0: em, _emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1: Kl, _emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1: cw, _emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1: Eq, _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0: Yw, _emscripten_bind_RayResultCallback_hasHit_0: Nx, _emscripten_bind_btSoftBody_isActive_0: Bv, _bitshift64Shl: cs, _emscripten_bind_Config___destroy___0: Hk, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0: Su, _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0: dA, _emscripten_bind_btRaycastVehicle_getWheelTransformWS_1: yu, _emscripten_bind_btQuaternion_normalize_0: Ao, _emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0: uz, _emscripten_bind_btQuadWord_setZ_1: gy, _emscripten_bind_btConeShapeZ_setLocalScaling_1: Yt, _emscripten_bind_Config_get_kPR_0: Nz, _emscripten_bind_btGeneric6DofSpringConstraint___destroy___0: Kt, _emscripten_bind_btConvexTriangleMeshShape___destroy___0: Kt, _emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1: Zx, _emscripten_bind_Material_set_m_kAST_1: gy, _emscripten_bind_btGhostObject_setRollingFriction_1: yt, _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1: op, ___muldi3: rr, _emscripten_bind_btRigidBody_getAngularVelocity_0: tz, _emscripten_bind_btCompoundShape_btCompoundShape_0: Gq, _emscripten_bind_btCompoundShape_btCompoundShape_1: uq, _emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1: tt, _emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2: Uk, _emscripten_bind_btSphereShape_getMargin_0: $u, _emscripten_bind_btCollisionObject_setAnisotropicFriction_2: ko, _emscripten_bind_btHingeConstraint_setAngularOnly_1: Rv, _emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2: _m, _emscripten_bind_Config_get_kDG_0: aA, _emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2: ko, _emscripten_bind_Node_get_m_x_0: EA, _emscripten_bind_btSoftBodyArray_size_0: Vz, _emscripten_bind_ClosestRayResultCallback_hasHit_0: Nx, _emscripten_bind_btCompoundShape_addChildShape_2: Ed, _emscripten_bind_btDispatcher___destroy___0: Kt, _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0: eA, _emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1: By, _llvm_bswap_i16: sA, _emscripten_bind_btDiscreteDynamicsWorld___destroy___0: Kt, _emscripten_bind_btConvexShape___destroy___0: Kt, _memmove: rp, _emscripten_bind_btWheelInfo_set_m_worldTransform_1: dl, _emscripten_bind_btCapsuleShapeX_setLocalScaling_1: Yt, _emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1: vw, _emscripten_bind_btSoftBody_getCollisionFlags_0: wy, _emscripten_enum_PHY_ScalarType_PHY_INTEGER: iB, _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1: no, _emscripten_bind_btCollisionObject_setRestitution_1: It, _emscripten_bind_btRigidBody_applyCentralForce_1: wo, _emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1: Xq, _emscripten_bind_LocalConvexResult_get_m_hitFraction_0: Fz, _emscripten_bind_btDispatcherInfo_get_m_enableSPU_0: fx, _emscripten_bind_btQuaternion_w_0: aA, _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0: Nw, _emscripten_bind_btTransform_getRotation_0: Lo, _emscripten_bind_Config_set_kSKHR_CL_1: Cx, _emscripten_bind_btHingeConstraint_btHingeConstraint_6: eo, _emscripten_bind_btHingeConstraint_btHingeConstraint_7: On, _emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0: EA, _emscripten_bind_btHingeConstraint_btHingeConstraint_5: bg, _emscripten_bind_btHingeConstraint_btHingeConstraint_2: wp, _emscripten_bind_btHingeConstraint_btHingeConstraint_3: bp, _emscripten_bind_RaycastInfo___destroy___0: Zy, _emscripten_bind_btSoftBody_setWorldTransform_1: Xk, _emscripten_bind_btBoxShape_setMargin_1: vu, _emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0: Kx, _emscripten_bind_btVector4_y_0: eA, _emscripten_bind_Config_get_kSK_SPLT_CL_0: Wy, _emscripten_bind_btTypedConstraint___destroy___0: Kt, _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1: pp, _emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1: Pn, _emscripten_bind_btConeTwistConstraint_setDamping_1: ow, _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1: Et, _emscripten_bind_Config_set_collisions_1: ax, _emscripten_bind_btQuaternion_btQuaternion_4: cp, _emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0: yy, _emscripten_bind_btSoftBody_getCollisionShape_0: vy, _emscripten_bind_btSphereShape_btSphereShape_1: an, _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0: jx, _emscripten_bind_btQuaternion_y_0: eA, _emscripten_bind_btCollisionWorld_addCollisionObject_1: nt, _emscripten_bind_btCollisionWorld_addCollisionObject_2: Ls, _emscripten_bind_btCollisionWorld_addCollisionObject_3: as, _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1: bv, _emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1: iy, _emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4: Vg, _emscripten_bind_RaycastInfo_get_m_isInContact_0: wx, _emscripten_bind_Config_set_kKHR_1: Px, _emscripten_bind_btHeightfieldTerrainShape_setMargin_1: vu, _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0: Nw, _emscripten_bind_btCapsuleShape_setMargin_1: vu, _emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1: Dp, _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7: wq, _emscripten_bind_btCollisionObject_setUserPointer_1: Gw, _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0: mj, _emscripten_bind_btActionInterface___destroy___0: Kt, _emscripten_bind_btSoftBody_generateClusters_2: eu, _emscripten_bind_btDefaultMotionState_setWorldTransform_1: Pt, _emscripten_bind_btCollisionWorld_contactTest_2: _m, _emscripten_bind_RayResultCallback_get_m_collisionObject_0: Mx, _emscripten_bind_btPoint2PointConstraint_getPivotInA_0: Sy, _emscripten_bind_Config_get_kAHR_0: Hz, _emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0: Hx, _emscripten_bind_btVector4_setY_1: hy, _emscripten_bind_btCompoundShape_setMargin_1: vu, _emscripten_bind_btGhostObject_setRestitution_1: It, _emscripten_bind_btDynamicsWorld_addCollisionObject_1: nt, _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0: Mw, _emscripten_bind_btDynamicsWorld_addCollisionObject_3: as, _emscripten_bind_btDynamicsWorld_addCollisionObject_2: Ls, _emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0: to, _emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0: xy, _emscripten_bind_btSoftBody_scale_1: Ie, _emscripten_bind_btHeightfieldTerrainShape___destroy___0: Kt, _emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0: Yy, _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0: lx, _emscripten_bind_Config_get_kVC_0: Mz, _emscripten_bind_btVector4_op_mul_1: Kr, _emscripten_bind_btCylinderShape_btCylinderShape_1: kq, _emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1: Nv, _emscripten_bind_Material_get_m_kVST_0: aA, _emscripten_bind_Config_set_kVCF_1: hy, _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3: gs, _emscripten_bind_btGhostObject_getUserIndex_0: Oy, _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1: Ms, _emscripten_bind_btSoftBody_setRestitution_1: It, _emscripten_bind_btVector3___destroy___0: uu, _bitshift64Lshr: ps, _emscripten_bind_btRigidBody_setAngularFactor_1: Sp, _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2: _s, _emscripten_bind_btWheelInfo_set_m_steering_1: Jw, _emscripten_bind_btMotionState_getWorldTransform_1: Xt, _emscripten_bind_btDynamicsWorld_getSolverInfo_0: wk, _emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0: ww, _emscripten_bind_Config_get_kMT_0: Oz, _emscripten_bind_btDynamicsWorld_getBroadphase_0: yy, _emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1: Qx, _emscripten_bind_Config_get_timescale_0: fz, _emscripten_bind_btVector3_x_0: tA, ___cxa_is_pointer_type: Cu, _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3: Wi, _emscripten_bind_btCollisionObject_getCollisionShape_0: vy, _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4: Li, _emscripten_bind_btManifoldPoint___destroy___0: Zy, _emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1: Xu, _emscripten_bind_btVector3_z_0: dA, _emscripten_bind_btGhostObject_setUserIndex_1: Ow, _emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1: fl, _emscripten_bind_ClosestConvexResultCallback___destroy___0: Kt, _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0: Zy, _emscripten_bind_btCollisionObject_setFriction_1: Ot, _emscripten_bind_btQuadWord_y_0: eA, _emscripten_bind_btDefaultCollisionConfiguration___destroy___0: Kt, _emscripten_bind_btRigidBody_setMassProps_2: Nj, _emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1: mv, _emscripten_bind_btVector3_setValue_3: fs, _emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1: mw, _emscripten_bind_RaycastInfo_get_m_suspensionLength_0: Oz, _emscripten_bind_btGhostObject_getCollisionFlags_0: wy, _emscripten_bind_btCapsuleShapeX___destroy___0: Kt, _emscripten_bind_Config_set_kDG_1: Zx, _emscripten_bind_btRigidBody_setActivationState_1: qt, _emscripten_bind_btRigidBody_updateInertiaTensor_0: Hj, _emscripten_bind_btHingeConstraint_setLimit_4: Dn, _emscripten_bind_btHingeConstraint_setLimit_5: vn, _emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0: Sl, _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0: Ww, _emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1: Hv, _emscripten_bind_btConeShape_setLocalScaling_1: Yt, _emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1: iy, _emscripten_bind_Config_get_citerations_0: bz, _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0: Pz, _emscripten_bind_btGhostObject_getCollisionShape_0: vy, _emscripten_bind_Config_get_kSSHR_CL_0: mz, _emscripten_bind_btBoxShape___destroy___0: Kt, _emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0: ex, _emscripten_bind_btPersistentManifold_getContactPoint_1: Qv, _emscripten_bind_btVector3_btVector3_0: nr, _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0: Pz, _emscripten_bind_btConeShapeX_calculateLocalInertia_2: _s, _emscripten_bind_RaycastInfo_set_m_groundObject_1: _w, _emscripten_bind_btGhostObject_activate_1: pr, _emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2: Kq, _emscripten_bind_btManifoldPoint_getPositionWorldOnB_0: Yy, _emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0: pA, _emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0: sn, _emscripten_bind_btSphereShape_setMargin_1: vu, _emscripten_bind_btSoftBody_get_m_cfg_0: qA, _emscripten_bind_btCollisionObject_setUserIndex_1: Ow, _emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1: ou, _emscripten_bind_btSliderConstraint_setUpperAngLimit_1: nq, _emscripten_bind_btDynamicsWorld_contactPairTest_3: xr, _emscripten_bind_btCollisionWorld_getPairCache_0: vt, _emscripten_bind_btConeTwistConstraint_setMotorTarget_1: fi, _emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1: Cq, _emscripten_bind_btWheelInfo_set_m_rollInfluence_1: qw, _emscripten_bind_btRigidBody_getWorldTransform_0: Xz, _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0: Yn, _emscripten_bind_btGhostObject_forceActivationState_1: hw, _emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5: le, _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0: ip, _emscripten_bind_VoidPtr___destroy___0: Zy, _emscripten_bind_btSliderConstraint_setLowerAngLimit_1: oq, _emscripten_bind_btSoftBody_get_m_materials_0: Wz, _emscripten_bind_btRotationalLimitMotor_isLimited_0: Xv, _emscripten_bind_RaycastInfo_set_m_contactPointWS_1: Zq, _emscripten_bind_RayResultCallback_set_m_collisionObject_1: dw, _emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0: ty, _emscripten_bind_btSoftBody_setContactProcessingThreshold_1: cw, _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0: ux, _emscripten_bind_Config_get_kDF_0: Qz, _emscripten_bind_btWheelInfo_get_m_steering_0: Ay, _emscripten_bind_btConstraintSetting_get_m_tau_0: tA, _emscripten_bind_btSliderConstraint___destroy___0: Kt, _emscripten_bind_btCollisionObject_setCollisionShape_1: Xt, _emscripten_bind_btCollisionShape___destroy___0: Kt, _emscripten_bind_btMatrix3x3_getRow_1: _p, _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0: eA, _emscripten_bind_btTriangleMesh_addTriangle_4: jn, _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0: Mx, _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0: sx, _emscripten_bind_btSoftBody_getUserIndex_0: Oy, _emscripten_bind_btPairCachingGhostObject_setCollisionShape_1: Xt, _emscripten_bind_btKinematicCharacterController_warp_1: Ft, _emscripten_bind_btAxisSweep3___destroy___0: Kt, _emscripten_bind_btSoftBody_getWorldTransform_0: Xz, ___muldsi3: sp, _emscripten_bind_btTriangleMesh___destroy___0: Kt, _emscripten_bind_btKinematicCharacterController_preStep_1: zt, _emscripten_bind_btRaycastVehicle_applyEngineForce_2: mt, _emscripten_bind_btRaycastVehicle_setBrake_2: Dt, _emscripten_bind_ConcreteContactResultCallback___destroy___0: Kt, _emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1: $q, _emscripten_bind_btCollisionObject___destroy___0: Kt, _emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1: gy, _emscripten_bind_btRigidBody_applyTorqueImpulse_1: bm, _emscripten_bind_btTriangleMeshShape_setLocalScaling_1: Yt, _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1: Eu, _emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1: Is, _emscripten_bind_btDispatcherInfo_set_m_timeStep_1: By, _emscripten_bind_btVector3_btVector3_3: Jp, _emscripten_bind_RaycastInfo_set_m_contactNormalWS_1: gr, _emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1: tv, _emscripten_bind_btDiscreteDynamicsWorld_getGravity_0: uo, _emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0: Rx, _emscripten_bind_btCollisionShape_getMargin_0: $u, _emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1: gy, _emscripten_bind_btRigidBody_isKinematicObject_0: Sw, _emscripten_bind_RaycastInfo_get_m_hardPointWS_0: Dz, _emscripten_bind_btConeTwistConstraint___destroy___0: Kt, _emscripten_bind_btQuadWord___destroy___0: Zy, _emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3: xr, _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1: Nq, _emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2: gu, _emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0: ez, _emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0: ez, _emscripten_bind_btSoftBody_setUserIndex_1: Ow, _emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1: iy, _emscripten_bind_btSoftBody_setCollisionShape_1: Xt, _emscripten_bind_btGhostObject_setAnisotropicFriction_2: ko, _emscripten_bind_btConstraintSolver___destroy___0: Kt, _emscripten_bind_btDbvtBroadphase___destroy___0: Kt, _emscripten_bind_btCapsuleShape_btCapsuleShape_2: pm, _emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0: aA, _emscripten_bind_btSoftBody_setRollingFriction_1: yt, _emscripten_bind_btGhostObject_activate_0: Rr, _emscripten_bind_btCapsuleShape_setLocalScaling_1: Yt, _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0: Jv, _emscripten_bind_btRigidBody_setAnisotropicFriction_2: ko, _emscripten_bind_btSoftBody_btSoftBody_4: Ro, _emscripten_bind_btSoftBody_activate_0: Rr, _emscripten_bind_btSoftBodyWorldInfo_set_air_density_1: By, _emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1: hy, _emscripten_bind_btVector3_op_add_1: Vq, _emscripten_bind_btPersistentManifold_btPersistentManifold_0: kl, _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0: Mw, _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2: xl, _emscripten_bind_btVector4___destroy___0: uu, _emscripten_bind_btPairCachingGhostObject_isKinematicObject_0: Sw, _emscripten_bind_btConstraintSetting_get_m_damping_0: eA, _emscripten_bind_tNodeArray_at_1: ew, _i64Add: Ct, _emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1: qv, _emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10: Sd, _emscripten_bind_btCollisionObject_setCcdMotionThreshold_1: mw, _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0: Km, _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1: Go, _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3: Gm, _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0: Dv, _emscripten_bind_btPoint2PointConstraint_getPivotInB_0: Ry, _emscripten_bind_btKinematicCharacterController_playerStep_2: Ps, _emscripten_bind_btDispatcherInfo___destroy___0: Zy, _emscripten_bind_btCapsuleShape_getMargin_0: $u, _emscripten_bind_btCylinderShape_getMargin_0: $u, _emscripten_bind_btStaticPlaneShape_setLocalScaling_1: Yt, _emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2: _s, _emscripten_bind_btVector4_setValue_4: Gr, _emscripten_bind_ContactResultCallback_addSingleResult_7: wq, _emscripten_bind_btGhostObject_getWorldTransform_0: Xz, _emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0: vt, _emscripten_bind_LocalConvexResult_set_m_hitFraction_1: Px, _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2: _s, _emscripten_bind_btDispatcherInfo_get_m_timeStep_0: tA, _emscripten_bind_btConvexTriangleMeshShape_setMargin_1: vu, _emscripten_bind_btWheelInfo_get_m_frictionSlip_0: fy, _emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1: hy, _emscripten_bind_btBoxShape_calculateLocalInertia_2: _s, _emscripten_bind_btMotionState___destroy___0: Kt, _emscripten_bind_btCollisionObject_setCollisionFlags_1: vw, _emscripten_bind_btPairCachingGhostObject_setActivationState_1: qt, _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1: Zs, _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2: xs, _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3: as, _emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1: Wv, _emscripten_bind_Config_set_kSSHR_CL_1: Ax, _emscripten_bind_btDispatcher_getManifoldByIndexInternal_1: st, _emscripten_bind_btVector4_op_sub_1: Uq, _emscripten_bind_btSoftBodyWorldInfo___destroy___0: jp, _emscripten_bind_btConvexTriangleMeshShape_getMargin_0: $u, _emscripten_bind_btSoftBodySolver___destroy___0: Kt, _emscripten_bind_Node_get_m_n_0: CA, _emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1: nw, _emscripten_bind_btPairCachingGhostObject_setWorldTransform_1: Xk, _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0: Pz, _emscripten_bind_btConeTwistConstraint_setAngularOnly_1: Cv, _emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1: fw, _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4: Mj, _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2: sj, _emscripten_bind_btGhostObject_getNumOverlappingObjects_0: ux, _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0: Kt, _emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1: bv, _emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88: cB, _emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1: xu, _emscripten_bind_btRigidBodyConstructionInfo___destroy___0: Zy, _emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1: iy, _sbrk: mo, _emscripten_bind_btPoint2PointConstraint_setPivotA_1: Rq, _emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1: Iq, _memcpy: Lm, _emscripten_bind_Config_get_maxvolume_0: Kz, _emscripten_bind_btCapsuleShape_calculateLocalInertia_2: _s, _emscripten_bind_btRigidBody___destroy___0: Kt, _emscripten_bind_btVector3_y_0: eA, _emscripten_bind_btDispatcherInfo_set_m_useEpa_1: iw, _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0: Nz, _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2: gp, _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3: Oo, _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0: Vz, _emscripten_bind_Config_set_kDF_1: _x, _emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9: yg, _emscripten_bind_btSoftBody_activate_1: pr, _emscripten_bind_btConeShapeZ_btConeShapeZ_2: Cl, _emscripten_bind_btGhostObject_setCollisionShape_1: Xt, _emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1: _x, _emscripten_bind_btQuaternion_setW_1: Zx, _emscripten_bind_btPairCachingGhostObject_setRollingFriction_1: yt, _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1: Jt, _emscripten_bind_btGhostObject_isActive_0: Bv, _emscripten_bind_btVector4_z_0: dA, _emscripten_bind_btCollisionObject_forceActivationState_1: hw, _emscripten_bind_btKinematicCharacterController_onGround_0: Nu, _emscripten_bind_btRaycastVehicle_getWheelInfo_1: Uu, _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0: Pz, _emscripten_bind_btConeTwistConstraint_setLimit_2: dq, _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1: av, _emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0: Rz, _emscripten_bind_Node_set_m_x_1: lr, _emscripten_bind_btSoftBody_setFriction_1: Ot, _emscripten_bind_btRigidBody_setSleepingThresholds_2: Rt, _emscripten_bind_btSoftBody_upcast_1: Lv, _emscripten_bind_btCollisionObject_setWorldTransform_1: Xk, _emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0: Vz, _emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1: Ov, _emscripten_bind_btStridingMeshInterface___destroy___0: Kt, _emscripten_bind_btSoftBody_setActivationState_1: qt, _emscripten_bind_btManifoldPoint_get_m_localPointA_0: AA, _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0: Cw, _emscripten_bind_btSoftBodyHelpers_CreatePatch_9: qe, _emscripten_bind_btDispatcher_getNumManifolds_0: Mu, _emscripten_bind_btConvexShape_setMargin_1: vu, _emscripten_bind_btSoftBody_get_m_nodes_0: hA, _emscripten_bind_btSoftBody___destroy___0: Kt, _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0: Iv, _emscripten_bind_btRigidBody_activate_1: pr, _emscripten_bind_btRigidBody_activate_0: Rr, _emscripten_bind_btRaycastVehicle___destroy___0: Kt, _emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0: kz, _emscripten_bind_btGhostObject_setActivationState_1: qt, _emscripten_bind_btSoftBodyArray___destroy___0: yp, _emscripten_bind_Material_set_m_kLST_1: hy, _emscripten_bind_tMaterialArray_size_0: Vz, _emscripten_bind_btCollisionWorld_contactPairTest_3: xr, _emscripten_bind_btDispatcherInfo_get_m_useContinuous_0: Kw, _emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1: Yv, _emscripten_bind_Config_get_kSS_SPLT_CL_0: Uy, _emscripten_bind_btCylinderShapeX___destroy___0: Kt, _emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0: xz, _emscripten_bind_btManifoldPoint_getPositionWorldOnA_0: pA, _emscripten_bind_ContactResultCallback___destroy___0: Kt, _emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0: iv, _emscripten_bind_btSoftBody_setAnisotropicFriction_2: ko, _emscripten_bind_btConstraintSetting_btConstraintSetting_0: hp, _emscripten_bind_btRigidBody_getMotionState_0: Gy, _emscripten_bind_btKinematicCharacterController_getGhostObject_0: Mx, _emscripten_bind_btRigidBody_btRigidBody_1: Hh, _emscripten_bind_btTriangleMeshShape___destroy___0: Kt, _emscripten_bind_btKinematicCharacterController_setWalkDirection_1: it, _emscripten_bind_btDynamicsWorld_removeAction_1: Vt, _emscripten_bind_btRigidBody_applyTorque_1: zo, _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0: Hw, _emscripten_bind_btTransform_setIdentity_0: dn, _emscripten_bind_btSoftBodyWorldInfo_get_air_density_0: tA, _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1: Tq, _emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0: eA, _emscripten_bind_btGhostObject_setUserPointer_1: Gw, _emscripten_bind_btKinematicCharacterController_getGravity_0: dp, ___udivmoddi4: Ne, _emscripten_enum_PHY_ScalarType_PHY_SHORT: lB, _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0: Pz, _emscripten_bind_btDiscreteDynamicsWorld_addAction_1: cu, _emscripten_bind_btHingeConstraint_btHingeConstraint_4: fg, _emscripten_bind_LocalShapeInfo_get_m_shapePart_0: My, _emscripten_bind_btConeShape_calculateLocalInertia_2: _s, _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2: _s, _emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1: av, _llvm_bswap_i32: lw, _emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1: wt, ___udivdi3: Sv, _emscripten_bind_btSphereShape_setLocalScaling_1: Yt, _emscripten_bind_btVector4_w_0: aA, _emscripten_bind_btWheelInfo_get_m_worldTransform_0: rz, _emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0: Ty, _emscripten_bind_btBvhTriangleMeshShape___destroy___0: Kt, _emscripten_bind_Config_set_citerations_1: bx, _emscripten_bind_btSoftBody_checkFace_3: Kk, _emscripten_bind_Config_get_kSKHR_CL_0: oz, _free: Rc, _emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0: Dz, _emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1: hy, _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1: tt, _emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0: Np, _emscripten_bind_Config_set_diterations_1: $w, _emscripten_bind_btGeneric6DofConstraint___destroy___0: Kt, _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1: Et, _emscripten_bind_btVector4_btVector4_4: Cp, _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3: Zr, _emscripten_bind_btVector4_x_0: tA, _emscripten_bind_Config_set_kDP_1: gy, _emscripten_bind_btGhostObject_getUserPointer_0: Ky, _emscripten_bind_btConvexHullShape_addPoint_1: Bu, _emscripten_bind_btConvexHullShape_addPoint_2: St, _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0: Pz, _emscripten_bind_Config_set_kMT_1: Yx, _emscripten_bind_btTransform_getOrigin_0: pA, _emscripten_bind_Config_get_kKHR_0: Fz, _emscripten_bind_Material_get_m_kLST_0: eA, _emscripten_bind_btHingeConstraint___destroy___0: Kt, _emscripten_bind_btPairCachingGhostObject_getUserPointer_0: Ky, _emscripten_bind_btSoftBody_set_m_nodes_1: gh, _emscripten_bind_Config_set_viterations_1: Zw, _emscripten_bind_btConvexShape_calculateLocalInertia_2: _s, _memset: yn, _emscripten_bind_btKinematicCharacterController___destroy___0: Kt, _emscripten_bind_btConvexHullShape_setLocalScaling_1: Yt, _emscripten_bind_btTriangleMesh_btTriangleMesh_0: Mq, _emscripten_bind_btPairCachingGhostObject_getCollisionShape_0: vy, _emscripten_bind_btTriangleMesh_btTriangleMesh_2: $p, _emscripten_bind_btTransform___destroy___0: Zy, _emscripten_bind_btWheelInfo_set_m_frictionSlip_1: uw, _emscripten_bind_btSoftBodyHelpers___destroy___0: Zy, _emscripten_bind_btHingeConstraint_enableAngularMotor_3: Yr, _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1: dr, _emscripten_bind_btRigidBody_setCenterOfMassTransform_1: Qt, _emscripten_bind_btManifoldPoint_get_m_localPointB_0: Rz, _emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3: xr, _emscripten_bind_btSliderConstraint_setLowerLinLimit_1: cw, _emscripten_bind_btPoint2PointConstraint_set_m_setting_1: vr, _emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1: By, _emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1: fw, _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0: ey, _emscripten_bind_btRigidBody_setLinearVelocity_1: Qp, _emscripten_bind_btVehicleTuning_btVehicleTuning_0: Jn, _emscripten_bind_Config_set_maxvolume_1: cy, _emscripten_bind_btDefaultSoftBodySolver___destroy___0: Kt, _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1: ar, _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0: Uw, _emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1: Av, _emscripten_bind_btDynamicsWorld_addAction_1: cu, _emscripten_bind_btDiscreteDynamicsWorld_removeAction_1: Vt, _emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1: Zx, _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2: bs, _emscripten_bind_btDefaultVehicleRaycaster___destroy___0: Kt, _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1: gv, _emscripten_bind_btQuaternion_setEulerZYX_3: pn, _emscripten_bind_Config_set_kLF_1: iy, _emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1: At, _emscripten_enum_PHY_ScalarType_PHY_FLOAT: mB, _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1: Ku, _emscripten_bind_Config_set_kSS_SPLT_CL_1: nx, _emscripten_bind_btSoftBody_forceActivationState_1: hw, _emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1: At, _emscripten_bind_btKinematicCharacterController_setFallSpeed_1: _x, _emscripten_bind_Material_get_m_flags_0: lz, _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0: Rw, _emscripten_bind_ClosestConvexResultCallback_hasHit_0: Vx, _emscripten_bind_btCapsuleShapeZ___destroy___0: Kt, _emscripten_bind_btRaycastVehicle_getRigidBody_0: py, _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0: zx, _emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0: Mx, _emscripten_bind_btTriangleMesh_addTriangle_3: qn, _emscripten_bind_btGhostObject_getOverlappingObject_1: xu, _emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0: vt, _emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0: uz, _emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1: Zq, _emscripten_bind_btCompoundShape_getChildShape_1: qu, _emscripten_bind_btRigidBody_setCollisionFlags_1: vw, _emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1: Gv, _emscripten_bind_Config_set_kCHR_1: Qx, _emscripten_bind_btConeShape___destroy___0: Kt, _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2: om, _emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3: gj, _emscripten_bind_btSliderConstraint_btSliderConstraint_5: cf, _emscripten_bind_btSliderConstraint_btSliderConstraint_3: fe, _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0: Qz, _emscripten_bind_RaycastInfo_set_m_hardPointWS_1: ar, _emscripten_bind_btRigidBody_forceActivationState_1: hw, _emscripten_bind_btPoint2PointConstraint_setPivotB_1: Qq, _emscripten_bind_btManifoldPoint_getDistance_0: fz, _emscripten_bind_btGhostPairCallback___destroy___0: Kt, _emscripten_bind_btTransform_setFromOpenGLMatrix_1: gm, _emscripten_bind_btKinematicCharacterController_getMaxSlope_0: Ez, _emscripten_bind_btSliderConstraint_enableFeedback_1: Wv, _emscripten_bind_btRaycastVehicle_addWheel_7: Nd, _emscripten_bind_btPairCachingGhostObject_isActive_0: Bv, _emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1: nw, _emscripten_bind_btStaticPlaneShape___destroy___0: Kt, _emscripten_bind_btHingeConstraint_enableMotor_1: gw, _emscripten_bind_btDispatcherInfo_set_m_stepCount_1: nw, _emscripten_bind_btBoxShape_setLocalScaling_1: Yt, _emscripten_bind_btConeShapeZ___destroy___0: Kt, _emscripten_bind_btDynamicsWorld_getPairCache_0: vt, _emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5: Oq, _emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1: gy, _emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5: Oq, _emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2: os, _emscripten_bind_btRigidBody_setRestitution_1: It, _emscripten_bind_btVector4_btVector4_0: nr, _emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0: Dw, _emscripten_bind_btGhostObject_setCcdMotionThreshold_1: mw, _emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1: Uv, _emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1: Fq, _emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1: Fq, _emscripten_bind_tMaterialArray_at_1: ev, _emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1: Lw, _emscripten_bind_Material_set_m_kVST_1: Zx, _emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1: Vn, _emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0: dA, _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3: As, _emscripten_bind_btWheelInfo_get_m_raycastInfo_0: AA, _emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0: Aw, _emscripten_bind_btConvexShape_getMargin_0: $u, _emscripten_bind_btGhostPairCallback_btGhostPairCallback_0: ir, _emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1: Px, _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1: Wq, _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0: Pz, __GLOBAL__sub_I_btConeTwistConstraint_cpp: Zu, runPostSets: Cs, stackAlloc: dv, stackSave: wB, stackRestore: qB, establishStackSpace: wz, setThrew: dx, setTempRet0: sB, getTempRet0: vB, dynCall_viiiii: Vs, dynCall_vid: Lx, dynCall_vi: Yz, dynCall_viiidii: ms, dynCall_vii: hx, dynCall_iiiiiiiiiii: Lp, dynCall_ii: Ny, dynCall_viidi: ku, dynCall_viddiii: vs, dynCall_vidii: lu, dynCall_iiiii: xt, dynCall_vidi: rv, dynCall_diiiiiiii: Yq, dynCall_viiiiddddiid: Rp, dynCall_diiiii: Ks, dynCall_vidd: aw, dynCall_iiii: Au, dynCall_viiiiid: ls, dynCall_viiiiii: Vr, dynCall_iiid: Ru, dynCall_di: jz, dynCall_iiiiiii: Fr, dynCall_diiidii: Qr, dynCall_viidii: et, dynCall_viiiiiii: tr, dynCall_viiiiiiiii: zq, dynCall_viiiiiiiiii: Vp, dynCall_iii: pw, dynCall_diii: Iu, dynCall_diiiiiiiiii: Mp, dynCall_viiiid: dt, dynCall_diiiiiiiii: tq, dynCall_did: ix, dynCall_viiiidddddidi: Ap, dynCall_diidii: Ts, dynCall_diiii: Ht, dynCall_iiiiiiiiii: qq, dynCall_viiid: iu, dynCall_viii: Wu, dynCall_v: hB, dynCall_viid: yv, dynCall_iidid: bu, dynCall_viiii: Tt };
      }(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
      var _emscripten_bind_btCylinderShape___destroy___0 = Module["_emscripten_bind_btCylinderShape___destroy___0"] = asm["_emscripten_bind_btCylinderShape___destroy___0"];
      var _emscripten_bind_btGeneric6DofConstraint_enableFeedback_1 = Module["_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_enableFeedback_1"];
      var _emscripten_bind_btGhostObject___destroy___0 = Module["_emscripten_bind_btGhostObject___destroy___0"] = asm["_emscripten_bind_btGhostObject___destroy___0"];
      var _emscripten_bind_btPoint2PointConstraint_set_m_setting_1 = Module["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"] = asm["_emscripten_bind_btPoint2PointConstraint_set_m_setting_1"];
      var _emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1"];
      var _emscripten_bind_btDispatcherInfo_set_m_useContinuous_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_useContinuous_1"];
      var _emscripten_bind_btKinematicCharacterController_setWalkDirection_1 = Module["_emscripten_bind_btKinematicCharacterController_setWalkDirection_1"] = asm["_emscripten_bind_btKinematicCharacterController_setWalkDirection_1"];
      var _emscripten_bind_btCollisionObject_isActive_0 = Module["_emscripten_bind_btCollisionObject_isActive_0"] = asm["_emscripten_bind_btCollisionObject_isActive_0"];
      var _emscripten_bind_btRotationalLimitMotor___destroy___0 = Module["_emscripten_bind_btRotationalLimitMotor___destroy___0"] = asm["_emscripten_bind_btRotationalLimitMotor___destroy___0"];
      var _emscripten_bind_btDynamicsWorld_removeAction_1 = Module["_emscripten_bind_btDynamicsWorld_removeAction_1"] = asm["_emscripten_bind_btDynamicsWorld_removeAction_1"];
      var _emscripten_bind_btVehicleTuning_set_m_frictionSlip_1 = Module["_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_frictionSlip_1"];
      var _emscripten_bind_btQuaternion_w_0 = Module["_emscripten_bind_btQuaternion_w_0"] = asm["_emscripten_bind_btQuaternion_w_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4 = Module["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4"];
      var _emscripten_bind_btCapsuleShapeX_getMargin_0 = Module["_emscripten_bind_btCapsuleShapeX_getMargin_0"] = asm["_emscripten_bind_btCapsuleShapeX_getMargin_0"];
      var _emscripten_bind_Node_set_m_n_1 = Module["_emscripten_bind_Node_set_m_n_1"] = asm["_emscripten_bind_Node_set_m_n_1"];
      var _emscripten_bind_btCompoundShape_getMargin_0 = Module["_emscripten_bind_btCompoundShape_getMargin_0"] = asm["_emscripten_bind_btCompoundShape_getMargin_0"];
      var _emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1"];
      var _emscripten_bind_btRigidBody_setUserPointer_1 = Module["_emscripten_bind_btRigidBody_setUserPointer_1"] = asm["_emscripten_bind_btRigidBody_setUserPointer_1"];
      var _emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0"];
      var _emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1"];
      var _emscripten_bind_btQuaternion_setX_1 = Module["_emscripten_bind_btQuaternion_setX_1"] = asm["_emscripten_bind_btQuaternion_setX_1"];
      var _emscripten_bind_btCylinderShapeZ_getMargin_0 = Module["_emscripten_bind_btCylinderShapeZ_getMargin_0"] = asm["_emscripten_bind_btCylinderShapeZ_getMargin_0"];
      var _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0"];
      var _emscripten_bind_btQuaternion_setZ_1 = Module["_emscripten_bind_btQuaternion_setZ_1"] = asm["_emscripten_bind_btQuaternion_setZ_1"];
      var _emscripten_bind_btCollisionObject_getUserIndex_0 = Module["_emscripten_bind_btCollisionObject_getUserIndex_0"] = asm["_emscripten_bind_btCollisionObject_getUserIndex_0"];
      var _emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0 = Module["_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0"];
      var _emscripten_bind_btSoftBodyWorldInfo_set_water_density_1 = Module["_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1"] = asm["_emscripten_bind_btSoftBodyWorldInfo_set_water_density_1"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0"];
      var _emscripten_bind_btKinematicCharacterController_setMaxSlope_1 = Module["_emscripten_bind_btKinematicCharacterController_setMaxSlope_1"] = asm["_emscripten_bind_btKinematicCharacterController_setMaxSlope_1"];
      var _emscripten_bind_btQuadWord_z_0 = Module["_emscripten_bind_btQuadWord_z_0"] = asm["_emscripten_bind_btQuadWord_z_0"];
      var _emscripten_bind_btSoftBody_setCcdMotionThreshold_1 = Module["_emscripten_bind_btSoftBody_setCcdMotionThreshold_1"] = asm["_emscripten_bind_btSoftBody_setCcdMotionThreshold_1"];
      var _emscripten_bind_Material___destroy___0 = Module["_emscripten_bind_Material___destroy___0"] = asm["_emscripten_bind_Material___destroy___0"];
      var _emscripten_bind_btHingeConstraint_btHingeConstraint_2 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_2"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_2"];
      var _emscripten_bind_btSoftBody_rotate_1 = Module["_emscripten_bind_btSoftBody_rotate_1"] = asm["_emscripten_bind_btSoftBody_rotate_1"];
      var _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0 = Module["_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0"] = asm["_emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0"];
      var _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0 = Module["_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0"] = asm["_emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0"];
      var _emscripten_bind_btVector4_setY_1 = Module["_emscripten_bind_btVector4_setY_1"] = asm["_emscripten_bind_btVector4_setY_1"];
      var _emscripten_enum_PHY_ScalarType_PHY_UCHAR = Module["_emscripten_enum_PHY_ScalarType_PHY_UCHAR"] = asm["_emscripten_enum_PHY_ScalarType_PHY_UCHAR"];
      var _emscripten_bind_btQuaternion_setW_1 = Module["_emscripten_bind_btQuaternion_setW_1"] = asm["_emscripten_bind_btQuaternion_setW_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld___destroy___0 = Module["_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld___destroy___0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1"];
      var _emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0"];
      var _emscripten_bind_btCollisionDispatcher___destroy___0 = Module["_emscripten_bind_btCollisionDispatcher___destroy___0"] = asm["_emscripten_bind_btCollisionDispatcher___destroy___0"];
      var _emscripten_bind_btRigidBody_applyCentralImpulse_1 = Module["_emscripten_bind_btRigidBody_applyCentralImpulse_1"] = asm["_emscripten_bind_btRigidBody_applyCentralImpulse_1"];
      var _emscripten_bind_btConvexHullShape_getMargin_0 = Module["_emscripten_bind_btConvexHullShape_getMargin_0"] = asm["_emscripten_bind_btConvexHullShape_getMargin_0"];
      var _emscripten_bind_btDefaultMotionState_getWorldTransform_1 = Module["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"] = asm["_emscripten_bind_btDefaultMotionState_getWorldTransform_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3"];
      var _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addAction_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addAction_1"];
      var _emscripten_bind_btDynamicsWorld_rayTest_3 = Module["_emscripten_bind_btDynamicsWorld_rayTest_3"] = asm["_emscripten_bind_btDynamicsWorld_rayTest_3"];
      var _emscripten_bind_Config_set_kSR_SPLT_CL_1 = Module["_emscripten_bind_Config_set_kSR_SPLT_CL_1"] = asm["_emscripten_bind_Config_set_kSR_SPLT_CL_1"];
      var _emscripten_bind_btQuadWord_x_0 = Module["_emscripten_bind_btQuadWord_x_0"] = asm["_emscripten_bind_btQuadWord_x_0"];
      var _emscripten_bind_Config_get_diterations_0 = Module["_emscripten_bind_Config_get_diterations_0"] = asm["_emscripten_bind_Config_get_diterations_0"];
      var _emscripten_bind_btCollisionObject_isKinematicObject_0 = Module["_emscripten_bind_btCollisionObject_isKinematicObject_0"] = asm["_emscripten_bind_btCollisionObject_isKinematicObject_0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1"];
      var _emscripten_bind_btSphereShape___destroy___0 = Module["_emscripten_bind_btSphereShape___destroy___0"] = asm["_emscripten_bind_btSphereShape___destroy___0"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1"];
      var _emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1"];
      var _emscripten_bind_btSoftBody_isKinematicObject_0 = Module["_emscripten_bind_btSoftBody_isKinematicObject_0"] = asm["_emscripten_bind_btSoftBody_isKinematicObject_0"];
      var _emscripten_bind_btRigidBody_getCenterOfMassTransform_0 = Module["_emscripten_bind_btRigidBody_getCenterOfMassTransform_0"] = asm["_emscripten_bind_btRigidBody_getCenterOfMassTransform_0"];
      var _emscripten_bind_btTransform_setIdentity_0 = Module["_emscripten_bind_btTransform_setIdentity_0"] = asm["_emscripten_bind_btTransform_setIdentity_0"];
      var _emscripten_bind_btGhostObject_isKinematicObject_0 = Module["_emscripten_bind_btGhostObject_isKinematicObject_0"] = asm["_emscripten_bind_btGhostObject_isKinematicObject_0"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5"];
      var _emscripten_bind_btCapsuleShape___destroy___0 = Module["_emscripten_bind_btCapsuleShape___destroy___0"] = asm["_emscripten_bind_btCapsuleShape___destroy___0"];
      var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1 = Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"] = asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1"];
      var _emscripten_bind_btCollisionObject_activate_1 = Module["_emscripten_bind_btCollisionObject_activate_1"] = asm["_emscripten_bind_btCollisionObject_activate_1"];
      var _emscripten_bind_btCollisionObject_activate_0 = Module["_emscripten_bind_btCollisionObject_activate_0"] = asm["_emscripten_bind_btCollisionObject_activate_0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1"];
      var _emscripten_bind_Config_set_kSSHR_CL_1 = Module["_emscripten_bind_Config_set_kSSHR_CL_1"] = asm["_emscripten_bind_Config_set_kSSHR_CL_1"];
      var _emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1"];
      var _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1 = Module["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"] = asm["_emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1"];
      var _emscripten_bind_btVector3_setX_1 = Module["_emscripten_bind_btVector3_setX_1"] = asm["_emscripten_bind_btVector3_setX_1"];
      var _emscripten_bind_btCollisionConfiguration___destroy___0 = Module["_emscripten_bind_btCollisionConfiguration___destroy___0"] = asm["_emscripten_bind_btCollisionConfiguration___destroy___0"];
      var _emscripten_bind_btCapsuleShapeZ_setMargin_1 = Module["_emscripten_bind_btCapsuleShapeZ_setMargin_1"] = asm["_emscripten_bind_btCapsuleShapeZ_setMargin_1"];
      var _emscripten_bind_btHingeConstraint_enableFeedback_1 = Module["_emscripten_bind_btHingeConstraint_enableFeedback_1"] = asm["_emscripten_bind_btHingeConstraint_enableFeedback_1"];
      var _emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1 = Module["_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1"] = asm["_emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1"];
      var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1 = Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1"];
      var _emscripten_bind_Config_set_kMT_1 = Module["_emscripten_bind_Config_set_kMT_1"] = asm["_emscripten_bind_Config_set_kMT_1"];
      var _emscripten_bind_btManifoldPoint_set_m_localPointB_1 = Module["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_localPointB_1"];
      var _emscripten_bind_btVector3_setZ_1 = Module["_emscripten_bind_btVector3_setZ_1"] = asm["_emscripten_bind_btVector3_setZ_1"];
      var _emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1 = Module["_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1"] = asm["_emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1"];
      var _emscripten_bind_btQuaternion_setValue_4 = Module["_emscripten_bind_btQuaternion_setValue_4"] = asm["_emscripten_bind_btQuaternion_setValue_4"];
      var _emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1"];
      var _emscripten_bind_btSoftBody_transform_1 = Module["_emscripten_bind_btSoftBody_transform_1"] = asm["_emscripten_bind_btSoftBody_transform_1"];
      var _emscripten_bind_LocalShapeInfo___destroy___0 = Module["_emscripten_bind_LocalShapeInfo___destroy___0"] = asm["_emscripten_bind_LocalShapeInfo___destroy___0"];
      var _emscripten_bind_btSoftBody_appendAnchor_4 = Module["_emscripten_bind_btSoftBody_appendAnchor_4"] = asm["_emscripten_bind_btSoftBody_appendAnchor_4"];
      var _emscripten_bind_btPoint2PointConstraint_get_m_setting_0 = Module["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"] = asm["_emscripten_bind_btPoint2PointConstraint_get_m_setting_0"];
      var _emscripten_bind_btQuadWord_setY_1 = Module["_emscripten_bind_btQuadWord_setY_1"] = asm["_emscripten_bind_btQuadWord_setY_1"];
      var _emscripten_bind_btRigidBody_isKinematicObject_0 = Module["_emscripten_bind_btRigidBody_isKinematicObject_0"] = asm["_emscripten_bind_btRigidBody_isKinematicObject_0"];
      var _emscripten_bind_ContactResultCallback_addSingleResult_7 = Module["_emscripten_bind_ContactResultCallback_addSingleResult_7"] = asm["_emscripten_bind_ContactResultCallback_addSingleResult_7"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1"];
      var _emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0 = Module["_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0"] = asm["_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0"];
      var _emscripten_bind_btSliderConstraint_btSliderConstraint_5 = Module["_emscripten_bind_btSliderConstraint_btSliderConstraint_5"] = asm["_emscripten_bind_btSliderConstraint_btSliderConstraint_5"];
      var _emscripten_bind_btConeTwistConstraint_setDamping_1 = Module["_emscripten_bind_btConeTwistConstraint_setDamping_1"] = asm["_emscripten_bind_btConeTwistConstraint_setDamping_1"];
      var _emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0 = Module["_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0"] = asm["_emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0"];
      var _emscripten_bind_btCylinderShape_setMargin_1 = Module["_emscripten_bind_btCylinderShape_setMargin_1"] = asm["_emscripten_bind_btCylinderShape_setMargin_1"];
      var _emscripten_bind_btCollisionWorld___destroy___0 = Module["_emscripten_bind_btCollisionWorld___destroy___0"] = asm["_emscripten_bind_btCollisionWorld___destroy___0"];
      var _emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0 = Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0"] = asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0"];
      var _emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0 = Module["_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0"];
      var _emscripten_bind_btBoxShape_btBoxShape_1 = Module["_emscripten_bind_btBoxShape_btBoxShape_1"] = asm["_emscripten_bind_btBoxShape_btBoxShape_1"];
      var _emscripten_bind_btPersistentManifold_getBody1_0 = Module["_emscripten_bind_btPersistentManifold_getBody1_0"] = asm["_emscripten_bind_btPersistentManifold_getBody1_0"];
      var _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1"];
      var _emscripten_bind_RaycastInfo_set_m_isInContact_1 = Module["_emscripten_bind_RaycastInfo_set_m_isInContact_1"] = asm["_emscripten_bind_RaycastInfo_set_m_isInContact_1"];
      var _emscripten_bind_btKinematicCharacterController_setGravity_1 = Module["_emscripten_bind_btKinematicCharacterController_setGravity_1"] = asm["_emscripten_bind_btKinematicCharacterController_setGravity_1"];
      var _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5 = Module["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5"] = asm["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5"];
      var _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3 = Module["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3"] = asm["_emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3"];
      var _emscripten_bind_LocalShapeInfo_get_m_shapePart_0 = Module["_emscripten_bind_LocalShapeInfo_get_m_shapePart_0"] = asm["_emscripten_bind_LocalShapeInfo_get_m_shapePart_0"];
      var __GLOBAL__sub_I_btConeTwistConstraint_cpp = Module["__GLOBAL__sub_I_btConeTwistConstraint_cpp"] = asm["__GLOBAL__sub_I_btConeTwistConstraint_cpp"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1"];
      var _emscripten_bind_btWheelInfo_get_m_rollInfluence_0 = Module["_emscripten_bind_btWheelInfo_get_m_rollInfluence_0"] = asm["_emscripten_bind_btWheelInfo_get_m_rollInfluence_0"];
      var _emscripten_bind_btVector4_setValue_4 = Module["_emscripten_bind_btVector4_setValue_4"] = asm["_emscripten_bind_btVector4_setValue_4"];
      var _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1 = Module["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"] = asm["_emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1"];
      var _emscripten_bind_tNodeArray_size_0 = Module["_emscripten_bind_tNodeArray_size_0"] = asm["_emscripten_bind_tNodeArray_size_0"];
      var _emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1"];
      var _emscripten_bind_btDynamicsWorld_getDispatchInfo_0 = Module["_emscripten_bind_btDynamicsWorld_getDispatchInfo_0"] = asm["_emscripten_bind_btDynamicsWorld_getDispatchInfo_0"];
      var _emscripten_bind_btCompoundShape_removeChildShapeByIndex_1 = Module["_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1"] = asm["_emscripten_bind_btCompoundShape_removeChildShapeByIndex_1"];
      var _emscripten_bind_btVector3_length_0 = Module["_emscripten_bind_btVector3_length_0"] = asm["_emscripten_bind_btVector3_length_0"];
      var _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2 = Module["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2"] = asm["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2"];
      var _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1 = Module["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1"] = asm["_emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1"];
      var _emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1"];
      var _emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1 = Module["_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1"] = asm["_emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1"];
      var _emscripten_bind_btQuaternion_setEuler_3 = Module["_emscripten_bind_btQuaternion_setEuler_3"] = asm["_emscripten_bind_btQuaternion_setEuler_3"];
      var _emscripten_bind_btBoxShape_getMargin_0 = Module["_emscripten_bind_btBoxShape_getMargin_0"] = asm["_emscripten_bind_btBoxShape_getMargin_0"];
      var _emscripten_bind_btPairCachingGhostObject___destroy___0 = Module["_emscripten_bind_btPairCachingGhostObject___destroy___0"] = asm["_emscripten_bind_btPairCachingGhostObject___destroy___0"];
      var _emscripten_bind_btPairCachingGhostObject_setUserPointer_1 = Module["_emscripten_bind_btPairCachingGhostObject_setUserPointer_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setUserPointer_1"];
      var _emscripten_bind_btDynamicsWorld_addCollisionObject_3 = Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_3"] = asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_3"];
      var _emscripten_bind_btPairCachingGhostObject_activate_0 = Module["_emscripten_bind_btPairCachingGhostObject_activate_0"] = asm["_emscripten_bind_btPairCachingGhostObject_activate_0"];
      var _emscripten_bind_btPairCachingGhostObject_activate_1 = Module["_emscripten_bind_btPairCachingGhostObject_activate_1"] = asm["_emscripten_bind_btPairCachingGhostObject_activate_1"];
      var _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0 = Module["_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0"] = asm["_emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0"];
      var _emscripten_bind_btSoftBody_setUserPointer_1 = Module["_emscripten_bind_btSoftBody_setUserPointer_1"] = asm["_emscripten_bind_btSoftBody_setUserPointer_1"];
      var _emscripten_bind_btSoftBody_setMass_2 = Module["_emscripten_bind_btSoftBody_setMass_2"] = asm["_emscripten_bind_btSoftBody_setMass_2"];
      var _emscripten_bind_Config_get_kCHR_0 = Module["_emscripten_bind_Config_get_kCHR_0"] = asm["_emscripten_bind_Config_get_kCHR_0"];
      var _emscripten_bind_btPairCachingGhostObject_forceActivationState_1 = Module["_emscripten_bind_btPairCachingGhostObject_forceActivationState_1"] = asm["_emscripten_bind_btPairCachingGhostObject_forceActivationState_1"];
      var _emscripten_bind_btDefaultMotionState___destroy___0 = Module["_emscripten_bind_btDefaultMotionState___destroy___0"] = asm["_emscripten_bind_btDefaultMotionState___destroy___0"];
      var _emscripten_bind_btDispatcherInfo_get_m_stepCount_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_stepCount_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_stepCount_0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1"];
      var _emscripten_bind_btQuadWord_setW_1 = Module["_emscripten_bind_btQuadWord_setW_1"] = asm["_emscripten_bind_btQuadWord_setW_1"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0"];
      var _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2 = Module["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"] = asm["_emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2"];
      var _emscripten_bind_LocalShapeInfo_set_m_shapePart_1 = Module["_emscripten_bind_LocalShapeInfo_set_m_shapePart_1"] = asm["_emscripten_bind_LocalShapeInfo_set_m_shapePart_1"];
      var _emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0 = Module["_emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0"] = asm["_emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0"];
      var _emscripten_bind_btRigidBody_setLinearFactor_1 = Module["_emscripten_bind_btRigidBody_setLinearFactor_1"] = asm["_emscripten_bind_btRigidBody_setLinearFactor_1"];
      var _emscripten_bind_btCompoundShape_getChildShape_1 = Module["_emscripten_bind_btCompoundShape_getChildShape_1"] = asm["_emscripten_bind_btCompoundShape_getChildShape_1"];
      var _emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1"];
      var _emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0 = Module["_emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0"] = asm["_emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0"];
      var _emscripten_bind_btWheelInfo_get_m_engineForce_0 = Module["_emscripten_bind_btWheelInfo_get_m_engineForce_0"] = asm["_emscripten_bind_btWheelInfo_get_m_engineForce_0"];
      var _emscripten_bind_Config_get_kSR_SPLT_CL_0 = Module["_emscripten_bind_Config_get_kSR_SPLT_CL_0"] = asm["_emscripten_bind_Config_get_kSR_SPLT_CL_0"];
      var _emscripten_bind_btRaycastVehicle_setSteeringValue_2 = Module["_emscripten_bind_btRaycastVehicle_setSteeringValue_2"] = asm["_emscripten_bind_btRaycastVehicle_setSteeringValue_2"];
      var _emscripten_bind_btPoint2PointConstraint___destroy___0 = Module["_emscripten_bind_btPoint2PointConstraint___destroy___0"] = asm["_emscripten_bind_btPoint2PointConstraint___destroy___0"];
      var _emscripten_bind_btSoftBody_getUserPointer_0 = Module["_emscripten_bind_btSoftBody_getUserPointer_0"] = asm["_emscripten_bind_btSoftBody_getUserPointer_0"];
      var _emscripten_bind_btCollisionShape_setMargin_1 = Module["_emscripten_bind_btCollisionShape_setMargin_1"] = asm["_emscripten_bind_btCollisionShape_setMargin_1"];
      var _emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2"];
      var _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1"];
      var _emscripten_bind_Config_get_kVCF_0 = Module["_emscripten_bind_Config_get_kVCF_0"] = asm["_emscripten_bind_Config_get_kVCF_0"];
      var _malloc = Module["_malloc"] = asm["_malloc"];
      var _emscripten_bind_btDispatcherInfo_get_m_useEpa_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_useEpa_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_useEpa_0"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1"];
      var _emscripten_bind_btTransform_btTransform_2 = Module["_emscripten_bind_btTransform_btTransform_2"] = asm["_emscripten_bind_btTransform_btTransform_2"];
      var _emscripten_bind_btTransform_btTransform_0 = Module["_emscripten_bind_btTransform_btTransform_0"] = asm["_emscripten_bind_btTransform_btTransform_0"];
      var _emscripten_bind_btPairCachingGhostObject_getUserIndex_0 = Module["_emscripten_bind_btPairCachingGhostObject_getUserIndex_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getUserIndex_0"];
      var _emscripten_bind_Config_set_kVC_1 = Module["_emscripten_bind_Config_set_kVC_1"] = asm["_emscripten_bind_Config_set_kVC_1"];
      var _emscripten_bind_btVector3_op_sub_1 = Module["_emscripten_bind_btVector3_op_sub_1"] = asm["_emscripten_bind_btVector3_op_sub_1"];
      var _emscripten_bind_btWheelInfo_set_m_wheelsRadius_1 = Module["_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1"] = asm["_emscripten_bind_btWheelInfo_set_m_wheelsRadius_1"];
      var _emscripten_bind_RaycastInfo_set_m_hardPointWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_hardPointWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_hardPointWS_1"];
      var _emscripten_bind_btDispatcherInfo_set_m_enableSPU_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_enableSPU_1"];
      var _emscripten_bind_btRaycastVehicle_setCoordinateSystem_3 = Module["_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3"] = asm["_emscripten_bind_btRaycastVehicle_setCoordinateSystem_3"];
      var _emscripten_bind_btSoftBody_appendNode_2 = Module["_emscripten_bind_btSoftBody_appendNode_2"] = asm["_emscripten_bind_btSoftBody_appendNode_2"];
      var _emscripten_bind_btCollisionObject_setActivationState_1 = Module["_emscripten_bind_btCollisionObject_setActivationState_1"] = asm["_emscripten_bind_btCollisionObject_setActivationState_1"];
      var _emscripten_bind_btPersistentManifold___destroy___0 = Module["_emscripten_bind_btPersistentManifold___destroy___0"] = asm["_emscripten_bind_btPersistentManifold___destroy___0"];
      var _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0 = Module["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"] = asm["_emscripten_bind_btConstraintSetting_get_m_impulseClamp_0"];
      var _emscripten_bind_btCylinderShapeZ___destroy___0 = Module["_emscripten_bind_btCylinderShapeZ___destroy___0"] = asm["_emscripten_bind_btCylinderShapeZ___destroy___0"];
      var _emscripten_bind_btMatrix3x3___destroy___0 = Module["_emscripten_bind_btMatrix3x3___destroy___0"] = asm["_emscripten_bind_btMatrix3x3___destroy___0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1"];
      var _emscripten_bind_ConvexResultCallback_hasHit_0 = Module["_emscripten_bind_ConvexResultCallback_hasHit_0"] = asm["_emscripten_bind_ConvexResultCallback_hasHit_0"];
      var _emscripten_bind_btCollisionShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCollisionShape_calculateLocalInertia_2"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1"];
      var _emscripten_bind_Config_set_kPR_1 = Module["_emscripten_bind_Config_set_kPR_1"] = asm["_emscripten_bind_Config_set_kPR_1"];
      var _emscripten_bind_btCollisionWorld_convexSweepTest_5 = Module["_emscripten_bind_btCollisionWorld_convexSweepTest_5"] = asm["_emscripten_bind_btCollisionWorld_convexSweepTest_5"];
      var _emscripten_bind_btSoftBody_set_m_materials_1 = Module["_emscripten_bind_btSoftBody_set_m_materials_1"] = asm["_emscripten_bind_btSoftBody_set_m_materials_1"];
      var _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1"];
      var _emscripten_bind_btRigidBody_upcast_1 = Module["_emscripten_bind_btRigidBody_upcast_1"] = asm["_emscripten_bind_btRigidBody_upcast_1"];
      var _emscripten_bind_btConstraintSetting_set_m_damping_1 = Module["_emscripten_bind_btConstraintSetting_set_m_damping_1"] = asm["_emscripten_bind_btConstraintSetting_set_m_damping_1"];
      var _emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1 = Module["_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1"] = asm["_emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1"];
      var _emscripten_bind_btRigidBody_setCcdMotionThreshold_1 = Module["_emscripten_bind_btRigidBody_setCcdMotionThreshold_1"] = asm["_emscripten_bind_btRigidBody_setCcdMotionThreshold_1"];
      var _emscripten_bind_btConvexHullShape_setMargin_1 = Module["_emscripten_bind_btConvexHullShape_setMargin_1"] = asm["_emscripten_bind_btConvexHullShape_setMargin_1"];
      var _emscripten_bind_btRigidBody_applyForce_2 = Module["_emscripten_bind_btRigidBody_applyForce_2"] = asm["_emscripten_bind_btRigidBody_applyForce_2"];
      var _emscripten_bind_btConeShapeZ_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShapeZ_calculateLocalInertia_2"];
      var _emscripten_bind_btConstraintSetting_set_m_tau_1 = Module["_emscripten_bind_btConstraintSetting_set_m_tau_1"] = asm["_emscripten_bind_btConstraintSetting_set_m_tau_1"];
      var _emscripten_bind_btConvexHullShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConvexHullShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConvexHullShape_calculateLocalInertia_2"];
      var ___uremdi3 = Module["___uremdi3"] = asm["___uremdi3"];
      var _emscripten_bind_RaycastInfo_get_m_contactPointWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_contactPointWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_contactPointWS_0"];
      var _emscripten_bind_btSoftBody_setCollisionFlags_1 = Module["_emscripten_bind_btSoftBody_setCollisionFlags_1"] = asm["_emscripten_bind_btSoftBody_setCollisionFlags_1"];
      var _emscripten_bind_btSphereShape_calculateLocalInertia_2 = Module["_emscripten_bind_btSphereShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btSphereShape_calculateLocalInertia_2"];
      var _emscripten_bind_Config_set_maxvolume_1 = Module["_emscripten_bind_Config_set_maxvolume_1"] = asm["_emscripten_bind_Config_set_maxvolume_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0"];
      var _emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1 = Module["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"] = asm["_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1"];
      var _emscripten_bind_btSoftBody_setTotalMass_2 = Module["_emscripten_bind_btSoftBody_setTotalMass_2"] = asm["_emscripten_bind_btSoftBody_setTotalMass_2"];
      var _emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0"];
      var _emscripten_bind_btGhostObject_setFriction_1 = Module["_emscripten_bind_btGhostObject_setFriction_1"] = asm["_emscripten_bind_btGhostObject_setFriction_1"];
      var _emscripten_bind_btPairCachingGhostObject_getWorldTransform_0 = Module["_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0"];
      var _emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1 = Module["_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1"] = asm["_emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1"];
      var _emscripten_bind_btCylinderShapeZ_setMargin_1 = Module["_emscripten_bind_btCylinderShapeZ_setMargin_1"] = asm["_emscripten_bind_btCylinderShapeZ_setMargin_1"];
      var _emscripten_bind_btRigidBody_setFriction_1 = Module["_emscripten_bind_btRigidBody_setFriction_1"] = asm["_emscripten_bind_btRigidBody_setFriction_1"];
      var _emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1 = Module["_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1"];
      var _emscripten_bind_btGhostObject_setWorldTransform_1 = Module["_emscripten_bind_btGhostObject_setWorldTransform_1"] = asm["_emscripten_bind_btGhostObject_setWorldTransform_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1"];
      var _emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0 = Module["_emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0"] = asm["_emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0"];
      var _emscripten_bind_btManifoldPoint_getAppliedImpulse_0 = Module["_emscripten_bind_btManifoldPoint_getAppliedImpulse_0"] = asm["_emscripten_bind_btManifoldPoint_getAppliedImpulse_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1"];
      var _emscripten_bind_btConvexHullShape___destroy___0 = Module["_emscripten_bind_btConvexHullShape___destroy___0"] = asm["_emscripten_bind_btConvexHullShape___destroy___0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_addAction_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addAction_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addAction_1"];
      var _emscripten_bind_btVector4_setX_1 = Module["_emscripten_bind_btVector4_setX_1"] = asm["_emscripten_bind_btVector4_setX_1"];
      var _emscripten_bind_btKinematicCharacterController_jump_0 = Module["_emscripten_bind_btKinematicCharacterController_jump_0"] = asm["_emscripten_bind_btKinematicCharacterController_jump_0"];
      var _emscripten_bind_btCollisionObject_getUserPointer_0 = Module["_emscripten_bind_btCollisionObject_getUserPointer_0"] = asm["_emscripten_bind_btCollisionObject_getUserPointer_0"];
      var _emscripten_bind_btWheelInfo_set_m_raycastInfo_1 = Module["_emscripten_bind_btWheelInfo_set_m_raycastInfo_1"] = asm["_emscripten_bind_btWheelInfo_set_m_raycastInfo_1"];
      var _emscripten_bind_btCollisionWorld_contactTest_2 = Module["_emscripten_bind_btCollisionWorld_contactTest_2"] = asm["_emscripten_bind_btCollisionWorld_contactTest_2"];
      var _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1 = Module["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1"] = asm["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1"];
      var _emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1 = Module["_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1"] = asm["_emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1"];
      var _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2"];
      var _emscripten_bind_btTransform_setOrigin_1 = Module["_emscripten_bind_btTransform_setOrigin_1"] = asm["_emscripten_bind_btTransform_setOrigin_1"];
      var _emscripten_bind_btVector4_setZ_1 = Module["_emscripten_bind_btVector4_setZ_1"] = asm["_emscripten_bind_btVector4_setZ_1"];
      var _emscripten_bind_btQuadWord_y_0 = Module["_emscripten_bind_btQuadWord_y_0"] = asm["_emscripten_bind_btQuadWord_y_0"];
      var _emscripten_bind_btTransform_getBasis_0 = Module["_emscripten_bind_btTransform_getBasis_0"] = asm["_emscripten_bind_btTransform_getBasis_0"];
      var _emscripten_bind_btPairCachingGhostObject_setFriction_1 = Module["_emscripten_bind_btPairCachingGhostObject_setFriction_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setFriction_1"];
      var _emscripten_bind_Config_set_kSRHR_CL_1 = Module["_emscripten_bind_Config_set_kSRHR_CL_1"] = asm["_emscripten_bind_Config_set_kSRHR_CL_1"];
      var _emscripten_bind_btCollisionDispatcher_getNumManifolds_0 = Module["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"] = asm["_emscripten_bind_btCollisionDispatcher_getNumManifolds_0"];
      var _emscripten_bind_btVehicleRaycaster___destroy___0 = Module["_emscripten_bind_btVehicleRaycaster___destroy___0"] = asm["_emscripten_bind_btVehicleRaycaster___destroy___0"];
      var _emscripten_bind_ClosestRayResultCallback___destroy___0 = Module["_emscripten_bind_ClosestRayResultCallback___destroy___0"] = asm["_emscripten_bind_ClosestRayResultCallback___destroy___0"];
      var _emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0"];
      var _emscripten_bind_btCylinderShapeX_setMargin_1 = Module["_emscripten_bind_btCylinderShapeX_setMargin_1"] = asm["_emscripten_bind_btCylinderShapeX_setMargin_1"];
      var _emscripten_bind_btQuadWord_w_0 = Module["_emscripten_bind_btQuadWord_w_0"] = asm["_emscripten_bind_btQuadWord_w_0"];
      var _emscripten_bind_Node___destroy___0 = Module["_emscripten_bind_Node___destroy___0"] = asm["_emscripten_bind_Node___destroy___0"];
      var _emscripten_bind_btAxisSweep3___destroy___0 = Module["_emscripten_bind_btAxisSweep3___destroy___0"] = asm["_emscripten_bind_btAxisSweep3___destroy___0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_contactTest_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_contactTest_2"];
      var _emscripten_bind_btKinematicCharacterController_setUp_1 = Module["_emscripten_bind_btKinematicCharacterController_setUp_1"] = asm["_emscripten_bind_btKinematicCharacterController_setUp_1"];
      var _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2 = Module["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2"];
      var _emscripten_bind_btCompoundShape_getNumChildShapes_0 = Module["_emscripten_bind_btCompoundShape_getNumChildShapes_0"] = asm["_emscripten_bind_btCompoundShape_getNumChildShapes_0"];
      var _emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1 = Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1"] = asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1"];
      var _emscripten_bind_btGhostObject_btGhostObject_0 = Module["_emscripten_bind_btGhostObject_btGhostObject_0"] = asm["_emscripten_bind_btGhostObject_btGhostObject_0"];
      var _emscripten_bind_btConeShape_btConeShape_2 = Module["_emscripten_bind_btConeShape_btConeShape_2"] = asm["_emscripten_bind_btConeShape_btConeShape_2"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1"];
      var _emscripten_bind_btManifoldPoint_set_m_localPointA_1 = Module["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_localPointA_1"];
      var _emscripten_bind_btCapsuleShapeX_setMargin_1 = Module["_emscripten_bind_btCapsuleShapeX_setMargin_1"] = asm["_emscripten_bind_btCapsuleShapeX_setMargin_1"];
      var _emscripten_bind_btVector3_dot_1 = Module["_emscripten_bind_btVector3_dot_1"] = asm["_emscripten_bind_btVector3_dot_1"];
      var _emscripten_bind_btGhostObject_getUserPointer_0 = Module["_emscripten_bind_btGhostObject_getUserPointer_0"] = asm["_emscripten_bind_btGhostObject_getUserPointer_0"];
      var _emscripten_bind_btVector4_op_add_1 = Module["_emscripten_bind_btVector4_op_add_1"] = asm["_emscripten_bind_btVector4_op_add_1"];
      var _emscripten_bind_btWheelInfo___destroy___0 = Module["_emscripten_bind_btWheelInfo___destroy___0"] = asm["_emscripten_bind_btWheelInfo___destroy___0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0"];
      var _emscripten_bind_btTransform_setRotation_1 = Module["_emscripten_bind_btTransform_setRotation_1"] = asm["_emscripten_bind_btTransform_setRotation_1"];
      var _emscripten_bind_Config_set_kSHR_1 = Module["_emscripten_bind_Config_set_kSHR_1"] = asm["_emscripten_bind_Config_set_kSHR_1"];
      var _emscripten_bind_btPoint2PointConstraint_enableFeedback_1 = Module["_emscripten_bind_btPoint2PointConstraint_enableFeedback_1"] = asm["_emscripten_bind_btPoint2PointConstraint_enableFeedback_1"];
      var _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1"];
      var _emscripten_bind_btAxisSweep3_btAxisSweep3_2 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_2"];
      var _emscripten_bind_btAxisSweep3_btAxisSweep3_3 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_3"];
      var _emscripten_bind_btDynamicsWorld___destroy___0 = Module["_emscripten_bind_btDynamicsWorld___destroy___0"] = asm["_emscripten_bind_btDynamicsWorld___destroy___0"];
      var _emscripten_bind_btVector3_setY_1 = Module["_emscripten_bind_btVector3_setY_1"] = asm["_emscripten_bind_btVector3_setY_1"];
      var _emscripten_bind_btAxisSweep3_btAxisSweep3_4 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_4"];
      var _emscripten_bind_btAxisSweep3_btAxisSweep3_5 = Module["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"] = asm["_emscripten_bind_btAxisSweep3_btAxisSweep3_5"];
      var _emscripten_bind_btQuadWord_setX_1 = Module["_emscripten_bind_btQuadWord_setX_1"] = asm["_emscripten_bind_btQuadWord_setX_1"];
      var _emscripten_bind_tMaterialArray___destroy___0 = Module["_emscripten_bind_tMaterialArray___destroy___0"] = asm["_emscripten_bind_tMaterialArray___destroy___0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0"];
      var _emscripten_bind_Config_set_piterations_1 = Module["_emscripten_bind_Config_set_piterations_1"] = asm["_emscripten_bind_Config_set_piterations_1"];
      var _emscripten_bind_btOverlappingPairCache___destroy___0 = Module["_emscripten_bind_btOverlappingPairCache___destroy___0"] = asm["_emscripten_bind_btOverlappingPairCache___destroy___0"];
      var _emscripten_bind_btRigidBody_setUserIndex_1 = Module["_emscripten_bind_btRigidBody_setUserIndex_1"] = asm["_emscripten_bind_btRigidBody_setUserIndex_1"];
      var _emscripten_bind_Material_get_m_kAST_0 = Module["_emscripten_bind_Material_get_m_kAST_0"] = asm["_emscripten_bind_Material_get_m_kAST_0"];
      var _emscripten_bind_btConstraintSetting___destroy___0 = Module["_emscripten_bind_btConstraintSetting___destroy___0"] = asm["_emscripten_bind_btConstraintSetting___destroy___0"];
      var _emscripten_bind_RayResultCallback___destroy___0 = Module["_emscripten_bind_RayResultCallback___destroy___0"] = asm["_emscripten_bind_RayResultCallback___destroy___0"];
      var _emscripten_bind_RaycastInfo_get_m_contactNormalWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0"];
      var _emscripten_bind_btSoftBodyWorldInfo_get_water_density_0 = Module["_emscripten_bind_btSoftBodyWorldInfo_get_water_density_0"] = asm["_emscripten_bind_btSoftBodyWorldInfo_get_water_density_0"];
      var _emscripten_bind_btPersistentManifold_getBody0_0 = Module["_emscripten_bind_btPersistentManifold_getBody0_0"] = asm["_emscripten_bind_btPersistentManifold_getBody0_0"];
      var _emscripten_bind_btConeShapeX_btConeShapeX_2 = Module["_emscripten_bind_btConeShapeX_btConeShapeX_2"] = asm["_emscripten_bind_btConeShapeX_btConeShapeX_2"];
      var _emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1 = Module["_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1"] = asm["_emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1"];
      var _emscripten_bind_btConeTwistConstraint_enableFeedback_1 = Module["_emscripten_bind_btConeTwistConstraint_enableFeedback_1"] = asm["_emscripten_bind_btConeTwistConstraint_enableFeedback_1"];
      var _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0 = Module["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0"] = asm["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0"];
      var _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1 = Module["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"] = asm["_emscripten_bind_btCapsuleShapeZ_setLocalScaling_1"];
      var _emscripten_bind_Config_get_piterations_0 = Module["_emscripten_bind_Config_get_piterations_0"] = asm["_emscripten_bind_Config_get_piterations_0"];
      var _emscripten_bind_btSoftBody_translate_1 = Module["_emscripten_bind_btSoftBody_translate_1"] = asm["_emscripten_bind_btSoftBody_translate_1"];
      var _emscripten_bind_btSliderConstraint_setUpperLinLimit_1 = Module["_emscripten_bind_btSliderConstraint_setUpperLinLimit_1"] = asm["_emscripten_bind_btSliderConstraint_setUpperLinLimit_1"];
      var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2 = Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"] = asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2"];
      var _emscripten_bind_btVector3_op_mul_1 = Module["_emscripten_bind_btVector3_op_mul_1"] = asm["_emscripten_bind_btVector3_op_mul_1"];
      var _emscripten_bind_btConcaveShape___destroy___0 = Module["_emscripten_bind_btConcaveShape___destroy___0"] = asm["_emscripten_bind_btConcaveShape___destroy___0"];
      var _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4 = Module["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"] = asm["_emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4"];
      var _emscripten_bind_btQuaternion_x_0 = Module["_emscripten_bind_btQuaternion_x_0"] = asm["_emscripten_bind_btQuaternion_x_0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5"];
      var _emscripten_bind_Config_set_timescale_1 = Module["_emscripten_bind_Config_set_timescale_1"] = asm["_emscripten_bind_Config_set_timescale_1"];
      var _emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1 = Module["_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1"];
      var _emscripten_bind_btConcaveShape_setLocalScaling_1 = Module["_emscripten_bind_btConcaveShape_setLocalScaling_1"] = asm["_emscripten_bind_btConcaveShape_setLocalScaling_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0"];
      var _emscripten_bind_btConeShapeX_setLocalScaling_1 = Module["_emscripten_bind_btConeShapeX_setLocalScaling_1"] = asm["_emscripten_bind_btConeShapeX_setLocalScaling_1"];
      var _emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1 = Module["_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1"] = asm["_emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1"];
      var _emscripten_bind_btSoftBody_appendLink_4 = Module["_emscripten_bind_btSoftBody_appendLink_4"] = asm["_emscripten_bind_btSoftBody_appendLink_4"];
      var _emscripten_bind_btQuaternion_z_0 = Module["_emscripten_bind_btQuaternion_z_0"] = asm["_emscripten_bind_btQuaternion_z_0"];
      var _emscripten_bind_btConvexHullShape_btConvexHullShape_0 = Module["_emscripten_bind_btConvexHullShape_btConvexHullShape_0"] = asm["_emscripten_bind_btConvexHullShape_btConvexHullShape_0"];
      var _emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1 = Module["_emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1"] = asm["_emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1"];
      var _emscripten_bind_btConstraintSetting_get_m_damping_0 = Module["_emscripten_bind_btConstraintSetting_get_m_damping_0"] = asm["_emscripten_bind_btConstraintSetting_get_m_damping_0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1"];
      var _emscripten_bind_Config_get_kLF_0 = Module["_emscripten_bind_Config_get_kLF_0"] = asm["_emscripten_bind_Config_get_kLF_0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1"];
      var _emscripten_bind_btGhostObject_setContactProcessingThreshold_1 = Module["_emscripten_bind_btGhostObject_setContactProcessingThreshold_1"] = asm["_emscripten_bind_btGhostObject_setContactProcessingThreshold_1"];
      var _emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4 = Module["_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4"] = asm["_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4"];
      var _emscripten_bind_btCollisionWorld_getBroadphase_0 = Module["_emscripten_bind_btCollisionWorld_getBroadphase_0"] = asm["_emscripten_bind_btCollisionWorld_getBroadphase_0"];
      var _emscripten_bind_btRaycastVehicle_updateWheelTransform_2 = Module["_emscripten_bind_btRaycastVehicle_updateWheelTransform_2"] = asm["_emscripten_bind_btRaycastVehicle_updateWheelTransform_2"];
      var _emscripten_bind_btDispatcherInfo_set_m_stepCount_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_stepCount_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_stepCount_1"];
      var _emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1 = Module["_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1"] = asm["_emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1"];
      var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_2"];
      var _emscripten_bind_Material_set_m_flags_1 = Module["_emscripten_bind_Material_set_m_flags_1"] = asm["_emscripten_bind_Material_set_m_flags_1"];
      var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_0"];
      var _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1 = Module["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"] = asm["_emscripten_bind_btDefaultMotionState_btDefaultMotionState_1"];
      var _emscripten_bind_Config_get_viterations_0 = Module["_emscripten_bind_Config_get_viterations_0"] = asm["_emscripten_bind_Config_get_viterations_0"];
      var _emscripten_bind_btKinematicCharacterController_canJump_0 = Module["_emscripten_bind_btKinematicCharacterController_canJump_0"] = asm["_emscripten_bind_btKinematicCharacterController_canJump_0"];
      var _emscripten_bind_btSoftBodyArray_at_1 = Module["_emscripten_bind_btSoftBodyArray_at_1"] = asm["_emscripten_bind_btSoftBodyArray_at_1"];
      var _emscripten_bind_btPairCachingGhostObject_setUserIndex_1 = Module["_emscripten_bind_btPairCachingGhostObject_setUserIndex_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setUserIndex_1"];
      var _emscripten_bind_btRigidBody_isActive_0 = Module["_emscripten_bind_btRigidBody_isActive_0"] = asm["_emscripten_bind_btRigidBody_isActive_0"];
      var _emscripten_bind_btRaycastVehicle_btRaycastVehicle_3 = Module["_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3"] = asm["_emscripten_bind_btRaycastVehicle_btRaycastVehicle_3"];
      var _emscripten_bind_btMotionState_setWorldTransform_1 = Module["_emscripten_bind_btMotionState_setWorldTransform_1"] = asm["_emscripten_bind_btMotionState_setWorldTransform_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0"];
      var _emscripten_bind_btCylinderShape_setLocalScaling_1 = Module["_emscripten_bind_btCylinderShape_setLocalScaling_1"] = asm["_emscripten_bind_btCylinderShape_setLocalScaling_1"];
      var _emscripten_bind_btCollisionWorld_rayTest_3 = Module["_emscripten_bind_btCollisionWorld_rayTest_3"] = asm["_emscripten_bind_btCollisionWorld_rayTest_3"];
      var _emscripten_bind_btCompoundShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCompoundShape_calculateLocalInertia_2"];
      var _emscripten_bind_btCollisionWorld_getDispatchInfo_0 = Module["_emscripten_bind_btCollisionWorld_getDispatchInfo_0"] = asm["_emscripten_bind_btCollisionWorld_getDispatchInfo_0"];
      var _emscripten_bind_btRigidBody_setCollisionShape_1 = Module["_emscripten_bind_btRigidBody_setCollisionShape_1"] = asm["_emscripten_bind_btRigidBody_setCollisionShape_1"];
      var _emscripten_bind_btSoftBody_appendTetra_5 = Module["_emscripten_bind_btSoftBody_appendTetra_5"] = asm["_emscripten_bind_btSoftBody_appendTetra_5"];
      var _emscripten_bind_btConeShapeX___destroy___0 = Module["_emscripten_bind_btConeShapeX___destroy___0"] = asm["_emscripten_bind_btConeShapeX___destroy___0"];
      var _emscripten_bind_btCollisionObject_getCollisionFlags_0 = Module["_emscripten_bind_btCollisionObject_getCollisionFlags_0"] = asm["_emscripten_bind_btCollisionObject_getCollisionFlags_0"];
      var _emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1"];
      var _emscripten_bind_btConeTwistConstraint_enableMotor_1 = Module["_emscripten_bind_btConeTwistConstraint_enableMotor_1"] = asm["_emscripten_bind_btConeTwistConstraint_enableMotor_1"];
      var _emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1 = Module["_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1"] = asm["_emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1"];
      var _emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1 = Module["_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1"] = asm["_emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1"];
      var _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0 = Module["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"] = asm["_emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0"];
      var _emscripten_bind_btPairCachingGhostObject_setRestitution_1 = Module["_emscripten_bind_btPairCachingGhostObject_setRestitution_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setRestitution_1"];
      var _emscripten_bind_Config_set_kAHR_1 = Module["_emscripten_bind_Config_set_kAHR_1"] = asm["_emscripten_bind_Config_set_kAHR_1"];
      var _emscripten_bind_btHeightfieldTerrainShape_getMargin_0 = Module["_emscripten_bind_btHeightfieldTerrainShape_getMargin_0"] = asm["_emscripten_bind_btHeightfieldTerrainShape_getMargin_0"];
      var _emscripten_bind_ConvexResultCallback___destroy___0 = Module["_emscripten_bind_ConvexResultCallback___destroy___0"] = asm["_emscripten_bind_ConvexResultCallback___destroy___0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3"];
      var _emscripten_bind_Config_get_kSRHR_CL_0 = Module["_emscripten_bind_Config_get_kSRHR_CL_0"] = asm["_emscripten_bind_Config_get_kSRHR_CL_0"];
      var _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1"];
      var _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3 = Module["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3"] = asm["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3"];
      var _emscripten_bind_btCollisionObject_setContactProcessingThreshold_1 = Module["_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1"] = asm["_emscripten_bind_btCollisionObject_setContactProcessingThreshold_1"];
      var _emscripten_bind_btCompoundShape___destroy___0 = Module["_emscripten_bind_btCompoundShape___destroy___0"] = asm["_emscripten_bind_btCompoundShape___destroy___0"];
      var _emscripten_bind_btHingeConstraint_setMotorTarget_2 = Module["_emscripten_bind_btHingeConstraint_setMotorTarget_2"] = asm["_emscripten_bind_btHingeConstraint_setMotorTarget_2"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0"];
      var _emscripten_bind_LocalConvexResult___destroy___0 = Module["_emscripten_bind_LocalConvexResult___destroy___0"] = asm["_emscripten_bind_LocalConvexResult___destroy___0"];
      var _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0 = Module["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"] = asm["_emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0"];
      var _emscripten_bind_btSoftBodyHelpers_CreateRope_5 = Module["_emscripten_bind_btSoftBodyHelpers_CreateRope_5"] = asm["_emscripten_bind_btSoftBodyHelpers_CreateRope_5"];
      var _emscripten_bind_btRigidBody_getCollisionFlags_0 = Module["_emscripten_bind_btRigidBody_getCollisionFlags_0"] = asm["_emscripten_bind_btRigidBody_getCollisionFlags_0"];
      var _emscripten_bind_btCollisionShape_setLocalScaling_1 = Module["_emscripten_bind_btCollisionShape_setLocalScaling_1"] = asm["_emscripten_bind_btCollisionShape_setLocalScaling_1"];
      var _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0"];
      var _emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0 = Module["_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0"];
      var _emscripten_bind_btMatrix3x3_setEulerZYX_3 = Module["_emscripten_bind_btMatrix3x3_setEulerZYX_3"] = asm["_emscripten_bind_btMatrix3x3_setEulerZYX_3"];
      var _emscripten_bind_btSoftBody_getTotalMass_0 = Module["_emscripten_bind_btSoftBody_getTotalMass_0"] = asm["_emscripten_bind_btSoftBody_getTotalMass_0"];
      var _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0"];
      var _emscripten_bind_btRigidBody_getUserPointer_0 = Module["_emscripten_bind_btRigidBody_getUserPointer_0"] = asm["_emscripten_bind_btRigidBody_getUserPointer_0"];
      var _emscripten_bind_Config_get_kSHR_0 = Module["_emscripten_bind_Config_get_kSHR_0"] = asm["_emscripten_bind_Config_get_kSHR_0"];
      var _emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2 = Module["_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2"];
      var _emscripten_bind_btRigidBody_setMotionState_1 = Module["_emscripten_bind_btRigidBody_setMotionState_1"] = asm["_emscripten_bind_btRigidBody_setMotionState_1"];
      var _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0 = Module["_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0"] = asm["_emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0"];
      var _emscripten_bind_btCollisionWorld_getDispatcher_0 = Module["_emscripten_bind_btCollisionWorld_getDispatcher_0"] = asm["_emscripten_bind_btCollisionWorld_getDispatcher_0"];
      var _emscripten_bind_btVector4_dot_1 = Module["_emscripten_bind_btVector4_dot_1"] = asm["_emscripten_bind_btVector4_dot_1"];
      var _emscripten_bind_btSoftBody_forceActivationState_1 = Module["_emscripten_bind_btSoftBody_forceActivationState_1"] = asm["_emscripten_bind_btSoftBody_forceActivationState_1"];
      var _emscripten_bind_btCollisionObject_setRollingFriction_1 = Module["_emscripten_bind_btCollisionObject_setRollingFriction_1"] = asm["_emscripten_bind_btCollisionObject_setRollingFriction_1"];
      var _emscripten_bind_Config_set_kSK_SPLT_CL_1 = Module["_emscripten_bind_Config_set_kSK_SPLT_CL_1"] = asm["_emscripten_bind_Config_set_kSK_SPLT_CL_1"];
      var _emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1 = Module["_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1"] = asm["_emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1"];
      var _emscripten_bind_btPairCachingGhostObject_getCollisionShape_0 = Module["_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0"];
      var _i64Subtract = Module["_i64Subtract"] = asm["_i64Subtract"];
      var _emscripten_bind_btCylinderShapeX_getMargin_0 = Module["_emscripten_bind_btCylinderShapeX_getMargin_0"] = asm["_emscripten_bind_btCylinderShapeX_getMargin_0"];
      var _emscripten_bind_btRigidBody_setDamping_2 = Module["_emscripten_bind_btRigidBody_setDamping_2"] = asm["_emscripten_bind_btRigidBody_setDamping_2"];
      var _emscripten_bind_btDynamicsWorld_getDispatcher_0 = Module["_emscripten_bind_btDynamicsWorld_getDispatcher_0"] = asm["_emscripten_bind_btDynamicsWorld_getDispatcher_0"];
      var _emscripten_bind_btGhostObject_setCollisionFlags_1 = Module["_emscripten_bind_btGhostObject_setCollisionFlags_1"] = asm["_emscripten_bind_btGhostObject_setCollisionFlags_1"];
      var _emscripten_bind_btMatrix3x3_getRotation_1 = Module["_emscripten_bind_btMatrix3x3_getRotation_1"] = asm["_emscripten_bind_btMatrix3x3_getRotation_1"];
      var _emscripten_bind_btWheelInfo_set_m_engineForce_1 = Module["_emscripten_bind_btWheelInfo_set_m_engineForce_1"] = asm["_emscripten_bind_btWheelInfo_set_m_engineForce_1"];
      var _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1 = Module["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1"] = asm["_emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1"];
      var _emscripten_bind_btPersistentManifold_getNumContacts_0 = Module["_emscripten_bind_btPersistentManifold_getNumContacts_0"] = asm["_emscripten_bind_btPersistentManifold_getNumContacts_0"];
      var _emscripten_bind_btCylinderShapeX_setLocalScaling_1 = Module["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"] = asm["_emscripten_bind_btCylinderShapeX_setLocalScaling_1"];
      var _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0 = Module["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"] = asm["_emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0"];
      var _emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0 = Module["_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0"] = asm["_emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0"];
      var _emscripten_bind_btCompoundShape_setLocalScaling_1 = Module["_emscripten_bind_btCompoundShape_setLocalScaling_1"] = asm["_emscripten_bind_btCompoundShape_setLocalScaling_1"];
      var _emscripten_bind_btOverlappingPairCallback___destroy___0 = Module["_emscripten_bind_btOverlappingPairCallback___destroy___0"] = asm["_emscripten_bind_btOverlappingPairCallback___destroy___0"];
      var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0 = Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0"];
      var _emscripten_bind_tNodeArray___destroy___0 = Module["_emscripten_bind_tNodeArray___destroy___0"] = asm["_emscripten_bind_tNodeArray___destroy___0"];
      var _emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1 = Module["_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1"];
      var _emscripten_bind_btHingeConstraint_enableAngularMotor_3 = Module["_emscripten_bind_btHingeConstraint_enableAngularMotor_3"] = asm["_emscripten_bind_btHingeConstraint_enableAngularMotor_3"];
      var _emscripten_bind_btRigidBody_setContactProcessingThreshold_1 = Module["_emscripten_bind_btRigidBody_setContactProcessingThreshold_1"] = asm["_emscripten_bind_btRigidBody_setContactProcessingThreshold_1"];
      var _emscripten_bind_btRigidBody_getLinearVelocity_0 = Module["_emscripten_bind_btRigidBody_getLinearVelocity_0"] = asm["_emscripten_bind_btRigidBody_getLinearVelocity_0"];
      var _emscripten_bind_btRigidBody_applyImpulse_2 = Module["_emscripten_bind_btRigidBody_applyImpulse_2"] = asm["_emscripten_bind_btRigidBody_applyImpulse_2"];
      var _emscripten_bind_btConcaveShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConcaveShape_calculateLocalInertia_2"];
      var _emscripten_bind_RaycastInfo_get_m_groundObject_0 = Module["_emscripten_bind_RaycastInfo_get_m_groundObject_0"] = asm["_emscripten_bind_RaycastInfo_get_m_groundObject_0"];
      var _emscripten_bind_btRigidBody_setWorldTransform_1 = Module["_emscripten_bind_btRigidBody_setWorldTransform_1"] = asm["_emscripten_bind_btRigidBody_setWorldTransform_1"];
      var _emscripten_bind_btRigidBody_setAngularVelocity_1 = Module["_emscripten_bind_btRigidBody_setAngularVelocity_1"] = asm["_emscripten_bind_btRigidBody_setAngularVelocity_1"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3"];
      var _emscripten_bind_Config_get_kDP_0 = Module["_emscripten_bind_Config_get_kDP_0"] = asm["_emscripten_bind_Config_get_kDP_0"];
      var _emscripten_bind_btConvexShape_setLocalScaling_1 = Module["_emscripten_bind_btConvexShape_setLocalScaling_1"] = asm["_emscripten_bind_btConvexShape_setLocalScaling_1"];
      var _emscripten_bind_Config_get_collisions_0 = Module["_emscripten_bind_Config_get_collisions_0"] = asm["_emscripten_bind_Config_get_collisions_0"];
      var _emscripten_bind_Node_get_m_n_0 = Module["_emscripten_bind_Node_get_m_n_0"] = asm["_emscripten_bind_Node_get_m_n_0"];
      var _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2 = Module["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2"];
      var ___udivdi3 = Module["___udivdi3"] = asm["___udivdi3"];
      var _emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0 = Module["_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0"] = asm["_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0"];
      var _emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1 = Module["_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1"] = asm["_emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1"];
      var _emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1 = Module["_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1"];
      var _emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1"];
      var _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0"];
      var _emscripten_bind_RayResultCallback_hasHit_0 = Module["_emscripten_bind_RayResultCallback_hasHit_0"] = asm["_emscripten_bind_RayResultCallback_hasHit_0"];
      var _bitshift64Shl = Module["_bitshift64Shl"] = asm["_bitshift64Shl"];
      var _emscripten_bind_Config___destroy___0 = Module["_emscripten_bind_Config___destroy___0"] = asm["_emscripten_bind_Config___destroy___0"];
      var _emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1 = Module["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1"];
      var _emscripten_bind_btRaycastVehicle_getWheelTransformWS_1 = Module["_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1"] = asm["_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1"];
      var _emscripten_bind_btQuaternion_normalize_0 = Module["_emscripten_bind_btQuaternion_normalize_0"] = asm["_emscripten_bind_btQuaternion_normalize_0"];
      var _emscripten_bind_btQuaternion___destroy___0 = Module["_emscripten_bind_btQuaternion___destroy___0"] = asm["_emscripten_bind_btQuaternion___destroy___0"];
      var _emscripten_bind_btWheelInfo_get_m_frictionSlip_0 = Module["_emscripten_bind_btWheelInfo_get_m_frictionSlip_0"] = asm["_emscripten_bind_btWheelInfo_get_m_frictionSlip_0"];
      var _emscripten_bind_btConeShapeZ_setLocalScaling_1 = Module["_emscripten_bind_btConeShapeZ_setLocalScaling_1"] = asm["_emscripten_bind_btConeShapeZ_setLocalScaling_1"];
      var _emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0 = Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0"] = asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0"];
      var _emscripten_bind_btGeneric6DofSpringConstraint___destroy___0 = Module["_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint___destroy___0"];
      var _emscripten_bind_btRaycastVehicle_getNumWheels_0 = Module["_emscripten_bind_btRaycastVehicle_getNumWheels_0"] = asm["_emscripten_bind_btRaycastVehicle_getNumWheels_0"];
      var _emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1 = Module["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1"];
      var _emscripten_bind_Material_set_m_kAST_1 = Module["_emscripten_bind_Material_set_m_kAST_1"] = asm["_emscripten_bind_Material_set_m_kAST_1"];
      var _emscripten_bind_btGhostObject_setRollingFriction_1 = Module["_emscripten_bind_btGhostObject_setRollingFriction_1"] = asm["_emscripten_bind_btGhostObject_setRollingFriction_1"];
      var _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1 = Module["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"] = asm["_emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1"];
      var ___muldi3 = Module["___muldi3"] = asm["___muldi3"];
      var _emscripten_bind_btSoftBodyArray___destroy___0 = Module["_emscripten_bind_btSoftBodyArray___destroy___0"] = asm["_emscripten_bind_btSoftBodyArray___destroy___0"];
      var _emscripten_bind_btCompoundShape_btCompoundShape_0 = Module["_emscripten_bind_btCompoundShape_btCompoundShape_0"] = asm["_emscripten_bind_btCompoundShape_btCompoundShape_0"];
      var _emscripten_bind_btCompoundShape_btCompoundShape_1 = Module["_emscripten_bind_btCompoundShape_btCompoundShape_1"] = asm["_emscripten_bind_btCompoundShape_btCompoundShape_1"];
      var _emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1 = Module["_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1"] = asm["_emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1"];
      var _emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2 = Module["_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2"] = asm["_emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2"];
      var _emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1"];
      var _emscripten_bind_btSoftBody_checkLink_2 = Module["_emscripten_bind_btSoftBody_checkLink_2"] = asm["_emscripten_bind_btSoftBody_checkLink_2"];
      var _emscripten_bind_btSoftBody_getCollisionShape_0 = Module["_emscripten_bind_btSoftBody_getCollisionShape_0"] = asm["_emscripten_bind_btSoftBody_getCollisionShape_0"];
      var _emscripten_bind_Config_get_kDG_0 = Module["_emscripten_bind_Config_get_kDG_0"] = asm["_emscripten_bind_Config_get_kDG_0"];
      var _emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2 = Module["_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2"] = asm["_emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2"];
      var _emscripten_bind_Node_get_m_x_0 = Module["_emscripten_bind_Node_get_m_x_0"] = asm["_emscripten_bind_Node_get_m_x_0"];
      var _emscripten_bind_btCollisionObject_getWorldTransform_0 = Module["_emscripten_bind_btCollisionObject_getWorldTransform_0"] = asm["_emscripten_bind_btCollisionObject_getWorldTransform_0"];
      var _emscripten_bind_ClosestRayResultCallback_hasHit_0 = Module["_emscripten_bind_ClosestRayResultCallback_hasHit_0"] = asm["_emscripten_bind_ClosestRayResultCallback_hasHit_0"];
      var _emscripten_bind_btCompoundShape_addChildShape_2 = Module["_emscripten_bind_btCompoundShape_addChildShape_2"] = asm["_emscripten_bind_btCompoundShape_addChildShape_2"];
      var _emscripten_bind_btDispatcher___destroy___0 = Module["_emscripten_bind_btDispatcher___destroy___0"] = asm["_emscripten_bind_btDispatcher___destroy___0"];
      var _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0 = Module["_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0"];
      var _llvm_bswap_i16 = Module["_llvm_bswap_i16"] = asm["_llvm_bswap_i16"];
      var _emscripten_bind_btDiscreteDynamicsWorld___destroy___0 = Module["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld___destroy___0"];
      var _emscripten_bind_btConvexShape___destroy___0 = Module["_emscripten_bind_btConvexShape___destroy___0"] = asm["_emscripten_bind_btConvexShape___destroy___0"];
      var _memmove = Module["_memmove"] = asm["_memmove"];
      var _emscripten_bind_btWheelInfo_set_m_worldTransform_1 = Module["_emscripten_bind_btWheelInfo_set_m_worldTransform_1"] = asm["_emscripten_bind_btWheelInfo_set_m_worldTransform_1"];
      var _emscripten_bind_btCapsuleShapeX_setLocalScaling_1 = Module["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"] = asm["_emscripten_bind_btCapsuleShapeX_setLocalScaling_1"];
      var _emscripten_bind_btSoftBody_getCollisionFlags_0 = Module["_emscripten_bind_btSoftBody_getCollisionFlags_0"] = asm["_emscripten_bind_btSoftBody_getCollisionFlags_0"];
      var _emscripten_bind_btCollisionObject_setRestitution_1 = Module["_emscripten_bind_btCollisionObject_setRestitution_1"] = asm["_emscripten_bind_btCollisionObject_setRestitution_1"];
      var _emscripten_bind_btRigidBody_applyCentralForce_1 = Module["_emscripten_bind_btRigidBody_applyCentralForce_1"] = asm["_emscripten_bind_btRigidBody_applyCentralForce_1"];
      var _emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1 = Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1"] = asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1"];
      var _emscripten_bind_LocalConvexResult_get_m_hitFraction_0 = Module["_emscripten_bind_LocalConvexResult_get_m_hitFraction_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_hitFraction_0"];
      var _emscripten_bind_btDispatcherInfo_get_m_enableSPU_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0"];
      var _emscripten_bind_btRotationalLimitMotor_needApplyTorques_0 = Module["_emscripten_bind_btRotationalLimitMotor_needApplyTorques_0"] = asm["_emscripten_bind_btRotationalLimitMotor_needApplyTorques_0"];
      var _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0 = Module["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0"] = asm["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0"];
      var _emscripten_bind_btTransform_getRotation_0 = Module["_emscripten_bind_btTransform_getRotation_0"] = asm["_emscripten_bind_btTransform_getRotation_0"];
      var _emscripten_bind_Config_set_kSKHR_CL_1 = Module["_emscripten_bind_Config_set_kSKHR_CL_1"] = asm["_emscripten_bind_Config_set_kSKHR_CL_1"];
      var _emscripten_bind_btHingeConstraint_btHingeConstraint_6 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_6"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_6"];
      var _emscripten_bind_btHingeConstraint_btHingeConstraint_7 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_7"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_7"];
      var _emscripten_bind_btCapsuleShapeZ_getMargin_0 = Module["_emscripten_bind_btCapsuleShapeZ_getMargin_0"] = asm["_emscripten_bind_btCapsuleShapeZ_getMargin_0"];
      var _emscripten_bind_btHingeConstraint_btHingeConstraint_5 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_5"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_5"];
      var _emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0 = Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0"] = asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0"];
      var _emscripten_bind_btHingeConstraint_btHingeConstraint_3 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_3"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_3"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1"];
      var _emscripten_bind_btSoftBody_setWorldTransform_1 = Module["_emscripten_bind_btSoftBody_setWorldTransform_1"] = asm["_emscripten_bind_btSoftBody_setWorldTransform_1"];
      var _emscripten_bind_btBoxShape_setMargin_1 = Module["_emscripten_bind_btBoxShape_setMargin_1"] = asm["_emscripten_bind_btBoxShape_setMargin_1"];
      var _emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0"];
      var _emscripten_bind_Config_get_kSK_SPLT_CL_0 = Module["_emscripten_bind_Config_get_kSK_SPLT_CL_0"] = asm["_emscripten_bind_Config_get_kSK_SPLT_CL_0"];
      var _emscripten_bind_btTypedConstraint___destroy___0 = Module["_emscripten_bind_btTypedConstraint___destroy___0"] = asm["_emscripten_bind_btTypedConstraint___destroy___0"];
      var _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1 = Module["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"] = asm["_emscripten_bind_btCylinderShapeX_btCylinderShapeX_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3"];
      var _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1"];
      var _emscripten_bind_Config_set_collisions_1 = Module["_emscripten_bind_Config_set_collisions_1"] = asm["_emscripten_bind_Config_set_collisions_1"];
      var _emscripten_bind_btQuaternion_btQuaternion_4 = Module["_emscripten_bind_btQuaternion_btQuaternion_4"] = asm["_emscripten_bind_btQuaternion_btQuaternion_4"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_removeAction_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeAction_1"];
      var _emscripten_bind_btSphereShape_btSphereShape_1 = Module["_emscripten_bind_btSphereShape_btSphereShape_1"] = asm["_emscripten_bind_btSphereShape_btSphereShape_1"];
      var _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0 = Module["_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0"] = asm["_emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0"];
      var _emscripten_bind_btQuaternion_y_0 = Module["_emscripten_bind_btQuaternion_y_0"] = asm["_emscripten_bind_btQuaternion_y_0"];
      var _emscripten_bind_btCollisionWorld_addCollisionObject_1 = Module["_emscripten_bind_btCollisionWorld_addCollisionObject_1"] = asm["_emscripten_bind_btCollisionWorld_addCollisionObject_1"];
      var _emscripten_bind_btCollisionWorld_addCollisionObject_2 = Module["_emscripten_bind_btCollisionWorld_addCollisionObject_2"] = asm["_emscripten_bind_btCollisionWorld_addCollisionObject_2"];
      var _emscripten_bind_btCollisionWorld_addCollisionObject_3 = Module["_emscripten_bind_btCollisionWorld_addCollisionObject_3"] = asm["_emscripten_bind_btCollisionWorld_addCollisionObject_3"];
      var _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1"];
      var _emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1"];
      var _emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4 = Module["_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4"] = asm["_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4"];
      var _emscripten_bind_RaycastInfo_get_m_isInContact_0 = Module["_emscripten_bind_RaycastInfo_get_m_isInContact_0"] = asm["_emscripten_bind_RaycastInfo_get_m_isInContact_0"];
      var _emscripten_bind_Config_set_kKHR_1 = Module["_emscripten_bind_Config_set_kKHR_1"] = asm["_emscripten_bind_Config_set_kKHR_1"];
      var _emscripten_bind_btHeightfieldTerrainShape_setMargin_1 = Module["_emscripten_bind_btHeightfieldTerrainShape_setMargin_1"] = asm["_emscripten_bind_btHeightfieldTerrainShape_setMargin_1"];
      var _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0"];
      var _emscripten_bind_btCapsuleShape_setMargin_1 = Module["_emscripten_bind_btCapsuleShape_setMargin_1"] = asm["_emscripten_bind_btCapsuleShape_setMargin_1"];
      var _emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1 = Module["_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1"] = asm["_emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1"];
      var _emscripten_bind_btDynamicsWorld_contactTest_2 = Module["_emscripten_bind_btDynamicsWorld_contactTest_2"] = asm["_emscripten_bind_btDynamicsWorld_contactTest_2"];
      var _emscripten_bind_btCollisionObject_setUserPointer_1 = Module["_emscripten_bind_btCollisionObject_setUserPointer_1"] = asm["_emscripten_bind_btCollisionObject_setUserPointer_1"];
      var _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0 = Module["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"] = asm["_emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0"];
      var _emscripten_bind_btActionInterface___destroy___0 = Module["_emscripten_bind_btActionInterface___destroy___0"] = asm["_emscripten_bind_btActionInterface___destroy___0"];
      var _emscripten_bind_btSoftBody_generateClusters_2 = Module["_emscripten_bind_btSoftBody_generateClusters_2"] = asm["_emscripten_bind_btSoftBody_generateClusters_2"];
      var _emscripten_bind_btDefaultMotionState_setWorldTransform_1 = Module["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"] = asm["_emscripten_bind_btDefaultMotionState_setWorldTransform_1"];
      var _emscripten_bind_btSoftBody_generateClusters_1 = Module["_emscripten_bind_btSoftBody_generateClusters_1"] = asm["_emscripten_bind_btSoftBody_generateClusters_1"];
      var _emscripten_bind_RayResultCallback_get_m_collisionObject_0 = Module["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"] = asm["_emscripten_bind_RayResultCallback_get_m_collisionObject_0"];
      var _emscripten_bind_btPoint2PointConstraint_getPivotInA_0 = Module["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"] = asm["_emscripten_bind_btPoint2PointConstraint_getPivotInA_0"];
      var _emscripten_bind_Config_get_kAHR_0 = Module["_emscripten_bind_Config_get_kAHR_0"] = asm["_emscripten_bind_Config_get_kAHR_0"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2"];
      var _emscripten_bind_btCylinderShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCylinderShape_calculateLocalInertia_2"];
      var _emscripten_bind_btCompoundShape_setMargin_1 = Module["_emscripten_bind_btCompoundShape_setMargin_1"] = asm["_emscripten_bind_btCompoundShape_setMargin_1"];
      var _emscripten_bind_ClosestConvexResultCallback___destroy___0 = Module["_emscripten_bind_ClosestConvexResultCallback___destroy___0"] = asm["_emscripten_bind_ClosestConvexResultCallback___destroy___0"];
      var _emscripten_bind_btDynamicsWorld_addCollisionObject_1 = Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_1"] = asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_1"];
      var _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0"];
      var ___cxa_can_catch = Module["___cxa_can_catch"] = asm["___cxa_can_catch"];
      var _emscripten_bind_btDynamicsWorld_addCollisionObject_2 = Module["_emscripten_bind_btDynamicsWorld_addCollisionObject_2"] = asm["_emscripten_bind_btDynamicsWorld_addCollisionObject_2"];
      var _emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1"];
      var _emscripten_bind_btHeightfieldTerrainShape___destroy___0 = Module["_emscripten_bind_btHeightfieldTerrainShape___destroy___0"] = asm["_emscripten_bind_btHeightfieldTerrainShape___destroy___0"];
      var _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0 = Module["_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0"] = asm["_emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0"];
      var _emscripten_bind_Config_get_kVC_0 = Module["_emscripten_bind_Config_get_kVC_0"] = asm["_emscripten_bind_Config_get_kVC_0"];
      var _emscripten_bind_btVector4_op_mul_1 = Module["_emscripten_bind_btVector4_op_mul_1"] = asm["_emscripten_bind_btVector4_op_mul_1"];
      var _emscripten_bind_btCylinderShape_btCylinderShape_1 = Module["_emscripten_bind_btCylinderShape_btCylinderShape_1"] = asm["_emscripten_bind_btCylinderShape_btCylinderShape_1"];
      var _emscripten_bind_btPairCachingGhostObject_setActivationState_1 = Module["_emscripten_bind_btPairCachingGhostObject_setActivationState_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setActivationState_1"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1"];
      var _emscripten_bind_Material_get_m_kVST_0 = Module["_emscripten_bind_Material_get_m_kVST_0"] = asm["_emscripten_bind_Material_get_m_kVST_0"];
      var _emscripten_bind_Config_set_kVCF_1 = Module["_emscripten_bind_Config_set_kVCF_1"] = asm["_emscripten_bind_Config_set_kVCF_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3"];
      var _emscripten_bind_btGhostObject_getUserIndex_0 = Module["_emscripten_bind_btGhostObject_getUserIndex_0"] = asm["_emscripten_bind_btGhostObject_getUserIndex_0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1"];
      var _emscripten_bind_btVector3___destroy___0 = Module["_emscripten_bind_btVector3___destroy___0"] = asm["_emscripten_bind_btVector3___destroy___0"];
      var _emscripten_bind_RaycastInfo___destroy___0 = Module["_emscripten_bind_RaycastInfo___destroy___0"] = asm["_emscripten_bind_RaycastInfo___destroy___0"];
      var _emscripten_bind_btRigidBody_setAngularFactor_1 = Module["_emscripten_bind_btRigidBody_setAngularFactor_1"] = asm["_emscripten_bind_btRigidBody_setAngularFactor_1"];
      var _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2 = Module["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"] = asm["_emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2"];
      var _emscripten_bind_btConeShapeZ_btConeShapeZ_2 = Module["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"] = asm["_emscripten_bind_btConeShapeZ_btConeShapeZ_2"];
      var _emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1 = Module["_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1"] = asm["_emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1"];
      var _emscripten_bind_btMotionState_getWorldTransform_1 = Module["_emscripten_bind_btMotionState_getWorldTransform_1"] = asm["_emscripten_bind_btMotionState_getWorldTransform_1"];
      var _emscripten_bind_btDynamicsWorld_getSolverInfo_0 = Module["_emscripten_bind_btDynamicsWorld_getSolverInfo_0"] = asm["_emscripten_bind_btDynamicsWorld_getSolverInfo_0"];
      var _emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0 = Module["_emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0"] = asm["_emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0"];
      var _emscripten_bind_Config_get_kMT_0 = Module["_emscripten_bind_Config_get_kMT_0"] = asm["_emscripten_bind_Config_get_kMT_0"];
      var _emscripten_bind_btDynamicsWorld_getBroadphase_0 = Module["_emscripten_bind_btDynamicsWorld_getBroadphase_0"] = asm["_emscripten_bind_btDynamicsWorld_getBroadphase_0"];
      var _emscripten_bind_btSphereShape_getMargin_0 = Module["_emscripten_bind_btSphereShape_getMargin_0"] = asm["_emscripten_bind_btSphereShape_getMargin_0"];
      var _emscripten_bind_Config_get_timescale_0 = Module["_emscripten_bind_Config_get_timescale_0"] = asm["_emscripten_bind_Config_get_timescale_0"];
      var _emscripten_bind_btVector3_x_0 = Module["_emscripten_bind_btVector3_x_0"] = asm["_emscripten_bind_btVector3_x_0"];
      var ___cxa_is_pointer_type = Module["___cxa_is_pointer_type"] = asm["___cxa_is_pointer_type"];
      var _emscripten_bind_btConvexTriangleMeshShape___destroy___0 = Module["_emscripten_bind_btConvexTriangleMeshShape___destroy___0"] = asm["_emscripten_bind_btConvexTriangleMeshShape___destroy___0"];
      var _emscripten_bind_btCollisionObject_getCollisionShape_0 = Module["_emscripten_bind_btCollisionObject_getCollisionShape_0"] = asm["_emscripten_bind_btCollisionObject_getCollisionShape_0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4 = Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4"];
      var _emscripten_bind_btManifoldPoint___destroy___0 = Module["_emscripten_bind_btManifoldPoint___destroy___0"] = asm["_emscripten_bind_btManifoldPoint___destroy___0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1"];
      var _emscripten_bind_btVector4_length_0 = Module["_emscripten_bind_btVector4_length_0"] = asm["_emscripten_bind_btVector4_length_0"];
      var _emscripten_bind_btGhostObject_setUserIndex_1 = Module["_emscripten_bind_btGhostObject_setUserIndex_1"] = asm["_emscripten_bind_btGhostObject_setUserIndex_1"];
      var _emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1 = Module["_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1"] = asm["_emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1"];
      var _emscripten_bind_btGhostObject_setRestitution_1 = Module["_emscripten_bind_btGhostObject_setRestitution_1"] = asm["_emscripten_bind_btGhostObject_setRestitution_1"];
      var _emscripten_bind_btConeTwistConstraint_setAngularOnly_1 = Module["_emscripten_bind_btConeTwistConstraint_setAngularOnly_1"] = asm["_emscripten_bind_btConeTwistConstraint_setAngularOnly_1"];
      var _emscripten_bind_btCollisionObject_setFriction_1 = Module["_emscripten_bind_btCollisionObject_setFriction_1"] = asm["_emscripten_bind_btCollisionObject_setFriction_1"];
      var _emscripten_bind_btDefaultCollisionConfiguration___destroy___0 = Module["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"] = asm["_emscripten_bind_btDefaultCollisionConfiguration___destroy___0"];
      var _emscripten_bind_btRigidBody_setMassProps_2 = Module["_emscripten_bind_btRigidBody_setMassProps_2"] = asm["_emscripten_bind_btRigidBody_setMassProps_2"];
      var _emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1 = Module["_emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1"] = asm["_emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1"];
      var _emscripten_bind_btVector3_setValue_3 = Module["_emscripten_bind_btVector3_setValue_3"] = asm["_emscripten_bind_btVector3_setValue_3"];
      var _emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1 = Module["_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1"];
      var _emscripten_bind_RaycastInfo_get_m_suspensionLength_0 = Module["_emscripten_bind_RaycastInfo_get_m_suspensionLength_0"] = asm["_emscripten_bind_RaycastInfo_get_m_suspensionLength_0"];
      var _emscripten_bind_btGhostObject_getCollisionFlags_0 = Module["_emscripten_bind_btGhostObject_getCollisionFlags_0"] = asm["_emscripten_bind_btGhostObject_getCollisionFlags_0"];
      var _emscripten_bind_btCapsuleShapeX___destroy___0 = Module["_emscripten_bind_btCapsuleShapeX___destroy___0"] = asm["_emscripten_bind_btCapsuleShapeX___destroy___0"];
      var _emscripten_bind_Config_set_kDG_1 = Module["_emscripten_bind_Config_set_kDG_1"] = asm["_emscripten_bind_Config_set_kDG_1"];
      var _emscripten_bind_Material_get_m_flags_0 = Module["_emscripten_bind_Material_get_m_flags_0"] = asm["_emscripten_bind_Material_get_m_flags_0"];
      var _emscripten_bind_btHingeConstraint_setLimit_4 = Module["_emscripten_bind_btHingeConstraint_setLimit_4"] = asm["_emscripten_bind_btHingeConstraint_setLimit_4"];
      var _emscripten_bind_btHingeConstraint_setLimit_5 = Module["_emscripten_bind_btHingeConstraint_setLimit_5"] = asm["_emscripten_bind_btHingeConstraint_setLimit_5"];
      var _emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0 = Module["_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0"] = asm["_emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0"];
      var _emscripten_bind_btDefaultVehicleRaycaster___destroy___0 = Module["_emscripten_bind_btDefaultVehicleRaycaster___destroy___0"] = asm["_emscripten_bind_btDefaultVehicleRaycaster___destroy___0"];
      var _emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1 = Module["_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1"] = asm["_emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1"];
      var _emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1 = Module["_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1"] = asm["_emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1"];
      var _emscripten_bind_btSoftBody_scale_1 = Module["_emscripten_bind_btSoftBody_scale_1"] = asm["_emscripten_bind_btSoftBody_scale_1"];
      var _emscripten_bind_Config_get_citerations_0 = Module["_emscripten_bind_Config_get_citerations_0"] = asm["_emscripten_bind_Config_get_citerations_0"];
      var _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0"];
      var _emscripten_bind_btGhostObject_getCollisionShape_0 = Module["_emscripten_bind_btGhostObject_getCollisionShape_0"] = asm["_emscripten_bind_btGhostObject_getCollisionShape_0"];
      var _emscripten_bind_btCollisionObject_setAnisotropicFriction_2 = Module["_emscripten_bind_btCollisionObject_setAnisotropicFriction_2"] = asm["_emscripten_bind_btCollisionObject_setAnisotropicFriction_2"];
      var _emscripten_bind_btBoxShape___destroy___0 = Module["_emscripten_bind_btBoxShape___destroy___0"] = asm["_emscripten_bind_btBoxShape___destroy___0"];
      var _emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0 = Module["_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0"] = asm["_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0"];
      var _emscripten_bind_btPersistentManifold_getContactPoint_1 = Module["_emscripten_bind_btPersistentManifold_getContactPoint_1"] = asm["_emscripten_bind_btPersistentManifold_getContactPoint_1"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0"];
      var _emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1 = Module["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1"] = asm["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1"];
      var _emscripten_bind_RaycastInfo_set_m_groundObject_1 = Module["_emscripten_bind_RaycastInfo_set_m_groundObject_1"] = asm["_emscripten_bind_RaycastInfo_set_m_groundObject_1"];
      var _emscripten_bind_btGhostObject_activate_1 = Module["_emscripten_bind_btGhostObject_activate_1"] = asm["_emscripten_bind_btGhostObject_activate_1"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2"];
      var _emscripten_bind_btManifoldPoint_getPositionWorldOnB_0 = Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"] = asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0"];
      var _emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0 = Module["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0"];
      var _emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0 = Module["_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0"] = asm["_emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0"];
      var _emscripten_bind_btSphereShape_setMargin_1 = Module["_emscripten_bind_btSphereShape_setMargin_1"] = asm["_emscripten_bind_btSphereShape_setMargin_1"];
      var _emscripten_bind_btSoftBody_get_m_cfg_0 = Module["_emscripten_bind_btSoftBody_get_m_cfg_0"] = asm["_emscripten_bind_btSoftBody_get_m_cfg_0"];
      var _emscripten_bind_btCollisionObject_setUserIndex_1 = Module["_emscripten_bind_btCollisionObject_setUserIndex_1"] = asm["_emscripten_bind_btCollisionObject_setUserIndex_1"];
      var _emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1 = Module["_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1"] = asm["_emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1"];
      var _emscripten_bind_btSliderConstraint_setUpperAngLimit_1 = Module["_emscripten_bind_btSliderConstraint_setUpperAngLimit_1"] = asm["_emscripten_bind_btSliderConstraint_setUpperAngLimit_1"];
      var _emscripten_bind_btDynamicsWorld_contactPairTest_3 = Module["_emscripten_bind_btDynamicsWorld_contactPairTest_3"] = asm["_emscripten_bind_btDynamicsWorld_contactPairTest_3"];
      var _emscripten_bind_btCollisionWorld_getPairCache_0 = Module["_emscripten_bind_btCollisionWorld_getPairCache_0"] = asm["_emscripten_bind_btCollisionWorld_getPairCache_0"];
      var _emscripten_bind_btConeTwistConstraint_setMotorTarget_1 = Module["_emscripten_bind_btConeTwistConstraint_setMotorTarget_1"] = asm["_emscripten_bind_btConeTwistConstraint_setMotorTarget_1"];
      var _emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1"];
      var _emscripten_bind_btWheelInfo_set_m_rollInfluence_1 = Module["_emscripten_bind_btWheelInfo_set_m_rollInfluence_1"] = asm["_emscripten_bind_btWheelInfo_set_m_rollInfluence_1"];
      var _emscripten_bind_btGhostObject_setCcdMotionThreshold_1 = Module["_emscripten_bind_btGhostObject_setCcdMotionThreshold_1"] = asm["_emscripten_bind_btGhostObject_setCcdMotionThreshold_1"];
      var _emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1"];
      var _emscripten_enum_PHY_ScalarType_PHY_INTEGER = Module["_emscripten_enum_PHY_ScalarType_PHY_INTEGER"] = asm["_emscripten_enum_PHY_ScalarType_PHY_INTEGER"];
      var _emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10 = Module["_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10"] = asm["_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10"];
      var _emscripten_bind_btGhostObject_forceActivationState_1 = Module["_emscripten_bind_btGhostObject_forceActivationState_1"] = asm["_emscripten_bind_btGhostObject_forceActivationState_1"];
      var _emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5 = Module["_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5"] = asm["_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5"];
      var _emscripten_bind_btVector4_y_0 = Module["_emscripten_bind_btVector4_y_0"] = asm["_emscripten_bind_btVector4_y_0"];
      var _emscripten_bind_VoidPtr___destroy___0 = Module["_emscripten_bind_VoidPtr___destroy___0"] = asm["_emscripten_bind_VoidPtr___destroy___0"];
      var _emscripten_bind_RaycastInfo_set_m_contactNormalWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_contactNormalWS_1"];
      var _emscripten_bind_btSliderConstraint_setLowerAngLimit_1 = Module["_emscripten_bind_btSliderConstraint_setLowerAngLimit_1"] = asm["_emscripten_bind_btSliderConstraint_setLowerAngLimit_1"];
      var _emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0"];
      var _emscripten_bind_RaycastInfo_set_m_contactPointWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_contactPointWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_contactPointWS_1"];
      var _emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2 = Module["_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2"] = asm["_emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2"];
      var _emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0"];
      var _emscripten_bind_btSoftBody_setContactProcessingThreshold_1 = Module["_emscripten_bind_btSoftBody_setContactProcessingThreshold_1"] = asm["_emscripten_bind_btSoftBody_setContactProcessingThreshold_1"];
      var _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0 = Module["_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0"];
      var _emscripten_bind_btSliderConstraint_enableFeedback_1 = Module["_emscripten_bind_btSliderConstraint_enableFeedback_1"] = asm["_emscripten_bind_btSliderConstraint_enableFeedback_1"];
      var _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0 = Module["_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0"] = asm["_emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0"];
      var _emscripten_enum_PHY_ScalarType_PHY_DOUBLE = Module["_emscripten_enum_PHY_ScalarType_PHY_DOUBLE"] = asm["_emscripten_enum_PHY_ScalarType_PHY_DOUBLE"];
      var _emscripten_bind_btConstraintSetting_get_m_tau_0 = Module["_emscripten_bind_btConstraintSetting_get_m_tau_0"] = asm["_emscripten_bind_btConstraintSetting_get_m_tau_0"];
      var _emscripten_bind_btConeShape_setLocalScaling_1 = Module["_emscripten_bind_btConeShape_setLocalScaling_1"] = asm["_emscripten_bind_btConeShape_setLocalScaling_1"];
      var _emscripten_bind_btCollisionObject_setCollisionShape_1 = Module["_emscripten_bind_btCollisionObject_setCollisionShape_1"] = asm["_emscripten_bind_btCollisionObject_setCollisionShape_1"];
      var _emscripten_bind_btCollisionShape___destroy___0 = Module["_emscripten_bind_btCollisionShape___destroy___0"] = asm["_emscripten_bind_btCollisionShape___destroy___0"];
      var _emscripten_bind_btMatrix3x3_getRow_1 = Module["_emscripten_bind_btMatrix3x3_getRow_1"] = asm["_emscripten_bind_btMatrix3x3_getRow_1"];
      var _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0 = Module["_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0"] = asm["_emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0"];
      var _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0"];
      var _emscripten_bind_btSoftBody_getUserIndex_0 = Module["_emscripten_bind_btSoftBody_getUserIndex_0"] = asm["_emscripten_bind_btSoftBody_getUserIndex_0"];
      var _emscripten_bind_btPairCachingGhostObject_setCollisionShape_1 = Module["_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setCollisionShape_1"];
      var _emscripten_bind_btKinematicCharacterController_warp_1 = Module["_emscripten_bind_btKinematicCharacterController_warp_1"] = asm["_emscripten_bind_btKinematicCharacterController_warp_1"];
      var _emscripten_bind_btContactSolverInfo___destroy___0 = Module["_emscripten_bind_btContactSolverInfo___destroy___0"] = asm["_emscripten_bind_btContactSolverInfo___destroy___0"];
      var _emscripten_bind_btSoftBody_getWorldTransform_0 = Module["_emscripten_bind_btSoftBody_getWorldTransform_0"] = asm["_emscripten_bind_btSoftBody_getWorldTransform_0"];
      var ___muldsi3 = Module["___muldsi3"] = asm["___muldsi3"];
      var _emscripten_bind_btTriangleMesh___destroy___0 = Module["_emscripten_bind_btTriangleMesh___destroy___0"] = asm["_emscripten_bind_btTriangleMesh___destroy___0"];
      var _emscripten_bind_btKinematicCharacterController_preStep_1 = Module["_emscripten_bind_btKinematicCharacterController_preStep_1"] = asm["_emscripten_bind_btKinematicCharacterController_preStep_1"];
      var _emscripten_bind_btRaycastVehicle_applyEngineForce_2 = Module["_emscripten_bind_btRaycastVehicle_applyEngineForce_2"] = asm["_emscripten_bind_btRaycastVehicle_applyEngineForce_2"];
      var _emscripten_bind_btBoxShape_calculateLocalInertia_2 = Module["_emscripten_bind_btBoxShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btBoxShape_calculateLocalInertia_2"];
      var _emscripten_bind_btRaycastVehicle_setBrake_2 = Module["_emscripten_bind_btRaycastVehicle_setBrake_2"] = asm["_emscripten_bind_btRaycastVehicle_setBrake_2"];
      var _emscripten_bind_ConcreteContactResultCallback___destroy___0 = Module["_emscripten_bind_ConcreteContactResultCallback___destroy___0"] = asm["_emscripten_bind_ConcreteContactResultCallback___destroy___0"];
      var _emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1 = Module["_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1"] = asm["_emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1"];
      var _emscripten_bind_btCollisionObject___destroy___0 = Module["_emscripten_bind_btCollisionObject___destroy___0"] = asm["_emscripten_bind_btCollisionObject___destroy___0"];
      var _emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1 = Module["_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1"];
      var _emscripten_bind_btConvexTriangleMeshShape_setMargin_1 = Module["_emscripten_bind_btConvexTriangleMeshShape_setMargin_1"] = asm["_emscripten_bind_btConvexTriangleMeshShape_setMargin_1"];
      var _emscripten_bind_Config_get_kSSHR_CL_0 = Module["_emscripten_bind_Config_get_kSSHR_CL_0"] = asm["_emscripten_bind_Config_get_kSSHR_CL_0"];
      var _emscripten_bind_btRotationalLimitMotor_isLimited_0 = Module["_emscripten_bind_btRotationalLimitMotor_isLimited_0"] = asm["_emscripten_bind_btRotationalLimitMotor_isLimited_0"];
      var _emscripten_bind_btDispatcherInfo_set_m_timeStep_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_timeStep_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_timeStep_1"];
      var _emscripten_bind_btVector3_btVector3_3 = Module["_emscripten_bind_btVector3_btVector3_3"] = asm["_emscripten_bind_btVector3_btVector3_3"];
      var _emscripten_bind_btVector3_btVector3_0 = Module["_emscripten_bind_btVector3_btVector3_0"] = asm["_emscripten_bind_btVector3_btVector3_0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_getGravity_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0"];
      var _emscripten_bind_btVector3_z_0 = Module["_emscripten_bind_btVector3_z_0"] = asm["_emscripten_bind_btVector3_z_0"];
      var _emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0"];
      var _emscripten_bind_btCollisionShape_getMargin_0 = Module["_emscripten_bind_btCollisionShape_getMargin_0"] = asm["_emscripten_bind_btCollisionShape_getMargin_0"];
      var _emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1 = Module["_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1"] = asm["_emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1"];
      var _emscripten_bind_btBroadphaseInterface___destroy___0 = Module["_emscripten_bind_btBroadphaseInterface___destroy___0"] = asm["_emscripten_bind_btBroadphaseInterface___destroy___0"];
      var _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0 = Module["_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0"];
      var _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7 = Module["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"] = asm["_emscripten_bind_ConcreteContactResultCallback_addSingleResult_7"];
      var _emscripten_bind_RaycastInfo_get_m_hardPointWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_hardPointWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_hardPointWS_0"];
      var _emscripten_bind_btConeTwistConstraint___destroy___0 = Module["_emscripten_bind_btConeTwistConstraint___destroy___0"] = asm["_emscripten_bind_btConeTwistConstraint___destroy___0"];
      var _emscripten_bind_btQuadWord___destroy___0 = Module["_emscripten_bind_btQuadWord___destroy___0"] = asm["_emscripten_bind_btQuadWord___destroy___0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3"];
      var _emscripten_bind_btQuaternion_setEulerZYX_3 = Module["_emscripten_bind_btQuaternion_setEulerZYX_3"] = asm["_emscripten_bind_btQuaternion_setEulerZYX_3"];
      var _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2"];
      var _emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0 = Module["_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0"] = asm["_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0"];
      var _emscripten_bind_btRigidBody_setCenterOfMassTransform_1 = Module["_emscripten_bind_btRigidBody_setCenterOfMassTransform_1"] = asm["_emscripten_bind_btRigidBody_setCenterOfMassTransform_1"];
      var _emscripten_bind_btSoftBody_setUserIndex_1 = Module["_emscripten_bind_btSoftBody_setUserIndex_1"] = asm["_emscripten_bind_btSoftBody_setUserIndex_1"];
      var _emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0 = Module["_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0"] = asm["_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0"];
      var _emscripten_bind_btSoftBody_setCollisionShape_1 = Module["_emscripten_bind_btSoftBody_setCollisionShape_1"] = asm["_emscripten_bind_btSoftBody_setCollisionShape_1"];
      var _emscripten_bind_btGhostObject_setAnisotropicFriction_2 = Module["_emscripten_bind_btGhostObject_setAnisotropicFriction_2"] = asm["_emscripten_bind_btGhostObject_setAnisotropicFriction_2"];
      var _emscripten_bind_btConstraintSolver___destroy___0 = Module["_emscripten_bind_btConstraintSolver___destroy___0"] = asm["_emscripten_bind_btConstraintSolver___destroy___0"];
      var _emscripten_bind_btSoftBody_isActive_0 = Module["_emscripten_bind_btSoftBody_isActive_0"] = asm["_emscripten_bind_btSoftBody_isActive_0"];
      var _emscripten_bind_btCapsuleShape_btCapsuleShape_2 = Module["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"] = asm["_emscripten_bind_btCapsuleShape_btCapsuleShape_2"];
      var _emscripten_bind_btTypedConstraint_enableFeedback_1 = Module["_emscripten_bind_btTypedConstraint_enableFeedback_1"] = asm["_emscripten_bind_btTypedConstraint_enableFeedback_1"];
      var _emscripten_bind_btSoftBody_setRollingFriction_1 = Module["_emscripten_bind_btSoftBody_setRollingFriction_1"] = asm["_emscripten_bind_btSoftBody_setRollingFriction_1"];
      var _emscripten_bind_btGhostObject_activate_0 = Module["_emscripten_bind_btGhostObject_activate_0"] = asm["_emscripten_bind_btGhostObject_activate_0"];
      var _emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1 = Module["_emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1"];
      var _emscripten_bind_btConstraintSetting_btConstraintSetting_0 = Module["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"] = asm["_emscripten_bind_btConstraintSetting_btConstraintSetting_0"];
      var _emscripten_bind_btCapsuleShape_setLocalScaling_1 = Module["_emscripten_bind_btCapsuleShape_setLocalScaling_1"] = asm["_emscripten_bind_btCapsuleShape_setLocalScaling_1"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0"];
      var _emscripten_bind_btRigidBody_setAnisotropicFriction_2 = Module["_emscripten_bind_btRigidBody_setAnisotropicFriction_2"] = asm["_emscripten_bind_btRigidBody_setAnisotropicFriction_2"];
      var _emscripten_bind_btSoftBody_btSoftBody_4 = Module["_emscripten_bind_btSoftBody_btSoftBody_4"] = asm["_emscripten_bind_btSoftBody_btSoftBody_4"];
      var _emscripten_bind_btTriangleMeshShape_setLocalScaling_1 = Module["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"] = asm["_emscripten_bind_btTriangleMeshShape_setLocalScaling_1"];
      var _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3 = Module["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3"];
      var _emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1 = Module["_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1"] = asm["_emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1"];
      var _emscripten_bind_btVector3_op_add_1 = Module["_emscripten_bind_btVector3_op_add_1"] = asm["_emscripten_bind_btVector3_op_add_1"];
      var _emscripten_bind_btPersistentManifold_btPersistentManifold_0 = Module["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"] = asm["_emscripten_bind_btPersistentManifold_btPersistentManifold_0"];
      var _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0 = Module["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0"] = asm["_emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0"];
      var _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2 = Module["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"] = asm["_emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2"];
      var _emscripten_bind_btVector4___destroy___0 = Module["_emscripten_bind_btVector4___destroy___0"] = asm["_emscripten_bind_btVector4___destroy___0"];
      var _emscripten_bind_btPairCachingGhostObject_isKinematicObject_0 = Module["_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0"] = asm["_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0"];
      var _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1"];
      var _emscripten_bind_tNodeArray_at_1 = Module["_emscripten_bind_tNodeArray_at_1"] = asm["_emscripten_bind_tNodeArray_at_1"];
      var _i64Add = Module["_i64Add"] = asm["_i64Add"];
      var _emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2 = Module["_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0"];
      var _emscripten_bind_btCollisionObject_setCcdMotionThreshold_1 = Module["_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1"] = asm["_emscripten_bind_btCollisionObject_setCcdMotionThreshold_1"];
      var _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4 = Module["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4"] = asm["_emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4"];
      var _emscripten_bind_btSoftBody_set_m_cfg_1 = Module["_emscripten_bind_btSoftBody_set_m_cfg_1"] = asm["_emscripten_bind_btSoftBody_set_m_cfg_1"];
      var _emscripten_bind_btQuadWord_setZ_1 = Module["_emscripten_bind_btQuadWord_setZ_1"] = asm["_emscripten_bind_btQuadWord_setZ_1"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0"];
      var _emscripten_bind_btPoint2PointConstraint_getPivotInB_0 = Module["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"] = asm["_emscripten_bind_btPoint2PointConstraint_getPivotInB_0"];
      var _emscripten_bind_btKinematicCharacterController_playerStep_2 = Module["_emscripten_bind_btKinematicCharacterController_playerStep_2"] = asm["_emscripten_bind_btKinematicCharacterController_playerStep_2"];
      var _emscripten_bind_btDispatcherInfo___destroy___0 = Module["_emscripten_bind_btDispatcherInfo___destroy___0"] = asm["_emscripten_bind_btDispatcherInfo___destroy___0"];
      var _emscripten_bind_btCapsuleShape_getMargin_0 = Module["_emscripten_bind_btCapsuleShape_getMargin_0"] = asm["_emscripten_bind_btCapsuleShape_getMargin_0"];
      var _emscripten_bind_btCylinderShape_getMargin_0 = Module["_emscripten_bind_btCylinderShape_getMargin_0"] = asm["_emscripten_bind_btCylinderShape_getMargin_0"];
      var _emscripten_bind_btSoftBodyArray_size_0 = Module["_emscripten_bind_btSoftBodyArray_size_0"] = asm["_emscripten_bind_btSoftBodyArray_size_0"];
      var _emscripten_bind_btStaticPlaneShape_setLocalScaling_1 = Module["_emscripten_bind_btStaticPlaneShape_setLocalScaling_1"] = asm["_emscripten_bind_btStaticPlaneShape_setLocalScaling_1"];
      var _emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2"];
      var _emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0 = Module["_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0"];
      var _emscripten_bind_btGhostObject_getWorldTransform_0 = Module["_emscripten_bind_btGhostObject_getWorldTransform_0"] = asm["_emscripten_bind_btGhostObject_getWorldTransform_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0 = Module["_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0"];
      var _emscripten_bind_LocalConvexResult_set_m_hitFraction_1 = Module["_emscripten_bind_LocalConvexResult_set_m_hitFraction_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_hitFraction_1"];
      var _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2"];
      var _emscripten_bind_btDispatcherInfo_get_m_timeStep_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_timeStep_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_timeStep_0"];
      var _emscripten_bind_btHingeConstraint_setAngularOnly_1 = Module["_emscripten_bind_btHingeConstraint_setAngularOnly_1"] = asm["_emscripten_bind_btHingeConstraint_setAngularOnly_1"];
      var _emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1 = Module["_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1"];
      var _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1 = Module["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"] = asm["_emscripten_bind_btConstraintSetting_set_m_impulseClamp_1"];
      var _emscripten_bind_btMotionState___destroy___0 = Module["_emscripten_bind_btMotionState___destroy___0"] = asm["_emscripten_bind_btMotionState___destroy___0"];
      var _emscripten_bind_btCollisionObject_setCollisionFlags_1 = Module["_emscripten_bind_btCollisionObject_setCollisionFlags_1"] = asm["_emscripten_bind_btCollisionObject_setCollisionFlags_1"];
      var _emscripten_bind_Config_get_kPR_0 = Module["_emscripten_bind_Config_get_kPR_0"] = asm["_emscripten_bind_Config_get_kPR_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1"];
      var _emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3"];
      var _emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1 = Module["_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1"] = asm["_emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1"];
      var _emscripten_bind_RaycastInfo_set_m_suspensionLength_1 = Module["_emscripten_bind_RaycastInfo_set_m_suspensionLength_1"] = asm["_emscripten_bind_RaycastInfo_set_m_suspensionLength_1"];
      var _emscripten_bind_btDispatcher_getManifoldByIndexInternal_1 = Module["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"] = asm["_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1"];
      var _emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1 = Module["_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1"] = asm["_emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1"];
      var _emscripten_bind_btSoftBodyWorldInfo___destroy___0 = Module["_emscripten_bind_btSoftBodyWorldInfo___destroy___0"] = asm["_emscripten_bind_btSoftBodyWorldInfo___destroy___0"];
      var _emscripten_bind_btConvexTriangleMeshShape_getMargin_0 = Module["_emscripten_bind_btConvexTriangleMeshShape_getMargin_0"] = asm["_emscripten_bind_btConvexTriangleMeshShape_getMargin_0"];
      var _emscripten_bind_btSoftBodySolver___destroy___0 = Module["_emscripten_bind_btSoftBodySolver___destroy___0"] = asm["_emscripten_bind_btSoftBodySolver___destroy___0"];
      var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
      var _emscripten_bind_btWheelInfo_set_m_steering_1 = Module["_emscripten_bind_btWheelInfo_set_m_steering_1"] = asm["_emscripten_bind_btWheelInfo_set_m_steering_1"];
      var _emscripten_bind_Node_set_m_x_1 = Module["_emscripten_bind_Node_set_m_x_1"] = asm["_emscripten_bind_Node_set_m_x_1"];
      var _emscripten_bind_btPairCachingGhostObject_setWorldTransform_1 = Module["_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setWorldTransform_1"];
      var _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0"];
      var _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0 = Module["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"] = asm["_emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0"];
      var _emscripten_bind_btConeShape___destroy___0 = Module["_emscripten_bind_btConeShape___destroy___0"] = asm["_emscripten_bind_btConeShape___destroy___0"];
      var _emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1 = Module["_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1"] = asm["_emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1"];
      var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4 = Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"] = asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4"];
      var _emscripten_bind_btConeTwistConstraint_setLimit_2 = Module["_emscripten_bind_btConeTwistConstraint_setLimit_2"] = asm["_emscripten_bind_btConeTwistConstraint_setLimit_2"];
      var _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2 = Module["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"] = asm["_emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2"];
      var _emscripten_bind_btKinematicCharacterController_setJumpSpeed_1 = Module["_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1"] = asm["_emscripten_bind_btKinematicCharacterController_setJumpSpeed_1"];
      var _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0 = Module["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0"] = asm["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0"];
      var _emscripten_bind_btConeShapeX_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShapeX_calculateLocalInertia_2"];
      var _emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88 = Module["_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88"] = asm["_emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88"];
      var _emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1 = Module["_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1"] = asm["_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1"];
      var _emscripten_bind_btGhostObject_getNumOverlappingObjects_0 = Module["_emscripten_bind_btGhostObject_getNumOverlappingObjects_0"] = asm["_emscripten_bind_btGhostObject_getNumOverlappingObjects_0"];
      var _emscripten_bind_btRigidBodyConstructionInfo___destroy___0 = Module["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo___destroy___0"];
      var _emscripten_bind_btRigidBody_getWorldTransform_0 = Module["_emscripten_bind_btRigidBody_getWorldTransform_0"] = asm["_emscripten_bind_btRigidBody_getWorldTransform_0"];
      var _sbrk = Module["_sbrk"] = asm["_sbrk"];
      var _emscripten_bind_btPoint2PointConstraint_setPivotA_1 = Module["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"] = asm["_emscripten_bind_btPoint2PointConstraint_setPivotA_1"];
      var _emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1"];
      var _memcpy = Module["_memcpy"] = asm["_memcpy"];
      var _emscripten_bind_Config_get_maxvolume_0 = Module["_emscripten_bind_Config_get_maxvolume_0"] = asm["_emscripten_bind_Config_get_maxvolume_0"];
      var _emscripten_bind_btCapsuleShape_calculateLocalInertia_2 = Module["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btCapsuleShape_calculateLocalInertia_2"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0"];
      var _emscripten_bind_btVector3_y_0 = Module["_emscripten_bind_btVector3_y_0"] = asm["_emscripten_bind_btVector3_y_0"];
      var _emscripten_bind_btDispatcherInfo_set_m_useEpa_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_useEpa_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_useEpa_1"];
      var _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0 = Module["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0"];
      var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2 = Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"] = asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2"];
      var _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3 = Module["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"] = asm["_emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3"];
      var _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0 = Module["_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0"] = asm["_emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0"];
      var _emscripten_bind_Config_set_kDF_1 = Module["_emscripten_bind_Config_set_kDF_1"] = asm["_emscripten_bind_Config_set_kDF_1"];
      var _emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9 = Module["_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9"] = asm["_emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9"];
      var _emscripten_bind_btSoftBody_activate_1 = Module["_emscripten_bind_btSoftBody_activate_1"] = asm["_emscripten_bind_btSoftBody_activate_1"];
      var _emscripten_bind_btSoftBody_activate_0 = Module["_emscripten_bind_btSoftBody_activate_0"] = asm["_emscripten_bind_btSoftBody_activate_0"];
      var _emscripten_bind_btGhostObject_setCollisionShape_1 = Module["_emscripten_bind_btGhostObject_setCollisionShape_1"] = asm["_emscripten_bind_btGhostObject_setCollisionShape_1"];
      var _emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1 = Module["_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1"] = asm["_emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1"];
      var _emscripten_bind_btRigidBody_setRollingFriction_1 = Module["_emscripten_bind_btRigidBody_setRollingFriction_1"] = asm["_emscripten_bind_btRigidBody_setRollingFriction_1"];
      var _emscripten_bind_btPairCachingGhostObject_setRollingFriction_1 = Module["_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setRollingFriction_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_setGravity_1"];
      var _emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1 = Module["_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1"] = asm["_emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1"];
      var _emscripten_bind_btVector4_z_0 = Module["_emscripten_bind_btVector4_z_0"] = asm["_emscripten_bind_btVector4_z_0"];
      var _emscripten_bind_btCollisionObject_forceActivationState_1 = Module["_emscripten_bind_btCollisionObject_forceActivationState_1"] = asm["_emscripten_bind_btCollisionObject_forceActivationState_1"];
      var _emscripten_bind_btKinematicCharacterController_onGround_0 = Module["_emscripten_bind_btKinematicCharacterController_onGround_0"] = asm["_emscripten_bind_btKinematicCharacterController_onGround_0"];
      var _emscripten_bind_btRaycastVehicle_getWheelInfo_1 = Module["_emscripten_bind_btRaycastVehicle_getWheelInfo_1"] = asm["_emscripten_bind_btRaycastVehicle_getWheelInfo_1"];
      var _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0"];
      var _emscripten_bind_btSoftBody_appendFace_4 = Module["_emscripten_bind_btSoftBody_appendFace_4"] = asm["_emscripten_bind_btSoftBody_appendFace_4"];
      var _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1"];
      var _emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0 = Module["_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0"] = asm["_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0"];
      var _emscripten_bind_btVector3_normalize_0 = Module["_emscripten_bind_btVector3_normalize_0"] = asm["_emscripten_bind_btVector3_normalize_0"];
      var _emscripten_bind_btSoftBody_setFriction_1 = Module["_emscripten_bind_btSoftBody_setFriction_1"] = asm["_emscripten_bind_btSoftBody_setFriction_1"];
      var runPostSets = Module["runPostSets"] = asm["runPostSets"];
      var _emscripten_bind_btRigidBody_setSleepingThresholds_2 = Module["_emscripten_bind_btRigidBody_setSleepingThresholds_2"] = asm["_emscripten_bind_btRigidBody_setSleepingThresholds_2"];
      var _emscripten_bind_btSoftBody_upcast_1 = Module["_emscripten_bind_btSoftBody_upcast_1"] = asm["_emscripten_bind_btSoftBody_upcast_1"];
      var _emscripten_bind_btCollisionObject_setWorldTransform_1 = Module["_emscripten_bind_btCollisionObject_setWorldTransform_1"] = asm["_emscripten_bind_btCollisionObject_setWorldTransform_1"];
      var _emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0 = Module["_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0"] = asm["_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0"];
      var _emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1 = Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1"] = asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1"];
      var _emscripten_bind_btConvexHullShape_setLocalScaling_1 = Module["_emscripten_bind_btConvexHullShape_setLocalScaling_1"] = asm["_emscripten_bind_btConvexHullShape_setLocalScaling_1"];
      var _emscripten_bind_btStridingMeshInterface___destroy___0 = Module["_emscripten_bind_btStridingMeshInterface___destroy___0"] = asm["_emscripten_bind_btStridingMeshInterface___destroy___0"];
      var _emscripten_bind_btSoftBody_setActivationState_1 = Module["_emscripten_bind_btSoftBody_setActivationState_1"] = asm["_emscripten_bind_btSoftBody_setActivationState_1"];
      var _emscripten_bind_btRigidBody_getUserIndex_0 = Module["_emscripten_bind_btRigidBody_getUserIndex_0"] = asm["_emscripten_bind_btRigidBody_getUserIndex_0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0"];
      var _emscripten_bind_btSoftBodyHelpers_CreatePatch_9 = Module["_emscripten_bind_btSoftBodyHelpers_CreatePatch_9"] = asm["_emscripten_bind_btSoftBodyHelpers_CreatePatch_9"];
      var _emscripten_bind_btDispatcher_getNumManifolds_0 = Module["_emscripten_bind_btDispatcher_getNumManifolds_0"] = asm["_emscripten_bind_btDispatcher_getNumManifolds_0"];
      var _emscripten_bind_btConvexShape_setMargin_1 = Module["_emscripten_bind_btConvexShape_setMargin_1"] = asm["_emscripten_bind_btConvexShape_setMargin_1"];
      var _emscripten_bind_btSoftBody_get_m_nodes_0 = Module["_emscripten_bind_btSoftBody_get_m_nodes_0"] = asm["_emscripten_bind_btSoftBody_get_m_nodes_0"];
      var _emscripten_bind_btSoftBody___destroy___0 = Module["_emscripten_bind_btSoftBody___destroy___0"] = asm["_emscripten_bind_btSoftBody___destroy___0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0 = Module["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0"];
      var _emscripten_bind_btRigidBody_activate_1 = Module["_emscripten_bind_btRigidBody_activate_1"] = asm["_emscripten_bind_btRigidBody_activate_1"];
      var _emscripten_bind_btRigidBody_activate_0 = Module["_emscripten_bind_btRigidBody_activate_0"] = asm["_emscripten_bind_btRigidBody_activate_0"];
      var _emscripten_bind_btRaycastVehicle___destroy___0 = Module["_emscripten_bind_btRaycastVehicle___destroy___0"] = asm["_emscripten_bind_btRaycastVehicle___destroy___0"];
      var _emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0 = Module["_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0"] = asm["_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0"];
      var _emscripten_bind_Material_set_m_kVST_1 = Module["_emscripten_bind_Material_set_m_kVST_1"] = asm["_emscripten_bind_Material_set_m_kVST_1"];
      var _emscripten_bind_btGhostObject_setActivationState_1 = Module["_emscripten_bind_btGhostObject_setActivationState_1"] = asm["_emscripten_bind_btGhostObject_setActivationState_1"];
      var _emscripten_bind_Material_set_m_kLST_1 = Module["_emscripten_bind_Material_set_m_kLST_1"] = asm["_emscripten_bind_Material_set_m_kLST_1"];
      var _emscripten_bind_tMaterialArray_size_0 = Module["_emscripten_bind_tMaterialArray_size_0"] = asm["_emscripten_bind_tMaterialArray_size_0"];
      var _emscripten_bind_btCollisionWorld_contactPairTest_3 = Module["_emscripten_bind_btCollisionWorld_contactPairTest_3"] = asm["_emscripten_bind_btCollisionWorld_contactPairTest_3"];
      var _emscripten_bind_btDispatcherInfo_get_m_useContinuous_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0"];
      var _emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1 = Module["_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1"] = asm["_emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1"];
      var _emscripten_bind_Config_get_kSS_SPLT_CL_0 = Module["_emscripten_bind_Config_get_kSS_SPLT_CL_0"] = asm["_emscripten_bind_Config_get_kSS_SPLT_CL_0"];
      var _emscripten_bind_btCylinderShapeX___destroy___0 = Module["_emscripten_bind_btCylinderShapeX___destroy___0"] = asm["_emscripten_bind_btCylinderShapeX___destroy___0"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1"];
      var _emscripten_bind_btRigidBody_updateInertiaTensor_0 = Module["_emscripten_bind_btRigidBody_updateInertiaTensor_0"] = asm["_emscripten_bind_btRigidBody_updateInertiaTensor_0"];
      var _emscripten_bind_ContactResultCallback___destroy___0 = Module["_emscripten_bind_ContactResultCallback___destroy___0"] = asm["_emscripten_bind_ContactResultCallback___destroy___0"];
      var _emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0"];
      var _emscripten_bind_btSoftBody_setAnisotropicFriction_2 = Module["_emscripten_bind_btSoftBody_setAnisotropicFriction_2"] = asm["_emscripten_bind_btSoftBody_setAnisotropicFriction_2"];
      var _emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1 = Module["_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1"] = asm["_emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1"];
      var _emscripten_bind_btRigidBody_getMotionState_0 = Module["_emscripten_bind_btRigidBody_getMotionState_0"] = asm["_emscripten_bind_btRigidBody_getMotionState_0"];
      var _emscripten_bind_btKinematicCharacterController_getGhostObject_0 = Module["_emscripten_bind_btKinematicCharacterController_getGhostObject_0"] = asm["_emscripten_bind_btKinematicCharacterController_getGhostObject_0"];
      var _emscripten_bind_btRigidBody_btRigidBody_1 = Module["_emscripten_bind_btRigidBody_btRigidBody_1"] = asm["_emscripten_bind_btRigidBody_btRigidBody_1"];
      var _emscripten_bind_btTriangleMeshShape___destroy___0 = Module["_emscripten_bind_btTriangleMeshShape___destroy___0"] = asm["_emscripten_bind_btTriangleMeshShape___destroy___0"];
      var _llvm_cttz_i32 = Module["_llvm_cttz_i32"] = asm["_llvm_cttz_i32"];
      var _emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1 = Module["_emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1"] = asm["_emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1"];
      var _emscripten_bind_btRigidBody_applyTorque_1 = Module["_emscripten_bind_btRigidBody_applyTorque_1"] = asm["_emscripten_bind_btRigidBody_applyTorque_1"];
      var _emscripten_bind_btManifoldPoint_get_m_localPointA_0 = Module["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_localPointA_0"];
      var _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0 = Module["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"] = asm["_emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0"];
      var _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0 = Module["_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0"];
      var _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1 = Module["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1"];
      var _emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0 = Module["_emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0"] = asm["_emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0"];
      var _emscripten_bind_btGhostObject_setUserPointer_1 = Module["_emscripten_bind_btGhostObject_setUserPointer_1"] = asm["_emscripten_bind_btGhostObject_setUserPointer_1"];
      var _emscripten_bind_btKinematicCharacterController_getGravity_0 = Module["_emscripten_bind_btKinematicCharacterController_getGravity_0"] = asm["_emscripten_bind_btKinematicCharacterController_getGravity_0"];
      var ___udivmoddi4 = Module["___udivmoddi4"] = asm["___udivmoddi4"];
      var _emscripten_enum_PHY_ScalarType_PHY_SHORT = Module["_emscripten_enum_PHY_ScalarType_PHY_SHORT"] = asm["_emscripten_enum_PHY_ScalarType_PHY_SHORT"];
      var _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0"];
      var _emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0 = Module["_emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0"] = asm["_emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0"];
      var _emscripten_bind_btVector4_normalize_0 = Module["_emscripten_bind_btVector4_normalize_0"] = asm["_emscripten_bind_btVector4_normalize_0"];
      var _emscripten_bind_btQuaternion_setY_1 = Module["_emscripten_bind_btQuaternion_setY_1"] = asm["_emscripten_bind_btQuaternion_setY_1"];
      var _emscripten_bind_btConeShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConeShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConeShape_calculateLocalInertia_2"];
      var _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2 = Module["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"] = asm["_emscripten_bind_btCylinderShapeX_calculateLocalInertia_2"];
      var _emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1 = Module["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1"] = asm["_emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1"];
      var _llvm_bswap_i32 = Module["_llvm_bswap_i32"] = asm["_llvm_bswap_i32"];
      var _emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2 = Module["_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2"] = asm["_emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2"];
      var _emscripten_bind_btSphereShape_setLocalScaling_1 = Module["_emscripten_bind_btSphereShape_setLocalScaling_1"] = asm["_emscripten_bind_btSphereShape_setLocalScaling_1"];
      var _emscripten_bind_btVector4_w_0 = Module["_emscripten_bind_btVector4_w_0"] = asm["_emscripten_bind_btVector4_w_0"];
      var _emscripten_bind_btWheelInfo_get_m_worldTransform_0 = Module["_emscripten_bind_btWheelInfo_get_m_worldTransform_0"] = asm["_emscripten_bind_btWheelInfo_get_m_worldTransform_0"];
      var _emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0 = Module["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0"];
      var _emscripten_bind_btBvhTriangleMeshShape___destroy___0 = Module["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"] = asm["_emscripten_bind_btBvhTriangleMeshShape___destroy___0"];
      var _emscripten_bind_Config_set_citerations_1 = Module["_emscripten_bind_Config_set_citerations_1"] = asm["_emscripten_bind_Config_set_citerations_1"];
      var _emscripten_bind_btSoftBody_checkFace_3 = Module["_emscripten_bind_btSoftBody_checkFace_3"] = asm["_emscripten_bind_btSoftBody_checkFace_3"];
      var _emscripten_bind_Config_get_kSKHR_CL_0 = Module["_emscripten_bind_Config_get_kSKHR_CL_0"] = asm["_emscripten_bind_Config_get_kSKHR_CL_0"];
      var _emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0"];
      var _free = Module["_free"] = asm["_free"];
      var _emscripten_bind_LocalConvexResult_LocalConvexResult_5 = Module["_emscripten_bind_LocalConvexResult_LocalConvexResult_5"] = asm["_emscripten_bind_LocalConvexResult_LocalConvexResult_5"];
      var _emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1 = Module["_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1"] = asm["_emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1"];
      var _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0 = Module["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"] = asm["_emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0"];
      var _emscripten_bind_Config_set_diterations_1 = Module["_emscripten_bind_Config_set_diterations_1"] = asm["_emscripten_bind_Config_set_diterations_1"];
      var _emscripten_bind_btGeneric6DofConstraint___destroy___0 = Module["_emscripten_bind_btGeneric6DofConstraint___destroy___0"] = asm["_emscripten_bind_btGeneric6DofConstraint___destroy___0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3"];
      var _emscripten_bind_Config_set_kDP_1 = Module["_emscripten_bind_Config_set_kDP_1"] = asm["_emscripten_bind_Config_set_kDP_1"];
      var _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0 = Module["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0"];
      var _emscripten_bind_btConvexHullShape_addPoint_1 = Module["_emscripten_bind_btConvexHullShape_addPoint_1"] = asm["_emscripten_bind_btConvexHullShape_addPoint_1"];
      var _emscripten_bind_btConvexHullShape_addPoint_2 = Module["_emscripten_bind_btConvexHullShape_addPoint_2"] = asm["_emscripten_bind_btConvexHullShape_addPoint_2"];
      var _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0 = Module["_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0"] = asm["_emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0"];
      var _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1 = Module["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1"] = asm["_emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1"];
      var _emscripten_bind_btTransform_getOrigin_0 = Module["_emscripten_bind_btTransform_getOrigin_0"] = asm["_emscripten_bind_btTransform_getOrigin_0"];
      var _emscripten_bind_Config_get_kKHR_0 = Module["_emscripten_bind_Config_get_kKHR_0"] = asm["_emscripten_bind_Config_get_kKHR_0"];
      var _emscripten_bind_Material_get_m_kLST_0 = Module["_emscripten_bind_Material_get_m_kLST_0"] = asm["_emscripten_bind_Material_get_m_kLST_0"];
      var _emscripten_bind_btHingeConstraint___destroy___0 = Module["_emscripten_bind_btHingeConstraint___destroy___0"] = asm["_emscripten_bind_btHingeConstraint___destroy___0"];
      var _emscripten_bind_btPairCachingGhostObject_getUserPointer_0 = Module["_emscripten_bind_btPairCachingGhostObject_getUserPointer_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getUserPointer_0"];
      var _emscripten_bind_btSoftBody_set_m_nodes_1 = Module["_emscripten_bind_btSoftBody_set_m_nodes_1"] = asm["_emscripten_bind_btSoftBody_set_m_nodes_1"];
      var _emscripten_bind_btSoftBodyWorldInfo_set_air_density_1 = Module["_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1"] = asm["_emscripten_bind_btSoftBodyWorldInfo_set_air_density_1"];
      var _emscripten_bind_btDbvtBroadphase___destroy___0 = Module["_emscripten_bind_btDbvtBroadphase___destroy___0"] = asm["_emscripten_bind_btDbvtBroadphase___destroy___0"];
      var _emscripten_bind_Config_set_viterations_1 = Module["_emscripten_bind_Config_set_viterations_1"] = asm["_emscripten_bind_Config_set_viterations_1"];
      var _emscripten_bind_btConvexShape_calculateLocalInertia_2 = Module["_emscripten_bind_btConvexShape_calculateLocalInertia_2"] = asm["_emscripten_bind_btConvexShape_calculateLocalInertia_2"];
      var _memset = Module["_memset"] = asm["_memset"];
      var _emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1"];
      var _emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0"];
      var _emscripten_bind_btTriangleMesh_btTriangleMesh_0 = Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"] = asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_0"];
      var _emscripten_bind_btTriangleMesh_btTriangleMesh_1 = Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"] = asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_1"];
      var _emscripten_bind_btTriangleMesh_btTriangleMesh_2 = Module["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"] = asm["_emscripten_bind_btTriangleMesh_btTriangleMesh_2"];
      var _emscripten_bind_btWheelInfo_set_m_frictionSlip_1 = Module["_emscripten_bind_btWheelInfo_set_m_frictionSlip_1"] = asm["_emscripten_bind_btWheelInfo_set_m_frictionSlip_1"];
      var _emscripten_bind_btSoftBodyHelpers___destroy___0 = Module["_emscripten_bind_btSoftBodyHelpers___destroy___0"] = asm["_emscripten_bind_btSoftBodyHelpers___destroy___0"];
      var _emscripten_bind_btRigidBody_getCollisionShape_0 = Module["_emscripten_bind_btRigidBody_getCollisionShape_0"] = asm["_emscripten_bind_btRigidBody_getCollisionShape_0"];
      var _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1 = Module["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"] = asm["_emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1"];
      var _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0 = Module["_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0"] = asm["_emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0"];
      var _emscripten_bind_btManifoldPoint_get_m_localPointB_0 = Module["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"] = asm["_emscripten_bind_btManifoldPoint_get_m_localPointB_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3"];
      var _emscripten_bind_btSliderConstraint_setLowerLinLimit_1 = Module["_emscripten_bind_btSliderConstraint_setLowerLinLimit_1"] = asm["_emscripten_bind_btSliderConstraint_setLowerLinLimit_1"];
      var _emscripten_bind_btRigidBody_getAngularVelocity_0 = Module["_emscripten_bind_btRigidBody_getAngularVelocity_0"] = asm["_emscripten_bind_btRigidBody_getAngularVelocity_0"];
      var _emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1 = Module["_emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1"] = asm["_emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1"];
      var _emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1 = Module["_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1"] = asm["_emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1"];
      var _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0 = Module["_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0"] = asm["_emscripten_bind_btWheelInfo_get_m_wheelsRadius_0"];
      var _emscripten_bind_btRigidBody_setLinearVelocity_1 = Module["_emscripten_bind_btRigidBody_setLinearVelocity_1"] = asm["_emscripten_bind_btRigidBody_setLinearVelocity_1"];
      var _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0 = Module["_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0"] = asm["_emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0"];
      var _emscripten_bind_btVehicleTuning_btVehicleTuning_0 = Module["_emscripten_bind_btVehicleTuning_btVehicleTuning_0"] = asm["_emscripten_bind_btVehicleTuning_btVehicleTuning_0"];
      var _emscripten_bind_RayResultCallback_set_m_collisionObject_1 = Module["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"] = asm["_emscripten_bind_RayResultCallback_set_m_collisionObject_1"];
      var _emscripten_bind_btDefaultSoftBodySolver___destroy___0 = Module["_emscripten_bind_btDefaultSoftBodySolver___destroy___0"] = asm["_emscripten_bind_btDefaultSoftBodySolver___destroy___0"];
      var _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1"];
      var _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0 = Module["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0"] = asm["_emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0"];
      var _emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1 = Module["_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1"] = asm["_emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1"];
      var _emscripten_bind_btDynamicsWorld_addAction_1 = Module["_emscripten_bind_btDynamicsWorld_addAction_1"] = asm["_emscripten_bind_btDynamicsWorld_addAction_1"];
      var _emscripten_bind_btSoftBody_appendMaterial_0 = Module["_emscripten_bind_btSoftBody_appendMaterial_0"] = asm["_emscripten_bind_btSoftBody_appendMaterial_0"];
      var _emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1 = Module["_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1"] = asm["_emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2"];
      var _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0 = Module["_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0"] = asm["_emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0"];
      var _emscripten_bind_btSoftBodyWorldInfo_get_air_density_0 = Module["_emscripten_bind_btSoftBodyWorldInfo_get_air_density_0"] = asm["_emscripten_bind_btSoftBodyWorldInfo_get_air_density_0"];
      var _emscripten_bind_btSoftBody_setRestitution_1 = Module["_emscripten_bind_btSoftBody_setRestitution_1"] = asm["_emscripten_bind_btSoftBody_setRestitution_1"];
      var _emscripten_bind_Config_set_kLF_1 = Module["_emscripten_bind_Config_set_kLF_1"] = asm["_emscripten_bind_Config_set_kLF_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1"];
      var _emscripten_enum_PHY_ScalarType_PHY_FLOAT = Module["_emscripten_enum_PHY_ScalarType_PHY_FLOAT"] = asm["_emscripten_enum_PHY_ScalarType_PHY_FLOAT"];
      var _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1 = Module["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1"] = asm["_emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1"];
      var _emscripten_bind_Config_set_kSS_SPLT_CL_1 = Module["_emscripten_bind_Config_set_kSS_SPLT_CL_1"] = asm["_emscripten_bind_Config_set_kSS_SPLT_CL_1"];
      var _emscripten_bind_btGhostObject_isActive_0 = Module["_emscripten_bind_btGhostObject_isActive_0"] = asm["_emscripten_bind_btGhostObject_isActive_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1 = Module["_emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1"];
      var _emscripten_bind_btKinematicCharacterController_setFallSpeed_1 = Module["_emscripten_bind_btKinematicCharacterController_setFallSpeed_1"] = asm["_emscripten_bind_btKinematicCharacterController_setFallSpeed_1"];
      var _emscripten_bind_btRigidBody_setActivationState_1 = Module["_emscripten_bind_btRigidBody_setActivationState_1"] = asm["_emscripten_bind_btRigidBody_setActivationState_1"];
      var _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0 = Module["_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0"] = asm["_emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0"];
      var _emscripten_bind_ClosestConvexResultCallback_hasHit_0 = Module["_emscripten_bind_ClosestConvexResultCallback_hasHit_0"] = asm["_emscripten_bind_ClosestConvexResultCallback_hasHit_0"];
      var _emscripten_bind_btCapsuleShapeZ___destroy___0 = Module["_emscripten_bind_btCapsuleShapeZ___destroy___0"] = asm["_emscripten_bind_btCapsuleShapeZ___destroy___0"];
      var _emscripten_bind_btRaycastVehicle_getRigidBody_0 = Module["_emscripten_bind_btRaycastVehicle_getRigidBody_0"] = asm["_emscripten_bind_btRaycastVehicle_getRigidBody_0"];
      var _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0 = Module["_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0"] = asm["_emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0"];
      var _emscripten_bind_btSoftBody_get_m_materials_0 = Module["_emscripten_bind_btSoftBody_get_m_materials_0"] = asm["_emscripten_bind_btSoftBody_get_m_materials_0"];
      var _emscripten_bind_btTriangleMesh_addTriangle_3 = Module["_emscripten_bind_btTriangleMesh_addTriangle_3"] = asm["_emscripten_bind_btTriangleMesh_addTriangle_3"];
      var _emscripten_bind_btGhostObject_getOverlappingObject_1 = Module["_emscripten_bind_btGhostObject_getOverlappingObject_1"] = asm["_emscripten_bind_btGhostObject_getOverlappingObject_1"];
      var _emscripten_bind_btTriangleMesh_addTriangle_4 = Module["_emscripten_bind_btTriangleMesh_addTriangle_4"] = asm["_emscripten_bind_btTriangleMesh_addTriangle_4"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0"];
      var _emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1 = Module["_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1"] = asm["_emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1"];
      var _emscripten_bind_Config_get_kDF_0 = Module["_emscripten_bind_Config_get_kDF_0"] = asm["_emscripten_bind_Config_get_kDF_0"];
      var _emscripten_bind_btRigidBody_applyTorqueImpulse_1 = Module["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"] = asm["_emscripten_bind_btRigidBody_applyTorqueImpulse_1"];
      var _emscripten_bind_btRigidBody_setCollisionFlags_1 = Module["_emscripten_bind_btRigidBody_setCollisionFlags_1"] = asm["_emscripten_bind_btRigidBody_setCollisionFlags_1"];
      var _emscripten_bind_btWheelInfo_get_m_steering_0 = Module["_emscripten_bind_btWheelInfo_get_m_steering_0"] = asm["_emscripten_bind_btWheelInfo_get_m_steering_0"];
      var _emscripten_bind_btRigidBody___destroy___0 = Module["_emscripten_bind_btRigidBody___destroy___0"] = asm["_emscripten_bind_btRigidBody___destroy___0"];
      var _emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1 = Module["_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1"] = asm["_emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1"];
      var _emscripten_bind_Config_set_kCHR_1 = Module["_emscripten_bind_Config_set_kCHR_1"] = asm["_emscripten_bind_Config_set_kCHR_1"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2"];
      var _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2 = Module["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"] = asm["_emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0"];
      var _emscripten_bind_btSliderConstraint_btSliderConstraint_3 = Module["_emscripten_bind_btSliderConstraint_btSliderConstraint_3"] = asm["_emscripten_bind_btSliderConstraint_btSliderConstraint_3"];
      var _emscripten_bind_btTransform___destroy___0 = Module["_emscripten_bind_btTransform___destroy___0"] = asm["_emscripten_bind_btTransform___destroy___0"];
      var _emscripten_bind_btDynamicsWorld_convexSweepTest_5 = Module["_emscripten_bind_btDynamicsWorld_convexSweepTest_5"] = asm["_emscripten_bind_btDynamicsWorld_convexSweepTest_5"];
      var _emscripten_bind_btSliderConstraint___destroy___0 = Module["_emscripten_bind_btSliderConstraint___destroy___0"] = asm["_emscripten_bind_btSliderConstraint___destroy___0"];
      var _emscripten_bind_btRigidBody_forceActivationState_1 = Module["_emscripten_bind_btRigidBody_forceActivationState_1"] = asm["_emscripten_bind_btRigidBody_forceActivationState_1"];
      var _emscripten_bind_btPoint2PointConstraint_setPivotB_1 = Module["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"] = asm["_emscripten_bind_btPoint2PointConstraint_setPivotB_1"];
      var _emscripten_bind_btManifoldPoint_getDistance_0 = Module["_emscripten_bind_btManifoldPoint_getDistance_0"] = asm["_emscripten_bind_btManifoldPoint_getDistance_0"];
      var _emscripten_bind_btGhostPairCallback___destroy___0 = Module["_emscripten_bind_btGhostPairCallback___destroy___0"] = asm["_emscripten_bind_btGhostPairCallback___destroy___0"];
      var _emscripten_bind_btTransform_setFromOpenGLMatrix_1 = Module["_emscripten_bind_btTransform_setFromOpenGLMatrix_1"] = asm["_emscripten_bind_btTransform_setFromOpenGLMatrix_1"];
      var _emscripten_bind_btKinematicCharacterController_getMaxSlope_0 = Module["_emscripten_bind_btKinematicCharacterController_getMaxSlope_0"] = asm["_emscripten_bind_btKinematicCharacterController_getMaxSlope_0"];
      var _emscripten_bind_btManifoldPoint_getPositionWorldOnA_0 = Module["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"] = asm["_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0"];
      var _emscripten_bind_btRaycastVehicle_addWheel_7 = Module["_emscripten_bind_btRaycastVehicle_addWheel_7"] = asm["_emscripten_bind_btRaycastVehicle_addWheel_7"];
      var _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1 = Module["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"] = asm["_emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1"];
      var _emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1 = Module["_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1"];
      var _emscripten_bind_btStaticPlaneShape___destroy___0 = Module["_emscripten_bind_btStaticPlaneShape___destroy___0"] = asm["_emscripten_bind_btStaticPlaneShape___destroy___0"];
      var _emscripten_bind_btHingeConstraint_enableMotor_1 = Module["_emscripten_bind_btHingeConstraint_enableMotor_1"] = asm["_emscripten_bind_btHingeConstraint_enableMotor_1"];
      var _emscripten_bind_btCylinderShapeZ_setLocalScaling_1 = Module["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"] = asm["_emscripten_bind_btCylinderShapeZ_setLocalScaling_1"];
      var _emscripten_bind_btBoxShape_setLocalScaling_1 = Module["_emscripten_bind_btBoxShape_setLocalScaling_1"] = asm["_emscripten_bind_btBoxShape_setLocalScaling_1"];
      var _emscripten_bind_btConeShapeZ___destroy___0 = Module["_emscripten_bind_btConeShapeZ___destroy___0"] = asm["_emscripten_bind_btConeShapeZ___destroy___0"];
      var _emscripten_bind_btHingeConstraint_btHingeConstraint_4 = Module["_emscripten_bind_btHingeConstraint_btHingeConstraint_4"] = asm["_emscripten_bind_btHingeConstraint_btHingeConstraint_4"];
      var _emscripten_bind_btDynamicsWorld_getPairCache_0 = Module["_emscripten_bind_btDynamicsWorld_getPairCache_0"] = asm["_emscripten_bind_btDynamicsWorld_getPairCache_0"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5"];
      var _emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1 = Module["_emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1"] = asm["_emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1"];
      var _emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5 = Module["_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5"];
      var _emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1 = Module["_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1"] = asm["_emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1"];
      var _emscripten_bind_btRigidBody_setRestitution_1 = Module["_emscripten_bind_btRigidBody_setRestitution_1"] = asm["_emscripten_bind_btRigidBody_setRestitution_1"];
      var _emscripten_bind_btVector4_btVector4_0 = Module["_emscripten_bind_btVector4_btVector4_0"] = asm["_emscripten_bind_btVector4_btVector4_0"];
      var _emscripten_bind_btVector4_x_0 = Module["_emscripten_bind_btVector4_x_0"] = asm["_emscripten_bind_btVector4_x_0"];
      var _emscripten_bind_btVector4_btVector4_4 = Module["_emscripten_bind_btVector4_btVector4_4"] = asm["_emscripten_bind_btVector4_btVector4_4"];
      var _emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1 = Module["_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1"] = asm["_emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1"];
      var _emscripten_bind_btKinematicCharacterController___destroy___0 = Module["_emscripten_bind_btKinematicCharacterController___destroy___0"] = asm["_emscripten_bind_btKinematicCharacterController___destroy___0"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1"];
      var _emscripten_bind_tMaterialArray_at_1 = Module["_emscripten_bind_tMaterialArray_at_1"] = asm["_emscripten_bind_tMaterialArray_at_1"];
      var _emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1 = Module["_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1"] = asm["_emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1"];
      var _emscripten_bind_btVector4_op_sub_1 = Module["_emscripten_bind_btVector4_op_sub_1"] = asm["_emscripten_bind_btVector4_op_sub_1"];
      var _emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1 = Module["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1"] = asm["_emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1"];
      var _emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0 = Module["_emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0"] = asm["_emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0"];
      var _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3 = Module["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"] = asm["_emscripten_bind_btDiscreteDynamicsWorld_rayTest_3"];
      var _emscripten_bind_btWheelInfo_get_m_raycastInfo_0 = Module["_emscripten_bind_btWheelInfo_get_m_raycastInfo_0"] = asm["_emscripten_bind_btWheelInfo_get_m_raycastInfo_0"];
      var _emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0 = Module["_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0"] = asm["_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0"];
      var _emscripten_bind_btConvexShape_getMargin_0 = Module["_emscripten_bind_btConvexShape_getMargin_0"] = asm["_emscripten_bind_btConvexShape_getMargin_0"];
      var _emscripten_bind_btGhostPairCallback_btGhostPairCallback_0 = Module["_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0"] = asm["_emscripten_bind_btGhostPairCallback_btGhostPairCallback_0"];
      var _emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1 = Module["_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1"] = asm["_emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1"];
      var _emscripten_bind_btPairCachingGhostObject_isActive_0 = Module["_emscripten_bind_btPairCachingGhostObject_isActive_0"] = asm["_emscripten_bind_btPairCachingGhostObject_isActive_0"];
      var _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0 = Module["_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0"] = asm["_emscripten_bind_btVehicleTuning_get_m_frictionSlip_0"];
      var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
      var dynCall_vid = Module["dynCall_vid"] = asm["dynCall_vid"];
      var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
      var dynCall_viiidii = Module["dynCall_viiidii"] = asm["dynCall_viiidii"];
      var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
      var dynCall_iiiiiiiiiii = Module["dynCall_iiiiiiiiiii"] = asm["dynCall_iiiiiiiiiii"];
      var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
      var dynCall_viidi = Module["dynCall_viidi"] = asm["dynCall_viidi"];
      var dynCall_viddiii = Module["dynCall_viddiii"] = asm["dynCall_viddiii"];
      var dynCall_vidii = Module["dynCall_vidii"] = asm["dynCall_vidii"];
      var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
      var dynCall_vidi = Module["dynCall_vidi"] = asm["dynCall_vidi"];
      var dynCall_diiiiiiii = Module["dynCall_diiiiiiii"] = asm["dynCall_diiiiiiii"];
      var dynCall_viiiiddddiid = Module["dynCall_viiiiddddiid"] = asm["dynCall_viiiiddddiid"];
      var dynCall_diiiii = Module["dynCall_diiiii"] = asm["dynCall_diiiii"];
      var dynCall_vidd = Module["dynCall_vidd"] = asm["dynCall_vidd"];
      var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
      var dynCall_viiiiid = Module["dynCall_viiiiid"] = asm["dynCall_viiiiid"];
      var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
      var dynCall_iiid = Module["dynCall_iiid"] = asm["dynCall_iiid"];
      var dynCall_di = Module["dynCall_di"] = asm["dynCall_di"];
      var dynCall_iiiiiii = Module["dynCall_iiiiiii"] = asm["dynCall_iiiiiii"];
      var dynCall_diiidii = Module["dynCall_diiidii"] = asm["dynCall_diiidii"];
      var dynCall_viidii = Module["dynCall_viidii"] = asm["dynCall_viidii"];
      var dynCall_viiiiiii = Module["dynCall_viiiiiii"] = asm["dynCall_viiiiiii"];
      var dynCall_viiiiiiiii = Module["dynCall_viiiiiiiii"] = asm["dynCall_viiiiiiiii"];
      var dynCall_viiiiiiiiii = Module["dynCall_viiiiiiiiii"] = asm["dynCall_viiiiiiiiii"];
      var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
      var dynCall_diii = Module["dynCall_diii"] = asm["dynCall_diii"];
      var dynCall_diiiiiiiiii = Module["dynCall_diiiiiiiiii"] = asm["dynCall_diiiiiiiiii"];
      var dynCall_viiiid = Module["dynCall_viiiid"] = asm["dynCall_viiiid"];
      var dynCall_diiiiiiiii = Module["dynCall_diiiiiiiii"] = asm["dynCall_diiiiiiiii"];
      var dynCall_did = Module["dynCall_did"] = asm["dynCall_did"];
      var dynCall_viiiidddddidi = Module["dynCall_viiiidddddidi"] = asm["dynCall_viiiidddddidi"];
      var dynCall_diidii = Module["dynCall_diidii"] = asm["dynCall_diidii"];
      var dynCall_diiii = Module["dynCall_diiii"] = asm["dynCall_diiii"];
      var dynCall_iiiiiiiiii = Module["dynCall_iiiiiiiiii"] = asm["dynCall_iiiiiiiiii"];
      var dynCall_viiid = Module["dynCall_viiid"] = asm["dynCall_viiid"];
      var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
      var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
      var dynCall_viid = Module["dynCall_viid"] = asm["dynCall_viid"];
      var dynCall_iidid = Module["dynCall_iidid"] = asm["dynCall_iidid"];
      var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
      Runtime.stackAlloc = asm["stackAlloc"];
      Runtime.stackSave = asm["stackSave"];
      Runtime.stackRestore = asm["stackRestore"];
      Runtime.establishStackSpace = asm["establishStackSpace"];
      Runtime.setTempRet0 = asm["setTempRet0"];
      Runtime.getTempRet0 = asm["getTempRet0"];
      function ExitStatus(status) {
        this.name = "ExitStatus";
        this.message = "Program terminated with exit(" + status + ")";
        this.status = status;
      }
      ExitStatus.prototype = new Error();
      ExitStatus.prototype.constructor = ExitStatus;
      var initialStackTop;
      var preloadStartTime = null;
      var calledMain = false;
      dependenciesFulfilled = function runCaller() {
        if (!Module["calledRun"])
          run();
        if (!Module["calledRun"])
          dependenciesFulfilled = runCaller;
      };
      Module["callMain"] = Module.callMain = function callMain(args) {
        args = args || [];
        ensureInitRuntime();
        var argc = args.length + 1;
        function pad() {
          for (var i2 = 0; i2 < 4 - 1; i2++) {
            argv.push(0);
          }
        }
        var argv = [allocate(intArrayFromString(Module["thisProgram"]), "i8", ALLOC_NORMAL)];
        pad();
        for (var i = 0; i < argc - 1; i = i + 1) {
          argv.push(allocate(intArrayFromString(args[i]), "i8", ALLOC_NORMAL));
          pad();
        }
        argv.push(0);
        argv = allocate(argv, "i32", ALLOC_NORMAL);
        try {
          var ret = Module["_main"](argc, argv, 0);
          exit(ret, true);
        } catch (e) {
          if (e instanceof ExitStatus) {
            return;
          } else if (e == "SimulateInfiniteLoop") {
            Module["noExitRuntime"] = true;
            return;
          } else {
            if (e && typeof e === "object" && e.stack)
              Module.printErr("exception thrown: " + [e, e.stack]);
            throw e;
          }
        } finally {
          calledMain = true;
        }
      };
      function run(args) {
        args = args || Module["arguments"];
        if (preloadStartTime === null)
          preloadStartTime = Date.now();
        if (runDependencies > 0) {
          return;
        }
        preRun();
        if (runDependencies > 0)
          return;
        if (Module["calledRun"])
          return;
        function doRun() {
          if (Module["calledRun"])
            return;
          Module["calledRun"] = true;
          if (ABORT)
            return;
          ensureInitRuntime();
          preMain();
          if (Module["onRuntimeInitialized"])
            Module["onRuntimeInitialized"]();
          if (Module["_main"] && shouldRunNow)
            Module["callMain"](args);
          postRun();
        }
        if (Module["setStatus"]) {
          Module["setStatus"]("Running...");
          setTimeout(function() {
            setTimeout(function() {
              Module["setStatus"]("");
            }, 1);
            doRun();
          }, 1);
        } else {
          doRun();
        }
      }
      Module["run"] = Module.run = run;
      function exit(status, implicit) {
        if (implicit && Module["noExitRuntime"]) {
          return;
        }
        if (Module["noExitRuntime"]) {
        } else {
          ABORT = true;
          EXITSTATUS = status;
          STACKTOP = initialStackTop;
          exitRuntime();
          if (Module["onExit"])
            Module["onExit"](status);
        }
        if (ENVIRONMENT_IS_NODE) {
          process["exit"](status);
        } else if (ENVIRONMENT_IS_SHELL && typeof quit === "function") {
          quit(status);
        }
        throw new ExitStatus(status);
      }
      Module["exit"] = Module.exit = exit;
      var abortDecorators = [];
      function abort(what) {
        if (what !== void 0) {
          Module.print(what);
          Module.printErr(what);
          what = JSON.stringify(what);
        } else {
          what = "";
        }
        ABORT = true;
        EXITSTATUS = 1;
        var extra = "\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";
        var output = "abort(" + what + ") at " + stackTrace() + extra;
        if (abortDecorators) {
          abortDecorators.forEach(function(decorator) {
            output = decorator(output, what);
          });
        }
        throw output;
      }
      Module["abort"] = Module.abort = abort;
      if (Module["preInit"]) {
        if (typeof Module["preInit"] == "function")
          Module["preInit"] = [Module["preInit"]];
        while (Module["preInit"].length > 0) {
          Module["preInit"].pop()();
        }
      }
      var shouldRunNow = true;
      if (Module["noInitialRun"]) {
        shouldRunNow = false;
      }
      Module["noExitRuntime"] = true;
      run();
      function WrapperObject() {
      }
      WrapperObject.prototype = Object.create(WrapperObject.prototype);
      WrapperObject.prototype.constructor = WrapperObject;
      WrapperObject.prototype.__class__ = WrapperObject;
      WrapperObject.__cache__ = {};
      Module["WrapperObject"] = WrapperObject;
      function getCache(__class__) {
        return (__class__ || WrapperObject).__cache__;
      }
      Module["getCache"] = getCache;
      function wrapPointer(ptr, __class__) {
        var cache = getCache(__class__);
        var ret = cache[ptr];
        if (ret)
          return ret;
        ret = Object.create((__class__ || WrapperObject).prototype);
        ret.ptr = ptr;
        return cache[ptr] = ret;
      }
      Module["wrapPointer"] = wrapPointer;
      function castObject(obj, __class__) {
        return wrapPointer(obj.ptr, __class__);
      }
      Module["castObject"] = castObject;
      Module["NULL"] = wrapPointer(0);
      function destroy(obj) {
        if (!obj["__destroy__"])
          throw "Error: Cannot destroy object. (Did you create it yourself?)";
        obj["__destroy__"]();
        delete getCache(obj.__class__)[obj.ptr];
      }
      Module["destroy"] = destroy;
      function compare(obj1, obj2) {
        return obj1.ptr === obj2.ptr;
      }
      Module["compare"] = compare;
      function getPointer(obj) {
        return obj.ptr;
      }
      Module["getPointer"] = getPointer;
      function getClass(obj) {
        return obj.__class__;
      }
      Module["getClass"] = getClass;
      var ensureCache = { buffer: 0, size: 0, pos: 0, temps: [], needed: 0, prepare: function() {
        if (this.needed) {
          for (var i = 0; i < this.temps.length; i++) {
            Module["_free"](this.temps[i]);
          }
          this.temps.length = 0;
          Module["_free"](this.buffer);
          this.buffer = 0;
          this.size += this.needed;
          this.needed = 0;
        }
        if (!this.buffer) {
          this.size += 128;
          this.buffer = Module["_malloc"](this.size);
          assert(this.buffer);
        }
        this.pos = 0;
      }, alloc: function(array, view) {
        assert(this.buffer);
        var bytes = view.BYTES_PER_ELEMENT;
        var len = array.length * bytes;
        len = len + 7 & -8;
        var ret;
        if (this.pos + len >= this.size) {
          assert(len > 0);
          this.needed += len;
          ret = Module["_malloc"](len);
          this.temps.push(ret);
        } else {
          ret = this.buffer + this.pos;
          this.pos += len;
        }
        var retShifted = ret;
        switch (bytes) {
          case 2:
            retShifted >>= 1;
            break;
          case 4:
            retShifted >>= 2;
            break;
          case 8:
            retShifted >>= 3;
            break;
        }
        for (var i = 0; i < array.length; i++) {
          view[retShifted + i] = array[i];
        }
        return ret;
      } };
      function ensureInt32(value) {
        if (typeof value === "object")
          return ensureCache.alloc(value, HEAP32);
        return value;
      }
      function ensureFloat32(value) {
        if (typeof value === "object")
          return ensureCache.alloc(value, HEAPF32);
        return value;
      }
      function btCollisionWorld() {
        throw "cannot construct a btCollisionWorld, no constructor in IDL";
      }
      btCollisionWorld.prototype = Object.create(WrapperObject.prototype);
      btCollisionWorld.prototype.constructor = btCollisionWorld;
      btCollisionWorld.prototype.__class__ = btCollisionWorld;
      btCollisionWorld.__cache__ = {};
      Module["btCollisionWorld"] = btCollisionWorld;
      btCollisionWorld.prototype["getDispatcher"] = btCollisionWorld.prototype.getDispatcher = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btCollisionWorld_getDispatcher_0(self), btDispatcher);
      };
      btCollisionWorld.prototype["rayTest"] = btCollisionWorld.prototype.rayTest = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btCollisionWorld_rayTest_3(self, arg0, arg1, arg2);
      };
      btCollisionWorld.prototype["getPairCache"] = btCollisionWorld.prototype.getPairCache = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btCollisionWorld_getPairCache_0(self), btOverlappingPairCache);
      };
      btCollisionWorld.prototype["getDispatchInfo"] = btCollisionWorld.prototype.getDispatchInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btCollisionWorld_getDispatchInfo_0(self), btDispatcherInfo);
      };
      btCollisionWorld.prototype["addCollisionObject"] = btCollisionWorld.prototype.addCollisionObject = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg1 === void 0) {
          _emscripten_bind_btCollisionWorld_addCollisionObject_1(self, arg0);
          return;
        }
        if (arg2 === void 0) {
          _emscripten_bind_btCollisionWorld_addCollisionObject_2(self, arg0, arg1);
          return;
        }
        _emscripten_bind_btCollisionWorld_addCollisionObject_3(self, arg0, arg1, arg2);
      };
      btCollisionWorld.prototype["getBroadphase"] = btCollisionWorld.prototype.getBroadphase = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btCollisionWorld_getBroadphase_0(self), btBroadphaseInterface);
      };
      btCollisionWorld.prototype["convexSweepTest"] = btCollisionWorld.prototype.convexSweepTest = function(arg0, arg1, arg2, arg3, arg4) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        _emscripten_bind_btCollisionWorld_convexSweepTest_5(self, arg0, arg1, arg2, arg3, arg4);
      };
      btCollisionWorld.prototype["contactPairTest"] = btCollisionWorld.prototype.contactPairTest = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btCollisionWorld_contactPairTest_3(self, arg0, arg1, arg2);
      };
      btCollisionWorld.prototype["contactTest"] = btCollisionWorld.prototype.contactTest = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCollisionWorld_contactTest_2(self, arg0, arg1);
      };
      btCollisionWorld.prototype["__destroy__"] = btCollisionWorld.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCollisionWorld___destroy___0(self);
      };
      function btCollisionShape() {
        throw "cannot construct a btCollisionShape, no constructor in IDL";
      }
      btCollisionShape.prototype = Object.create(WrapperObject.prototype);
      btCollisionShape.prototype.constructor = btCollisionShape;
      btCollisionShape.prototype.__class__ = btCollisionShape;
      btCollisionShape.__cache__ = {};
      Module["btCollisionShape"] = btCollisionShape;
      btCollisionShape.prototype["setLocalScaling"] = btCollisionShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionShape_setLocalScaling_1(self, arg0);
      };
      btCollisionShape.prototype["calculateLocalInertia"] = btCollisionShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCollisionShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btCollisionShape.prototype["setMargin"] = btCollisionShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionShape_setMargin_1(self, arg0);
      };
      btCollisionShape.prototype["getMargin"] = btCollisionShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btCollisionShape_getMargin_0(self);
      };
      btCollisionShape.prototype["__destroy__"] = btCollisionShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCollisionShape___destroy___0(self);
      };
      function btCollisionObject() {
        throw "cannot construct a btCollisionObject, no constructor in IDL";
      }
      btCollisionObject.prototype = Object.create(WrapperObject.prototype);
      btCollisionObject.prototype.constructor = btCollisionObject;
      btCollisionObject.prototype.__class__ = btCollisionObject;
      btCollisionObject.__cache__ = {};
      Module["btCollisionObject"] = btCollisionObject;
      btCollisionObject.prototype["setAnisotropicFriction"] = btCollisionObject.prototype.setAnisotropicFriction = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCollisionObject_setAnisotropicFriction_2(self, arg0, arg1);
      };
      btCollisionObject.prototype["getCollisionShape"] = btCollisionObject.prototype.getCollisionShape = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btCollisionObject_getCollisionShape_0(self), btCollisionShape);
      };
      btCollisionObject.prototype["setContactProcessingThreshold"] = btCollisionObject.prototype.setContactProcessingThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setContactProcessingThreshold_1(self, arg0);
      };
      btCollisionObject.prototype["setActivationState"] = btCollisionObject.prototype.setActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setActivationState_1(self, arg0);
      };
      btCollisionObject.prototype["forceActivationState"] = btCollisionObject.prototype.forceActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_forceActivationState_1(self, arg0);
      };
      btCollisionObject.prototype["activate"] = btCollisionObject.prototype.activate = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg0 === void 0) {
          _emscripten_bind_btCollisionObject_activate_0(self);
          return;
        }
        _emscripten_bind_btCollisionObject_activate_1(self, arg0);
      };
      btCollisionObject.prototype["isActive"] = btCollisionObject.prototype.isActive = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btCollisionObject_isActive_0(self);
      };
      btCollisionObject.prototype["isKinematicObject"] = btCollisionObject.prototype.isKinematicObject = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btCollisionObject_isKinematicObject_0(self);
      };
      btCollisionObject.prototype["setRestitution"] = btCollisionObject.prototype.setRestitution = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setRestitution_1(self, arg0);
      };
      btCollisionObject.prototype["setFriction"] = btCollisionObject.prototype.setFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setFriction_1(self, arg0);
      };
      btCollisionObject.prototype["setRollingFriction"] = btCollisionObject.prototype.setRollingFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setRollingFriction_1(self, arg0);
      };
      btCollisionObject.prototype["getWorldTransform"] = btCollisionObject.prototype.getWorldTransform = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btCollisionObject_getWorldTransform_0(self), btTransform);
      };
      btCollisionObject.prototype["getCollisionFlags"] = btCollisionObject.prototype.getCollisionFlags = function() {
        var self = this.ptr;
        return _emscripten_bind_btCollisionObject_getCollisionFlags_0(self);
      };
      btCollisionObject.prototype["setCollisionFlags"] = btCollisionObject.prototype.setCollisionFlags = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setCollisionFlags_1(self, arg0);
      };
      btCollisionObject.prototype["setWorldTransform"] = btCollisionObject.prototype.setWorldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setWorldTransform_1(self, arg0);
      };
      btCollisionObject.prototype["setCollisionShape"] = btCollisionObject.prototype.setCollisionShape = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setCollisionShape_1(self, arg0);
      };
      btCollisionObject.prototype["setCcdMotionThreshold"] = btCollisionObject.prototype.setCcdMotionThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setCcdMotionThreshold_1(self, arg0);
      };
      btCollisionObject.prototype["setCcdSweptSphereRadius"] = btCollisionObject.prototype.setCcdSweptSphereRadius = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setCcdSweptSphereRadius_1(self, arg0);
      };
      btCollisionObject.prototype["getUserIndex"] = btCollisionObject.prototype.getUserIndex = function() {
        var self = this.ptr;
        return _emscripten_bind_btCollisionObject_getUserIndex_0(self);
      };
      btCollisionObject.prototype["setUserIndex"] = btCollisionObject.prototype.setUserIndex = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setUserIndex_1(self, arg0);
      };
      btCollisionObject.prototype["getUserPointer"] = btCollisionObject.prototype.getUserPointer = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btCollisionObject_getUserPointer_0(self), VoidPtr);
      };
      btCollisionObject.prototype["setUserPointer"] = btCollisionObject.prototype.setUserPointer = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCollisionObject_setUserPointer_1(self, arg0);
      };
      btCollisionObject.prototype["__destroy__"] = btCollisionObject.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCollisionObject___destroy___0(self);
      };
      function btDynamicsWorld() {
        throw "cannot construct a btDynamicsWorld, no constructor in IDL";
      }
      btDynamicsWorld.prototype = Object.create(btCollisionWorld.prototype);
      btDynamicsWorld.prototype.constructor = btDynamicsWorld;
      btDynamicsWorld.prototype.__class__ = btDynamicsWorld;
      btDynamicsWorld.__cache__ = {};
      Module["btDynamicsWorld"] = btDynamicsWorld;
      btDynamicsWorld.prototype["addAction"] = btDynamicsWorld.prototype.addAction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDynamicsWorld_addAction_1(self, arg0);
      };
      btDynamicsWorld.prototype["removeAction"] = btDynamicsWorld.prototype.removeAction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDynamicsWorld_removeAction_1(self, arg0);
      };
      btDynamicsWorld.prototype["getSolverInfo"] = btDynamicsWorld.prototype.getSolverInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDynamicsWorld_getSolverInfo_0(self), btContactSolverInfo);
      };
      btDynamicsWorld.prototype["getDispatcher"] = btDynamicsWorld.prototype.getDispatcher = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDynamicsWorld_getDispatcher_0(self), btDispatcher);
      };
      btDynamicsWorld.prototype["rayTest"] = btDynamicsWorld.prototype.rayTest = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btDynamicsWorld_rayTest_3(self, arg0, arg1, arg2);
      };
      btDynamicsWorld.prototype["getPairCache"] = btDynamicsWorld.prototype.getPairCache = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDynamicsWorld_getPairCache_0(self), btOverlappingPairCache);
      };
      btDynamicsWorld.prototype["getDispatchInfo"] = btDynamicsWorld.prototype.getDispatchInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDynamicsWorld_getDispatchInfo_0(self), btDispatcherInfo);
      };
      btDynamicsWorld.prototype["addCollisionObject"] = btDynamicsWorld.prototype.addCollisionObject = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg1 === void 0) {
          _emscripten_bind_btDynamicsWorld_addCollisionObject_1(self, arg0);
          return;
        }
        if (arg2 === void 0) {
          _emscripten_bind_btDynamicsWorld_addCollisionObject_2(self, arg0, arg1);
          return;
        }
        _emscripten_bind_btDynamicsWorld_addCollisionObject_3(self, arg0, arg1, arg2);
      };
      btDynamicsWorld.prototype["getBroadphase"] = btDynamicsWorld.prototype.getBroadphase = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDynamicsWorld_getBroadphase_0(self), btBroadphaseInterface);
      };
      btDynamicsWorld.prototype["convexSweepTest"] = btDynamicsWorld.prototype.convexSweepTest = function(arg0, arg1, arg2, arg3, arg4) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        _emscripten_bind_btDynamicsWorld_convexSweepTest_5(self, arg0, arg1, arg2, arg3, arg4);
      };
      btDynamicsWorld.prototype["contactPairTest"] = btDynamicsWorld.prototype.contactPairTest = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btDynamicsWorld_contactPairTest_3(self, arg0, arg1, arg2);
      };
      btDynamicsWorld.prototype["contactTest"] = btDynamicsWorld.prototype.contactTest = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btDynamicsWorld_contactTest_2(self, arg0, arg1);
      };
      btDynamicsWorld.prototype["__destroy__"] = btDynamicsWorld.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDynamicsWorld___destroy___0(self);
      };
      function btTypedConstraint() {
        throw "cannot construct a btTypedConstraint, no constructor in IDL";
      }
      btTypedConstraint.prototype = Object.create(WrapperObject.prototype);
      btTypedConstraint.prototype.constructor = btTypedConstraint;
      btTypedConstraint.prototype.__class__ = btTypedConstraint;
      btTypedConstraint.__cache__ = {};
      Module["btTypedConstraint"] = btTypedConstraint;
      btTypedConstraint.prototype["enableFeedback"] = btTypedConstraint.prototype.enableFeedback = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btTypedConstraint_enableFeedback_1(self, arg0);
      };
      btTypedConstraint.prototype["getBreakingImpulseThreshold"] = btTypedConstraint.prototype.getBreakingImpulseThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btTypedConstraint_getBreakingImpulseThreshold_0(self);
      };
      btTypedConstraint.prototype["setBreakingImpulseThreshold"] = btTypedConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btTypedConstraint_setBreakingImpulseThreshold_1(self, arg0);
      };
      btTypedConstraint.prototype["__destroy__"] = btTypedConstraint.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btTypedConstraint___destroy___0(self);
      };
      function btConcaveShape() {
        throw "cannot construct a btConcaveShape, no constructor in IDL";
      }
      btConcaveShape.prototype = Object.create(btCollisionShape.prototype);
      btConcaveShape.prototype.constructor = btConcaveShape;
      btConcaveShape.prototype.__class__ = btConcaveShape;
      btConcaveShape.__cache__ = {};
      Module["btConcaveShape"] = btConcaveShape;
      btConcaveShape.prototype["setLocalScaling"] = btConcaveShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConcaveShape_setLocalScaling_1(self, arg0);
      };
      btConcaveShape.prototype["calculateLocalInertia"] = btConcaveShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btConcaveShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btConcaveShape.prototype["__destroy__"] = btConcaveShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConcaveShape___destroy___0(self);
      };
      function btCapsuleShape(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        this.ptr = _emscripten_bind_btCapsuleShape_btCapsuleShape_2(arg0, arg1);
        getCache(btCapsuleShape)[this.ptr] = this;
      }
      btCapsuleShape.prototype = Object.create(btCollisionShape.prototype);
      btCapsuleShape.prototype.constructor = btCapsuleShape;
      btCapsuleShape.prototype.__class__ = btCapsuleShape;
      btCapsuleShape.__cache__ = {};
      Module["btCapsuleShape"] = btCapsuleShape;
      btCapsuleShape.prototype["setMargin"] = btCapsuleShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCapsuleShape_setMargin_1(self, arg0);
      };
      btCapsuleShape.prototype["getMargin"] = btCapsuleShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btCapsuleShape_getMargin_0(self);
      };
      btCapsuleShape.prototype["setLocalScaling"] = btCapsuleShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCapsuleShape_setLocalScaling_1(self, arg0);
      };
      btCapsuleShape.prototype["calculateLocalInertia"] = btCapsuleShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCapsuleShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btCapsuleShape.prototype["__destroy__"] = btCapsuleShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCapsuleShape___destroy___0(self);
      };
      function btDefaultCollisionConfiguration(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg0 === void 0) {
          this.ptr = _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_0();
          getCache(btDefaultCollisionConfiguration)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btDefaultCollisionConfiguration_btDefaultCollisionConfiguration_1(arg0);
        getCache(btDefaultCollisionConfiguration)[this.ptr] = this;
      }
      btDefaultCollisionConfiguration.prototype = Object.create(WrapperObject.prototype);
      btDefaultCollisionConfiguration.prototype.constructor = btDefaultCollisionConfiguration;
      btDefaultCollisionConfiguration.prototype.__class__ = btDefaultCollisionConfiguration;
      btDefaultCollisionConfiguration.__cache__ = {};
      Module["btDefaultCollisionConfiguration"] = btDefaultCollisionConfiguration;
      btDefaultCollisionConfiguration.prototype["__destroy__"] = btDefaultCollisionConfiguration.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDefaultCollisionConfiguration___destroy___0(self);
      };
      function ConvexResultCallback() {
        throw "cannot construct a ConvexResultCallback, no constructor in IDL";
      }
      ConvexResultCallback.prototype = Object.create(WrapperObject.prototype);
      ConvexResultCallback.prototype.constructor = ConvexResultCallback;
      ConvexResultCallback.prototype.__class__ = ConvexResultCallback;
      ConvexResultCallback.__cache__ = {};
      Module["ConvexResultCallback"] = ConvexResultCallback;
      ConvexResultCallback.prototype["hasHit"] = ConvexResultCallback.prototype.hasHit = function() {
        var self = this.ptr;
        return !!_emscripten_bind_ConvexResultCallback_hasHit_0(self);
      };
      ConvexResultCallback.prototype["get_m_collisionFilterGroup"] = ConvexResultCallback.prototype.get_m_collisionFilterGroup = function() {
        var self = this.ptr;
        return _emscripten_bind_ConvexResultCallback_get_m_collisionFilterGroup_0(self);
      };
      ConvexResultCallback.prototype["set_m_collisionFilterGroup"] = ConvexResultCallback.prototype.set_m_collisionFilterGroup = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ConvexResultCallback_set_m_collisionFilterGroup_1(self, arg0);
      };
      ConvexResultCallback.prototype["get_m_collisionFilterMask"] = ConvexResultCallback.prototype.get_m_collisionFilterMask = function() {
        var self = this.ptr;
        return _emscripten_bind_ConvexResultCallback_get_m_collisionFilterMask_0(self);
      };
      ConvexResultCallback.prototype["set_m_collisionFilterMask"] = ConvexResultCallback.prototype.set_m_collisionFilterMask = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ConvexResultCallback_set_m_collisionFilterMask_1(self, arg0);
      };
      ConvexResultCallback.prototype["get_m_closestHitFraction"] = ConvexResultCallback.prototype.get_m_closestHitFraction = function() {
        var self = this.ptr;
        return _emscripten_bind_ConvexResultCallback_get_m_closestHitFraction_0(self);
      };
      ConvexResultCallback.prototype["set_m_closestHitFraction"] = ConvexResultCallback.prototype.set_m_closestHitFraction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ConvexResultCallback_set_m_closestHitFraction_1(self, arg0);
      };
      ConvexResultCallback.prototype["__destroy__"] = ConvexResultCallback.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_ConvexResultCallback___destroy___0(self);
      };
      function btTriangleMeshShape() {
        throw "cannot construct a btTriangleMeshShape, no constructor in IDL";
      }
      btTriangleMeshShape.prototype = Object.create(btConcaveShape.prototype);
      btTriangleMeshShape.prototype.constructor = btTriangleMeshShape;
      btTriangleMeshShape.prototype.__class__ = btTriangleMeshShape;
      btTriangleMeshShape.__cache__ = {};
      Module["btTriangleMeshShape"] = btTriangleMeshShape;
      btTriangleMeshShape.prototype["setLocalScaling"] = btTriangleMeshShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btTriangleMeshShape_setLocalScaling_1(self, arg0);
      };
      btTriangleMeshShape.prototype["calculateLocalInertia"] = btTriangleMeshShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btTriangleMeshShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btTriangleMeshShape.prototype["__destroy__"] = btTriangleMeshShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btTriangleMeshShape___destroy___0(self);
      };
      function btGhostObject() {
        this.ptr = _emscripten_bind_btGhostObject_btGhostObject_0();
        getCache(btGhostObject)[this.ptr] = this;
      }
      btGhostObject.prototype = Object.create(btCollisionObject.prototype);
      btGhostObject.prototype.constructor = btGhostObject;
      btGhostObject.prototype.__class__ = btGhostObject;
      btGhostObject.__cache__ = {};
      Module["btGhostObject"] = btGhostObject;
      btGhostObject.prototype["getNumOverlappingObjects"] = btGhostObject.prototype.getNumOverlappingObjects = function() {
        var self = this.ptr;
        return _emscripten_bind_btGhostObject_getNumOverlappingObjects_0(self);
      };
      btGhostObject.prototype["getOverlappingObject"] = btGhostObject.prototype.getOverlappingObject = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btGhostObject_getOverlappingObject_1(self, arg0), btCollisionObject);
      };
      btGhostObject.prototype["setAnisotropicFriction"] = btGhostObject.prototype.setAnisotropicFriction = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btGhostObject_setAnisotropicFriction_2(self, arg0, arg1);
      };
      btGhostObject.prototype["getCollisionShape"] = btGhostObject.prototype.getCollisionShape = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btGhostObject_getCollisionShape_0(self), btCollisionShape);
      };
      btGhostObject.prototype["setContactProcessingThreshold"] = btGhostObject.prototype.setContactProcessingThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setContactProcessingThreshold_1(self, arg0);
      };
      btGhostObject.prototype["setActivationState"] = btGhostObject.prototype.setActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setActivationState_1(self, arg0);
      };
      btGhostObject.prototype["forceActivationState"] = btGhostObject.prototype.forceActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_forceActivationState_1(self, arg0);
      };
      btGhostObject.prototype["activate"] = btGhostObject.prototype.activate = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg0 === void 0) {
          _emscripten_bind_btGhostObject_activate_0(self);
          return;
        }
        _emscripten_bind_btGhostObject_activate_1(self, arg0);
      };
      btGhostObject.prototype["isActive"] = btGhostObject.prototype.isActive = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btGhostObject_isActive_0(self);
      };
      btGhostObject.prototype["isKinematicObject"] = btGhostObject.prototype.isKinematicObject = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btGhostObject_isKinematicObject_0(self);
      };
      btGhostObject.prototype["setRestitution"] = btGhostObject.prototype.setRestitution = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setRestitution_1(self, arg0);
      };
      btGhostObject.prototype["setFriction"] = btGhostObject.prototype.setFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setFriction_1(self, arg0);
      };
      btGhostObject.prototype["setRollingFriction"] = btGhostObject.prototype.setRollingFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setRollingFriction_1(self, arg0);
      };
      btGhostObject.prototype["getWorldTransform"] = btGhostObject.prototype.getWorldTransform = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btGhostObject_getWorldTransform_0(self), btTransform);
      };
      btGhostObject.prototype["getCollisionFlags"] = btGhostObject.prototype.getCollisionFlags = function() {
        var self = this.ptr;
        return _emscripten_bind_btGhostObject_getCollisionFlags_0(self);
      };
      btGhostObject.prototype["setCollisionFlags"] = btGhostObject.prototype.setCollisionFlags = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setCollisionFlags_1(self, arg0);
      };
      btGhostObject.prototype["setWorldTransform"] = btGhostObject.prototype.setWorldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setWorldTransform_1(self, arg0);
      };
      btGhostObject.prototype["setCollisionShape"] = btGhostObject.prototype.setCollisionShape = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setCollisionShape_1(self, arg0);
      };
      btGhostObject.prototype["setCcdMotionThreshold"] = btGhostObject.prototype.setCcdMotionThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setCcdMotionThreshold_1(self, arg0);
      };
      btGhostObject.prototype["setCcdSweptSphereRadius"] = btGhostObject.prototype.setCcdSweptSphereRadius = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setCcdSweptSphereRadius_1(self, arg0);
      };
      btGhostObject.prototype["getUserIndex"] = btGhostObject.prototype.getUserIndex = function() {
        var self = this.ptr;
        return _emscripten_bind_btGhostObject_getUserIndex_0(self);
      };
      btGhostObject.prototype["setUserIndex"] = btGhostObject.prototype.setUserIndex = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setUserIndex_1(self, arg0);
      };
      btGhostObject.prototype["getUserPointer"] = btGhostObject.prototype.getUserPointer = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btGhostObject_getUserPointer_0(self), VoidPtr);
      };
      btGhostObject.prototype["setUserPointer"] = btGhostObject.prototype.setUserPointer = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGhostObject_setUserPointer_1(self, arg0);
      };
      btGhostObject.prototype["__destroy__"] = btGhostObject.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btGhostObject___destroy___0(self);
      };
      function btConeShape(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        this.ptr = _emscripten_bind_btConeShape_btConeShape_2(arg0, arg1);
        getCache(btConeShape)[this.ptr] = this;
      }
      btConeShape.prototype = Object.create(btCollisionShape.prototype);
      btConeShape.prototype.constructor = btConeShape;
      btConeShape.prototype.__class__ = btConeShape;
      btConeShape.__cache__ = {};
      Module["btConeShape"] = btConeShape;
      btConeShape.prototype["setLocalScaling"] = btConeShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeShape_setLocalScaling_1(self, arg0);
      };
      btConeShape.prototype["calculateLocalInertia"] = btConeShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btConeShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btConeShape.prototype["__destroy__"] = btConeShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConeShape___destroy___0(self);
      };
      function btActionInterface() {
        throw "cannot construct a btActionInterface, no constructor in IDL";
      }
      btActionInterface.prototype = Object.create(WrapperObject.prototype);
      btActionInterface.prototype.constructor = btActionInterface;
      btActionInterface.prototype.__class__ = btActionInterface;
      btActionInterface.__cache__ = {};
      Module["btActionInterface"] = btActionInterface;
      btActionInterface.prototype["__destroy__"] = btActionInterface.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btActionInterface___destroy___0(self);
      };
      function btVector3(arg0, arg1, arg2) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg0 === void 0) {
          this.ptr = _emscripten_bind_btVector3_btVector3_0();
          getCache(btVector3)[this.ptr] = this;
          return;
        }
        if (arg1 === void 0) {
          this.ptr = _emscripten_bind_btVector3_btVector3_1(arg0);
          getCache(btVector3)[this.ptr] = this;
          return;
        }
        if (arg2 === void 0) {
          this.ptr = _emscripten_bind_btVector3_btVector3_2(arg0, arg1);
          getCache(btVector3)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btVector3_btVector3_3(arg0, arg1, arg2);
        getCache(btVector3)[this.ptr] = this;
      }
      btVector3.prototype = Object.create(WrapperObject.prototype);
      btVector3.prototype.constructor = btVector3;
      btVector3.prototype.__class__ = btVector3;
      btVector3.__cache__ = {};
      Module["btVector3"] = btVector3;
      btVector3.prototype["length"] = btVector3.prototype.length = function() {
        var self = this.ptr;
        return _emscripten_bind_btVector3_length_0(self);
      };
      btVector3.prototype["x"] = btVector3.prototype.x = function() {
        var self = this.ptr;
        return _emscripten_bind_btVector3_x_0(self);
      };
      btVector3.prototype["y"] = btVector3.prototype.y = function() {
        var self = this.ptr;
        return _emscripten_bind_btVector3_y_0(self);
      };
      btVector3.prototype["z"] = btVector3.prototype.z = function() {
        var self = this.ptr;
        return _emscripten_bind_btVector3_z_0(self);
      };
      btVector3.prototype["setX"] = btVector3.prototype.setX = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVector3_setX_1(self, arg0);
      };
      btVector3.prototype["setY"] = btVector3.prototype.setY = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVector3_setY_1(self, arg0);
      };
      btVector3.prototype["setZ"] = btVector3.prototype.setZ = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVector3_setZ_1(self, arg0);
      };
      btVector3.prototype["setValue"] = btVector3.prototype.setValue = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btVector3_setValue_3(self, arg0, arg1, arg2);
      };
      btVector3.prototype["normalize"] = btVector3.prototype.normalize = function() {
        var self = this.ptr;
        _emscripten_bind_btVector3_normalize_0(self);
      };
      btVector3.prototype["dot"] = btVector3.prototype.dot = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return _emscripten_bind_btVector3_dot_1(self, arg0);
      };
      btVector3.prototype["op_mul"] = btVector3.prototype.op_mul = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btVector3_op_mul_1(self, arg0), btVector3);
      };
      btVector3.prototype["op_add"] = btVector3.prototype.op_add = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btVector3_op_add_1(self, arg0), btVector3);
      };
      btVector3.prototype["op_sub"] = btVector3.prototype.op_sub = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btVector3_op_sub_1(self, arg0), btVector3);
      };
      btVector3.prototype["__destroy__"] = btVector3.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btVector3___destroy___0(self);
      };
      function btVehicleRaycaster() {
        throw "cannot construct a btVehicleRaycaster, no constructor in IDL";
      }
      btVehicleRaycaster.prototype = Object.create(WrapperObject.prototype);
      btVehicleRaycaster.prototype.constructor = btVehicleRaycaster;
      btVehicleRaycaster.prototype.__class__ = btVehicleRaycaster;
      btVehicleRaycaster.__cache__ = {};
      Module["btVehicleRaycaster"] = btVehicleRaycaster;
      btVehicleRaycaster.prototype["__destroy__"] = btVehicleRaycaster.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btVehicleRaycaster___destroy___0(self);
      };
      function btQuadWord() {
        throw "cannot construct a btQuadWord, no constructor in IDL";
      }
      btQuadWord.prototype = Object.create(WrapperObject.prototype);
      btQuadWord.prototype.constructor = btQuadWord;
      btQuadWord.prototype.__class__ = btQuadWord;
      btQuadWord.__cache__ = {};
      Module["btQuadWord"] = btQuadWord;
      btQuadWord.prototype["x"] = btQuadWord.prototype.x = function() {
        var self = this.ptr;
        return _emscripten_bind_btQuadWord_x_0(self);
      };
      btQuadWord.prototype["y"] = btQuadWord.prototype.y = function() {
        var self = this.ptr;
        return _emscripten_bind_btQuadWord_y_0(self);
      };
      btQuadWord.prototype["z"] = btQuadWord.prototype.z = function() {
        var self = this.ptr;
        return _emscripten_bind_btQuadWord_z_0(self);
      };
      btQuadWord.prototype["w"] = btQuadWord.prototype.w = function() {
        var self = this.ptr;
        return _emscripten_bind_btQuadWord_w_0(self);
      };
      btQuadWord.prototype["setX"] = btQuadWord.prototype.setX = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btQuadWord_setX_1(self, arg0);
      };
      btQuadWord.prototype["setY"] = btQuadWord.prototype.setY = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btQuadWord_setY_1(self, arg0);
      };
      btQuadWord.prototype["setZ"] = btQuadWord.prototype.setZ = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btQuadWord_setZ_1(self, arg0);
      };
      btQuadWord.prototype["setW"] = btQuadWord.prototype.setW = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btQuadWord_setW_1(self, arg0);
      };
      btQuadWord.prototype["__destroy__"] = btQuadWord.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btQuadWord___destroy___0(self);
      };
      function btCylinderShape(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        this.ptr = _emscripten_bind_btCylinderShape_btCylinderShape_1(arg0);
        getCache(btCylinderShape)[this.ptr] = this;
      }
      btCylinderShape.prototype = Object.create(btCollisionShape.prototype);
      btCylinderShape.prototype.constructor = btCylinderShape;
      btCylinderShape.prototype.__class__ = btCylinderShape;
      btCylinderShape.__cache__ = {};
      Module["btCylinderShape"] = btCylinderShape;
      btCylinderShape.prototype["setMargin"] = btCylinderShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCylinderShape_setMargin_1(self, arg0);
      };
      btCylinderShape.prototype["getMargin"] = btCylinderShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btCylinderShape_getMargin_0(self);
      };
      btCylinderShape.prototype["setLocalScaling"] = btCylinderShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCylinderShape_setLocalScaling_1(self, arg0);
      };
      btCylinderShape.prototype["calculateLocalInertia"] = btCylinderShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCylinderShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btCylinderShape.prototype["__destroy__"] = btCylinderShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCylinderShape___destroy___0(self);
      };
      function btDiscreteDynamicsWorld(arg0, arg1, arg2, arg3) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        this.ptr = _emscripten_bind_btDiscreteDynamicsWorld_btDiscreteDynamicsWorld_4(arg0, arg1, arg2, arg3);
        getCache(btDiscreteDynamicsWorld)[this.ptr] = this;
      }
      btDiscreteDynamicsWorld.prototype = Object.create(btDynamicsWorld.prototype);
      btDiscreteDynamicsWorld.prototype.constructor = btDiscreteDynamicsWorld;
      btDiscreteDynamicsWorld.prototype.__class__ = btDiscreteDynamicsWorld;
      btDiscreteDynamicsWorld.__cache__ = {};
      Module["btDiscreteDynamicsWorld"] = btDiscreteDynamicsWorld;
      btDiscreteDynamicsWorld.prototype["setGravity"] = btDiscreteDynamicsWorld.prototype.setGravity = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_setGravity_1(self, arg0);
      };
      btDiscreteDynamicsWorld.prototype["getGravity"] = btDiscreteDynamicsWorld.prototype.getGravity = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getGravity_0(self), btVector3);
      };
      btDiscreteDynamicsWorld.prototype["addRigidBody"] = btDiscreteDynamicsWorld.prototype.addRigidBody = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg1 === void 0) {
          _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_1(self, arg0);
          return;
        }
        if (arg2 === void 0) {
          _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_2(self, arg0, arg1);
          return;
        }
        _emscripten_bind_btDiscreteDynamicsWorld_addRigidBody_3(self, arg0, arg1, arg2);
      };
      btDiscreteDynamicsWorld.prototype["removeRigidBody"] = btDiscreteDynamicsWorld.prototype.removeRigidBody = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_removeRigidBody_1(self, arg0);
      };
      btDiscreteDynamicsWorld.prototype["addVehicle"] = btDiscreteDynamicsWorld.prototype.addVehicle = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_addVehicle_1(self, arg0);
      };
      btDiscreteDynamicsWorld.prototype["removeVehicle"] = btDiscreteDynamicsWorld.prototype.removeVehicle = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_removeVehicle_1(self, arg0);
      };
      btDiscreteDynamicsWorld.prototype["addConstraint"] = btDiscreteDynamicsWorld.prototype.addConstraint = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg1 === void 0) {
          _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_1(self, arg0);
          return;
        }
        _emscripten_bind_btDiscreteDynamicsWorld_addConstraint_2(self, arg0, arg1);
      };
      btDiscreteDynamicsWorld.prototype["removeConstraint"] = btDiscreteDynamicsWorld.prototype.removeConstraint = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_removeConstraint_1(self, arg0);
      };
      btDiscreteDynamicsWorld.prototype["stepSimulation"] = btDiscreteDynamicsWorld.prototype.stepSimulation = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg1 === void 0) {
          return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_1(self, arg0);
        }
        if (arg2 === void 0) {
          return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_2(self, arg0, arg1);
        }
        return _emscripten_bind_btDiscreteDynamicsWorld_stepSimulation_3(self, arg0, arg1, arg2);
      };
      btDiscreteDynamicsWorld.prototype["getDispatcher"] = btDiscreteDynamicsWorld.prototype.getDispatcher = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getDispatcher_0(self), btDispatcher);
      };
      btDiscreteDynamicsWorld.prototype["rayTest"] = btDiscreteDynamicsWorld.prototype.rayTest = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_rayTest_3(self, arg0, arg1, arg2);
      };
      btDiscreteDynamicsWorld.prototype["getPairCache"] = btDiscreteDynamicsWorld.prototype.getPairCache = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getPairCache_0(self), btOverlappingPairCache);
      };
      btDiscreteDynamicsWorld.prototype["getDispatchInfo"] = btDiscreteDynamicsWorld.prototype.getDispatchInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getDispatchInfo_0(self), btDispatcherInfo);
      };
      btDiscreteDynamicsWorld.prototype["addCollisionObject"] = btDiscreteDynamicsWorld.prototype.addCollisionObject = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg1 === void 0) {
          _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_1(self, arg0);
          return;
        }
        if (arg2 === void 0) {
          _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_2(self, arg0, arg1);
          return;
        }
        _emscripten_bind_btDiscreteDynamicsWorld_addCollisionObject_3(self, arg0, arg1, arg2);
      };
      btDiscreteDynamicsWorld.prototype["getBroadphase"] = btDiscreteDynamicsWorld.prototype.getBroadphase = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getBroadphase_0(self), btBroadphaseInterface);
      };
      btDiscreteDynamicsWorld.prototype["convexSweepTest"] = btDiscreteDynamicsWorld.prototype.convexSweepTest = function(arg0, arg1, arg2, arg3, arg4) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_convexSweepTest_5(self, arg0, arg1, arg2, arg3, arg4);
      };
      btDiscreteDynamicsWorld.prototype["contactPairTest"] = btDiscreteDynamicsWorld.prototype.contactPairTest = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_contactPairTest_3(self, arg0, arg1, arg2);
      };
      btDiscreteDynamicsWorld.prototype["contactTest"] = btDiscreteDynamicsWorld.prototype.contactTest = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_contactTest_2(self, arg0, arg1);
      };
      btDiscreteDynamicsWorld.prototype["addAction"] = btDiscreteDynamicsWorld.prototype.addAction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_addAction_1(self, arg0);
      };
      btDiscreteDynamicsWorld.prototype["removeAction"] = btDiscreteDynamicsWorld.prototype.removeAction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld_removeAction_1(self, arg0);
      };
      btDiscreteDynamicsWorld.prototype["getSolverInfo"] = btDiscreteDynamicsWorld.prototype.getSolverInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDiscreteDynamicsWorld_getSolverInfo_0(self), btContactSolverInfo);
      };
      btDiscreteDynamicsWorld.prototype["__destroy__"] = btDiscreteDynamicsWorld.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDiscreteDynamicsWorld___destroy___0(self);
      };
      function btConvexShape() {
        throw "cannot construct a btConvexShape, no constructor in IDL";
      }
      btConvexShape.prototype = Object.create(btCollisionShape.prototype);
      btConvexShape.prototype.constructor = btConvexShape;
      btConvexShape.prototype.__class__ = btConvexShape;
      btConvexShape.__cache__ = {};
      Module["btConvexShape"] = btConvexShape;
      btConvexShape.prototype["setLocalScaling"] = btConvexShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConvexShape_setLocalScaling_1(self, arg0);
      };
      btConvexShape.prototype["calculateLocalInertia"] = btConvexShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btConvexShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btConvexShape.prototype["setMargin"] = btConvexShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConvexShape_setMargin_1(self, arg0);
      };
      btConvexShape.prototype["getMargin"] = btConvexShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btConvexShape_getMargin_0(self);
      };
      btConvexShape.prototype["__destroy__"] = btConvexShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConvexShape___destroy___0(self);
      };
      function btDispatcher() {
        throw "cannot construct a btDispatcher, no constructor in IDL";
      }
      btDispatcher.prototype = Object.create(WrapperObject.prototype);
      btDispatcher.prototype.constructor = btDispatcher;
      btDispatcher.prototype.__class__ = btDispatcher;
      btDispatcher.__cache__ = {};
      Module["btDispatcher"] = btDispatcher;
      btDispatcher.prototype["getNumManifolds"] = btDispatcher.prototype.getNumManifolds = function() {
        var self = this.ptr;
        return _emscripten_bind_btDispatcher_getNumManifolds_0(self);
      };
      btDispatcher.prototype["getManifoldByIndexInternal"] = btDispatcher.prototype.getManifoldByIndexInternal = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btDispatcher_getManifoldByIndexInternal_1(self, arg0), btPersistentManifold);
      };
      btDispatcher.prototype["__destroy__"] = btDispatcher.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDispatcher___destroy___0(self);
      };
      function btGeneric6DofConstraint(arg0, arg1, arg2, arg3, arg4) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_3(arg0, arg1, arg2);
          getCache(btGeneric6DofConstraint)[this.ptr] = this;
          return;
        }
        if (arg4 === void 0) {
          this.ptr = _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_4(arg0, arg1, arg2, arg3);
          getCache(btGeneric6DofConstraint)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btGeneric6DofConstraint_btGeneric6DofConstraint_5(arg0, arg1, arg2, arg3, arg4);
        getCache(btGeneric6DofConstraint)[this.ptr] = this;
      }
      btGeneric6DofConstraint.prototype = Object.create(btTypedConstraint.prototype);
      btGeneric6DofConstraint.prototype.constructor = btGeneric6DofConstraint;
      btGeneric6DofConstraint.prototype.__class__ = btGeneric6DofConstraint;
      btGeneric6DofConstraint.__cache__ = {};
      Module["btGeneric6DofConstraint"] = btGeneric6DofConstraint;
      btGeneric6DofConstraint.prototype["setLinearLowerLimit"] = btGeneric6DofConstraint.prototype.setLinearLowerLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofConstraint_setLinearLowerLimit_1(self, arg0);
      };
      btGeneric6DofConstraint.prototype["setLinearUpperLimit"] = btGeneric6DofConstraint.prototype.setLinearUpperLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofConstraint_setLinearUpperLimit_1(self, arg0);
      };
      btGeneric6DofConstraint.prototype["setAngularLowerLimit"] = btGeneric6DofConstraint.prototype.setAngularLowerLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofConstraint_setAngularLowerLimit_1(self, arg0);
      };
      btGeneric6DofConstraint.prototype["setAngularUpperLimit"] = btGeneric6DofConstraint.prototype.setAngularUpperLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofConstraint_setAngularUpperLimit_1(self, arg0);
      };
      btGeneric6DofConstraint.prototype["getRotationalLimitMotor"] = btGeneric6DofConstraint.prototype.getRotationalLimitMotor = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btGeneric6DofConstraint_getRotationalLimitMotor_1(self, arg0), btRotationalLimitMotor);
      };
      btGeneric6DofConstraint.prototype["enableFeedback"] = btGeneric6DofConstraint.prototype.enableFeedback = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofConstraint_enableFeedback_1(self, arg0);
      };
      btGeneric6DofConstraint.prototype["getBreakingImpulseThreshold"] = btGeneric6DofConstraint.prototype.getBreakingImpulseThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btGeneric6DofConstraint_getBreakingImpulseThreshold_0(self);
      };
      btGeneric6DofConstraint.prototype["setBreakingImpulseThreshold"] = btGeneric6DofConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofConstraint_setBreakingImpulseThreshold_1(self, arg0);
      };
      btGeneric6DofConstraint.prototype["__destroy__"] = btGeneric6DofConstraint.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btGeneric6DofConstraint___destroy___0(self);
      };
      function btStridingMeshInterface() {
        throw "cannot construct a btStridingMeshInterface, no constructor in IDL";
      }
      btStridingMeshInterface.prototype = Object.create(WrapperObject.prototype);
      btStridingMeshInterface.prototype.constructor = btStridingMeshInterface;
      btStridingMeshInterface.prototype.__class__ = btStridingMeshInterface;
      btStridingMeshInterface.__cache__ = {};
      Module["btStridingMeshInterface"] = btStridingMeshInterface;
      btStridingMeshInterface.prototype["__destroy__"] = btStridingMeshInterface.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btStridingMeshInterface___destroy___0(self);
      };
      function btMotionState() {
        throw "cannot construct a btMotionState, no constructor in IDL";
      }
      btMotionState.prototype = Object.create(WrapperObject.prototype);
      btMotionState.prototype.constructor = btMotionState;
      btMotionState.prototype.__class__ = btMotionState;
      btMotionState.__cache__ = {};
      Module["btMotionState"] = btMotionState;
      btMotionState.prototype["getWorldTransform"] = btMotionState.prototype.getWorldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btMotionState_getWorldTransform_1(self, arg0);
      };
      btMotionState.prototype["setWorldTransform"] = btMotionState.prototype.setWorldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btMotionState_setWorldTransform_1(self, arg0);
      };
      btMotionState.prototype["__destroy__"] = btMotionState.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btMotionState___destroy___0(self);
      };
      function ContactResultCallback() {
        throw "cannot construct a ContactResultCallback, no constructor in IDL";
      }
      ContactResultCallback.prototype = Object.create(WrapperObject.prototype);
      ContactResultCallback.prototype.constructor = ContactResultCallback;
      ContactResultCallback.prototype.__class__ = ContactResultCallback;
      ContactResultCallback.__cache__ = {};
      Module["ContactResultCallback"] = ContactResultCallback;
      ContactResultCallback.prototype["addSingleResult"] = ContactResultCallback.prototype.addSingleResult = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg5 && typeof arg5 === "object")
          arg5 = arg5.ptr;
        if (arg6 && typeof arg6 === "object")
          arg6 = arg6.ptr;
        return _emscripten_bind_ContactResultCallback_addSingleResult_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
      };
      ContactResultCallback.prototype["__destroy__"] = ContactResultCallback.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_ContactResultCallback___destroy___0(self);
      };
      function btSoftBodySolver() {
        throw "cannot construct a btSoftBodySolver, no constructor in IDL";
      }
      btSoftBodySolver.prototype = Object.create(WrapperObject.prototype);
      btSoftBodySolver.prototype.constructor = btSoftBodySolver;
      btSoftBodySolver.prototype.__class__ = btSoftBodySolver;
      btSoftBodySolver.__cache__ = {};
      Module["btSoftBodySolver"] = btSoftBodySolver;
      btSoftBodySolver.prototype["__destroy__"] = btSoftBodySolver.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSoftBodySolver___destroy___0(self);
      };
      function RayResultCallback() {
        throw "cannot construct a RayResultCallback, no constructor in IDL";
      }
      RayResultCallback.prototype = Object.create(WrapperObject.prototype);
      RayResultCallback.prototype.constructor = RayResultCallback;
      RayResultCallback.prototype.__class__ = RayResultCallback;
      RayResultCallback.__cache__ = {};
      Module["RayResultCallback"] = RayResultCallback;
      RayResultCallback.prototype["hasHit"] = RayResultCallback.prototype.hasHit = function() {
        var self = this.ptr;
        return !!_emscripten_bind_RayResultCallback_hasHit_0(self);
      };
      RayResultCallback.prototype["get_m_collisionFilterGroup"] = RayResultCallback.prototype.get_m_collisionFilterGroup = function() {
        var self = this.ptr;
        return _emscripten_bind_RayResultCallback_get_m_collisionFilterGroup_0(self);
      };
      RayResultCallback.prototype["set_m_collisionFilterGroup"] = RayResultCallback.prototype.set_m_collisionFilterGroup = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RayResultCallback_set_m_collisionFilterGroup_1(self, arg0);
      };
      RayResultCallback.prototype["get_m_collisionFilterMask"] = RayResultCallback.prototype.get_m_collisionFilterMask = function() {
        var self = this.ptr;
        return _emscripten_bind_RayResultCallback_get_m_collisionFilterMask_0(self);
      };
      RayResultCallback.prototype["set_m_collisionFilterMask"] = RayResultCallback.prototype.set_m_collisionFilterMask = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RayResultCallback_set_m_collisionFilterMask_1(self, arg0);
      };
      RayResultCallback.prototype["get_m_collisionObject"] = RayResultCallback.prototype.get_m_collisionObject = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_RayResultCallback_get_m_collisionObject_0(self), btCollisionObject);
      };
      RayResultCallback.prototype["set_m_collisionObject"] = RayResultCallback.prototype.set_m_collisionObject = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RayResultCallback_set_m_collisionObject_1(self, arg0);
      };
      RayResultCallback.prototype["__destroy__"] = RayResultCallback.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_RayResultCallback___destroy___0(self);
      };
      function btMatrix3x3() {
        throw "cannot construct a btMatrix3x3, no constructor in IDL";
      }
      btMatrix3x3.prototype = Object.create(WrapperObject.prototype);
      btMatrix3x3.prototype.constructor = btMatrix3x3;
      btMatrix3x3.prototype.__class__ = btMatrix3x3;
      btMatrix3x3.__cache__ = {};
      Module["btMatrix3x3"] = btMatrix3x3;
      btMatrix3x3.prototype["setEulerZYX"] = btMatrix3x3.prototype.setEulerZYX = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btMatrix3x3_setEulerZYX_3(self, arg0, arg1, arg2);
      };
      btMatrix3x3.prototype["getRotation"] = btMatrix3x3.prototype.getRotation = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btMatrix3x3_getRotation_1(self, arg0);
      };
      btMatrix3x3.prototype["getRow"] = btMatrix3x3.prototype.getRow = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btMatrix3x3_getRow_1(self, arg0), btVector3);
      };
      btMatrix3x3.prototype["__destroy__"] = btMatrix3x3.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btMatrix3x3___destroy___0(self);
      };
      function btDispatcherInfo() {
        throw "cannot construct a btDispatcherInfo, no constructor in IDL";
      }
      btDispatcherInfo.prototype = Object.create(WrapperObject.prototype);
      btDispatcherInfo.prototype.constructor = btDispatcherInfo;
      btDispatcherInfo.prototype.__class__ = btDispatcherInfo;
      btDispatcherInfo.__cache__ = {};
      Module["btDispatcherInfo"] = btDispatcherInfo;
      btDispatcherInfo.prototype["get_m_timeStep"] = btDispatcherInfo.prototype.get_m_timeStep = function() {
        var self = this.ptr;
        return _emscripten_bind_btDispatcherInfo_get_m_timeStep_0(self);
      };
      btDispatcherInfo.prototype["set_m_timeStep"] = btDispatcherInfo.prototype.set_m_timeStep = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_timeStep_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_stepCount"] = btDispatcherInfo.prototype.get_m_stepCount = function() {
        var self = this.ptr;
        return _emscripten_bind_btDispatcherInfo_get_m_stepCount_0(self);
      };
      btDispatcherInfo.prototype["set_m_stepCount"] = btDispatcherInfo.prototype.set_m_stepCount = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_stepCount_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_dispatchFunc"] = btDispatcherInfo.prototype.get_m_dispatchFunc = function() {
        var self = this.ptr;
        return _emscripten_bind_btDispatcherInfo_get_m_dispatchFunc_0(self);
      };
      btDispatcherInfo.prototype["set_m_dispatchFunc"] = btDispatcherInfo.prototype.set_m_dispatchFunc = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_dispatchFunc_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_timeOfImpact"] = btDispatcherInfo.prototype.get_m_timeOfImpact = function() {
        var self = this.ptr;
        return _emscripten_bind_btDispatcherInfo_get_m_timeOfImpact_0(self);
      };
      btDispatcherInfo.prototype["set_m_timeOfImpact"] = btDispatcherInfo.prototype.set_m_timeOfImpact = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_timeOfImpact_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_useContinuous"] = btDispatcherInfo.prototype.get_m_useContinuous = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btDispatcherInfo_get_m_useContinuous_0(self);
      };
      btDispatcherInfo.prototype["set_m_useContinuous"] = btDispatcherInfo.prototype.set_m_useContinuous = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_useContinuous_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_enableSatConvex"] = btDispatcherInfo.prototype.get_m_enableSatConvex = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btDispatcherInfo_get_m_enableSatConvex_0(self);
      };
      btDispatcherInfo.prototype["set_m_enableSatConvex"] = btDispatcherInfo.prototype.set_m_enableSatConvex = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_enableSatConvex_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_enableSPU"] = btDispatcherInfo.prototype.get_m_enableSPU = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btDispatcherInfo_get_m_enableSPU_0(self);
      };
      btDispatcherInfo.prototype["set_m_enableSPU"] = btDispatcherInfo.prototype.set_m_enableSPU = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_enableSPU_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_useEpa"] = btDispatcherInfo.prototype.get_m_useEpa = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btDispatcherInfo_get_m_useEpa_0(self);
      };
      btDispatcherInfo.prototype["set_m_useEpa"] = btDispatcherInfo.prototype.set_m_useEpa = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_useEpa_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_allowedCcdPenetration"] = btDispatcherInfo.prototype.get_m_allowedCcdPenetration = function() {
        var self = this.ptr;
        return _emscripten_bind_btDispatcherInfo_get_m_allowedCcdPenetration_0(self);
      };
      btDispatcherInfo.prototype["set_m_allowedCcdPenetration"] = btDispatcherInfo.prototype.set_m_allowedCcdPenetration = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_allowedCcdPenetration_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_useConvexConservativeDistanceUtil"] = btDispatcherInfo.prototype.get_m_useConvexConservativeDistanceUtil = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btDispatcherInfo_get_m_useConvexConservativeDistanceUtil_0(self);
      };
      btDispatcherInfo.prototype["set_m_useConvexConservativeDistanceUtil"] = btDispatcherInfo.prototype.set_m_useConvexConservativeDistanceUtil = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_useConvexConservativeDistanceUtil_1(self, arg0);
      };
      btDispatcherInfo.prototype["get_m_convexConservativeDistanceThreshold"] = btDispatcherInfo.prototype.get_m_convexConservativeDistanceThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btDispatcherInfo_get_m_convexConservativeDistanceThreshold_0(self);
      };
      btDispatcherInfo.prototype["set_m_convexConservativeDistanceThreshold"] = btDispatcherInfo.prototype.set_m_convexConservativeDistanceThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDispatcherInfo_set_m_convexConservativeDistanceThreshold_1(self, arg0);
      };
      btDispatcherInfo.prototype["__destroy__"] = btDispatcherInfo.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDispatcherInfo___destroy___0(self);
      };
      function Material() {
        throw "cannot construct a Material, no constructor in IDL";
      }
      Material.prototype = Object.create(WrapperObject.prototype);
      Material.prototype.constructor = Material;
      Material.prototype.__class__ = Material;
      Material.__cache__ = {};
      Module["Material"] = Material;
      Material.prototype["get_m_kLST"] = Material.prototype.get_m_kLST = function() {
        var self = this.ptr;
        return _emscripten_bind_Material_get_m_kLST_0(self);
      };
      Material.prototype["set_m_kLST"] = Material.prototype.set_m_kLST = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Material_set_m_kLST_1(self, arg0);
      };
      Material.prototype["get_m_kAST"] = Material.prototype.get_m_kAST = function() {
        var self = this.ptr;
        return _emscripten_bind_Material_get_m_kAST_0(self);
      };
      Material.prototype["set_m_kAST"] = Material.prototype.set_m_kAST = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Material_set_m_kAST_1(self, arg0);
      };
      Material.prototype["get_m_kVST"] = Material.prototype.get_m_kVST = function() {
        var self = this.ptr;
        return _emscripten_bind_Material_get_m_kVST_0(self);
      };
      Material.prototype["set_m_kVST"] = Material.prototype.set_m_kVST = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Material_set_m_kVST_1(self, arg0);
      };
      Material.prototype["get_m_flags"] = Material.prototype.get_m_flags = function() {
        var self = this.ptr;
        return _emscripten_bind_Material_get_m_flags_0(self);
      };
      Material.prototype["set_m_flags"] = Material.prototype.set_m_flags = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Material_set_m_flags_1(self, arg0);
      };
      Material.prototype["__destroy__"] = Material.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_Material___destroy___0(self);
      };
      function btConvexTriangleMeshShape(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg1 === void 0) {
          this.ptr = _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_1(arg0);
          getCache(btConvexTriangleMeshShape)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btConvexTriangleMeshShape_btConvexTriangleMeshShape_2(arg0, arg1);
        getCache(btConvexTriangleMeshShape)[this.ptr] = this;
      }
      btConvexTriangleMeshShape.prototype = Object.create(btConvexShape.prototype);
      btConvexTriangleMeshShape.prototype.constructor = btConvexTriangleMeshShape;
      btConvexTriangleMeshShape.prototype.__class__ = btConvexTriangleMeshShape;
      btConvexTriangleMeshShape.__cache__ = {};
      Module["btConvexTriangleMeshShape"] = btConvexTriangleMeshShape;
      btConvexTriangleMeshShape.prototype["setLocalScaling"] = btConvexTriangleMeshShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConvexTriangleMeshShape_setLocalScaling_1(self, arg0);
      };
      btConvexTriangleMeshShape.prototype["calculateLocalInertia"] = btConvexTriangleMeshShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btConvexTriangleMeshShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btConvexTriangleMeshShape.prototype["setMargin"] = btConvexTriangleMeshShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConvexTriangleMeshShape_setMargin_1(self, arg0);
      };
      btConvexTriangleMeshShape.prototype["getMargin"] = btConvexTriangleMeshShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btConvexTriangleMeshShape_getMargin_0(self);
      };
      btConvexTriangleMeshShape.prototype["__destroy__"] = btConvexTriangleMeshShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConvexTriangleMeshShape___destroy___0(self);
      };
      function btBroadphaseInterface() {
        throw "cannot construct a btBroadphaseInterface, no constructor in IDL";
      }
      btBroadphaseInterface.prototype = Object.create(WrapperObject.prototype);
      btBroadphaseInterface.prototype.constructor = btBroadphaseInterface;
      btBroadphaseInterface.prototype.__class__ = btBroadphaseInterface;
      btBroadphaseInterface.__cache__ = {};
      Module["btBroadphaseInterface"] = btBroadphaseInterface;
      btBroadphaseInterface.prototype["__destroy__"] = btBroadphaseInterface.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btBroadphaseInterface___destroy___0(self);
      };
      function btRigidBodyConstructionInfo(arg0, arg1, arg2, arg3) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_3(arg0, arg1, arg2);
          getCache(btRigidBodyConstructionInfo)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btRigidBodyConstructionInfo_btRigidBodyConstructionInfo_4(arg0, arg1, arg2, arg3);
        getCache(btRigidBodyConstructionInfo)[this.ptr] = this;
      }
      btRigidBodyConstructionInfo.prototype = Object.create(WrapperObject.prototype);
      btRigidBodyConstructionInfo.prototype.constructor = btRigidBodyConstructionInfo;
      btRigidBodyConstructionInfo.prototype.__class__ = btRigidBodyConstructionInfo;
      btRigidBodyConstructionInfo.__cache__ = {};
      Module["btRigidBodyConstructionInfo"] = btRigidBodyConstructionInfo;
      btRigidBodyConstructionInfo.prototype["get_m_linearDamping"] = btRigidBodyConstructionInfo.prototype.get_m_linearDamping = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearDamping_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_linearDamping"] = btRigidBodyConstructionInfo.prototype.set_m_linearDamping = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearDamping_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_angularDamping"] = btRigidBodyConstructionInfo.prototype.get_m_angularDamping = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularDamping_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_angularDamping"] = btRigidBodyConstructionInfo.prototype.set_m_angularDamping = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularDamping_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_friction"] = btRigidBodyConstructionInfo.prototype.get_m_friction = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_friction_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_friction"] = btRigidBodyConstructionInfo.prototype.set_m_friction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_friction_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_rollingFriction"] = btRigidBodyConstructionInfo.prototype.get_m_rollingFriction = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_rollingFriction_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_rollingFriction"] = btRigidBodyConstructionInfo.prototype.set_m_rollingFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_rollingFriction_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_restitution"] = btRigidBodyConstructionInfo.prototype.get_m_restitution = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_restitution_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_restitution"] = btRigidBodyConstructionInfo.prototype.set_m_restitution = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_restitution_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_linearSleepingThreshold"] = btRigidBodyConstructionInfo.prototype.get_m_linearSleepingThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_linearSleepingThreshold_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_linearSleepingThreshold"] = btRigidBodyConstructionInfo.prototype.set_m_linearSleepingThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_linearSleepingThreshold_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_angularSleepingThreshold"] = btRigidBodyConstructionInfo.prototype.get_m_angularSleepingThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_angularSleepingThreshold_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_angularSleepingThreshold"] = btRigidBodyConstructionInfo.prototype.set_m_angularSleepingThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_angularSleepingThreshold_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_additionalDamping"] = btRigidBodyConstructionInfo.prototype.get_m_additionalDamping = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDamping_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_additionalDamping"] = btRigidBodyConstructionInfo.prototype.set_m_additionalDamping = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDamping_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_additionalDampingFactor"] = btRigidBodyConstructionInfo.prototype.get_m_additionalDampingFactor = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalDampingFactor_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_additionalDampingFactor"] = btRigidBodyConstructionInfo.prototype.set_m_additionalDampingFactor = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalDampingFactor_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_additionalLinearDampingThresholdSqr"] = btRigidBodyConstructionInfo.prototype.get_m_additionalLinearDampingThresholdSqr = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalLinearDampingThresholdSqr_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_additionalLinearDampingThresholdSqr"] = btRigidBodyConstructionInfo.prototype.set_m_additionalLinearDampingThresholdSqr = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalLinearDampingThresholdSqr_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_additionalAngularDampingThresholdSqr"] = btRigidBodyConstructionInfo.prototype.get_m_additionalAngularDampingThresholdSqr = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingThresholdSqr_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_additionalAngularDampingThresholdSqr"] = btRigidBodyConstructionInfo.prototype.set_m_additionalAngularDampingThresholdSqr = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingThresholdSqr_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["get_m_additionalAngularDampingFactor"] = btRigidBodyConstructionInfo.prototype.get_m_additionalAngularDampingFactor = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBodyConstructionInfo_get_m_additionalAngularDampingFactor_0(self);
      };
      btRigidBodyConstructionInfo.prototype["set_m_additionalAngularDampingFactor"] = btRigidBodyConstructionInfo.prototype.set_m_additionalAngularDampingFactor = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo_set_m_additionalAngularDampingFactor_1(self, arg0);
      };
      btRigidBodyConstructionInfo.prototype["__destroy__"] = btRigidBodyConstructionInfo.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btRigidBodyConstructionInfo___destroy___0(self);
      };
      function btCollisionConfiguration() {
        throw "cannot construct a btCollisionConfiguration, no constructor in IDL";
      }
      btCollisionConfiguration.prototype = Object.create(WrapperObject.prototype);
      btCollisionConfiguration.prototype.constructor = btCollisionConfiguration;
      btCollisionConfiguration.prototype.__class__ = btCollisionConfiguration;
      btCollisionConfiguration.__cache__ = {};
      Module["btCollisionConfiguration"] = btCollisionConfiguration;
      btCollisionConfiguration.prototype["__destroy__"] = btCollisionConfiguration.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCollisionConfiguration___destroy___0(self);
      };
      function btPersistentManifold() {
        this.ptr = _emscripten_bind_btPersistentManifold_btPersistentManifold_0();
        getCache(btPersistentManifold)[this.ptr] = this;
      }
      btPersistentManifold.prototype = Object.create(WrapperObject.prototype);
      btPersistentManifold.prototype.constructor = btPersistentManifold;
      btPersistentManifold.prototype.__class__ = btPersistentManifold;
      btPersistentManifold.__cache__ = {};
      Module["btPersistentManifold"] = btPersistentManifold;
      btPersistentManifold.prototype["getBody0"] = btPersistentManifold.prototype.getBody0 = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btPersistentManifold_getBody0_0(self), btCollisionObject);
      };
      btPersistentManifold.prototype["getBody1"] = btPersistentManifold.prototype.getBody1 = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btPersistentManifold_getBody1_0(self), btCollisionObject);
      };
      btPersistentManifold.prototype["getNumContacts"] = btPersistentManifold.prototype.getNumContacts = function() {
        var self = this.ptr;
        return _emscripten_bind_btPersistentManifold_getNumContacts_0(self);
      };
      btPersistentManifold.prototype["getContactPoint"] = btPersistentManifold.prototype.getContactPoint = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btPersistentManifold_getContactPoint_1(self, arg0), btManifoldPoint);
      };
      btPersistentManifold.prototype["__destroy__"] = btPersistentManifold.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btPersistentManifold___destroy___0(self);
      };
      function btCompoundShape(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg0 === void 0) {
          this.ptr = _emscripten_bind_btCompoundShape_btCompoundShape_0();
          getCache(btCompoundShape)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btCompoundShape_btCompoundShape_1(arg0);
        getCache(btCompoundShape)[this.ptr] = this;
      }
      btCompoundShape.prototype = Object.create(btCollisionShape.prototype);
      btCompoundShape.prototype.constructor = btCompoundShape;
      btCompoundShape.prototype.__class__ = btCompoundShape;
      btCompoundShape.__cache__ = {};
      Module["btCompoundShape"] = btCompoundShape;
      btCompoundShape.prototype["addChildShape"] = btCompoundShape.prototype.addChildShape = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCompoundShape_addChildShape_2(self, arg0, arg1);
      };
      btCompoundShape.prototype["removeChildShapeByIndex"] = btCompoundShape.prototype.removeChildShapeByIndex = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCompoundShape_removeChildShapeByIndex_1(self, arg0);
      };
      btCompoundShape.prototype["getNumChildShapes"] = btCompoundShape.prototype.getNumChildShapes = function() {
        var self = this.ptr;
        return _emscripten_bind_btCompoundShape_getNumChildShapes_0(self);
      };
      btCompoundShape.prototype["getChildShape"] = btCompoundShape.prototype.getChildShape = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btCompoundShape_getChildShape_1(self, arg0), btCollisionShape);
      };
      btCompoundShape.prototype["setMargin"] = btCompoundShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCompoundShape_setMargin_1(self, arg0);
      };
      btCompoundShape.prototype["getMargin"] = btCompoundShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btCompoundShape_getMargin_0(self);
      };
      btCompoundShape.prototype["setLocalScaling"] = btCompoundShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCompoundShape_setLocalScaling_1(self, arg0);
      };
      btCompoundShape.prototype["calculateLocalInertia"] = btCompoundShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCompoundShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btCompoundShape.prototype["__destroy__"] = btCompoundShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCompoundShape___destroy___0(self);
      };
      function ClosestConvexResultCallback(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        this.ptr = _emscripten_bind_ClosestConvexResultCallback_ClosestConvexResultCallback_2(arg0, arg1);
        getCache(ClosestConvexResultCallback)[this.ptr] = this;
      }
      ClosestConvexResultCallback.prototype = Object.create(ConvexResultCallback.prototype);
      ClosestConvexResultCallback.prototype.constructor = ClosestConvexResultCallback;
      ClosestConvexResultCallback.prototype.__class__ = ClosestConvexResultCallback;
      ClosestConvexResultCallback.__cache__ = {};
      Module["ClosestConvexResultCallback"] = ClosestConvexResultCallback;
      ClosestConvexResultCallback.prototype["hasHit"] = ClosestConvexResultCallback.prototype.hasHit = function() {
        var self = this.ptr;
        return !!_emscripten_bind_ClosestConvexResultCallback_hasHit_0(self);
      };
      ClosestConvexResultCallback.prototype["get_m_convexFromWorld"] = ClosestConvexResultCallback.prototype.get_m_convexFromWorld = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_convexFromWorld_0(self), btVector3);
      };
      ClosestConvexResultCallback.prototype["set_m_convexFromWorld"] = ClosestConvexResultCallback.prototype.set_m_convexFromWorld = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestConvexResultCallback_set_m_convexFromWorld_1(self, arg0);
      };
      ClosestConvexResultCallback.prototype["get_m_convexToWorld"] = ClosestConvexResultCallback.prototype.get_m_convexToWorld = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_convexToWorld_0(self), btVector3);
      };
      ClosestConvexResultCallback.prototype["set_m_convexToWorld"] = ClosestConvexResultCallback.prototype.set_m_convexToWorld = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestConvexResultCallback_set_m_convexToWorld_1(self, arg0);
      };
      ClosestConvexResultCallback.prototype["get_m_hitNormalWorld"] = ClosestConvexResultCallback.prototype.get_m_hitNormalWorld = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_hitNormalWorld_0(self), btVector3);
      };
      ClosestConvexResultCallback.prototype["set_m_hitNormalWorld"] = ClosestConvexResultCallback.prototype.set_m_hitNormalWorld = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestConvexResultCallback_set_m_hitNormalWorld_1(self, arg0);
      };
      ClosestConvexResultCallback.prototype["get_m_hitPointWorld"] = ClosestConvexResultCallback.prototype.get_m_hitPointWorld = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_ClosestConvexResultCallback_get_m_hitPointWorld_0(self), btVector3);
      };
      ClosestConvexResultCallback.prototype["set_m_hitPointWorld"] = ClosestConvexResultCallback.prototype.set_m_hitPointWorld = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestConvexResultCallback_set_m_hitPointWorld_1(self, arg0);
      };
      ClosestConvexResultCallback.prototype["get_m_collisionFilterGroup"] = ClosestConvexResultCallback.prototype.get_m_collisionFilterGroup = function() {
        var self = this.ptr;
        return _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterGroup_0(self);
      };
      ClosestConvexResultCallback.prototype["set_m_collisionFilterGroup"] = ClosestConvexResultCallback.prototype.set_m_collisionFilterGroup = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterGroup_1(self, arg0);
      };
      ClosestConvexResultCallback.prototype["get_m_collisionFilterMask"] = ClosestConvexResultCallback.prototype.get_m_collisionFilterMask = function() {
        var self = this.ptr;
        return _emscripten_bind_ClosestConvexResultCallback_get_m_collisionFilterMask_0(self);
      };
      ClosestConvexResultCallback.prototype["set_m_collisionFilterMask"] = ClosestConvexResultCallback.prototype.set_m_collisionFilterMask = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestConvexResultCallback_set_m_collisionFilterMask_1(self, arg0);
      };
      ClosestConvexResultCallback.prototype["get_m_closestHitFraction"] = ClosestConvexResultCallback.prototype.get_m_closestHitFraction = function() {
        var self = this.ptr;
        return _emscripten_bind_ClosestConvexResultCallback_get_m_closestHitFraction_0(self);
      };
      ClosestConvexResultCallback.prototype["set_m_closestHitFraction"] = ClosestConvexResultCallback.prototype.set_m_closestHitFraction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestConvexResultCallback_set_m_closestHitFraction_1(self, arg0);
      };
      ClosestConvexResultCallback.prototype["__destroy__"] = ClosestConvexResultCallback.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_ClosestConvexResultCallback___destroy___0(self);
      };
      function tMaterialArray() {
        throw "cannot construct a tMaterialArray, no constructor in IDL";
      }
      tMaterialArray.prototype = Object.create(WrapperObject.prototype);
      tMaterialArray.prototype.constructor = tMaterialArray;
      tMaterialArray.prototype.__class__ = tMaterialArray;
      tMaterialArray.__cache__ = {};
      Module["tMaterialArray"] = tMaterialArray;
      tMaterialArray.prototype["size"] = tMaterialArray.prototype.size = function() {
        var self = this.ptr;
        return _emscripten_bind_tMaterialArray_size_0(self);
      };
      tMaterialArray.prototype["at"] = tMaterialArray.prototype.at = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_tMaterialArray_at_1(self, arg0), Material);
      };
      tMaterialArray.prototype["__destroy__"] = tMaterialArray.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_tMaterialArray___destroy___0(self);
      };
      function btDefaultVehicleRaycaster(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        this.ptr = _emscripten_bind_btDefaultVehicleRaycaster_btDefaultVehicleRaycaster_1(arg0);
        getCache(btDefaultVehicleRaycaster)[this.ptr] = this;
      }
      btDefaultVehicleRaycaster.prototype = Object.create(btVehicleRaycaster.prototype);
      btDefaultVehicleRaycaster.prototype.constructor = btDefaultVehicleRaycaster;
      btDefaultVehicleRaycaster.prototype.__class__ = btDefaultVehicleRaycaster;
      btDefaultVehicleRaycaster.__cache__ = {};
      Module["btDefaultVehicleRaycaster"] = btDefaultVehicleRaycaster;
      btDefaultVehicleRaycaster.prototype["__destroy__"] = btDefaultVehicleRaycaster.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDefaultVehicleRaycaster___destroy___0(self);
      };
      function btConstraintSetting() {
        this.ptr = _emscripten_bind_btConstraintSetting_btConstraintSetting_0();
        getCache(btConstraintSetting)[this.ptr] = this;
      }
      btConstraintSetting.prototype = Object.create(WrapperObject.prototype);
      btConstraintSetting.prototype.constructor = btConstraintSetting;
      btConstraintSetting.prototype.__class__ = btConstraintSetting;
      btConstraintSetting.__cache__ = {};
      Module["btConstraintSetting"] = btConstraintSetting;
      btConstraintSetting.prototype["get_m_tau"] = btConstraintSetting.prototype.get_m_tau = function() {
        var self = this.ptr;
        return _emscripten_bind_btConstraintSetting_get_m_tau_0(self);
      };
      btConstraintSetting.prototype["set_m_tau"] = btConstraintSetting.prototype.set_m_tau = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConstraintSetting_set_m_tau_1(self, arg0);
      };
      btConstraintSetting.prototype["get_m_damping"] = btConstraintSetting.prototype.get_m_damping = function() {
        var self = this.ptr;
        return _emscripten_bind_btConstraintSetting_get_m_damping_0(self);
      };
      btConstraintSetting.prototype["set_m_damping"] = btConstraintSetting.prototype.set_m_damping = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConstraintSetting_set_m_damping_1(self, arg0);
      };
      btConstraintSetting.prototype["get_m_impulseClamp"] = btConstraintSetting.prototype.get_m_impulseClamp = function() {
        var self = this.ptr;
        return _emscripten_bind_btConstraintSetting_get_m_impulseClamp_0(self);
      };
      btConstraintSetting.prototype["set_m_impulseClamp"] = btConstraintSetting.prototype.set_m_impulseClamp = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConstraintSetting_set_m_impulseClamp_1(self, arg0);
      };
      btConstraintSetting.prototype["__destroy__"] = btConstraintSetting.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConstraintSetting___destroy___0(self);
      };
      function LocalShapeInfo() {
        throw "cannot construct a LocalShapeInfo, no constructor in IDL";
      }
      LocalShapeInfo.prototype = Object.create(WrapperObject.prototype);
      LocalShapeInfo.prototype.constructor = LocalShapeInfo;
      LocalShapeInfo.prototype.__class__ = LocalShapeInfo;
      LocalShapeInfo.__cache__ = {};
      Module["LocalShapeInfo"] = LocalShapeInfo;
      LocalShapeInfo.prototype["get_m_shapePart"] = LocalShapeInfo.prototype.get_m_shapePart = function() {
        var self = this.ptr;
        return _emscripten_bind_LocalShapeInfo_get_m_shapePart_0(self);
      };
      LocalShapeInfo.prototype["set_m_shapePart"] = LocalShapeInfo.prototype.set_m_shapePart = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_LocalShapeInfo_set_m_shapePart_1(self, arg0);
      };
      LocalShapeInfo.prototype["get_m_triangleIndex"] = LocalShapeInfo.prototype.get_m_triangleIndex = function() {
        var self = this.ptr;
        return _emscripten_bind_LocalShapeInfo_get_m_triangleIndex_0(self);
      };
      LocalShapeInfo.prototype["set_m_triangleIndex"] = LocalShapeInfo.prototype.set_m_triangleIndex = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_LocalShapeInfo_set_m_triangleIndex_1(self, arg0);
      };
      LocalShapeInfo.prototype["__destroy__"] = LocalShapeInfo.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_LocalShapeInfo___destroy___0(self);
      };
      function btRigidBody(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        this.ptr = _emscripten_bind_btRigidBody_btRigidBody_1(arg0);
        getCache(btRigidBody)[this.ptr] = this;
      }
      btRigidBody.prototype = Object.create(btCollisionObject.prototype);
      btRigidBody.prototype.constructor = btRigidBody;
      btRigidBody.prototype.__class__ = btRigidBody;
      btRigidBody.__cache__ = {};
      Module["btRigidBody"] = btRigidBody;
      btRigidBody.prototype["getCenterOfMassTransform"] = btRigidBody.prototype.getCenterOfMassTransform = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btRigidBody_getCenterOfMassTransform_0(self), btTransform);
      };
      btRigidBody.prototype["setCenterOfMassTransform"] = btRigidBody.prototype.setCenterOfMassTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setCenterOfMassTransform_1(self, arg0);
      };
      btRigidBody.prototype["setSleepingThresholds"] = btRigidBody.prototype.setSleepingThresholds = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRigidBody_setSleepingThresholds_2(self, arg0, arg1);
      };
      btRigidBody.prototype["setDamping"] = btRigidBody.prototype.setDamping = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRigidBody_setDamping_2(self, arg0, arg1);
      };
      btRigidBody.prototype["setMassProps"] = btRigidBody.prototype.setMassProps = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRigidBody_setMassProps_2(self, arg0, arg1);
      };
      btRigidBody.prototype["setLinearFactor"] = btRigidBody.prototype.setLinearFactor = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setLinearFactor_1(self, arg0);
      };
      btRigidBody.prototype["applyTorque"] = btRigidBody.prototype.applyTorque = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_applyTorque_1(self, arg0);
      };
      btRigidBody.prototype["applyForce"] = btRigidBody.prototype.applyForce = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRigidBody_applyForce_2(self, arg0, arg1);
      };
      btRigidBody.prototype["applyCentralForce"] = btRigidBody.prototype.applyCentralForce = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_applyCentralForce_1(self, arg0);
      };
      btRigidBody.prototype["applyTorqueImpulse"] = btRigidBody.prototype.applyTorqueImpulse = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_applyTorqueImpulse_1(self, arg0);
      };
      btRigidBody.prototype["applyImpulse"] = btRigidBody.prototype.applyImpulse = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRigidBody_applyImpulse_2(self, arg0, arg1);
      };
      btRigidBody.prototype["applyCentralImpulse"] = btRigidBody.prototype.applyCentralImpulse = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_applyCentralImpulse_1(self, arg0);
      };
      btRigidBody.prototype["updateInertiaTensor"] = btRigidBody.prototype.updateInertiaTensor = function() {
        var self = this.ptr;
        _emscripten_bind_btRigidBody_updateInertiaTensor_0(self);
      };
      btRigidBody.prototype["getLinearVelocity"] = btRigidBody.prototype.getLinearVelocity = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btRigidBody_getLinearVelocity_0(self), btVector3);
      };
      btRigidBody.prototype["getAngularVelocity"] = btRigidBody.prototype.getAngularVelocity = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btRigidBody_getAngularVelocity_0(self), btVector3);
      };
      btRigidBody.prototype["setLinearVelocity"] = btRigidBody.prototype.setLinearVelocity = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setLinearVelocity_1(self, arg0);
      };
      btRigidBody.prototype["setAngularVelocity"] = btRigidBody.prototype.setAngularVelocity = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setAngularVelocity_1(self, arg0);
      };
      btRigidBody.prototype["getMotionState"] = btRigidBody.prototype.getMotionState = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btRigidBody_getMotionState_0(self), btMotionState);
      };
      btRigidBody.prototype["setMotionState"] = btRigidBody.prototype.setMotionState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setMotionState_1(self, arg0);
      };
      btRigidBody.prototype["setAngularFactor"] = btRigidBody.prototype.setAngularFactor = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setAngularFactor_1(self, arg0);
      };
      btRigidBody.prototype["upcast"] = btRigidBody.prototype.upcast = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btRigidBody_upcast_1(self, arg0), btRigidBody);
      };
      btRigidBody.prototype["setAnisotropicFriction"] = btRigidBody.prototype.setAnisotropicFriction = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRigidBody_setAnisotropicFriction_2(self, arg0, arg1);
      };
      btRigidBody.prototype["getCollisionShape"] = btRigidBody.prototype.getCollisionShape = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btRigidBody_getCollisionShape_0(self), btCollisionShape);
      };
      btRigidBody.prototype["setContactProcessingThreshold"] = btRigidBody.prototype.setContactProcessingThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setContactProcessingThreshold_1(self, arg0);
      };
      btRigidBody.prototype["setActivationState"] = btRigidBody.prototype.setActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setActivationState_1(self, arg0);
      };
      btRigidBody.prototype["forceActivationState"] = btRigidBody.prototype.forceActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_forceActivationState_1(self, arg0);
      };
      btRigidBody.prototype["activate"] = btRigidBody.prototype.activate = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg0 === void 0) {
          _emscripten_bind_btRigidBody_activate_0(self);
          return;
        }
        _emscripten_bind_btRigidBody_activate_1(self, arg0);
      };
      btRigidBody.prototype["isActive"] = btRigidBody.prototype.isActive = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btRigidBody_isActive_0(self);
      };
      btRigidBody.prototype["isKinematicObject"] = btRigidBody.prototype.isKinematicObject = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btRigidBody_isKinematicObject_0(self);
      };
      btRigidBody.prototype["setRestitution"] = btRigidBody.prototype.setRestitution = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setRestitution_1(self, arg0);
      };
      btRigidBody.prototype["setFriction"] = btRigidBody.prototype.setFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setFriction_1(self, arg0);
      };
      btRigidBody.prototype["setRollingFriction"] = btRigidBody.prototype.setRollingFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setRollingFriction_1(self, arg0);
      };
      btRigidBody.prototype["getWorldTransform"] = btRigidBody.prototype.getWorldTransform = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btRigidBody_getWorldTransform_0(self), btTransform);
      };
      btRigidBody.prototype["getCollisionFlags"] = btRigidBody.prototype.getCollisionFlags = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBody_getCollisionFlags_0(self);
      };
      btRigidBody.prototype["setCollisionFlags"] = btRigidBody.prototype.setCollisionFlags = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setCollisionFlags_1(self, arg0);
      };
      btRigidBody.prototype["setWorldTransform"] = btRigidBody.prototype.setWorldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setWorldTransform_1(self, arg0);
      };
      btRigidBody.prototype["setCollisionShape"] = btRigidBody.prototype.setCollisionShape = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setCollisionShape_1(self, arg0);
      };
      btRigidBody.prototype["setCcdMotionThreshold"] = btRigidBody.prototype.setCcdMotionThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setCcdMotionThreshold_1(self, arg0);
      };
      btRigidBody.prototype["setCcdSweptSphereRadius"] = btRigidBody.prototype.setCcdSweptSphereRadius = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setCcdSweptSphereRadius_1(self, arg0);
      };
      btRigidBody.prototype["getUserIndex"] = btRigidBody.prototype.getUserIndex = function() {
        var self = this.ptr;
        return _emscripten_bind_btRigidBody_getUserIndex_0(self);
      };
      btRigidBody.prototype["setUserIndex"] = btRigidBody.prototype.setUserIndex = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setUserIndex_1(self, arg0);
      };
      btRigidBody.prototype["getUserPointer"] = btRigidBody.prototype.getUserPointer = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btRigidBody_getUserPointer_0(self), VoidPtr);
      };
      btRigidBody.prototype["setUserPointer"] = btRigidBody.prototype.setUserPointer = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRigidBody_setUserPointer_1(self, arg0);
      };
      btRigidBody.prototype["__destroy__"] = btRigidBody.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btRigidBody___destroy___0(self);
      };
      function btDbvtBroadphase() {
        this.ptr = _emscripten_bind_btDbvtBroadphase_btDbvtBroadphase_0();
        getCache(btDbvtBroadphase)[this.ptr] = this;
      }
      btDbvtBroadphase.prototype = Object.create(WrapperObject.prototype);
      btDbvtBroadphase.prototype.constructor = btDbvtBroadphase;
      btDbvtBroadphase.prototype.__class__ = btDbvtBroadphase;
      btDbvtBroadphase.__cache__ = {};
      Module["btDbvtBroadphase"] = btDbvtBroadphase;
      btDbvtBroadphase.prototype["__destroy__"] = btDbvtBroadphase.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDbvtBroadphase___destroy___0(self);
      };
      function btDefaultSoftBodySolver() {
        this.ptr = _emscripten_bind_btDefaultSoftBodySolver_btDefaultSoftBodySolver_0();
        getCache(btDefaultSoftBodySolver)[this.ptr] = this;
      }
      btDefaultSoftBodySolver.prototype = Object.create(btSoftBodySolver.prototype);
      btDefaultSoftBodySolver.prototype.constructor = btDefaultSoftBodySolver;
      btDefaultSoftBodySolver.prototype.__class__ = btDefaultSoftBodySolver;
      btDefaultSoftBodySolver.__cache__ = {};
      Module["btDefaultSoftBodySolver"] = btDefaultSoftBodySolver;
      btDefaultSoftBodySolver.prototype["__destroy__"] = btDefaultSoftBodySolver.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDefaultSoftBodySolver___destroy___0(self);
      };
      function btKinematicCharacterController(arg0, arg1, arg2, arg3) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_3(arg0, arg1, arg2);
          getCache(btKinematicCharacterController)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btKinematicCharacterController_btKinematicCharacterController_4(arg0, arg1, arg2, arg3);
        getCache(btKinematicCharacterController)[this.ptr] = this;
      }
      btKinematicCharacterController.prototype = Object.create(btActionInterface.prototype);
      btKinematicCharacterController.prototype.constructor = btKinematicCharacterController;
      btKinematicCharacterController.prototype.__class__ = btKinematicCharacterController;
      btKinematicCharacterController.__cache__ = {};
      Module["btKinematicCharacterController"] = btKinematicCharacterController;
      btKinematicCharacterController.prototype["setUp"] = btKinematicCharacterController.prototype.setUp = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_setUp_1(self, arg0);
      };
      btKinematicCharacterController.prototype["setWalkDirection"] = btKinematicCharacterController.prototype.setWalkDirection = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_setWalkDirection_1(self, arg0);
      };
      btKinematicCharacterController.prototype["setVelocityForTimeInterval"] = btKinematicCharacterController.prototype.setVelocityForTimeInterval = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btKinematicCharacterController_setVelocityForTimeInterval_2(self, arg0, arg1);
      };
      btKinematicCharacterController.prototype["warp"] = btKinematicCharacterController.prototype.warp = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_warp_1(self, arg0);
      };
      btKinematicCharacterController.prototype["preStep"] = btKinematicCharacterController.prototype.preStep = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_preStep_1(self, arg0);
      };
      btKinematicCharacterController.prototype["playerStep"] = btKinematicCharacterController.prototype.playerStep = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btKinematicCharacterController_playerStep_2(self, arg0, arg1);
      };
      btKinematicCharacterController.prototype["setFallSpeed"] = btKinematicCharacterController.prototype.setFallSpeed = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_setFallSpeed_1(self, arg0);
      };
      btKinematicCharacterController.prototype["setJumpSpeed"] = btKinematicCharacterController.prototype.setJumpSpeed = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_setJumpSpeed_1(self, arg0);
      };
      btKinematicCharacterController.prototype["setMaxJumpHeight"] = btKinematicCharacterController.prototype.setMaxJumpHeight = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_setMaxJumpHeight_1(self, arg0);
      };
      btKinematicCharacterController.prototype["canJump"] = btKinematicCharacterController.prototype.canJump = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btKinematicCharacterController_canJump_0(self);
      };
      btKinematicCharacterController.prototype["jump"] = btKinematicCharacterController.prototype.jump = function() {
        var self = this.ptr;
        _emscripten_bind_btKinematicCharacterController_jump_0(self);
      };
      btKinematicCharacterController.prototype["setGravity"] = btKinematicCharacterController.prototype.setGravity = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_setGravity_1(self, arg0);
      };
      btKinematicCharacterController.prototype["getGravity"] = btKinematicCharacterController.prototype.getGravity = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btKinematicCharacterController_getGravity_0(self), btVector3);
      };
      btKinematicCharacterController.prototype["setMaxSlope"] = btKinematicCharacterController.prototype.setMaxSlope = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_setMaxSlope_1(self, arg0);
      };
      btKinematicCharacterController.prototype["getMaxSlope"] = btKinematicCharacterController.prototype.getMaxSlope = function() {
        var self = this.ptr;
        return _emscripten_bind_btKinematicCharacterController_getMaxSlope_0(self);
      };
      btKinematicCharacterController.prototype["getGhostObject"] = btKinematicCharacterController.prototype.getGhostObject = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btKinematicCharacterController_getGhostObject_0(self), btPairCachingGhostObject);
      };
      btKinematicCharacterController.prototype["setUseGhostSweepTest"] = btKinematicCharacterController.prototype.setUseGhostSweepTest = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btKinematicCharacterController_setUseGhostSweepTest_1(self, arg0);
      };
      btKinematicCharacterController.prototype["onGround"] = btKinematicCharacterController.prototype.onGround = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btKinematicCharacterController_onGround_0(self);
      };
      btKinematicCharacterController.prototype["__destroy__"] = btKinematicCharacterController.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btKinematicCharacterController___destroy___0(self);
      };
      function btAxisSweep3(arg0, arg1, arg2, arg3, arg4) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg2 === void 0) {
          this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_2(arg0, arg1);
          getCache(btAxisSweep3)[this.ptr] = this;
          return;
        }
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_3(arg0, arg1, arg2);
          getCache(btAxisSweep3)[this.ptr] = this;
          return;
        }
        if (arg4 === void 0) {
          this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_4(arg0, arg1, arg2, arg3);
          getCache(btAxisSweep3)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btAxisSweep3_btAxisSweep3_5(arg0, arg1, arg2, arg3, arg4);
        getCache(btAxisSweep3)[this.ptr] = this;
      }
      btAxisSweep3.prototype = Object.create(WrapperObject.prototype);
      btAxisSweep3.prototype.constructor = btAxisSweep3;
      btAxisSweep3.prototype.__class__ = btAxisSweep3;
      btAxisSweep3.__cache__ = {};
      Module["btAxisSweep3"] = btAxisSweep3;
      btAxisSweep3.prototype["__destroy__"] = btAxisSweep3.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btAxisSweep3___destroy___0(self);
      };
      function btSoftBodyWorldInfo() {
        this.ptr = _emscripten_bind_btSoftBodyWorldInfo_btSoftBodyWorldInfo_0();
        getCache(btSoftBodyWorldInfo)[this.ptr] = this;
      }
      btSoftBodyWorldInfo.prototype = Object.create(WrapperObject.prototype);
      btSoftBodyWorldInfo.prototype.constructor = btSoftBodyWorldInfo;
      btSoftBodyWorldInfo.prototype.__class__ = btSoftBodyWorldInfo;
      btSoftBodyWorldInfo.__cache__ = {};
      Module["btSoftBodyWorldInfo"] = btSoftBodyWorldInfo;
      btSoftBodyWorldInfo.prototype["get_air_density"] = btSoftBodyWorldInfo.prototype.get_air_density = function() {
        var self = this.ptr;
        return _emscripten_bind_btSoftBodyWorldInfo_get_air_density_0(self);
      };
      btSoftBodyWorldInfo.prototype["set_air_density"] = btSoftBodyWorldInfo.prototype.set_air_density = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBodyWorldInfo_set_air_density_1(self, arg0);
      };
      btSoftBodyWorldInfo.prototype["get_water_density"] = btSoftBodyWorldInfo.prototype.get_water_density = function() {
        var self = this.ptr;
        return _emscripten_bind_btSoftBodyWorldInfo_get_water_density_0(self);
      };
      btSoftBodyWorldInfo.prototype["set_water_density"] = btSoftBodyWorldInfo.prototype.set_water_density = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBodyWorldInfo_set_water_density_1(self, arg0);
      };
      btSoftBodyWorldInfo.prototype["get_water_offset"] = btSoftBodyWorldInfo.prototype.get_water_offset = function() {
        var self = this.ptr;
        return _emscripten_bind_btSoftBodyWorldInfo_get_water_offset_0(self);
      };
      btSoftBodyWorldInfo.prototype["set_water_offset"] = btSoftBodyWorldInfo.prototype.set_water_offset = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBodyWorldInfo_set_water_offset_1(self, arg0);
      };
      btSoftBodyWorldInfo.prototype["get_m_maxDisplacement"] = btSoftBodyWorldInfo.prototype.get_m_maxDisplacement = function() {
        var self = this.ptr;
        return _emscripten_bind_btSoftBodyWorldInfo_get_m_maxDisplacement_0(self);
      };
      btSoftBodyWorldInfo.prototype["set_m_maxDisplacement"] = btSoftBodyWorldInfo.prototype.set_m_maxDisplacement = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBodyWorldInfo_set_m_maxDisplacement_1(self, arg0);
      };
      btSoftBodyWorldInfo.prototype["get_water_normal"] = btSoftBodyWorldInfo.prototype.get_water_normal = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_water_normal_0(self), btVector3);
      };
      btSoftBodyWorldInfo.prototype["set_water_normal"] = btSoftBodyWorldInfo.prototype.set_water_normal = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBodyWorldInfo_set_water_normal_1(self, arg0);
      };
      btSoftBodyWorldInfo.prototype["get_m_broadphase"] = btSoftBodyWorldInfo.prototype.get_m_broadphase = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_m_broadphase_0(self), btBroadphaseInterface);
      };
      btSoftBodyWorldInfo.prototype["set_m_broadphase"] = btSoftBodyWorldInfo.prototype.set_m_broadphase = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBodyWorldInfo_set_m_broadphase_1(self, arg0);
      };
      btSoftBodyWorldInfo.prototype["get_m_dispatcher"] = btSoftBodyWorldInfo.prototype.get_m_dispatcher = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_m_dispatcher_0(self), btDispatcher);
      };
      btSoftBodyWorldInfo.prototype["set_m_dispatcher"] = btSoftBodyWorldInfo.prototype.set_m_dispatcher = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBodyWorldInfo_set_m_dispatcher_1(self, arg0);
      };
      btSoftBodyWorldInfo.prototype["get_m_gravity"] = btSoftBodyWorldInfo.prototype.get_m_gravity = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyWorldInfo_get_m_gravity_0(self), btVector3);
      };
      btSoftBodyWorldInfo.prototype["set_m_gravity"] = btSoftBodyWorldInfo.prototype.set_m_gravity = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBodyWorldInfo_set_m_gravity_1(self, arg0);
      };
      btSoftBodyWorldInfo.prototype["__destroy__"] = btSoftBodyWorldInfo.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSoftBodyWorldInfo___destroy___0(self);
      };
      function btConeTwistConstraint(arg0, arg1, arg2, arg3) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg2 === void 0) {
          this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_2(arg0, arg1);
          getCache(btConeTwistConstraint)[this.ptr] = this;
          return;
        }
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_3(arg0, arg1, arg2);
          getCache(btConeTwistConstraint)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btConeTwistConstraint_btConeTwistConstraint_4(arg0, arg1, arg2, arg3);
        getCache(btConeTwistConstraint)[this.ptr] = this;
      }
      btConeTwistConstraint.prototype = Object.create(btTypedConstraint.prototype);
      btConeTwistConstraint.prototype.constructor = btConeTwistConstraint;
      btConeTwistConstraint.prototype.__class__ = btConeTwistConstraint;
      btConeTwistConstraint.__cache__ = {};
      Module["btConeTwistConstraint"] = btConeTwistConstraint;
      btConeTwistConstraint.prototype["setLimit"] = btConeTwistConstraint.prototype.setLimit = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btConeTwistConstraint_setLimit_2(self, arg0, arg1);
      };
      btConeTwistConstraint.prototype["setAngularOnly"] = btConeTwistConstraint.prototype.setAngularOnly = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeTwistConstraint_setAngularOnly_1(self, arg0);
      };
      btConeTwistConstraint.prototype["setDamping"] = btConeTwistConstraint.prototype.setDamping = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeTwistConstraint_setDamping_1(self, arg0);
      };
      btConeTwistConstraint.prototype["enableMotor"] = btConeTwistConstraint.prototype.enableMotor = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeTwistConstraint_enableMotor_1(self, arg0);
      };
      btConeTwistConstraint.prototype["setMaxMotorImpulse"] = btConeTwistConstraint.prototype.setMaxMotorImpulse = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulse_1(self, arg0);
      };
      btConeTwistConstraint.prototype["setMaxMotorImpulseNormalized"] = btConeTwistConstraint.prototype.setMaxMotorImpulseNormalized = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeTwistConstraint_setMaxMotorImpulseNormalized_1(self, arg0);
      };
      btConeTwistConstraint.prototype["setMotorTarget"] = btConeTwistConstraint.prototype.setMotorTarget = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeTwistConstraint_setMotorTarget_1(self, arg0);
      };
      btConeTwistConstraint.prototype["setMotorTargetInConstraintSpace"] = btConeTwistConstraint.prototype.setMotorTargetInConstraintSpace = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeTwistConstraint_setMotorTargetInConstraintSpace_1(self, arg0);
      };
      btConeTwistConstraint.prototype["enableFeedback"] = btConeTwistConstraint.prototype.enableFeedback = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeTwistConstraint_enableFeedback_1(self, arg0);
      };
      btConeTwistConstraint.prototype["getBreakingImpulseThreshold"] = btConeTwistConstraint.prototype.getBreakingImpulseThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btConeTwistConstraint_getBreakingImpulseThreshold_0(self);
      };
      btConeTwistConstraint.prototype["setBreakingImpulseThreshold"] = btConeTwistConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeTwistConstraint_setBreakingImpulseThreshold_1(self, arg0);
      };
      btConeTwistConstraint.prototype["__destroy__"] = btConeTwistConstraint.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConeTwistConstraint___destroy___0(self);
      };
      function btHingeConstraint(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg5 && typeof arg5 === "object")
          arg5 = arg5.ptr;
        if (arg6 && typeof arg6 === "object")
          arg6 = arg6.ptr;
        if (arg2 === void 0) {
          this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_2(arg0, arg1);
          getCache(btHingeConstraint)[this.ptr] = this;
          return;
        }
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_3(arg0, arg1, arg2);
          getCache(btHingeConstraint)[this.ptr] = this;
          return;
        }
        if (arg4 === void 0) {
          this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_4(arg0, arg1, arg2, arg3);
          getCache(btHingeConstraint)[this.ptr] = this;
          return;
        }
        if (arg5 === void 0) {
          this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_5(arg0, arg1, arg2, arg3, arg4);
          getCache(btHingeConstraint)[this.ptr] = this;
          return;
        }
        if (arg6 === void 0) {
          this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_6(arg0, arg1, arg2, arg3, arg4, arg5);
          getCache(btHingeConstraint)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btHingeConstraint_btHingeConstraint_7(arg0, arg1, arg2, arg3, arg4, arg5, arg6);
        getCache(btHingeConstraint)[this.ptr] = this;
      }
      btHingeConstraint.prototype = Object.create(btTypedConstraint.prototype);
      btHingeConstraint.prototype.constructor = btHingeConstraint;
      btHingeConstraint.prototype.__class__ = btHingeConstraint;
      btHingeConstraint.__cache__ = {};
      Module["btHingeConstraint"] = btHingeConstraint;
      btHingeConstraint.prototype["setLimit"] = btHingeConstraint.prototype.setLimit = function(arg0, arg1, arg2, arg3, arg4) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg4 === void 0) {
          _emscripten_bind_btHingeConstraint_setLimit_4(self, arg0, arg1, arg2, arg3);
          return;
        }
        _emscripten_bind_btHingeConstraint_setLimit_5(self, arg0, arg1, arg2, arg3, arg4);
      };
      btHingeConstraint.prototype["enableAngularMotor"] = btHingeConstraint.prototype.enableAngularMotor = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btHingeConstraint_enableAngularMotor_3(self, arg0, arg1, arg2);
      };
      btHingeConstraint.prototype["setAngularOnly"] = btHingeConstraint.prototype.setAngularOnly = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btHingeConstraint_setAngularOnly_1(self, arg0);
      };
      btHingeConstraint.prototype["enableMotor"] = btHingeConstraint.prototype.enableMotor = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btHingeConstraint_enableMotor_1(self, arg0);
      };
      btHingeConstraint.prototype["setMaxMotorImpulse"] = btHingeConstraint.prototype.setMaxMotorImpulse = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btHingeConstraint_setMaxMotorImpulse_1(self, arg0);
      };
      btHingeConstraint.prototype["setMotorTarget"] = btHingeConstraint.prototype.setMotorTarget = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btHingeConstraint_setMotorTarget_2(self, arg0, arg1);
      };
      btHingeConstraint.prototype["enableFeedback"] = btHingeConstraint.prototype.enableFeedback = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btHingeConstraint_enableFeedback_1(self, arg0);
      };
      btHingeConstraint.prototype["getBreakingImpulseThreshold"] = btHingeConstraint.prototype.getBreakingImpulseThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btHingeConstraint_getBreakingImpulseThreshold_0(self);
      };
      btHingeConstraint.prototype["setBreakingImpulseThreshold"] = btHingeConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btHingeConstraint_setBreakingImpulseThreshold_1(self, arg0);
      };
      btHingeConstraint.prototype["__destroy__"] = btHingeConstraint.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btHingeConstraint___destroy___0(self);
      };
      function btRotationalLimitMotor(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg0 === void 0) {
          this.ptr = _emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_0();
          getCache(btRotationalLimitMotor)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btRotationalLimitMotor_btRotationalLimitMotor_1(arg0);
        getCache(btRotationalLimitMotor)[this.ptr] = this;
      }
      btRotationalLimitMotor.prototype = Object.create(WrapperObject.prototype);
      btRotationalLimitMotor.prototype.constructor = btRotationalLimitMotor;
      btRotationalLimitMotor.prototype.__class__ = btRotationalLimitMotor;
      btRotationalLimitMotor.__cache__ = {};
      Module["btRotationalLimitMotor"] = btRotationalLimitMotor;
      btRotationalLimitMotor.prototype["isLimited"] = btRotationalLimitMotor.prototype.isLimited = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btRotationalLimitMotor_isLimited_0(self);
      };
      btRotationalLimitMotor.prototype["needApplyTorques"] = btRotationalLimitMotor.prototype.needApplyTorques = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btRotationalLimitMotor_needApplyTorques_0(self);
      };
      btRotationalLimitMotor.prototype["get_m_loLimit"] = btRotationalLimitMotor.prototype.get_m_loLimit = function() {
        var self = this.ptr;
        return _emscripten_bind_btRotationalLimitMotor_get_m_loLimit_0(self);
      };
      btRotationalLimitMotor.prototype["set_m_loLimit"] = btRotationalLimitMotor.prototype.set_m_loLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRotationalLimitMotor_set_m_loLimit_1(self, arg0);
      };
      btRotationalLimitMotor.prototype["get_m_hiLimit"] = btRotationalLimitMotor.prototype.get_m_hiLimit = function() {
        var self = this.ptr;
        return _emscripten_bind_btRotationalLimitMotor_get_m_hiLimit_0(self);
      };
      btRotationalLimitMotor.prototype["set_m_hiLimit"] = btRotationalLimitMotor.prototype.set_m_hiLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRotationalLimitMotor_set_m_hiLimit_1(self, arg0);
      };
      btRotationalLimitMotor.prototype["get_m_targetVelocity"] = btRotationalLimitMotor.prototype.get_m_targetVelocity = function() {
        var self = this.ptr;
        return _emscripten_bind_btRotationalLimitMotor_get_m_targetVelocity_0(self);
      };
      btRotationalLimitMotor.prototype["set_m_targetVelocity"] = btRotationalLimitMotor.prototype.set_m_targetVelocity = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRotationalLimitMotor_set_m_targetVelocity_1(self, arg0);
      };
      btRotationalLimitMotor.prototype["get_m_maxMotorForce"] = btRotationalLimitMotor.prototype.get_m_maxMotorForce = function() {
        var self = this.ptr;
        return _emscripten_bind_btRotationalLimitMotor_get_m_maxMotorForce_0(self);
      };
      btRotationalLimitMotor.prototype["set_m_maxMotorForce"] = btRotationalLimitMotor.prototype.set_m_maxMotorForce = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRotationalLimitMotor_set_m_maxMotorForce_1(self, arg0);
      };
      btRotationalLimitMotor.prototype["get_m_enableMotor"] = btRotationalLimitMotor.prototype.get_m_enableMotor = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btRotationalLimitMotor_get_m_enableMotor_0(self);
      };
      btRotationalLimitMotor.prototype["set_m_enableMotor"] = btRotationalLimitMotor.prototype.set_m_enableMotor = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btRotationalLimitMotor_set_m_enableMotor_1(self, arg0);
      };
      btRotationalLimitMotor.prototype["__destroy__"] = btRotationalLimitMotor.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btRotationalLimitMotor___destroy___0(self);
      };
      function btConeShapeZ(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        this.ptr = _emscripten_bind_btConeShapeZ_btConeShapeZ_2(arg0, arg1);
        getCache(btConeShapeZ)[this.ptr] = this;
      }
      btConeShapeZ.prototype = Object.create(btConeShape.prototype);
      btConeShapeZ.prototype.constructor = btConeShapeZ;
      btConeShapeZ.prototype.__class__ = btConeShapeZ;
      btConeShapeZ.__cache__ = {};
      Module["btConeShapeZ"] = btConeShapeZ;
      btConeShapeZ.prototype["setLocalScaling"] = btConeShapeZ.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeShapeZ_setLocalScaling_1(self, arg0);
      };
      btConeShapeZ.prototype["calculateLocalInertia"] = btConeShapeZ.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btConeShapeZ_calculateLocalInertia_2(self, arg0, arg1);
      };
      btConeShapeZ.prototype["__destroy__"] = btConeShapeZ.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConeShapeZ___destroy___0(self);
      };
      function btConeShapeX(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        this.ptr = _emscripten_bind_btConeShapeX_btConeShapeX_2(arg0, arg1);
        getCache(btConeShapeX)[this.ptr] = this;
      }
      btConeShapeX.prototype = Object.create(btConeShape.prototype);
      btConeShapeX.prototype.constructor = btConeShapeX;
      btConeShapeX.prototype.__class__ = btConeShapeX;
      btConeShapeX.__cache__ = {};
      Module["btConeShapeX"] = btConeShapeX;
      btConeShapeX.prototype["setLocalScaling"] = btConeShapeX.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConeShapeX_setLocalScaling_1(self, arg0);
      };
      btConeShapeX.prototype["calculateLocalInertia"] = btConeShapeX.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btConeShapeX_calculateLocalInertia_2(self, arg0, arg1);
      };
      btConeShapeX.prototype["__destroy__"] = btConeShapeX.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConeShapeX___destroy___0(self);
      };
      function btTriangleMesh(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg0 === void 0) {
          this.ptr = _emscripten_bind_btTriangleMesh_btTriangleMesh_0();
          getCache(btTriangleMesh)[this.ptr] = this;
          return;
        }
        if (arg1 === void 0) {
          this.ptr = _emscripten_bind_btTriangleMesh_btTriangleMesh_1(arg0);
          getCache(btTriangleMesh)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btTriangleMesh_btTriangleMesh_2(arg0, arg1);
        getCache(btTriangleMesh)[this.ptr] = this;
      }
      btTriangleMesh.prototype = Object.create(btStridingMeshInterface.prototype);
      btTriangleMesh.prototype.constructor = btTriangleMesh;
      btTriangleMesh.prototype.__class__ = btTriangleMesh;
      btTriangleMesh.__cache__ = {};
      Module["btTriangleMesh"] = btTriangleMesh;
      btTriangleMesh.prototype["addTriangle"] = btTriangleMesh.prototype.addTriangle = function(arg0, arg1, arg2, arg3) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg3 === void 0) {
          _emscripten_bind_btTriangleMesh_addTriangle_3(self, arg0, arg1, arg2);
          return;
        }
        _emscripten_bind_btTriangleMesh_addTriangle_4(self, arg0, arg1, arg2, arg3);
      };
      btTriangleMesh.prototype["__destroy__"] = btTriangleMesh.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btTriangleMesh___destroy___0(self);
      };
      function btConvexHullShape() {
        this.ptr = _emscripten_bind_btConvexHullShape_btConvexHullShape_0();
        getCache(btConvexHullShape)[this.ptr] = this;
      }
      btConvexHullShape.prototype = Object.create(btCollisionShape.prototype);
      btConvexHullShape.prototype.constructor = btConvexHullShape;
      btConvexHullShape.prototype.__class__ = btConvexHullShape;
      btConvexHullShape.__cache__ = {};
      Module["btConvexHullShape"] = btConvexHullShape;
      btConvexHullShape.prototype["addPoint"] = btConvexHullShape.prototype.addPoint = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg1 === void 0) {
          _emscripten_bind_btConvexHullShape_addPoint_1(self, arg0);
          return;
        }
        _emscripten_bind_btConvexHullShape_addPoint_2(self, arg0, arg1);
      };
      btConvexHullShape.prototype["setMargin"] = btConvexHullShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConvexHullShape_setMargin_1(self, arg0);
      };
      btConvexHullShape.prototype["getMargin"] = btConvexHullShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btConvexHullShape_getMargin_0(self);
      };
      btConvexHullShape.prototype["setLocalScaling"] = btConvexHullShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btConvexHullShape_setLocalScaling_1(self, arg0);
      };
      btConvexHullShape.prototype["calculateLocalInertia"] = btConvexHullShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btConvexHullShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btConvexHullShape.prototype["__destroy__"] = btConvexHullShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConvexHullShape___destroy___0(self);
      };
      function btVehicleTuning() {
        this.ptr = _emscripten_bind_btVehicleTuning_btVehicleTuning_0();
        getCache(btVehicleTuning)[this.ptr] = this;
      }
      btVehicleTuning.prototype = Object.create(WrapperObject.prototype);
      btVehicleTuning.prototype.constructor = btVehicleTuning;
      btVehicleTuning.prototype.__class__ = btVehicleTuning;
      btVehicleTuning.__cache__ = {};
      Module["btVehicleTuning"] = btVehicleTuning;
      btVehicleTuning.prototype["get_m_suspensionStiffness"] = btVehicleTuning.prototype.get_m_suspensionStiffness = function() {
        var self = this.ptr;
        return _emscripten_bind_btVehicleTuning_get_m_suspensionStiffness_0(self);
      };
      btVehicleTuning.prototype["set_m_suspensionStiffness"] = btVehicleTuning.prototype.set_m_suspensionStiffness = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVehicleTuning_set_m_suspensionStiffness_1(self, arg0);
      };
      btVehicleTuning.prototype["get_m_suspensionCompression"] = btVehicleTuning.prototype.get_m_suspensionCompression = function() {
        var self = this.ptr;
        return _emscripten_bind_btVehicleTuning_get_m_suspensionCompression_0(self);
      };
      btVehicleTuning.prototype["set_m_suspensionCompression"] = btVehicleTuning.prototype.set_m_suspensionCompression = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVehicleTuning_set_m_suspensionCompression_1(self, arg0);
      };
      btVehicleTuning.prototype["get_m_suspensionDamping"] = btVehicleTuning.prototype.get_m_suspensionDamping = function() {
        var self = this.ptr;
        return _emscripten_bind_btVehicleTuning_get_m_suspensionDamping_0(self);
      };
      btVehicleTuning.prototype["set_m_suspensionDamping"] = btVehicleTuning.prototype.set_m_suspensionDamping = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVehicleTuning_set_m_suspensionDamping_1(self, arg0);
      };
      btVehicleTuning.prototype["get_m_maxSuspensionTravelCm"] = btVehicleTuning.prototype.get_m_maxSuspensionTravelCm = function() {
        var self = this.ptr;
        return _emscripten_bind_btVehicleTuning_get_m_maxSuspensionTravelCm_0(self);
      };
      btVehicleTuning.prototype["set_m_maxSuspensionTravelCm"] = btVehicleTuning.prototype.set_m_maxSuspensionTravelCm = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVehicleTuning_set_m_maxSuspensionTravelCm_1(self, arg0);
      };
      btVehicleTuning.prototype["get_m_frictionSlip"] = btVehicleTuning.prototype.get_m_frictionSlip = function() {
        var self = this.ptr;
        return _emscripten_bind_btVehicleTuning_get_m_frictionSlip_0(self);
      };
      btVehicleTuning.prototype["set_m_frictionSlip"] = btVehicleTuning.prototype.set_m_frictionSlip = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVehicleTuning_set_m_frictionSlip_1(self, arg0);
      };
      btVehicleTuning.prototype["get_m_maxSuspensionForce"] = btVehicleTuning.prototype.get_m_maxSuspensionForce = function() {
        var self = this.ptr;
        return _emscripten_bind_btVehicleTuning_get_m_maxSuspensionForce_0(self);
      };
      btVehicleTuning.prototype["set_m_maxSuspensionForce"] = btVehicleTuning.prototype.set_m_maxSuspensionForce = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVehicleTuning_set_m_maxSuspensionForce_1(self, arg0);
      };
      function btCollisionObjectWrapper() {
        throw "cannot construct a btCollisionObjectWrapper, no constructor in IDL";
      }
      btCollisionObjectWrapper.prototype = Object.create(WrapperObject.prototype);
      btCollisionObjectWrapper.prototype.constructor = btCollisionObjectWrapper;
      btCollisionObjectWrapper.prototype.__class__ = btCollisionObjectWrapper;
      btCollisionObjectWrapper.__cache__ = {};
      Module["btCollisionObjectWrapper"] = btCollisionObjectWrapper;
      function btDefaultMotionState(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg0 === void 0) {
          this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_0();
          getCache(btDefaultMotionState)[this.ptr] = this;
          return;
        }
        if (arg1 === void 0) {
          this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_1(arg0);
          getCache(btDefaultMotionState)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btDefaultMotionState_btDefaultMotionState_2(arg0, arg1);
        getCache(btDefaultMotionState)[this.ptr] = this;
      }
      btDefaultMotionState.prototype = Object.create(btMotionState.prototype);
      btDefaultMotionState.prototype.constructor = btDefaultMotionState;
      btDefaultMotionState.prototype.__class__ = btDefaultMotionState;
      btDefaultMotionState.__cache__ = {};
      Module["btDefaultMotionState"] = btDefaultMotionState;
      btDefaultMotionState.prototype["getWorldTransform"] = btDefaultMotionState.prototype.getWorldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDefaultMotionState_getWorldTransform_1(self, arg0);
      };
      btDefaultMotionState.prototype["setWorldTransform"] = btDefaultMotionState.prototype.setWorldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDefaultMotionState_setWorldTransform_1(self, arg0);
      };
      btDefaultMotionState.prototype["get_m_graphicsWorldTrans"] = btDefaultMotionState.prototype.get_m_graphicsWorldTrans = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btDefaultMotionState_get_m_graphicsWorldTrans_0(self), btTransform);
      };
      btDefaultMotionState.prototype["set_m_graphicsWorldTrans"] = btDefaultMotionState.prototype.set_m_graphicsWorldTrans = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btDefaultMotionState_set_m_graphicsWorldTrans_1(self, arg0);
      };
      btDefaultMotionState.prototype["__destroy__"] = btDefaultMotionState.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDefaultMotionState___destroy___0(self);
      };
      function btWheelInfo() {
        throw "cannot construct a btWheelInfo, no constructor in IDL";
      }
      btWheelInfo.prototype = Object.create(WrapperObject.prototype);
      btWheelInfo.prototype.constructor = btWheelInfo;
      btWheelInfo.prototype.__class__ = btWheelInfo;
      btWheelInfo.__cache__ = {};
      Module["btWheelInfo"] = btWheelInfo;
      btWheelInfo.prototype["get_m_worldTransform"] = btWheelInfo.prototype.get_m_worldTransform = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btWheelInfo_get_m_worldTransform_0(self), btTransform);
      };
      btWheelInfo.prototype["set_m_worldTransform"] = btWheelInfo.prototype.set_m_worldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_worldTransform_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_suspensionStiffness"] = btWheelInfo.prototype.get_m_suspensionStiffness = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_suspensionStiffness_0(self);
      };
      btWheelInfo.prototype["set_m_suspensionStiffness"] = btWheelInfo.prototype.set_m_suspensionStiffness = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_suspensionStiffness_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_frictionSlip"] = btWheelInfo.prototype.get_m_frictionSlip = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_frictionSlip_0(self);
      };
      btWheelInfo.prototype["set_m_frictionSlip"] = btWheelInfo.prototype.set_m_frictionSlip = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_frictionSlip_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_engineForce"] = btWheelInfo.prototype.get_m_engineForce = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_engineForce_0(self);
      };
      btWheelInfo.prototype["set_m_engineForce"] = btWheelInfo.prototype.set_m_engineForce = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_engineForce_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_rollInfluence"] = btWheelInfo.prototype.get_m_rollInfluence = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_rollInfluence_0(self);
      };
      btWheelInfo.prototype["set_m_rollInfluence"] = btWheelInfo.prototype.set_m_rollInfluence = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_rollInfluence_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_suspensionRestLength1"] = btWheelInfo.prototype.get_m_suspensionRestLength1 = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_suspensionRestLength1_0(self);
      };
      btWheelInfo.prototype["set_m_suspensionRestLength1"] = btWheelInfo.prototype.set_m_suspensionRestLength1 = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_suspensionRestLength1_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_wheelsRadius"] = btWheelInfo.prototype.get_m_wheelsRadius = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_wheelsRadius_0(self);
      };
      btWheelInfo.prototype["set_m_wheelsRadius"] = btWheelInfo.prototype.set_m_wheelsRadius = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_wheelsRadius_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_wheelsDampingCompression"] = btWheelInfo.prototype.get_m_wheelsDampingCompression = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_wheelsDampingCompression_0(self);
      };
      btWheelInfo.prototype["set_m_wheelsDampingCompression"] = btWheelInfo.prototype.set_m_wheelsDampingCompression = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_wheelsDampingCompression_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_wheelsDampingRelaxation"] = btWheelInfo.prototype.get_m_wheelsDampingRelaxation = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_wheelsDampingRelaxation_0(self);
      };
      btWheelInfo.prototype["set_m_wheelsDampingRelaxation"] = btWheelInfo.prototype.set_m_wheelsDampingRelaxation = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_wheelsDampingRelaxation_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_steering"] = btWheelInfo.prototype.get_m_steering = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_steering_0(self);
      };
      btWheelInfo.prototype["set_m_steering"] = btWheelInfo.prototype.set_m_steering = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_steering_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_maxSuspensionForce"] = btWheelInfo.prototype.get_m_maxSuspensionForce = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_maxSuspensionForce_0(self);
      };
      btWheelInfo.prototype["set_m_maxSuspensionForce"] = btWheelInfo.prototype.set_m_maxSuspensionForce = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_maxSuspensionForce_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_maxSuspensionTravelCm"] = btWheelInfo.prototype.get_m_maxSuspensionTravelCm = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_maxSuspensionTravelCm_0(self);
      };
      btWheelInfo.prototype["set_m_maxSuspensionTravelCm"] = btWheelInfo.prototype.set_m_maxSuspensionTravelCm = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_maxSuspensionTravelCm_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_wheelsSuspensionForce"] = btWheelInfo.prototype.get_m_wheelsSuspensionForce = function() {
        var self = this.ptr;
        return _emscripten_bind_btWheelInfo_get_m_wheelsSuspensionForce_0(self);
      };
      btWheelInfo.prototype["set_m_wheelsSuspensionForce"] = btWheelInfo.prototype.set_m_wheelsSuspensionForce = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_wheelsSuspensionForce_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_bIsFrontWheel"] = btWheelInfo.prototype.get_m_bIsFrontWheel = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btWheelInfo_get_m_bIsFrontWheel_0(self);
      };
      btWheelInfo.prototype["set_m_bIsFrontWheel"] = btWheelInfo.prototype.set_m_bIsFrontWheel = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_bIsFrontWheel_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_raycastInfo"] = btWheelInfo.prototype.get_m_raycastInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btWheelInfo_get_m_raycastInfo_0(self), RaycastInfo);
      };
      btWheelInfo.prototype["set_m_raycastInfo"] = btWheelInfo.prototype.set_m_raycastInfo = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_raycastInfo_1(self, arg0);
      };
      btWheelInfo.prototype["get_m_chassisConnectionPointCS"] = btWheelInfo.prototype.get_m_chassisConnectionPointCS = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btWheelInfo_get_m_chassisConnectionPointCS_0(self), btVector3);
      };
      btWheelInfo.prototype["set_m_chassisConnectionPointCS"] = btWheelInfo.prototype.set_m_chassisConnectionPointCS = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btWheelInfo_set_m_chassisConnectionPointCS_1(self, arg0);
      };
      btWheelInfo.prototype["__destroy__"] = btWheelInfo.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btWheelInfo___destroy___0(self);
      };
      function btVector4(arg0, arg1, arg2, arg3) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg0 === void 0) {
          this.ptr = _emscripten_bind_btVector4_btVector4_0();
          getCache(btVector4)[this.ptr] = this;
          return;
        }
        if (arg1 === void 0) {
          this.ptr = _emscripten_bind_btVector4_btVector4_1(arg0);
          getCache(btVector4)[this.ptr] = this;
          return;
        }
        if (arg2 === void 0) {
          this.ptr = _emscripten_bind_btVector4_btVector4_2(arg0, arg1);
          getCache(btVector4)[this.ptr] = this;
          return;
        }
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btVector4_btVector4_3(arg0, arg1, arg2);
          getCache(btVector4)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btVector4_btVector4_4(arg0, arg1, arg2, arg3);
        getCache(btVector4)[this.ptr] = this;
      }
      btVector4.prototype = Object.create(btVector3.prototype);
      btVector4.prototype.constructor = btVector4;
      btVector4.prototype.__class__ = btVector4;
      btVector4.__cache__ = {};
      Module["btVector4"] = btVector4;
      btVector4.prototype["w"] = btVector4.prototype.w = function() {
        var self = this.ptr;
        return _emscripten_bind_btVector4_w_0(self);
      };
      btVector4.prototype["setValue"] = btVector4.prototype.setValue = function(arg0, arg1, arg2, arg3) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        _emscripten_bind_btVector4_setValue_4(self, arg0, arg1, arg2, arg3);
      };
      btVector4.prototype["length"] = btVector4.prototype.length = function() {
        var self = this.ptr;
        return _emscripten_bind_btVector4_length_0(self);
      };
      btVector4.prototype["x"] = btVector4.prototype.x = function() {
        var self = this.ptr;
        return _emscripten_bind_btVector4_x_0(self);
      };
      btVector4.prototype["y"] = btVector4.prototype.y = function() {
        var self = this.ptr;
        return _emscripten_bind_btVector4_y_0(self);
      };
      btVector4.prototype["z"] = btVector4.prototype.z = function() {
        var self = this.ptr;
        return _emscripten_bind_btVector4_z_0(self);
      };
      btVector4.prototype["setX"] = btVector4.prototype.setX = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVector4_setX_1(self, arg0);
      };
      btVector4.prototype["setY"] = btVector4.prototype.setY = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVector4_setY_1(self, arg0);
      };
      btVector4.prototype["setZ"] = btVector4.prototype.setZ = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btVector4_setZ_1(self, arg0);
      };
      btVector4.prototype["normalize"] = btVector4.prototype.normalize = function() {
        var self = this.ptr;
        _emscripten_bind_btVector4_normalize_0(self);
      };
      btVector4.prototype["dot"] = btVector4.prototype.dot = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return _emscripten_bind_btVector4_dot_1(self, arg0);
      };
      btVector4.prototype["op_mul"] = btVector4.prototype.op_mul = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btVector4_op_mul_1(self, arg0), btVector3);
      };
      btVector4.prototype["op_add"] = btVector4.prototype.op_add = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btVector4_op_add_1(self, arg0), btVector3);
      };
      btVector4.prototype["op_sub"] = btVector4.prototype.op_sub = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btVector4_op_sub_1(self, arg0), btVector3);
      };
      btVector4.prototype["__destroy__"] = btVector4.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btVector4___destroy___0(self);
      };
      function btDefaultCollisionConstructionInfo() {
        this.ptr = _emscripten_bind_btDefaultCollisionConstructionInfo_btDefaultCollisionConstructionInfo_0();
        getCache(btDefaultCollisionConstructionInfo)[this.ptr] = this;
      }
      btDefaultCollisionConstructionInfo.prototype = Object.create(WrapperObject.prototype);
      btDefaultCollisionConstructionInfo.prototype.constructor = btDefaultCollisionConstructionInfo;
      btDefaultCollisionConstructionInfo.prototype.__class__ = btDefaultCollisionConstructionInfo;
      btDefaultCollisionConstructionInfo.__cache__ = {};
      Module["btDefaultCollisionConstructionInfo"] = btDefaultCollisionConstructionInfo;
      btDefaultCollisionConstructionInfo.prototype["__destroy__"] = btDefaultCollisionConstructionInfo.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btDefaultCollisionConstructionInfo___destroy___0(self);
      };
      function btConstraintSolver() {
        throw "cannot construct a btConstraintSolver, no constructor in IDL";
      }
      btConstraintSolver.prototype = Object.create(WrapperObject.prototype);
      btConstraintSolver.prototype.constructor = btConstraintSolver;
      btConstraintSolver.prototype.__class__ = btConstraintSolver;
      btConstraintSolver.__cache__ = {};
      Module["btConstraintSolver"] = btConstraintSolver;
      btConstraintSolver.prototype["__destroy__"] = btConstraintSolver.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btConstraintSolver___destroy___0(self);
      };
      function btRaycastVehicle(arg0, arg1, arg2) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        this.ptr = _emscripten_bind_btRaycastVehicle_btRaycastVehicle_3(arg0, arg1, arg2);
        getCache(btRaycastVehicle)[this.ptr] = this;
      }
      btRaycastVehicle.prototype = Object.create(btActionInterface.prototype);
      btRaycastVehicle.prototype.constructor = btRaycastVehicle;
      btRaycastVehicle.prototype.__class__ = btRaycastVehicle;
      btRaycastVehicle.__cache__ = {};
      Module["btRaycastVehicle"] = btRaycastVehicle;
      btRaycastVehicle.prototype["applyEngineForce"] = btRaycastVehicle.prototype.applyEngineForce = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRaycastVehicle_applyEngineForce_2(self, arg0, arg1);
      };
      btRaycastVehicle.prototype["setSteeringValue"] = btRaycastVehicle.prototype.setSteeringValue = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRaycastVehicle_setSteeringValue_2(self, arg0, arg1);
      };
      btRaycastVehicle.prototype["getWheelTransformWS"] = btRaycastVehicle.prototype.getWheelTransformWS = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btRaycastVehicle_getWheelTransformWS_1(self, arg0), btTransform);
      };
      btRaycastVehicle.prototype["updateWheelTransform"] = btRaycastVehicle.prototype.updateWheelTransform = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRaycastVehicle_updateWheelTransform_2(self, arg0, arg1);
      };
      btRaycastVehicle.prototype["addWheel"] = btRaycastVehicle.prototype.addWheel = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg5 && typeof arg5 === "object")
          arg5 = arg5.ptr;
        if (arg6 && typeof arg6 === "object")
          arg6 = arg6.ptr;
        return wrapPointer(_emscripten_bind_btRaycastVehicle_addWheel_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6), btWheelInfo);
      };
      btRaycastVehicle.prototype["getNumWheels"] = btRaycastVehicle.prototype.getNumWheels = function() {
        var self = this.ptr;
        return _emscripten_bind_btRaycastVehicle_getNumWheels_0(self);
      };
      btRaycastVehicle.prototype["getRigidBody"] = btRaycastVehicle.prototype.getRigidBody = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btRaycastVehicle_getRigidBody_0(self), btRigidBody);
      };
      btRaycastVehicle.prototype["getWheelInfo"] = btRaycastVehicle.prototype.getWheelInfo = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btRaycastVehicle_getWheelInfo_1(self, arg0), btWheelInfo);
      };
      btRaycastVehicle.prototype["setBrake"] = btRaycastVehicle.prototype.setBrake = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btRaycastVehicle_setBrake_2(self, arg0, arg1);
      };
      btRaycastVehicle.prototype["setCoordinateSystem"] = btRaycastVehicle.prototype.setCoordinateSystem = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btRaycastVehicle_setCoordinateSystem_3(self, arg0, arg1, arg2);
      };
      btRaycastVehicle.prototype["getCurrentSpeedKmHour"] = btRaycastVehicle.prototype.getCurrentSpeedKmHour = function() {
        var self = this.ptr;
        return _emscripten_bind_btRaycastVehicle_getCurrentSpeedKmHour_0(self);
      };
      btRaycastVehicle.prototype["__destroy__"] = btRaycastVehicle.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btRaycastVehicle___destroy___0(self);
      };
      function btCylinderShapeX(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        this.ptr = _emscripten_bind_btCylinderShapeX_btCylinderShapeX_1(arg0);
        getCache(btCylinderShapeX)[this.ptr] = this;
      }
      btCylinderShapeX.prototype = Object.create(btCylinderShape.prototype);
      btCylinderShapeX.prototype.constructor = btCylinderShapeX;
      btCylinderShapeX.prototype.__class__ = btCylinderShapeX;
      btCylinderShapeX.__cache__ = {};
      Module["btCylinderShapeX"] = btCylinderShapeX;
      btCylinderShapeX.prototype["setMargin"] = btCylinderShapeX.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCylinderShapeX_setMargin_1(self, arg0);
      };
      btCylinderShapeX.prototype["getMargin"] = btCylinderShapeX.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btCylinderShapeX_getMargin_0(self);
      };
      btCylinderShapeX.prototype["setLocalScaling"] = btCylinderShapeX.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCylinderShapeX_setLocalScaling_1(self, arg0);
      };
      btCylinderShapeX.prototype["calculateLocalInertia"] = btCylinderShapeX.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCylinderShapeX_calculateLocalInertia_2(self, arg0, arg1);
      };
      btCylinderShapeX.prototype["__destroy__"] = btCylinderShapeX.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCylinderShapeX___destroy___0(self);
      };
      function btCylinderShapeZ(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        this.ptr = _emscripten_bind_btCylinderShapeZ_btCylinderShapeZ_1(arg0);
        getCache(btCylinderShapeZ)[this.ptr] = this;
      }
      btCylinderShapeZ.prototype = Object.create(btCylinderShape.prototype);
      btCylinderShapeZ.prototype.constructor = btCylinderShapeZ;
      btCylinderShapeZ.prototype.__class__ = btCylinderShapeZ;
      btCylinderShapeZ.__cache__ = {};
      Module["btCylinderShapeZ"] = btCylinderShapeZ;
      btCylinderShapeZ.prototype["setMargin"] = btCylinderShapeZ.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCylinderShapeZ_setMargin_1(self, arg0);
      };
      btCylinderShapeZ.prototype["getMargin"] = btCylinderShapeZ.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btCylinderShapeZ_getMargin_0(self);
      };
      btCylinderShapeZ.prototype["setLocalScaling"] = btCylinderShapeZ.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCylinderShapeZ_setLocalScaling_1(self, arg0);
      };
      btCylinderShapeZ.prototype["calculateLocalInertia"] = btCylinderShapeZ.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCylinderShapeZ_calculateLocalInertia_2(self, arg0, arg1);
      };
      btCylinderShapeZ.prototype["__destroy__"] = btCylinderShapeZ.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCylinderShapeZ___destroy___0(self);
      };
      function btSequentialImpulseConstraintSolver() {
        this.ptr = _emscripten_bind_btSequentialImpulseConstraintSolver_btSequentialImpulseConstraintSolver_0();
        getCache(btSequentialImpulseConstraintSolver)[this.ptr] = this;
      }
      btSequentialImpulseConstraintSolver.prototype = Object.create(WrapperObject.prototype);
      btSequentialImpulseConstraintSolver.prototype.constructor = btSequentialImpulseConstraintSolver;
      btSequentialImpulseConstraintSolver.prototype.__class__ = btSequentialImpulseConstraintSolver;
      btSequentialImpulseConstraintSolver.__cache__ = {};
      Module["btSequentialImpulseConstraintSolver"] = btSequentialImpulseConstraintSolver;
      btSequentialImpulseConstraintSolver.prototype["__destroy__"] = btSequentialImpulseConstraintSolver.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSequentialImpulseConstraintSolver___destroy___0(self);
      };
      function RaycastInfo() {
        throw "cannot construct a RaycastInfo, no constructor in IDL";
      }
      RaycastInfo.prototype = Object.create(WrapperObject.prototype);
      RaycastInfo.prototype.constructor = RaycastInfo;
      RaycastInfo.prototype.__class__ = RaycastInfo;
      RaycastInfo.__cache__ = {};
      Module["RaycastInfo"] = RaycastInfo;
      RaycastInfo.prototype["get_m_contactNormalWS"] = RaycastInfo.prototype.get_m_contactNormalWS = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_RaycastInfo_get_m_contactNormalWS_0(self), btVector3);
      };
      RaycastInfo.prototype["set_m_contactNormalWS"] = RaycastInfo.prototype.set_m_contactNormalWS = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RaycastInfo_set_m_contactNormalWS_1(self, arg0);
      };
      RaycastInfo.prototype["get_m_contactPointWS"] = RaycastInfo.prototype.get_m_contactPointWS = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_RaycastInfo_get_m_contactPointWS_0(self), btVector3);
      };
      RaycastInfo.prototype["set_m_contactPointWS"] = RaycastInfo.prototype.set_m_contactPointWS = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RaycastInfo_set_m_contactPointWS_1(self, arg0);
      };
      RaycastInfo.prototype["get_m_suspensionLength"] = RaycastInfo.prototype.get_m_suspensionLength = function() {
        var self = this.ptr;
        return _emscripten_bind_RaycastInfo_get_m_suspensionLength_0(self);
      };
      RaycastInfo.prototype["set_m_suspensionLength"] = RaycastInfo.prototype.set_m_suspensionLength = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RaycastInfo_set_m_suspensionLength_1(self, arg0);
      };
      RaycastInfo.prototype["get_m_hardPointWS"] = RaycastInfo.prototype.get_m_hardPointWS = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_RaycastInfo_get_m_hardPointWS_0(self), btVector3);
      };
      RaycastInfo.prototype["set_m_hardPointWS"] = RaycastInfo.prototype.set_m_hardPointWS = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RaycastInfo_set_m_hardPointWS_1(self, arg0);
      };
      RaycastInfo.prototype["get_m_wheelDirectionWS"] = RaycastInfo.prototype.get_m_wheelDirectionWS = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_RaycastInfo_get_m_wheelDirectionWS_0(self), btVector3);
      };
      RaycastInfo.prototype["set_m_wheelDirectionWS"] = RaycastInfo.prototype.set_m_wheelDirectionWS = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RaycastInfo_set_m_wheelDirectionWS_1(self, arg0);
      };
      RaycastInfo.prototype["get_m_wheelAxleWS"] = RaycastInfo.prototype.get_m_wheelAxleWS = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_RaycastInfo_get_m_wheelAxleWS_0(self), btVector3);
      };
      RaycastInfo.prototype["set_m_wheelAxleWS"] = RaycastInfo.prototype.set_m_wheelAxleWS = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RaycastInfo_set_m_wheelAxleWS_1(self, arg0);
      };
      RaycastInfo.prototype["get_m_isInContact"] = RaycastInfo.prototype.get_m_isInContact = function() {
        var self = this.ptr;
        return !!_emscripten_bind_RaycastInfo_get_m_isInContact_0(self);
      };
      RaycastInfo.prototype["set_m_isInContact"] = RaycastInfo.prototype.set_m_isInContact = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RaycastInfo_set_m_isInContact_1(self, arg0);
      };
      RaycastInfo.prototype["get_m_groundObject"] = RaycastInfo.prototype.get_m_groundObject = function() {
        var self = this.ptr;
        return _emscripten_bind_RaycastInfo_get_m_groundObject_0(self);
      };
      RaycastInfo.prototype["set_m_groundObject"] = RaycastInfo.prototype.set_m_groundObject = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_RaycastInfo_set_m_groundObject_1(self, arg0);
      };
      RaycastInfo.prototype["__destroy__"] = RaycastInfo.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_RaycastInfo___destroy___0(self);
      };
      function tNodeArray() {
        throw "cannot construct a tNodeArray, no constructor in IDL";
      }
      tNodeArray.prototype = Object.create(WrapperObject.prototype);
      tNodeArray.prototype.constructor = tNodeArray;
      tNodeArray.prototype.__class__ = tNodeArray;
      tNodeArray.__cache__ = {};
      Module["tNodeArray"] = tNodeArray;
      tNodeArray.prototype["size"] = tNodeArray.prototype.size = function() {
        var self = this.ptr;
        return _emscripten_bind_tNodeArray_size_0(self);
      };
      tNodeArray.prototype["at"] = tNodeArray.prototype.at = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_tNodeArray_at_1(self, arg0), Node);
      };
      tNodeArray.prototype["__destroy__"] = tNodeArray.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_tNodeArray___destroy___0(self);
      };
      function btSoftBody(arg0, arg1, arg2, arg3) {
        ensureCache.prepare();
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (typeof arg3 == "object") {
          arg3 = ensureFloat32(arg3);
        }
        this.ptr = _emscripten_bind_btSoftBody_btSoftBody_4(arg0, arg1, arg2, arg3);
        getCache(btSoftBody)[this.ptr] = this;
      }
      btSoftBody.prototype = Object.create(btCollisionObject.prototype);
      btSoftBody.prototype.constructor = btSoftBody;
      btSoftBody.prototype.__class__ = btSoftBody;
      btSoftBody.__cache__ = {};
      Module["btSoftBody"] = btSoftBody;
      btSoftBody.prototype["checkLink"] = btSoftBody.prototype.checkLink = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        return !!_emscripten_bind_btSoftBody_checkLink_2(self, arg0, arg1);
      };
      btSoftBody.prototype["checkFace"] = btSoftBody.prototype.checkFace = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        return !!_emscripten_bind_btSoftBody_checkFace_3(self, arg0, arg1, arg2);
      };
      btSoftBody.prototype["appendMaterial"] = btSoftBody.prototype.appendMaterial = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBody_appendMaterial_0(self), Material);
      };
      btSoftBody.prototype["appendNode"] = btSoftBody.prototype.appendNode = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btSoftBody_appendNode_2(self, arg0, arg1);
      };
      btSoftBody.prototype["appendLink"] = btSoftBody.prototype.appendLink = function(arg0, arg1, arg2, arg3) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        _emscripten_bind_btSoftBody_appendLink_4(self, arg0, arg1, arg2, arg3);
      };
      btSoftBody.prototype["appendFace"] = btSoftBody.prototype.appendFace = function(arg0, arg1, arg2, arg3) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        _emscripten_bind_btSoftBody_appendFace_4(self, arg0, arg1, arg2, arg3);
      };
      btSoftBody.prototype["appendTetra"] = btSoftBody.prototype.appendTetra = function(arg0, arg1, arg2, arg3, arg4) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        _emscripten_bind_btSoftBody_appendTetra_5(self, arg0, arg1, arg2, arg3, arg4);
      };
      btSoftBody.prototype["appendAnchor"] = btSoftBody.prototype.appendAnchor = function(arg0, arg1, arg2, arg3) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        _emscripten_bind_btSoftBody_appendAnchor_4(self, arg0, arg1, arg2, arg3);
      };
      btSoftBody.prototype["getTotalMass"] = btSoftBody.prototype.getTotalMass = function() {
        var self = this.ptr;
        return _emscripten_bind_btSoftBody_getTotalMass_0(self);
      };
      btSoftBody.prototype["setTotalMass"] = btSoftBody.prototype.setTotalMass = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btSoftBody_setTotalMass_2(self, arg0, arg1);
      };
      btSoftBody.prototype["setMass"] = btSoftBody.prototype.setMass = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btSoftBody_setMass_2(self, arg0, arg1);
      };
      btSoftBody.prototype["transform"] = btSoftBody.prototype.transform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_transform_1(self, arg0);
      };
      btSoftBody.prototype["translate"] = btSoftBody.prototype.translate = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_translate_1(self, arg0);
      };
      btSoftBody.prototype["rotate"] = btSoftBody.prototype.rotate = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_rotate_1(self, arg0);
      };
      btSoftBody.prototype["scale"] = btSoftBody.prototype.scale = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_scale_1(self, arg0);
      };
      btSoftBody.prototype["generateClusters"] = btSoftBody.prototype.generateClusters = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg1 === void 0) {
          return _emscripten_bind_btSoftBody_generateClusters_1(self, arg0);
        }
        return _emscripten_bind_btSoftBody_generateClusters_2(self, arg0, arg1);
      };
      btSoftBody.prototype["upcast"] = btSoftBody.prototype.upcast = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btSoftBody_upcast_1(self, arg0), btSoftBody);
      };
      btSoftBody.prototype["setAnisotropicFriction"] = btSoftBody.prototype.setAnisotropicFriction = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btSoftBody_setAnisotropicFriction_2(self, arg0, arg1);
      };
      btSoftBody.prototype["getCollisionShape"] = btSoftBody.prototype.getCollisionShape = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBody_getCollisionShape_0(self), btCollisionShape);
      };
      btSoftBody.prototype["setContactProcessingThreshold"] = btSoftBody.prototype.setContactProcessingThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setContactProcessingThreshold_1(self, arg0);
      };
      btSoftBody.prototype["setActivationState"] = btSoftBody.prototype.setActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setActivationState_1(self, arg0);
      };
      btSoftBody.prototype["forceActivationState"] = btSoftBody.prototype.forceActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_forceActivationState_1(self, arg0);
      };
      btSoftBody.prototype["activate"] = btSoftBody.prototype.activate = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg0 === void 0) {
          _emscripten_bind_btSoftBody_activate_0(self);
          return;
        }
        _emscripten_bind_btSoftBody_activate_1(self, arg0);
      };
      btSoftBody.prototype["isActive"] = btSoftBody.prototype.isActive = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btSoftBody_isActive_0(self);
      };
      btSoftBody.prototype["isKinematicObject"] = btSoftBody.prototype.isKinematicObject = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btSoftBody_isKinematicObject_0(self);
      };
      btSoftBody.prototype["setRestitution"] = btSoftBody.prototype.setRestitution = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setRestitution_1(self, arg0);
      };
      btSoftBody.prototype["setFriction"] = btSoftBody.prototype.setFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setFriction_1(self, arg0);
      };
      btSoftBody.prototype["setRollingFriction"] = btSoftBody.prototype.setRollingFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setRollingFriction_1(self, arg0);
      };
      btSoftBody.prototype["getWorldTransform"] = btSoftBody.prototype.getWorldTransform = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBody_getWorldTransform_0(self), btTransform);
      };
      btSoftBody.prototype["getCollisionFlags"] = btSoftBody.prototype.getCollisionFlags = function() {
        var self = this.ptr;
        return _emscripten_bind_btSoftBody_getCollisionFlags_0(self);
      };
      btSoftBody.prototype["setCollisionFlags"] = btSoftBody.prototype.setCollisionFlags = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setCollisionFlags_1(self, arg0);
      };
      btSoftBody.prototype["setWorldTransform"] = btSoftBody.prototype.setWorldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setWorldTransform_1(self, arg0);
      };
      btSoftBody.prototype["setCollisionShape"] = btSoftBody.prototype.setCollisionShape = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setCollisionShape_1(self, arg0);
      };
      btSoftBody.prototype["setCcdMotionThreshold"] = btSoftBody.prototype.setCcdMotionThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setCcdMotionThreshold_1(self, arg0);
      };
      btSoftBody.prototype["setCcdSweptSphereRadius"] = btSoftBody.prototype.setCcdSweptSphereRadius = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setCcdSweptSphereRadius_1(self, arg0);
      };
      btSoftBody.prototype["getUserIndex"] = btSoftBody.prototype.getUserIndex = function() {
        var self = this.ptr;
        return _emscripten_bind_btSoftBody_getUserIndex_0(self);
      };
      btSoftBody.prototype["setUserIndex"] = btSoftBody.prototype.setUserIndex = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setUserIndex_1(self, arg0);
      };
      btSoftBody.prototype["getUserPointer"] = btSoftBody.prototype.getUserPointer = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBody_getUserPointer_0(self), VoidPtr);
      };
      btSoftBody.prototype["setUserPointer"] = btSoftBody.prototype.setUserPointer = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_setUserPointer_1(self, arg0);
      };
      btSoftBody.prototype["get_m_cfg"] = btSoftBody.prototype.get_m_cfg = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBody_get_m_cfg_0(self), Config);
      };
      btSoftBody.prototype["set_m_cfg"] = btSoftBody.prototype.set_m_cfg = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_set_m_cfg_1(self, arg0);
      };
      btSoftBody.prototype["get_m_nodes"] = btSoftBody.prototype.get_m_nodes = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBody_get_m_nodes_0(self), tNodeArray);
      };
      btSoftBody.prototype["set_m_nodes"] = btSoftBody.prototype.set_m_nodes = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_set_m_nodes_1(self, arg0);
      };
      btSoftBody.prototype["get_m_materials"] = btSoftBody.prototype.get_m_materials = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftBody_get_m_materials_0(self), tMaterialArray);
      };
      btSoftBody.prototype["set_m_materials"] = btSoftBody.prototype.set_m_materials = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftBody_set_m_materials_1(self, arg0);
      };
      btSoftBody.prototype["__destroy__"] = btSoftBody.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSoftBody___destroy___0(self);
      };
      function btHeightfieldTerrainShape(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg5 && typeof arg5 === "object")
          arg5 = arg5.ptr;
        if (arg6 && typeof arg6 === "object")
          arg6 = arg6.ptr;
        if (arg7 && typeof arg7 === "object")
          arg7 = arg7.ptr;
        if (arg8 && typeof arg8 === "object")
          arg8 = arg8.ptr;
        this.ptr = _emscripten_bind_btHeightfieldTerrainShape_btHeightfieldTerrainShape_9(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8);
        getCache(btHeightfieldTerrainShape)[this.ptr] = this;
      }
      btHeightfieldTerrainShape.prototype = Object.create(btConcaveShape.prototype);
      btHeightfieldTerrainShape.prototype.constructor = btHeightfieldTerrainShape;
      btHeightfieldTerrainShape.prototype.__class__ = btHeightfieldTerrainShape;
      btHeightfieldTerrainShape.__cache__ = {};
      Module["btHeightfieldTerrainShape"] = btHeightfieldTerrainShape;
      btHeightfieldTerrainShape.prototype["setMargin"] = btHeightfieldTerrainShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btHeightfieldTerrainShape_setMargin_1(self, arg0);
      };
      btHeightfieldTerrainShape.prototype["getMargin"] = btHeightfieldTerrainShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btHeightfieldTerrainShape_getMargin_0(self);
      };
      btHeightfieldTerrainShape.prototype["setLocalScaling"] = btHeightfieldTerrainShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btHeightfieldTerrainShape_setLocalScaling_1(self, arg0);
      };
      btHeightfieldTerrainShape.prototype["calculateLocalInertia"] = btHeightfieldTerrainShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btHeightfieldTerrainShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btHeightfieldTerrainShape.prototype["__destroy__"] = btHeightfieldTerrainShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btHeightfieldTerrainShape___destroy___0(self);
      };
      function Config() {
        throw "cannot construct a Config, no constructor in IDL";
      }
      Config.prototype = Object.create(WrapperObject.prototype);
      Config.prototype.constructor = Config;
      Config.prototype.__class__ = Config;
      Config.__cache__ = {};
      Module["Config"] = Config;
      Config.prototype["get_kVCF"] = Config.prototype.get_kVCF = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kVCF_0(self);
      };
      Config.prototype["set_kVCF"] = Config.prototype.set_kVCF = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kVCF_1(self, arg0);
      };
      Config.prototype["get_kDP"] = Config.prototype.get_kDP = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kDP_0(self);
      };
      Config.prototype["set_kDP"] = Config.prototype.set_kDP = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kDP_1(self, arg0);
      };
      Config.prototype["get_kDG"] = Config.prototype.get_kDG = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kDG_0(self);
      };
      Config.prototype["set_kDG"] = Config.prototype.set_kDG = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kDG_1(self, arg0);
      };
      Config.prototype["get_kLF"] = Config.prototype.get_kLF = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kLF_0(self);
      };
      Config.prototype["set_kLF"] = Config.prototype.set_kLF = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kLF_1(self, arg0);
      };
      Config.prototype["get_kPR"] = Config.prototype.get_kPR = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kPR_0(self);
      };
      Config.prototype["set_kPR"] = Config.prototype.set_kPR = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kPR_1(self, arg0);
      };
      Config.prototype["get_kVC"] = Config.prototype.get_kVC = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kVC_0(self);
      };
      Config.prototype["set_kVC"] = Config.prototype.set_kVC = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kVC_1(self, arg0);
      };
      Config.prototype["get_kDF"] = Config.prototype.get_kDF = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kDF_0(self);
      };
      Config.prototype["set_kDF"] = Config.prototype.set_kDF = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kDF_1(self, arg0);
      };
      Config.prototype["get_kMT"] = Config.prototype.get_kMT = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kMT_0(self);
      };
      Config.prototype["set_kMT"] = Config.prototype.set_kMT = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kMT_1(self, arg0);
      };
      Config.prototype["get_kCHR"] = Config.prototype.get_kCHR = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kCHR_0(self);
      };
      Config.prototype["set_kCHR"] = Config.prototype.set_kCHR = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kCHR_1(self, arg0);
      };
      Config.prototype["get_kKHR"] = Config.prototype.get_kKHR = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kKHR_0(self);
      };
      Config.prototype["set_kKHR"] = Config.prototype.set_kKHR = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kKHR_1(self, arg0);
      };
      Config.prototype["get_kSHR"] = Config.prototype.get_kSHR = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kSHR_0(self);
      };
      Config.prototype["set_kSHR"] = Config.prototype.set_kSHR = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kSHR_1(self, arg0);
      };
      Config.prototype["get_kAHR"] = Config.prototype.get_kAHR = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kAHR_0(self);
      };
      Config.prototype["set_kAHR"] = Config.prototype.set_kAHR = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kAHR_1(self, arg0);
      };
      Config.prototype["get_kSRHR_CL"] = Config.prototype.get_kSRHR_CL = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kSRHR_CL_0(self);
      };
      Config.prototype["set_kSRHR_CL"] = Config.prototype.set_kSRHR_CL = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kSRHR_CL_1(self, arg0);
      };
      Config.prototype["get_kSKHR_CL"] = Config.prototype.get_kSKHR_CL = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kSKHR_CL_0(self);
      };
      Config.prototype["set_kSKHR_CL"] = Config.prototype.set_kSKHR_CL = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kSKHR_CL_1(self, arg0);
      };
      Config.prototype["get_kSSHR_CL"] = Config.prototype.get_kSSHR_CL = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kSSHR_CL_0(self);
      };
      Config.prototype["set_kSSHR_CL"] = Config.prototype.set_kSSHR_CL = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kSSHR_CL_1(self, arg0);
      };
      Config.prototype["get_kSR_SPLT_CL"] = Config.prototype.get_kSR_SPLT_CL = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kSR_SPLT_CL_0(self);
      };
      Config.prototype["set_kSR_SPLT_CL"] = Config.prototype.set_kSR_SPLT_CL = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kSR_SPLT_CL_1(self, arg0);
      };
      Config.prototype["get_kSK_SPLT_CL"] = Config.prototype.get_kSK_SPLT_CL = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kSK_SPLT_CL_0(self);
      };
      Config.prototype["set_kSK_SPLT_CL"] = Config.prototype.set_kSK_SPLT_CL = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kSK_SPLT_CL_1(self, arg0);
      };
      Config.prototype["get_kSS_SPLT_CL"] = Config.prototype.get_kSS_SPLT_CL = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_kSS_SPLT_CL_0(self);
      };
      Config.prototype["set_kSS_SPLT_CL"] = Config.prototype.set_kSS_SPLT_CL = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_kSS_SPLT_CL_1(self, arg0);
      };
      Config.prototype["get_maxvolume"] = Config.prototype.get_maxvolume = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_maxvolume_0(self);
      };
      Config.prototype["set_maxvolume"] = Config.prototype.set_maxvolume = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_maxvolume_1(self, arg0);
      };
      Config.prototype["get_timescale"] = Config.prototype.get_timescale = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_timescale_0(self);
      };
      Config.prototype["set_timescale"] = Config.prototype.set_timescale = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_timescale_1(self, arg0);
      };
      Config.prototype["get_viterations"] = Config.prototype.get_viterations = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_viterations_0(self);
      };
      Config.prototype["set_viterations"] = Config.prototype.set_viterations = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_viterations_1(self, arg0);
      };
      Config.prototype["get_piterations"] = Config.prototype.get_piterations = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_piterations_0(self);
      };
      Config.prototype["set_piterations"] = Config.prototype.set_piterations = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_piterations_1(self, arg0);
      };
      Config.prototype["get_diterations"] = Config.prototype.get_diterations = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_diterations_0(self);
      };
      Config.prototype["set_diterations"] = Config.prototype.set_diterations = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_diterations_1(self, arg0);
      };
      Config.prototype["get_citerations"] = Config.prototype.get_citerations = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_citerations_0(self);
      };
      Config.prototype["set_citerations"] = Config.prototype.set_citerations = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_citerations_1(self, arg0);
      };
      Config.prototype["get_collisions"] = Config.prototype.get_collisions = function() {
        var self = this.ptr;
        return _emscripten_bind_Config_get_collisions_0(self);
      };
      Config.prototype["set_collisions"] = Config.prototype.set_collisions = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Config_set_collisions_1(self, arg0);
      };
      Config.prototype["__destroy__"] = Config.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_Config___destroy___0(self);
      };
      function Node() {
        throw "cannot construct a Node, no constructor in IDL";
      }
      Node.prototype = Object.create(WrapperObject.prototype);
      Node.prototype.constructor = Node;
      Node.prototype.__class__ = Node;
      Node.__cache__ = {};
      Module["Node"] = Node;
      Node.prototype["get_m_x"] = Node.prototype.get_m_x = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_Node_get_m_x_0(self), btVector3);
      };
      Node.prototype["set_m_x"] = Node.prototype.set_m_x = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Node_set_m_x_1(self, arg0);
      };
      Node.prototype["get_m_n"] = Node.prototype.get_m_n = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_Node_get_m_n_0(self), btVector3);
      };
      Node.prototype["set_m_n"] = Node.prototype.set_m_n = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_Node_set_m_n_1(self, arg0);
      };
      Node.prototype["__destroy__"] = Node.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_Node___destroy___0(self);
      };
      function btGhostPairCallback() {
        this.ptr = _emscripten_bind_btGhostPairCallback_btGhostPairCallback_0();
        getCache(btGhostPairCallback)[this.ptr] = this;
      }
      btGhostPairCallback.prototype = Object.create(WrapperObject.prototype);
      btGhostPairCallback.prototype.constructor = btGhostPairCallback;
      btGhostPairCallback.prototype.__class__ = btGhostPairCallback;
      btGhostPairCallback.__cache__ = {};
      Module["btGhostPairCallback"] = btGhostPairCallback;
      btGhostPairCallback.prototype["__destroy__"] = btGhostPairCallback.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btGhostPairCallback___destroy___0(self);
      };
      function btOverlappingPairCallback() {
        throw "cannot construct a btOverlappingPairCallback, no constructor in IDL";
      }
      btOverlappingPairCallback.prototype = Object.create(WrapperObject.prototype);
      btOverlappingPairCallback.prototype.constructor = btOverlappingPairCallback;
      btOverlappingPairCallback.prototype.__class__ = btOverlappingPairCallback;
      btOverlappingPairCallback.__cache__ = {};
      Module["btOverlappingPairCallback"] = btOverlappingPairCallback;
      btOverlappingPairCallback.prototype["__destroy__"] = btOverlappingPairCallback.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btOverlappingPairCallback___destroy___0(self);
      };
      function btCollisionDispatcher(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        this.ptr = _emscripten_bind_btCollisionDispatcher_btCollisionDispatcher_1(arg0);
        getCache(btCollisionDispatcher)[this.ptr] = this;
      }
      btCollisionDispatcher.prototype = Object.create(btDispatcher.prototype);
      btCollisionDispatcher.prototype.constructor = btCollisionDispatcher;
      btCollisionDispatcher.prototype.__class__ = btCollisionDispatcher;
      btCollisionDispatcher.__cache__ = {};
      Module["btCollisionDispatcher"] = btCollisionDispatcher;
      btCollisionDispatcher.prototype["getNumManifolds"] = btCollisionDispatcher.prototype.getNumManifolds = function() {
        var self = this.ptr;
        return _emscripten_bind_btCollisionDispatcher_getNumManifolds_0(self);
      };
      btCollisionDispatcher.prototype["getManifoldByIndexInternal"] = btCollisionDispatcher.prototype.getManifoldByIndexInternal = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btCollisionDispatcher_getManifoldByIndexInternal_1(self, arg0), btPersistentManifold);
      };
      btCollisionDispatcher.prototype["__destroy__"] = btCollisionDispatcher.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCollisionDispatcher___destroy___0(self);
      };
      function btSoftBodyArray() {
        throw "cannot construct a btSoftBodyArray, no constructor in IDL";
      }
      btSoftBodyArray.prototype = Object.create(WrapperObject.prototype);
      btSoftBodyArray.prototype.constructor = btSoftBodyArray;
      btSoftBodyArray.prototype.__class__ = btSoftBodyArray;
      btSoftBodyArray.__cache__ = {};
      Module["btSoftBodyArray"] = btSoftBodyArray;
      btSoftBodyArray.prototype["size"] = btSoftBodyArray.prototype.size = function() {
        var self = this.ptr;
        return _emscripten_bind_btSoftBodyArray_size_0(self);
      };
      btSoftBodyArray.prototype["at"] = btSoftBodyArray.prototype.at = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyArray_at_1(self, arg0), btSoftBody);
      };
      btSoftBodyArray.prototype["__destroy__"] = btSoftBodyArray.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSoftBodyArray___destroy___0(self);
      };
      function btStaticPlaneShape(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        this.ptr = _emscripten_bind_btStaticPlaneShape_btStaticPlaneShape_2(arg0, arg1);
        getCache(btStaticPlaneShape)[this.ptr] = this;
      }
      btStaticPlaneShape.prototype = Object.create(btConcaveShape.prototype);
      btStaticPlaneShape.prototype.constructor = btStaticPlaneShape;
      btStaticPlaneShape.prototype.__class__ = btStaticPlaneShape;
      btStaticPlaneShape.__cache__ = {};
      Module["btStaticPlaneShape"] = btStaticPlaneShape;
      btStaticPlaneShape.prototype["setLocalScaling"] = btStaticPlaneShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btStaticPlaneShape_setLocalScaling_1(self, arg0);
      };
      btStaticPlaneShape.prototype["calculateLocalInertia"] = btStaticPlaneShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btStaticPlaneShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btStaticPlaneShape.prototype["__destroy__"] = btStaticPlaneShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btStaticPlaneShape___destroy___0(self);
      };
      function btOverlappingPairCache() {
        throw "cannot construct a btOverlappingPairCache, no constructor in IDL";
      }
      btOverlappingPairCache.prototype = Object.create(WrapperObject.prototype);
      btOverlappingPairCache.prototype.constructor = btOverlappingPairCache;
      btOverlappingPairCache.prototype.__class__ = btOverlappingPairCache;
      btOverlappingPairCache.__cache__ = {};
      Module["btOverlappingPairCache"] = btOverlappingPairCache;
      btOverlappingPairCache.prototype["setInternalGhostPairCallback"] = btOverlappingPairCache.prototype.setInternalGhostPairCallback = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btOverlappingPairCache_setInternalGhostPairCallback_1(self, arg0);
      };
      btOverlappingPairCache.prototype["__destroy__"] = btOverlappingPairCache.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btOverlappingPairCache___destroy___0(self);
      };
      function btSoftRigidDynamicsWorld(arg0, arg1, arg2, arg3, arg4) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        this.ptr = _emscripten_bind_btSoftRigidDynamicsWorld_btSoftRigidDynamicsWorld_5(arg0, arg1, arg2, arg3, arg4);
        getCache(btSoftRigidDynamicsWorld)[this.ptr] = this;
      }
      btSoftRigidDynamicsWorld.prototype = Object.create(btDiscreteDynamicsWorld.prototype);
      btSoftRigidDynamicsWorld.prototype.constructor = btSoftRigidDynamicsWorld;
      btSoftRigidDynamicsWorld.prototype.__class__ = btSoftRigidDynamicsWorld;
      btSoftRigidDynamicsWorld.__cache__ = {};
      Module["btSoftRigidDynamicsWorld"] = btSoftRigidDynamicsWorld;
      btSoftRigidDynamicsWorld.prototype["addSoftBody"] = btSoftRigidDynamicsWorld.prototype.addSoftBody = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_addSoftBody_3(self, arg0, arg1, arg2);
      };
      btSoftRigidDynamicsWorld.prototype["removeSoftBody"] = btSoftRigidDynamicsWorld.prototype.removeSoftBody = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_removeSoftBody_1(self, arg0);
      };
      btSoftRigidDynamicsWorld.prototype["removeCollisionObject"] = btSoftRigidDynamicsWorld.prototype.removeCollisionObject = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_removeCollisionObject_1(self, arg0);
      };
      btSoftRigidDynamicsWorld.prototype["getWorldInfo"] = btSoftRigidDynamicsWorld.prototype.getWorldInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getWorldInfo_0(self), btSoftBodyWorldInfo);
      };
      btSoftRigidDynamicsWorld.prototype["getSoftBodyArray"] = btSoftRigidDynamicsWorld.prototype.getSoftBodyArray = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getSoftBodyArray_0(self), btSoftBodyArray);
      };
      btSoftRigidDynamicsWorld.prototype["getDispatcher"] = btSoftRigidDynamicsWorld.prototype.getDispatcher = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getDispatcher_0(self), btDispatcher);
      };
      btSoftRigidDynamicsWorld.prototype["rayTest"] = btSoftRigidDynamicsWorld.prototype.rayTest = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_rayTest_3(self, arg0, arg1, arg2);
      };
      btSoftRigidDynamicsWorld.prototype["getPairCache"] = btSoftRigidDynamicsWorld.prototype.getPairCache = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getPairCache_0(self), btOverlappingPairCache);
      };
      btSoftRigidDynamicsWorld.prototype["getDispatchInfo"] = btSoftRigidDynamicsWorld.prototype.getDispatchInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getDispatchInfo_0(self), btDispatcherInfo);
      };
      btSoftRigidDynamicsWorld.prototype["addCollisionObject"] = btSoftRigidDynamicsWorld.prototype.addCollisionObject = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg1 === void 0) {
          _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_1(self, arg0);
          return;
        }
        if (arg2 === void 0) {
          _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_2(self, arg0, arg1);
          return;
        }
        _emscripten_bind_btSoftRigidDynamicsWorld_addCollisionObject_3(self, arg0, arg1, arg2);
      };
      btSoftRigidDynamicsWorld.prototype["getBroadphase"] = btSoftRigidDynamicsWorld.prototype.getBroadphase = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getBroadphase_0(self), btBroadphaseInterface);
      };
      btSoftRigidDynamicsWorld.prototype["convexSweepTest"] = btSoftRigidDynamicsWorld.prototype.convexSweepTest = function(arg0, arg1, arg2, arg3, arg4) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_convexSweepTest_5(self, arg0, arg1, arg2, arg3, arg4);
      };
      btSoftRigidDynamicsWorld.prototype["contactPairTest"] = btSoftRigidDynamicsWorld.prototype.contactPairTest = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_contactPairTest_3(self, arg0, arg1, arg2);
      };
      btSoftRigidDynamicsWorld.prototype["contactTest"] = btSoftRigidDynamicsWorld.prototype.contactTest = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_contactTest_2(self, arg0, arg1);
      };
      btSoftRigidDynamicsWorld.prototype["setGravity"] = btSoftRigidDynamicsWorld.prototype.setGravity = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_setGravity_1(self, arg0);
      };
      btSoftRigidDynamicsWorld.prototype["getGravity"] = btSoftRigidDynamicsWorld.prototype.getGravity = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getGravity_0(self), btVector3);
      };
      btSoftRigidDynamicsWorld.prototype["addRigidBody"] = btSoftRigidDynamicsWorld.prototype.addRigidBody = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg1 === void 0) {
          _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_1(self, arg0);
          return;
        }
        if (arg2 === void 0) {
          _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_2(self, arg0, arg1);
          return;
        }
        _emscripten_bind_btSoftRigidDynamicsWorld_addRigidBody_3(self, arg0, arg1, arg2);
      };
      btSoftRigidDynamicsWorld.prototype["removeRigidBody"] = btSoftRigidDynamicsWorld.prototype.removeRigidBody = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_removeRigidBody_1(self, arg0);
      };
      btSoftRigidDynamicsWorld.prototype["addVehicle"] = btSoftRigidDynamicsWorld.prototype.addVehicle = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_addVehicle_1(self, arg0);
      };
      btSoftRigidDynamicsWorld.prototype["removeVehicle"] = btSoftRigidDynamicsWorld.prototype.removeVehicle = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_removeVehicle_1(self, arg0);
      };
      btSoftRigidDynamicsWorld.prototype["addConstraint"] = btSoftRigidDynamicsWorld.prototype.addConstraint = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg1 === void 0) {
          _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_1(self, arg0);
          return;
        }
        _emscripten_bind_btSoftRigidDynamicsWorld_addConstraint_2(self, arg0, arg1);
      };
      btSoftRigidDynamicsWorld.prototype["removeConstraint"] = btSoftRigidDynamicsWorld.prototype.removeConstraint = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_removeConstraint_1(self, arg0);
      };
      btSoftRigidDynamicsWorld.prototype["stepSimulation"] = btSoftRigidDynamicsWorld.prototype.stepSimulation = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg1 === void 0) {
          return _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_1(self, arg0);
        }
        if (arg2 === void 0) {
          return _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_2(self, arg0, arg1);
        }
        return _emscripten_bind_btSoftRigidDynamicsWorld_stepSimulation_3(self, arg0, arg1, arg2);
      };
      btSoftRigidDynamicsWorld.prototype["addAction"] = btSoftRigidDynamicsWorld.prototype.addAction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_addAction_1(self, arg0);
      };
      btSoftRigidDynamicsWorld.prototype["removeAction"] = btSoftRigidDynamicsWorld.prototype.removeAction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld_removeAction_1(self, arg0);
      };
      btSoftRigidDynamicsWorld.prototype["getSolverInfo"] = btSoftRigidDynamicsWorld.prototype.getSolverInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btSoftRigidDynamicsWorld_getSolverInfo_0(self), btContactSolverInfo);
      };
      btSoftRigidDynamicsWorld.prototype["__destroy__"] = btSoftRigidDynamicsWorld.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSoftRigidDynamicsWorld___destroy___0(self);
      };
      function btTransform(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg0 === void 0) {
          this.ptr = _emscripten_bind_btTransform_btTransform_0();
          getCache(btTransform)[this.ptr] = this;
          return;
        }
        if (arg1 === void 0) {
          this.ptr = _emscripten_bind_btTransform_btTransform_1(arg0);
          getCache(btTransform)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btTransform_btTransform_2(arg0, arg1);
        getCache(btTransform)[this.ptr] = this;
      }
      btTransform.prototype = Object.create(WrapperObject.prototype);
      btTransform.prototype.constructor = btTransform;
      btTransform.prototype.__class__ = btTransform;
      btTransform.__cache__ = {};
      Module["btTransform"] = btTransform;
      btTransform.prototype["setIdentity"] = btTransform.prototype.setIdentity = function() {
        var self = this.ptr;
        _emscripten_bind_btTransform_setIdentity_0(self);
      };
      btTransform.prototype["setOrigin"] = btTransform.prototype.setOrigin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btTransform_setOrigin_1(self, arg0);
      };
      btTransform.prototype["setRotation"] = btTransform.prototype.setRotation = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btTransform_setRotation_1(self, arg0);
      };
      btTransform.prototype["getOrigin"] = btTransform.prototype.getOrigin = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btTransform_getOrigin_0(self), btVector3);
      };
      btTransform.prototype["getRotation"] = btTransform.prototype.getRotation = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btTransform_getRotation_0(self), btQuaternion);
      };
      btTransform.prototype["getBasis"] = btTransform.prototype.getBasis = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btTransform_getBasis_0(self), btMatrix3x3);
      };
      btTransform.prototype["setFromOpenGLMatrix"] = btTransform.prototype.setFromOpenGLMatrix = function(arg0) {
        var self = this.ptr;
        ensureCache.prepare();
        if (typeof arg0 == "object") {
          arg0 = ensureFloat32(arg0);
        }
        _emscripten_bind_btTransform_setFromOpenGLMatrix_1(self, arg0);
      };
      btTransform.prototype["__destroy__"] = btTransform.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btTransform___destroy___0(self);
      };
      function ClosestRayResultCallback(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        this.ptr = _emscripten_bind_ClosestRayResultCallback_ClosestRayResultCallback_2(arg0, arg1);
        getCache(ClosestRayResultCallback)[this.ptr] = this;
      }
      ClosestRayResultCallback.prototype = Object.create(RayResultCallback.prototype);
      ClosestRayResultCallback.prototype.constructor = ClosestRayResultCallback;
      ClosestRayResultCallback.prototype.__class__ = ClosestRayResultCallback;
      ClosestRayResultCallback.__cache__ = {};
      Module["ClosestRayResultCallback"] = ClosestRayResultCallback;
      ClosestRayResultCallback.prototype["hasHit"] = ClosestRayResultCallback.prototype.hasHit = function() {
        var self = this.ptr;
        return !!_emscripten_bind_ClosestRayResultCallback_hasHit_0(self);
      };
      ClosestRayResultCallback.prototype["get_m_rayFromWorld"] = ClosestRayResultCallback.prototype.get_m_rayFromWorld = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayFromWorld_0(self), btVector3);
      };
      ClosestRayResultCallback.prototype["set_m_rayFromWorld"] = ClosestRayResultCallback.prototype.set_m_rayFromWorld = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestRayResultCallback_set_m_rayFromWorld_1(self, arg0);
      };
      ClosestRayResultCallback.prototype["get_m_rayToWorld"] = ClosestRayResultCallback.prototype.get_m_rayToWorld = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_rayToWorld_0(self), btVector3);
      };
      ClosestRayResultCallback.prototype["set_m_rayToWorld"] = ClosestRayResultCallback.prototype.set_m_rayToWorld = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestRayResultCallback_set_m_rayToWorld_1(self, arg0);
      };
      ClosestRayResultCallback.prototype["get_m_hitNormalWorld"] = ClosestRayResultCallback.prototype.get_m_hitNormalWorld = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitNormalWorld_0(self), btVector3);
      };
      ClosestRayResultCallback.prototype["set_m_hitNormalWorld"] = ClosestRayResultCallback.prototype.set_m_hitNormalWorld = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestRayResultCallback_set_m_hitNormalWorld_1(self, arg0);
      };
      ClosestRayResultCallback.prototype["get_m_hitPointWorld"] = ClosestRayResultCallback.prototype.get_m_hitPointWorld = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_hitPointWorld_0(self), btVector3);
      };
      ClosestRayResultCallback.prototype["set_m_hitPointWorld"] = ClosestRayResultCallback.prototype.set_m_hitPointWorld = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestRayResultCallback_set_m_hitPointWorld_1(self, arg0);
      };
      ClosestRayResultCallback.prototype["get_m_collisionFilterGroup"] = ClosestRayResultCallback.prototype.get_m_collisionFilterGroup = function() {
        var self = this.ptr;
        return _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterGroup_0(self);
      };
      ClosestRayResultCallback.prototype["set_m_collisionFilterGroup"] = ClosestRayResultCallback.prototype.set_m_collisionFilterGroup = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterGroup_1(self, arg0);
      };
      ClosestRayResultCallback.prototype["get_m_collisionFilterMask"] = ClosestRayResultCallback.prototype.get_m_collisionFilterMask = function() {
        var self = this.ptr;
        return _emscripten_bind_ClosestRayResultCallback_get_m_collisionFilterMask_0(self);
      };
      ClosestRayResultCallback.prototype["set_m_collisionFilterMask"] = ClosestRayResultCallback.prototype.set_m_collisionFilterMask = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestRayResultCallback_set_m_collisionFilterMask_1(self, arg0);
      };
      ClosestRayResultCallback.prototype["get_m_collisionObject"] = ClosestRayResultCallback.prototype.get_m_collisionObject = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_ClosestRayResultCallback_get_m_collisionObject_0(self), btCollisionObject);
      };
      ClosestRayResultCallback.prototype["set_m_collisionObject"] = ClosestRayResultCallback.prototype.set_m_collisionObject = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_ClosestRayResultCallback_set_m_collisionObject_1(self, arg0);
      };
      ClosestRayResultCallback.prototype["__destroy__"] = ClosestRayResultCallback.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_ClosestRayResultCallback___destroy___0(self);
      };
      function btSoftBodyRigidBodyCollisionConfiguration(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg0 === void 0) {
          this.ptr = _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_0();
          getCache(btSoftBodyRigidBodyCollisionConfiguration)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration_btSoftBodyRigidBodyCollisionConfiguration_1(arg0);
        getCache(btSoftBodyRigidBodyCollisionConfiguration)[this.ptr] = this;
      }
      btSoftBodyRigidBodyCollisionConfiguration.prototype = Object.create(btDefaultCollisionConfiguration.prototype);
      btSoftBodyRigidBodyCollisionConfiguration.prototype.constructor = btSoftBodyRigidBodyCollisionConfiguration;
      btSoftBodyRigidBodyCollisionConfiguration.prototype.__class__ = btSoftBodyRigidBodyCollisionConfiguration;
      btSoftBodyRigidBodyCollisionConfiguration.__cache__ = {};
      Module["btSoftBodyRigidBodyCollisionConfiguration"] = btSoftBodyRigidBodyCollisionConfiguration;
      btSoftBodyRigidBodyCollisionConfiguration.prototype["__destroy__"] = btSoftBodyRigidBodyCollisionConfiguration.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSoftBodyRigidBodyCollisionConfiguration___destroy___0(self);
      };
      function ConcreteContactResultCallback() {
        this.ptr = _emscripten_bind_ConcreteContactResultCallback_ConcreteContactResultCallback_0();
        getCache(ConcreteContactResultCallback)[this.ptr] = this;
      }
      ConcreteContactResultCallback.prototype = Object.create(ContactResultCallback.prototype);
      ConcreteContactResultCallback.prototype.constructor = ConcreteContactResultCallback;
      ConcreteContactResultCallback.prototype.__class__ = ConcreteContactResultCallback;
      ConcreteContactResultCallback.__cache__ = {};
      Module["ConcreteContactResultCallback"] = ConcreteContactResultCallback;
      ConcreteContactResultCallback.prototype["addSingleResult"] = ConcreteContactResultCallback.prototype.addSingleResult = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg5 && typeof arg5 === "object")
          arg5 = arg5.ptr;
        if (arg6 && typeof arg6 === "object")
          arg6 = arg6.ptr;
        return _emscripten_bind_ConcreteContactResultCallback_addSingleResult_7(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6);
      };
      ConcreteContactResultCallback.prototype["__destroy__"] = ConcreteContactResultCallback.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_ConcreteContactResultCallback___destroy___0(self);
      };
      function btBvhTriangleMeshShape(arg0, arg1, arg2) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg2 === void 0) {
          this.ptr = _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_2(arg0, arg1);
          getCache(btBvhTriangleMeshShape)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btBvhTriangleMeshShape_btBvhTriangleMeshShape_3(arg0, arg1, arg2);
        getCache(btBvhTriangleMeshShape)[this.ptr] = this;
      }
      btBvhTriangleMeshShape.prototype = Object.create(btTriangleMeshShape.prototype);
      btBvhTriangleMeshShape.prototype.constructor = btBvhTriangleMeshShape;
      btBvhTriangleMeshShape.prototype.__class__ = btBvhTriangleMeshShape;
      btBvhTriangleMeshShape.__cache__ = {};
      Module["btBvhTriangleMeshShape"] = btBvhTriangleMeshShape;
      btBvhTriangleMeshShape.prototype["setLocalScaling"] = btBvhTriangleMeshShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btBvhTriangleMeshShape_setLocalScaling_1(self, arg0);
      };
      btBvhTriangleMeshShape.prototype["calculateLocalInertia"] = btBvhTriangleMeshShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btBvhTriangleMeshShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btBvhTriangleMeshShape.prototype["__destroy__"] = btBvhTriangleMeshShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btBvhTriangleMeshShape___destroy___0(self);
      };
      function btSliderConstraint(arg0, arg1, arg2, arg3, arg4) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btSliderConstraint_btSliderConstraint_3(arg0, arg1, arg2);
          getCache(btSliderConstraint)[this.ptr] = this;
          return;
        }
        if (arg4 === void 0) {
          this.ptr = _emscripten_bind_btSliderConstraint_btSliderConstraint_4(arg0, arg1, arg2, arg3);
          getCache(btSliderConstraint)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btSliderConstraint_btSliderConstraint_5(arg0, arg1, arg2, arg3, arg4);
        getCache(btSliderConstraint)[this.ptr] = this;
      }
      btSliderConstraint.prototype = Object.create(btTypedConstraint.prototype);
      btSliderConstraint.prototype.constructor = btSliderConstraint;
      btSliderConstraint.prototype.__class__ = btSliderConstraint;
      btSliderConstraint.__cache__ = {};
      Module["btSliderConstraint"] = btSliderConstraint;
      btSliderConstraint.prototype["setLowerLinLimit"] = btSliderConstraint.prototype.setLowerLinLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSliderConstraint_setLowerLinLimit_1(self, arg0);
      };
      btSliderConstraint.prototype["setUpperLinLimit"] = btSliderConstraint.prototype.setUpperLinLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSliderConstraint_setUpperLinLimit_1(self, arg0);
      };
      btSliderConstraint.prototype["setLowerAngLimit"] = btSliderConstraint.prototype.setLowerAngLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSliderConstraint_setLowerAngLimit_1(self, arg0);
      };
      btSliderConstraint.prototype["setUpperAngLimit"] = btSliderConstraint.prototype.setUpperAngLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSliderConstraint_setUpperAngLimit_1(self, arg0);
      };
      btSliderConstraint.prototype["enableFeedback"] = btSliderConstraint.prototype.enableFeedback = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSliderConstraint_enableFeedback_1(self, arg0);
      };
      btSliderConstraint.prototype["getBreakingImpulseThreshold"] = btSliderConstraint.prototype.getBreakingImpulseThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btSliderConstraint_getBreakingImpulseThreshold_0(self);
      };
      btSliderConstraint.prototype["setBreakingImpulseThreshold"] = btSliderConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSliderConstraint_setBreakingImpulseThreshold_1(self, arg0);
      };
      btSliderConstraint.prototype["__destroy__"] = btSliderConstraint.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSliderConstraint___destroy___0(self);
      };
      function btPairCachingGhostObject() {
        this.ptr = _emscripten_bind_btPairCachingGhostObject_btPairCachingGhostObject_0();
        getCache(btPairCachingGhostObject)[this.ptr] = this;
      }
      btPairCachingGhostObject.prototype = Object.create(btGhostObject.prototype);
      btPairCachingGhostObject.prototype.constructor = btPairCachingGhostObject;
      btPairCachingGhostObject.prototype.__class__ = btPairCachingGhostObject;
      btPairCachingGhostObject.__cache__ = {};
      Module["btPairCachingGhostObject"] = btPairCachingGhostObject;
      btPairCachingGhostObject.prototype["setAnisotropicFriction"] = btPairCachingGhostObject.prototype.setAnisotropicFriction = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btPairCachingGhostObject_setAnisotropicFriction_2(self, arg0, arg1);
      };
      btPairCachingGhostObject.prototype["getCollisionShape"] = btPairCachingGhostObject.prototype.getCollisionShape = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getCollisionShape_0(self), btCollisionShape);
      };
      btPairCachingGhostObject.prototype["setContactProcessingThreshold"] = btPairCachingGhostObject.prototype.setContactProcessingThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setContactProcessingThreshold_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["setActivationState"] = btPairCachingGhostObject.prototype.setActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setActivationState_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["forceActivationState"] = btPairCachingGhostObject.prototype.forceActivationState = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_forceActivationState_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["activate"] = btPairCachingGhostObject.prototype.activate = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg0 === void 0) {
          _emscripten_bind_btPairCachingGhostObject_activate_0(self);
          return;
        }
        _emscripten_bind_btPairCachingGhostObject_activate_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["isActive"] = btPairCachingGhostObject.prototype.isActive = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btPairCachingGhostObject_isActive_0(self);
      };
      btPairCachingGhostObject.prototype["isKinematicObject"] = btPairCachingGhostObject.prototype.isKinematicObject = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btPairCachingGhostObject_isKinematicObject_0(self);
      };
      btPairCachingGhostObject.prototype["setRestitution"] = btPairCachingGhostObject.prototype.setRestitution = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setRestitution_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["setFriction"] = btPairCachingGhostObject.prototype.setFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setFriction_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["setRollingFriction"] = btPairCachingGhostObject.prototype.setRollingFriction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setRollingFriction_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["getWorldTransform"] = btPairCachingGhostObject.prototype.getWorldTransform = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getWorldTransform_0(self), btTransform);
      };
      btPairCachingGhostObject.prototype["getCollisionFlags"] = btPairCachingGhostObject.prototype.getCollisionFlags = function() {
        var self = this.ptr;
        return _emscripten_bind_btPairCachingGhostObject_getCollisionFlags_0(self);
      };
      btPairCachingGhostObject.prototype["setCollisionFlags"] = btPairCachingGhostObject.prototype.setCollisionFlags = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setCollisionFlags_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["setWorldTransform"] = btPairCachingGhostObject.prototype.setWorldTransform = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setWorldTransform_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["setCollisionShape"] = btPairCachingGhostObject.prototype.setCollisionShape = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setCollisionShape_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["setCcdMotionThreshold"] = btPairCachingGhostObject.prototype.setCcdMotionThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setCcdMotionThreshold_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["setCcdSweptSphereRadius"] = btPairCachingGhostObject.prototype.setCcdSweptSphereRadius = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setCcdSweptSphereRadius_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["getUserIndex"] = btPairCachingGhostObject.prototype.getUserIndex = function() {
        var self = this.ptr;
        return _emscripten_bind_btPairCachingGhostObject_getUserIndex_0(self);
      };
      btPairCachingGhostObject.prototype["setUserIndex"] = btPairCachingGhostObject.prototype.setUserIndex = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setUserIndex_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["getUserPointer"] = btPairCachingGhostObject.prototype.getUserPointer = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getUserPointer_0(self), VoidPtr);
      };
      btPairCachingGhostObject.prototype["setUserPointer"] = btPairCachingGhostObject.prototype.setUserPointer = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPairCachingGhostObject_setUserPointer_1(self, arg0);
      };
      btPairCachingGhostObject.prototype["getNumOverlappingObjects"] = btPairCachingGhostObject.prototype.getNumOverlappingObjects = function() {
        var self = this.ptr;
        return _emscripten_bind_btPairCachingGhostObject_getNumOverlappingObjects_0(self);
      };
      btPairCachingGhostObject.prototype["getOverlappingObject"] = btPairCachingGhostObject.prototype.getOverlappingObject = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btPairCachingGhostObject_getOverlappingObject_1(self, arg0), btCollisionObject);
      };
      btPairCachingGhostObject.prototype["__destroy__"] = btPairCachingGhostObject.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btPairCachingGhostObject___destroy___0(self);
      };
      function btManifoldPoint() {
        throw "cannot construct a btManifoldPoint, no constructor in IDL";
      }
      btManifoldPoint.prototype = Object.create(WrapperObject.prototype);
      btManifoldPoint.prototype.constructor = btManifoldPoint;
      btManifoldPoint.prototype.__class__ = btManifoldPoint;
      btManifoldPoint.__cache__ = {};
      Module["btManifoldPoint"] = btManifoldPoint;
      btManifoldPoint.prototype["getPositionWorldOnA"] = btManifoldPoint.prototype.getPositionWorldOnA = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnA_0(self), btVector3);
      };
      btManifoldPoint.prototype["getPositionWorldOnB"] = btManifoldPoint.prototype.getPositionWorldOnB = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btManifoldPoint_getPositionWorldOnB_0(self), btVector3);
      };
      btManifoldPoint.prototype["getAppliedImpulse"] = btManifoldPoint.prototype.getAppliedImpulse = function() {
        var self = this.ptr;
        return _emscripten_bind_btManifoldPoint_getAppliedImpulse_0(self);
      };
      btManifoldPoint.prototype["getDistance"] = btManifoldPoint.prototype.getDistance = function() {
        var self = this.ptr;
        return _emscripten_bind_btManifoldPoint_getDistance_0(self);
      };
      btManifoldPoint.prototype["get_m_localPointA"] = btManifoldPoint.prototype.get_m_localPointA = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointA_0(self), btVector3);
      };
      btManifoldPoint.prototype["set_m_localPointA"] = btManifoldPoint.prototype.set_m_localPointA = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btManifoldPoint_set_m_localPointA_1(self, arg0);
      };
      btManifoldPoint.prototype["get_m_localPointB"] = btManifoldPoint.prototype.get_m_localPointB = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_localPointB_0(self), btVector3);
      };
      btManifoldPoint.prototype["set_m_localPointB"] = btManifoldPoint.prototype.set_m_localPointB = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btManifoldPoint_set_m_localPointB_1(self, arg0);
      };
      btManifoldPoint.prototype["get_m_positionWorldOnB"] = btManifoldPoint.prototype.get_m_positionWorldOnB = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnB_0(self), btVector3);
      };
      btManifoldPoint.prototype["set_m_positionWorldOnB"] = btManifoldPoint.prototype.set_m_positionWorldOnB = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btManifoldPoint_set_m_positionWorldOnB_1(self, arg0);
      };
      btManifoldPoint.prototype["get_m_positionWorldOnA"] = btManifoldPoint.prototype.get_m_positionWorldOnA = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_positionWorldOnA_0(self), btVector3);
      };
      btManifoldPoint.prototype["set_m_positionWorldOnA"] = btManifoldPoint.prototype.set_m_positionWorldOnA = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btManifoldPoint_set_m_positionWorldOnA_1(self, arg0);
      };
      btManifoldPoint.prototype["get_m_normalWorldOnB"] = btManifoldPoint.prototype.get_m_normalWorldOnB = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btManifoldPoint_get_m_normalWorldOnB_0(self), btVector3);
      };
      btManifoldPoint.prototype["set_m_normalWorldOnB"] = btManifoldPoint.prototype.set_m_normalWorldOnB = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btManifoldPoint_set_m_normalWorldOnB_1(self, arg0);
      };
      btManifoldPoint.prototype["__destroy__"] = btManifoldPoint.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btManifoldPoint___destroy___0(self);
      };
      function btPoint2PointConstraint(arg0, arg1, arg2, arg3) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg2 === void 0) {
          this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_2(arg0, arg1);
          getCache(btPoint2PointConstraint)[this.ptr] = this;
          return;
        }
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_3(arg0, arg1, arg2);
          getCache(btPoint2PointConstraint)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btPoint2PointConstraint_btPoint2PointConstraint_4(arg0, arg1, arg2, arg3);
        getCache(btPoint2PointConstraint)[this.ptr] = this;
      }
      btPoint2PointConstraint.prototype = Object.create(btTypedConstraint.prototype);
      btPoint2PointConstraint.prototype.constructor = btPoint2PointConstraint;
      btPoint2PointConstraint.prototype.__class__ = btPoint2PointConstraint;
      btPoint2PointConstraint.__cache__ = {};
      Module["btPoint2PointConstraint"] = btPoint2PointConstraint;
      btPoint2PointConstraint.prototype["setPivotA"] = btPoint2PointConstraint.prototype.setPivotA = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPoint2PointConstraint_setPivotA_1(self, arg0);
      };
      btPoint2PointConstraint.prototype["setPivotB"] = btPoint2PointConstraint.prototype.setPivotB = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPoint2PointConstraint_setPivotB_1(self, arg0);
      };
      btPoint2PointConstraint.prototype["getPivotInA"] = btPoint2PointConstraint.prototype.getPivotInA = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInA_0(self), btVector3);
      };
      btPoint2PointConstraint.prototype["getPivotInB"] = btPoint2PointConstraint.prototype.getPivotInB = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btPoint2PointConstraint_getPivotInB_0(self), btVector3);
      };
      btPoint2PointConstraint.prototype["enableFeedback"] = btPoint2PointConstraint.prototype.enableFeedback = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPoint2PointConstraint_enableFeedback_1(self, arg0);
      };
      btPoint2PointConstraint.prototype["getBreakingImpulseThreshold"] = btPoint2PointConstraint.prototype.getBreakingImpulseThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btPoint2PointConstraint_getBreakingImpulseThreshold_0(self);
      };
      btPoint2PointConstraint.prototype["setBreakingImpulseThreshold"] = btPoint2PointConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPoint2PointConstraint_setBreakingImpulseThreshold_1(self, arg0);
      };
      btPoint2PointConstraint.prototype["get_m_setting"] = btPoint2PointConstraint.prototype.get_m_setting = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_btPoint2PointConstraint_get_m_setting_0(self), btConstraintSetting);
      };
      btPoint2PointConstraint.prototype["set_m_setting"] = btPoint2PointConstraint.prototype.set_m_setting = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btPoint2PointConstraint_set_m_setting_1(self, arg0);
      };
      btPoint2PointConstraint.prototype["__destroy__"] = btPoint2PointConstraint.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btPoint2PointConstraint___destroy___0(self);
      };
      function btSoftBodyHelpers() {
        this.ptr = _emscripten_bind_btSoftBodyHelpers_btSoftBodyHelpers_0();
        getCache(btSoftBodyHelpers)[this.ptr] = this;
      }
      btSoftBodyHelpers.prototype = Object.create(WrapperObject.prototype);
      btSoftBodyHelpers.prototype.constructor = btSoftBodyHelpers;
      btSoftBodyHelpers.prototype.__class__ = btSoftBodyHelpers;
      btSoftBodyHelpers.__cache__ = {};
      Module["btSoftBodyHelpers"] = btSoftBodyHelpers;
      btSoftBodyHelpers.prototype["CreateRope"] = btSoftBodyHelpers.prototype.CreateRope = function(arg0, arg1, arg2, arg3, arg4) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateRope_5(self, arg0, arg1, arg2, arg3, arg4), btSoftBody);
      };
      btSoftBodyHelpers.prototype["CreatePatch"] = btSoftBodyHelpers.prototype.CreatePatch = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg5 && typeof arg5 === "object")
          arg5 = arg5.ptr;
        if (arg6 && typeof arg6 === "object")
          arg6 = arg6.ptr;
        if (arg7 && typeof arg7 === "object")
          arg7 = arg7.ptr;
        if (arg8 && typeof arg8 === "object")
          arg8 = arg8.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreatePatch_9(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8), btSoftBody);
      };
      btSoftBodyHelpers.prototype["CreatePatchUV"] = btSoftBodyHelpers.prototype.CreatePatchUV = function(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9) {
        var self = this.ptr;
        ensureCache.prepare();
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg5 && typeof arg5 === "object")
          arg5 = arg5.ptr;
        if (arg6 && typeof arg6 === "object")
          arg6 = arg6.ptr;
        if (arg7 && typeof arg7 === "object")
          arg7 = arg7.ptr;
        if (arg8 && typeof arg8 === "object")
          arg8 = arg8.ptr;
        if (typeof arg9 == "object") {
          arg9 = ensureFloat32(arg9);
        }
        return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreatePatchUV_10(self, arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9), btSoftBody);
      };
      btSoftBodyHelpers.prototype["CreateEllipsoid"] = btSoftBodyHelpers.prototype.CreateEllipsoid = function(arg0, arg1, arg2, arg3) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateEllipsoid_4(self, arg0, arg1, arg2, arg3), btSoftBody);
      };
      btSoftBodyHelpers.prototype["CreateFromTriMesh"] = btSoftBodyHelpers.prototype.CreateFromTriMesh = function(arg0, arg1, arg2, arg3, arg4) {
        var self = this.ptr;
        ensureCache.prepare();
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (typeof arg1 == "object") {
          arg1 = ensureFloat32(arg1);
        }
        if (typeof arg2 == "object") {
          arg2 = ensureInt32(arg2);
        }
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateFromTriMesh_5(self, arg0, arg1, arg2, arg3, arg4), btSoftBody);
      };
      btSoftBodyHelpers.prototype["CreateFromConvexHull"] = btSoftBodyHelpers.prototype.CreateFromConvexHull = function(arg0, arg1, arg2, arg3) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        return wrapPointer(_emscripten_bind_btSoftBodyHelpers_CreateFromConvexHull_4(self, arg0, arg1, arg2, arg3), btSoftBody);
      };
      btSoftBodyHelpers.prototype["__destroy__"] = btSoftBodyHelpers.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSoftBodyHelpers___destroy___0(self);
      };
      function VoidPtr() {
        throw "cannot construct a VoidPtr, no constructor in IDL";
      }
      VoidPtr.prototype = Object.create(WrapperObject.prototype);
      VoidPtr.prototype.constructor = VoidPtr;
      VoidPtr.prototype.__class__ = VoidPtr;
      VoidPtr.__cache__ = {};
      Module["VoidPtr"] = VoidPtr;
      VoidPtr.prototype["__destroy__"] = VoidPtr.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_VoidPtr___destroy___0(self);
      };
      function btBoxShape(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        this.ptr = _emscripten_bind_btBoxShape_btBoxShape_1(arg0);
        getCache(btBoxShape)[this.ptr] = this;
      }
      btBoxShape.prototype = Object.create(btCollisionShape.prototype);
      btBoxShape.prototype.constructor = btBoxShape;
      btBoxShape.prototype.__class__ = btBoxShape;
      btBoxShape.__cache__ = {};
      Module["btBoxShape"] = btBoxShape;
      btBoxShape.prototype["setMargin"] = btBoxShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btBoxShape_setMargin_1(self, arg0);
      };
      btBoxShape.prototype["getMargin"] = btBoxShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btBoxShape_getMargin_0(self);
      };
      btBoxShape.prototype["setLocalScaling"] = btBoxShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btBoxShape_setLocalScaling_1(self, arg0);
      };
      btBoxShape.prototype["calculateLocalInertia"] = btBoxShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btBoxShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btBoxShape.prototype["__destroy__"] = btBoxShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btBoxShape___destroy___0(self);
      };
      function btCapsuleShapeX(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        this.ptr = _emscripten_bind_btCapsuleShapeX_btCapsuleShapeX_2(arg0, arg1);
        getCache(btCapsuleShapeX)[this.ptr] = this;
      }
      btCapsuleShapeX.prototype = Object.create(btCapsuleShape.prototype);
      btCapsuleShapeX.prototype.constructor = btCapsuleShapeX;
      btCapsuleShapeX.prototype.__class__ = btCapsuleShapeX;
      btCapsuleShapeX.__cache__ = {};
      Module["btCapsuleShapeX"] = btCapsuleShapeX;
      btCapsuleShapeX.prototype["setMargin"] = btCapsuleShapeX.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCapsuleShapeX_setMargin_1(self, arg0);
      };
      btCapsuleShapeX.prototype["getMargin"] = btCapsuleShapeX.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btCapsuleShapeX_getMargin_0(self);
      };
      btCapsuleShapeX.prototype["setLocalScaling"] = btCapsuleShapeX.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCapsuleShapeX_setLocalScaling_1(self, arg0);
      };
      btCapsuleShapeX.prototype["calculateLocalInertia"] = btCapsuleShapeX.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCapsuleShapeX_calculateLocalInertia_2(self, arg0, arg1);
      };
      btCapsuleShapeX.prototype["__destroy__"] = btCapsuleShapeX.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCapsuleShapeX___destroy___0(self);
      };
      function btQuaternion(arg0, arg1, arg2, arg3) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        this.ptr = _emscripten_bind_btQuaternion_btQuaternion_4(arg0, arg1, arg2, arg3);
        getCache(btQuaternion)[this.ptr] = this;
      }
      btQuaternion.prototype = Object.create(btQuadWord.prototype);
      btQuaternion.prototype.constructor = btQuaternion;
      btQuaternion.prototype.__class__ = btQuaternion;
      btQuaternion.__cache__ = {};
      Module["btQuaternion"] = btQuaternion;
      btQuaternion.prototype["setValue"] = btQuaternion.prototype.setValue = function(arg0, arg1, arg2, arg3) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        _emscripten_bind_btQuaternion_setValue_4(self, arg0, arg1, arg2, arg3);
      };
      btQuaternion.prototype["setEulerZYX"] = btQuaternion.prototype.setEulerZYX = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btQuaternion_setEulerZYX_3(self, arg0, arg1, arg2);
      };
      btQuaternion.prototype["setEuler"] = btQuaternion.prototype.setEuler = function(arg0, arg1, arg2) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        _emscripten_bind_btQuaternion_setEuler_3(self, arg0, arg1, arg2);
      };
      btQuaternion.prototype["normalize"] = btQuaternion.prototype.normalize = function() {
        var self = this.ptr;
        _emscripten_bind_btQuaternion_normalize_0(self);
      };
      btQuaternion.prototype["x"] = btQuaternion.prototype.x = function() {
        var self = this.ptr;
        return _emscripten_bind_btQuaternion_x_0(self);
      };
      btQuaternion.prototype["y"] = btQuaternion.prototype.y = function() {
        var self = this.ptr;
        return _emscripten_bind_btQuaternion_y_0(self);
      };
      btQuaternion.prototype["z"] = btQuaternion.prototype.z = function() {
        var self = this.ptr;
        return _emscripten_bind_btQuaternion_z_0(self);
      };
      btQuaternion.prototype["w"] = btQuaternion.prototype.w = function() {
        var self = this.ptr;
        return _emscripten_bind_btQuaternion_w_0(self);
      };
      btQuaternion.prototype["setX"] = btQuaternion.prototype.setX = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btQuaternion_setX_1(self, arg0);
      };
      btQuaternion.prototype["setY"] = btQuaternion.prototype.setY = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btQuaternion_setY_1(self, arg0);
      };
      btQuaternion.prototype["setZ"] = btQuaternion.prototype.setZ = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btQuaternion_setZ_1(self, arg0);
      };
      btQuaternion.prototype["setW"] = btQuaternion.prototype.setW = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btQuaternion_setW_1(self, arg0);
      };
      btQuaternion.prototype["__destroy__"] = btQuaternion.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btQuaternion___destroy___0(self);
      };
      function btCapsuleShapeZ(arg0, arg1) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        this.ptr = _emscripten_bind_btCapsuleShapeZ_btCapsuleShapeZ_2(arg0, arg1);
        getCache(btCapsuleShapeZ)[this.ptr] = this;
      }
      btCapsuleShapeZ.prototype = Object.create(btCapsuleShape.prototype);
      btCapsuleShapeZ.prototype.constructor = btCapsuleShapeZ;
      btCapsuleShapeZ.prototype.__class__ = btCapsuleShapeZ;
      btCapsuleShapeZ.__cache__ = {};
      Module["btCapsuleShapeZ"] = btCapsuleShapeZ;
      btCapsuleShapeZ.prototype["setMargin"] = btCapsuleShapeZ.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCapsuleShapeZ_setMargin_1(self, arg0);
      };
      btCapsuleShapeZ.prototype["getMargin"] = btCapsuleShapeZ.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btCapsuleShapeZ_getMargin_0(self);
      };
      btCapsuleShapeZ.prototype["setLocalScaling"] = btCapsuleShapeZ.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btCapsuleShapeZ_setLocalScaling_1(self, arg0);
      };
      btCapsuleShapeZ.prototype["calculateLocalInertia"] = btCapsuleShapeZ.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btCapsuleShapeZ_calculateLocalInertia_2(self, arg0, arg1);
      };
      btCapsuleShapeZ.prototype["__destroy__"] = btCapsuleShapeZ.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btCapsuleShapeZ___destroy___0(self);
      };
      function btContactSolverInfo() {
        throw "cannot construct a btContactSolverInfo, no constructor in IDL";
      }
      btContactSolverInfo.prototype = Object.create(WrapperObject.prototype);
      btContactSolverInfo.prototype.constructor = btContactSolverInfo;
      btContactSolverInfo.prototype.__class__ = btContactSolverInfo;
      btContactSolverInfo.__cache__ = {};
      Module["btContactSolverInfo"] = btContactSolverInfo;
      btContactSolverInfo.prototype["get_m_splitImpulse"] = btContactSolverInfo.prototype.get_m_splitImpulse = function() {
        var self = this.ptr;
        return !!_emscripten_bind_btContactSolverInfo_get_m_splitImpulse_0(self);
      };
      btContactSolverInfo.prototype["set_m_splitImpulse"] = btContactSolverInfo.prototype.set_m_splitImpulse = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btContactSolverInfo_set_m_splitImpulse_1(self, arg0);
      };
      btContactSolverInfo.prototype["get_m_splitImpulsePenetrationThreshold"] = btContactSolverInfo.prototype.get_m_splitImpulsePenetrationThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btContactSolverInfo_get_m_splitImpulsePenetrationThreshold_0(self);
      };
      btContactSolverInfo.prototype["set_m_splitImpulsePenetrationThreshold"] = btContactSolverInfo.prototype.set_m_splitImpulsePenetrationThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btContactSolverInfo_set_m_splitImpulsePenetrationThreshold_1(self, arg0);
      };
      btContactSolverInfo.prototype["__destroy__"] = btContactSolverInfo.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btContactSolverInfo___destroy___0(self);
      };
      function btGeneric6DofSpringConstraint(arg0, arg1, arg2, arg3, arg4) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        if (arg3 === void 0) {
          this.ptr = _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_3(arg0, arg1, arg2);
          getCache(btGeneric6DofSpringConstraint)[this.ptr] = this;
          return;
        }
        if (arg4 === void 0) {
          this.ptr = _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_4(arg0, arg1, arg2, arg3);
          getCache(btGeneric6DofSpringConstraint)[this.ptr] = this;
          return;
        }
        this.ptr = _emscripten_bind_btGeneric6DofSpringConstraint_btGeneric6DofSpringConstraint_5(arg0, arg1, arg2, arg3, arg4);
        getCache(btGeneric6DofSpringConstraint)[this.ptr] = this;
      }
      btGeneric6DofSpringConstraint.prototype = Object.create(btGeneric6DofConstraint.prototype);
      btGeneric6DofSpringConstraint.prototype.constructor = btGeneric6DofSpringConstraint;
      btGeneric6DofSpringConstraint.prototype.__class__ = btGeneric6DofSpringConstraint;
      btGeneric6DofSpringConstraint.__cache__ = {};
      Module["btGeneric6DofSpringConstraint"] = btGeneric6DofSpringConstraint;
      btGeneric6DofSpringConstraint.prototype["enableSpring"] = btGeneric6DofSpringConstraint.prototype.enableSpring = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint_enableSpring_2(self, arg0, arg1);
      };
      btGeneric6DofSpringConstraint.prototype["setStiffness"] = btGeneric6DofSpringConstraint.prototype.setStiffness = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint_setStiffness_2(self, arg0, arg1);
      };
      btGeneric6DofSpringConstraint.prototype["setDamping"] = btGeneric6DofSpringConstraint.prototype.setDamping = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint_setDamping_2(self, arg0, arg1);
      };
      btGeneric6DofSpringConstraint.prototype["setLinearLowerLimit"] = btGeneric6DofSpringConstraint.prototype.setLinearLowerLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint_setLinearLowerLimit_1(self, arg0);
      };
      btGeneric6DofSpringConstraint.prototype["setLinearUpperLimit"] = btGeneric6DofSpringConstraint.prototype.setLinearUpperLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint_setLinearUpperLimit_1(self, arg0);
      };
      btGeneric6DofSpringConstraint.prototype["setAngularLowerLimit"] = btGeneric6DofSpringConstraint.prototype.setAngularLowerLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint_setAngularLowerLimit_1(self, arg0);
      };
      btGeneric6DofSpringConstraint.prototype["setAngularUpperLimit"] = btGeneric6DofSpringConstraint.prototype.setAngularUpperLimit = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint_setAngularUpperLimit_1(self, arg0);
      };
      btGeneric6DofSpringConstraint.prototype["getRotationalLimitMotor"] = btGeneric6DofSpringConstraint.prototype.getRotationalLimitMotor = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        return wrapPointer(_emscripten_bind_btGeneric6DofSpringConstraint_getRotationalLimitMotor_1(self, arg0), btRotationalLimitMotor);
      };
      btGeneric6DofSpringConstraint.prototype["enableFeedback"] = btGeneric6DofSpringConstraint.prototype.enableFeedback = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint_enableFeedback_1(self, arg0);
      };
      btGeneric6DofSpringConstraint.prototype["getBreakingImpulseThreshold"] = btGeneric6DofSpringConstraint.prototype.getBreakingImpulseThreshold = function() {
        var self = this.ptr;
        return _emscripten_bind_btGeneric6DofSpringConstraint_getBreakingImpulseThreshold_0(self);
      };
      btGeneric6DofSpringConstraint.prototype["setBreakingImpulseThreshold"] = btGeneric6DofSpringConstraint.prototype.setBreakingImpulseThreshold = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint_setBreakingImpulseThreshold_1(self, arg0);
      };
      btGeneric6DofSpringConstraint.prototype["__destroy__"] = btGeneric6DofSpringConstraint.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btGeneric6DofSpringConstraint___destroy___0(self);
      };
      function btSphereShape(arg0) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        this.ptr = _emscripten_bind_btSphereShape_btSphereShape_1(arg0);
        getCache(btSphereShape)[this.ptr] = this;
      }
      btSphereShape.prototype = Object.create(btCollisionShape.prototype);
      btSphereShape.prototype.constructor = btSphereShape;
      btSphereShape.prototype.__class__ = btSphereShape;
      btSphereShape.__cache__ = {};
      Module["btSphereShape"] = btSphereShape;
      btSphereShape.prototype["setMargin"] = btSphereShape.prototype.setMargin = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSphereShape_setMargin_1(self, arg0);
      };
      btSphereShape.prototype["getMargin"] = btSphereShape.prototype.getMargin = function() {
        var self = this.ptr;
        return _emscripten_bind_btSphereShape_getMargin_0(self);
      };
      btSphereShape.prototype["setLocalScaling"] = btSphereShape.prototype.setLocalScaling = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_btSphereShape_setLocalScaling_1(self, arg0);
      };
      btSphereShape.prototype["calculateLocalInertia"] = btSphereShape.prototype.calculateLocalInertia = function(arg0, arg1) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        _emscripten_bind_btSphereShape_calculateLocalInertia_2(self, arg0, arg1);
      };
      btSphereShape.prototype["__destroy__"] = btSphereShape.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_btSphereShape___destroy___0(self);
      };
      function LocalConvexResult(arg0, arg1, arg2, arg3, arg4) {
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        if (arg1 && typeof arg1 === "object")
          arg1 = arg1.ptr;
        if (arg2 && typeof arg2 === "object")
          arg2 = arg2.ptr;
        if (arg3 && typeof arg3 === "object")
          arg3 = arg3.ptr;
        if (arg4 && typeof arg4 === "object")
          arg4 = arg4.ptr;
        this.ptr = _emscripten_bind_LocalConvexResult_LocalConvexResult_5(arg0, arg1, arg2, arg3, arg4);
        getCache(LocalConvexResult)[this.ptr] = this;
      }
      LocalConvexResult.prototype = Object.create(WrapperObject.prototype);
      LocalConvexResult.prototype.constructor = LocalConvexResult;
      LocalConvexResult.prototype.__class__ = LocalConvexResult;
      LocalConvexResult.__cache__ = {};
      Module["LocalConvexResult"] = LocalConvexResult;
      LocalConvexResult.prototype["get_m_hitCollisionObject"] = LocalConvexResult.prototype.get_m_hitCollisionObject = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitCollisionObject_0(self), btCollisionObject);
      };
      LocalConvexResult.prototype["set_m_hitCollisionObject"] = LocalConvexResult.prototype.set_m_hitCollisionObject = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_LocalConvexResult_set_m_hitCollisionObject_1(self, arg0);
      };
      LocalConvexResult.prototype["get_m_localShapeInfo"] = LocalConvexResult.prototype.get_m_localShapeInfo = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_localShapeInfo_0(self), LocalShapeInfo);
      };
      LocalConvexResult.prototype["set_m_localShapeInfo"] = LocalConvexResult.prototype.set_m_localShapeInfo = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_LocalConvexResult_set_m_localShapeInfo_1(self, arg0);
      };
      LocalConvexResult.prototype["get_m_hitNormalLocal"] = LocalConvexResult.prototype.get_m_hitNormalLocal = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitNormalLocal_0(self), btVector3);
      };
      LocalConvexResult.prototype["set_m_hitNormalLocal"] = LocalConvexResult.prototype.set_m_hitNormalLocal = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_LocalConvexResult_set_m_hitNormalLocal_1(self, arg0);
      };
      LocalConvexResult.prototype["get_m_hitPointLocal"] = LocalConvexResult.prototype.get_m_hitPointLocal = function() {
        var self = this.ptr;
        return wrapPointer(_emscripten_bind_LocalConvexResult_get_m_hitPointLocal_0(self), btVector3);
      };
      LocalConvexResult.prototype["set_m_hitPointLocal"] = LocalConvexResult.prototype.set_m_hitPointLocal = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_LocalConvexResult_set_m_hitPointLocal_1(self, arg0);
      };
      LocalConvexResult.prototype["get_m_hitFraction"] = LocalConvexResult.prototype.get_m_hitFraction = function() {
        var self = this.ptr;
        return _emscripten_bind_LocalConvexResult_get_m_hitFraction_0(self);
      };
      LocalConvexResult.prototype["set_m_hitFraction"] = LocalConvexResult.prototype.set_m_hitFraction = function(arg0) {
        var self = this.ptr;
        if (arg0 && typeof arg0 === "object")
          arg0 = arg0.ptr;
        _emscripten_bind_LocalConvexResult_set_m_hitFraction_1(self, arg0);
      };
      LocalConvexResult.prototype["__destroy__"] = LocalConvexResult.prototype.__destroy__ = function() {
        var self = this.ptr;
        _emscripten_bind_LocalConvexResult___destroy___0(self);
      };
      (function() {
        function setupEnums() {
          Module["PHY_FLOAT"] = _emscripten_enum_PHY_ScalarType_PHY_FLOAT();
          Module["PHY_DOUBLE"] = _emscripten_enum_PHY_ScalarType_PHY_DOUBLE();
          Module["PHY_INTEGER"] = _emscripten_enum_PHY_ScalarType_PHY_INTEGER();
          Module["PHY_SHORT"] = _emscripten_enum_PHY_ScalarType_PHY_SHORT();
          Module["PHY_FIXEDPOINT88"] = _emscripten_enum_PHY_ScalarType_PHY_FIXEDPOINT88();
          Module["PHY_UCHAR"] = _emscripten_enum_PHY_ScalarType_PHY_UCHAR();
        }
        if (Module["calledRun"])
          setupEnums();
        else
          addOnPreMain(setupEnums);
      })();
      this["Ammo"] = Module;
      return AmmoLib2;
    };
    module.exports = AmmoLib();
  }
});
export default require_ammo();
//# sourceMappingURL=ammonext.js.map
